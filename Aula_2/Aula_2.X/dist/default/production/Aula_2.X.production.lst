

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 28 11:18:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   116                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   117  0000                     
   118                           ; Version 2.10
   119                           ; Generated 31/07/2019 GMT
   120                           ; 
   121                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution.
   135                           ; 
   136                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   137                           ;        software without specific prior written permission.
   138                           ; 
   139                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   140                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   141                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   142                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   143                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   144                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   145                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   146                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   147                           ; 
   148                           ; 
   149                           ; Code-generator required, PIC18F46K80 Definitions
   150                           ; 
   151                           ; SFR Addresses
   152  0000                     
   153                           	psect	idataBANK1
   154  0061AA                     __pidataBANK1:
   155                           	opt callstack 0
   156                           
   157                           ;initializer for stoa@F1174
   158  0061AA  28                 	db	40
   159  0061AB  6E                 	db	110
   160  0061AC  75                 	db	117
   161  0061AD  6C                 	db	108
   162  0061AE  6C                 	db	108
   163  0061AF  29                 	db	41
   164  0061B0  00                 	db	0
   165                           
   166                           	psect	mediumconst
   167  00F192                     __pmediumconst:
   168                           	opt callstack 0
   169  00F192  00                 	db	0
   170  00F193                     _font:
   171                           	opt callstack 0
   172  00F193  0004               	dw	4
   173  00F195  0000               	dw	0
   174  00F197  0000               	dw	0
   175  00F199  0000               	dw	0
   176  00F19B  0000               	dw	0
   177  00F19D  0000               	dw	0
   178  00F19F  0000               	dw	0
   179  00F1A1  0000               	dw	0
   180  00F1A3  0000               	dw	0
   181  00F1A5  0003               	dw	3
   182  00F1A7  0000               	dw	0
   183  00F1A9  0000               	dw	0
   184  00F1AB  00FE               	dw	254
   185  00F1AD  001B               	dw	27
   186  00F1AF  0000               	dw	0
   187  00F1B1  0000               	dw	0
   188  00F1B3  0005               	dw	5
   189  00F1B5  001E               	dw	30
   190  00F1B7  0000               	dw	0
   191  00F1B9  0000               	dw	0
   192  00F1BB  0000               	dw	0
   193  00F1BD  0000               	dw	0
   194  00F1BF  0000               	dw	0
   195  00F1C1  001E               	dw	30
   196  00F1C3  0000               	dw	0
   197  00F1C5  0000               	dw	0
   198  00F1C7  0000               	dw	0
   199  00F1C9  000B               	dw	11
   200  00F1CB  0000               	dw	0
   201  00F1CD  0000               	dw	0
   202  00F1CF  0010               	dw	16
   203  00F1D1  0001               	dw	1
   204  00F1D3  0010               	dw	16
   205  00F1D5  001D               	dw	29
   206  00F1D7  00F0               	dw	240
   207  00F1D9  0003               	dw	3
   208  00F1DB  001E               	dw	30
   209  00F1DD  0001               	dw	1
   210  00F1DF  0010               	dw	16
   211  00F1E1  0001               	dw	1
   212  00F1E3  0010               	dw	16
   213  00F1E5  001D               	dw	29
   214  00F1E7  00F0               	dw	240
   215  00F1E9  0003               	dw	3
   216  00F1EB  001E               	dw	30
   217  00F1ED  0001               	dw	1
   218  00F1EF  0010               	dw	16
   219  00F1F1  0001               	dw	1
   220  00F1F3  0000               	dw	0
   221  00F1F5  0000               	dw	0
   222  00F1F7  0009               	dw	9
   223  00F1F9  0000               	dw	0
   224  00F1FB  0004               	dw	4
   225  00F1FD  001C               	dw	28
   226  00F1FF  0008               	dw	8
   227  00F201  0022               	dw	34
   228  00F203  0010               	dw	16
   229  00F205  0042               	dw	66
   230  00F207  0010               	dw	16
   231  00F209  00FF               	dw	255
   232  00F20B  007F               	dw	127
   233  00F20D  0042               	dw	66
   234  00F20F  0010               	dw	16
   235  00F211  0084               	dw	132
   236  00F213  0010               	dw	16
   237  00F215  0000               	dw	0
   238  00F217  000F               	dw	15
   239  00F219  0000               	dw	0
   240  00F21B  0000               	dw	0
   241  00F21D  000C               	dw	12
   242  00F21F  001C               	dw	28
   243  00F221  0000               	dw	0
   244  00F223  0022               	dw	34
   245  00F225  0010               	dw	16
   246  00F227  0022               	dw	34
   247  00F229  0008               	dw	8
   248  00F22B  0022               	dw	34
   249  00F22D  0006               	dw	6
   250  00F22F  001C               	dw	28
   251  00F231  0001               	dw	1
   252  00F233  00C0               	dw	192
   253  00F235  0000               	dw	0
   254  00F237  0020               	dw	32
   255  00F239  000E               	dw	14
   256  00F23B  0018               	dw	24
   257  00F23D  0011               	dw	17
   258  00F23F  0004               	dw	4
   259  00F241  0011               	dw	17
   260  00F243  0002               	dw	2
   261  00F245  0011               	dw	17
   262  00F247  0000               	dw	0
   263  00F249  000E               	dw	14
   264  00F24B  0000               	dw	0
   265  00F24D  0000               	dw	0
   266  00F24F  000B               	dw	11
   267  00F251  0000               	dw	0
   268  00F253  0000               	dw	0
   269  00F255  0000               	dw	0
   270  00F257  000E               	dw	14
   271  00F259  001C               	dw	28
   272  00F25B  0011               	dw	17
   273  00F25D  00A2               	dw	162
   274  00F25F  0010               	dw	16
   275  00F261  00C2               	dw	194
   276  00F263  0010               	dw	16
   277  00F265  0022               	dw	34
   278  00F267  0011               	dw	17
   279  00F269  001C               	dw	28
   280  00F26B  000A               	dw	10
   281  00F26D  0000               	dw	0
   282  00F26F  000C               	dw	12
   283  00F271  0000               	dw	0
   284  00F273  000C               	dw	12
   285  00F275  0000               	dw	0
   286  00F277  0012               	dw	18
   287  00F279  0000               	dw	0
   288  00F27B  0000               	dw	0
   289  00F27D  0003               	dw	3
   290  00F27F  0000               	dw	0
   291  00F281  0000               	dw	0
   292  00F283  001E               	dw	30
   293  00F285  0000               	dw	0
   294  00F287  0000               	dw	0
   295  00F289  0000               	dw	0
   296  00F28B  0006               	dw	6
   297  00F28D  0000               	dw	0
   298  00F28F  0000               	dw	0
   299  00F291  0000               	dw	0
   300  00F293  0000               	dw	0
   301  00F295  00E0               	dw	224
   302  00F297  001F               	dw	31
   303  00F299  001C               	dw	28
   304  00F29B  0060               	dw	96
   305  00F29D  0002               	dw	2
   306  00F29F  0080               	dw	128
   307  00F2A1  0000               	dw	0
   308  00F2A3  0000               	dw	0
   309  00F2A5  0004               	dw	4
   310  00F2A7  0000               	dw	0
   311  00F2A9  0000               	dw	0
   312  00F2AB  0006               	dw	6
   313  00F2AD  00C0               	dw	192
   314  00F2AF  00F8               	dw	248
   315  00F2B1  003F               	dw	63
   316  00F2B3  0000               	dw	0
   317  00F2B5  0000               	dw	0
   318  00F2B7  0006               	dw	6
   319  00F2B9  0024               	dw	36
   320  00F2BB  0000               	dw	0
   321  00F2BD  0018               	dw	24
   322  00F2BF  0000               	dw	0
   323  00F2C1  007E               	dw	126
   324  00F2C3  0000               	dw	0
   325  00F2C5  0018               	dw	24
   326  00F2C7  0000               	dw	0
   327  00F2C9  0024               	dw	36
   328  00F2CB  0000               	dw	0
   329  00F2CD  0000               	dw	0
   330  00F2CF  0000               	dw	0
   331  00F2D1  0009               	dw	9
   332  00F2D3  0000               	dw	0
   333  00F2D5  0000               	dw	0
   334  00F2D7  0080               	dw	128
   335  00F2D9  0000               	dw	0
   336  00F2DB  0080               	dw	128
   337  00F2DD  0000               	dw	0
   338  00F2DF  0080               	dw	128
   339  00F2E1  0000               	dw	0
   340  00F2E3  00F0               	dw	240
   341  00F2E5  0007               	dw	7
   342  00F2E7  0080               	dw	128
   343  00F2E9  0000               	dw	0
   344  00F2EB  0080               	dw	128
   345  00F2ED  0000               	dw	0
   346  00F2EF  0080               	dw	128
   347  00F2F1  0000               	dw	0
   348  00F2F3  0000               	dw	0
   349  00F2F5  0000               	dw	0
   350  00F2F7  0004               	dw	4
   351  00F2F9  0000               	dw	0
   352  00F2FB  0000               	dw	0
   353  00F2FD  0000               	dw	0
   354  00F2FF  0060               	dw	96
   355  00F301  0000               	dw	0
   356  00F303  0018               	dw	24
   357  00F305  0000               	dw	0
   358  00F307  0000               	dw	0
   359  00F309  0005               	dw	5
   360  00F30B  0000               	dw	0
   361  00F30D  0001               	dw	1
   362  00F30F  0000               	dw	0
   363  00F311  0001               	dw	1
   364  00F313  0000               	dw	0
   365  00F315  0001               	dw	1
   366  00F317  0000               	dw	0
   367  00F319  0001               	dw	1
   368  00F31B  0000               	dw	0
   369  00F31D  0000               	dw	0
   370  00F31F  0004               	dw	4
   371  00F321  0000               	dw	0
   372  00F323  0000               	dw	0
   373  00F325  0000               	dw	0
   374  00F327  0018               	dw	24
   375  00F329  0000               	dw	0
   376  00F32B  0018               	dw	24
   377  00F32D  0000               	dw	0
   378  00F32F  0000               	dw	0
   379  00F331  0008               	dw	8
   380  00F333  0000               	dw	0
   381  00F335  0000               	dw	0
   382  00F337  0000               	dw	0
   383  00F339  0040               	dw	64
   384  00F33B  0000               	dw	0
   385  00F33D  0038               	dw	56
   386  00F33F  0000               	dw	0
   387  00F341  0007               	dw	7
   388  00F343  00E0               	dw	224
   389  00F345  0000               	dw	0
   390  00F347  001C               	dw	28
   391  00F349  0000               	dw	0
   392  00F34B  0002               	dw	2
   393  00F34D  0000               	dw	0
   394  00F34F  0000               	dw	0
   395  00F351  0000               	dw	0
   396  00F353  0009               	dw	9
   397  00F355  00F8               	dw	248
   398  00F357  0007               	dw	7
   399  00F359  0004               	dw	4
   400  00F35B  0008               	dw	8
   401  00F35D  0002               	dw	2
   402  00F35F  0010               	dw	16
   403  00F361  0002               	dw	2
   404  00F363  0010               	dw	16
   405  00F365  0002               	dw	2
   406  00F367  0010               	dw	16
   407  00F369  0002               	dw	2
   408  00F36B  0010               	dw	16
   409  00F36D  0004               	dw	4
   410  00F36F  0008               	dw	8
   411  00F371  00F8               	dw	248
   412  00F373  0007               	dw	7
   413  00F375  0000               	dw	0
   414  00F377  0000               	dw	0
   415  00F379  0006               	dw	6
   416  00F37B  0000               	dw	0
   417  00F37D  0000               	dw	0
   418  00F37F  0000               	dw	0
   419  00F381  0000               	dw	0
   420  00F383  0002               	dw	2
   421  00F385  0000               	dw	0
   422  00F387  0002               	dw	2
   423  00F389  0000               	dw	0
   424  00F38B  00FE               	dw	254
   425  00F38D  001F               	dw	31
   426  00F38F  0000               	dw	0
   427  00F391  0000               	dw	0
   428  00F393  0009               	dw	9
   429  00F395  0018               	dw	24
   430  00F397  0010               	dw	16
   431  00F399  0004               	dw	4
   432  00F39B  0018               	dw	24
   433  00F39D  0002               	dw	2
   434  00F39F  0014               	dw	20
   435  00F3A1  0002               	dw	2
   436  00F3A3  0012               	dw	18
   437  00F3A5  0002               	dw	2
   438  00F3A7  0011               	dw	17
   439  00F3A9  0082               	dw	130
   440  00F3AB  0010               	dw	16
   441  00F3AD  0044               	dw	68
   442  00F3AF  0010               	dw	16
   443  00F3B1  0038               	dw	56
   444  00F3B3  0010               	dw	16
   445  00F3B5  0000               	dw	0
   446  00F3B7  0000               	dw	0
   447  00F3B9  0009               	dw	9
   448  00F3BB  0008               	dw	8
   449  00F3BD  000C               	dw	12
   450  00F3BF  0004               	dw	4
   451  00F3C1  0010               	dw	16
   452  00F3C3  0002               	dw	2
   453  00F3C5  0010               	dw	16
   454  00F3C7  0042               	dw	66
   455  00F3C9  0010               	dw	16
   456  00F3CB  0042               	dw	66
   457  00F3CD  0010               	dw	16
   458  00F3CF  0044               	dw	68
   459  00F3D1  0010               	dw	16
   460  00F3D3  00B8               	dw	184
   461  00F3D5  0008               	dw	8
   462  00F3D7  0000               	dw	0
   463  00F3D9  0007               	dw	7
   464  00F3DB  0000               	dw	0
   465  00F3DD  0000               	dw	0
   466  00F3DF  0009               	dw	9
   467  00F3E1  0000               	dw	0
   468  00F3E3  0002               	dw	2
   469  00F3E5  0000               	dw	0
   470  00F3E7  0003               	dw	3
   471  00F3E9  0080               	dw	128
   472  00F3EB  0002               	dw	2
   473  00F3ED  0060               	dw	96
   474  00F3EF  0002               	dw	2
   475  00F3F1  0010               	dw	16
   476  00F3F3  0002               	dw	2
   477  00F3F5  0008               	dw	8
   478  00F3F7  0002               	dw	2
   479  00F3F9  00FE               	dw	254
   480  00F3FB  001F               	dw	31
   481  00F3FD  0000               	dw	0
   482  00F3FF  0002               	dw	2
   483  00F401  0000               	dw	0
   484  00F403  0000               	dw	0
   485  00F405  0009               	dw	9
   486  00F407  0000               	dw	0
   487  00F409  0004               	dw	4
   488  00F40B  0070               	dw	112
   489  00F40D  0008               	dw	8
   490  00F40F  002E               	dw	46
   491  00F411  0010               	dw	16
   492  00F413  0022               	dw	34
   493  00F415  0010               	dw	16
   494  00F417  0022               	dw	34
   495  00F419  0010               	dw	16
   496  00F41B  0022               	dw	34
   497  00F41D  0010               	dw	16
   498  00F41F  0042               	dw	66
   499  00F421  0008               	dw	8
   500  00F423  0082               	dw	130
   501  00F425  0007               	dw	7
   502  00F427  0000               	dw	0
   503  00F429  0000               	dw	0
   504  00F42B  0009               	dw	9
   505  00F42D  0000               	dw	0
   506  00F42F  0000               	dw	0
   507  00F431  0000               	dw	0
   508  00F433  0007               	dw	7
   509  00F435  00C0               	dw	192
   510  00F437  0008               	dw	8
   511  00F439  0060               	dw	96
   512  00F43B  0010               	dw	16
   513  00F43D  0058               	dw	88
   514  00F43F  0010               	dw	16
   515  00F441  0044               	dw	68
   516  00F443  0010               	dw	16
   517  00F445  0082               	dw	130
   518  00F447  0008               	dw	8
   519  00F449  0000               	dw	0
   520  00F44B  0007               	dw	7
   521  00F44D  0000               	dw	0
   522  00F44F  0000               	dw	0
   523  00F451  0009               	dw	9
   524  00F453  0000               	dw	0
   525  00F455  0000               	dw	0
   526  00F457  0002               	dw	2
   527  00F459  0010               	dw	16
   528  00F45B  0002               	dw	2
   529  00F45D  000C               	dw	12
   530  00F45F  0002               	dw	2
   531  00F461  0003               	dw	3
   532  00F463  00C2               	dw	194
   533  00F465  0000               	dw	0
   534  00F467  0032               	dw	50
   535  00F469  0000               	dw	0
   536  00F46B  000E               	dw	14
   537  00F46D  0000               	dw	0
   538  00F46F  0002               	dw	2
   539  00F471  0000               	dw	0
   540  00F473  0000               	dw	0
   541  00F475  0000               	dw	0
   542  00F477  0009               	dw	9
   543  00F479  0000               	dw	0
   544  00F47B  0007               	dw	7
   545  00F47D  0098               	dw	152
   546  00F47F  0008               	dw	8
   547  00F481  0064               	dw	100
   548  00F483  0010               	dw	16
   549  00F485  0042               	dw	66
   550  00F487  0010               	dw	16
   551  00F489  0042               	dw	66
   552  00F48B  0010               	dw	16
   553  00F48D  0064               	dw	100
   554  00F48F  0010               	dw	16
   555  00F491  0098               	dw	152
   556  00F493  0008               	dw	8
   557  00F495  0000               	dw	0
   558  00F497  0007               	dw	7
   559  00F499  0000               	dw	0
   560  00F49B  0000               	dw	0
   561  00F49D  0009               	dw	9
   562  00F49F  0000               	dw	0
   563  00F4A1  0000               	dw	0
   564  00F4A3  0038               	dw	56
   565  00F4A5  0000               	dw	0
   566  00F4A7  0044               	dw	68
   567  00F4A9  0010               	dw	16
   568  00F4AB  0082               	dw	130
   569  00F4AD  0008               	dw	8
   570  00F4AF  0082               	dw	130
   571  00F4B1  0004               	dw	4
   572  00F4B3  0082               	dw	130
   573  00F4B5  0003               	dw	3
   574  00F4B7  0084               	dw	132
   575  00F4B9  0000               	dw	0
   576  00F4BB  0078               	dw	120
   577  00F4BD  0000               	dw	0
   578  00F4BF  0000               	dw	0
   579  00F4C1  0000               	dw	0
   580  00F4C3  0004               	dw	4
   581  00F4C5  0000               	dw	0
   582  00F4C7  0000               	dw	0
   583  00F4C9  0030               	dw	48
   584  00F4CB  0018               	dw	24
   585  00F4CD  0030               	dw	48
   586  00F4CF  0018               	dw	24
   587  00F4D1  0000               	dw	0
   588  00F4D3  0000               	dw	0
   589  00F4D5  0004               	dw	4
   590  00F4D7  0000               	dw	0
   591  00F4D9  0000               	dw	0
   592  00F4DB  0030               	dw	48
   593  00F4DD  0060               	dw	96
   594  00F4DF  0030               	dw	48
   595  00F4E1  0018               	dw	24
   596  00F4E3  0000               	dw	0
   597  00F4E5  0000               	dw	0
   598  00F4E7  000A               	dw	10
   599  00F4E9  0000               	dw	0
   600  00F4EB  0000               	dw	0
   601  00F4ED  0080               	dw	128
   602  00F4EF  0000               	dw	0
   603  00F4F1  0080               	dw	128
   604  00F4F3  0000               	dw	0
   605  00F4F5  0040               	dw	64
   606  00F4F7  0001               	dw	1
   607  00F4F9  0020               	dw	32
   608  00F4FB  0002               	dw	2
   609  00F4FD  0020               	dw	32
   610  00F4FF  0002               	dw	2
   611  00F501  0010               	dw	16
   612  00F503  0004               	dw	4
   613  00F505  0010               	dw	16
   614  00F507  0004               	dw	4
   615  00F509  0008               	dw	8
   616  00F50B  0008               	dw	8
   617  00F50D  0000               	dw	0
   618  00F50F  0000               	dw	0
   619  00F511  000A               	dw	10
   620  00F513  0000               	dw	0
   621  00F515  0000               	dw	0
   622  00F517  0020               	dw	32
   623  00F519  0001               	dw	1
   624  00F51B  0020               	dw	32
   625  00F51D  0001               	dw	1
   626  00F51F  0020               	dw	32
   627  00F521  0001               	dw	1
   628  00F523  0020               	dw	32
   629  00F525  0001               	dw	1
   630  00F527  0020               	dw	32
   631  00F529  0001               	dw	1
   632  00F52B  0020               	dw	32
   633  00F52D  0001               	dw	1
   634  00F52F  0020               	dw	32
   635  00F531  0001               	dw	1
   636  00F533  0020               	dw	32
   637  00F535  0001               	dw	1
   638  00F537  0000               	dw	0
   639  00F539  0000               	dw	0
   640  00F53B  000A               	dw	10
   641  00F53D  0000               	dw	0
   642  00F53F  0000               	dw	0
   643  00F541  0008               	dw	8
   644  00F543  0008               	dw	8
   645  00F545  0010               	dw	16
   646  00F547  0004               	dw	4
   647  00F549  0010               	dw	16
   648  00F54B  0004               	dw	4
   649  00F54D  0020               	dw	32
   650  00F54F  0002               	dw	2
   651  00F551  0020               	dw	32
   652  00F553  0002               	dw	2
   653  00F555  0040               	dw	64
   654  00F557  0001               	dw	1
   655  00F559  0080               	dw	128
   656  00F55B  0000               	dw	0
   657  00F55D  0080               	dw	128
   658  00F55F  0000               	dw	0
   659  00F561  0000               	dw	0
   660  00F563  0000               	dw	0
   661  00F565  0008               	dw	8
   662  00F567  0000               	dw	0
   663  00F569  0000               	dw	0
   664  00F56B  000C               	dw	12
   665  00F56D  0000               	dw	0
   666  00F56F  0082               	dw	130
   667  00F571  0001               	dw	1
   668  00F573  0042               	dw	66
   669  00F575  0002               	dw	2
   670  00F577  0022               	dw	34
   671  00F579  001A               	dw	26
   672  00F57B  0022               	dw	34
   673  00F57D  001A               	dw	26
   674  00F57F  009C               	dw	156
   675  00F581  0001               	dw	1
   676  00F583  0000               	dw	0
   677  00F585  0000               	dw	0
   678  00F587  000E               	dw	14
   679  00F589  0000               	dw	0
   680  00F58B  0000               	dw	0
   681  00F58D  00F0               	dw	240
   682  00F58F  0003               	dw	3
   683  00F591  0008               	dw	8
   684  00F593  0004               	dw	4
   685  00F595  0004               	dw	4
   686  00F597  0008               	dw	8
   687  00F599  00C2               	dw	194
   688  00F59B  0011               	dw	17
   689  00F59D  0022               	dw	34
   690  00F59F  0012               	dw	18
   691  00F5A1  0012               	dw	18
   692  00F5A3  0012               	dw	18
   693  00F5A5  0012               	dw	18
   694  00F5A7  0012               	dw	18
   695  00F5A9  00E2               	dw	226
   696  00F5AB  0011               	dw	17
   697  00F5AD  0012               	dw	18
   698  00F5AF  0012               	dw	18
   699  00F5B1  0004               	dw	4
   700  00F5B3  0012               	dw	18
   701  00F5B5  0008               	dw	8
   702  00F5B7  0009               	dw	9
   703  00F5B9  00F0               	dw	240
   704  00F5BB  0004               	dw	4
   705  00F5BD  0000               	dw	0
   706  00F5BF  0000               	dw	0
   707  00F5C1  000D               	dw	13
   708  00F5C3  0000               	dw	0
   709  00F5C5  0000               	dw	0
   710  00F5C7  0000               	dw	0
   711  00F5C9  0010               	dw	16
   712  00F5CB  0000               	dw	0
   713  00F5CD  000E               	dw	14
   714  00F5CF  0080               	dw	128
   715  00F5D1  0001               	dw	1
   716  00F5D3  0060               	dw	96
   717  00F5D5  0001               	dw	1
   718  00F5D7  001C               	dw	28
   719  00F5D9  0001               	dw	1
   720  00F5DB  0002               	dw	2
   721  00F5DD  0001               	dw	1
   722  00F5DF  001C               	dw	28
   723  00F5E1  0001               	dw	1
   724  00F5E3  0060               	dw	96
   725  00F5E5  0001               	dw	1
   726  00F5E7  0080               	dw	128
   727  00F5E9  0001               	dw	1
   728  00F5EB  0000               	dw	0
   729  00F5ED  000E               	dw	14
   730  00F5EF  0000               	dw	0
   731  00F5F1  0010               	dw	16
   732  00F5F3  0000               	dw	0
   733  00F5F5  0000               	dw	0
   734  00F5F7  0009               	dw	9
   735  00F5F9  0000               	dw	0
   736  00F5FB  0000               	dw	0
   737  00F5FD  0000               	dw	0
   738  00F5FF  0000               	dw	0
   739  00F601  00FE               	dw	254
   740  00F603  001F               	dw	31
   741  00F605  0042               	dw	66
   742  00F607  0010               	dw	16
   743  00F609  0042               	dw	66
   744  00F60B  0010               	dw	16
   745  00F60D  0064               	dw	100
   746  00F60F  0010               	dw	16
   747  00F611  0098               	dw	152
   748  00F613  0008               	dw	8
   749  00F615  0000               	dw	0
   750  00F617  0007               	dw	7
   751  00F619  0000               	dw	0
   752  00F61B  0000               	dw	0
   753  00F61D  000D               	dw	13
   754  00F61F  0000               	dw	0
   755  00F621  0000               	dw	0
   756  00F623  00F0               	dw	240
   757  00F625  0003               	dw	3
   758  00F627  0008               	dw	8
   759  00F629  0004               	dw	4
   760  00F62B  0004               	dw	4
   761  00F62D  0008               	dw	8
   762  00F62F  0002               	dw	2
   763  00F631  0010               	dw	16
   764  00F633  0002               	dw	2
   765  00F635  0010               	dw	16
   766  00F637  0002               	dw	2
   767  00F639  0010               	dw	16
   768  00F63B  0002               	dw	2
   769  00F63D  0010               	dw	16
   770  00F63F  0002               	dw	2
   771  00F641  0010               	dw	16
   772  00F643  0004               	dw	4
   773  00F645  0008               	dw	8
   774  00F647  0004               	dw	4
   775  00F649  0008               	dw	8
   776  00F64B  0008               	dw	8
   777  00F64D  0004               	dw	4
   778  00F64F  0000               	dw	0
   779  00F651  0000               	dw	0
   780  00F653  000C               	dw	12
   781  00F655  0000               	dw	0
   782  00F657  0000               	dw	0
   783  00F659  0000               	dw	0
   784  00F65B  0000               	dw	0
   785  00F65D  00FE               	dw	254
   786  00F65F  001F               	dw	31
   787  00F661  0002               	dw	2
   788  00F663  0010               	dw	16
   789  00F665  0002               	dw	2
   790  00F667  0010               	dw	16
   791  00F669  0002               	dw	2
   792  00F66B  0010               	dw	16
   793  00F66D  0002               	dw	2
   794  00F66F  0010               	dw	16
   795  00F671  0002               	dw	2
   796  00F673  0010               	dw	16
   797  00F675  0004               	dw	4
   798  00F677  0008               	dw	8
   799  00F679  0008               	dw	8
   800  00F67B  0004               	dw	4
   801  00F67D  00F0               	dw	240
   802  00F67F  0003               	dw	3
   803  00F681  0000               	dw	0
   804  00F683  0000               	dw	0
   805  00F685  0009               	dw	9
   806  00F687  0000               	dw	0
   807  00F689  0000               	dw	0
   808  00F68B  0000               	dw	0
   809  00F68D  0000               	dw	0
   810  00F68F  00FE               	dw	254
   811  00F691  001F               	dw	31
   812  00F693  0042               	dw	66
   813  00F695  0010               	dw	16
   814  00F697  0042               	dw	66
   815  00F699  0010               	dw	16
   816  00F69B  0042               	dw	66
   817  00F69D  0010               	dw	16
   818  00F69F  0042               	dw	66
   819  00F6A1  0010               	dw	16
   820  00F6A3  0042               	dw	66
   821  00F6A5  0010               	dw	16
   822  00F6A7  0000               	dw	0
   823  00F6A9  0000               	dw	0
   824  00F6AB  0008               	dw	8
   825  00F6AD  0000               	dw	0
   826  00F6AF  0000               	dw	0
   827  00F6B1  0000               	dw	0
   828  00F6B3  0000               	dw	0
   829  00F6B5  00FE               	dw	254
   830  00F6B7  001F               	dw	31
   831  00F6B9  0042               	dw	66
   832  00F6BB  0000               	dw	0
   833  00F6BD  0042               	dw	66
   834  00F6BF  0000               	dw	0
   835  00F6C1  0042               	dw	66
   836  00F6C3  0000               	dw	0
   837  00F6C5  0042               	dw	66
   838  00F6C7  0000               	dw	0
   839  00F6C9  0000               	dw	0
   840  00F6CB  0000               	dw	0
   841  00F6CD  000E               	dw	14
   842  00F6CF  0000               	dw	0
   843  00F6D1  0000               	dw	0
   844  00F6D3  00F0               	dw	240
   845  00F6D5  0003               	dw	3
   846  00F6D7  0008               	dw	8
   847  00F6D9  0004               	dw	4
   848  00F6DB  0004               	dw	4
   849  00F6DD  0008               	dw	8
   850  00F6DF  0002               	dw	2
   851  00F6E1  0010               	dw	16
   852  00F6E3  0002               	dw	2
   853  00F6E5  0010               	dw	16
   854  00F6E7  0002               	dw	2
   855  00F6E9  0010               	dw	16
   856  00F6EB  0002               	dw	2
   857  00F6ED  0010               	dw	16
   858  00F6EF  0082               	dw	130
   859  00F6F1  0010               	dw	16
   860  00F6F3  0084               	dw	132
   861  00F6F5  0010               	dw	16
   862  00F6F7  0084               	dw	132
   863  00F6F9  0008               	dw	8
   864  00F6FB  0088               	dw	136
   865  00F6FD  0004               	dw	4
   866  00F6FF  0080               	dw	128
   867  00F701  0003               	dw	3
   868  00F703  0000               	dw	0
   869  00F705  0000               	dw	0
   870  00F707  000A               	dw	10
   871  00F709  0000               	dw	0
   872  00F70B  0000               	dw	0
   873  00F70D  0000               	dw	0
   874  00F70F  0000               	dw	0
   875  00F711  00FE               	dw	254
   876  00F713  001F               	dw	31
   877  00F715  0040               	dw	64
   878  00F717  0000               	dw	0
   879  00F719  0040               	dw	64
   880  00F71B  0000               	dw	0
   881  00F71D  0040               	dw	64
   882  00F71F  0000               	dw	0
   883  00F721  0040               	dw	64
   884  00F723  0000               	dw	0
   885  00F725  0040               	dw	64
   886  00F727  0000               	dw	0
   887  00F729  00FE               	dw	254
   888  00F72B  001F               	dw	31
   889  00F72D  0000               	dw	0
   890  00F72F  0000               	dw	0
   891  00F731  0004               	dw	4
   892  00F733  0000               	dw	0
   893  00F735  0000               	dw	0
   894  00F737  0000               	dw	0
   895  00F739  0000               	dw	0
   896  00F73B  00FE               	dw	254
   897  00F73D  001F               	dw	31
   898  00F73F  0000               	dw	0
   899  00F741  0000               	dw	0
   900  00F743  0007               	dw	7
   901  00F745  0000               	dw	0
   902  00F747  0000               	dw	0
   903  00F749  0000               	dw	0
   904  00F74B  0008               	dw	8
   905  00F74D  0000               	dw	0
   906  00F74F  0010               	dw	16
   907  00F751  0000               	dw	0
   908  00F753  0010               	dw	16
   909  00F755  0000               	dw	0
   910  00F757  0008               	dw	8
   911  00F759  00FE               	dw	254
   912  00F75B  0007               	dw	7
   913  00F75D  0000               	dw	0
   914  00F75F  0000               	dw	0
   915  00F761  0009               	dw	9
   916  00F763  0000               	dw	0
   917  00F765  0000               	dw	0
   918  00F767  0000               	dw	0
   919  00F769  0000               	dw	0
   920  00F76B  00FE               	dw	254
   921  00F76D  001F               	dw	31
   922  00F76F  0060               	dw	96
   923  00F771  0000               	dw	0
   924  00F773  0090               	dw	144
   925  00F775  0001               	dw	1
   926  00F777  0008               	dw	8
   927  00F779  0002               	dw	2
   928  00F77B  0004               	dw	4
   929  00F77D  000C               	dw	12
   930  00F77F  0002               	dw	2
   931  00F781  0010               	dw	16
   932  00F783  0000               	dw	0
   933  00F785  0000               	dw	0
   934  00F787  0008               	dw	8
   935  00F789  0000               	dw	0
   936  00F78B  0000               	dw	0
   937  00F78D  0000               	dw	0
   938  00F78F  0000               	dw	0
   939  00F791  00FE               	dw	254
   940  00F793  001F               	dw	31
   941  00F795  0000               	dw	0
   942  00F797  0010               	dw	16
   943  00F799  0000               	dw	0
   944  00F79B  0010               	dw	16
   945  00F79D  0000               	dw	0
   946  00F79F  0010               	dw	16
   947  00F7A1  0000               	dw	0
   948  00F7A3  0010               	dw	16
   949  00F7A5  0000               	dw	0
   950  00F7A7  0000               	dw	0
   951  00F7A9  000F               	dw	15
   952  00F7AB  0000               	dw	0
   953  00F7AD  0000               	dw	0
   954  00F7AF  0000               	dw	0
   955  00F7B1  001C               	dw	28
   956  00F7B3  00F8               	dw	248
   957  00F7B5  0003               	dw	3
   958  00F7B7  0006               	dw	6
   959  00F7B9  0000               	dw	0
   960  00F7BB  0038               	dw	56
   961  00F7BD  0000               	dw	0
   962  00F7BF  00C0               	dw	192
   963  00F7C1  0001               	dw	1
   964  00F7C3  0000               	dw	0
   965  00F7C5  000E               	dw	14
   966  00F7C7  0000               	dw	0
   967  00F7C9  0010               	dw	16
   968  00F7CB  0000               	dw	0
   969  00F7CD  000E               	dw	14
   970  00F7CF  00C0               	dw	192
   971  00F7D1  0001               	dw	1
   972  00F7D3  0038               	dw	56
   973  00F7D5  0000               	dw	0
   974  00F7D7  0006               	dw	6
   975  00F7D9  0000               	dw	0
   976  00F7DB  00F8               	dw	248
   977  00F7DD  0003               	dw	3
   978  00F7DF  0000               	dw	0
   979  00F7E1  001C               	dw	28
   980  00F7E3  0000               	dw	0
   981  00F7E5  0000               	dw	0
   982  00F7E7  000B               	dw	11
   983  00F7E9  0000               	dw	0
   984  00F7EB  0000               	dw	0
   985  00F7ED  0000               	dw	0
   986  00F7EF  0000               	dw	0
   987  00F7F1  00FE               	dw	254
   988  00F7F3  001F               	dw	31
   989  00F7F5  0008               	dw	8
   990  00F7F7  0000               	dw	0
   991  00F7F9  0030               	dw	48
   992  00F7FB  0000               	dw	0
   993  00F7FD  0040               	dw	64
   994  00F7FF  0000               	dw	0
   995  00F801  0080               	dw	128
   996  00F803  0000               	dw	0
   997  00F805  0000               	dw	0
   998  00F807  0003               	dw	3
   999  00F809  0000               	dw	0
  1000  00F80B  0004               	dw	4
  1001  00F80D  00FE               	dw	254
  1002  00F80F  001F               	dw	31
  1003  00F811  0000               	dw	0
  1004  00F813  0000               	dw	0
  1005  00F815  000E               	dw	14
  1006  00F817  0000               	dw	0
  1007  00F819  0000               	dw	0
  1008  00F81B  00F0               	dw	240
  1009  00F81D  0003               	dw	3
  1010  00F81F  0008               	dw	8
  1011  00F821  0004               	dw	4
  1012  00F823  0004               	dw	4
  1013  00F825  0008               	dw	8
  1014  00F827  0002               	dw	2
  1015  00F829  0010               	dw	16
  1016  00F82B  0002               	dw	2
  1017  00F82D  0010               	dw	16
  1018  00F82F  0002               	dw	2
  1019  00F831  0010               	dw	16
  1020  00F833  0002               	dw	2
  1021  00F835  0010               	dw	16
  1022  00F837  0002               	dw	2
  1023  00F839  0010               	dw	16
  1024  00F83B  0002               	dw	2
  1025  00F83D  0010               	dw	16
  1026  00F83F  0004               	dw	4
  1027  00F841  0008               	dw	8
  1028  00F843  0008               	dw	8
  1029  00F845  0004               	dw	4
  1030  00F847  00F0               	dw	240
  1031  00F849  0003               	dw	3
  1032  00F84B  0000               	dw	0
  1033  00F84D  0000               	dw	0
  1034  00F84F  0009               	dw	9
  1035  00F851  0000               	dw	0
  1036  00F853  0000               	dw	0
  1037  00F855  0000               	dw	0
  1038  00F857  0000               	dw	0
  1039  00F859  00FE               	dw	254
  1040  00F85B  001F               	dw	31
  1041  00F85D  0042               	dw	66
  1042  00F85F  0000               	dw	0
  1043  00F861  0042               	dw	66
  1044  00F863  0000               	dw	0
  1045  00F865  0042               	dw	66
  1046  00F867  0000               	dw	0
  1047  00F869  0024               	dw	36
  1048  00F86B  0000               	dw	0
  1049  00F86D  0018               	dw	24
  1050  00F86F  0000               	dw	0
  1051  00F871  0000               	dw	0
  1052  00F873  0000               	dw	0
  1053  00F875  000E               	dw	14
  1054  00F877  0000               	dw	0
  1055  00F879  0000               	dw	0
  1056  00F87B  00F0               	dw	240
  1057  00F87D  0003               	dw	3
  1058  00F87F  0008               	dw	8
  1059  00F881  0004               	dw	4
  1060  00F883  0004               	dw	4
  1061  00F885  0008               	dw	8
  1062  00F887  0002               	dw	2
  1063  00F889  0010               	dw	16
  1064  00F88B  0002               	dw	2
  1065  00F88D  0010               	dw	16
  1066  00F88F  0002               	dw	2
  1067  00F891  0010               	dw	16
  1068  00F893  0002               	dw	2
  1069  00F895  0011               	dw	17
  1070  00F897  0002               	dw	2
  1071  00F899  0012               	dw	18
  1072  00F89B  0002               	dw	2
  1073  00F89D  000C               	dw	12
  1074  00F89F  0004               	dw	4
  1075  00F8A1  0008               	dw	8
  1076  00F8A3  0008               	dw	8
  1077  00F8A5  0016               	dw	22
  1078  00F8A7  00F0               	dw	240
  1079  00F8A9  0021               	dw	33
  1080  00F8AB  0000               	dw	0
  1081  00F8AD  0000               	dw	0
  1082  00F8AF  000A               	dw	10
  1083  00F8B1  0000               	dw	0
  1084  00F8B3  0000               	dw	0
  1085  00F8B5  0000               	dw	0
  1086  00F8B7  0000               	dw	0
  1087  00F8B9  00FE               	dw	254
  1088  00F8BB  001F               	dw	31
  1089  00F8BD  0042               	dw	66
  1090  00F8BF  0000               	dw	0
  1091  00F8C1  00C2               	dw	194
  1092  00F8C3  0000               	dw	0
  1093  00F8C5  0042               	dw	66
  1094  00F8C7  0001               	dw	1
  1095  00F8C9  0042               	dw	66
  1096  00F8CB  0006               	dw	6
  1097  00F8CD  0024               	dw	36
  1098  00F8CF  0008               	dw	8
  1099  00F8D1  0018               	dw	24
  1100  00F8D3  0010               	dw	16
  1101  00F8D5  0000               	dw	0
  1102  00F8D7  0000               	dw	0
  1103  00F8D9  0008               	dw	8
  1104  00F8DB  0000               	dw	0
  1105  00F8DD  0004               	dw	4
  1106  00F8DF  0018               	dw	24
  1107  00F8E1  0008               	dw	8
  1108  00F8E3  0024               	dw	36
  1109  00F8E5  0010               	dw	16
  1110  00F8E7  0042               	dw	66
  1111  00F8E9  0010               	dw	16
  1112  00F8EB  0042               	dw	66
  1113  00F8ED  0010               	dw	16
  1114  00F8EF  0084               	dw	132
  1115  00F8F1  0008               	dw	8
  1116  00F8F3  0008               	dw	8
  1117  00F8F5  0007               	dw	7
  1118  00F8F7  0000               	dw	0
  1119  00F8F9  0000               	dw	0
  1120  00F8FB  0008               	dw	8
  1121  00F8FD  0002               	dw	2
  1122  00F8FF  0000               	dw	0
  1123  00F901  0002               	dw	2
  1124  00F903  0000               	dw	0
  1125  00F905  0002               	dw	2
  1126  00F907  0000               	dw	0
  1127  00F909  00FE               	dw	254
  1128  00F90B  001F               	dw	31
  1129  00F90D  0002               	dw	2
  1130  00F90F  0000               	dw	0
  1131  00F911  0002               	dw	2
  1132  00F913  0000               	dw	0
  1133  00F915  0002               	dw	2
  1134  00F917  0000               	dw	0
  1135  00F919  0000               	dw	0
  1136  00F91B  0000               	dw	0
  1137  00F91D  000A               	dw	10
  1138  00F91F  0000               	dw	0
  1139  00F921  0000               	dw	0
  1140  00F923  0000               	dw	0
  1141  00F925  0000               	dw	0
  1142  00F927  00FE               	dw	254
  1143  00F929  0007               	dw	7
  1144  00F92B  0000               	dw	0
  1145  00F92D  0008               	dw	8
  1146  00F92F  0000               	dw	0
  1147  00F931  0010               	dw	16
  1148  00F933  0000               	dw	0
  1149  00F935  0010               	dw	16
  1150  00F937  0000               	dw	0
  1151  00F939  0010               	dw	16
  1152  00F93B  0000               	dw	0
  1153  00F93D  0008               	dw	8
  1154  00F93F  00FE               	dw	254
  1155  00F941  0007               	dw	7
  1156  00F943  0000               	dw	0
  1157  00F945  0000               	dw	0
  1158  00F947  000C               	dw	12
  1159  00F949  0002               	dw	2
  1160  00F94B  0000               	dw	0
  1161  00F94D  001C               	dw	28
  1162  00F94F  0000               	dw	0
  1163  00F951  0060               	dw	96
  1164  00F953  0000               	dw	0
  1165  00F955  0080               	dw	128
  1166  00F957  0001               	dw	1
  1167  00F959  0000               	dw	0
  1168  00F95B  000E               	dw	14
  1169  00F95D  0000               	dw	0
  1170  00F95F  0010               	dw	16
  1171  00F961  0000               	dw	0
  1172  00F963  000E               	dw	14
  1173  00F965  0080               	dw	128
  1174  00F967  0001               	dw	1
  1175  00F969  0060               	dw	96
  1176  00F96B  0000               	dw	0
  1177  00F96D  001C               	dw	28
  1178  00F96F  0000               	dw	0
  1179  00F971  0002               	dw	2
  1180  00F973  0000               	dw	0
  1181  00F975  0000               	dw	0
  1182  00F977  0000               	dw	0
  1183  00F979  000F               	dw	15
  1184  00F97B  0000               	dw	0
  1185  00F97D  0000               	dw	0
  1186  00F97F  0006               	dw	6
  1187  00F981  0000               	dw	0
  1188  00F983  0078               	dw	120
  1189  00F985  0000               	dw	0
  1190  00F987  0080               	dw	128
  1191  00F989  0007               	dw	7
  1192  00F98B  0000               	dw	0
  1193  00F98D  0018               	dw	24
  1194  00F98F  0080               	dw	128
  1195  00F991  0007               	dw	7
  1196  00F993  0078               	dw	120
  1197  00F995  0000               	dw	0
  1198  00F997  0006               	dw	6
  1199  00F999  0000               	dw	0
  1200  00F99B  0078               	dw	120
  1201  00F99D  0000               	dw	0
  1202  00F99F  0080               	dw	128
  1203  00F9A1  0007               	dw	7
  1204  00F9A3  0000               	dw	0
  1205  00F9A5  0018               	dw	24
  1206  00F9A7  0080               	dw	128
  1207  00F9A9  0007               	dw	7
  1208  00F9AB  0078               	dw	120
  1209  00F9AD  0000               	dw	0
  1210  00F9AF  0006               	dw	6
  1211  00F9B1  0000               	dw	0
  1212  00F9B3  0000               	dw	0
  1213  00F9B5  0000               	dw	0
  1214  00F9B7  0009               	dw	9
  1215  00F9B9  0000               	dw	0
  1216  00F9BB  0000               	dw	0
  1217  00F9BD  0006               	dw	6
  1218  00F9BF  0018               	dw	24
  1219  00F9C1  0008               	dw	8
  1220  00F9C3  0004               	dw	4
  1221  00F9C5  0030               	dw	48
  1222  00F9C7  0003               	dw	3
  1223  00F9C9  00C0               	dw	192
  1224  00F9CB  0000               	dw	0
  1225  00F9CD  0030               	dw	48
  1226  00F9CF  0003               	dw	3
  1227  00F9D1  0008               	dw	8
  1228  00F9D3  0004               	dw	4
  1229  00F9D5  0006               	dw	6
  1230  00F9D7  0018               	dw	24
  1231  00F9D9  0000               	dw	0
  1232  00F9DB  0000               	dw	0
  1233  00F9DD  000B               	dw	11
  1234  00F9DF  0000               	dw	0
  1235  00F9E1  0000               	dw	0
  1236  00F9E3  0002               	dw	2
  1237  00F9E5  0000               	dw	0
  1238  00F9E7  0004               	dw	4
  1239  00F9E9  0000               	dw	0
  1240  00F9EB  0018               	dw	24
  1241  00F9ED  0000               	dw	0
  1242  00F9EF  0060               	dw	96
  1243  00F9F1  0000               	dw	0
  1244  00F9F3  0080               	dw	128
  1245  00F9F5  001F               	dw	31
  1246  00F9F7  0060               	dw	96
  1247  00F9F9  0000               	dw	0
  1248  00F9FB  0018               	dw	24
  1249  00F9FD  0000               	dw	0
  1250  00F9FF  0004               	dw	4
  1251  00FA01  0000               	dw	0
  1252  00FA03  0002               	dw	2
  1253  00FA05  0000               	dw	0
  1254  00FA07  0000               	dw	0
  1255  00FA09  0000               	dw	0
  1256  00FA0B  0008               	dw	8
  1257  00FA0D  0002               	dw	2
  1258  00FA0F  0010               	dw	16
  1259  00FA11  0002               	dw	2
  1260  00FA13  001C               	dw	28
  1261  00FA15  0002               	dw	2
  1262  00FA17  0013               	dw	19
  1263  00FA19  00C2               	dw	194
  1264  00FA1B  0010               	dw	16
  1265  00FA1D  0032               	dw	50
  1266  00FA1F  0010               	dw	16
  1267  00FA21  000E               	dw	14
  1268  00FA23  0010               	dw	16
  1269  00FA25  0002               	dw	2
  1270  00FA27  0010               	dw	16
  1271  00FA29  0000               	dw	0
  1272  00FA2B  0000               	dw	0
  1273  00FA2D  0006               	dw	6
  1274  00FA2F  0000               	dw	0
  1275  00FA31  0000               	dw	0
  1276  00FA33  0000               	dw	0
  1277  00FA35  0000               	dw	0
  1278  00FA37  00FE               	dw	254
  1279  00FA39  00FF               	dw	255
  1280  00FA3B  0002               	dw	2
  1281  00FA3D  0080               	dw	128
  1282  00FA3F  0002               	dw	2
  1283  00FA41  0080               	dw	128
  1284  00FA43  0000               	dw	0
  1285  00FA45  0000               	dw	0
  1286  00FA47  000A               	dw	10
  1287  00FA49  0002               	dw	2
  1288  00FA4B  0000               	dw	0
  1289  00FA4D  000C               	dw	12
  1290  00FA4F  0000               	dw	0
  1291  00FA51  0010               	dw	16
  1292  00FA53  0000               	dw	0
  1293  00FA55  0060               	dw	96
  1294  00FA57  0000               	dw	0
  1295  00FA59  0080               	dw	128
  1296  00FA5B  0001               	dw	1
  1297  00FA5D  0000               	dw	0
  1298  00FA5F  0006               	dw	6
  1299  00FA61  0000               	dw	0
  1300  00FA63  0008               	dw	8
  1301  00FA65  0000               	dw	0
  1302  00FA67  0030               	dw	48
  1303  00FA69  0000               	dw	0
  1304  00FA6B  0040               	dw	64
  1305  00FA6D  0000               	dw	0
  1306  00FA6F  0000               	dw	0
  1307  00FA71  0005               	dw	5
  1308  00FA73  0000               	dw	0
  1309  00FA75  0000               	dw	0
  1310  00FA77  0002               	dw	2
  1311  00FA79  0080               	dw	128
  1312  00FA7B  0002               	dw	2
  1313  00FA7D  0080               	dw	128
  1314  00FA7F  00FE               	dw	254
  1315  00FA81  00FF               	dw	255
  1316  00FA83  0000               	dw	0
  1317  00FA85  0000               	dw	0
  1318  00FA87  000B               	dw	11
  1319  00FA89  0000               	dw	0
  1320  00FA8B  0000               	dw	0
  1321  00FA8D  0000               	dw	0
  1322  00FA8F  0002               	dw	2
  1323  00FA91  0080               	dw	128
  1324  00FA93  0001               	dw	1
  1325  00FA95  0070               	dw	112
  1326  00FA97  0000               	dw	0
  1327  00FA99  000C               	dw	12
  1328  00FA9B  0000               	dw	0
  1329  00FA9D  0002               	dw	2
  1330  00FA9F  0000               	dw	0
  1331  00FAA1  000C               	dw	12
  1332  00FAA3  0000               	dw	0
  1333  00FAA5  0070               	dw	112
  1334  00FAA7  0000               	dw	0
  1335  00FAA9  0080               	dw	128
  1336  00FAAB  0001               	dw	1
  1337  00FAAD  0000               	dw	0
  1338  00FAAF  0002               	dw	2
  1339  00FAB1  0000               	dw	0
  1340  00FAB3  0000               	dw	0
  1341  00FAB5  0009               	dw	9
  1342  00FAB7  0000               	dw	0
  1343  00FAB9  0040               	dw	64
  1344  00FABB  0000               	dw	0
  1345  00FABD  0040               	dw	64
  1346  00FABF  0000               	dw	0
  1347  00FAC1  0040               	dw	64
  1348  00FAC3  0000               	dw	0
  1349  00FAC5  0040               	dw	64
  1350  00FAC7  0000               	dw	0
  1351  00FAC9  0040               	dw	64
  1352  00FACB  0000               	dw	0
  1353  00FACD  0040               	dw	64
  1354  00FACF  0000               	dw	0
  1355  00FAD1  0040               	dw	64
  1356  00FAD3  0000               	dw	0
  1357  00FAD5  0040               	dw	64
  1358  00FAD7  0000               	dw	0
  1359  00FAD9  0000               	dw	0
  1360  00FADB  0005               	dw	5
  1361  00FADD  0000               	dw	0
  1362  00FADF  0000               	dw	0
  1363  00FAE1  0000               	dw	0
  1364  00FAE3  0000               	dw	0
  1365  00FAE5  0002               	dw	2
  1366  00FAE7  0000               	dw	0
  1367  00FAE9  0004               	dw	4
  1368  00FAEB  0000               	dw	0
  1369  00FAED  0000               	dw	0
  1370  00FAEF  0000               	dw	0
  1371  00FAF1  000B               	dw	11
  1372  00FAF3  0000               	dw	0
  1373  00FAF5  0000               	dw	0
  1374  00FAF7  00C0               	dw	192
  1375  00FAF9  0007               	dw	7
  1376  00FAFB  0020               	dw	32
  1377  00FAFD  0008               	dw	8
  1378  00FAFF  0010               	dw	16
  1379  00FB01  0010               	dw	16
  1380  00FB03  0010               	dw	16
  1381  00FB05  0010               	dw	16
  1382  00FB07  0010               	dw	16
  1383  00FB09  0010               	dw	16
  1384  00FB0B  0010               	dw	16
  1385  00FB0D  0010               	dw	16
  1386  00FB0F  0010               	dw	16
  1387  00FB11  0010               	dw	16
  1388  00FB13  0020               	dw	32
  1389  00FB15  0008               	dw	8
  1390  00FB17  00F0               	dw	240
  1391  00FB19  001F               	dw	31
  1392  00FB1B  0000               	dw	0
  1393  00FB1D  0000               	dw	0
  1394  00FB1F  000B               	dw	11
  1395  00FB21  0000               	dw	0
  1396  00FB23  0000               	dw	0
  1397  00FB25  00FE               	dw	254
  1398  00FB27  001F               	dw	31
  1399  00FB29  0020               	dw	32
  1400  00FB2B  0008               	dw	8
  1401  00FB2D  0010               	dw	16
  1402  00FB2F  0010               	dw	16
  1403  00FB31  0010               	dw	16
  1404  00FB33  0010               	dw	16
  1405  00FB35  0010               	dw	16
  1406  00FB37  0010               	dw	16
  1407  00FB39  0010               	dw	16
  1408  00FB3B  0010               	dw	16
  1409  00FB3D  0010               	dw	16
  1410  00FB3F  0010               	dw	16
  1411  00FB41  0020               	dw	32
  1412  00FB43  0008               	dw	8
  1413  00FB45  00C0               	dw	192
  1414  00FB47  0007               	dw	7
  1415  00FB49  0000               	dw	0
  1416  00FB4B  0000               	dw	0
  1417  00FB4D  000A               	dw	10
  1418  00FB4F  0000               	dw	0
  1419  00FB51  0000               	dw	0
  1420  00FB53  00C0               	dw	192
  1421  00FB55  0007               	dw	7
  1422  00FB57  0020               	dw	32
  1423  00FB59  0008               	dw	8
  1424  00FB5B  0010               	dw	16
  1425  00FB5D  0010               	dw	16
  1426  00FB5F  0010               	dw	16
  1427  00FB61  0010               	dw	16
  1428  00FB63  0010               	dw	16
  1429  00FB65  0010               	dw	16
  1430  00FB67  0010               	dw	16
  1431  00FB69  0010               	dw	16
  1432  00FB6B  0020               	dw	32
  1433  00FB6D  0008               	dw	8
  1434  00FB6F  0040               	dw	64
  1435  00FB71  0004               	dw	4
  1436  00FB73  0000               	dw	0
  1437  00FB75  0000               	dw	0
  1438  00FB77  000B               	dw	11
  1439  00FB79  0000               	dw	0
  1440  00FB7B  0000               	dw	0
  1441  00FB7D  00C0               	dw	192
  1442  00FB7F  0007               	dw	7
  1443  00FB81  0020               	dw	32
  1444  00FB83  0008               	dw	8
  1445  00FB85  0010               	dw	16
  1446  00FB87  0010               	dw	16
  1447  00FB89  0010               	dw	16
  1448  00FB8B  0010               	dw	16
  1449  00FB8D  0010               	dw	16
  1450  00FB8F  0010               	dw	16
  1451  00FB91  0010               	dw	16
  1452  00FB93  0010               	dw	16
  1453  00FB95  0010               	dw	16
  1454  00FB97  0010               	dw	16
  1455  00FB99  0020               	dw	32
  1456  00FB9B  0008               	dw	8
  1457  00FB9D  00FE               	dw	254
  1458  00FB9F  001F               	dw	31
  1459  00FBA1  0000               	dw	0
  1460  00FBA3  0000               	dw	0
  1461  00FBA5  000A               	dw	10
  1462  00FBA7  0000               	dw	0
  1463  00FBA9  0000               	dw	0
  1464  00FBAB  00C0               	dw	192
  1465  00FBAD  0007               	dw	7
  1466  00FBAF  0020               	dw	32
  1467  00FBB1  0009               	dw	9
  1468  00FBB3  0010               	dw	16
  1469  00FBB5  0011               	dw	17
  1470  00FBB7  0010               	dw	16
  1471  00FBB9  0011               	dw	17
  1472  00FBBB  0010               	dw	16
  1473  00FBBD  0011               	dw	17
  1474  00FBBF  0010               	dw	16
  1475  00FBC1  0011               	dw	17
  1476  00FBC3  0020               	dw	32
  1477  00FBC5  0009               	dw	9
  1478  00FBC7  00C0               	dw	192
  1479  00FBC9  0005               	dw	5
  1480  00FBCB  0000               	dw	0
  1481  00FBCD  0000               	dw	0
  1482  00FBCF  0006               	dw	6
  1483  00FBD1  0000               	dw	0
  1484  00FBD3  0000               	dw	0
  1485  00FBD5  0010               	dw	16
  1486  00FBD7  0000               	dw	0
  1487  00FBD9  00FC               	dw	252
  1488  00FBDB  001F               	dw	31
  1489  00FBDD  0012               	dw	18
  1490  00FBDF  0000               	dw	0
  1491  00FBE1  0012               	dw	18
  1492  00FBE3  0000               	dw	0
  1493  00FBE5  0000               	dw	0
  1494  00FBE7  0000               	dw	0
  1495  00FBE9  000B               	dw	11
  1496  00FBEB  0000               	dw	0
  1497  00FBED  0000               	dw	0
  1498  00FBEF  00C0               	dw	192
  1499  00FBF1  0027               	dw	39
  1500  00FBF3  0020               	dw	32
  1501  00FBF5  0048               	dw	72
  1502  00FBF7  0010               	dw	16
  1503  00FBF9  0090               	dw	144
  1504  00FBFB  0010               	dw	16
  1505  00FBFD  0090               	dw	144
  1506  00FBFF  0010               	dw	16
  1507  00FC01  0090               	dw	144
  1508  00FC03  0010               	dw	16
  1509  00FC05  0090               	dw	144
  1510  00FC07  0010               	dw	16
  1511  00FC09  0090               	dw	144
  1512  00FC0B  0020               	dw	32
  1513  00FC0D  0048               	dw	72
  1514  00FC0F  00F0               	dw	240
  1515  00FC11  003F               	dw	63
  1516  00FC13  0000               	dw	0
  1517  00FC15  0000               	dw	0
  1518  00FC17  000A               	dw	10
  1519  00FC19  0000               	dw	0
  1520  00FC1B  0000               	dw	0
  1521  00FC1D  00FE               	dw	254
  1522  00FC1F  001F               	dw	31
  1523  00FC21  0020               	dw	32
  1524  00FC23  0000               	dw	0
  1525  00FC25  0010               	dw	16
  1526  00FC27  0000               	dw	0
  1527  00FC29  0010               	dw	16
  1528  00FC2B  0000               	dw	0
  1529  00FC2D  0010               	dw	16
  1530  00FC2F  0000               	dw	0
  1531  00FC31  0010               	dw	16
  1532  00FC33  0000               	dw	0
  1533  00FC35  0020               	dw	32
  1534  00FC37  0000               	dw	0
  1535  00FC39  00C0               	dw	192
  1536  00FC3B  001F               	dw	31
  1537  00FC3D  0000               	dw	0
  1538  00FC3F  0000               	dw	0
  1539  00FC41  0003               	dw	3
  1540  00FC43  0000               	dw	0
  1541  00FC45  0000               	dw	0
  1542  00FC47  00F6               	dw	246
  1543  00FC49  001F               	dw	31
  1544  00FC4B  0000               	dw	0
  1545  00FC4D  0000               	dw	0
  1546  00FC4F  0003               	dw	3
  1547  00FC51  0000               	dw	0
  1548  00FC53  0080               	dw	128
  1549  00FC55  00F6               	dw	246
  1550  00FC57  007F               	dw	127
  1551  00FC59  0000               	dw	0
  1552  00FC5B  0000               	dw	0
  1553  00FC5D  0008               	dw	8
  1554  00FC5F  0000               	dw	0
  1555  00FC61  0000               	dw	0
  1556  00FC63  00FE               	dw	254
  1557  00FC65  001F               	dw	31
  1558  00FC67  0000               	dw	0
  1559  00FC69  0001               	dw	1
  1560  00FC6B  0080               	dw	128
  1561  00FC6D  0002               	dw	2
  1562  00FC6F  0040               	dw	64
  1563  00FC71  0004               	dw	4
  1564  00FC73  0020               	dw	32
  1565  00FC75  0008               	dw	8
  1566  00FC77  0010               	dw	16
  1567  00FC79  0010               	dw	16
  1568  00FC7B  0000               	dw	0
  1569  00FC7D  0000               	dw	0
  1570  00FC7F  0003               	dw	3
  1571  00FC81  0000               	dw	0
  1572  00FC83  0000               	dw	0
  1573  00FC85  00FE               	dw	254
  1574  00FC87  001F               	dw	31
  1575  00FC89  0000               	dw	0
  1576  00FC8B  0000               	dw	0
  1577  00FC8D  000F               	dw	15
  1578  00FC8F  0000               	dw	0
  1579  00FC91  0000               	dw	0
  1580  00FC93  00F0               	dw	240
  1581  00FC95  001F               	dw	31
  1582  00FC97  0020               	dw	32
  1583  00FC99  0000               	dw	0
  1584  00FC9B  0010               	dw	16
  1585  00FC9D  0000               	dw	0
  1586  00FC9F  0010               	dw	16
  1587  00FCA1  0000               	dw	0
  1588  00FCA3  0010               	dw	16
  1589  00FCA5  0000               	dw	0
  1590  00FCA7  0020               	dw	32
  1591  00FCA9  0000               	dw	0
  1592  00FCAB  00C0               	dw	192
  1593  00FCAD  001F               	dw	31
  1594  00FCAF  0020               	dw	32
  1595  00FCB1  0000               	dw	0
  1596  00FCB3  0010               	dw	16
  1597  00FCB5  0000               	dw	0
  1598  00FCB7  0010               	dw	16
  1599  00FCB9  0000               	dw	0
  1600  00FCBB  0010               	dw	16
  1601  00FCBD  0000               	dw	0
  1602  00FCBF  0020               	dw	32
  1603  00FCC1  0000               	dw	0
  1604  00FCC3  00C0               	dw	192
  1605  00FCC5  001F               	dw	31
  1606  00FCC7  0000               	dw	0
  1607  00FCC9  0000               	dw	0
  1608  00FCCB  000A               	dw	10
  1609  00FCCD  0000               	dw	0
  1610  00FCCF  0000               	dw	0
  1611  00FCD1  00F0               	dw	240
  1612  00FCD3  001F               	dw	31
  1613  00FCD5  0020               	dw	32
  1614  00FCD7  0000               	dw	0
  1615  00FCD9  0010               	dw	16
  1616  00FCDB  0000               	dw	0
  1617  00FCDD  0010               	dw	16
  1618  00FCDF  0000               	dw	0
  1619  00FCE1  0010               	dw	16
  1620  00FCE3  0000               	dw	0
  1621  00FCE5  0010               	dw	16
  1622  00FCE7  0000               	dw	0
  1623  00FCE9  0020               	dw	32
  1624  00FCEB  0000               	dw	0
  1625  00FCED  00C0               	dw	192
  1626  00FCEF  001F               	dw	31
  1627  00FCF1  0000               	dw	0
  1628  00FCF3  0000               	dw	0
  1629  00FCF5  000A               	dw	10
  1630  00FCF7  0000               	dw	0
  1631  00FCF9  0000               	dw	0
  1632  00FCFB  00C0               	dw	192
  1633  00FCFD  0007               	dw	7
  1634  00FCFF  0020               	dw	32
  1635  00FD01  0008               	dw	8
  1636  00FD03  0010               	dw	16
  1637  00FD05  0010               	dw	16
  1638  00FD07  0010               	dw	16
  1639  00FD09  0010               	dw	16
  1640  00FD0B  0010               	dw	16
  1641  00FD0D  0010               	dw	16
  1642  00FD0F  0010               	dw	16
  1643  00FD11  0010               	dw	16
  1644  00FD13  0020               	dw	32
  1645  00FD15  0008               	dw	8
  1646  00FD17  00C0               	dw	192
  1647  00FD19  0007               	dw	7
  1648  00FD1B  0000               	dw	0
  1649  00FD1D  0000               	dw	0
  1650  00FD1F  000B               	dw	11
  1651  00FD21  0000               	dw	0
  1652  00FD23  0000               	dw	0
  1653  00FD25  00F0               	dw	240
  1654  00FD27  00FF               	dw	255
  1655  00FD29  0020               	dw	32
  1656  00FD2B  0008               	dw	8
  1657  00FD2D  0010               	dw	16
  1658  00FD2F  0010               	dw	16
  1659  00FD31  0010               	dw	16
  1660  00FD33  0010               	dw	16
  1661  00FD35  0010               	dw	16
  1662  00FD37  0010               	dw	16
  1663  00FD39  0010               	dw	16
  1664  00FD3B  0010               	dw	16
  1665  00FD3D  0010               	dw	16
  1666  00FD3F  0010               	dw	16
  1667  00FD41  0020               	dw	32
  1668  00FD43  0008               	dw	8
  1669  00FD45  00C0               	dw	192
  1670  00FD47  0007               	dw	7
  1671  00FD49  0000               	dw	0
  1672  00FD4B  0000               	dw	0
  1673  00FD4D  000B               	dw	11
  1674  00FD4F  0000               	dw	0
  1675  00FD51  0000               	dw	0
  1676  00FD53  00C0               	dw	192
  1677  00FD55  0007               	dw	7
  1678  00FD57  0020               	dw	32
  1679  00FD59  0008               	dw	8
  1680  00FD5B  0010               	dw	16
  1681  00FD5D  0010               	dw	16
  1682  00FD5F  0010               	dw	16
  1683  00FD61  0010               	dw	16
  1684  00FD63  0010               	dw	16
  1685  00FD65  0010               	dw	16
  1686  00FD67  0010               	dw	16
  1687  00FD69  0010               	dw	16
  1688  00FD6B  0010               	dw	16
  1689  00FD6D  0010               	dw	16
  1690  00FD6F  0020               	dw	32
  1691  00FD71  0008               	dw	8
  1692  00FD73  00F0               	dw	240
  1693  00FD75  00FF               	dw	255
  1694  00FD77  0000               	dw	0
  1695  00FD79  0000               	dw	0
  1696  00FD7B  0006               	dw	6
  1697  00FD7D  0000               	dw	0
  1698  00FD7F  0000               	dw	0
  1699  00FD81  00F0               	dw	240
  1700  00FD83  001F               	dw	31
  1701  00FD85  0020               	dw	32
  1702  00FD87  0000               	dw	0
  1703  00FD89  0010               	dw	16
  1704  00FD8B  0000               	dw	0
  1705  00FD8D  0010               	dw	16
  1706  00FD8F  0000               	dw	0
  1707  00FD91  0000               	dw	0
  1708  00FD93  0000               	dw	0
  1709  00FD95  0006               	dw	6
  1710  00FD97  0060               	dw	96
  1711  00FD99  0008               	dw	8
  1712  00FD9B  0090               	dw	144
  1713  00FD9D  0010               	dw	16
  1714  00FD9F  0010               	dw	16
  1715  00FDA1  0011               	dw	17
  1716  00FDA3  0010               	dw	16
  1717  00FDA5  0011               	dw	17
  1718  00FDA7  0020               	dw	32
  1719  00FDA9  000E               	dw	14
  1720  00FDAB  0000               	dw	0
  1721  00FDAD  0000               	dw	0
  1722  00FDAF  0007               	dw	7
  1723  00FDB1  0000               	dw	0
  1724  00FDB3  0000               	dw	0
  1725  00FDB5  0010               	dw	16
  1726  00FDB7  0000               	dw	0
  1727  00FDB9  0010               	dw	16
  1728  00FDBB  0000               	dw	0
  1729  00FDBD  00FE               	dw	254
  1730  00FDBF  001F               	dw	31
  1731  00FDC1  0010               	dw	16
  1732  00FDC3  0000               	dw	0
  1733  00FDC5  0010               	dw	16
  1734  00FDC7  0000               	dw	0
  1735  00FDC9  0000               	dw	0
  1736  00FDCB  0000               	dw	0
  1737  00FDCD  000A               	dw	10
  1738  00FDCF  0000               	dw	0
  1739  00FDD1  0000               	dw	0
  1740  00FDD3  00F0               	dw	240
  1741  00FDD5  0007               	dw	7
  1742  00FDD7  0000               	dw	0
  1743  00FDD9  0008               	dw	8
  1744  00FDDB  0000               	dw	0
  1745  00FDDD  0010               	dw	16
  1746  00FDDF  0000               	dw	0
  1747  00FDE1  0010               	dw	16
  1748  00FDE3  0000               	dw	0
  1749  00FDE5  0010               	dw	16
  1750  00FDE7  0000               	dw	0
  1751  00FDE9  0010               	dw	16
  1752  00FDEB  0000               	dw	0
  1753  00FDED  0008               	dw	8
  1754  00FDEF  00F0               	dw	240
  1755  00FDF1  0007               	dw	7
  1756  00FDF3  0000               	dw	0
  1757  00FDF5  0000               	dw	0
  1758  00FDF7  000A               	dw	10
  1759  00FDF9  0010               	dw	16
  1760  00FDFB  0000               	dw	0
  1761  00FDFD  0060               	dw	96
  1762  00FDFF  0000               	dw	0
  1763  00FE01  0080               	dw	128
  1764  00FE03  0003               	dw	3
  1765  00FE05  0000               	dw	0
  1766  00FE07  000C               	dw	12
  1767  00FE09  0000               	dw	0
  1768  00FE0B  0010               	dw	16
  1769  00FE0D  0000               	dw	0
  1770  00FE0F  000C               	dw	12
  1771  00FE11  0080               	dw	128
  1772  00FE13  0003               	dw	3
  1773  00FE15  0060               	dw	96
  1774  00FE17  0000               	dw	0
  1775  00FE19  0010               	dw	16
  1776  00FE1B  0000               	dw	0
  1777  00FE1D  0000               	dw	0
  1778  00FE1F  0000               	dw	0
  1779  00FE21  000E               	dw	14
  1780  00FE23  0010               	dw	16
  1781  00FE25  0000               	dw	0
  1782  00FE27  00E0               	dw	224
  1783  00FE29  0000               	dw	0
  1784  00FE2B  0000               	dw	0
  1785  00FE2D  0007               	dw	7
  1786  00FE2F  0000               	dw	0
  1787  00FE31  0018               	dw	24
  1788  00FE33  0000               	dw	0
  1789  00FE35  0007               	dw	7
  1790  00FE37  00E0               	dw	224
  1791  00FE39  0000               	dw	0
  1792  00FE3B  0010               	dw	16
  1793  00FE3D  0000               	dw	0
  1794  00FE3F  00E0               	dw	224
  1795  00FE41  0000               	dw	0
  1796  00FE43  0000               	dw	0
  1797  00FE45  0007               	dw	7
  1798  00FE47  0000               	dw	0
  1799  00FE49  0018               	dw	24
  1800  00FE4B  0000               	dw	0
  1801  00FE4D  0007               	dw	7
  1802  00FE4F  00E0               	dw	224
  1803  00FE51  0000               	dw	0
  1804  00FE53  0010               	dw	16
  1805  00FE55  0000               	dw	0
  1806  00FE57  0000               	dw	0
  1807  00FE59  0000               	dw	0
  1808  00FE5B  0009               	dw	9
  1809  00FE5D  0010               	dw	16
  1810  00FE5F  0010               	dw	16
  1811  00FE61  0020               	dw	32
  1812  00FE63  0008               	dw	8
  1813  00FE65  0040               	dw	64
  1814  00FE67  0004               	dw	4
  1815  00FE69  0080               	dw	128
  1816  00FE6B  0003               	dw	3
  1817  00FE6D  0080               	dw	128
  1818  00FE6F  0003               	dw	3
  1819  00FE71  0040               	dw	64
  1820  00FE73  0004               	dw	4
  1821  00FE75  0020               	dw	32
  1822  00FE77  0008               	dw	8
  1823  00FE79  0010               	dw	16
  1824  00FE7B  0010               	dw	16
  1825  00FE7D  0000               	dw	0
  1826  00FE7F  0000               	dw	0
  1827  00FE81  0009               	dw	9
  1828  00FE83  0010               	dw	16
  1829  00FE85  0000               	dw	0
  1830  00FE87  00E0               	dw	224
  1831  00FE89  0000               	dw	0
  1832  00FE8B  0000               	dw	0
  1833  00FE8D  0083               	dw	131
  1834  00FE8F  0000               	dw	0
  1835  00FE91  007C               	dw	124
  1836  00FE93  0000               	dw	0
  1837  00FE95  000C               	dw	12
  1838  00FE97  0000               	dw	0
  1839  00FE99  0003               	dw	3
  1840  00FE9B  00E0               	dw	224
  1841  00FE9D  0000               	dw	0
  1842  00FE9F  0010               	dw	16
  1843  00FEA1  0000               	dw	0
  1844  00FEA3  0000               	dw	0
  1845  00FEA5  0000               	dw	0
  1846  00FEA7  0008               	dw	8
  1847  00FEA9  0010               	dw	16
  1848  00FEAB  0010               	dw	16
  1849  00FEAD  0010               	dw	16
  1850  00FEAF  0018               	dw	24
  1851  00FEB1  0010               	dw	16
  1852  00FEB3  0016               	dw	22
  1853  00FEB5  0010               	dw	16
  1854  00FEB7  0011               	dw	17
  1855  00FEB9  00D0               	dw	208
  1856  00FEBB  0010               	dw	16
  1857  00FEBD  0030               	dw	48
  1858  00FEBF  0010               	dw	16
  1859  00FEC1  0010               	dw	16
  1860  00FEC3  0010               	dw	16
  1861  00FEC5  0000               	dw	0
  1862  00FEC7  0000               	dw	0
  1863  00FEC9  0007               	dw	7
  1864  00FECB  0000               	dw	0
  1865  00FECD  0000               	dw	0
  1866  00FECF  0000               	dw	0
  1867  00FED1  0001               	dw	1
  1868  00FED3  0080               	dw	128
  1869  00FED5  0002               	dw	2
  1870  00FED7  00FC               	dw	252
  1871  00FED9  007E               	dw	126
  1872  00FEDB  0002               	dw	2
  1873  00FEDD  0080               	dw	128
  1874  00FEDF  0002               	dw	2
  1875  00FEE1  0080               	dw	128
  1876  00FEE3  0000               	dw	0
  1877  00FEE5  0000               	dw	0
  1878  00FEE7  0007               	dw	7
  1879  00FEE9  0000               	dw	0
  1880  00FEEB  0000               	dw	0
  1881  00FEED  0000               	dw	0
  1882  00FEEF  0000               	dw	0
  1883  00FEF1  0000               	dw	0
  1884  00FEF3  0000               	dw	0
  1885  00FEF5  0000               	dw	0
  1886  00FEF7  0000               	dw	0
  1887  00FEF9  0000               	dw	0
  1888  00FEFB  0000               	dw	0
  1889  00FEFD  00FE               	dw	254
  1890  00FEFF  00FF               	dw	255
  1891  00FF01  0000               	dw	0
  1892  00FF03  0000               	dw	0
  1893  00FF05  0006               	dw	6
  1894  00FF07  0002               	dw	2
  1895  00FF09  0080               	dw	128
  1896  00FF0B  0002               	dw	2
  1897  00FF0D  0080               	dw	128
  1898  00FF0F  00FC               	dw	252
  1899  00FF11  007E               	dw	126
  1900  00FF13  0080               	dw	128
  1901  00FF15  0002               	dw	2
  1902  00FF17  0000               	dw	0
  1903  00FF19  0001               	dw	1
  1904  00FF1B  0000               	dw	0
  1905  00FF1D  0000               	dw	0
  1906  00FF1F  000A               	dw	10
  1907  00FF21  0000               	dw	0
  1908  00FF23  0000               	dw	0
  1909  00FF25  0080               	dw	128
  1910  00FF27  0000               	dw	0
  1911  00FF29  0040               	dw	64
  1912  00FF2B  0000               	dw	0
  1913  00FF2D  0040               	dw	64
  1914  00FF2F  0000               	dw	0
  1915  00FF31  0040               	dw	64
  1916  00FF33  0000               	dw	0
  1917  00FF35  0080               	dw	128
  1918  00FF37  0000               	dw	0
  1919  00FF39  0080               	dw	128
  1920  00FF3B  0000               	dw	0
  1921  00FF3D  0080               	dw	128
  1922  00FF3F  0000               	dw	0
  1923  00FF41  0040               	dw	64
  1924  00FF43  0000               	dw	0
  1925  00FF45  0000               	dw	0
  1926  00FF47  0000               	dw	0
  1927  00FF49  0005               	dw	5
  1928  00FF4B  00FF               	dw	255
  1929  00FF4D  000F               	dw	15
  1930  00FF4F  0001               	dw	1
  1931  00FF51  0008               	dw	8
  1932  00FF53  0001               	dw	1
  1933  00FF55  0008               	dw	8
  1934  00FF57  00FF               	dw	255
  1935  00FF59  000F               	dw	15
  1936  00FF5B  0000               	dw	0
  1937  00FF5D  0000               	dw	0
  1938  00FF5F                     __end_of_font:
  1939                           	opt callstack 0
  1940  00FF5F                     _spi_configuration:
  1941                           	opt callstack 0
  1942  00FF5F  00                 	db	0
  1943  00FF60  40                 	db	64
  1944  00FF61  01                 	db	1
  1945  00FF62  00                 	db	0
  1946  00FF63                     __end_of_spi_configuration:
  1947                           	opt callstack 0
  1948  00FF63                     STR_1:
  1949  00FF63  58                 	db	88	;'X'
  1950  00FF64  43                 	db	67	;'C'
  1951  00FF65  38                 	db	56	;'8'
  1952  00FF66  20                 	db	32
  1953  00FF67  2D                 	db	45
  1954  00FF68  20                 	db	32
  1955  00FF69  42                 	db	66	;'B'
  1956  00FF6A  69                 	db	105	;'i'
  1957  00FF6B  62                 	db	98	;'b'
  1958  00FF6C  6C                 	db	108	;'l'
  1959  00FF6D  69                 	db	105	;'i'
  1960  00FF6E  6F                 	db	111	;'o'
  1961  00FF6F  74                 	db	116	;'t'
  1962  00FF70  65                 	db	101	;'e'
  1963  00FF71  63                 	db	99	;'c'
  1964  00FF72  61                 	db	97	;'a'
  1965  00FF73  20                 	db	32
  1966  00FF74  2D                 	db	45
  1967  00FF75  20                 	db	32
  1968  00FF76  4C                 	db	76	;'L'
  1969  00FF77  43                 	db	67	;'C'
  1970  00FF78  44                 	db	68	;'D'
  1971  00FF79  20                 	db	32
  1972  00FF7A  2D                 	db	45
  1973  00FF7B  20                 	db	32
  1974  00FF7C  49                 	db	73	;'I'
  1975  00FF7D  4C                 	db	76	;'L'
  1976  00FF7E  49                 	db	73	;'I'
  1977  00FF7F  39                 	db	57	;'9'
  1978  00FF80  33                 	db	51	;'3'
  1979  00FF81  34                 	db	52	;'4'
  1980  00FF82  31                 	db	49	;'1'
  1981  00FF83  00                 	db	0
  1982  00FF84                     STR_4:
  1983  00FF84  70                 	db	112	;'p'
  1984  00FF85  65                 	db	101	;'e'
  1985  00FF86  72                 	db	114	;'r'
  1986  00FF87  63                 	db	99	;'c'
  1987  00FF88  65                 	db	101	;'e'
  1988  00FF89  6E                 	db	110	;'n'
  1989  00FF8A  74                 	db	116	;'t'
  1990  00FF8B  61                 	db	97	;'a'
  1991  00FF8C  67                 	db	103	;'g'
  1992  00FF8D  65                 	db	101	;'e'
  1993  00FF8E  6D                 	db	109	;'m'
  1994  00FF8F  20                 	db	32
  1995  00FF90  3D                 	db	61	;'='
  1996  00FF91  20                 	db	32
  1997  00FF92  25                 	db	37
  1998  00FF93  2E                 	db	46
  1999  00FF94  66                 	db	102	;'f'
  2000  00FF95  20                 	db	32
  2001  00FF96  20                 	db	32
  2002  00FF97  00                 	db	0
  2003  00FF98                     STR_3:
  2004  00FF98  52                 	db	82	;'R'
  2005  00FF99  50                 	db	80	;'P'
  2006  00FF9A  4D                 	db	77	;'M'
  2007  00FF9B  3D                 	db	61	;'='
  2008  00FF9C  20                 	db	32
  2009  00FF9D  25                 	db	37
  2010  00FF9E  64                 	db	100	;'d'
  2011  00FF9F  20                 	db	32
  2012  00FFA0  20                 	db	32
  2013  00FFA1  20                 	db	32
  2014  00FFA2  20                 	db	32
  2015  00FFA3  20                 	db	32
  2016  00FFA4  20                 	db	32
  2017  00FFA5  00                 	db	0
  2018  00FFA6                     STR_2:
  2019  00FFA6  50                 	db	80	;'P'
  2020  00FFA7  49                 	db	73	;'I'
  2021  00FFA8  43                 	db	67	;'C'
  2022  00FFA9  20                 	db	32
  2023  00FFAA  2D                 	db	45
  2024  00FFAB  20                 	db	32
  2025  00FFAC  53                 	db	83	;'S'
  2026  00FFAD  45                 	db	69	;'E'
  2027  00FFAE  45                 	db	69	;'E'
  2028  00FFAF  56                 	db	86	;'V'
  2029  00FFB0  00                 	db	0
  2030  00FFB1                     STR_5:
  2031  00FFB1  54                 	db	84	;'T'
  2032  00FFB2  45                 	db	69	;'E'
  2033  00FFB3  53                 	db	83	;'S'
  2034  00FFB4  54                 	db	84	;'T'
  2035  00FFB5  45                 	db	69	;'E'
  2036  00FFB6  20                 	db	32
  2037  00FFB7  25                 	db	37
  2038  00FFB8  64                 	db	100	;'d'
  2039  00FFB9  00                 	db	0
  2040  00FFBA                     STR_6:
  2041  00FFBA  49                 	db	73	;'I'
  2042  00FFBB  4E                 	db	78	;'N'
  2043  00FFBC  46                 	db	70	;'F'
  2044  00FFBD  00                 	db	0
  2045  00FFBE                     STR_10:
  2046  00FFBE  4E                 	db	78	;'N'
  2047  00FFBF  41                 	db	65	;'A'
  2048  00FFC0  4E                 	db	78	;'N'
  2049  00FFC1  00                 	db	0
  2050  00FFC2                     STR_95:
  2051  00FFC2  68                 	db	104	;'h'
  2052  00FFC3  68                 	db	104	;'h'
  2053  00FFC4  58                 	db	88	;'X'
  2054  00FFC5  00                 	db	0
  2055  00FFC6                     STR_14:
  2056  00FFC6  68                 	db	104	;'h'
  2057  00FFC7  68                 	db	104	;'h'
  2058  00FFC8  64                 	db	100	;'d'
  2059  00FFC9  00                 	db	0
  2060  00FFCA                     STR_7:
  2061  00FFCA  69                 	db	105	;'i'
  2062  00FFCB  6E                 	db	110	;'n'
  2063  00FFCC  66                 	db	102	;'f'
  2064  00FFCD  00                 	db	0
  2065  00FFCE                     STR_18:
  2066  00FFCE  68                 	db	104	;'h'
  2067  00FFCF  68                 	db	104	;'h'
  2068  00FFD0  69                 	db	105	;'i'
  2069  00FFD1  00                 	db	0
  2070  00FFD2                     STR_11:
  2071  00FFD2  6E                 	db	110	;'n'
  2072  00FFD3  61                 	db	97	;'a'
  2073  00FFD4  6E                 	db	110	;'n'
  2074  00FFD5  00                 	db	0
  2075  00FFD6                     STR_61:
  2076  00FFD6  68                 	db	104	;'h'
  2077  00FFD7  68                 	db	104	;'h'
  2078  00FFD8  6E                 	db	110	;'n'
  2079  00FFD9  00                 	db	0
  2080  00FFDA                     STR_46:
  2081  00FFDA  68                 	db	104	;'h'
  2082  00FFDB  68                 	db	104	;'h'
  2083  00FFDC  6F                 	db	111	;'o'
  2084  00FFDD  00                 	db	0
  2085  00FFDE                     STR_76:
  2086  00FFDE  68                 	db	104	;'h'
  2087  00FFDF  68                 	db	104	;'h'
  2088  00FFE0  75                 	db	117	;'u'
  2089  00FFE1  00                 	db	0
  2090  00FFE2                     STR_91:
  2091  00FFE2  68                 	db	104	;'h'
  2092  00FFE3  68                 	db	104	;'h'
  2093  00FFE4  78                 	db	120	;'x'
  2094  00FFE5  00                 	db	0
  2095  00FFE6                     STR_113:
  2096  00FFE6  7A                 	db	122	;'z'
  2097  00FFE7  58                 	db	88	;'X'
  2098  00FFE8  00                 	db	0
  2099  00FFE9                     STR_32:
  2100  00FFE9  7A                 	db	122	;'z'
  2101  00FFEA  64                 	db	100	;'d'
  2102  00FFEB  00                 	db	0
  2103  00FFEC                     STR_41:
  2104  00FFEC  6C                 	db	108	;'l'
  2105  00FFED  66                 	db	102	;'f'
  2106  00FFEE  00                 	db	0
  2107  00FFEF                     STR_36:
  2108  00FFEF  7A                 	db	122	;'z'
  2109  00FFF0  69                 	db	105	;'i'
  2110  00FFF1  00                 	db	0
  2111  00FFF2                     STR_71:
  2112  00FFF2  7A                 	db	122	;'z'
  2113  00FFF3  6E                 	db	110	;'n'
  2114  00FFF4  00                 	db	0
  2115  00FFF5                     STR_56:
  2116  00FFF5  7A                 	db	122	;'z'
  2117  00FFF6  6F                 	db	111	;'o'
  2118  00FFF7  00                 	db	0
  2119  00FFF8                     STR_86:
  2120  00FFF8  7A                 	db	122	;'z'
  2121  00FFF9  75                 	db	117	;'u'
  2122  00FFFA  00                 	db	0
  2123  00FFFB                     STR_109:
  2124  00FFFB  7A                 	db	122	;'z'
  2125  00FFFC  78                 	db	120	;'x'
  2126  00FFFD  00                 	db	0
  2127  0000                     
  2128                           ; #config settings
  2129  00FFFE  00                 	db	0	; dummy byte at the end
  2130  0000                     
  2131                           	psect	nvBANK0
  2132  0000FA                     __pnvBANK0:
  2133                           	opt callstack 0
  2134  0000FA                     _timer0ReloadVal:
  2135                           	opt callstack 0
  2136  0000FA                     	ds	2
  2137  0000FC                     _IOCB4_InterruptHandler:
  2138                           	opt callstack 0
  2139  0000FC                     	ds	2
  2140                           
  2141                           	psect	nvBANK1
  2142  0001C6                     __pnvBANK1:
  2143                           	opt callstack 0
  2144  0001C6                     _timer1ReloadVal:
  2145                           	opt callstack 0
  2146  0001C6                     	ds	2
  2147  0001C8                     _TMR2_InterruptHandler:
  2148                           	opt callstack 0
  2149  0001C8                     	ds	2
  2150  0001CA                     _INT0_InterruptHandler:
  2151                           	opt callstack 0
  2152  0001CA                     	ds	2
  2153  0001CC                     _ADC_InterruptHandler:
  2154                           	opt callstack 0
  2155  0001CC                     	ds	2
  2156  0000                     _IOCBbits	set	3930
  2157  0000                     _WPUB	set	3931
  2158  0000                     _ANCON1	set	3932
  2159  0000                     _ANCON0	set	3933
  2160  0000                     _T1GCONbits	set	4010
  2161  0000                     _T1CONbits	set	4045
  2162  0000                     _T1CON	set	4045
  2163  0000                     _TMR1L	set	4046
  2164  0000                     _TMR1H	set	4047
  2165  0000                     _T1GCON	set	4010
  2166  0000                     _LATEbits	set	3981
  2167  0000                     _SSPSTATbits	set	4039
  2168  0000                     _LATAbits	set	3977
  2169  0000                     _PORTBbits	set	3969
  2170  0000                     _T2CONbits	set	4042
  2171  0000                     _T2CON	set	4042
  2172  0000                     _TMR2	set	4044
  2173  0000                     _PR2	set	4043
  2174  0000                     _T0CON	set	4053
  2175  0000                     _TMR0L	set	4054
  2176  0000                     _TMR0H	set	4055
  2177  0000                     _T0CONbits	set	4053
  2178  0000                     _ADCON0bits	set	4034
  2179  0000                     _ADRESL	set	4035
  2180  0000                     _ADRESH	set	4036
  2181  0000                     _ADCON2	set	4032
  2182  0000                     _ADCON1	set	4033
  2183  0000                     _ADCON0	set	4034
  2184  0000                     _SSPBUF	set	4041
  2185  0000                     _SSPCON2	set	4037
  2186  0000                     _SSPCON1bits	set	4038
  2187  0000                     _TRISCbits	set	3988
  2188  0000                     _SSPADD	set	4040
  2189  0000                     _SSPCON1	set	4038
  2190  0000                     _SSPSTAT	set	4039
  2191  0000                     _PIR1bits	set	3998
  2192  0000                     _PIE1bits	set	3997
  2193  0000                     _RCONbits	set	4048
  2194  0000                     _REFOCON	set	3994
  2195  0000                     _OSCTUNE	set	3995
  2196  0000                     _OSCCON2	set	4050
  2197  0000                     _OSCCON	set	4051
  2198  0000                     _INTCONbits	set	4082
  2199  0000                     _INTCON2bits	set	4081
  2200  0000                     _TRISD	set	3989
  2201  0000                     _TRISC	set	3988
  2202  0000                     _TRISB	set	3987
  2203  0000                     _TRISA	set	3986
  2204  0000                     _TRISE	set	3990
  2205  0000                     _LATC	set	3979
  2206  0000                     _LATB	set	3978
  2207  0000                     _LATA	set	3977
  2208  0000                     _LATD	set	3980
  2209  0000                     _LATE	set	3981
  2210                           
  2211                           	psect	cinit
  2212  00597E                     __pcinit:
  2213                           	opt callstack 0
  2214  00597E                     start_initialization:
  2215                           	opt callstack 0
  2216  00597E                     __initialization:
  2217                           	opt callstack 0
  2218                           
  2219                           ; Initialize objects allocated to BANK1 (7 bytes)
  2220                           ; load TBLPTR registers with __pidataBANK1
  2221  00597E  0EAA               	movlw	low __pidataBANK1
  2222  005980  6EF6               	movwf	tblptrl,c
  2223  005982  0E61               	movlw	high __pidataBANK1
  2224  005984  6EF7               	movwf	tblptrh,c
  2225  005986  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2226  005988  6EF8               	movwf	tblptru,c
  2227  00598A  EE01  F0CE         	lfsr	0,__pdataBANK1
  2228  00598E  EE10 F007          	lfsr	1,7
  2229  005992                     copy_data0:
  2230  005992  0009               	tblrd		*+
  2231  005994  CFF5 FFEE          	movff	tablat,postinc0
  2232  005998  50E5               	movf	postdec1,w,c
  2233  00599A  50E1               	movf	fsr1l,w,c
  2234  00599C  E1FA               	bnz	copy_data0
  2235                           
  2236                           ; Clear objects allocated to BANK2 (200 bytes)
  2237  00599E  EE02  F000         	lfsr	0,__pbssBANK2
  2238  0059A2  0EC8               	movlw	200
  2239  0059A4                     clear_0:
  2240  0059A4  6AEE               	clrf	postinc0,c
  2241  0059A6  06E8               	decf	wreg,f,c
  2242  0059A8  E1FD               	bnz	clear_0
  2243                           
  2244                           ; Clear objects allocated to BANK1 (188 bytes)
  2245  0059AA  EE01  F000         	lfsr	0,__pbssBANK1
  2246  0059AE  0EBC               	movlw	188
  2247  0059B0                     clear_1:
  2248  0059B0  6AEE               	clrf	postinc0,c
  2249  0059B2  06E8               	decf	wreg,f,c
  2250  0059B4  E1FD               	bnz	clear_1
  2251                           
  2252                           ; Clear objects allocated to BANK0 (18 bytes)
  2253  0059B6  EE00  F0E8         	lfsr	0,__pbssBANK0
  2254  0059BA  0E12               	movlw	18
  2255  0059BC                     clear_2:
  2256  0059BC  6AEE               	clrf	postinc0,c
  2257  0059BE  06E8               	decf	wreg,f,c
  2258  0059C0  E1FD               	bnz	clear_2
  2259                           
  2260                           ; Clear objects allocated to COMRAM (10 bytes)
  2261  0059C2  EE00  F04A         	lfsr	0,__pbssCOMRAM
  2262  0059C6  0E0A               	movlw	10
  2263  0059C8                     clear_3:
  2264  0059C8  6AEE               	clrf	postinc0,c
  2265  0059CA  06E8               	decf	wreg,f,c
  2266  0059CC  E1FD               	bnz	clear_3
  2267  0059CE                     end_of_initialization:
  2268                           	opt callstack 0
  2269  0059CE                     __end_of__initialization:
  2270                           	opt callstack 0
  2271  0059CE  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2272  0059D0  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2273  0059D2  0100               	movlb	0
  2274  0059D4  EF90  F01B         	goto	_main	;jump to C main() function
  2275                           
  2276                           	psect	bssCOMRAM
  2277  00004A                     __pbssCOMRAM:
  2278                           	opt callstack 0
  2279  00004A                     _nout:
  2280                           	opt callstack 0
  2281  00004A                     	ds	2
  2282  00004C                     _width:
  2283                           	opt callstack 0
  2284  00004C                     	ds	2
  2285  00004E                     _prec:
  2286                           	opt callstack 0
  2287  00004E                     	ds	2
  2288  000050                     _flags:
  2289                           	opt callstack 0
  2290  000050                     	ds	2
  2291  000052                     TMR2_ISR@CountCallBack:
  2292                           	opt callstack 0
  2293  000052                     	ds	2
  2294                           
  2295                           	psect	bssBANK0
  2296  0000E8                     __pbssBANK0:
  2297                           	opt callstack 0
  2298  0000E8                     _percentagem:
  2299                           	opt callstack 0
  2300  0000E8                     	ds	4
  2301  0000EC                     _errno:
  2302                           	opt callstack 0
  2303  0000EC                     	ds	2
  2304  0000EE                     _global_bg_color:
  2305                           	opt callstack 0
  2306  0000EE                     	ds	2
  2307  0000F0                     _teste:
  2308                           	opt callstack 0
  2309  0000F0                     	ds	2
  2310  0000F2                     _rpm:
  2311                           	opt callstack 0
  2312  0000F2                     	ds	2
  2313  0000F4                     _POT_VAL:
  2314                           	opt callstack 0
  2315  0000F4                     	ds	2
  2316  0000F6                     _codigo_digital:
  2317                           	opt callstack 0
  2318  0000F6                     	ds	2
  2319  0000F8                     _ticks:
  2320                           	opt callstack 0
  2321  0000F8                     	ds	2
  2322                           
  2323                           	psect	bssBANK1
  2324  000100                     __pbssBANK1:
  2325                           	opt callstack 0
  2326  000100                     floorf@F524:
  2327                           	opt callstack 0
  2328  000100                     	ds	4
  2329  000104                     ___fpclassifyf@F463:
  2330                           	opt callstack 0
  2331  000104                     	ds	4
  2332  000108                     _string:
  2333                           	opt callstack 0
  2334  000108                     	ds	100
  2335  00016C                     _dbuf:
  2336                           	opt callstack 0
  2337  00016C                     	ds	80
  2338                           
  2339                           	psect	dataBANK1
  2340  0001CE                     __pdataBANK1:
  2341                           	opt callstack 0
  2342  0001CE                     stoa@F1174:
  2343                           	opt callstack 0
  2344  0001CE                     	ds	7
  2345                           
  2346                           	psect	bssBANK2
  2347  000200                     __pbssBANK2:
  2348                           	opt callstack 0
  2349  000200                     _steste:
  2350                           	opt callstack 0
  2351  000200                     	ds	100
  2352  000264                     _string_rpm:
  2353                           	opt callstack 0
  2354  000264                     	ds	100
  2355                           
  2356                           	psect	cstackBANK1
  2357  0001BC                     __pcstackBANK1:
  2358                           	opt callstack 0
  2359  0001BC                     ?_snprintf:
  2360                           	opt callstack 0
  2361  0001BC                     snprintf@s:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x0
  2365  0001BC                     	ds	2
  2366  0001BE                     snprintf@n:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 2 bytes @ 0x2
  2370  0001BE                     	ds	2
  2371  0001C0                     snprintf@fmt:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x4
  2375  0001C0                     	ds	6
  2376                           
  2377                           	psect	cstackBANK0
  2378  000060                     __pcstackBANK0:
  2379                           	opt callstack 0
  2380  000060                     _xtoa$1768:
  2381                           	opt callstack 0
  2382  000060                     efgtoa@ou:
  2383                           	opt callstack 0
  2384                           
  2385                           ; 4 bytes @ 0x0
  2386  000060                     	ds	2
  2387  000062                     _xtoa$1769:
  2388                           	opt callstack 0
  2389                           
  2390                           ; 2 bytes @ 0x2
  2391  000062                     	ds	2
  2392  000064                     _efgtoa$1721:
  2393                           	opt callstack 0
  2394  000064                     xtoa@p:
  2395                           	opt callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x4
  2398  000064                     	ds	2
  2399  000066                     _efgtoa$1722:
  2400                           	opt callstack 0
  2401  000066                     xtoa@w:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x6
  2405  000066                     	ds	2
  2406  000068                     _efgtoa$1726:
  2407                           	opt callstack 0
  2408  000068                     xtoa@n:
  2409                           	opt callstack 0
  2410                           
  2411                           ; 8 bytes @ 0x8
  2412  000068                     	ds	2
  2413  00006A                     _efgtoa$1730:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 2 bytes @ 0xA
  2417  00006A                     	ds	2
  2418  00006C                     _efgtoa$1731:
  2419                           	opt callstack 0
  2420                           
  2421                           ; 2 bytes @ 0xC
  2422  00006C                     	ds	2
  2423  00006E                     _efgtoa$1732:
  2424                           	opt callstack 0
  2425                           
  2426                           ; 2 bytes @ 0xE
  2427  00006E                     	ds	2
  2428  000070                     efgtoa@t:
  2429                           	opt callstack 0
  2430  000070                     xtoa@i:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x10
  2434  000070                     	ds	2
  2435  000072                     efgtoa@pp:
  2436                           	opt callstack 0
  2437  000072                     xtoa@c:
  2438                           	opt callstack 0
  2439                           
  2440                           ; 2 bytes @ 0x12
  2441  000072                     	ds	2
  2442  000074                     efgtoa@m:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 2 bytes @ 0x14
  2446  000074                     	ds	2
  2447  000076                     efgtoa@ne:
  2448                           	opt callstack 0
  2449                           
  2450                           ; 2 bytes @ 0x16
  2451  000076                     	ds	2
  2452  000078                     efgtoa@d:
  2453                           	opt callstack 0
  2454                           
  2455                           ; 2 bytes @ 0x18
  2456  000078                     	ds	2
  2457  00007A                     efgtoa@sign:
  2458                           	opt callstack 0
  2459                           
  2460                           ; 2 bytes @ 0x1A
  2461  00007A                     	ds	2
  2462  00007C                     efgtoa@p:
  2463                           	opt callstack 0
  2464                           
  2465                           ; 2 bytes @ 0x1C
  2466  00007C                     	ds	2
  2467  00007E                     efgtoa@nmode:
  2468                           	opt callstack 0
  2469                           
  2470                           ; 1 bytes @ 0x1E
  2471  00007E                     	ds	1
  2472  00007F                     efgtoa@w:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 2 bytes @ 0x1F
  2476  00007F                     	ds	2
  2477  000081                     efgtoa@mode:
  2478                           	opt callstack 0
  2479                           
  2480                           ; 1 bytes @ 0x21
  2481  000081                     	ds	1
  2482  000082                     efgtoa@h:
  2483                           	opt callstack 0
  2484                           
  2485                           ; 4 bytes @ 0x22
  2486  000082                     	ds	4
  2487  000086                     efgtoa@l:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 4 bytes @ 0x26
  2491  000086                     	ds	4
  2492  00008A                     efgtoa@i:
  2493                           	opt callstack 0
  2494                           
  2495                           ; 2 bytes @ 0x2A
  2496  00008A                     	ds	2
  2497  00008C                     efgtoa@g:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 4 bytes @ 0x2C
  2501  00008C                     	ds	4
  2502  000090                     efgtoa@e:
  2503                           	opt callstack 0
  2504                           
  2505                           ; 2 bytes @ 0x30
  2506  000090                     	ds	2
  2507  000092                     efgtoa@n:
  2508                           	opt callstack 0
  2509                           
  2510                           ; 2 bytes @ 0x32
  2511  000092                     	ds	2
  2512  000094                     efgtoa@u:
  2513                           	opt callstack 0
  2514                           
  2515                           ; 4 bytes @ 0x34
  2516  000094                     	ds	4
  2517  000098                     ?_vfpfcnvrt:
  2518                           	opt callstack 0
  2519  000098                     vfpfcnvrt@fp:
  2520                           	opt callstack 0
  2521                           
  2522                           ; 2 bytes @ 0x38
  2523  000098                     	ds	2
  2524  00009A                     vfpfcnvrt@fmt:
  2525                           	opt callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x3A
  2528  00009A                     	ds	2
  2529  00009C                     vfpfcnvrt@ap:
  2530                           	opt callstack 0
  2531                           
  2532                           ; 2 bytes @ 0x3C
  2533  00009C                     	ds	2
  2534  00009E                     ??_vfpfcnvrt:
  2535                           
  2536                           ; 1 bytes @ 0x3E
  2537  00009E                     	ds	4
  2538  0000A2                     vfpfcnvrt@cp:
  2539                           	opt callstack 0
  2540                           
  2541                           ; 2 bytes @ 0x42
  2542  0000A2                     	ds	2
  2543  0000A4                     vfpfcnvrt@done:
  2544                           	opt callstack 0
  2545                           
  2546                           ; 2 bytes @ 0x44
  2547  0000A4                     	ds	2
  2548  0000A6                     _vfpfcnvrt$1783:
  2549                           	opt callstack 0
  2550                           
  2551                           ; 2 bytes @ 0x46
  2552  0000A6                     	ds	2
  2553  0000A8                     _vfpfcnvrt$1784:
  2554                           	opt callstack 0
  2555                           
  2556                           ; 2 bytes @ 0x48
  2557  0000A8                     	ds	2
  2558  0000AA                     _vfpfcnvrt$1805:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 2 bytes @ 0x4A
  2562  0000AA                     	ds	2
  2563  0000AC                     vfpfcnvrt@f:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 4 bytes @ 0x4C
  2567  0000AC                     	ds	4
  2568  0000B0                     vfpfcnvrt@ct:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 3 bytes @ 0x50
  2572  0000B0                     	ds	3
  2573  0000B3                     vfpfcnvrt@ll:
  2574                           	opt callstack 0
  2575                           
  2576                           ; 8 bytes @ 0x53
  2577  0000B3                     	ds	8
  2578  0000BB                     vfpfcnvrt@vp:
  2579                           	opt callstack 0
  2580                           
  2581                           ; 2 bytes @ 0x5B
  2582  0000BB                     	ds	2
  2583  0000BD                     vfpfcnvrt@c:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 1 bytes @ 0x5D
  2587  0000BD                     	ds	1
  2588  0000BE                     vfpfcnvrt@llu:
  2589                           	opt callstack 0
  2590                           
  2591                           ; 8 bytes @ 0x5E
  2592  0000BE                     	ds	8
  2593  0000C6                     ?_vfprintf:
  2594                           	opt callstack 0
  2595  0000C6                     vfprintf@fp:
  2596                           	opt callstack 0
  2597                           
  2598                           ; 2 bytes @ 0x66
  2599  0000C6                     	ds	2
  2600  0000C8                     vfprintf@fmt:
  2601                           	opt callstack 0
  2602                           
  2603                           ; 2 bytes @ 0x68
  2604  0000C8                     	ds	2
  2605  0000CA                     vfprintf@ap:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 2 bytes @ 0x6A
  2609  0000CA                     	ds	2
  2610  0000CC                     vfprintf@cfmt:
  2611                           	opt callstack 0
  2612                           
  2613                           ; 2 bytes @ 0x6C
  2614  0000CC                     	ds	2
  2615  0000CE                     ?_vsnprintf:
  2616                           	opt callstack 0
  2617  0000CE                     vsnprintf@s:
  2618                           	opt callstack 0
  2619                           
  2620                           ; 2 bytes @ 0x6E
  2621  0000CE                     	ds	2
  2622  0000D0                     vsnprintf@n:
  2623                           	opt callstack 0
  2624                           
  2625                           ; 2 bytes @ 0x70
  2626  0000D0                     	ds	2
  2627  0000D2                     vsnprintf@fmt:
  2628                           	opt callstack 0
  2629                           
  2630                           ; 2 bytes @ 0x72
  2631  0000D2                     	ds	2
  2632  0000D4                     vsnprintf@ap:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 2 bytes @ 0x74
  2636  0000D4                     	ds	2
  2637  0000D6                     ??_vsnprintf:
  2638                           
  2639                           ; 1 bytes @ 0x76
  2640  0000D6                     	ds	4
  2641  0000DA                     _vsnprintf$2536:
  2642                           	opt callstack 0
  2643                           
  2644                           ; 2 bytes @ 0x7A
  2645  0000DA                     	ds	2
  2646  0000DC                     vsnprintf@cnt:
  2647                           	opt callstack 0
  2648                           
  2649                           ; 2 bytes @ 0x7C
  2650  0000DC                     	ds	2
  2651  0000DE                     vsnprintf@f:
  2652                           	opt callstack 0
  2653                           
  2654                           ; 6 bytes @ 0x7E
  2655  0000DE                     	ds	8
  2656  0000E6                     snprintf@ap:
  2657                           	opt callstack 0
  2658                           
  2659                           ; 2 bytes @ 0x86
  2660  0000E6                     	ds	2
  2661                           
  2662                           	psect	cstackCOMRAM
  2663  000001                     __pcstackCOMRAM:
  2664                           	opt callstack 0
  2665  000001                     ?_ADC_GetConversion:
  2666                           	opt callstack 0
  2667  000001                     ?_TMR0_ReadTimer:
  2668                           	opt callstack 0
  2669  000001                     TMR0_WriteTimer@timerVal:
  2670                           	opt callstack 0
  2671                           
  2672                           ; 2 bytes @ 0x0
  2673  000001                     	ds	2
  2674  000003                     ??_ADC_GetConversion:
  2675  000003                     ??_TMR0_ReadTimer:
  2676  000003                     
  2677                           ; 1 bytes @ 0x2
  2678  000003                     	ds	2
  2679  000005                     ADC_GetConversion@channel:
  2680                           	opt callstack 0
  2681  000005                     TMR0_ReadTimer@readVal:
  2682                           	opt callstack 0
  2683                           
  2684                           ; 2 bytes @ 0x4
  2685  000005                     	ds	1
  2686  000006                     ??_acende_led:
  2687                           
  2688                           ; 1 bytes @ 0x5
  2689  000006                     	ds	1
  2690  000007                     TMR0_ReadTimer@readValLow:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 1 bytes @ 0x6
  2694  000007                     	ds	1
  2695  000008                     TMR0_ReadTimer@readValHigh:
  2696                           	opt callstack 0
  2697                           
  2698                           ; 1 bytes @ 0x7
  2699  000008                     	ds	1
  2700  000009                     ??_INTERRUPT_InterruptManager:
  2701  000009                     
  2702                           ; 1 bytes @ 0x8
  2703  000009                     	ds	2
  2704  00000B                     ??_TMR1_Initialize:
  2705  00000B                     ??_TMR0_Initialize:
  2706  00000B                     ??_SPI_Open:
  2707  00000B                     ??_msDelay:
  2708  00000B                     ?_strlen:
  2709                           	opt callstack 0
  2710  00000B                     ?___fpclassifyf:
  2711                           	opt callstack 0
  2712  00000B                     ?_isupper:
  2713                           	opt callstack 0
  2714  00000B                     ?_isalpha:
  2715                           	opt callstack 0
  2716  00000B                     ?_isdigit:
  2717                           	opt callstack 0
  2718  00000B                     ?_strncmp:
  2719                           	opt callstack 0
  2720  00000B                     ?_isspace:
  2721                           	opt callstack 0
  2722  00000B                     ?_islower:
  2723                           	opt callstack 0
  2724  00000B                     ?___wmul:
  2725                           	opt callstack 0
  2726  00000B                     ?___awdiv:
  2727                           	opt callstack 0
  2728  00000B                     ?___awmod:
  2729                           	opt callstack 0
  2730  00000B                     ?___fladd:
  2731                           	opt callstack 0
  2732  00000B                     ?___fldiv:
  2733                           	opt callstack 0
  2734  00000B                     ?___aldiv:
  2735                           	opt callstack 0
  2736  00000B                     ?___flneg:
  2737                           	opt callstack 0
  2738  00000B                     ?___fltol:
  2739                           	opt callstack 0
  2740  00000B                     ?___xxtofl:
  2741                           	opt callstack 0
  2742  00000B                     ?___aodiv:
  2743                           	opt callstack 0
  2744  00000B                     ?___aomod:
  2745                           	opt callstack 0
  2746  00000B                     ?___lodiv:
  2747                           	opt callstack 0
  2748  00000B                     ?___lomod:
  2749                           	opt callstack 0
  2750  00000B                     SPI_ExchangeByte@data:
  2751                           	opt callstack 0
  2752  00000B                     IOCB4_SetInterruptHandler@InterruptHandler:
  2753                           	opt callstack 0
  2754  00000B                     ADC_SetInterruptHandler@InterruptHandler:
  2755                           	opt callstack 0
  2756  00000B                     INT0_SetInterruptHandler@InterruptHandler:
  2757                           	opt callstack 0
  2758  00000B                     TMR2_SetInterruptHandler@InterruptHandler:
  2759                           	opt callstack 0
  2760  00000B                     ___wmul@multiplier:
  2761                           	opt callstack 0
  2762  00000B                     ___awdiv@dividend:
  2763                           	opt callstack 0
  2764  00000B                     ___awmod@dividend:
  2765                           	opt callstack 0
  2766  00000B                     isalpha@c:
  2767                           	opt callstack 0
  2768  00000B                     isdigit@c:
  2769                           	opt callstack 0
  2770  00000B                     isspace@c:
  2771                           	opt callstack 0
  2772  00000B                     isupper@c:
  2773                           	opt callstack 0
  2774  00000B                     fputc@c:
  2775                           	opt callstack 0
  2776  00000B                     strcpy@dest:
  2777                           	opt callstack 0
  2778  00000B                     strlen@s:
  2779                           	opt callstack 0
  2780  00000B                     strncmp@_l:
  2781                           	opt callstack 0
  2782  00000B                     islower@c:
  2783                           	opt callstack 0
  2784  00000B                     ___aldiv@dividend:
  2785                           	opt callstack 0
  2786  00000B                     ___fleq@ff1:
  2787                           	opt callstack 0
  2788  00000B                     ___flneg@f1:
  2789                           	opt callstack 0
  2790  00000B                     ___fltol@f1:
  2791                           	opt callstack 0
  2792  00000B                     ___fladd@b:
  2793                           	opt callstack 0
  2794  00000B                     ___fldiv@b:
  2795                           	opt callstack 0
  2796  00000B                     ___xxtofl@val:
  2797                           	opt callstack 0
  2798  00000B                     ___fpclassifyf@x:
  2799                           	opt callstack 0
  2800  00000B                     ___aodiv@dividend:
  2801                           	opt callstack 0
  2802  00000B                     ___aomod@dividend:
  2803                           	opt callstack 0
  2804  00000B                     ___lodiv@dividend:
  2805                           	opt callstack 0
  2806  00000B                     ___lomod@dividend:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 8 bytes @ 0xA
  2810  00000B                     	ds	1
  2811  00000C                     SPI_Open@spiUniqueConfiguration:
  2812                           	opt callstack 0
  2813  00000C                     msDelay@ms:
  2814                           	opt callstack 0
  2815  00000C                     lcd_send@value:
  2816                           	opt callstack 0
  2817                           
  2818                           ; 1 bytes @ 0xB
  2819  00000C                     	ds	1
  2820  00000D                     ??_isupper:
  2821  00000D                     ??_isalpha:
  2822  00000D                     ??_isdigit:
  2823  00000D                     ??_isspace:
  2824  00000D                     ??_islower:
  2825  00000D                     msDelay@k:
  2826                           	opt callstack 0
  2827  00000D                     lcd_send@dc:
  2828                           	opt callstack 0
  2829  00000D                     ___wmul@multiplicand:
  2830                           	opt callstack 0
  2831  00000D                     ___awdiv@divisor:
  2832                           	opt callstack 0
  2833  00000D                     ___awmod@divisor:
  2834                           	opt callstack 0
  2835  00000D                     fputc@fp:
  2836                           	opt callstack 0
  2837  00000D                     strcpy@src:
  2838                           	opt callstack 0
  2839  00000D                     strlen@a:
  2840                           	opt callstack 0
  2841  00000D                     strncmp@_r:
  2842                           	opt callstack 0
  2843                           
  2844                           ; 2 bytes @ 0xC
  2845  00000D                     	ds	1
  2846  00000E                     lcd_set_cursor_x@x:
  2847                           	opt callstack 0
  2848  00000E                     lcd_set_cursor_y@y:
  2849                           	opt callstack 0
  2850  00000E                     lcd_draw_pixel@color:
  2851                           	opt callstack 0
  2852                           
  2853                           ; 2 bytes @ 0xD
  2854  00000E                     	ds	1
  2855  00000F                     ??_fputc:
  2856  00000F                     ??___fpclassifyf:
  2857  00000F                     ??_strcpy:
  2858  00000F                     ??___fltol:
  2859  00000F                     ??___xxtofl:
  2860  00000F                     ___awdiv@counter:
  2861                           	opt callstack 0
  2862  00000F                     ___awmod@counter:
  2863                           	opt callstack 0
  2864  00000F                     ___wmul@product:
  2865                           	opt callstack 0
  2866  00000F                     strncmp@n:
  2867                           	opt callstack 0
  2868  00000F                     ___aldiv@divisor:
  2869                           	opt callstack 0
  2870  00000F                     ___fleq@ff2:
  2871                           	opt callstack 0
  2872  00000F                     ___fladd@a:
  2873                           	opt callstack 0
  2874  00000F                     ___fldiv@a:
  2875                           	opt callstack 0
  2876                           
  2877                           ; 4 bytes @ 0xE
  2878  00000F                     	ds	1
  2879  000010                     ___awdiv@sign:
  2880                           	opt callstack 0
  2881  000010                     ___awmod@sign:
  2882                           	opt callstack 0
  2883  000010                     lcd_set_cursor@x:
  2884                           	opt callstack 0
  2885                           
  2886                           ; 2 bytes @ 0xF
  2887  000010                     	ds	1
  2888  000011                     ??_strncmp:
  2889  000011                     ?_tolower:
  2890                           	opt callstack 0
  2891  000011                     ?_toupper:
  2892                           	opt callstack 0
  2893  000011                     _isspace$2406:
  2894                           	opt callstack 0
  2895  000011                     ___awdiv@quotient:
  2896                           	opt callstack 0
  2897  000011                     strcpy@s:
  2898                           	opt callstack 0
  2899  000011                     tolower@c:
  2900                           	opt callstack 0
  2901  000011                     toupper@c:
  2902                           	opt callstack 0
  2903                           
  2904                           ; 2 bytes @ 0x10
  2905  000011                     	ds	1
  2906  000012                     ?_atoi:
  2907                           	opt callstack 0
  2908  000012                     lcd_set_cursor@y:
  2909                           	opt callstack 0
  2910  000012                     atoi@s:
  2911                           	opt callstack 0
  2912  000012                     strncmp@l:
  2913                           	opt callstack 0
  2914                           
  2915                           ; 2 bytes @ 0x11
  2916  000012                     	ds	1
  2917  000013                     ??_tolower:
  2918  000013                     ??_toupper:
  2919  000013                     ??___fladd:
  2920  000013                     ??___fldiv:
  2921  000013                     ??___fleq:
  2922  000013                     ___aldiv@counter:
  2923                           	opt callstack 0
  2924  000013                     ___fltol@sign1:
  2925                           	opt callstack 0
  2926  000013                     ___xxtofl@sign:
  2927                           	opt callstack 0
  2928  000013                     ___fpclassifyf@e:
  2929                           	opt callstack 0
  2930  000013                     strcpy@d:
  2931                           	opt callstack 0
  2932  000013                     ___aodiv@divisor:
  2933                           	opt callstack 0
  2934  000013                     ___aomod@divisor:
  2935                           	opt callstack 0
  2936  000013                     ___lodiv@divisor:
  2937                           	opt callstack 0
  2938  000013                     ___lomod@divisor:
  2939                           	opt callstack 0
  2940                           
  2941                           ; 8 bytes @ 0x12
  2942  000013                     	ds	1
  2943  000014                     ??_atoi:
  2944  000014                     ?_stoa:
  2945                           	opt callstack 0
  2946  000014                     ___aldiv@sign:
  2947                           	opt callstack 0
  2948  000014                     ___fltol@exp1:
  2949                           	opt callstack 0
  2950  000014                     ___xxtofl@exp:
  2951                           	opt callstack 0
  2952  000014                     lcd_fill@bg_color:
  2953                           	opt callstack 0
  2954  000014                     lcd_draw_pixel_at@x:
  2955                           	opt callstack 0
  2956  000014                     lcd_draw_char@x:
  2957                           	opt callstack 0
  2958  000014                     stoa@fp:
  2959                           	opt callstack 0
  2960  000014                     fputs@s:
  2961                           	opt callstack 0
  2962  000014                     strncmp@r:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x13
  2966  000014                     	ds	1
  2967  000015                     ___aldiv@quotient:
  2968                           	opt callstack 0
  2969  000015                     ___xxtofl@arg:
  2970                           	opt callstack 0
  2971  000015                     ___fpclassifyf@u:
  2972                           	opt callstack 0
  2973                           
  2974                           ; 4 bytes @ 0x14
  2975  000015                     	ds	1
  2976  000016                     lcd_fill@height:
  2977                           	opt callstack 0
  2978  000016                     lcd_draw_pixel_at@y:
  2979                           	opt callstack 0
  2980  000016                     lcd_draw_char@y:
  2981                           	opt callstack 0
  2982  000016                     stoa@s:
  2983                           	opt callstack 0
  2984  000016                     fputs@fp:
  2985                           	opt callstack 0
  2986                           
  2987                           ; 2 bytes @ 0x15
  2988  000016                     	ds	1
  2989  000017                     ___fladd@signs:
  2990                           	opt callstack 0
  2991  000017                     _tolower$2489:
  2992                           	opt callstack 0
  2993  000017                     _toupper$2504:
  2994                           	opt callstack 0
  2995  000017                     ___fldiv@rem:
  2996                           	opt callstack 0
  2997                           
  2998                           ; 4 bytes @ 0x16
  2999  000017                     	ds	1
  3000  000018                     ??_stoa:
  3001  000018                     ___fladd@aexp:
  3002                           	opt callstack 0
  3003  000018                     fputs@c:
  3004                           	opt callstack 0
  3005  000018                     lcd_fill@width:
  3006                           	opt callstack 0
  3007  000018                     lcd_draw_pixel_at@color:
  3008                           	opt callstack 0
  3009  000018                     lcd_draw_char@fIndex:
  3010                           	opt callstack 0
  3011  000018                     atoi@neg:
  3012                           	opt callstack 0
  3013                           
  3014                           ; 2 bytes @ 0x17
  3015  000018                     	ds	1
  3016  000019                     ?___flmul:
  3017                           	opt callstack 0
  3018  000019                     ___fladd@bexp:
  3019                           	opt callstack 0
  3020  000019                     fputs@i:
  3021                           	opt callstack 0
  3022  000019                     ___flmul@b:
  3023                           	opt callstack 0
  3024  000019                     stoa@nuls:
  3025                           	opt callstack 0
  3026                           
  3027                           ; 7 bytes @ 0x18
  3028  000019                     	ds	1
  3029  00001A                     ___fladd@grs:
  3030                           	opt callstack 0
  3031  00001A                     lcd_draw_line@x0:
  3032                           	opt callstack 0
  3033  00001A                     lcd_draw_char@fg_color:
  3034                           	opt callstack 0
  3035  00001A                     _atoi$2366:
  3036                           	opt callstack 0
  3037                           
  3038                           ; 2 bytes @ 0x19
  3039  00001A                     	ds	1
  3040  00001B                     ?_pad:
  3041                           	opt callstack 0
  3042  00001B                     ___aodiv@counter:
  3043                           	opt callstack 0
  3044  00001B                     ___aomod@counter:
  3045                           	opt callstack 0
  3046  00001B                     ___lomod@counter:
  3047                           	opt callstack 0
  3048  00001B                     ___fldiv@sign:
  3049                           	opt callstack 0
  3050  00001B                     pad@fp:
  3051                           	opt callstack 0
  3052  00001B                     ___lodiv@quotient:
  3053                           	opt callstack 0
  3054                           
  3055                           ; 8 bytes @ 0x1A
  3056  00001B                     	ds	1
  3057  00001C                     ___aodiv@sign:
  3058                           	opt callstack 0
  3059  00001C                     ___aomod@sign:
  3060                           	opt callstack 0
  3061  00001C                     lcd_draw_line@y0:
  3062                           	opt callstack 0
  3063  00001C                     lcd_draw_char@bg_color:
  3064                           	opt callstack 0
  3065  00001C                     ___fldiv@new_exp:
  3066                           	opt callstack 0
  3067  00001C                     _atoi$2368:
  3068                           	opt callstack 0
  3069                           
  3070                           ; 2 bytes @ 0x1B
  3071  00001C                     	ds	1
  3072  00001D                     ?_abs:
  3073                           	opt callstack 0
  3074  00001D                     pad@buf:
  3075                           	opt callstack 0
  3076  00001D                     abs@a:
  3077                           	opt callstack 0
  3078  00001D                     ___flmul@a:
  3079                           	opt callstack 0
  3080  00001D                     ___aodiv@quotient:
  3081                           	opt callstack 0
  3082                           
  3083                           ; 8 bytes @ 0x1C
  3084  00001D                     	ds	1
  3085  00001E                     ??_lcd_draw_char:
  3086  00001E                     _atoi$2367:
  3087                           	opt callstack 0
  3088  00001E                     lcd_draw_line@x1:
  3089                           	opt callstack 0
  3090  00001E                     ___fldiv@grs:
  3091                           	opt callstack 0
  3092                           
  3093                           ; 4 bytes @ 0x1D
  3094  00001E                     	ds	1
  3095  00001F                     ??_abs:
  3096  00001F                     pad@p:
  3097                           	opt callstack 0
  3098  00001F                     atoi@n:
  3099                           	opt callstack 0
  3100                           
  3101                           ; 2 bytes @ 0x1E
  3102  00001F                     	ds	1
  3103  000020                     lcd_draw_line@y1:
  3104                           	opt callstack 0
  3105  000020                     stoa@i:
  3106                           	opt callstack 0
  3107                           
  3108                           ; 2 bytes @ 0x1F
  3109  000020                     	ds	1
  3110  000021                     ??___flmul:
  3111  000021                     ??_pad:
  3112                           
  3113                           ; 1 bytes @ 0x20
  3114  000021                     	ds	1
  3115  000022                     ___fldiv@bexp:
  3116                           	opt callstack 0
  3117  000022                     lcd_draw_line@color:
  3118                           	opt callstack 0
  3119  000022                     pad@i:
  3120                           	opt callstack 0
  3121  000022                     stoa@w:
  3122                           	opt callstack 0
  3123                           
  3124                           ; 2 bytes @ 0x21
  3125  000022                     	ds	1
  3126  000023                     ___lodiv@counter:
  3127                           	opt callstack 0
  3128  000023                     ___fldiv@aexp:
  3129                           	opt callstack 0
  3130                           
  3131                           ; 1 bytes @ 0x22
  3132  000023                     	ds	1
  3133  000024                     ??_lcd_draw_line:
  3134  000024                     ?_floorf:
  3135                           	opt callstack 0
  3136  000024                     pad@w:
  3137                           	opt callstack 0
  3138  000024                     stoa@cp:
  3139                           	opt callstack 0
  3140  000024                     floorf@x:
  3141                           	opt callstack 0
  3142                           
  3143                           ; 4 bytes @ 0x23
  3144  000024                     	ds	1
  3145  000025                     ___flmul@sign:
  3146                           	opt callstack 0
  3147  000025                     lcd_draw_line@sx:
  3148                           	opt callstack 0
  3149                           
  3150                           ; 2 bytes @ 0x24
  3151  000025                     	ds	1
  3152  000026                     ?_ctoa:
  3153                           	opt callstack 0
  3154  000026                     ?_dtoa:
  3155                           	opt callstack 0
  3156  000026                     ?_otoa:
  3157                           	opt callstack 0
  3158  000026                     ?_utoa:
  3159                           	opt callstack 0
  3160  000026                     ?_xtoa:
  3161                           	opt callstack 0
  3162  000026                     ___flmul@aexp:
  3163                           	opt callstack 0
  3164  000026                     ctoa@fp:
  3165                           	opt callstack 0
  3166  000026                     dtoa@fp:
  3167                           	opt callstack 0
  3168  000026                     otoa@fp:
  3169                           	opt callstack 0
  3170  000026                     stoa@p:
  3171                           	opt callstack 0
  3172  000026                     utoa@fp:
  3173                           	opt callstack 0
  3174  000026                     xtoa@fp:
  3175                           	opt callstack 0
  3176                           
  3177                           ; 2 bytes @ 0x25
  3178  000026                     	ds	1
  3179  000027                     lcd_draw_char@j:
  3180                           	opt callstack 0
  3181  000027                     lcd_draw_line@sy:
  3182                           	opt callstack 0
  3183  000027                     ___flmul@grs:
  3184                           	opt callstack 0
  3185                           
  3186                           ; 4 bytes @ 0x26
  3187  000027                     	ds	1
  3188  000028                     ??_floorf:
  3189  000028                     lcd_draw_char@k:
  3190                           	opt callstack 0
  3191  000028                     ctoa@c:
  3192                           	opt callstack 0
  3193  000028                     stoa@l:
  3194                           	opt callstack 0
  3195  000028                     dtoa@d:
  3196                           	opt callstack 0
  3197  000028                     otoa@d:
  3198                           	opt callstack 0
  3199  000028                     utoa@d:
  3200                           	opt callstack 0
  3201  000028                     xtoa@d:
  3202                           	opt callstack 0
  3203                           
  3204                           ; 8 bytes @ 0x27
  3205  000028                     	ds	1
  3206  000029                     lcd_draw_char@i:
  3207                           	opt callstack 0
  3208  000029                     lcd_draw_line@err:
  3209                           	opt callstack 0
  3210  000029                     ctoa@w:
  3211                           	opt callstack 0
  3212                           
  3213                           ; 2 bytes @ 0x28
  3214  000029                     	ds	1
  3215  00002A                     lcd_draw_string@x:
  3216                           	opt callstack 0
  3217                           
  3218                           ; 2 bytes @ 0x29
  3219  00002A                     	ds	1
  3220  00002B                     ___flmul@bexp:
  3221                           	opt callstack 0
  3222  00002B                     lcd_draw_line@e2:
  3223                           	opt callstack 0
  3224                           
  3225                           ; 2 bytes @ 0x2A
  3226  00002B                     	ds	1
  3227  00002C                     lcd_draw_string@y:
  3228                           	opt callstack 0
  3229  00002C                     ___flmul@prod:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 4 bytes @ 0x2B
  3233  00002C                     	ds	1
  3234  00002D                     lcd_draw_line@dx:
  3235                           	opt callstack 0
  3236                           
  3237                           ; 2 bytes @ 0x2C
  3238  00002D                     	ds	1
  3239  00002E                     lcd_draw_string@pS:
  3240                           	opt callstack 0
  3241  00002E                     floorf@m:
  3242                           	opt callstack 0
  3243                           
  3244                           ; 4 bytes @ 0x2D
  3245  00002E                     	ds	1
  3246  00002F                     lcd_draw_line@dy:
  3247                           	opt callstack 0
  3248                           
  3249                           ; 2 bytes @ 0x2E
  3250  00002F                     	ds	1
  3251  000030                     ??_dtoa:
  3252  000030                     ??_otoa:
  3253  000030                     ??_utoa:
  3254  000030                     xtoa@x:
  3255                           	opt callstack 0
  3256  000030                     lcd_draw_string@fg_color:
  3257                           	opt callstack 0
  3258  000030                     ___flmul@temp:
  3259                           	opt callstack 0
  3260                           
  3261                           ; 2 bytes @ 0x2F
  3262  000030                     	ds	1
  3263  000031                     ??_xtoa:
  3264                           
  3265                           ; 1 bytes @ 0x30
  3266  000031                     	ds	1
  3267  000032                     ?___flsub:
  3268                           	opt callstack 0
  3269  000032                     lcd_draw_string@bg_color:
  3270                           	opt callstack 0
  3271  000032                     floorf@e:
  3272                           	opt callstack 0
  3273  000032                     ___flge@ff1:
  3274                           	opt callstack 0
  3275  000032                     ___flsub@b:
  3276                           	opt callstack 0
  3277                           
  3278                           ; 4 bytes @ 0x31
  3279  000032                     	ds	2
  3280  000034                     ??_lcd_draw_string:
  3281  000034                     floorf@u:
  3282                           	opt callstack 0
  3283                           
  3284                           ; 4 bytes @ 0x33
  3285  000034                     	ds	2
  3286  000036                     ___flge@ff2:
  3287                           	opt callstack 0
  3288  000036                     ___flsub@a:
  3289                           	opt callstack 0
  3290                           
  3291                           ; 4 bytes @ 0x35
  3292  000036                     	ds	2
  3293  000038                     lcd_draw_string@k:
  3294                           	opt callstack 0
  3295  000038                     _dtoa$1698:
  3296                           	opt callstack 0
  3297  000038                     otoa@p:
  3298                           	opt callstack 0
  3299  000038                     utoa@p:
  3300                           	opt callstack 0
  3301                           
  3302                           ; 2 bytes @ 0x37
  3303  000038                     	ds	2
  3304  00003A                     ??___flge:
  3305  00003A                     lcd_draw_string@lIndex:
  3306                           	opt callstack 0
  3307  00003A                     dtoa@p:
  3308                           	opt callstack 0
  3309  00003A                     otoa@t:
  3310                           	opt callstack 0
  3311  00003A                     utoa@w:
  3312                           	opt callstack 0
  3313                           
  3314                           ; 2 bytes @ 0x39
  3315  00003A                     	ds	2
  3316  00003C                     dtoa@w:
  3317                           	opt callstack 0
  3318  00003C                     otoa@w:
  3319                           	opt callstack 0
  3320  00003C                     utoa@n:
  3321                           	opt callstack 0
  3322                           
  3323                           ; 8 bytes @ 0x3B
  3324  00003C                     	ds	2
  3325  00003E                     ?_efgtoa:
  3326                           	opt callstack 0
  3327  00003E                     dtoa@s:
  3328                           	opt callstack 0
  3329  00003E                     efgtoa@fp:
  3330                           	opt callstack 0
  3331  00003E                     otoa@n:
  3332                           	opt callstack 0
  3333                           
  3334                           ; 8 bytes @ 0x3D
  3335  00003E                     	ds	2
  3336  000040                     efgtoa@f:
  3337                           	opt callstack 0
  3338  000040                     dtoa@n:
  3339                           	opt callstack 0
  3340                           
  3341                           ; 8 bytes @ 0x3F
  3342  000040                     	ds	4
  3343  000044                     efgtoa@c:
  3344                           	opt callstack 0
  3345  000044                     utoa@i:
  3346                           	opt callstack 0
  3347                           
  3348                           ; 2 bytes @ 0x43
  3349  000044                     	ds	1
  3350  000045                     ??_efgtoa:
  3351                           
  3352                           ; 1 bytes @ 0x44
  3353  000045                     	ds	1
  3354  000046                     otoa@i:
  3355                           	opt callstack 0
  3356                           
  3357                           ; 2 bytes @ 0x45
  3358  000046                     	ds	2
  3359  000048                     dtoa@i:
  3360                           	opt callstack 0
  3361                           
  3362                           ; 2 bytes @ 0x47
  3363  000048                     	ds	2
  3364  00004A                     
  3365                           ; 1 bytes @ 0x49
  3366 ;;
  3367 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3368 ;;
  3369 ;; *************** function _main *****************
  3370 ;; Defined at:
  3371 ;;		line 53 in file "main.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels required when called:   14
  3391 ;; This function calls:
  3392 ;;		_INT0_SetInterruptHandler
  3393 ;;		_IOCB4_SetInterruptHandler
  3394 ;;		_SPI_Open
  3395 ;;		_SYSTEM_Initialize
  3396 ;;		_TMR2_SetInterruptHandler
  3397 ;;		___aldiv
  3398 ;;		___flmul
  3399 ;;		___xxtofl
  3400 ;;		_lcd_draw_line
  3401 ;;		_lcd_draw_string
  3402 ;;		_lcd_init
  3403 ;;		_snprintf
  3404 ;; This function is called by:
  3405 ;;		Startup code after reset
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text0
  3410  003720                     __ptext0:
  3411                           	opt callstack 0
  3412  003720                     _main:
  3413                           	opt callstack 17
  3414  003720                     
  3415                           ;main.c: 56:     SYSTEM_Initialize();
  3416  003720  EC12  F030         	call	_SYSTEM_Initialize	;wreg free
  3417                           
  3418                           ;main.c: 62:     IOCB4_SetInterruptHandler(acende_led);
  3419  003724  0E26               	movlw	low _acende_led
  3420  003726  6E0B               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3421  003728  0E5C               	movlw	high _acende_led
  3422  00372A  6E0C               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3423  00372C  ECBD  F030         	call	_IOCB4_SetInterruptHandler	;wreg free
  3424                           
  3425                           ;main.c: 63:     INT0_SetInterruptHandler(pulso_encoder);
  3426  003730  0E6E               	movlw	low _pulso_encoder
  3427  003732  6E0B               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3428  003734  0E60               	movlw	high _pulso_encoder
  3429  003736  6E0C               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3430  003738  ECC2  F030         	call	_INT0_SetInterruptHandler	;wreg free
  3431                           
  3432                           ;main.c: 64:     TMR2_SetInterruptHandler(led_inter);
  3433  00373C  0E64               	movlw	low _led_inter
  3434  00373E  6E0B               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  3435  003740  0E61               	movlw	high _led_inter
  3436  003742  6E0C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  3437  003744  ECB8  F030         	call	_TMR2_SetInterruptHandler	;wreg free
  3438  003748                     
  3439                           ;main.c: 65:     SPI_Open(SPI_DEFAULT);
  3440  003748  0E00               	movlw	0
  3441  00374A  EC11  F02B         	call	_SPI_Open
  3442  00374E                     
  3443                           ;main.c: 67:     lcd_init ();
  3444  00374E  ECEF  F016         	call	_lcd_init	;wreg free
  3445  003752                     
  3446                           ;main.c: 69:     lcd_draw_line(40,150,280,150,0xFFE0);
  3447  003752  0E00               	movlw	0
  3448  003754  6E1B               	movwf	(lcd_draw_line@x0+1)^0,c
  3449  003756  0E28               	movlw	40
  3450  003758  6E1A               	movwf	lcd_draw_line@x0^0,c
  3451  00375A  0E00               	movlw	0
  3452  00375C  6E1D               	movwf	(lcd_draw_line@y0+1)^0,c
  3453  00375E  0E96               	movlw	150
  3454  003760  6E1C               	movwf	lcd_draw_line@y0^0,c
  3455  003762  0E01               	movlw	1
  3456  003764  6E1F               	movwf	(lcd_draw_line@x1+1)^0,c
  3457  003766  0E18               	movlw	24
  3458  003768  6E1E               	movwf	lcd_draw_line@x1^0,c
  3459  00376A  0E00               	movlw	0
  3460  00376C  6E21               	movwf	(lcd_draw_line@y1+1)^0,c
  3461  00376E  0E96               	movlw	150
  3462  003770  6E20               	movwf	lcd_draw_line@y1^0,c
  3463  003772  0EFF               	movlw	255
  3464  003774  6E23               	movwf	(lcd_draw_line@color+1)^0,c
  3465  003776  0EE0               	movlw	224
  3466  003778  6E22               	movwf	lcd_draw_line@color^0,c
  3467  00377A  EC8D  F023         	call	_lcd_draw_line	;wreg free
  3468  00377E                     
  3469                           ;main.c: 71:     lcd_draw_string (45,155,"XC8 - Biblioteca - LCD - ILI9341",0x001F,0x000
      +                          0);
  3470  00377E  0E00               	movlw	0
  3471  003780  6E2B               	movwf	(lcd_draw_string@x+1)^0,c
  3472  003782  0E2D               	movlw	45
  3473  003784  6E2A               	movwf	lcd_draw_string@x^0,c
  3474  003786  0E00               	movlw	0
  3475  003788  6E2D               	movwf	(lcd_draw_string@y+1)^0,c
  3476  00378A  0E9B               	movlw	155
  3477  00378C  6E2C               	movwf	lcd_draw_string@y^0,c
  3478  00378E  0E63               	movlw	low STR_1
  3479  003790  6E2E               	movwf	lcd_draw_string@pS^0,c
  3480  003792  0EFF               	movlw	high STR_1
  3481  003794  6E2F               	movwf	(lcd_draw_string@pS+1)^0,c
  3482  003796  0E00               	movlw	0
  3483  003798  6E31               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3484  00379A  0E1F               	movlw	31
  3485  00379C  6E30               	movwf	lcd_draw_string@fg_color^0,c
  3486  00379E  0E00               	movlw	0
  3487  0037A0  6E33               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3488  0037A2  0E00               	movlw	0
  3489  0037A4  6E32               	movwf	lcd_draw_string@bg_color^0,c
  3490  0037A6  ECF3  F024         	call	_lcd_draw_string	;wreg free
  3491  0037AA                     
  3492                           ;main.c: 73:     lcd_draw_string (120,120,"PIC - SEEV",0x0400,0x0000);
  3493  0037AA  0E00               	movlw	0
  3494  0037AC  6E2B               	movwf	(lcd_draw_string@x+1)^0,c
  3495  0037AE  0E78               	movlw	120
  3496  0037B0  6E2A               	movwf	lcd_draw_string@x^0,c
  3497  0037B2  0E00               	movlw	0
  3498  0037B4  6E2D               	movwf	(lcd_draw_string@y+1)^0,c
  3499  0037B6  0E78               	movlw	120
  3500  0037B8  6E2C               	movwf	lcd_draw_string@y^0,c
  3501  0037BA  0EA6               	movlw	low STR_2
  3502  0037BC  6E2E               	movwf	lcd_draw_string@pS^0,c
  3503  0037BE  0EFF               	movlw	high STR_2
  3504  0037C0  6E2F               	movwf	(lcd_draw_string@pS+1)^0,c
  3505  0037C2  0E04               	movlw	4
  3506  0037C4  6E31               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3507  0037C6  0E00               	movlw	0
  3508  0037C8  6E30               	movwf	lcd_draw_string@fg_color^0,c
  3509  0037CA  0E00               	movlw	0
  3510  0037CC  6E33               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3511  0037CE  0E00               	movlw	0
  3512  0037D0  6E32               	movwf	lcd_draw_string@bg_color^0,c
  3513  0037D2  ECF3  F024         	call	_lcd_draw_string	;wreg free
  3514  0037D6                     
  3515                           ;main.c: 77:     (INTCONbits.GIE = 1);
  3516  0037D6  8EF2               	bsf	242,7,c	;volatile
  3517  0037D8                     l9578:
  3518                           
  3519                           ;main.c: 90:     {;main.c: 91:         percentagem = codigo_digital*0.0244200244200244;
  3520  0037D8  C0F6  F00B         	movff	_codigo_digital,___xxtofl@val
  3521  0037DC  C0F7  F00C         	movff	_codigo_digital+1,___xxtofl@val+1
  3522  0037E0  6A0D               	clrf	(___xxtofl@val+2)^0,c
  3523  0037E2  6A0E               	clrf	(___xxtofl@val+3)^0,c
  3524  0037E4  0E00               	movlw	0
  3525  0037E6  ECA4  F01F         	call	___xxtofl
  3526  0037EA  C00B  F019         	movff	?___xxtofl,___flmul@b
  3527  0037EE  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  3528  0037F2  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  3529  0037F6  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  3530  0037FA  0E81               	movlw	129
  3531  0037FC  6E1D               	movwf	___flmul@a^0,c
  3532  0037FE  0E0C               	movlw	12
  3533  003800  6E1E               	movwf	(___flmul@a+1)^0,c
  3534  003802  0EC8               	movlw	200
  3535  003804  6E1F               	movwf	(___flmul@a+2)^0,c
  3536  003806  0E3C               	movlw	60
  3537  003808  6E20               	movwf	(___flmul@a+3)^0,c
  3538  00380A  EC0D  F013         	call	___flmul	;wreg free
  3539  00380E  C019  F0E8         	movff	?___flmul,_percentagem
  3540  003812  C01A  F0E9         	movff	?___flmul+1,_percentagem+1
  3541  003816  C01B  F0EA         	movff	?___flmul+2,_percentagem+2
  3542  00381A  C01C  F0EB         	movff	?___flmul+3,_percentagem+3
  3543  00381E                     
  3544                           ;main.c: 92:         rpm=4687500/ticks;
  3545  00381E  0E8C               	movlw	140
  3546  003820  6E0B               	movwf	___aldiv@dividend^0,c
  3547  003822  0E86               	movlw	134
  3548  003824  6E0C               	movwf	(___aldiv@dividend+1)^0,c
  3549  003826  0E47               	movlw	71
  3550  003828  6E0D               	movwf	(___aldiv@dividend+2)^0,c
  3551  00382A  0E00               	movlw	0
  3552  00382C  6E0E               	movwf	(___aldiv@dividend+3)^0,c
  3553  00382E  C0F8  F00F         	movff	_ticks,___aldiv@divisor
  3554  003832  C0F9  F010         	movff	_ticks+1,___aldiv@divisor+1
  3555  003836  6A11               	clrf	(___aldiv@divisor+2)^0,c
  3556  003838  6A12               	clrf	(___aldiv@divisor+3)^0,c
  3557  00383A  ECA7  F026         	call	___aldiv	;wreg free
  3558  00383E  C00B  F0F2         	movff	?___aldiv,_rpm
  3559  003842  C00C  F0F3         	movff	?___aldiv+1,_rpm+1
  3560  003846                     
  3561                           ;main.c: 94:         snprintf(string_rpm,sizeof(string_rpm),"RPM= %d      ",rpm);
  3562  003846  0E64               	movlw	low _string_rpm
  3563  003848  0101               	movlb	1	; () banked
  3564  00384A  6FBC               	movwf	snprintf@s& (0+255),b
  3565  00384C  0E02               	movlw	high _string_rpm
  3566  00384E  6FBD               	movwf	(snprintf@s+1)& (0+255),b
  3567  003850  0E00               	movlw	0
  3568  003852  6FBF               	movwf	(snprintf@n+1)& (0+255),b
  3569  003854  0E64               	movlw	100
  3570  003856  6FBE               	movwf	snprintf@n& (0+255),b
  3571  003858  0E98               	movlw	low STR_3
  3572  00385A  6FC0               	movwf	snprintf@fmt& (0+255),b
  3573  00385C  0EFF               	movlw	high STR_3
  3574  00385E  6FC1               	movwf	(snprintf@fmt+1)& (0+255),b
  3575  003860  C0F2  F1C2         	movff	_rpm,?_snprintf+6
  3576  003864  C0F3  F1C3         	movff	_rpm+1,?_snprintf+7
  3577  003868  EC33  F02F         	call	_snprintf	;wreg free
  3578  00386C                     
  3579                           ;main.c: 95:         lcd_draw_string (40,10,string_rpm,0x0400,0x0000);
  3580  00386C  0E00               	movlw	0
  3581  00386E  6E2B               	movwf	(lcd_draw_string@x+1)^0,c
  3582  003870  0E28               	movlw	40
  3583  003872  6E2A               	movwf	lcd_draw_string@x^0,c
  3584  003874  0E00               	movlw	0
  3585  003876  6E2D               	movwf	(lcd_draw_string@y+1)^0,c
  3586  003878  0E0A               	movlw	10
  3587  00387A  6E2C               	movwf	lcd_draw_string@y^0,c
  3588  00387C  0E64               	movlw	low _string_rpm
  3589  00387E  6E2E               	movwf	lcd_draw_string@pS^0,c
  3590  003880  0E02               	movlw	high _string_rpm
  3591  003882  6E2F               	movwf	(lcd_draw_string@pS+1)^0,c
  3592  003884  0E04               	movlw	4
  3593  003886  6E31               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3594  003888  0E00               	movlw	0
  3595  00388A  6E30               	movwf	lcd_draw_string@fg_color^0,c
  3596  00388C  0E00               	movlw	0
  3597  00388E  6E33               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3598  003890  0E00               	movlw	0
  3599  003892  6E32               	movwf	lcd_draw_string@bg_color^0,c
  3600  003894  ECF3  F024         	call	_lcd_draw_string	;wreg free
  3601  003898                     
  3602                           ;main.c: 97:         snprintf(string,sizeof(string),"percentagem = %.f  ",percentagem);
  3603  003898  0E08               	movlw	low _string
  3604  00389A  0101               	movlb	1	; () banked
  3605  00389C  6FBC               	movwf	snprintf@s& (0+255),b
  3606  00389E  0E01               	movlw	high _string
  3607  0038A0  6FBD               	movwf	(snprintf@s+1)& (0+255),b
  3608  0038A2  0E00               	movlw	0
  3609  0038A4  6FBF               	movwf	(snprintf@n+1)& (0+255),b
  3610  0038A6  0E64               	movlw	100
  3611  0038A8  6FBE               	movwf	snprintf@n& (0+255),b
  3612  0038AA  0E84               	movlw	low STR_4
  3613  0038AC  6FC0               	movwf	snprintf@fmt& (0+255),b
  3614  0038AE  0EFF               	movlw	high STR_4
  3615  0038B0  6FC1               	movwf	(snprintf@fmt+1)& (0+255),b
  3616  0038B2  C0E8  F1C2         	movff	_percentagem,?_snprintf+6
  3617  0038B6  C0E9  F1C3         	movff	_percentagem+1,?_snprintf+7
  3618  0038BA  C0EA  F1C4         	movff	_percentagem+2,?_snprintf+8
  3619  0038BE  C0EB  F1C5         	movff	_percentagem+3,?_snprintf+9
  3620  0038C2  EC33  F02F         	call	_snprintf	;wreg free
  3621  0038C6                     
  3622                           ;main.c: 98:         lcd_draw_string (150,10,string,0x0400,0x0000);
  3623  0038C6  0E00               	movlw	0
  3624  0038C8  6E2B               	movwf	(lcd_draw_string@x+1)^0,c
  3625  0038CA  0E96               	movlw	150
  3626  0038CC  6E2A               	movwf	lcd_draw_string@x^0,c
  3627  0038CE  0E00               	movlw	0
  3628  0038D0  6E2D               	movwf	(lcd_draw_string@y+1)^0,c
  3629  0038D2  0E0A               	movlw	10
  3630  0038D4  6E2C               	movwf	lcd_draw_string@y^0,c
  3631  0038D6  0E08               	movlw	low _string
  3632  0038D8  6E2E               	movwf	lcd_draw_string@pS^0,c
  3633  0038DA  0E01               	movlw	high _string
  3634  0038DC  6E2F               	movwf	(lcd_draw_string@pS+1)^0,c
  3635  0038DE  0E04               	movlw	4
  3636  0038E0  6E31               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3637  0038E2  0E00               	movlw	0
  3638  0038E4  6E30               	movwf	lcd_draw_string@fg_color^0,c
  3639  0038E6  0E00               	movlw	0
  3640  0038E8  6E33               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3641  0038EA  0E00               	movlw	0
  3642  0038EC  6E32               	movwf	lcd_draw_string@bg_color^0,c
  3643  0038EE  ECF3  F024         	call	_lcd_draw_string	;wreg free
  3644  0038F2                     
  3645                           ;main.c: 100:         snprintf(steste,sizeof(steste),"TESTE %d",teste);
  3646  0038F2  0E00               	movlw	low _steste
  3647  0038F4  0101               	movlb	1	; () banked
  3648  0038F6  6FBC               	movwf	snprintf@s& (0+255),b
  3649  0038F8  0E02               	movlw	high _steste
  3650  0038FA  6FBD               	movwf	(snprintf@s+1)& (0+255),b
  3651  0038FC  0E00               	movlw	0
  3652  0038FE  6FBF               	movwf	(snprintf@n+1)& (0+255),b
  3653  003900  0E64               	movlw	100
  3654  003902  6FBE               	movwf	snprintf@n& (0+255),b
  3655  003904  0EB1               	movlw	low STR_5
  3656  003906  6FC0               	movwf	snprintf@fmt& (0+255),b
  3657  003908  0EFF               	movlw	high STR_5
  3658  00390A  6FC1               	movwf	(snprintf@fmt+1)& (0+255),b
  3659  00390C  C0F0  F1C2         	movff	_teste,?_snprintf+6
  3660  003910  C0F1  F1C3         	movff	_teste+1,?_snprintf+7
  3661  003914  EC33  F02F         	call	_snprintf	;wreg free
  3662  003918                     
  3663                           ;main.c: 101:         lcd_draw_string (40,50,steste,0x0400,0x0000);
  3664  003918  0E00               	movlw	0
  3665  00391A  6E2B               	movwf	(lcd_draw_string@x+1)^0,c
  3666  00391C  0E28               	movlw	40
  3667  00391E  6E2A               	movwf	lcd_draw_string@x^0,c
  3668  003920  0E00               	movlw	0
  3669  003922  6E2D               	movwf	(lcd_draw_string@y+1)^0,c
  3670  003924  0E32               	movlw	50
  3671  003926  6E2C               	movwf	lcd_draw_string@y^0,c
  3672  003928  0E00               	movlw	low _steste
  3673  00392A  6E2E               	movwf	lcd_draw_string@pS^0,c
  3674  00392C  0E02               	movlw	high _steste
  3675  00392E  6E2F               	movwf	(lcd_draw_string@pS+1)^0,c
  3676  003930  0E04               	movlw	4
  3677  003932  6E31               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3678  003934  0E00               	movlw	0
  3679  003936  6E30               	movwf	lcd_draw_string@fg_color^0,c
  3680  003938  0E00               	movlw	0
  3681  00393A  6E33               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3682  00393C  0E00               	movlw	0
  3683  00393E  6E32               	movwf	lcd_draw_string@bg_color^0,c
  3684  003940  ECF3  F024         	call	_lcd_draw_string	;wreg free
  3685  003944  EFEC  F01B         	goto	l9578
  3686  003948  EF5E  F000         	goto	start
  3687  00394C                     __end_of_main:
  3688                           	opt callstack 0
  3689                           
  3690 ;; *************** function _snprintf *****************
  3691 ;; Defined at:
  3692 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  s               2    0[BANK1 ] PTR unsigned char 
  3695 ;;		 -> steste(100), string(100), string_rpm(100), 
  3696 ;;  n               2    2[BANK1 ] unsigned int 
  3697 ;;  fmt             2    4[BANK1 ] PTR const unsigned char 
  3698 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  ap              2  134[BANK0 ] PTR void [1]
  3701 ;;		 -> ?_snprintf(2), 
  3702 ;;  ret             2    0        int 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2    0[BANK1 ] int 
  3705 ;; Registers used:
  3706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3712 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;Total ram usage:       14 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:   13
  3719 ;; This function calls:
  3720 ;;		_vsnprintf
  3721 ;; This function is called by:
  3722 ;;		_main
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text1
  3727  005E66                     __ptext1:
  3728                           	opt callstack 0
  3729  005E66                     _snprintf:
  3730                           	opt callstack 17
  3731  005E66  0EC2               	movlw	low (?_snprintf+6)
  3732  005E68  0100               	movlb	0	; () banked
  3733  005E6A  6FE6               	movwf	snprintf@ap& (0+255),b
  3734  005E6C  0E01               	movlw	high (?_snprintf+6)
  3735  005E6E  6FE7               	movwf	(snprintf@ap+1)& (0+255),b
  3736  005E70                     
  3737                           ; BSR set to: 0
  3738  005E70  C1BC  F0CE         	movff	snprintf@s,vsnprintf@s
  3739  005E74  C1BD  F0CF         	movff	snprintf@s+1,vsnprintf@s+1
  3740  005E78  C1BE  F0D0         	movff	snprintf@n,vsnprintf@n
  3741  005E7C  C1BF  F0D1         	movff	snprintf@n+1,vsnprintf@n+1
  3742  005E80  C1C0  F0D2         	movff	snprintf@fmt,vsnprintf@fmt
  3743  005E84  C1C1  F0D3         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3744  005E88  0EE6               	movlw	low snprintf@ap
  3745  005E8A  6FD4               	movwf	vsnprintf@ap& (0+255),b
  3746  005E8C  0E00               	movlw	high snprintf@ap
  3747  005E8E  6FD5               	movwf	(vsnprintf@ap+1)& (0+255),b
  3748  005E90  EC1F  F026         	call	_vsnprintf	;wreg free
  3749  005E94  0012               	return		;funcret
  3750  005E96                     __end_of_snprintf:
  3751                           	opt callstack 0
  3752                           
  3753 ;; *************** function _vsnprintf *****************
  3754 ;; Defined at:
  3755 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  s               2  110[BANK0 ] PTR unsigned char 
  3758 ;;		 -> steste(100), string(100), string_rpm(100), 
  3759 ;;  n               2  112[BANK0 ] unsigned int 
  3760 ;;  fmt             2  114[BANK0 ] PTR const unsigned char 
  3761 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3762 ;;  ap              2  116[BANK0 ] PTR PTR void 
  3763 ;;		 -> snprintf@ap(2), 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  f               6  126[BANK0 ] struct _IO_FILE
  3766 ;;  cnt             2  124[BANK0 ] int 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  2  110[BANK0 ] int 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3776 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3778 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;Total ram usage:       22 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:   12
  3783 ;; This function calls:
  3784 ;;		_vfprintf
  3785 ;; This function is called by:
  3786 ;;		_snprintf
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text2
  3791  004C3E                     __ptext2:
  3792                           	opt callstack 0
  3793  004C3E                     _vsnprintf:
  3794                           	opt callstack 17
  3795  004C3E  0E80               	movlw	128
  3796  004C40  0100               	movlb	0	; () banked
  3797  004C42  5DD1               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3798  004C44  A0D8               	btfss	status,0,c
  3799  004C46  EF27  F026         	goto	u12331
  3800  004C4A  EF29  F026         	goto	u12330
  3801  004C4E                     u12331:
  3802  004C4E  EF31  F026         	goto	l9534
  3803  004C52                     u12330:
  3804  004C52                     
  3805                           ; BSR set to: 0
  3806  004C52  0E00               	movlw	0
  3807  004C54  6FED               	movwf	(_errno+1)& (0+255),b
  3808  004C56  0E4B               	movlw	75
  3809  004C58  6FEC               	movwf	_errno& (0+255),b
  3810  004C5A                     
  3811                           ; BSR set to: 0
  3812  004C5A  69CE               	setf	?_vsnprintf& (0+255),b
  3813  004C5C  69CF               	setf	(?_vsnprintf+1)& (0+255),b
  3814  004C5E  EFA6  F026         	goto	l1815
  3815  004C62                     l9534:
  3816                           
  3817                           ; BSR set to: 0
  3818  004C62  C0CE  F0DE         	movff	vsnprintf@s,vsnprintf@f
  3819  004C66  C0CF  F0DF         	movff	vsnprintf@s+1,vsnprintf@f+1
  3820  004C6A  51D1               	movf	(vsnprintf@n+1)& (0+255),w,b
  3821  004C6C  E109               	bnz	u12340
  3822  004C6E  0E02               	movlw	2
  3823  004C70  5DD0               	subwf	vsnprintf@n& (0+255),w,b
  3824  004C72  A0D8               	btfss	status,0,c
  3825  004C74  EF3E  F026         	goto	u12341
  3826  004C78  EF40  F026         	goto	u12340
  3827  004C7C                     u12341:
  3828  004C7C  EF4C  F026         	goto	l9540
  3829  004C80                     u12340:
  3830  004C80                     
  3831                           ; BSR set to: 0
  3832  004C80  0EFF               	movlw	255
  3833  004C82  25D0               	addwf	vsnprintf@n& (0+255),w,b
  3834  004C84  6FE2               	movwf	(vsnprintf@f+4)& (0+255),b
  3835  004C86  0EFF               	movlw	255
  3836  004C88  21D1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3837  004C8A  6FE3               	movwf	(vsnprintf@f+5)& (0+255),b
  3838  004C8C                     
  3839                           ; BSR set to: 0
  3840  004C8C  0E00               	movlw	0
  3841  004C8E  6FE1               	movwf	(vsnprintf@f+3)& (0+255),b
  3842  004C90  0E00               	movlw	0
  3843  004C92  6FE0               	movwf	(vsnprintf@f+2)& (0+255),b
  3844  004C94  EF54  F026         	goto	l9542
  3845  004C98                     l9540:
  3846                           
  3847                           ; BSR set to: 0
  3848  004C98  0E00               	movlw	0
  3849  004C9A  6FE3               	movwf	(vsnprintf@f+5)& (0+255),b
  3850  004C9C  0E01               	movlw	1
  3851  004C9E  6FE2               	movwf	(vsnprintf@f+4)& (0+255),b
  3852  004CA0  0E00               	movlw	0
  3853  004CA2  6FE1               	movwf	(vsnprintf@f+3)& (0+255),b
  3854  004CA4  0E01               	movlw	1
  3855  004CA6  6FE0               	movwf	(vsnprintf@f+2)& (0+255),b
  3856  004CA8                     l9542:
  3857                           
  3858                           ; BSR set to: 0
  3859  004CA8  0EDE               	movlw	low vsnprintf@f
  3860  004CAA  6FC6               	movwf	vfprintf@fp& (0+255),b
  3861  004CAC  0E00               	movlw	high vsnprintf@f
  3862  004CAE  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
  3863  004CB0  C0D2  F0C8         	movff	vsnprintf@fmt,vfprintf@fmt
  3864  004CB4  C0D3  F0C9         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3865  004CB8  C0D4  F0CA         	movff	vsnprintf@ap,vfprintf@ap
  3866  004CBC  C0D5  F0CB         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3867  004CC0  ECFF  F02B         	call	_vfprintf	;wreg free
  3868  004CC4  C0C6  F0DC         	movff	?_vfprintf,vsnprintf@cnt
  3869  004CC8  C0C7  F0DD         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3870  004CCC  0100               	movlb	0	; () banked
  3871  004CCE  51D0               	movf	vsnprintf@n& (0+255),w,b
  3872  004CD0  11D1               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3873  004CD2  B4D8               	btfsc	status,2,c
  3874  004CD4  EF6E  F026         	goto	u12351
  3875  004CD8  EF70  F026         	goto	u12350
  3876  004CDC                     u12351:
  3877  004CDC  EFA2  F026         	goto	l9554
  3878  004CE0                     u12350:
  3879  004CE0                     
  3880                           ; BSR set to: 0
  3881  004CE0  BFDD               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3882  004CE2  EF75  F026         	goto	u12361
  3883  004CE6  EF77  F026         	goto	u12360
  3884  004CEA                     u12361:
  3885  004CEA  EFA2  F026         	goto	l9554
  3886  004CEE                     u12360:
  3887  004CEE                     
  3888                           ; BSR set to: 0
  3889  004CEE  0EFF               	movlw	255
  3890  004CF0  6FD6               	movwf	??_vsnprintf& (0+255),b
  3891  004CF2  0EFF               	movlw	255
  3892  004CF4  6FD7               	movwf	(??_vsnprintf+1)& (0+255),b
  3893  004CF6  C0D0  F0D8         	movff	vsnprintf@n,??_vsnprintf+2
  3894  004CFA  C0D1  F0D9         	movff	vsnprintf@n+1,??_vsnprintf+3
  3895  004CFE  51D6               	movf	??_vsnprintf& (0+255),w,b
  3896  004D00  27D8               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3897  004D02  51D7               	movf	(??_vsnprintf+1)& (0+255),w,b
  3898  004D04  23D9               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3899  004D06  51D8               	movf	(??_vsnprintf+2)& (0+255),w,b
  3900  004D08  5DDC               	subwf	vsnprintf@cnt& (0+255),w,b
  3901  004D0A  51D9               	movf	(??_vsnprintf+3)& (0+255),w,b
  3902  004D0C  59DD               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3903  004D0E  A0D8               	btfss	status,0,c
  3904  004D10  EF8C  F026         	goto	u12371
  3905  004D14  EF8E  F026         	goto	u12370
  3906  004D18                     u12371:
  3907  004D18  EF96  F026         	goto	l1820
  3908  004D1C                     u12370:
  3909  004D1C                     
  3910                           ; BSR set to: 0
  3911  004D1C  0EFF               	movlw	255
  3912  004D1E  25D0               	addwf	vsnprintf@n& (0+255),w,b
  3913  004D20  6FDA               	movwf	_vsnprintf$2536& (0+255),b
  3914  004D22  0EFF               	movlw	255
  3915  004D24  21D1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3916  004D26  6FDB               	movwf	(_vsnprintf$2536+1)& (0+255),b
  3917  004D28  EF9A  F026         	goto	l9552
  3918  004D2C                     l1820:
  3919                           
  3920                           ; BSR set to: 0
  3921  004D2C  C0DC  F0DA         	movff	vsnprintf@cnt,_vsnprintf$2536
  3922  004D30  C0DD  F0DB         	movff	vsnprintf@cnt+1,_vsnprintf$2536+1
  3923  004D34                     l9552:
  3924                           
  3925                           ; BSR set to: 0
  3926  004D34  51DA               	movf	_vsnprintf$2536& (0+255),w,b
  3927  004D36  25CE               	addwf	vsnprintf@s& (0+255),w,b
  3928  004D38  6ED9               	movwf	fsr2l,c
  3929  004D3A  51DB               	movf	(_vsnprintf$2536+1)& (0+255),w,b
  3930  004D3C  21CF               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3931  004D3E  6EDA               	movwf	fsr2h,c
  3932  004D40  0E00               	movlw	0
  3933  004D42  6EDF               	movwf	indf2,c
  3934  004D44                     l9554:
  3935                           
  3936                           ; BSR set to: 0
  3937  004D44  C0DC  F0CE         	movff	vsnprintf@cnt,?_vsnprintf
  3938  004D48  C0DD  F0CF         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3939  004D4C                     l1815:
  3940                           
  3941                           ; BSR set to: 0
  3942  004D4C  0012               	return		;funcret
  3943  004D4E                     __end_of_vsnprintf:
  3944                           	opt callstack 0
  3945                           
  3946 ;; *************** function _vfprintf *****************
  3947 ;; Defined at:
  3948 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  fp              2  102[BANK0 ] PTR struct _IO_FILE
  3951 ;;		 -> vsnprintf@f(6), 
  3952 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  3953 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3954 ;;  ap              2  106[BANK0 ] PTR PTR void 
  3955 ;;		 -> snprintf@ap(2), 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  3958 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2  102[BANK0 ] int 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3968 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;Total ram usage:        8 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:   11
  3975 ;; This function calls:
  3976 ;;		_vfpfcnvrt
  3977 ;; This function is called by:
  3978 ;;		_vsnprintf
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text3
  3983  0057FE                     __ptext3:
  3984                           	opt callstack 0
  3985  0057FE                     _vfprintf:
  3986                           	opt callstack 17
  3987  0057FE                     
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3989  0057FE  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  3990  005802  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3991  005806                     
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3993  005806  0E00               	movlw	0
  3994  005808  6E4B               	movwf	(_nout+1)^0,c
  3995  00580A  0E00               	movlw	0
  3996  00580C  6E4A               	movwf	_nout^0,c
  3997                           
  3998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3999  00580E  EF1D  F02C         	goto	l9524
  4000  005812                     l9522:
  4001                           
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4003  005812  C0C6  F098         	movff	vfprintf@fp,vfpfcnvrt@fp
  4004  005816  C0C7  F099         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4005  00581A  0ECC               	movlw	low vfprintf@cfmt
  4006  00581C  0100               	movlb	0	; () banked
  4007  00581E  6F9A               	movwf	vfpfcnvrt@fmt& (0+255),b
  4008  005820  0E00               	movlw	high vfprintf@cfmt
  4009  005822  6F9B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4010  005824  C0CA  F09C         	movff	vfprintf@ap,vfpfcnvrt@ap
  4011  005828  C0CB  F09D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4012  00582C  EC60  F000         	call	_vfpfcnvrt	;wreg free
  4013  005830  0100               	movlb	0	; () banked
  4014  005832  5198               	movf	?_vfpfcnvrt& (0+255),w,b
  4015  005834  264A               	addwf	_nout^0,f,c
  4016  005836  5199               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4017  005838  224B               	addwfc	(_nout+1)^0,f,c
  4018  00583A                     l9524:
  4019                           
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4021  00583A  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  4022  00583E  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4023  005842                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4024  005842  6AF8               	clrf	tblptru,c
  4025  005844                     	endif
  4026  005844                     	if	0	;tblptru may be non-zero
  4027  005844                     	endif
  4028  005844  0008               	tblrd		*
  4029  005846  50F5               	movf	tablat,w,c
  4030  005848  0900               	iorlw	0
  4031  00584A  A4D8               	btfss	status,2,c
  4032  00584C  EF2A  F02C         	goto	u12321
  4033  005850  EF2C  F02C         	goto	u12320
  4034  005854                     u12321:
  4035  005854  EF09  F02C         	goto	l9522
  4036  005858                     u12320:
  4037  005858                     
  4038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4039  005858  C04A  F0C6         	movff	_nout,?_vfprintf
  4040  00585C  C04B  F0C7         	movff	_nout+1,?_vfprintf+1
  4041  005860  0012               	return		;funcret
  4042  005862                     __end_of_vfprintf:
  4043                           	opt callstack 0
  4044                           
  4045 ;; *************** function _vfpfcnvrt *****************
  4046 ;; Defined at:
  4047 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  4050 ;;		 -> vsnprintf@f(6), 
  4051 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  4052 ;;		 -> vfprintf@cfmt(2), 
  4053 ;;  ap              2   60[BANK0 ] PTR PTR void 
  4054 ;;		 -> snprintf@ap(2), 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  llu             8   94[BANK0 ] unsigned long long 
  4057 ;;  ll              8   83[BANK0 ] long long 
  4058 ;;  f               4   76[BANK0 ] long long 
  4059 ;;  ct              3   80[BANK0 ] unsigned char [3]
  4060 ;;  vp              2   91[BANK0 ] PTR void 
  4061 ;;		 -> ?_snprintf(2), ticks(2), 
  4062 ;;  done            2   68[BANK0 ] int 
  4063 ;;  cp              2   66[BANK0 ] PTR unsigned char 
  4064 ;;		 -> ?_snprintf(2), ticks(2), 
  4065 ;;  i               2    0        int 
  4066 ;;  c               1   93[BANK0 ] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2   56[BANK0 ] int 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4076 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;Total ram usage:       46 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:   10
  4083 ;; This function calls:
  4084 ;;		_atoi
  4085 ;;		_ctoa
  4086 ;;		_dtoa
  4087 ;;		_efgtoa
  4088 ;;		_fputc
  4089 ;;		_isdigit
  4090 ;;		_isupper
  4091 ;;		_otoa
  4092 ;;		_stoa
  4093 ;;		_strncmp
  4094 ;;		_tolower
  4095 ;;		_utoa
  4096 ;;		_xtoa
  4097 ;; This function is called by:
  4098 ;;		_vfprintf
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text4
  4103  0000C0                     __ptext4:
  4104                           	opt callstack 0
  4105  0000C0                     _vfpfcnvrt:
  4106                           	opt callstack 17
  4107  0000C0                     
  4108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4109  0000C0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4110  0000C4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4111  0000C8  CFDE FFF6          	movff	postinc2,tblptrl
  4112  0000CC  CFDD FFF7          	movff	postdec2,tblptrh
  4113  0000D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4114  0000D0  6AF8               	clrf	tblptru,c
  4115  0000D2                     	endif
  4116  0000D2                     	if	0	;tblptru may be non-zero
  4117  0000D2                     	endif
  4118  0000D2  0008               	tblrd		*
  4119  0000D4  50F5               	movf	tablat,w,c
  4120  0000D6  0A25               	xorlw	37
  4121  0000D8  A4D8               	btfss	status,2,c
  4122  0000DA  EF71  F000         	goto	u11801
  4123  0000DE  EF73  F000         	goto	u11800
  4124  0000E2                     u11801:
  4125  0000E2  EFB7  F00A         	goto	l9502
  4126  0000E6                     u11800:
  4127  0000E6                     
  4128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4129  0000E6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4130  0000EA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4131  0000EE  2ADE               	incf	postinc2,f,c
  4132  0000F0  0E00               	movlw	0
  4133  0000F2  22DD               	addwfc	postdec2,f,c
  4134  0000F4                     
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4136  0000F4  0E00               	movlw	0
  4137  0000F6  6E4D               	movwf	(_width+1)^0,c
  4138  0000F8  0E00               	movlw	0
  4139  0000FA  6E4C               	movwf	_width^0,c
  4140  0000FC  C04C  F050         	movff	_width,_flags
  4141  000100  C04D  F051         	movff	_width+1,_flags+1
  4142  000104                     
  4143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4144  000104  684E               	setf	_prec^0,c
  4145  000106  684F               	setf	(_prec+1)^0,c
  4146  000108                     
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4148  000108  0E00               	movlw	0
  4149  00010A  0100               	movlb	0	; () banked
  4150  00010C  6FA5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4151  00010E  0E00               	movlw	0
  4152  000110  6FA4               	movwf	vfpfcnvrt@done& (0+255),b
  4153                           
  4154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4155  000112  EFD2  F000         	goto	l9182
  4156  000116                     l9156:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4160  000116  8050               	bsf	_flags^0,0,c
  4161  000118                     l9158:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4165  000118  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4166  00011C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4167  000120  2ADE               	incf	postinc2,f,c
  4168  000122  0E00               	movlw	0
  4169  000124  22DD               	addwfc	postdec2,f,c
  4170                           
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4172  000126  EFD2  F000         	goto	l9182
  4173  00012A                     l9160:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4177  00012A  8250               	bsf	_flags^0,1,c
  4178  00012C  EF8C  F000         	goto	l9158
  4179  000130                     l9164:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4183  000130  8450               	bsf	_flags^0,2,c
  4184  000132  EF8C  F000         	goto	l9158
  4185  000136                     l9168:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4189  000136  8650               	bsf	_flags^0,3,c
  4190  000138  EF8C  F000         	goto	l9158
  4191  00013C                     l9172:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4195  00013C  8850               	bsf	_flags^0,4,c
  4196  00013E  EF8C  F000         	goto	l9158
  4197  000142                     l9176:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4201  000142  0E00               	movlw	0
  4202  000144  6FA5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4203  000146  0E01               	movlw	1
  4204  000148  6FA4               	movwf	vfpfcnvrt@done& (0+255),b
  4205                           
  4206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4207  00014A  EFD2  F000         	goto	l9182
  4208  00014E                     l9180:
  4209                           
  4210                           ; BSR set to: 0
  4211  00014E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4212  000152  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4213  000156  CFDE FFF6          	movff	postinc2,tblptrl
  4214  00015A  CFDD FFF7          	movff	postdec2,tblptrh
  4215  00015E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4216  00015E  6AF8               	clrf	tblptru,c
  4217  000160                     	endif
  4218  000160                     	if	0	;tblptru may be non-zero
  4219  000160                     	endif
  4220  000160  0008               	tblrd		*
  4221  000162  50F5               	movf	tablat,w,c
  4222  000164  6F9E               	movwf	??_vfpfcnvrt& (0+255),b
  4223  000166  6B9F               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4224                           
  4225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4226                           ; Switch size 1, requested type "simple"
  4227                           ; Number of cases is 1, Range of values is 0 to 0
  4228                           ; switch strategies available:
  4229                           ; Name         Instructions Cycles
  4230                           ; simple_byte            4     3 (average)
  4231                           ;	Chosen strategy is simple_byte
  4232  000168  519F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4233  00016A  0A00               	xorlw	0	; case 0
  4234  00016C  B4D8               	btfsc	status,2,c
  4235  00016E  EFBB  F000         	goto	l9654
  4236  000172  EFA1  F000         	goto	l9176
  4237  000176                     l9654:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ; Switch size 1, requested type "simple"
  4241                           ; Number of cases is 5, Range of values is 32 to 48
  4242                           ; switch strategies available:
  4243                           ; Name         Instructions Cycles
  4244                           ; simple_byte           16     9 (average)
  4245                           ;	Chosen strategy is simple_byte
  4246  000176  519E               	movf	??_vfpfcnvrt& (0+255),w,b
  4247  000178  0A20               	xorlw	32	; case 32
  4248  00017A  B4D8               	btfsc	status,2,c
  4249  00017C  EF9B  F000         	goto	l9168
  4250  000180  0A03               	xorlw	3	; case 35
  4251  000182  B4D8               	btfsc	status,2,c
  4252  000184  EF9E  F000         	goto	l9172
  4253  000188  0A08               	xorlw	8	; case 43
  4254  00018A  B4D8               	btfsc	status,2,c
  4255  00018C  EF98  F000         	goto	l9164
  4256  000190  0A06               	xorlw	6	; case 45
  4257  000192  B4D8               	btfsc	status,2,c
  4258  000194  EF8B  F000         	goto	l9156
  4259  000198  0A1D               	xorlw	29	; case 48
  4260  00019A  B4D8               	btfsc	status,2,c
  4261  00019C  EF95  F000         	goto	l9160
  4262  0001A0  EFA1  F000         	goto	l9176
  4263  0001A4                     l9182:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4267  0001A4  51A4               	movf	vfpfcnvrt@done& (0+255),w,b
  4268  0001A6  11A5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4269  0001A8  B4D8               	btfsc	status,2,c
  4270  0001AA  EFD9  F000         	goto	u11811
  4271  0001AE  EFDB  F000         	goto	u11810
  4272  0001B2                     u11811:
  4273  0001B2  EFA7  F000         	goto	l9180
  4274  0001B6                     u11810:
  4275  0001B6                     
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4278  0001B6  A050               	btfss	_flags^0,0,c
  4279  0001B8  EFE0  F000         	goto	u11821
  4280  0001BC  EFE2  F000         	goto	u11820
  4281  0001C0                     u11821:
  4282  0001C0  EFE3  F000         	goto	l9186
  4283  0001C4                     u11820:
  4284  0001C4                     
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4287  0001C4  9250               	bcf	_flags^0,1,c
  4288  0001C6                     l9186:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4292  0001C6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4293  0001CA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4294  0001CE  CFDE FFF6          	movff	postinc2,tblptrl
  4295  0001D2  CFDD FFF7          	movff	postdec2,tblptrh
  4296  0001D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4297  0001D6  6AF8               	clrf	tblptru,c
  4298  0001D8                     	endif
  4299  0001D8                     	if	0	;tblptru may be non-zero
  4300  0001D8                     	endif
  4301  0001D8  0008               	tblrd		*
  4302  0001DA  50F5               	movf	tablat,w,c
  4303  0001DC  0A2A               	xorlw	42
  4304  0001DE  A4D8               	btfss	status,2,c
  4305  0001E0  EFF4  F000         	goto	u11831
  4306  0001E4  EFF6  F000         	goto	u11830
  4307  0001E8                     u11831:
  4308  0001E8  EF1F  F001         	goto	l9194
  4309  0001EC                     u11830:
  4310  0001EC                     
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4313  0001EC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4314  0001F0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4315  0001F4  2ADE               	incf	postinc2,f,c
  4316  0001F6  0E00               	movlw	0
  4317  0001F8  22DD               	addwfc	postdec2,f,c
  4318                           
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4320  0001FA  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4321  0001FE  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4322  000202  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  4323  000206  0E02               	movlw	2
  4324  000208  26DE               	addwf	postinc2,f,c
  4325  00020A  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  4326  00020E  0E00               	movlw	0
  4327  000210  22DD               	addwfc	postdec2,f,c
  4328  000212  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4329  000216  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4330  00021A  CFDE F04C          	movff	postinc2,_width
  4331  00021E  CFDD F04D          	movff	postdec2,_width+1
  4332  000222                     
  4333                           ; BSR set to: 0
  4334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4335  000222  BE4D               	btfsc	(_width+1)^0,7,c
  4336  000224  EF18  F001         	goto	u11840
  4337  000228  EF16  F001         	goto	u11841
  4338  00022C                     u11841:
  4339  00022C  EF64  F001         	goto	l9204
  4340  000230                     u11840:
  4341  000230                     
  4342                           ; BSR set to: 0
  4343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4344  000230  8050               	bsf	_flags^0,0,c
  4345                           
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4347  000232  6C4C               	negf	_width^0,c
  4348  000234  1E4D               	comf	(_width+1)^0,f,c
  4349  000236  B0D8               	btfsc	status,0,c
  4350  000238  2A4D               	incf	(_width+1)^0,f,c
  4351  00023A  EF64  F001         	goto	l9204
  4352  00023E                     l9194:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4356  00023E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4357  000242  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4358  000246  CFDE F012          	movff	postinc2,atoi@s
  4359  00024A  CFDD F013          	movff	postdec2,atoi@s+1
  4360  00024E  EC7E  F020         	call	_atoi	;wreg free
  4361  000252  C012  F04C         	movff	?_atoi,_width
  4362  000256  C013  F04D         	movff	?_atoi+1,_width+1
  4363                           
  4364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4365  00025A  EF36  F001         	goto	l9198
  4366  00025E                     l9196:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4370  00025E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4371  000262  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4372  000266  2ADE               	incf	postinc2,f,c
  4373  000268  0E00               	movlw	0
  4374  00026A  22DD               	addwfc	postdec2,f,c
  4375  00026C                     l9198:
  4376  00026C  0ED0               	movlw	208
  4377  00026E  0100               	movlb	0	; () banked
  4378  000270  6F9E               	movwf	??_vfpfcnvrt& (0+255),b
  4379  000272  0EFF               	movlw	255
  4380  000274  6F9F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4381  000276  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4382  00027A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4383  00027E  CFDE FFF6          	movff	postinc2,tblptrl
  4384  000282  CFDD FFF7          	movff	postdec2,tblptrh
  4385  000286                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4386  000286  6AF8               	clrf	tblptru,c
  4387  000288                     	endif
  4388  000288                     	if	0	;tblptru may be non-zero
  4389  000288                     	endif
  4390  000288  0008               	tblrd		*
  4391  00028A  50F5               	movf	tablat,w,c
  4392  00028C  6FA0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4393  00028E  6BA1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4394  000290  519E               	movf	??_vfpfcnvrt& (0+255),w,b
  4395  000292  27A0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4396  000294  519F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4397  000296  23A1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4398  000298  51A1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4399  00029A  E10A               	bnz	u11850
  4400  00029C  0E0A               	movlw	10
  4401  00029E  5DA0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4402  0002A0  A0D8               	btfss	status,0,c
  4403  0002A2  EF55  F001         	goto	u11851
  4404  0002A6  EF58  F001         	goto	u11850
  4405  0002AA                     u11851:
  4406  0002AA  0E01               	movlw	1
  4407  0002AC  EF59  F001         	goto	u11860
  4408  0002B0                     u11850:
  4409  0002B0  0E00               	movlw	0
  4410  0002B2                     u11860:
  4411  0002B2  6FA6               	movwf	_vfpfcnvrt$1783& (0+255),b
  4412  0002B4  6BA7               	clrf	(_vfpfcnvrt$1783+1)& (0+255),b
  4413  0002B6                     
  4414                           ; BSR set to: 0
  4415  0002B6  51A6               	movf	_vfpfcnvrt$1783& (0+255),w,b
  4416  0002B8  11A7               	iorwf	(_vfpfcnvrt$1783+1)& (0+255),w,b
  4417  0002BA  A4D8               	btfss	status,2,c
  4418  0002BC  EF62  F001         	goto	u11871
  4419  0002C0  EF64  F001         	goto	u11870
  4420  0002C4                     u11871:
  4421  0002C4  EF2F  F001         	goto	l9196
  4422  0002C8                     u11870:
  4423  0002C8                     l9204:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4427  0002C8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4428  0002CC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4429  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4430  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4431  0002D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4432  0002D8  6AF8               	clrf	tblptru,c
  4433  0002DA                     	endif
  4434  0002DA                     	if	0	;tblptru may be non-zero
  4435  0002DA                     	endif
  4436  0002DA  0008               	tblrd		*
  4437  0002DC  50F5               	movf	tablat,w,c
  4438  0002DE  0A2E               	xorlw	46
  4439  0002E0  A4D8               	btfss	status,2,c
  4440  0002E2  EF75  F001         	goto	u11881
  4441  0002E6  EF77  F001         	goto	u11880
  4442  0002EA                     u11881:
  4443  0002EA  EFF7  F001         	goto	l9224
  4444  0002EE                     u11880:
  4445  0002EE                     
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4448  0002EE  0E00               	movlw	0
  4449  0002F0  6E4F               	movwf	(_prec+1)^0,c
  4450  0002F2  0E00               	movlw	0
  4451  0002F4  6E4E               	movwf	_prec^0,c
  4452  0002F6                     
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4455  0002F6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4456  0002FA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4457  0002FE  2ADE               	incf	postinc2,f,c
  4458  000300  0E00               	movlw	0
  4459  000302  22DD               	addwfc	postdec2,f,c
  4460  000304                     
  4461                           ; BSR set to: 0
  4462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4463  000304  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4464  000308  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4465  00030C  CFDE FFF6          	movff	postinc2,tblptrl
  4466  000310  CFDD FFF7          	movff	postdec2,tblptrh
  4467  000314                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4468  000314  6AF8               	clrf	tblptru,c
  4469  000316                     	endif
  4470  000316                     	if	0	;tblptru may be non-zero
  4471  000316                     	endif
  4472  000316  0008               	tblrd		*
  4473  000318  50F5               	movf	tablat,w,c
  4474  00031A  0A2A               	xorlw	42
  4475  00031C  A4D8               	btfss	status,2,c
  4476  00031E  EF93  F001         	goto	u11891
  4477  000322  EF95  F001         	goto	u11890
  4478  000326                     u11891:
  4479  000326  EFB2  F001         	goto	l9214
  4480  00032A                     u11890:
  4481  00032A                     
  4482                           ; BSR set to: 0
  4483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4484  00032A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4485  00032E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4486  000332  2ADE               	incf	postinc2,f,c
  4487  000334  0E00               	movlw	0
  4488  000336  22DD               	addwfc	postdec2,f,c
  4489                           
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4491  000338  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4492  00033C  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4493  000340  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  4494  000344  0E02               	movlw	2
  4495  000346  26DE               	addwf	postinc2,f,c
  4496  000348  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  4497  00034C  0E00               	movlw	0
  4498  00034E  22DD               	addwfc	postdec2,f,c
  4499  000350  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4500  000354  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4501  000358  CFDE F04E          	movff	postinc2,_prec
  4502  00035C  CFDD F04F          	movff	postdec2,_prec+1
  4503                           
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4505  000360  EFF7  F001         	goto	l9224
  4506  000364                     l9214:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4510  000364  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4511  000368  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4512  00036C  CFDE F012          	movff	postinc2,atoi@s
  4513  000370  CFDD F013          	movff	postdec2,atoi@s+1
  4514  000374  EC7E  F020         	call	_atoi	;wreg free
  4515  000378  C012  F04E         	movff	?_atoi,_prec
  4516  00037C  C013  F04F         	movff	?_atoi+1,_prec+1
  4517                           
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4519  000380  EFC9  F001         	goto	l9218
  4520  000384                     l9216:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4524  000384  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4525  000388  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4526  00038C  2ADE               	incf	postinc2,f,c
  4527  00038E  0E00               	movlw	0
  4528  000390  22DD               	addwfc	postdec2,f,c
  4529  000392                     l9218:
  4530  000392  0ED0               	movlw	208
  4531  000394  0100               	movlb	0	; () banked
  4532  000396  6F9E               	movwf	??_vfpfcnvrt& (0+255),b
  4533  000398  0EFF               	movlw	255
  4534  00039A  6F9F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4535  00039C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4536  0003A0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4537  0003A4  CFDE FFF6          	movff	postinc2,tblptrl
  4538  0003A8  CFDD FFF7          	movff	postdec2,tblptrh
  4539  0003AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4540  0003AC  6AF8               	clrf	tblptru,c
  4541  0003AE                     	endif
  4542  0003AE                     	if	0	;tblptru may be non-zero
  4543  0003AE                     	endif
  4544  0003AE  0008               	tblrd		*
  4545  0003B0  50F5               	movf	tablat,w,c
  4546  0003B2  6FA0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4547  0003B4  6BA1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4548  0003B6  519E               	movf	??_vfpfcnvrt& (0+255),w,b
  4549  0003B8  27A0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4550  0003BA  519F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4551  0003BC  23A1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4552  0003BE  51A1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4553  0003C0  E10A               	bnz	u11900
  4554  0003C2  0E0A               	movlw	10
  4555  0003C4  5DA0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4556  0003C6  A0D8               	btfss	status,0,c
  4557  0003C8  EFE8  F001         	goto	u11901
  4558  0003CC  EFEB  F001         	goto	u11900
  4559  0003D0                     u11901:
  4560  0003D0  0E01               	movlw	1
  4561  0003D2  EFEC  F001         	goto	u11910
  4562  0003D6                     u11900:
  4563  0003D6  0E00               	movlw	0
  4564  0003D8                     u11910:
  4565  0003D8  6FA8               	movwf	_vfpfcnvrt$1784& (0+255),b
  4566  0003DA  6BA9               	clrf	(_vfpfcnvrt$1784+1)& (0+255),b
  4567  0003DC                     
  4568                           ; BSR set to: 0
  4569  0003DC  51A8               	movf	_vfpfcnvrt$1784& (0+255),w,b
  4570  0003DE  11A9               	iorwf	(_vfpfcnvrt$1784+1)& (0+255),w,b
  4571  0003E0  A4D8               	btfss	status,2,c
  4572  0003E2  EFF5  F001         	goto	u11921
  4573  0003E6  EFF7  F001         	goto	u11920
  4574  0003EA                     u11921:
  4575  0003EA  EFC2  F001         	goto	l9216
  4576  0003EE                     u11920:
  4577  0003EE                     l9224:
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4581  0003EE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4582  0003F2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4583  0003F6  CFDE FFF6          	movff	postinc2,tblptrl
  4584  0003FA  CFDD FFF7          	movff	postdec2,tblptrh
  4585  0003FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4586  0003FE  6AF8               	clrf	tblptru,c
  4587  000400                     	endif
  4588  000400                     	if	0	;tblptru may be non-zero
  4589  000400                     	endif
  4590  000400  0008               	tblrd		*
  4591  000402  50F5               	movf	tablat,w,c
  4592  000404  6E11               	movwf	tolower@c^0,c
  4593  000406  6A12               	clrf	(tolower@c+1)^0,c
  4594  000408  EC31  F02C         	call	_tolower	;wreg free
  4595  00040C  5011               	movf	?_tolower^0,w,c
  4596  00040E  0100               	movlb	0	; () banked
  4597  000410  6FB0               	movwf	vfpfcnvrt@ct& (0+255),b
  4598  000412                     
  4599                           ; BSR set to: 0
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4601  000412  51B0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4602  000414  B4D8               	btfsc	status,2,c
  4603  000416  EF0F  F002         	goto	u11931
  4604  00041A  EF11  F002         	goto	u11930
  4605  00041E                     u11931:
  4606  00041E  EF4D  F002         	goto	l9234
  4607  000422                     u11930:
  4608  000422                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4611  000422  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4612  000426  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4613  00042A  CFDE F09E          	movff	postinc2,??_vfpfcnvrt
  4614  00042E  CFDD F09F          	movff	postdec2,??_vfpfcnvrt+1
  4615  000432  0E01               	movlw	1
  4616  000434  279E               	addwf	??_vfpfcnvrt& (0+255),f,b
  4617  000436  0E00               	movlw	0
  4618  000438  239F               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4619  00043A  C09E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4620  00043E  C09F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4621  000442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4622  000442  6AF8               	clrf	tblptru,c
  4623  000444                     	endif
  4624  000444                     	if	0	;tblptru may be non-zero
  4625  000444                     	endif
  4626  000444  0008               	tblrd		*
  4627  000446  50F5               	movf	tablat,w,c
  4628  000448  6E11               	movwf	tolower@c^0,c
  4629  00044A  6A12               	clrf	(tolower@c+1)^0,c
  4630  00044C  EC31  F02C         	call	_tolower	;wreg free
  4631  000450  5011               	movf	?_tolower^0,w,c
  4632  000452  0100               	movlb	0	; () banked
  4633  000454  6FB1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4634  000456                     
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4637  000456  51B1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4638  000458  B4D8               	btfsc	status,2,c
  4639  00045A  EF31  F002         	goto	u11941
  4640  00045E  EF33  F002         	goto	u11940
  4641  000462                     u11941:
  4642  000462  EF4D  F002         	goto	l9234
  4643  000466                     u11940:
  4644  000466                     
  4645                           ; BSR set to: 0
  4646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4647  000466  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4648  00046A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4649  00046E  CFDE F09E          	movff	postinc2,??_vfpfcnvrt
  4650  000472  CFDD F09F          	movff	postdec2,??_vfpfcnvrt+1
  4651  000476  0E02               	movlw	2
  4652  000478  279E               	addwf	??_vfpfcnvrt& (0+255),f,b
  4653  00047A  0E00               	movlw	0
  4654  00047C  239F               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4655  00047E  C09E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4656  000482  C09F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4657  000486                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4658  000486  6AF8               	clrf	tblptru,c
  4659  000488                     	endif
  4660  000488                     	if	0	;tblptru may be non-zero
  4661  000488                     	endif
  4662  000488  0008               	tblrd		*
  4663  00048A  50F5               	movf	tablat,w,c
  4664  00048C  6E11               	movwf	tolower@c^0,c
  4665  00048E  6A12               	clrf	(tolower@c+1)^0,c
  4666  000490  EC31  F02C         	call	_tolower	;wreg free
  4667  000494  5011               	movf	?_tolower^0,w,c
  4668  000496  0100               	movlb	0	; () banked
  4669  000498  6FB2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4670  00049A                     l9234:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4674  00049A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4675  00049E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4676  0004A2  CFDE FFF6          	movff	postinc2,tblptrl
  4677  0004A6  CFDD FFF7          	movff	postdec2,tblptrh
  4678  0004AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4679  0004AA  6AF8               	clrf	tblptru,c
  4680  0004AC                     	endif
  4681  0004AC                     	if	0	;tblptru may be non-zero
  4682  0004AC                     	endif
  4683  0004AC  0008               	tblrd		*
  4684  0004AE  50F5               	movf	tablat,w,c
  4685  0004B0  0A63               	xorlw	99
  4686  0004B2  A4D8               	btfss	status,2,c
  4687  0004B4  EF5E  F002         	goto	u11951
  4688  0004B8  EF60  F002         	goto	u11950
  4689  0004BC                     u11951:
  4690  0004BC  EF87  F002         	goto	l9242
  4691  0004C0                     u11950:
  4692  0004C0                     
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4695  0004C0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4696  0004C4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4697  0004C8  2ADE               	incf	postinc2,f,c
  4698  0004CA  0E00               	movlw	0
  4699  0004CC  22DD               	addwfc	postdec2,f,c
  4700                           
  4701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4702  0004CE  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4703  0004D2  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4704  0004D6  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  4705  0004DA  0E02               	movlw	2
  4706  0004DC  26DE               	addwf	postinc2,f,c
  4707  0004DE  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  4708  0004E2  0E00               	movlw	0
  4709  0004E4  22DD               	addwfc	postdec2,f,c
  4710  0004E6  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4711  0004EA  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4712  0004EE  50DF               	movf	indf2,w,c
  4713  0004F0  6FBD               	movwf	vfpfcnvrt@c& (0+255),b
  4714  0004F2                     
  4715                           ; BSR set to: 0
  4716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4717  0004F2  C098  F026         	movff	vfpfcnvrt@fp,ctoa@fp
  4718  0004F6  C099  F027         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4719  0004FA  C0BD  F028         	movff	vfpfcnvrt@c,ctoa@c
  4720  0004FE  ECEC  F02C         	call	_ctoa	;wreg free
  4721  000502  C026  F098         	movff	?_ctoa,?_vfpfcnvrt
  4722  000506  C027  F099         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4723  00050A  EFD3  F00A         	goto	l909
  4724  00050E                     l9242:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4728  00050E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4729  000512  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4730  000516  CFDE F00B          	movff	postinc2,strncmp@_l
  4731  00051A  CFDD F00C          	movff	postdec2,strncmp@_l+1
  4732  00051E  0EC6               	movlw	low STR_14
  4733  000520  6E0D               	movwf	strncmp@_r^0,c
  4734  000522  0EFF               	movlw	high STR_14
  4735  000524  6E0E               	movwf	(strncmp@_r+1)^0,c
  4736  000526  0E00               	movlw	0
  4737  000528  6E10               	movwf	(strncmp@n+1)^0,c
  4738  00052A  0E03               	movlw	3
  4739  00052C  6E0F               	movwf	strncmp@n^0,c
  4740  00052E  EC8C  F025         	call	_strncmp	;wreg free
  4741  000532  500B               	movf	?_strncmp^0,w,c
  4742  000534  100C               	iorwf	(?_strncmp+1)^0,w,c
  4743  000536  B4D8               	btfsc	status,2,c
  4744  000538  EFA0  F002         	goto	u11961
  4745  00053C  EFA2  F002         	goto	u11960
  4746  000540                     u11961:
  4747  000540  EFBD  F002         	goto	l9246
  4748  000544                     u11960:
  4749  000544  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4750  000548  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4751  00054C  CFDE F00B          	movff	postinc2,strncmp@_l
  4752  000550  CFDD F00C          	movff	postdec2,strncmp@_l+1
  4753  000554  0ECE               	movlw	low STR_18
  4754  000556  6E0D               	movwf	strncmp@_r^0,c
  4755  000558  0EFF               	movlw	high STR_18
  4756  00055A  6E0E               	movwf	(strncmp@_r+1)^0,c
  4757  00055C  0E00               	movlw	0
  4758  00055E  6E10               	movwf	(strncmp@n+1)^0,c
  4759  000560  0E03               	movlw	3
  4760  000562  6E0F               	movwf	strncmp@n^0,c
  4761  000564  EC8C  F025         	call	_strncmp	;wreg free
  4762  000568  500B               	movf	?_strncmp^0,w,c
  4763  00056A  100C               	iorwf	(?_strncmp+1)^0,w,c
  4764  00056C  A4D8               	btfss	status,2,c
  4765  00056E  EFBB  F002         	goto	u11971
  4766  000572  EFBD  F002         	goto	u11970
  4767  000576                     u11971:
  4768  000576  EFFE  F002         	goto	l9252
  4769  00057A                     u11970:
  4770  00057A                     l9246:
  4771                           
  4772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4773  00057A  0E03               	movlw	3
  4774  00057C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4775  000580  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4776  000584  26DE               	addwf	postinc2,f,c
  4777  000586  0E00               	movlw	0
  4778  000588  22DD               	addwfc	postdec2,f,c
  4779                           
  4780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4781  00058A  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4782  00058E  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4783  000592  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  4784  000596  0E02               	movlw	2
  4785  000598  26DE               	addwf	postinc2,f,c
  4786  00059A  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  4787  00059E  0E00               	movlw	0
  4788  0005A0  22DD               	addwfc	postdec2,f,c
  4789  0005A2  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4790  0005A6  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4791  0005AA  50DF               	movf	indf2,w,c
  4792  0005AC  0100               	movlb	0	; () banked
  4793  0005AE  6FB3               	movwf	vfpfcnvrt@ll& (0+255),b
  4794  0005B0  0E00               	movlw	0
  4795  0005B2  BFB3               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4796  0005B4  0EFF               	movlw	-1
  4797  0005B6  6FB4               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4798  0005B8  6FB5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4799  0005BA  6FB6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4800  0005BC  6FB7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4801  0005BE  6FB8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4802  0005C0  6FB9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4803  0005C2  6FBA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4804  0005C4                     l9248:
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4808  0005C4  C098  F026         	movff	vfpfcnvrt@fp,dtoa@fp
  4809  0005C8  C099  F027         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4810  0005CC  C0B3  F028         	movff	vfpfcnvrt@ll,dtoa@d
  4811  0005D0  C0B4  F029         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4812  0005D4  C0B5  F02A         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4813  0005D8  C0B6  F02B         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4814  0005DC  C0B7  F02C         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4815  0005E0  C0B8  F02D         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4816  0005E4  C0B9  F02E         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4817  0005E8  C0BA  F02F         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4818  0005EC  EC21  F01A         	call	_dtoa	;wreg free
  4819  0005F0  C026  F098         	movff	?_dtoa,?_vfpfcnvrt
  4820  0005F4  C027  F099         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4821  0005F8  EFD3  F00A         	goto	l909
  4822  0005FC                     l9252:
  4823                           
  4824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4825  0005FC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4826  000600  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4827  000604  CFDE F00B          	movff	postinc2,strncmp@_l
  4828  000608  CFDD F00C          	movff	postdec2,strncmp@_l+1
  4829  00060C  0EC7               	movlw	low (STR_14+1)
  4830  00060E  6E0D               	movwf	strncmp@_r^0,c
  4831  000610  0EFF               	movlw	high (STR_14+1)
  4832  000612  6E0E               	movwf	(strncmp@_r+1)^0,c
  4833  000614  0E00               	movlw	0
  4834  000616  6E10               	movwf	(strncmp@n+1)^0,c
  4835  000618  0E02               	movlw	2
  4836  00061A  6E0F               	movwf	strncmp@n^0,c
  4837  00061C  EC8C  F025         	call	_strncmp	;wreg free
  4838  000620  500B               	movf	?_strncmp^0,w,c
  4839  000622  100C               	iorwf	(?_strncmp+1)^0,w,c
  4840  000624  B4D8               	btfsc	status,2,c
  4841  000626  EF17  F003         	goto	u11981
  4842  00062A  EF19  F003         	goto	u11980
  4843  00062E                     u11981:
  4844  00062E  EF34  F003         	goto	l9256
  4845  000632                     u11980:
  4846  000632  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4847  000636  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4848  00063A  CFDE F00B          	movff	postinc2,strncmp@_l
  4849  00063E  CFDD F00C          	movff	postdec2,strncmp@_l+1
  4850  000642  0ECF               	movlw	low (STR_18+1)
  4851  000644  6E0D               	movwf	strncmp@_r^0,c
  4852  000646  0EFF               	movlw	high (STR_18+1)
  4853  000648  6E0E               	movwf	(strncmp@_r+1)^0,c
  4854  00064A  0E00               	movlw	0
  4855  00064C  6E10               	movwf	(strncmp@n+1)^0,c
  4856  00064E  0E02               	movlw	2
  4857  000650  6E0F               	movwf	strncmp@n^0,c
  4858  000652  EC8C  F025         	call	_strncmp	;wreg free
  4859  000656  500B               	movf	?_strncmp^0,w,c
  4860  000658  100C               	iorwf	(?_strncmp+1)^0,w,c
  4861  00065A  A4D8               	btfss	status,2,c
  4862  00065C  EF32  F003         	goto	u11991
  4863  000660  EF34  F003         	goto	u11990
  4864  000664                     u11991:
  4865  000664  EF5C  F003         	goto	l9262
  4866  000668                     u11990:
  4867  000668                     l9256:
  4868                           
  4869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4870  000668  0E02               	movlw	2
  4871  00066A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4872  00066E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4873  000672  26DE               	addwf	postinc2,f,c
  4874  000674  0E00               	movlw	0
  4875  000676  22DD               	addwfc	postdec2,f,c
  4876                           
  4877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4878  000678  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4879  00067C  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4880  000680  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  4881  000684  0E02               	movlw	2
  4882  000686  26DE               	addwf	postinc2,f,c
  4883  000688  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  4884  00068C  0E00               	movlw	0
  4885  00068E  22DD               	addwfc	postdec2,f,c
  4886  000690  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4887  000694  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4888  000698  CFDE F0B3          	movff	postinc2,vfpfcnvrt@ll
  4889  00069C  CFDD F0B4          	movff	postdec2,vfpfcnvrt@ll+1
  4890  0006A0  0100               	movlb	0	; () banked
  4891  0006A2  0E00               	movlw	0
  4892  0006A4  BFB4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4893  0006A6  0EFF               	movlw	-1
  4894  0006A8  6FB5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4895  0006AA  6FB6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4896  0006AC  6FB7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4897  0006AE  6FB8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4898  0006B0  6FB9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4899  0006B2  6FBA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4900  0006B4  EFE2  F002         	goto	l9248
  4901  0006B8                     l9262:
  4902                           
  4903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4904  0006B8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4905  0006BC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4906  0006C0  CFDE FFF6          	movff	postinc2,tblptrl
  4907  0006C4  CFDD FFF7          	movff	postdec2,tblptrh
  4908  0006C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4909  0006C8  6AF8               	clrf	tblptru,c
  4910  0006CA                     	endif
  4911  0006CA                     	if	0	;tblptru may be non-zero
  4912  0006CA                     	endif
  4913  0006CA  0008               	tblrd		*
  4914  0006CC  50F5               	movf	tablat,w,c
  4915  0006CE  0A64               	xorlw	100
  4916  0006D0  B4D8               	btfsc	status,2,c
  4917  0006D2  EF6D  F003         	goto	u12001
  4918  0006D6  EF6F  F003         	goto	u12000
  4919  0006DA                     u12001:
  4920  0006DA  EF82  F003         	goto	l9266
  4921  0006DE                     u12000:
  4922  0006DE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4923  0006E2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4924  0006E6  CFDE FFF6          	movff	postinc2,tblptrl
  4925  0006EA  CFDD FFF7          	movff	postdec2,tblptrh
  4926  0006EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4927  0006EE  6AF8               	clrf	tblptru,c
  4928  0006F0                     	endif
  4929  0006F0                     	if	0	;tblptru may be non-zero
  4930  0006F0                     	endif
  4931  0006F0  0008               	tblrd		*
  4932  0006F2  50F5               	movf	tablat,w,c
  4933  0006F4  0A69               	xorlw	105
  4934  0006F6  A4D8               	btfss	status,2,c
  4935  0006F8  EF80  F003         	goto	u12011
  4936  0006FC  EF82  F003         	goto	u12010
  4937  000700                     u12011:
  4938  000700  EFA9  F003         	goto	l9272
  4939  000704                     u12010:
  4940  000704                     l9266:
  4941                           
  4942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4943  000704  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4944  000708  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4945  00070C  2ADE               	incf	postinc2,f,c
  4946  00070E  0E00               	movlw	0
  4947  000710  22DD               	addwfc	postdec2,f,c
  4948                           
  4949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4950  000712  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4951  000716  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4952  00071A  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  4953  00071E  0E02               	movlw	2
  4954  000720  26DE               	addwf	postinc2,f,c
  4955  000722  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  4956  000726  0E00               	movlw	0
  4957  000728  22DD               	addwfc	postdec2,f,c
  4958  00072A  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4959  00072E  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4960  000732  CFDE F0B3          	movff	postinc2,vfpfcnvrt@ll
  4961  000736  CFDD F0B4          	movff	postdec2,vfpfcnvrt@ll+1
  4962  00073A  0100               	movlb	0	; () banked
  4963  00073C  0E00               	movlw	0
  4964  00073E  BFB4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4965  000740  0EFF               	movlw	-1
  4966  000742  6FB5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4967  000744  6FB6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4968  000746  6FB7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4969  000748  6FB8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4970  00074A  6FB9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4971  00074C  6FBA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4972  00074E  EFE2  F002         	goto	l9248
  4973  000752                     l9272:
  4974                           
  4975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4976  000752  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4977  000756  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4978  00075A  CFDE F00B          	movff	postinc2,strncmp@_l
  4979  00075E  CFDD F00C          	movff	postdec2,strncmp@_l+1
  4980  000762  0EE9               	movlw	low STR_32
  4981  000764  6E0D               	movwf	strncmp@_r^0,c
  4982  000766  0EFF               	movlw	high STR_32
  4983  000768  6E0E               	movwf	(strncmp@_r+1)^0,c
  4984  00076A  0E00               	movlw	0
  4985  00076C  6E10               	movwf	(strncmp@n+1)^0,c
  4986  00076E  0E02               	movlw	2
  4987  000770  6E0F               	movwf	strncmp@n^0,c
  4988  000772  EC8C  F025         	call	_strncmp	;wreg free
  4989  000776  500B               	movf	?_strncmp^0,w,c
  4990  000778  100C               	iorwf	(?_strncmp+1)^0,w,c
  4991  00077A  B4D8               	btfsc	status,2,c
  4992  00077C  EFC2  F003         	goto	u12021
  4993  000780  EFC4  F003         	goto	u12020
  4994  000784                     u12021:
  4995  000784  EFDF  F003         	goto	l9276
  4996  000788                     u12020:
  4997  000788  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4998  00078C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4999  000790  CFDE F00B          	movff	postinc2,strncmp@_l
  5000  000794  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5001  000798  0EEF               	movlw	low STR_36
  5002  00079A  6E0D               	movwf	strncmp@_r^0,c
  5003  00079C  0EFF               	movlw	high STR_36
  5004  00079E  6E0E               	movwf	(strncmp@_r+1)^0,c
  5005  0007A0  0E00               	movlw	0
  5006  0007A2  6E10               	movwf	(strncmp@n+1)^0,c
  5007  0007A4  0E02               	movlw	2
  5008  0007A6  6E0F               	movwf	strncmp@n^0,c
  5009  0007A8  EC8C  F025         	call	_strncmp	;wreg free
  5010  0007AC  500B               	movf	?_strncmp^0,w,c
  5011  0007AE  100C               	iorwf	(?_strncmp+1)^0,w,c
  5012  0007B0  A4D8               	btfss	status,2,c
  5013  0007B2  EFDD  F003         	goto	u12031
  5014  0007B6  EFDF  F003         	goto	u12030
  5015  0007BA                     u12031:
  5016  0007BA  EF08  F004         	goto	l9282
  5017  0007BE                     u12030:
  5018  0007BE                     l9276:
  5019                           
  5020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5021  0007BE  0E02               	movlw	2
  5022  0007C0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5023  0007C4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5024  0007C8  26DE               	addwf	postinc2,f,c
  5025  0007CA  0E00               	movlw	0
  5026  0007CC  22DD               	addwfc	postdec2,f,c
  5027                           
  5028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5029  0007CE  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5030  0007D2  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5031  0007D6  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5032  0007DA  0E02               	movlw	2
  5033  0007DC  26DE               	addwf	postinc2,f,c
  5034  0007DE  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5035  0007E2  0E00               	movlw	0
  5036  0007E4  22DD               	addwfc	postdec2,f,c
  5037  0007E6  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5038  0007EA  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5039  0007EE  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  5040  0007F2  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  5041  0007F6  C0A0  F0B3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5042  0007FA  C0A1  F0B4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5043  0007FE  0100               	movlb	0	; () banked
  5044  000800  6BB5               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5045  000802  6BB6               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5046  000804  6BB7               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5047  000806  6BB8               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5048  000808  6BB9               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5049  00080A  6BBA               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5050  00080C  EFE2  F002         	goto	l9248
  5051  000810                     l9282:
  5052                           
  5053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5054  000810  0E66               	movlw	102
  5055  000812  0100               	movlb	0	; () banked
  5056  000814  19B0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5057  000816  A4D8               	btfss	status,2,c
  5058  000818  EF10  F004         	goto	u12041
  5059  00081C  EF12  F004         	goto	u12040
  5060  000820                     u12041:
  5061  000820  EF53  F004         	goto	l9294
  5062  000824                     u12040:
  5063  000824                     
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5066  000824  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5067  000828  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5068  00082C  CFDE FFF6          	movff	postinc2,tblptrl
  5069  000830  CFDD FFF7          	movff	postdec2,tblptrh
  5070  000834                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5071  000834  6AF8               	clrf	tblptru,c
  5072  000836                     	endif
  5073  000836                     	if	0	;tblptru may be non-zero
  5074  000836                     	endif
  5075  000836  0008               	tblrd		*
  5076  000838  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  5077  00083C                     
  5078                           ; BSR set to: 0
  5079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5080  00083C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5081  000840  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5082  000844  2ADE               	incf	postinc2,f,c
  5083  000846  0E00               	movlw	0
  5084  000848  22DD               	addwfc	postdec2,f,c
  5085  00084A                     
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5088  00084A  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5089  00084E  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5090  000852  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5091  000856  0E04               	movlw	4
  5092  000858  26DE               	addwf	postinc2,f,c
  5093  00085A  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5094  00085E  0E00               	movlw	0
  5095  000860  22DD               	addwfc	postdec2,f,c
  5096  000862  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5097  000866  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5098  00086A  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f
  5099  00086E  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+1
  5100  000872  CFDE F0AE          	movff	postinc2,vfpfcnvrt@f+2
  5101  000876  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f+3
  5102  00087A                     l9290:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5106  00087A  C098  F03E         	movff	vfpfcnvrt@fp,efgtoa@fp
  5107  00087E  C099  F03F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5108  000882  C0AC  F040         	movff	vfpfcnvrt@f,efgtoa@f
  5109  000886  C0AD  F041         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5110  00088A  C0AE  F042         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5111  00088E  C0AF  F043         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5112  000892  C0BD  F044         	movff	vfpfcnvrt@c,efgtoa@c
  5113  000896  ECD4  F00A         	call	_efgtoa	;wreg free
  5114  00089A  C03E  F098         	movff	?_efgtoa,?_vfpfcnvrt
  5115  00089E  C03F  F099         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5116  0008A2  EFD3  F00A         	goto	l909
  5117  0008A6                     l9294:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5121  0008A6  0EB0               	movlw	low vfpfcnvrt@ct
  5122  0008A8  6E0B               	movwf	strncmp@_l^0,c
  5123  0008AA  0E00               	movlw	high vfpfcnvrt@ct
  5124  0008AC  6E0C               	movwf	(strncmp@_l+1)^0,c
  5125  0008AE  0EEC               	movlw	low STR_41
  5126  0008B0  6E0D               	movwf	strncmp@_r^0,c
  5127  0008B2  0EFF               	movlw	high STR_41
  5128  0008B4  6E0E               	movwf	(strncmp@_r+1)^0,c
  5129  0008B6  0E00               	movlw	0
  5130  0008B8  6E10               	movwf	(strncmp@n+1)^0,c
  5131  0008BA  0E02               	movlw	2
  5132  0008BC  6E0F               	movwf	strncmp@n^0,c
  5133  0008BE  EC8C  F025         	call	_strncmp	;wreg free
  5134  0008C2  500B               	movf	?_strncmp^0,w,c
  5135  0008C4  100C               	iorwf	(?_strncmp+1)^0,w,c
  5136  0008C6  A4D8               	btfss	status,2,c
  5137  0008C8  EF68  F004         	goto	u12051
  5138  0008CC  EF6A  F004         	goto	u12050
  5139  0008D0                     u12051:
  5140  0008D0  EFE8  F004         	goto	l9310
  5141  0008D4                     u12050:
  5142  0008D4                     
  5143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5144  0008D4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5145  0008D8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5146  0008DC  CFDE F09E          	movff	postinc2,??_vfpfcnvrt
  5147  0008E0  CFDD F09F          	movff	postdec2,??_vfpfcnvrt+1
  5148  0008E4  0E01               	movlw	1
  5149  0008E6  0100               	movlb	0	; () banked
  5150  0008E8  279E               	addwf	??_vfpfcnvrt& (0+255),f,b
  5151  0008EA  0E00               	movlw	0
  5152  0008EC  239F               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5153  0008EE  C09E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5154  0008F2  C09F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5155  0008F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5156  0008F6  6AF8               	clrf	tblptru,c
  5157  0008F8                     	endif
  5158  0008F8                     	if	0	;tblptru may be non-zero
  5159  0008F8                     	endif
  5160  0008F8  0008               	tblrd		*
  5161  0008FA  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  5162  0008FE  0EBF               	movlw	191
  5163  000900  6F9E               	movwf	??_vfpfcnvrt& (0+255),b
  5164  000902  0EFF               	movlw	255
  5165  000904  6F9F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5166  000906  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5167  00090A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5168  00090E  CFDE FFF6          	movff	postinc2,tblptrl
  5169  000912  CFDD FFF7          	movff	postdec2,tblptrh
  5170  000916                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5171  000916  6AF8               	clrf	tblptru,c
  5172  000918                     	endif
  5173  000918                     	if	0	;tblptru may be non-zero
  5174  000918                     	endif
  5175  000918  0008               	tblrd		*
  5176  00091A  50F5               	movf	tablat,w,c
  5177  00091C  6FA0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5178  00091E  6BA1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5179  000920  519E               	movf	??_vfpfcnvrt& (0+255),w,b
  5180  000922  27A0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5181  000924  519F               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5182  000926  23A1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5183  000928  51A1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5184  00092A  E10A               	bnz	u12060
  5185  00092C  0E1A               	movlw	26
  5186  00092E  5DA0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5187  000930  A0D8               	btfss	status,0,c
  5188  000932  EF9D  F004         	goto	u12061
  5189  000936  EFA0  F004         	goto	u12060
  5190  00093A                     u12061:
  5191  00093A  0E01               	movlw	1
  5192  00093C  EFA1  F004         	goto	u12070
  5193  000940                     u12060:
  5194  000940  0E00               	movlw	0
  5195  000942                     u12070:
  5196  000942  6FAA               	movwf	_vfpfcnvrt$1805& (0+255),b
  5197  000944  6BAB               	clrf	(_vfpfcnvrt$1805+1)& (0+255),b
  5198  000946                     
  5199                           ; BSR set to: 0
  5200  000946  51AA               	movf	_vfpfcnvrt$1805& (0+255),w,b
  5201  000948  11AB               	iorwf	(_vfpfcnvrt$1805+1)& (0+255),w,b
  5202  00094A  B4D8               	btfsc	status,2,c
  5203  00094C  EFAA  F004         	goto	u12081
  5204  000950  EFAC  F004         	goto	u12080
  5205  000954                     u12081:
  5206  000954  EFC6  F004         	goto	l9304
  5207  000958                     u12080:
  5208  000958                     
  5209                           ; BSR set to: 0
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5211  000958  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5212  00095C  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5213  000960  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5214  000964  0E04               	movlw	4
  5215  000966  26DE               	addwf	postinc2,f,c
  5216  000968  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5217  00096C  0E00               	movlw	0
  5218  00096E  22DD               	addwfc	postdec2,f,c
  5219  000970  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5220  000974  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5221  000978  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f
  5222  00097C  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+1
  5223  000980  CFDE F0AE          	movff	postinc2,vfpfcnvrt@f+2
  5224  000984  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f+3
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5227  000988  EFDE  F004         	goto	l929
  5228  00098C                     l9304:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5232  00098C  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5233  000990  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5234  000994  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5235  000998  0E04               	movlw	4
  5236  00099A  26DE               	addwf	postinc2,f,c
  5237  00099C  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5238  0009A0  0E00               	movlw	0
  5239  0009A2  22DD               	addwfc	postdec2,f,c
  5240  0009A4  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5241  0009A8  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5242  0009AC  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f
  5243  0009B0  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+1
  5244  0009B4  CFDE F0AE          	movff	postinc2,vfpfcnvrt@f+2
  5245  0009B8  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f+3
  5246  0009BC                     l929:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5250  0009BC  0E02               	movlw	2
  5251  0009BE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5252  0009C2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5253  0009C6  26DE               	addwf	postinc2,f,c
  5254  0009C8  0E00               	movlw	0
  5255  0009CA  22DD               	addwfc	postdec2,f,c
  5256  0009CC  EF3D  F004         	goto	l9290
  5257  0009D0                     l9310:
  5258                           
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5260  0009D0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5261  0009D4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5262  0009D8  CFDE F00B          	movff	postinc2,strncmp@_l
  5263  0009DC  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5264  0009E0  0EDA               	movlw	low STR_46
  5265  0009E2  6E0D               	movwf	strncmp@_r^0,c
  5266  0009E4  0EFF               	movlw	high STR_46
  5267  0009E6  6E0E               	movwf	(strncmp@_r+1)^0,c
  5268  0009E8  0E00               	movlw	0
  5269  0009EA  6E10               	movwf	(strncmp@n+1)^0,c
  5270  0009EC  0E03               	movlw	3
  5271  0009EE  6E0F               	movwf	strncmp@n^0,c
  5272  0009F0  EC8C  F025         	call	_strncmp	;wreg free
  5273  0009F4  500B               	movf	?_strncmp^0,w,c
  5274  0009F6  100C               	iorwf	(?_strncmp+1)^0,w,c
  5275  0009F8  A4D8               	btfss	status,2,c
  5276  0009FA  EF01  F005         	goto	u12091
  5277  0009FE  EF03  F005         	goto	u12090
  5278  000A02                     u12091:
  5279  000A02  EF43  F005         	goto	l9318
  5280  000A06                     u12090:
  5281  000A06                     
  5282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5283  000A06  0E03               	movlw	3
  5284  000A08  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5285  000A0C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5286  000A10  26DE               	addwf	postinc2,f,c
  5287  000A12  0E00               	movlw	0
  5288  000A14  22DD               	addwfc	postdec2,f,c
  5289                           
  5290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5291  000A16  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5292  000A1A  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5293  000A1E  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5294  000A22  0E02               	movlw	2
  5295  000A24  26DE               	addwf	postinc2,f,c
  5296  000A26  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5297  000A2A  0E00               	movlw	0
  5298  000A2C  22DD               	addwfc	postdec2,f,c
  5299  000A2E  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5300  000A32  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5301  000A36  50DF               	movf	indf2,w,c
  5302  000A38  0100               	movlb	0	; () banked
  5303  000A3A  6FA0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5304  000A3C  51A0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5305  000A3E  6FBE               	movwf	vfpfcnvrt@llu& (0+255),b
  5306  000A40  6BBF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5307  000A42  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5308  000A44  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5309  000A46  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5310  000A48  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5311  000A4A  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5312  000A4C  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5313  000A4E                     l9314:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5317  000A4E  C098  F026         	movff	vfpfcnvrt@fp,otoa@fp
  5318  000A52  C099  F027         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5319  000A56  C0BE  F028         	movff	vfpfcnvrt@llu,otoa@d
  5320  000A5A  C0BF  F029         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5321  000A5E  C0C0  F02A         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5322  000A62  C0C1  F02B         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5323  000A66  C0C2  F02C         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5324  000A6A  C0C3  F02D         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5325  000A6E  C0C4  F02E         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5326  000A72  C0C5  F02F         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5327  000A76  ECAF  F01E         	call	_otoa	;wreg free
  5328  000A7A  C026  F098         	movff	?_otoa,?_vfpfcnvrt
  5329  000A7E  C027  F099         	movff	?_otoa+1,?_vfpfcnvrt+1
  5330  000A82  EFD3  F00A         	goto	l909
  5331  000A86                     l9318:
  5332                           
  5333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5334  000A86  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5335  000A8A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5336  000A8E  CFDE F00B          	movff	postinc2,strncmp@_l
  5337  000A92  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5338  000A96  0EDB               	movlw	low (STR_46+1)
  5339  000A98  6E0D               	movwf	strncmp@_r^0,c
  5340  000A9A  0EFF               	movlw	high (STR_46+1)
  5341  000A9C  6E0E               	movwf	(strncmp@_r+1)^0,c
  5342  000A9E  0E00               	movlw	0
  5343  000AA0  6E10               	movwf	(strncmp@n+1)^0,c
  5344  000AA2  0E02               	movlw	2
  5345  000AA4  6E0F               	movwf	strncmp@n^0,c
  5346  000AA6  EC8C  F025         	call	_strncmp	;wreg free
  5347  000AAA  500B               	movf	?_strncmp^0,w,c
  5348  000AAC  100C               	iorwf	(?_strncmp+1)^0,w,c
  5349  000AAE  A4D8               	btfss	status,2,c
  5350  000AB0  EF5C  F005         	goto	u12101
  5351  000AB4  EF5E  F005         	goto	u12100
  5352  000AB8                     u12101:
  5353  000AB8  EF87  F005         	goto	l9326
  5354  000ABC                     u12100:
  5355  000ABC                     
  5356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5357  000ABC  0E02               	movlw	2
  5358  000ABE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5359  000AC2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5360  000AC6  26DE               	addwf	postinc2,f,c
  5361  000AC8  0E00               	movlw	0
  5362  000ACA  22DD               	addwfc	postdec2,f,c
  5363                           
  5364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5365  000ACC  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5366  000AD0  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5367  000AD4  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5368  000AD8  0E02               	movlw	2
  5369  000ADA  26DE               	addwf	postinc2,f,c
  5370  000ADC  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5371  000AE0  0E00               	movlw	0
  5372  000AE2  22DD               	addwfc	postdec2,f,c
  5373  000AE4  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5374  000AE8  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5375  000AEC  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  5376  000AF0  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  5377  000AF4  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5378  000AF8  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5379  000AFC  0100               	movlb	0	; () banked
  5380  000AFE  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5381  000B00  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5382  000B02  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5383  000B04  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5384  000B06  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5385  000B08  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5386  000B0A  EF27  F005         	goto	l9314
  5387  000B0E                     l9326:
  5388                           
  5389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5390  000B0E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5391  000B12  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5392  000B16  CFDE FFF6          	movff	postinc2,tblptrl
  5393  000B1A  CFDD FFF7          	movff	postdec2,tblptrh
  5394  000B1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5395  000B1E  6AF8               	clrf	tblptru,c
  5396  000B20                     	endif
  5397  000B20                     	if	0	;tblptru may be non-zero
  5398  000B20                     	endif
  5399  000B20  0008               	tblrd		*
  5400  000B22  50F5               	movf	tablat,w,c
  5401  000B24  0A6F               	xorlw	111
  5402  000B26  A4D8               	btfss	status,2,c
  5403  000B28  EF98  F005         	goto	u12111
  5404  000B2C  EF9A  F005         	goto	u12110
  5405  000B30                     u12111:
  5406  000B30  EFC2  F005         	goto	l9334
  5407  000B34                     u12110:
  5408  000B34                     
  5409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5410  000B34  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5411  000B38  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5412  000B3C  2ADE               	incf	postinc2,f,c
  5413  000B3E  0E00               	movlw	0
  5414  000B40  22DD               	addwfc	postdec2,f,c
  5415                           
  5416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5417  000B42  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5418  000B46  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5419  000B4A  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5420  000B4E  0E02               	movlw	2
  5421  000B50  26DE               	addwf	postinc2,f,c
  5422  000B52  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5423  000B56  0E00               	movlw	0
  5424  000B58  22DD               	addwfc	postdec2,f,c
  5425  000B5A  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5426  000B5E  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5427  000B62  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  5428  000B66  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  5429  000B6A  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5430  000B6E  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5431  000B72  0100               	movlb	0	; () banked
  5432  000B74  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5433  000B76  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5434  000B78  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5435  000B7A  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5436  000B7C  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5437  000B7E  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5438  000B80  EF27  F005         	goto	l9314
  5439  000B84                     l9334:
  5440                           
  5441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5442  000B84  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5443  000B88  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5444  000B8C  CFDE F00B          	movff	postinc2,strncmp@_l
  5445  000B90  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5446  000B94  0EF5               	movlw	low STR_56
  5447  000B96  6E0D               	movwf	strncmp@_r^0,c
  5448  000B98  0EFF               	movlw	high STR_56
  5449  000B9A  6E0E               	movwf	(strncmp@_r+1)^0,c
  5450  000B9C  0E00               	movlw	0
  5451  000B9E  6E10               	movwf	(strncmp@n+1)^0,c
  5452  000BA0  0E02               	movlw	2
  5453  000BA2  6E0F               	movwf	strncmp@n^0,c
  5454  000BA4  EC8C  F025         	call	_strncmp	;wreg free
  5455  000BA8  500B               	movf	?_strncmp^0,w,c
  5456  000BAA  100C               	iorwf	(?_strncmp+1)^0,w,c
  5457  000BAC  A4D8               	btfss	status,2,c
  5458  000BAE  EFDB  F005         	goto	u12121
  5459  000BB2  EFDD  F005         	goto	u12120
  5460  000BB6                     u12121:
  5461  000BB6  EF06  F006         	goto	l9342
  5462  000BBA                     u12120:
  5463  000BBA                     
  5464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5465  000BBA  0E02               	movlw	2
  5466  000BBC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5467  000BC0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5468  000BC4  26DE               	addwf	postinc2,f,c
  5469  000BC6  0E00               	movlw	0
  5470  000BC8  22DD               	addwfc	postdec2,f,c
  5471                           
  5472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5473  000BCA  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5474  000BCE  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5475  000BD2  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5476  000BD6  0E02               	movlw	2
  5477  000BD8  26DE               	addwf	postinc2,f,c
  5478  000BDA  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5479  000BDE  0E00               	movlw	0
  5480  000BE0  22DD               	addwfc	postdec2,f,c
  5481  000BE2  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5482  000BE6  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5483  000BEA  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  5484  000BEE  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  5485  000BF2  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5486  000BF6  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5487  000BFA  0100               	movlb	0	; () banked
  5488  000BFC  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5489  000BFE  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5490  000C00  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5491  000C02  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5492  000C04  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5493  000C06  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5494  000C08  EF27  F005         	goto	l9314
  5495  000C0C                     l9342:
  5496                           
  5497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5498  000C0C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5499  000C10  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5500  000C14  CFDE F00B          	movff	postinc2,strncmp@_l
  5501  000C18  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5502  000C1C  0ED6               	movlw	low STR_61
  5503  000C1E  6E0D               	movwf	strncmp@_r^0,c
  5504  000C20  0EFF               	movlw	high STR_61
  5505  000C22  6E0E               	movwf	(strncmp@_r+1)^0,c
  5506  000C24  0E00               	movlw	0
  5507  000C26  6E10               	movwf	(strncmp@n+1)^0,c
  5508  000C28  0E03               	movlw	3
  5509  000C2A  6E0F               	movwf	strncmp@n^0,c
  5510  000C2C  EC8C  F025         	call	_strncmp	;wreg free
  5511  000C30  500B               	movf	?_strncmp^0,w,c
  5512  000C32  100C               	iorwf	(?_strncmp+1)^0,w,c
  5513  000C34  A4D8               	btfss	status,2,c
  5514  000C36  EF1F  F006         	goto	u12131
  5515  000C3A  EF21  F006         	goto	u12130
  5516  000C3E                     u12131:
  5517  000C3E  EF4A  F006         	goto	l9352
  5518  000C42                     u12130:
  5519  000C42                     
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5521  000C42  0E03               	movlw	3
  5522  000C44  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5523  000C48  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5524  000C4C  26DE               	addwf	postinc2,f,c
  5525  000C4E  0E00               	movlw	0
  5526  000C50  22DD               	addwfc	postdec2,f,c
  5527                           
  5528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5529  000C52  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5530  000C56  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5531  000C5A  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5532  000C5E  0E02               	movlw	2
  5533  000C60  26DE               	addwf	postinc2,f,c
  5534  000C62  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5535  000C66  0E00               	movlw	0
  5536  000C68  22DD               	addwfc	postdec2,f,c
  5537  000C6A  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5538  000C6E  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5539  000C72  CFDE F0BB          	movff	postinc2,vfpfcnvrt@vp
  5540  000C76  CFDD F0BC          	movff	postdec2,vfpfcnvrt@vp+1
  5541  000C7A                     
  5542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5543  000C7A  C0BB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5544  000C7E  C0BC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5545  000C82  C04A  FFDF         	movff	_nout,indf2
  5546  000C86                     l9348:
  5547                           
  5548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5549  000C86  0E00               	movlw	0
  5550  000C88  0100               	movlb	0	; () banked
  5551  000C8A  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5552  000C8C  0E00               	movlw	0
  5553  000C8E  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  5554  000C90  EFD3  F00A         	goto	l909
  5555  000C94                     l9352:
  5556                           
  5557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5558  000C94  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5559  000C98  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5560  000C9C  CFDE F00B          	movff	postinc2,strncmp@_l
  5561  000CA0  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5562  000CA4  0ED7               	movlw	low (STR_61+1)
  5563  000CA6  6E0D               	movwf	strncmp@_r^0,c
  5564  000CA8  0EFF               	movlw	high (STR_61+1)
  5565  000CAA  6E0E               	movwf	(strncmp@_r+1)^0,c
  5566  000CAC  0E00               	movlw	0
  5567  000CAE  6E10               	movwf	(strncmp@n+1)^0,c
  5568  000CB0  0E02               	movlw	2
  5569  000CB2  6E0F               	movwf	strncmp@n^0,c
  5570  000CB4  EC8C  F025         	call	_strncmp	;wreg free
  5571  000CB8  500B               	movf	?_strncmp^0,w,c
  5572  000CBA  100C               	iorwf	(?_strncmp+1)^0,w,c
  5573  000CBC  A4D8               	btfss	status,2,c
  5574  000CBE  EF63  F006         	goto	u12141
  5575  000CC2  EF65  F006         	goto	u12140
  5576  000CC6                     u12141:
  5577  000CC6  EF8B  F006         	goto	l9362
  5578  000CCA                     u12140:
  5579  000CCA                     
  5580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5581  000CCA  0E02               	movlw	2
  5582  000CCC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5583  000CD0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5584  000CD4  26DE               	addwf	postinc2,f,c
  5585  000CD6  0E00               	movlw	0
  5586  000CD8  22DD               	addwfc	postdec2,f,c
  5587                           
  5588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5589  000CDA  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5590  000CDE  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5591  000CE2  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5592  000CE6  0E02               	movlw	2
  5593  000CE8  26DE               	addwf	postinc2,f,c
  5594  000CEA  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5595  000CEE  0E00               	movlw	0
  5596  000CF0  22DD               	addwfc	postdec2,f,c
  5597  000CF2  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5598  000CF6  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5599  000CFA  CFDE F0BB          	movff	postinc2,vfpfcnvrt@vp
  5600  000CFE  CFDD F0BC          	movff	postdec2,vfpfcnvrt@vp+1
  5601  000D02                     
  5602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5603  000D02  C0BB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5604  000D06  C0BC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5605  000D0A  C04A  FFDE         	movff	_nout,postinc2
  5606  000D0E  C04B  FFDD         	movff	_nout+1,postdec2
  5607  000D12  EF43  F006         	goto	l9348
  5608  000D16                     l9362:
  5609                           
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5611  000D16  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5612  000D1A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5613  000D1E  CFDE FFF6          	movff	postinc2,tblptrl
  5614  000D22  CFDD FFF7          	movff	postdec2,tblptrh
  5615  000D26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5616  000D26  6AF8               	clrf	tblptru,c
  5617  000D28                     	endif
  5618  000D28                     	if	0	;tblptru may be non-zero
  5619  000D28                     	endif
  5620  000D28  0008               	tblrd		*
  5621  000D2A  50F5               	movf	tablat,w,c
  5622  000D2C  0A6E               	xorlw	110
  5623  000D2E  A4D8               	btfss	status,2,c
  5624  000D30  EF9C  F006         	goto	u12151
  5625  000D34  EF9E  F006         	goto	u12150
  5626  000D38                     u12151:
  5627  000D38  EFC3  F006         	goto	l9372
  5628  000D3C                     u12150:
  5629  000D3C                     
  5630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5631  000D3C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5632  000D40  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5633  000D44  2ADE               	incf	postinc2,f,c
  5634  000D46  0E00               	movlw	0
  5635  000D48  22DD               	addwfc	postdec2,f,c
  5636                           
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5638  000D4A  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5639  000D4E  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5640  000D52  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5641  000D56  0E02               	movlw	2
  5642  000D58  26DE               	addwf	postinc2,f,c
  5643  000D5A  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5644  000D5E  0E00               	movlw	0
  5645  000D60  22DD               	addwfc	postdec2,f,c
  5646  000D62  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5647  000D66  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5648  000D6A  CFDE F0BB          	movff	postinc2,vfpfcnvrt@vp
  5649  000D6E  CFDD F0BC          	movff	postdec2,vfpfcnvrt@vp+1
  5650  000D72                     
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5652  000D72  C0BB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5653  000D76  C0BC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5654  000D7A  C04A  FFDE         	movff	_nout,postinc2
  5655  000D7E  C04B  FFDD         	movff	_nout+1,postdec2
  5656  000D82  EF43  F006         	goto	l9348
  5657  000D86                     l9372:
  5658                           
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5660  000D86  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5661  000D8A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5662  000D8E  CFDE F00B          	movff	postinc2,strncmp@_l
  5663  000D92  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5664  000D96  0EF2               	movlw	low STR_71
  5665  000D98  6E0D               	movwf	strncmp@_r^0,c
  5666  000D9A  0EFF               	movlw	high STR_71
  5667  000D9C  6E0E               	movwf	(strncmp@_r+1)^0,c
  5668  000D9E  0E00               	movlw	0
  5669  000DA0  6E10               	movwf	(strncmp@n+1)^0,c
  5670  000DA2  0E02               	movlw	2
  5671  000DA4  6E0F               	movwf	strncmp@n^0,c
  5672  000DA6  EC8C  F025         	call	_strncmp	;wreg free
  5673  000DAA  500B               	movf	?_strncmp^0,w,c
  5674  000DAC  100C               	iorwf	(?_strncmp+1)^0,w,c
  5675  000DAE  A4D8               	btfss	status,2,c
  5676  000DB0  EFDC  F006         	goto	u12161
  5677  000DB4  EFDE  F006         	goto	u12160
  5678  000DB8                     u12161:
  5679  000DB8  EF04  F007         	goto	l9382
  5680  000DBC                     u12160:
  5681  000DBC                     
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5683  000DBC  0E02               	movlw	2
  5684  000DBE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5685  000DC2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5686  000DC6  26DE               	addwf	postinc2,f,c
  5687  000DC8  0E00               	movlw	0
  5688  000DCA  22DD               	addwfc	postdec2,f,c
  5689                           
  5690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5691  000DCC  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5692  000DD0  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5693  000DD4  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5694  000DD8  0E02               	movlw	2
  5695  000DDA  26DE               	addwf	postinc2,f,c
  5696  000DDC  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5697  000DE0  0E00               	movlw	0
  5698  000DE2  22DD               	addwfc	postdec2,f,c
  5699  000DE4  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5700  000DE8  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5701  000DEC  CFDE F0BB          	movff	postinc2,vfpfcnvrt@vp
  5702  000DF0  CFDD F0BC          	movff	postdec2,vfpfcnvrt@vp+1
  5703  000DF4                     
  5704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5705  000DF4  C0BB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5706  000DF8  C0BC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5707  000DFC  C04A  FFDE         	movff	_nout,postinc2
  5708  000E00  C04B  FFDD         	movff	_nout+1,postdec2
  5709  000E04  EF43  F006         	goto	l9348
  5710  000E08                     l9382:
  5711                           
  5712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5713  000E08  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5714  000E0C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5715  000E10  CFDE FFF6          	movff	postinc2,tblptrl
  5716  000E14  CFDD FFF7          	movff	postdec2,tblptrh
  5717  000E18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5718  000E18  6AF8               	clrf	tblptru,c
  5719  000E1A                     	endif
  5720  000E1A                     	if	0	;tblptru may be non-zero
  5721  000E1A                     	endif
  5722  000E1A  0008               	tblrd		*
  5723  000E1C  50F5               	movf	tablat,w,c
  5724  000E1E  0A70               	xorlw	112
  5725  000E20  A4D8               	btfss	status,2,c
  5726  000E22  EF15  F007         	goto	u12171
  5727  000E26  EF17  F007         	goto	u12170
  5728  000E2A                     u12171:
  5729  000E2A  EF5B  F007         	goto	l9390
  5730  000E2E                     u12170:
  5731  000E2E                     
  5732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5733  000E2E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5734  000E32  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5735  000E36  2ADE               	incf	postinc2,f,c
  5736  000E38  0E00               	movlw	0
  5737  000E3A  22DD               	addwfc	postdec2,f,c
  5738                           
  5739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5740  000E3C  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5741  000E40  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5742  000E44  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5743  000E48  0E02               	movlw	2
  5744  000E4A  26DE               	addwf	postinc2,f,c
  5745  000E4C  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5746  000E50  0E00               	movlw	0
  5747  000E52  22DD               	addwfc	postdec2,f,c
  5748  000E54  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5749  000E58  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5750  000E5C  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  5751  000E60  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  5752  000E64  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5753  000E68  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5754  000E6C  0100               	movlb	0	; () banked
  5755  000E6E  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5756  000E70  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5757  000E72  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5758  000E74  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5759  000E76  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5760  000E78  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5761  000E7A                     
  5762                           ; BSR set to: 0
  5763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5764  000E7A  C098  F026         	movff	vfpfcnvrt@fp,xtoa@fp
  5765  000E7E  C099  F027         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5766  000E82  C0BE  F028         	movff	vfpfcnvrt@llu,xtoa@d
  5767  000E86  C0BF  F029         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5768  000E8A  C0C0  F02A         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5769  000E8E  C0C1  F02B         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5770  000E92  C0C2  F02C         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5771  000E96  C0C3  F02D         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5772  000E9A  C0C4  F02E         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5773  000E9E  C0C5  F02F         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5774  000EA2  0E78               	movlw	120
  5775  000EA4  6E30               	movwf	xtoa@x^0,c
  5776  000EA6  ECB2  F018         	call	_xtoa	;wreg free
  5777  000EAA  C026  F098         	movff	?_xtoa,?_vfpfcnvrt
  5778  000EAE  C027  F099         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5779  000EB2  EFD3  F00A         	goto	l909
  5780  000EB6                     l9390:
  5781                           
  5782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5783  000EB6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5784  000EBA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5785  000EBE  CFDE FFF6          	movff	postinc2,tblptrl
  5786  000EC2  CFDD FFF7          	movff	postdec2,tblptrh
  5787  000EC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5788  000EC6  6AF8               	clrf	tblptru,c
  5789  000EC8                     	endif
  5790  000EC8                     	if	0	;tblptru may be non-zero
  5791  000EC8                     	endif
  5792  000EC8  0008               	tblrd		*
  5793  000ECA  50F5               	movf	tablat,w,c
  5794  000ECC  0A73               	xorlw	115
  5795  000ECE  A4D8               	btfss	status,2,c
  5796  000ED0  EF6C  F007         	goto	u12181
  5797  000ED4  EF6E  F007         	goto	u12180
  5798  000ED8                     u12181:
  5799  000ED8  EF99  F007         	goto	l9398
  5800  000EDC                     u12180:
  5801  000EDC                     
  5802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5803  000EDC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5804  000EE0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5805  000EE4  2ADE               	incf	postinc2,f,c
  5806  000EE6  0E00               	movlw	0
  5807  000EE8  22DD               	addwfc	postdec2,f,c
  5808                           
  5809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5810  000EEA  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5811  000EEE  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5812  000EF2  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5813  000EF6  0E02               	movlw	2
  5814  000EF8  26DE               	addwf	postinc2,f,c
  5815  000EFA  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5816  000EFE  0E00               	movlw	0
  5817  000F00  22DD               	addwfc	postdec2,f,c
  5818  000F02  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5819  000F06  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5820  000F0A  CFDE F0A2          	movff	postinc2,vfpfcnvrt@cp
  5821  000F0E  CFDD F0A3          	movff	postdec2,vfpfcnvrt@cp+1
  5822  000F12                     
  5823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5824  000F12  C098  F014         	movff	vfpfcnvrt@fp,stoa@fp
  5825  000F16  C099  F015         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5826  000F1A  C0A2  F016         	movff	vfpfcnvrt@cp,stoa@s
  5827  000F1E  C0A3  F017         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5828  000F22  EC0F  F022         	call	_stoa	;wreg free
  5829  000F26  C014  F098         	movff	?_stoa,?_vfpfcnvrt
  5830  000F2A  C015  F099         	movff	?_stoa+1,?_vfpfcnvrt+1
  5831  000F2E  EFD3  F00A         	goto	l909
  5832  000F32                     l9398:
  5833                           
  5834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5835  000F32  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5836  000F36  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5837  000F3A  CFDE F00B          	movff	postinc2,strncmp@_l
  5838  000F3E  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5839  000F42  0EDE               	movlw	low STR_76
  5840  000F44  6E0D               	movwf	strncmp@_r^0,c
  5841  000F46  0EFF               	movlw	high STR_76
  5842  000F48  6E0E               	movwf	(strncmp@_r+1)^0,c
  5843  000F4A  0E00               	movlw	0
  5844  000F4C  6E10               	movwf	(strncmp@n+1)^0,c
  5845  000F4E  0E03               	movlw	3
  5846  000F50  6E0F               	movwf	strncmp@n^0,c
  5847  000F52  EC8C  F025         	call	_strncmp	;wreg free
  5848  000F56  500B               	movf	?_strncmp^0,w,c
  5849  000F58  100C               	iorwf	(?_strncmp+1)^0,w,c
  5850  000F5A  A4D8               	btfss	status,2,c
  5851  000F5C  EFB2  F007         	goto	u12191
  5852  000F60  EFB4  F007         	goto	u12190
  5853  000F64                     u12191:
  5854  000F64  EFF4  F007         	goto	l9406
  5855  000F68                     u12190:
  5856  000F68                     
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5858  000F68  0E03               	movlw	3
  5859  000F6A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5860  000F6E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5861  000F72  26DE               	addwf	postinc2,f,c
  5862  000F74  0E00               	movlw	0
  5863  000F76  22DD               	addwfc	postdec2,f,c
  5864                           
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5866  000F78  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5867  000F7C  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5868  000F80  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5869  000F84  0E02               	movlw	2
  5870  000F86  26DE               	addwf	postinc2,f,c
  5871  000F88  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5872  000F8C  0E00               	movlw	0
  5873  000F8E  22DD               	addwfc	postdec2,f,c
  5874  000F90  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5875  000F94  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5876  000F98  50DF               	movf	indf2,w,c
  5877  000F9A  0100               	movlb	0	; () banked
  5878  000F9C  6FA0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5879  000F9E  51A0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5880  000FA0  6FBE               	movwf	vfpfcnvrt@llu& (0+255),b
  5881  000FA2  6BBF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5882  000FA4  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5883  000FA6  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5884  000FA8  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5885  000FAA  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5886  000FAC  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5887  000FAE  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5888  000FB0                     l9402:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5892  000FB0  C098  F026         	movff	vfpfcnvrt@fp,utoa@fp
  5893  000FB4  C099  F027         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5894  000FB8  C0BE  F028         	movff	vfpfcnvrt@llu,utoa@d
  5895  000FBC  C0BF  F029         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5896  000FC0  C0C0  F02A         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5897  000FC4  C0C1  F02B         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5898  000FC8  C0C2  F02C         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5899  000FCC  C0C3  F02D         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5900  000FD0  C0C4  F02E         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5901  000FD4  C0C5  F02F         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5902  000FD8  ECAF  F01D         	call	_utoa	;wreg free
  5903  000FDC  C026  F098         	movff	?_utoa,?_vfpfcnvrt
  5904  000FE0  C027  F099         	movff	?_utoa+1,?_vfpfcnvrt+1
  5905  000FE4  EFD3  F00A         	goto	l909
  5906  000FE8                     l9406:
  5907                           
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5909  000FE8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5910  000FEC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5911  000FF0  CFDE F00B          	movff	postinc2,strncmp@_l
  5912  000FF4  CFDD F00C          	movff	postdec2,strncmp@_l+1
  5913  000FF8  0EDF               	movlw	low (STR_76+1)
  5914  000FFA  6E0D               	movwf	strncmp@_r^0,c
  5915  000FFC  0EFF               	movlw	high (STR_76+1)
  5916  000FFE  6E0E               	movwf	(strncmp@_r+1)^0,c
  5917  001000  0E00               	movlw	0
  5918  001002  6E10               	movwf	(strncmp@n+1)^0,c
  5919  001004  0E02               	movlw	2
  5920  001006  6E0F               	movwf	strncmp@n^0,c
  5921  001008  EC8C  F025         	call	_strncmp	;wreg free
  5922  00100C  500B               	movf	?_strncmp^0,w,c
  5923  00100E  100C               	iorwf	(?_strncmp+1)^0,w,c
  5924  001010  A4D8               	btfss	status,2,c
  5925  001012  EF0D  F008         	goto	u12201
  5926  001016  EF0F  F008         	goto	u12200
  5927  00101A                     u12201:
  5928  00101A  EF38  F008         	goto	l9414
  5929  00101E                     u12200:
  5930  00101E                     
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5932  00101E  0E02               	movlw	2
  5933  001020  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5934  001024  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5935  001028  26DE               	addwf	postinc2,f,c
  5936  00102A  0E00               	movlw	0
  5937  00102C  22DD               	addwfc	postdec2,f,c
  5938                           
  5939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5940  00102E  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5941  001032  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5942  001036  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5943  00103A  0E02               	movlw	2
  5944  00103C  26DE               	addwf	postinc2,f,c
  5945  00103E  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5946  001042  0E00               	movlw	0
  5947  001044  22DD               	addwfc	postdec2,f,c
  5948  001046  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5949  00104A  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5950  00104E  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  5951  001052  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  5952  001056  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5953  00105A  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5954  00105E  0100               	movlb	0	; () banked
  5955  001060  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5956  001062  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5957  001064  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5958  001066  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5959  001068  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5960  00106A  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5961  00106C  EFD8  F007         	goto	l9402
  5962  001070                     l9414:
  5963                           
  5964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5965  001070  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5966  001074  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5967  001078  CFDE FFF6          	movff	postinc2,tblptrl
  5968  00107C  CFDD FFF7          	movff	postdec2,tblptrh
  5969  001080                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5970  001080  6AF8               	clrf	tblptru,c
  5971  001082                     	endif
  5972  001082                     	if	0	;tblptru may be non-zero
  5973  001082                     	endif
  5974  001082  0008               	tblrd		*
  5975  001084  50F5               	movf	tablat,w,c
  5976  001086  0A75               	xorlw	117
  5977  001088  A4D8               	btfss	status,2,c
  5978  00108A  EF49  F008         	goto	u12211
  5979  00108E  EF4B  F008         	goto	u12210
  5980  001092                     u12211:
  5981  001092  EF73  F008         	goto	l9422
  5982  001096                     u12210:
  5983  001096                     
  5984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5985  001096  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5986  00109A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5987  00109E  2ADE               	incf	postinc2,f,c
  5988  0010A0  0E00               	movlw	0
  5989  0010A2  22DD               	addwfc	postdec2,f,c
  5990                           
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5992  0010A4  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5993  0010A8  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5994  0010AC  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  5995  0010B0  0E02               	movlw	2
  5996  0010B2  26DE               	addwf	postinc2,f,c
  5997  0010B4  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  5998  0010B8  0E00               	movlw	0
  5999  0010BA  22DD               	addwfc	postdec2,f,c
  6000  0010BC  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6001  0010C0  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6002  0010C4  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  6003  0010C8  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  6004  0010CC  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6005  0010D0  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6006  0010D4  0100               	movlb	0	; () banked
  6007  0010D6  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6008  0010D8  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6009  0010DA  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6010  0010DC  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6011  0010DE  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6012  0010E0  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6013  0010E2  EFD8  F007         	goto	l9402
  6014  0010E6                     l9422:
  6015                           
  6016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6017  0010E6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6018  0010EA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6019  0010EE  CFDE F00B          	movff	postinc2,strncmp@_l
  6020  0010F2  CFDD F00C          	movff	postdec2,strncmp@_l+1
  6021  0010F6  0EF8               	movlw	low STR_86
  6022  0010F8  6E0D               	movwf	strncmp@_r^0,c
  6023  0010FA  0EFF               	movlw	high STR_86
  6024  0010FC  6E0E               	movwf	(strncmp@_r+1)^0,c
  6025  0010FE  0E00               	movlw	0
  6026  001100  6E10               	movwf	(strncmp@n+1)^0,c
  6027  001102  0E02               	movlw	2
  6028  001104  6E0F               	movwf	strncmp@n^0,c
  6029  001106  EC8C  F025         	call	_strncmp	;wreg free
  6030  00110A  500B               	movf	?_strncmp^0,w,c
  6031  00110C  100C               	iorwf	(?_strncmp+1)^0,w,c
  6032  00110E  A4D8               	btfss	status,2,c
  6033  001110  EF8C  F008         	goto	u12221
  6034  001114  EF8E  F008         	goto	u12220
  6035  001118                     u12221:
  6036  001118  EFB7  F008         	goto	l9430
  6037  00111C                     u12220:
  6038  00111C                     
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6040  00111C  0E02               	movlw	2
  6041  00111E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6042  001122  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6043  001126  26DE               	addwf	postinc2,f,c
  6044  001128  0E00               	movlw	0
  6045  00112A  22DD               	addwfc	postdec2,f,c
  6046                           
  6047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6048  00112C  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6049  001130  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6050  001134  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  6051  001138  0E02               	movlw	2
  6052  00113A  26DE               	addwf	postinc2,f,c
  6053  00113C  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  6054  001140  0E00               	movlw	0
  6055  001142  22DD               	addwfc	postdec2,f,c
  6056  001144  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6057  001148  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6058  00114C  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  6059  001150  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  6060  001154  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6061  001158  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6062  00115C  0100               	movlb	0	; () banked
  6063  00115E  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6064  001160  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6065  001162  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6066  001164  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6067  001166  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6068  001168  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6069  00116A  EFD8  F007         	goto	l9402
  6070  00116E                     l9430:
  6071                           
  6072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6073  00116E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6074  001172  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6075  001176  CFDE F00B          	movff	postinc2,strncmp@_l
  6076  00117A  CFDD F00C          	movff	postdec2,strncmp@_l+1
  6077  00117E  0EE2               	movlw	low STR_91
  6078  001180  6E0D               	movwf	strncmp@_r^0,c
  6079  001182  0EFF               	movlw	high STR_91
  6080  001184  6E0E               	movwf	(strncmp@_r+1)^0,c
  6081  001186  0E00               	movlw	0
  6082  001188  6E10               	movwf	(strncmp@n+1)^0,c
  6083  00118A  0E03               	movlw	3
  6084  00118C  6E0F               	movwf	strncmp@n^0,c
  6085  00118E  EC8C  F025         	call	_strncmp	;wreg free
  6086  001192  500B               	movf	?_strncmp^0,w,c
  6087  001194  100C               	iorwf	(?_strncmp+1)^0,w,c
  6088  001196  B4D8               	btfsc	status,2,c
  6089  001198  EFD0  F008         	goto	u12231
  6090  00119C  EFD2  F008         	goto	u12230
  6091  0011A0                     u12231:
  6092  0011A0  EFED  F008         	goto	l9434
  6093  0011A4                     u12230:
  6094  0011A4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6095  0011A8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6096  0011AC  CFDE F00B          	movff	postinc2,strncmp@_l
  6097  0011B0  CFDD F00C          	movff	postdec2,strncmp@_l+1
  6098  0011B4  0EC2               	movlw	low STR_95
  6099  0011B6  6E0D               	movwf	strncmp@_r^0,c
  6100  0011B8  0EFF               	movlw	high STR_95
  6101  0011BA  6E0E               	movwf	(strncmp@_r+1)^0,c
  6102  0011BC  0E00               	movlw	0
  6103  0011BE  6E10               	movwf	(strncmp@n+1)^0,c
  6104  0011C0  0E03               	movlw	3
  6105  0011C2  6E0F               	movwf	strncmp@n^0,c
  6106  0011C4  EC8C  F025         	call	_strncmp	;wreg free
  6107  0011C8  500B               	movf	?_strncmp^0,w,c
  6108  0011CA  100C               	iorwf	(?_strncmp+1)^0,w,c
  6109  0011CC  A4D8               	btfss	status,2,c
  6110  0011CE  EFEB  F008         	goto	u12241
  6111  0011D2  EFED  F008         	goto	u12240
  6112  0011D6                     u12241:
  6113  0011D6  EF43  F009         	goto	l9444
  6114  0011DA                     u12240:
  6115  0011DA                     l9434:
  6116                           
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6118  0011DA  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6119  0011DE  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6120  0011E2  CFDE F09E          	movff	postinc2,??_vfpfcnvrt
  6121  0011E6  CFDD F09F          	movff	postdec2,??_vfpfcnvrt+1
  6122  0011EA  0E02               	movlw	2
  6123  0011EC  0100               	movlb	0	; () banked
  6124  0011EE  279E               	addwf	??_vfpfcnvrt& (0+255),f,b
  6125  0011F0  0E00               	movlw	0
  6126  0011F2  239F               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6127  0011F4  C09E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6128  0011F8  C09F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6129  0011FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6130  0011FC  6AF8               	clrf	tblptru,c
  6131  0011FE                     	endif
  6132  0011FE                     	if	0	;tblptru may be non-zero
  6133  0011FE                     	endif
  6134  0011FE  0008               	tblrd		*
  6135  001200  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  6136  001204                     
  6137                           ; BSR set to: 0
  6138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6139  001204  0E03               	movlw	3
  6140  001206  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6141  00120A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6142  00120E  26DE               	addwf	postinc2,f,c
  6143  001210  0E00               	movlw	0
  6144  001212  22DD               	addwfc	postdec2,f,c
  6145  001214                     
  6146                           ; BSR set to: 0
  6147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6148  001214  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6149  001218  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6150  00121C  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  6151  001220  0E02               	movlw	2
  6152  001222  26DE               	addwf	postinc2,f,c
  6153  001224  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  6154  001228  0E00               	movlw	0
  6155  00122A  22DD               	addwfc	postdec2,f,c
  6156  00122C  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6157  001230  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6158  001234  50DF               	movf	indf2,w,c
  6159  001236  6FA0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6160  001238  51A0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6161  00123A  6FBE               	movwf	vfpfcnvrt@llu& (0+255),b
  6162  00123C  6BBF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6163  00123E  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6164  001240  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6165  001242  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6166  001244  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6167  001246  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6168  001248  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6169  00124A                     l9440:
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6173  00124A  C098  F026         	movff	vfpfcnvrt@fp,xtoa@fp
  6174  00124E  C099  F027         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6175  001252  C0BE  F028         	movff	vfpfcnvrt@llu,xtoa@d
  6176  001256  C0BF  F029         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6177  00125A  C0C0  F02A         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6178  00125E  C0C1  F02B         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6179  001262  C0C2  F02C         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6180  001266  C0C3  F02D         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6181  00126A  C0C4  F02E         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6182  00126E  C0C5  F02F         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6183  001272  C0BD  F030         	movff	vfpfcnvrt@c,xtoa@x
  6184  001276  ECB2  F018         	call	_xtoa	;wreg free
  6185  00127A  C026  F098         	movff	?_xtoa,?_vfpfcnvrt
  6186  00127E  C027  F099         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6187  001282  EFD3  F00A         	goto	l909
  6188  001286                     l9444:
  6189                           
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6191  001286  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6192  00128A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6193  00128E  CFDE F00B          	movff	postinc2,strncmp@_l
  6194  001292  CFDD F00C          	movff	postdec2,strncmp@_l+1
  6195  001296  0EE3               	movlw	low (STR_91+1)
  6196  001298  6E0D               	movwf	strncmp@_r^0,c
  6197  00129A  0EFF               	movlw	high (STR_91+1)
  6198  00129C  6E0E               	movwf	(strncmp@_r+1)^0,c
  6199  00129E  0E00               	movlw	0
  6200  0012A0  6E10               	movwf	(strncmp@n+1)^0,c
  6201  0012A2  0E02               	movlw	2
  6202  0012A4  6E0F               	movwf	strncmp@n^0,c
  6203  0012A6  EC8C  F025         	call	_strncmp	;wreg free
  6204  0012AA  500B               	movf	?_strncmp^0,w,c
  6205  0012AC  100C               	iorwf	(?_strncmp+1)^0,w,c
  6206  0012AE  B4D8               	btfsc	status,2,c
  6207  0012B0  EF5C  F009         	goto	u12251
  6208  0012B4  EF5E  F009         	goto	u12250
  6209  0012B8                     u12251:
  6210  0012B8  EF79  F009         	goto	l9448
  6211  0012BC                     u12250:
  6212  0012BC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6213  0012C0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6214  0012C4  CFDE F00B          	movff	postinc2,strncmp@_l
  6215  0012C8  CFDD F00C          	movff	postdec2,strncmp@_l+1
  6216  0012CC  0EC3               	movlw	low (STR_95+1)
  6217  0012CE  6E0D               	movwf	strncmp@_r^0,c
  6218  0012D0  0EFF               	movlw	high (STR_95+1)
  6219  0012D2  6E0E               	movwf	(strncmp@_r+1)^0,c
  6220  0012D4  0E00               	movlw	0
  6221  0012D6  6E10               	movwf	(strncmp@n+1)^0,c
  6222  0012D8  0E02               	movlw	2
  6223  0012DA  6E0F               	movwf	strncmp@n^0,c
  6224  0012DC  EC8C  F025         	call	_strncmp	;wreg free
  6225  0012E0  500B               	movf	?_strncmp^0,w,c
  6226  0012E2  100C               	iorwf	(?_strncmp+1)^0,w,c
  6227  0012E4  A4D8               	btfss	status,2,c
  6228  0012E6  EF77  F009         	goto	u12261
  6229  0012EA  EF79  F009         	goto	u12260
  6230  0012EE                     u12261:
  6231  0012EE  EFB6  F009         	goto	l9458
  6232  0012F2                     u12260:
  6233  0012F2                     l9448:
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6236  0012F2  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6237  0012F6  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6238  0012FA  CFDE F09E          	movff	postinc2,??_vfpfcnvrt
  6239  0012FE  CFDD F09F          	movff	postdec2,??_vfpfcnvrt+1
  6240  001302  0E01               	movlw	1
  6241  001304  0100               	movlb	0	; () banked
  6242  001306  279E               	addwf	??_vfpfcnvrt& (0+255),f,b
  6243  001308  0E00               	movlw	0
  6244  00130A  239F               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6245  00130C  C09E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6246  001310  C09F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6247  001314                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6248  001314  6AF8               	clrf	tblptru,c
  6249  001316                     	endif
  6250  001316                     	if	0	;tblptru may be non-zero
  6251  001316                     	endif
  6252  001316  0008               	tblrd		*
  6253  001318  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  6254  00131C                     
  6255                           ; BSR set to: 0
  6256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6257  00131C  0E02               	movlw	2
  6258  00131E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6259  001322  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6260  001326  26DE               	addwf	postinc2,f,c
  6261  001328  0E00               	movlw	0
  6262  00132A  22DD               	addwfc	postdec2,f,c
  6263  00132C                     
  6264                           ; BSR set to: 0
  6265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6266  00132C  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6267  001330  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6268  001334  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  6269  001338  0E02               	movlw	2
  6270  00133A  26DE               	addwf	postinc2,f,c
  6271  00133C  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  6272  001340  0E00               	movlw	0
  6273  001342  22DD               	addwfc	postdec2,f,c
  6274  001344  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6275  001348  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6276  00134C  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  6277  001350  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  6278  001354  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6279  001358  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6280  00135C  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6281  00135E  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6282  001360  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6283  001362  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6284  001364  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6285  001366  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6286  001368  EF25  F009         	goto	l9440
  6287  00136C                     l9458:
  6288                           
  6289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6290  00136C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6291  001370  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6292  001374  CFDE FFF6          	movff	postinc2,tblptrl
  6293  001378  CFDD FFF7          	movff	postdec2,tblptrh
  6294  00137C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6295  00137C  6AF8               	clrf	tblptru,c
  6296  00137E                     	endif
  6297  00137E                     	if	0	;tblptru may be non-zero
  6298  00137E                     	endif
  6299  00137E  0008               	tblrd		*
  6300  001380  50F5               	movf	tablat,w,c
  6301  001382  0A78               	xorlw	120
  6302  001384  B4D8               	btfsc	status,2,c
  6303  001386  EFC7  F009         	goto	u12271
  6304  00138A  EFC9  F009         	goto	u12270
  6305  00138E                     u12271:
  6306  00138E  EFDC  F009         	goto	l9462
  6307  001392                     u12270:
  6308  001392  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6309  001396  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6310  00139A  CFDE FFF6          	movff	postinc2,tblptrl
  6311  00139E  CFDD FFF7          	movff	postdec2,tblptrh
  6312  0013A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6313  0013A2  6AF8               	clrf	tblptru,c
  6314  0013A4                     	endif
  6315  0013A4                     	if	0	;tblptru may be non-zero
  6316  0013A4                     	endif
  6317  0013A4  0008               	tblrd		*
  6318  0013A6  50F5               	movf	tablat,w,c
  6319  0013A8  0A58               	xorlw	88
  6320  0013AA  A4D8               	btfss	status,2,c
  6321  0013AC  EFDA  F009         	goto	u12281
  6322  0013B0  EFDC  F009         	goto	u12280
  6323  0013B4                     u12281:
  6324  0013B4  EF10  F00A         	goto	l9472
  6325  0013B8                     u12280:
  6326  0013B8                     l9462:
  6327                           
  6328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6329  0013B8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6330  0013BC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6331  0013C0  CFDE FFF6          	movff	postinc2,tblptrl
  6332  0013C4  CFDD FFF7          	movff	postdec2,tblptrh
  6333  0013C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6334  0013C8  6AF8               	clrf	tblptru,c
  6335  0013CA                     	endif
  6336  0013CA                     	if	0	;tblptru may be non-zero
  6337  0013CA                     	endif
  6338  0013CA  0008               	tblrd		*
  6339  0013CC  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  6340  0013D0                     
  6341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6342  0013D0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6343  0013D4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6344  0013D8  2ADE               	incf	postinc2,f,c
  6345  0013DA  0E00               	movlw	0
  6346  0013DC  22DD               	addwfc	postdec2,f,c
  6347  0013DE                     
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6349  0013DE  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6350  0013E2  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6351  0013E6  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  6352  0013EA  0E02               	movlw	2
  6353  0013EC  26DE               	addwf	postinc2,f,c
  6354  0013EE  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  6355  0013F2  0E00               	movlw	0
  6356  0013F4  22DD               	addwfc	postdec2,f,c
  6357  0013F6  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6358  0013FA  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6359  0013FE  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  6360  001402  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  6361  001406  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6362  00140A  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6363  00140E  0100               	movlb	0	; () banked
  6364  001410  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6365  001412  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6366  001414  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6367  001416  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6368  001418  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6369  00141A  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6370  00141C  EF25  F009         	goto	l9440
  6371  001420                     l9472:
  6372                           
  6373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6374  001420  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6375  001424  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6376  001428  CFDE F00B          	movff	postinc2,strncmp@_l
  6377  00142C  CFDD F00C          	movff	postdec2,strncmp@_l+1
  6378  001430  0EFB               	movlw	low STR_109
  6379  001432  6E0D               	movwf	strncmp@_r^0,c
  6380  001434  0EFF               	movlw	high STR_109
  6381  001436  6E0E               	movwf	(strncmp@_r+1)^0,c
  6382  001438  0E00               	movlw	0
  6383  00143A  6E10               	movwf	(strncmp@n+1)^0,c
  6384  00143C  0E02               	movlw	2
  6385  00143E  6E0F               	movwf	strncmp@n^0,c
  6386  001440  EC8C  F025         	call	_strncmp	;wreg free
  6387  001444  500B               	movf	?_strncmp^0,w,c
  6388  001446  100C               	iorwf	(?_strncmp+1)^0,w,c
  6389  001448  B4D8               	btfsc	status,2,c
  6390  00144A  EF29  F00A         	goto	u12291
  6391  00144E  EF2B  F00A         	goto	u12290
  6392  001452                     u12291:
  6393  001452  EF46  F00A         	goto	l9476
  6394  001456                     u12290:
  6395  001456  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6396  00145A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6397  00145E  CFDE F00B          	movff	postinc2,strncmp@_l
  6398  001462  CFDD F00C          	movff	postdec2,strncmp@_l+1
  6399  001466  0EE6               	movlw	low STR_113
  6400  001468  6E0D               	movwf	strncmp@_r^0,c
  6401  00146A  0EFF               	movlw	high STR_113
  6402  00146C  6E0E               	movwf	(strncmp@_r+1)^0,c
  6403  00146E  0E00               	movlw	0
  6404  001470  6E10               	movwf	(strncmp@n+1)^0,c
  6405  001472  0E02               	movlw	2
  6406  001474  6E0F               	movwf	strncmp@n^0,c
  6407  001476  EC8C  F025         	call	_strncmp	;wreg free
  6408  00147A  500B               	movf	?_strncmp^0,w,c
  6409  00147C  100C               	iorwf	(?_strncmp+1)^0,w,c
  6410  00147E  A4D8               	btfss	status,2,c
  6411  001480  EF44  F00A         	goto	u12301
  6412  001484  EF46  F00A         	goto	u12300
  6413  001488                     u12301:
  6414  001488  EF83  F00A         	goto	l9486
  6415  00148C                     u12300:
  6416  00148C                     l9476:
  6417                           
  6418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6419  00148C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6420  001490  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6421  001494  CFDE F09E          	movff	postinc2,??_vfpfcnvrt
  6422  001498  CFDD F09F          	movff	postdec2,??_vfpfcnvrt+1
  6423  00149C  0E01               	movlw	1
  6424  00149E  0100               	movlb	0	; () banked
  6425  0014A0  279E               	addwf	??_vfpfcnvrt& (0+255),f,b
  6426  0014A2  0E00               	movlw	0
  6427  0014A4  239F               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6428  0014A6  C09E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6429  0014AA  C09F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6430  0014AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6431  0014AE  6AF8               	clrf	tblptru,c
  6432  0014B0                     	endif
  6433  0014B0                     	if	0	;tblptru may be non-zero
  6434  0014B0                     	endif
  6435  0014B0  0008               	tblrd		*
  6436  0014B2  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  6437  0014B6                     
  6438                           ; BSR set to: 0
  6439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6440  0014B6  0E02               	movlw	2
  6441  0014B8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6442  0014BC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6443  0014C0  26DE               	addwf	postinc2,f,c
  6444  0014C2  0E00               	movlw	0
  6445  0014C4  22DD               	addwfc	postdec2,f,c
  6446  0014C6                     
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6449  0014C6  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6450  0014CA  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6451  0014CE  CFDF F09E          	movff	indf2,??_vfpfcnvrt
  6452  0014D2  0E02               	movlw	2
  6453  0014D4  26DE               	addwf	postinc2,f,c
  6454  0014D6  CFDF F09F          	movff	indf2,??_vfpfcnvrt+1
  6455  0014DA  0E00               	movlw	0
  6456  0014DC  22DD               	addwfc	postdec2,f,c
  6457  0014DE  C09E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6458  0014E2  C09F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6459  0014E6  CFDE F0A0          	movff	postinc2,??_vfpfcnvrt+2
  6460  0014EA  CFDD F0A1          	movff	postdec2,??_vfpfcnvrt+3
  6461  0014EE  C0A0  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6462  0014F2  C0A1  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6463  0014F6  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6464  0014F8  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6465  0014FA  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6466  0014FC  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6467  0014FE  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6468  001500  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6469  001502  EF25  F009         	goto	l9440
  6470  001506                     l9486:
  6471                           
  6472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6473  001506  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6474  00150A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6475  00150E  CFDE FFF6          	movff	postinc2,tblptrl
  6476  001512  CFDD FFF7          	movff	postdec2,tblptrh
  6477  001516                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6478  001516  6AF8               	clrf	tblptru,c
  6479  001518                     	endif
  6480  001518                     	if	0	;tblptru may be non-zero
  6481  001518                     	endif
  6482  001518  0008               	tblrd		*
  6483  00151A  50F5               	movf	tablat,w,c
  6484  00151C  0A25               	xorlw	37
  6485  00151E  A4D8               	btfss	status,2,c
  6486  001520  EF94  F00A         	goto	u12311
  6487  001524  EF96  F00A         	goto	u12310
  6488  001528                     u12311:
  6489  001528  EFAE  F00A         	goto	l9496
  6490  00152C                     u12310:
  6491  00152C                     
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6493  00152C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6494  001530  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6495  001534  2ADE               	incf	postinc2,f,c
  6496  001536  0E00               	movlw	0
  6497  001538  22DD               	addwfc	postdec2,f,c
  6498  00153A                     
  6499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6500  00153A  0E00               	movlw	0
  6501  00153C  6E0C               	movwf	(fputc@c+1)^0,c
  6502  00153E  0E25               	movlw	37
  6503  001540  6E0B               	movwf	fputc@c^0,c
  6504  001542  C098  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  6505  001546  C099  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6506  00154A  EC91  F029         	call	_fputc	;wreg free
  6507  00154E                     l9492:
  6508                           
  6509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6510  00154E  0E00               	movlw	0
  6511  001550  0100               	movlb	0	; () banked
  6512  001552  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6513  001554  0E01               	movlw	1
  6514  001556  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  6515  001558  EFD3  F00A         	goto	l909
  6516  00155C                     l9496:
  6517                           
  6518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6519  00155C  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6520  001560  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6521  001564  2ADE               	incf	postinc2,f,c
  6522  001566  0E00               	movlw	0
  6523  001568  22DD               	addwfc	postdec2,f,c
  6524  00156A  EF43  F006         	goto	l9348
  6525  00156E                     l9502:
  6526                           
  6527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6528  00156E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6529  001572  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6530  001576  CFDE FFF6          	movff	postinc2,tblptrl
  6531  00157A  CFDD FFF7          	movff	postdec2,tblptrh
  6532  00157E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6533  00157E  6AF8               	clrf	tblptru,c
  6534  001580                     	endif
  6535  001580                     	if	0	;tblptru may be non-zero
  6536  001580                     	endif
  6537  001580  0008               	tblrd		*
  6538  001582  50F5               	movf	tablat,w,c
  6539  001584  6E0B               	movwf	fputc@c^0,c
  6540  001586  6A0C               	clrf	(fputc@c+1)^0,c
  6541  001588  C098  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  6542  00158C  C099  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6543  001590  EC91  F029         	call	_fputc	;wreg free
  6544  001594                     
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6546  001594  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6547  001598  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6548  00159C  2ADE               	incf	postinc2,f,c
  6549  00159E  0E00               	movlw	0
  6550  0015A0  22DD               	addwfc	postdec2,f,c
  6551  0015A2  EFA7  F00A         	goto	l9492
  6552  0015A6                     l909:
  6553  0015A6  0012               	return		;funcret
  6554  0015A8                     __end_of_vfpfcnvrt:
  6555                           	opt callstack 0
  6556                           
  6557 ;; *************** function _xtoa *****************
  6558 ;; Defined at:
  6559 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  6562 ;;		 -> vsnprintf@f(6), 
  6563 ;;  d               8   39[COMRAM] unsigned long long 
  6564 ;;  x               1   47[COMRAM] unsigned char 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  n               8    8[BANK0 ] unsigned long long 
  6567 ;;  c               2   18[BANK0 ] int 
  6568 ;;  i               2   16[BANK0 ] int 
  6569 ;;  w               2    6[BANK0 ] int 
  6570 ;;  p               2    4[BANK0 ] int 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  2   37[COMRAM] int 
  6573 ;; Registers used:
  6574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6580 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Totals:        19      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;Total ram usage:       39 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    9
  6587 ;; This function calls:
  6588 ;;		_isalpha
  6589 ;;		_isupper
  6590 ;;		_pad
  6591 ;;		_toupper
  6592 ;; This function is called by:
  6593 ;;		_vfpfcnvrt
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text5
  6598  003164                     __ptext5:
  6599                           	opt callstack 0
  6600  003164                     _xtoa:
  6601                           	opt callstack 17
  6602  003164                     
  6603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6604  003164  BE4F               	btfsc	(_prec+1)^0,7,c
  6605  003166  EFB7  F018         	goto	u11491
  6606  00316A  EFB9  F018         	goto	u11490
  6607  00316E                     u11491:
  6608  00316E  EFBA  F018         	goto	l9022
  6609  003172                     u11490:
  6610  003172                     
  6611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6612  003172  9250               	bcf	_flags^0,1,c
  6613  003174                     l9022:
  6614                           
  6615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6616  003174  BE4F               	btfsc	(_prec+1)^0,7,c
  6617  003176  EFC7  F018         	goto	u11500
  6618  00317A  504F               	movf	(_prec+1)^0,w,c
  6619  00317C  E106               	bnz	u11501
  6620  00317E  044E               	decf	_prec^0,w,c
  6621  003180  B0D8               	btfsc	status,0,c
  6622  003182  EFC5  F018         	goto	u11501
  6623  003186  EFC7  F018         	goto	u11500
  6624  00318A                     u11501:
  6625  00318A  EFCE  F018         	goto	l845
  6626  00318E                     u11500:
  6627  00318E  0E00               	movlw	0
  6628  003190  0100               	movlb	0	; () banked
  6629  003192  6F65               	movwf	(xtoa@p+1)& (0+255),b
  6630  003194  0E01               	movlw	1
  6631  003196  6F64               	movwf	xtoa@p& (0+255),b
  6632  003198  EFD2  F018         	goto	l847
  6633  00319C                     l845:
  6634  00319C  C04E  F064         	movff	_prec,xtoa@p
  6635  0031A0  C04F  F065         	movff	_prec+1,xtoa@p+1
  6636  0031A4                     l847:
  6637                           
  6638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6639  0031A4  C04C  F066         	movff	_width,xtoa@w
  6640  0031A8  C04D  F067         	movff	_width+1,xtoa@w+1
  6641                           
  6642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6643  0031AC  A850               	btfss	_flags^0,4,c
  6644  0031AE  EFDB  F018         	goto	u11511
  6645  0031B2  EFDD  F018         	goto	u11510
  6646  0031B6                     u11511:
  6647  0031B6  EFE2  F018         	goto	l9028
  6648  0031BA                     u11510:
  6649  0031BA                     
  6650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6651  0031BA  0100               	movlb	0	; () banked
  6652  0031BC  0EFE               	movlw	254
  6653  0031BE  2766               	addwf	xtoa@w& (0+255),f,b
  6654  0031C0  0EFF               	movlw	255
  6655  0031C2  2367               	addwfc	(xtoa@w+1)& (0+255),f,b
  6656  0031C4                     l9028:
  6657                           
  6658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6659  0031C4  C028  F068         	movff	xtoa@d,xtoa@n
  6660  0031C8  C029  F069         	movff	xtoa@d+1,xtoa@n+1
  6661  0031CC  C02A  F06A         	movff	xtoa@d+2,xtoa@n+2
  6662  0031D0  C02B  F06B         	movff	xtoa@d+3,xtoa@n+3
  6663  0031D4  C02C  F06C         	movff	xtoa@d+4,xtoa@n+4
  6664  0031D8  C02D  F06D         	movff	xtoa@d+5,xtoa@n+5
  6665  0031DC  C02E  F06E         	movff	xtoa@d+6,xtoa@n+6
  6666  0031E0  C02F  F06F         	movff	xtoa@d+7,xtoa@n+7
  6667  0031E4                     
  6668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6669  0031E4  0E00               	movlw	0
  6670  0031E6  0100               	movlb	0	; () banked
  6671  0031E8  6F71               	movwf	(xtoa@i+1)& (0+255),b
  6672  0031EA  0E4F               	movlw	79
  6673  0031EC  6F70               	movwf	xtoa@i& (0+255),b
  6674  0031EE                     
  6675                           ; BSR set to: 0
  6676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6677  0031EE  0E00               	movlw	0
  6678  0031F0  0101               	movlb	1	; () banked
  6679  0031F2  6FBB               	movwf	(_dbuf+79)& (0+255),b
  6680                           
  6681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6682  0031F4  EFB0  F019         	goto	l9064
  6683  0031F8                     l9034:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6687  0031F8  0770               	decf	xtoa@i& (0+255),f,b
  6688  0031FA  A0D8               	btfss	status,0,c
  6689  0031FC  0771               	decf	(xtoa@i+1)& (0+255),f,b
  6690  0031FE                     
  6691                           ; BSR set to: 0
  6692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6693  0031FE  0E0F               	movlw	15
  6694  003200  1568               	andwf	xtoa@n& (0+255),w,b
  6695  003202  6F72               	movwf	xtoa@c& (0+255),b
  6696  003204  6B73               	clrf	(xtoa@c+1)& (0+255),b
  6697  003206                     
  6698                           ; BSR set to: 0
  6699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6700  003206  BF73               	btfsc	(xtoa@c+1)& (0+255),7,b
  6701  003208  EF0F  F019         	goto	u11521
  6702  00320C  5173               	movf	(xtoa@c+1)& (0+255),w,b
  6703  00320E  E109               	bnz	u11520
  6704  003210  0E0A               	movlw	10
  6705  003212  5D72               	subwf	xtoa@c& (0+255),w,b
  6706  003214  A0D8               	btfss	status,0,c
  6707  003216  EF0F  F019         	goto	u11521
  6708  00321A  EF11  F019         	goto	u11520
  6709  00321E                     u11521:
  6710  00321E  EF19  F019         	goto	l9042
  6711  003222                     u11520:
  6712  003222                     
  6713                           ; BSR set to: 0
  6714  003222  0E57               	movlw	87
  6715  003224  2572               	addwf	xtoa@c& (0+255),w,b
  6716  003226  6F72               	movwf	xtoa@c& (0+255),b
  6717  003228  0E00               	movlw	0
  6718  00322A  2173               	addwfc	(xtoa@c+1)& (0+255),w,b
  6719  00322C  6F73               	movwf	(xtoa@c+1)& (0+255),b
  6720  00322E  EF1F  F019         	goto	l854
  6721  003232                     l9042:
  6722                           
  6723                           ; BSR set to: 0
  6724  003232  0E30               	movlw	48
  6725  003234  2572               	addwf	xtoa@c& (0+255),w,b
  6726  003236  6F72               	movwf	xtoa@c& (0+255),b
  6727  003238  0E00               	movlw	0
  6728  00323A  2173               	addwfc	(xtoa@c+1)& (0+255),w,b
  6729  00323C  6F73               	movwf	(xtoa@c+1)& (0+255),b
  6730  00323E                     l854:
  6731                           
  6732                           ; BSR set to: 0
  6733  00323E  0EBF               	movlw	191
  6734  003240  6E31               	movwf	??_xtoa^0,c
  6735  003242  0EFF               	movlw	255
  6736  003244  6E32               	movwf	(??_xtoa+1)^0,c
  6737  003246  5030               	movf	xtoa@x^0,w,c
  6738  003248  6E33               	movwf	(??_xtoa+2)^0,c
  6739  00324A  6A34               	clrf	(??_xtoa+3)^0,c
  6740  00324C  5031               	movf	??_xtoa^0,w,c
  6741  00324E  2633               	addwf	(??_xtoa+2)^0,f,c
  6742  003250  5032               	movf	(??_xtoa+1)^0,w,c
  6743  003252  2234               	addwfc	(??_xtoa+3)^0,f,c
  6744  003254  5034               	movf	(??_xtoa+3)^0,w,c
  6745  003256  E10A               	bnz	u11530
  6746  003258  0E1A               	movlw	26
  6747  00325A  5C33               	subwf	(??_xtoa+2)^0,w,c
  6748  00325C  A0D8               	btfss	status,0,c
  6749  00325E  EF33  F019         	goto	u11531
  6750  003262  EF36  F019         	goto	u11530
  6751  003266                     u11531:
  6752  003266  0E01               	movlw	1
  6753  003268  EF37  F019         	goto	u11540
  6754  00326C                     u11530:
  6755  00326C  0E00               	movlw	0
  6756  00326E                     u11540:
  6757  00326E  6F60               	movwf	_xtoa$1768& (0+255),b
  6758  003270  6B61               	clrf	(_xtoa$1768+1)& (0+255),b
  6759  003272                     
  6760                           ; BSR set to: 0
  6761  003272  5160               	movf	_xtoa$1768& (0+255),w,b
  6762  003274  1161               	iorwf	(_xtoa$1768+1)& (0+255),w,b
  6763  003276  B4D8               	btfsc	status,2,c
  6764  003278  EF40  F019         	goto	u11551
  6765  00327C  EF42  F019         	goto	u11550
  6766  003280                     u11551:
  6767  003280  EF72  F019         	goto	l9056
  6768  003284                     u11550:
  6769  003284                     
  6770                           ; BSR set to: 0
  6771  003284  0E9F               	movlw	159
  6772  003286  6E31               	movwf	??_xtoa^0,c
  6773  003288  0EFF               	movlw	255
  6774  00328A  6E32               	movwf	(??_xtoa+1)^0,c
  6775  00328C  0E20               	movlw	32
  6776  00328E  1172               	iorwf	xtoa@c& (0+255),w,b
  6777  003290  6E33               	movwf	(??_xtoa+2)^0,c
  6778  003292  0E00               	movlw	0
  6779  003294  1173               	iorwf	(xtoa@c+1)& (0+255),w,b
  6780  003296  6E34               	movwf	(??_xtoa+3)^0,c
  6781  003298  5031               	movf	??_xtoa^0,w,c
  6782  00329A  2633               	addwf	(??_xtoa+2)^0,f,c
  6783  00329C  5032               	movf	(??_xtoa+1)^0,w,c
  6784  00329E  2234               	addwfc	(??_xtoa+3)^0,f,c
  6785  0032A0  5034               	movf	(??_xtoa+3)^0,w,c
  6786  0032A2  E10A               	bnz	u11560
  6787  0032A4  0E1A               	movlw	26
  6788  0032A6  5C33               	subwf	(??_xtoa+2)^0,w,c
  6789  0032A8  A0D8               	btfss	status,0,c
  6790  0032AA  EF59  F019         	goto	u11561
  6791  0032AE  EF5C  F019         	goto	u11560
  6792  0032B2                     u11561:
  6793  0032B2  0E01               	movlw	1
  6794  0032B4  EF5D  F019         	goto	u11570
  6795  0032B8                     u11560:
  6796  0032B8  0E00               	movlw	0
  6797  0032BA                     u11570:
  6798  0032BA  6F62               	movwf	_xtoa$1769& (0+255),b
  6799  0032BC  6B63               	clrf	(_xtoa$1769+1)& (0+255),b
  6800  0032BE                     
  6801                           ; BSR set to: 0
  6802  0032BE  5162               	movf	_xtoa$1769& (0+255),w,b
  6803  0032C0  1163               	iorwf	(_xtoa$1769+1)& (0+255),w,b
  6804  0032C2  B4D8               	btfsc	status,2,c
  6805  0032C4  EF66  F019         	goto	u11581
  6806  0032C8  EF68  F019         	goto	u11580
  6807  0032CC                     u11581:
  6808  0032CC  EF72  F019         	goto	l9056
  6809  0032D0                     u11580:
  6810  0032D0                     
  6811                           ; BSR set to: 0
  6812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6813  0032D0  C072  F011         	movff	xtoa@c,toupper@c
  6814  0032D4  C073  F012         	movff	xtoa@c+1,toupper@c+1
  6815  0032D8  EC61  F02C         	call	_toupper	;wreg free
  6816  0032DC  C011  F072         	movff	?_toupper,xtoa@c
  6817  0032E0  C012  F073         	movff	?_toupper+1,xtoa@c+1
  6818  0032E4                     l9056:
  6819                           
  6820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6821  0032E4  0E6C               	movlw	low _dbuf
  6822  0032E6  0100               	movlb	0	; () banked
  6823  0032E8  2570               	addwf	xtoa@i& (0+255),w,b
  6824  0032EA  6ED9               	movwf	fsr2l,c
  6825  0032EC  0E01               	movlw	high _dbuf
  6826  0032EE  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  6827  0032F0  6EDA               	movwf	fsr2h,c
  6828  0032F2  C072  FFDF         	movff	xtoa@c,indf2
  6829  0032F6                     
  6830                           ; BSR set to: 0
  6831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6832  0032F6  0764               	decf	xtoa@p& (0+255),f,b
  6833  0032F8  A0D8               	btfss	status,0,c
  6834  0032FA  0765               	decf	(xtoa@p+1)& (0+255),f,b
  6835  0032FC                     
  6836                           ; BSR set to: 0
  6837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6838  0032FC  0766               	decf	xtoa@w& (0+255),f,b
  6839  0032FE  A0D8               	btfss	status,0,c
  6840  003300  0767               	decf	(xtoa@w+1)& (0+255),f,b
  6841  003302                     
  6842                           ; BSR set to: 0
  6843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6844  003302  C068  F031         	movff	xtoa@n,??_xtoa
  6845  003306  C069  F032         	movff	xtoa@n+1,??_xtoa+1
  6846  00330A  C06A  F033         	movff	xtoa@n+2,??_xtoa+2
  6847  00330E  C06B  F034         	movff	xtoa@n+3,??_xtoa+3
  6848  003312  C06C  F035         	movff	xtoa@n+4,??_xtoa+4
  6849  003316  C06D  F036         	movff	xtoa@n+5,??_xtoa+5
  6850  00331A  C06E  F037         	movff	xtoa@n+6,??_xtoa+6
  6851  00331E  C06F  F038         	movff	xtoa@n+7,??_xtoa+7
  6852  003322  0E05               	movlw	5
  6853  003324  EF9D  F019         	goto	u11590
  6854  003328                     u11595:
  6855  003328  90D8               	bcf	status,0,c
  6856  00332A  3238               	rrcf	(??_xtoa+7)^0,f,c
  6857  00332C  3237               	rrcf	(??_xtoa+6)^0,f,c
  6858  00332E  3236               	rrcf	(??_xtoa+5)^0,f,c
  6859  003330  3235               	rrcf	(??_xtoa+4)^0,f,c
  6860  003332  3234               	rrcf	(??_xtoa+3)^0,f,c
  6861  003334  3233               	rrcf	(??_xtoa+2)^0,f,c
  6862  003336  3232               	rrcf	(??_xtoa+1)^0,f,c
  6863  003338  3231               	rrcf	??_xtoa^0,f,c
  6864  00333A                     u11590:
  6865  00333A  2EE8               	decfsz	wreg,f,c
  6866  00333C  EF94  F019         	goto	u11595
  6867  003340  C031  F068         	movff	??_xtoa,xtoa@n
  6868  003344  C032  F069         	movff	??_xtoa+1,xtoa@n+1
  6869  003348  C033  F06A         	movff	??_xtoa+2,xtoa@n+2
  6870  00334C  C034  F06B         	movff	??_xtoa+3,xtoa@n+3
  6871  003350  C035  F06C         	movff	??_xtoa+4,xtoa@n+4
  6872  003354  C036  F06D         	movff	??_xtoa+5,xtoa@n+5
  6873  003358  C037  F06E         	movff	??_xtoa+6,xtoa@n+6
  6874  00335C  C038  F06F         	movff	??_xtoa+7,xtoa@n+7
  6875  003360                     l9064:
  6876                           
  6877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6878  003360  0100               	movlb	0	; () banked
  6879  003362  BF71               	btfsc	(xtoa@i+1)& (0+255),7,b
  6880  003364  EFBD  F019         	goto	u11601
  6881  003368  5171               	movf	(xtoa@i+1)& (0+255),w,b
  6882  00336A  E109               	bnz	u11600
  6883  00336C  0E02               	movlw	2
  6884  00336E  5D70               	subwf	xtoa@i& (0+255),w,b
  6885  003370  A0D8               	btfss	status,0,c
  6886  003372  EFBD  F019         	goto	u11601
  6887  003376  EFBF  F019         	goto	u11600
  6888  00337A                     u11601:
  6889  00337A  EFEF  F019         	goto	l868
  6890  00337E                     u11600:
  6891  00337E                     
  6892                           ; BSR set to: 0
  6893  00337E  5168               	movf	xtoa@n& (0+255),w,b
  6894  003380  1169               	iorwf	(xtoa@n+1)& (0+255),w,b
  6895  003382  116A               	iorwf	(xtoa@n+2)& (0+255),w,b
  6896  003384  116B               	iorwf	(xtoa@n+3)& (0+255),w,b
  6897  003386  116C               	iorwf	(xtoa@n+4)& (0+255),w,b
  6898  003388  116D               	iorwf	(xtoa@n+5)& (0+255),w,b
  6899  00338A  116E               	iorwf	(xtoa@n+6)& (0+255),w,b
  6900  00338C  116F               	iorwf	(xtoa@n+7)& (0+255),w,b
  6901  00338E  A4D8               	btfss	status,2,c
  6902  003390  EFCC  F019         	goto	u11611
  6903  003394  EFCE  F019         	goto	u11610
  6904  003398                     u11611:
  6905  003398  EFFC  F018         	goto	l9034
  6906  00339C                     u11610:
  6907  00339C                     
  6908                           ; BSR set to: 0
  6909  00339C  BF65               	btfsc	(xtoa@p+1)& (0+255),7,b
  6910  00339E  EFDB  F019         	goto	u11620
  6911  0033A2  5165               	movf	(xtoa@p+1)& (0+255),w,b
  6912  0033A4  E106               	bnz	u11621
  6913  0033A6  0564               	decf	xtoa@p& (0+255),w,b
  6914  0033A8  B0D8               	btfsc	status,0,c
  6915  0033AA  EFD9  F019         	goto	u11621
  6916  0033AE  EFDB  F019         	goto	u11620
  6917  0033B2                     u11621:
  6918  0033B2  EFFC  F018         	goto	l9034
  6919  0033B6                     u11620:
  6920  0033B6                     
  6921                           ; BSR set to: 0
  6922  0033B6  BF67               	btfsc	(xtoa@w+1)& (0+255),7,b
  6923  0033B8  EFE6  F019         	goto	u11631
  6924  0033BC  5167               	movf	(xtoa@w+1)& (0+255),w,b
  6925  0033BE  E108               	bnz	u11630
  6926  0033C0  0566               	decf	xtoa@w& (0+255),w,b
  6927  0033C2  A0D8               	btfss	status,0,c
  6928  0033C4  EFE6  F019         	goto	u11631
  6929  0033C8  EFE8  F019         	goto	u11630
  6930  0033CC                     u11631:
  6931  0033CC  EFEF  F019         	goto	l868
  6932  0033D0                     u11630:
  6933  0033D0                     
  6934                           ; BSR set to: 0
  6935  0033D0  B250               	btfsc	_flags^0,1,c
  6936  0033D2  EFED  F019         	goto	u11641
  6937  0033D6  EFEF  F019         	goto	u11640
  6938  0033DA                     u11641:
  6939  0033DA  EFFC  F018         	goto	l9034
  6940  0033DE                     u11640:
  6941  0033DE                     l868:
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6945  0033DE  A850               	btfss	_flags^0,4,c
  6946  0033E0  EFF4  F019         	goto	u11651
  6947  0033E4  EFF6  F019         	goto	u11650
  6948  0033E8                     u11651:
  6949  0033E8  EF0C  F01A         	goto	l9080
  6950  0033EC                     u11650:
  6951  0033EC                     
  6952                           ; BSR set to: 0
  6953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6954  0033EC  0770               	decf	xtoa@i& (0+255),f,b
  6955  0033EE  A0D8               	btfss	status,0,c
  6956  0033F0  0771               	decf	(xtoa@i+1)& (0+255),f,b
  6957  0033F2                     
  6958                           ; BSR set to: 0
  6959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6960  0033F2  0E6C               	movlw	low _dbuf
  6961  0033F4  2570               	addwf	xtoa@i& (0+255),w,b
  6962  0033F6  6ED9               	movwf	fsr2l,c
  6963  0033F8  0E01               	movlw	high _dbuf
  6964  0033FA  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  6965  0033FC  6EDA               	movwf	fsr2h,c
  6966  0033FE  C030  FFDF         	movff	xtoa@x,indf2
  6967  003402                     
  6968                           ; BSR set to: 0
  6969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6970  003402  0770               	decf	xtoa@i& (0+255),f,b
  6971  003404  A0D8               	btfss	status,0,c
  6972  003406  0771               	decf	(xtoa@i+1)& (0+255),f,b
  6973                           
  6974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6975  003408  0E6C               	movlw	low _dbuf
  6976  00340A  2570               	addwf	xtoa@i& (0+255),w,b
  6977  00340C  6ED9               	movwf	fsr2l,c
  6978  00340E  0E01               	movlw	high _dbuf
  6979  003410  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  6980  003412  6EDA               	movwf	fsr2h,c
  6981  003414  0E30               	movlw	48
  6982  003416  6EDF               	movwf	indf2,c
  6983  003418                     l9080:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6987  003418  C026  F01B         	movff	xtoa@fp,pad@fp
  6988  00341C  C027  F01C         	movff	xtoa@fp+1,pad@fp+1
  6989  003420  0E6C               	movlw	low _dbuf
  6990  003422  2570               	addwf	xtoa@i& (0+255),w,b
  6991  003424  6E1D               	movwf	pad@buf^0,c
  6992  003426  0E01               	movlw	high _dbuf
  6993  003428  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  6994  00342A  6E1E               	movwf	(pad@buf+1)^0,c
  6995  00342C  C066  F01F         	movff	xtoa@w,pad@p
  6996  003430  C067  F020         	movff	xtoa@w+1,pad@p+1
  6997  003434  EC58  F02A         	call	_pad	;wreg free
  6998  003438  C01B  F026         	movff	?_pad,?_xtoa
  6999  00343C  C01C  F027         	movff	?_pad+1,?_xtoa+1
  7000  003440  0012               	return		;funcret
  7001  003442                     __end_of_xtoa:
  7002                           	opt callstack 0
  7003                           
  7004 ;; *************** function _toupper *****************
  7005 ;; Defined at:
  7006 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  c               2   16[COMRAM] int 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  2   16[COMRAM] int 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7023 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7024 ;;Total ram usage:        8 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    6
  7027 ;; This function calls:
  7028 ;;		_islower
  7029 ;; This function is called by:
  7030 ;;		_xtoa
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text6
  7035  0058C2                     __ptext6:
  7036                           	opt callstack 0
  7037  0058C2                     _toupper:
  7038                           	opt callstack 19
  7039  0058C2  0E9F               	movlw	159
  7040  0058C4  6E13               	movwf	??_toupper^0,c
  7041  0058C6  0EFF               	movlw	255
  7042  0058C8  6E14               	movwf	(??_toupper+1)^0,c
  7043  0058CA  C011  F015         	movff	toupper@c,??_toupper+2
  7044  0058CE  C012  F016         	movff	toupper@c+1,??_toupper+3
  7045  0058D2  5013               	movf	??_toupper^0,w,c
  7046  0058D4  2615               	addwf	(??_toupper+2)^0,f,c
  7047  0058D6  5014               	movf	(??_toupper+1)^0,w,c
  7048  0058D8  2216               	addwfc	(??_toupper+3)^0,f,c
  7049  0058DA  5016               	movf	(??_toupper+3)^0,w,c
  7050  0058DC  E10A               	bnz	u9580
  7051  0058DE  0E1A               	movlw	26
  7052  0058E0  5C15               	subwf	(??_toupper+2)^0,w,c
  7053  0058E2  A0D8               	btfss	status,0,c
  7054  0058E4  EF76  F02C         	goto	u9581
  7055  0058E8  EF79  F02C         	goto	u9580
  7056  0058EC                     u9581:
  7057  0058EC  0E01               	movlw	1
  7058  0058EE  EF7A  F02C         	goto	u9590
  7059  0058F2                     u9580:
  7060  0058F2  0E00               	movlw	0
  7061  0058F4                     u9590:
  7062  0058F4  6E17               	movwf	_toupper$2504^0,c
  7063  0058F6  6A18               	clrf	(_toupper$2504+1)^0,c
  7064  0058F8  5017               	movf	_toupper$2504^0,w,c
  7065  0058FA  1018               	iorwf	(_toupper$2504+1)^0,w,c
  7066  0058FC  B4D8               	btfsc	status,2,c
  7067  0058FE  EF83  F02C         	goto	u9601
  7068  005902  EF85  F02C         	goto	u9600
  7069  005906                     u9601:
  7070  005906  EF8B  F02C         	goto	l1793
  7071  00590A                     u9600:
  7072  00590A  0E5F               	movlw	95
  7073  00590C  1411               	andwf	toupper@c^0,w,c
  7074  00590E  6E11               	movwf	?_toupper^0,c
  7075  005910  6A12               	clrf	(?_toupper+1)^0,c
  7076  005912  EF8F  F02C         	goto	l1798
  7077  005916                     l1793:
  7078  005916  C011  F011         	movff	toupper@c,?_toupper
  7079  00591A  C012  F012         	movff	toupper@c+1,?_toupper+1
  7080  00591E                     l1798:
  7081  00591E  0012               	return		;funcret
  7082  005920                     __end_of_toupper:
  7083                           	opt callstack 0
  7084                           
  7085 ;; *************** function _islower *****************
  7086 ;; Defined at:
  7087 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  c               2   10[COMRAM] int 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  2   10[COMRAM] int 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7103 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;Total ram usage:        6 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    5
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_toupper
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text7
  7116  005D1E                     __ptext7:
  7117                           	opt callstack 0
  7118  005D1E                     _islower:
  7119                           	opt callstack 19
  7120  005D1E  0E9F               	movlw	159
  7121  005D20  6E0D               	movwf	??_islower^0,c
  7122  005D22  0EFF               	movlw	255
  7123  005D24  6E0E               	movwf	(??_islower+1)^0,c
  7124  005D26  C00B  F00F         	movff	islower@c,??_islower+2
  7125  005D2A  C00C  F010         	movff	islower@c+1,??_islower+3
  7126  005D2E  500D               	movf	??_islower^0,w,c
  7127  005D30  260F               	addwf	(??_islower+2)^0,f,c
  7128  005D32  500E               	movf	(??_islower+1)^0,w,c
  7129  005D34  2210               	addwfc	(??_islower+3)^0,f,c
  7130  005D36  5010               	movf	(??_islower+3)^0,w,c
  7131  005D38  E10A               	bnz	u9270
  7132  005D3A  0E1A               	movlw	26
  7133  005D3C  5C0F               	subwf	(??_islower+2)^0,w,c
  7134  005D3E  A0D8               	btfss	status,0,c
  7135  005D40  EFA4  F02E         	goto	u9271
  7136  005D44  EFA7  F02E         	goto	u9270
  7137  005D48                     u9271:
  7138  005D48  0E01               	movlw	1
  7139  005D4A  EFA8  F02E         	goto	u9280
  7140  005D4E                     u9270:
  7141  005D4E  0E00               	movlw	0
  7142  005D50                     u9280:
  7143  005D50  6E0B               	movwf	?_islower^0,c
  7144  005D52  6A0C               	clrf	(?_islower+1)^0,c
  7145  005D54  0012               	return		;funcret
  7146  005D56                     __end_of_islower:
  7147                           	opt callstack 0
  7148                           
  7149 ;; *************** function _isalpha *****************
  7150 ;; Defined at:
  7151 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  c               2   10[COMRAM] int 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;		None
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  2   10[COMRAM] int 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7169 ;;Total ram usage:        6 bytes
  7170 ;; Hardware stack levels used:    1
  7171 ;; Hardware stack levels required when called:    5
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_xtoa
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text8
  7180  005CA8                     __ptext8:
  7181                           	opt callstack 0
  7182  005CA8                     _isalpha:
  7183                           	opt callstack 20
  7184  005CA8  0E9F               	movlw	159
  7185  005CAA  6E0D               	movwf	??_isalpha^0,c
  7186  005CAC  0EFF               	movlw	255
  7187  005CAE  6E0E               	movwf	(??_isalpha+1)^0,c
  7188  005CB0  0E20               	movlw	32
  7189  005CB2  100B               	iorwf	isalpha@c^0,w,c
  7190  005CB4  6E0F               	movwf	(??_isalpha+2)^0,c
  7191  005CB6  0E00               	movlw	0
  7192  005CB8  100C               	iorwf	(isalpha@c+1)^0,w,c
  7193  005CBA  6E10               	movwf	(??_isalpha+3)^0,c
  7194  005CBC  500D               	movf	??_isalpha^0,w,c
  7195  005CBE  260F               	addwf	(??_isalpha+2)^0,f,c
  7196  005CC0  500E               	movf	(??_isalpha+1)^0,w,c
  7197  005CC2  2210               	addwfc	(??_isalpha+3)^0,f,c
  7198  005CC4  5010               	movf	(??_isalpha+3)^0,w,c
  7199  005CC6  E10A               	bnz	u9560
  7200  005CC8  0E1A               	movlw	26
  7201  005CCA  5C0F               	subwf	(??_isalpha+2)^0,w,c
  7202  005CCC  A0D8               	btfss	status,0,c
  7203  005CCE  EF6B  F02E         	goto	u9561
  7204  005CD2  EF6E  F02E         	goto	u9560
  7205  005CD6                     u9561:
  7206  005CD6  0E01               	movlw	1
  7207  005CD8  EF6F  F02E         	goto	u9570
  7208  005CDC                     u9560:
  7209  005CDC  0E00               	movlw	0
  7210  005CDE                     u9570:
  7211  005CDE  6E0B               	movwf	?_isalpha^0,c
  7212  005CE0  6A0C               	clrf	(?_isalpha+1)^0,c
  7213  005CE2  0012               	return		;funcret
  7214  005CE4                     __end_of_isalpha:
  7215                           	opt callstack 0
  7216                           
  7217 ;; *************** function _utoa *****************
  7218 ;; Defined at:
  7219 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7222 ;;		 -> vsnprintf@f(6), 
  7223 ;;  d               8   39[COMRAM] unsigned long long 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  n               8   59[COMRAM] unsigned long long 
  7226 ;;  i               2   67[COMRAM] int 
  7227 ;;  w               2   57[COMRAM] int 
  7228 ;;  p               2   55[COMRAM] int 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  2   37[COMRAM] int 
  7231 ;; Registers used:
  7232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7238 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7241 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7242 ;;Total ram usage:       32 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    9
  7245 ;; This function calls:
  7246 ;;		___lodiv
  7247 ;;		___lomod
  7248 ;;		_pad
  7249 ;; This function is called by:
  7250 ;;		_vfpfcnvrt
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text9
  7255  003B5E                     __ptext9:
  7256                           	opt callstack 0
  7257  003B5E                     _utoa:
  7258                           	opt callstack 17
  7259  003B5E                     
  7260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7261  003B5E  BE4F               	btfsc	(_prec+1)^0,7,c
  7262  003B60  EFB4  F01D         	goto	u11421
  7263  003B64  EFB6  F01D         	goto	u11420
  7264  003B68                     u11421:
  7265  003B68  EFB7  F01D         	goto	l8986
  7266  003B6C                     u11420:
  7267  003B6C                     
  7268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7269  003B6C  9250               	bcf	_flags^0,1,c
  7270  003B6E                     l8986:
  7271                           
  7272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7273  003B6E  BE4F               	btfsc	(_prec+1)^0,7,c
  7274  003B70  EFC4  F01D         	goto	u11430
  7275  003B74  504F               	movf	(_prec+1)^0,w,c
  7276  003B76  E106               	bnz	u11431
  7277  003B78  044E               	decf	_prec^0,w,c
  7278  003B7A  B0D8               	btfsc	status,0,c
  7279  003B7C  EFC2  F01D         	goto	u11431
  7280  003B80  EFC4  F01D         	goto	u11430
  7281  003B84                     u11431:
  7282  003B84  EFCA  F01D         	goto	l830
  7283  003B88                     u11430:
  7284  003B88  0E00               	movlw	0
  7285  003B8A  6E39               	movwf	(utoa@p+1)^0,c
  7286  003B8C  0E01               	movlw	1
  7287  003B8E  6E38               	movwf	utoa@p^0,c
  7288  003B90  EFCE  F01D         	goto	l832
  7289  003B94                     l830:
  7290  003B94  C04E  F038         	movff	_prec,utoa@p
  7291  003B98  C04F  F039         	movff	_prec+1,utoa@p+1
  7292  003B9C                     l832:
  7293                           
  7294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7295  003B9C  C04C  F03A         	movff	_width,utoa@w
  7296  003BA0  C04D  F03B         	movff	_width+1,utoa@w+1
  7297                           
  7298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7299  003BA4  C028  F03C         	movff	utoa@d,utoa@n
  7300  003BA8  C029  F03D         	movff	utoa@d+1,utoa@n+1
  7301  003BAC  C02A  F03E         	movff	utoa@d+2,utoa@n+2
  7302  003BB0  C02B  F03F         	movff	utoa@d+3,utoa@n+3
  7303  003BB4  C02C  F040         	movff	utoa@d+4,utoa@n+4
  7304  003BB8  C02D  F041         	movff	utoa@d+5,utoa@n+5
  7305  003BBC  C02E  F042         	movff	utoa@d+6,utoa@n+6
  7306  003BC0  C02F  F043         	movff	utoa@d+7,utoa@n+7
  7307  003BC4                     
  7308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7309  003BC4  0E00               	movlw	0
  7310  003BC6  6E45               	movwf	(utoa@i+1)^0,c
  7311  003BC8  0E4F               	movlw	79
  7312  003BCA  6E44               	movwf	utoa@i^0,c
  7313  003BCC                     
  7314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7315  003BCC  0E00               	movlw	0
  7316  003BCE  0101               	movlb	1	; () banked
  7317  003BD0  6FBB               	movwf	(_dbuf+79)& (0+255),b
  7318                           
  7319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7320  003BD2  EF61  F01E         	goto	l9004
  7321  003BD6                     l8994:
  7322                           
  7323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7324  003BD6  0644               	decf	utoa@i^0,f,c
  7325  003BD8  A0D8               	btfss	status,0,c
  7326  003BDA  0645               	decf	(utoa@i+1)^0,f,c
  7327  003BDC                     
  7328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7329  003BDC  0E6C               	movlw	low _dbuf
  7330  003BDE  2444               	addwf	utoa@i^0,w,c
  7331  003BE0  6ED9               	movwf	fsr2l,c
  7332  003BE2  0E01               	movlw	high _dbuf
  7333  003BE4  2045               	addwfc	(utoa@i+1)^0,w,c
  7334  003BE6  6EDA               	movwf	fsr2h,c
  7335  003BE8  C03C  F00B         	movff	utoa@n,___lomod@dividend
  7336  003BEC  C03D  F00C         	movff	utoa@n+1,___lomod@dividend+1
  7337  003BF0  C03E  F00D         	movff	utoa@n+2,___lomod@dividend+2
  7338  003BF4  C03F  F00E         	movff	utoa@n+3,___lomod@dividend+3
  7339  003BF8  C040  F00F         	movff	utoa@n+4,___lomod@dividend+4
  7340  003BFC  C041  F010         	movff	utoa@n+5,___lomod@dividend+5
  7341  003C00  C042  F011         	movff	utoa@n+6,___lomod@dividend+6
  7342  003C04  C043  F012         	movff	utoa@n+7,___lomod@dividend+7
  7343  003C08  0E0A               	movlw	10
  7344  003C0A  6E13               	movwf	___lomod@divisor^0,c
  7345  003C0C  0E00               	movlw	0
  7346  003C0E  6E14               	movwf	(___lomod@divisor+1)^0,c
  7347  003C10  0E00               	movlw	0
  7348  003C12  6E15               	movwf	(___lomod@divisor+2)^0,c
  7349  003C14  0E00               	movlw	0
  7350  003C16  6E16               	movwf	(___lomod@divisor+3)^0,c
  7351  003C18  0E00               	movlw	0
  7352  003C1A  6E17               	movwf	(___lomod@divisor+4)^0,c
  7353  003C1C  0E00               	movlw	0
  7354  003C1E  6E18               	movwf	(___lomod@divisor+5)^0,c
  7355  003C20  0E00               	movlw	0
  7356  003C22  6E19               	movwf	(___lomod@divisor+6)^0,c
  7357  003C24  0E00               	movlw	0
  7358  003C26  6E1A               	movwf	(___lomod@divisor+7)^0,c
  7359  003C28  EC29  F029         	call	___lomod	;wreg free
  7360  003C2C  C00B  F030         	movff	?___lomod,??_utoa
  7361  003C30  C00C  F031         	movff	?___lomod+1,??_utoa+1
  7362  003C34  C00D  F032         	movff	?___lomod+2,??_utoa+2
  7363  003C38  C00E  F033         	movff	?___lomod+3,??_utoa+3
  7364  003C3C  C00F  F034         	movff	?___lomod+4,??_utoa+4
  7365  003C40  C010  F035         	movff	?___lomod+5,??_utoa+5
  7366  003C44  C011  F036         	movff	?___lomod+6,??_utoa+6
  7367  003C48  C012  F037         	movff	?___lomod+7,??_utoa+7
  7368  003C4C  5030               	movf	??_utoa^0,w,c
  7369  003C4E  0F30               	addlw	48
  7370  003C50  6EDF               	movwf	indf2,c
  7371  003C52                     
  7372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7373  003C52  0638               	decf	utoa@p^0,f,c
  7374  003C54  A0D8               	btfss	status,0,c
  7375  003C56  0639               	decf	(utoa@p+1)^0,f,c
  7376  003C58                     
  7377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7378  003C58  063A               	decf	utoa@w^0,f,c
  7379  003C5A  A0D8               	btfss	status,0,c
  7380  003C5C  063B               	decf	(utoa@w+1)^0,f,c
  7381  003C5E                     
  7382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7383  003C5E  C03C  F00B         	movff	utoa@n,___lodiv@dividend
  7384  003C62  C03D  F00C         	movff	utoa@n+1,___lodiv@dividend+1
  7385  003C66  C03E  F00D         	movff	utoa@n+2,___lodiv@dividend+2
  7386  003C6A  C03F  F00E         	movff	utoa@n+3,___lodiv@dividend+3
  7387  003C6E  C040  F00F         	movff	utoa@n+4,___lodiv@dividend+4
  7388  003C72  C041  F010         	movff	utoa@n+5,___lodiv@dividend+5
  7389  003C76  C042  F011         	movff	utoa@n+6,___lodiv@dividend+6
  7390  003C7A  C043  F012         	movff	utoa@n+7,___lodiv@dividend+7
  7391  003C7E  0E0A               	movlw	10
  7392  003C80  6E13               	movwf	___lodiv@divisor^0,c
  7393  003C82  0E00               	movlw	0
  7394  003C84  6E14               	movwf	(___lodiv@divisor+1)^0,c
  7395  003C86  0E00               	movlw	0
  7396  003C88  6E15               	movwf	(___lodiv@divisor+2)^0,c
  7397  003C8A  0E00               	movlw	0
  7398  003C8C  6E16               	movwf	(___lodiv@divisor+3)^0,c
  7399  003C8E  0E00               	movlw	0
  7400  003C90  6E17               	movwf	(___lodiv@divisor+4)^0,c
  7401  003C92  0E00               	movlw	0
  7402  003C94  6E18               	movwf	(___lodiv@divisor+5)^0,c
  7403  003C96  0E00               	movlw	0
  7404  003C98  6E19               	movwf	(___lodiv@divisor+6)^0,c
  7405  003C9A  0E00               	movlw	0
  7406  003C9C  6E1A               	movwf	(___lodiv@divisor+7)^0,c
  7407  003C9E  ECB1  F028         	call	___lodiv	;wreg free
  7408  003CA2  C00B  F03C         	movff	?___lodiv,utoa@n
  7409  003CA6  C00C  F03D         	movff	?___lodiv+1,utoa@n+1
  7410  003CAA  C00D  F03E         	movff	?___lodiv+2,utoa@n+2
  7411  003CAE  C00E  F03F         	movff	?___lodiv+3,utoa@n+3
  7412  003CB2  C00F  F040         	movff	?___lodiv+4,utoa@n+4
  7413  003CB6  C010  F041         	movff	?___lodiv+5,utoa@n+5
  7414  003CBA  C011  F042         	movff	?___lodiv+6,utoa@n+6
  7415  003CBE  C012  F043         	movff	?___lodiv+7,utoa@n+7
  7416  003CC2                     l9004:
  7417                           
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7419  003CC2  5044               	movf	utoa@i^0,w,c
  7420  003CC4  1045               	iorwf	(utoa@i+1)^0,w,c
  7421  003CC6  B4D8               	btfsc	status,2,c
  7422  003CC8  EF68  F01E         	goto	u11441
  7423  003CCC  EF6A  F01E         	goto	u11440
  7424  003CD0                     u11441:
  7425  003CD0  EF9A  F01E         	goto	l9014
  7426  003CD4                     u11440:
  7427  003CD4  503C               	movf	utoa@n^0,w,c
  7428  003CD6  103D               	iorwf	(utoa@n+1)^0,w,c
  7429  003CD8  103E               	iorwf	(utoa@n+2)^0,w,c
  7430  003CDA  103F               	iorwf	(utoa@n+3)^0,w,c
  7431  003CDC  1040               	iorwf	(utoa@n+4)^0,w,c
  7432  003CDE  1041               	iorwf	(utoa@n+5)^0,w,c
  7433  003CE0  1042               	iorwf	(utoa@n+6)^0,w,c
  7434  003CE2  1043               	iorwf	(utoa@n+7)^0,w,c
  7435  003CE4  A4D8               	btfss	status,2,c
  7436  003CE6  EF77  F01E         	goto	u11451
  7437  003CEA  EF79  F01E         	goto	u11450
  7438  003CEE                     u11451:
  7439  003CEE  EFEB  F01D         	goto	l8994
  7440  003CF2                     u11450:
  7441  003CF2  BE39               	btfsc	(utoa@p+1)^0,7,c
  7442  003CF4  EF86  F01E         	goto	u11460
  7443  003CF8  5039               	movf	(utoa@p+1)^0,w,c
  7444  003CFA  E106               	bnz	u11461
  7445  003CFC  0438               	decf	utoa@p^0,w,c
  7446  003CFE  B0D8               	btfsc	status,0,c
  7447  003D00  EF84  F01E         	goto	u11461
  7448  003D04  EF86  F01E         	goto	u11460
  7449  003D08                     u11461:
  7450  003D08  EFEB  F01D         	goto	l8994
  7451  003D0C                     u11460:
  7452  003D0C  BE3B               	btfsc	(utoa@w+1)^0,7,c
  7453  003D0E  EF91  F01E         	goto	u11471
  7454  003D12  503B               	movf	(utoa@w+1)^0,w,c
  7455  003D14  E108               	bnz	u11470
  7456  003D16  043A               	decf	utoa@w^0,w,c
  7457  003D18  A0D8               	btfss	status,0,c
  7458  003D1A  EF91  F01E         	goto	u11471
  7459  003D1E  EF93  F01E         	goto	u11470
  7460  003D22                     u11471:
  7461  003D22  EF9A  F01E         	goto	l9014
  7462  003D26                     u11470:
  7463  003D26  B250               	btfsc	_flags^0,1,c
  7464  003D28  EF98  F01E         	goto	u11481
  7465  003D2C  EF9A  F01E         	goto	u11480
  7466  003D30                     u11481:
  7467  003D30  EFEB  F01D         	goto	l8994
  7468  003D34                     u11480:
  7469  003D34                     l9014:
  7470                           
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7472  003D34  C026  F01B         	movff	utoa@fp,pad@fp
  7473  003D38  C027  F01C         	movff	utoa@fp+1,pad@fp+1
  7474  003D3C  0E6C               	movlw	low _dbuf
  7475  003D3E  2444               	addwf	utoa@i^0,w,c
  7476  003D40  6E1D               	movwf	pad@buf^0,c
  7477  003D42  0E01               	movlw	high _dbuf
  7478  003D44  2045               	addwfc	(utoa@i+1)^0,w,c
  7479  003D46  6E1E               	movwf	(pad@buf+1)^0,c
  7480  003D48  C03A  F01F         	movff	utoa@w,pad@p
  7481  003D4C  C03B  F020         	movff	utoa@w+1,pad@p+1
  7482  003D50  EC58  F02A         	call	_pad	;wreg free
  7483  003D54  C01B  F026         	movff	?_pad,?_utoa
  7484  003D58  C01C  F027         	movff	?_pad+1,?_utoa+1
  7485  003D5C  0012               	return		;funcret
  7486  003D5E                     __end_of_utoa:
  7487                           	opt callstack 0
  7488                           
  7489 ;; *************** function ___lomod *****************
  7490 ;; Defined at:
  7491 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  dividend        8   10[COMRAM] unsigned long long 
  7494 ;;  divisor         8   18[COMRAM] unsigned long long 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  counter         1   26[COMRAM] unsigned char 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  8   10[COMRAM] unsigned long long 
  7499 ;; Registers used:
  7500 ;;		wreg, status,2, status,0
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7506 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7510 ;;Total ram usage:       17 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    5
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_utoa
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           	psect	text10
  7521  005252                     __ptext10:
  7522                           	opt callstack 0
  7523  005252                     ___lomod:
  7524                           	opt callstack 20
  7525  005252  5013               	movf	___lomod@divisor^0,w,c
  7526  005254  1014               	iorwf	(___lomod@divisor+1)^0,w,c
  7527  005256  1015               	iorwf	(___lomod@divisor+2)^0,w,c
  7528  005258  1016               	iorwf	(___lomod@divisor+3)^0,w,c
  7529  00525A  1017               	iorwf	(___lomod@divisor+4)^0,w,c
  7530  00525C  1018               	iorwf	(___lomod@divisor+5)^0,w,c
  7531  00525E  1019               	iorwf	(___lomod@divisor+6)^0,w,c
  7532  005260  101A               	iorwf	(___lomod@divisor+7)^0,w,c
  7533  005262  B4D8               	btfsc	status,2,c
  7534  005264  EF36  F029         	goto	u10501
  7535  005268  EF38  F029         	goto	u10500
  7536  00526C                     u10501:
  7537  00526C  EF80  F029         	goto	l1413
  7538  005270                     u10500:
  7539  005270  0E01               	movlw	1
  7540  005272  6E1B               	movwf	___lomod@counter^0,c
  7541  005274  EF46  F029         	goto	l8496
  7542  005278                     l8494:
  7543  005278  90D8               	bcf	status,0,c
  7544  00527A  3613               	rlcf	___lomod@divisor^0,f,c
  7545  00527C  3614               	rlcf	(___lomod@divisor+1)^0,f,c
  7546  00527E  3615               	rlcf	(___lomod@divisor+2)^0,f,c
  7547  005280  3616               	rlcf	(___lomod@divisor+3)^0,f,c
  7548  005282  3617               	rlcf	(___lomod@divisor+4)^0,f,c
  7549  005284  3618               	rlcf	(___lomod@divisor+5)^0,f,c
  7550  005286  3619               	rlcf	(___lomod@divisor+6)^0,f,c
  7551  005288  361A               	rlcf	(___lomod@divisor+7)^0,f,c
  7552  00528A  2A1B               	incf	___lomod@counter^0,f,c
  7553  00528C                     l8496:
  7554  00528C  AE1A               	btfss	(___lomod@divisor+7)^0,7,c
  7555  00528E  EF4B  F029         	goto	u10511
  7556  005292  EF4D  F029         	goto	u10510
  7557  005296                     u10511:
  7558  005296  EF3C  F029         	goto	l8494
  7559  00529A                     u10510:
  7560  00529A                     l8498:
  7561  00529A  5013               	movf	___lomod@divisor^0,w,c
  7562  00529C  5C0B               	subwf	___lomod@dividend^0,w,c
  7563  00529E  5014               	movf	(___lomod@divisor+1)^0,w,c
  7564  0052A0  580C               	subwfb	(___lomod@dividend+1)^0,w,c
  7565  0052A2  5015               	movf	(___lomod@divisor+2)^0,w,c
  7566  0052A4  580D               	subwfb	(___lomod@dividend+2)^0,w,c
  7567  0052A6  5016               	movf	(___lomod@divisor+3)^0,w,c
  7568  0052A8  580E               	subwfb	(___lomod@dividend+3)^0,w,c
  7569  0052AA  5017               	movf	(___lomod@divisor+4)^0,w,c
  7570  0052AC  580F               	subwfb	(___lomod@dividend+4)^0,w,c
  7571  0052AE  5018               	movf	(___lomod@divisor+5)^0,w,c
  7572  0052B0  5810               	subwfb	(___lomod@dividend+5)^0,w,c
  7573  0052B2  5019               	movf	(___lomod@divisor+6)^0,w,c
  7574  0052B4  5811               	subwfb	(___lomod@dividend+6)^0,w,c
  7575  0052B6  501A               	movf	(___lomod@divisor+7)^0,w,c
  7576  0052B8  5812               	subwfb	(___lomod@dividend+7)^0,w,c
  7577  0052BA  A0D8               	btfss	status,0,c
  7578  0052BC  EF62  F029         	goto	u10521
  7579  0052C0  EF64  F029         	goto	u10520
  7580  0052C4                     u10521:
  7581  0052C4  EF74  F029         	goto	l8502
  7582  0052C8                     u10520:
  7583  0052C8  5013               	movf	___lomod@divisor^0,w,c
  7584  0052CA  5E0B               	subwf	___lomod@dividend^0,f,c
  7585  0052CC  5014               	movf	(___lomod@divisor+1)^0,w,c
  7586  0052CE  5A0C               	subwfb	(___lomod@dividend+1)^0,f,c
  7587  0052D0  5015               	movf	(___lomod@divisor+2)^0,w,c
  7588  0052D2  5A0D               	subwfb	(___lomod@dividend+2)^0,f,c
  7589  0052D4  5016               	movf	(___lomod@divisor+3)^0,w,c
  7590  0052D6  5A0E               	subwfb	(___lomod@dividend+3)^0,f,c
  7591  0052D8  5017               	movf	(___lomod@divisor+4)^0,w,c
  7592  0052DA  5A0F               	subwfb	(___lomod@dividend+4)^0,f,c
  7593  0052DC  5018               	movf	(___lomod@divisor+5)^0,w,c
  7594  0052DE  5A10               	subwfb	(___lomod@dividend+5)^0,f,c
  7595  0052E0  5019               	movf	(___lomod@divisor+6)^0,w,c
  7596  0052E2  5A11               	subwfb	(___lomod@dividend+6)^0,f,c
  7597  0052E4  501A               	movf	(___lomod@divisor+7)^0,w,c
  7598  0052E6  5A12               	subwfb	(___lomod@dividend+7)^0,f,c
  7599  0052E8                     l8502:
  7600  0052E8  90D8               	bcf	status,0,c
  7601  0052EA  321A               	rrcf	(___lomod@divisor+7)^0,f,c
  7602  0052EC  3219               	rrcf	(___lomod@divisor+6)^0,f,c
  7603  0052EE  3218               	rrcf	(___lomod@divisor+5)^0,f,c
  7604  0052F0  3217               	rrcf	(___lomod@divisor+4)^0,f,c
  7605  0052F2  3216               	rrcf	(___lomod@divisor+3)^0,f,c
  7606  0052F4  3215               	rrcf	(___lomod@divisor+2)^0,f,c
  7607  0052F6  3214               	rrcf	(___lomod@divisor+1)^0,f,c
  7608  0052F8  3213               	rrcf	___lomod@divisor^0,f,c
  7609  0052FA  2E1B               	decfsz	___lomod@counter^0,f,c
  7610  0052FC  EF4D  F029         	goto	l8498
  7611  005300                     l1413:
  7612  005300  C00B  F00B         	movff	___lomod@dividend,?___lomod
  7613  005304  C00C  F00C         	movff	___lomod@dividend+1,?___lomod+1
  7614  005308  C00D  F00D         	movff	___lomod@dividend+2,?___lomod+2
  7615  00530C  C00E  F00E         	movff	___lomod@dividend+3,?___lomod+3
  7616  005310  C00F  F00F         	movff	___lomod@dividend+4,?___lomod+4
  7617  005314  C010  F010         	movff	___lomod@dividend+5,?___lomod+5
  7618  005318  C011  F011         	movff	___lomod@dividend+6,?___lomod+6
  7619  00531C  C012  F012         	movff	___lomod@dividend+7,?___lomod+7
  7620  005320  0012               	return		;funcret
  7621  005322                     __end_of___lomod:
  7622                           	opt callstack 0
  7623                           
  7624 ;; *************** function ___lodiv *****************
  7625 ;; Defined at:
  7626 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  dividend        8   10[COMRAM] unsigned long long 
  7629 ;;  divisor         8   18[COMRAM] unsigned long long 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;  quotient        8   26[COMRAM] unsigned long long 
  7632 ;;  counter         1   34[COMRAM] unsigned char 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  8   10[COMRAM] unsigned long long 
  7635 ;; Registers used:
  7636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7642 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7643 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7645 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;Total ram usage:       25 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; Hardware stack levels required when called:    5
  7649 ;; This function calls:
  7650 ;;		Nothing
  7651 ;; This function is called by:
  7652 ;;		_utoa
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text11
  7657  005162                     __ptext11:
  7658                           	opt callstack 0
  7659  005162                     ___lodiv:
  7660                           	opt callstack 20
  7661  005162  EE20  F01B         	lfsr	2,___lodiv@quotient
  7662  005166  0E07               	movlw	7
  7663  005168                     u10461:
  7664  005168  6ADE               	clrf	postinc2,c
  7665  00516A  06E8               	decf	wreg,f,c
  7666  00516C  E2FD               	bc	u10461
  7667  00516E  5013               	movf	___lodiv@divisor^0,w,c
  7668  005170  1014               	iorwf	(___lodiv@divisor+1)^0,w,c
  7669  005172  1015               	iorwf	(___lodiv@divisor+2)^0,w,c
  7670  005174  1016               	iorwf	(___lodiv@divisor+3)^0,w,c
  7671  005176  1017               	iorwf	(___lodiv@divisor+4)^0,w,c
  7672  005178  1018               	iorwf	(___lodiv@divisor+5)^0,w,c
  7673  00517A  1019               	iorwf	(___lodiv@divisor+6)^0,w,c
  7674  00517C  101A               	iorwf	(___lodiv@divisor+7)^0,w,c
  7675  00517E  B4D8               	btfsc	status,2,c
  7676  005180  EFC4  F028         	goto	u10471
  7677  005184  EFC6  F028         	goto	u10470
  7678  005188                     u10471:
  7679  005188  EF18  F029         	goto	l1403
  7680  00518C                     u10470:
  7681  00518C  0E01               	movlw	1
  7682  00518E  6E23               	movwf	___lodiv@counter^0,c
  7683  005190  EFD4  F028         	goto	l8476
  7684  005194                     l8474:
  7685  005194  90D8               	bcf	status,0,c
  7686  005196  3613               	rlcf	___lodiv@divisor^0,f,c
  7687  005198  3614               	rlcf	(___lodiv@divisor+1)^0,f,c
  7688  00519A  3615               	rlcf	(___lodiv@divisor+2)^0,f,c
  7689  00519C  3616               	rlcf	(___lodiv@divisor+3)^0,f,c
  7690  00519E  3617               	rlcf	(___lodiv@divisor+4)^0,f,c
  7691  0051A0  3618               	rlcf	(___lodiv@divisor+5)^0,f,c
  7692  0051A2  3619               	rlcf	(___lodiv@divisor+6)^0,f,c
  7693  0051A4  361A               	rlcf	(___lodiv@divisor+7)^0,f,c
  7694  0051A6  2A23               	incf	___lodiv@counter^0,f,c
  7695  0051A8                     l8476:
  7696  0051A8  AE1A               	btfss	(___lodiv@divisor+7)^0,7,c
  7697  0051AA  EFD9  F028         	goto	u10481
  7698  0051AE  EFDB  F028         	goto	u10480
  7699  0051B2                     u10481:
  7700  0051B2  EFCA  F028         	goto	l8474
  7701  0051B6                     u10480:
  7702  0051B6                     l8478:
  7703  0051B6  90D8               	bcf	status,0,c
  7704  0051B8  361B               	rlcf	___lodiv@quotient^0,f,c
  7705  0051BA  361C               	rlcf	(___lodiv@quotient+1)^0,f,c
  7706  0051BC  361D               	rlcf	(___lodiv@quotient+2)^0,f,c
  7707  0051BE  361E               	rlcf	(___lodiv@quotient+3)^0,f,c
  7708  0051C0  361F               	rlcf	(___lodiv@quotient+4)^0,f,c
  7709  0051C2  3620               	rlcf	(___lodiv@quotient+5)^0,f,c
  7710  0051C4  3621               	rlcf	(___lodiv@quotient+6)^0,f,c
  7711  0051C6  3622               	rlcf	(___lodiv@quotient+7)^0,f,c
  7712  0051C8  5013               	movf	___lodiv@divisor^0,w,c
  7713  0051CA  5C0B               	subwf	___lodiv@dividend^0,w,c
  7714  0051CC  5014               	movf	(___lodiv@divisor+1)^0,w,c
  7715  0051CE  580C               	subwfb	(___lodiv@dividend+1)^0,w,c
  7716  0051D0  5015               	movf	(___lodiv@divisor+2)^0,w,c
  7717  0051D2  580D               	subwfb	(___lodiv@dividend+2)^0,w,c
  7718  0051D4  5016               	movf	(___lodiv@divisor+3)^0,w,c
  7719  0051D6  580E               	subwfb	(___lodiv@dividend+3)^0,w,c
  7720  0051D8  5017               	movf	(___lodiv@divisor+4)^0,w,c
  7721  0051DA  580F               	subwfb	(___lodiv@dividend+4)^0,w,c
  7722  0051DC  5018               	movf	(___lodiv@divisor+5)^0,w,c
  7723  0051DE  5810               	subwfb	(___lodiv@dividend+5)^0,w,c
  7724  0051E0  5019               	movf	(___lodiv@divisor+6)^0,w,c
  7725  0051E2  5811               	subwfb	(___lodiv@dividend+6)^0,w,c
  7726  0051E4  501A               	movf	(___lodiv@divisor+7)^0,w,c
  7727  0051E6  5812               	subwfb	(___lodiv@dividend+7)^0,w,c
  7728  0051E8  A0D8               	btfss	status,0,c
  7729  0051EA  EFF9  F028         	goto	u10491
  7730  0051EE  EFFB  F028         	goto	u10490
  7731  0051F2                     u10491:
  7732  0051F2  EF0C  F029         	goto	l8486
  7733  0051F6                     u10490:
  7734  0051F6  5013               	movf	___lodiv@divisor^0,w,c
  7735  0051F8  5E0B               	subwf	___lodiv@dividend^0,f,c
  7736  0051FA  5014               	movf	(___lodiv@divisor+1)^0,w,c
  7737  0051FC  5A0C               	subwfb	(___lodiv@dividend+1)^0,f,c
  7738  0051FE  5015               	movf	(___lodiv@divisor+2)^0,w,c
  7739  005200  5A0D               	subwfb	(___lodiv@dividend+2)^0,f,c
  7740  005202  5016               	movf	(___lodiv@divisor+3)^0,w,c
  7741  005204  5A0E               	subwfb	(___lodiv@dividend+3)^0,f,c
  7742  005206  5017               	movf	(___lodiv@divisor+4)^0,w,c
  7743  005208  5A0F               	subwfb	(___lodiv@dividend+4)^0,f,c
  7744  00520A  5018               	movf	(___lodiv@divisor+5)^0,w,c
  7745  00520C  5A10               	subwfb	(___lodiv@dividend+5)^0,f,c
  7746  00520E  5019               	movf	(___lodiv@divisor+6)^0,w,c
  7747  005210  5A11               	subwfb	(___lodiv@dividend+6)^0,f,c
  7748  005212  501A               	movf	(___lodiv@divisor+7)^0,w,c
  7749  005214  5A12               	subwfb	(___lodiv@dividend+7)^0,f,c
  7750  005216  801B               	bsf	___lodiv@quotient^0,0,c
  7751  005218                     l8486:
  7752  005218  90D8               	bcf	status,0,c
  7753  00521A  321A               	rrcf	(___lodiv@divisor+7)^0,f,c
  7754  00521C  3219               	rrcf	(___lodiv@divisor+6)^0,f,c
  7755  00521E  3218               	rrcf	(___lodiv@divisor+5)^0,f,c
  7756  005220  3217               	rrcf	(___lodiv@divisor+4)^0,f,c
  7757  005222  3216               	rrcf	(___lodiv@divisor+3)^0,f,c
  7758  005224  3215               	rrcf	(___lodiv@divisor+2)^0,f,c
  7759  005226  3214               	rrcf	(___lodiv@divisor+1)^0,f,c
  7760  005228  3213               	rrcf	___lodiv@divisor^0,f,c
  7761  00522A  2E23               	decfsz	___lodiv@counter^0,f,c
  7762  00522C  EFDB  F028         	goto	l8478
  7763  005230                     l1403:
  7764  005230  C01B  F00B         	movff	___lodiv@quotient,?___lodiv
  7765  005234  C01C  F00C         	movff	___lodiv@quotient+1,?___lodiv+1
  7766  005238  C01D  F00D         	movff	___lodiv@quotient+2,?___lodiv+2
  7767  00523C  C01E  F00E         	movff	___lodiv@quotient+3,?___lodiv+3
  7768  005240  C01F  F00F         	movff	___lodiv@quotient+4,?___lodiv+4
  7769  005244  C020  F010         	movff	___lodiv@quotient+5,?___lodiv+5
  7770  005248  C021  F011         	movff	___lodiv@quotient+6,?___lodiv+6
  7771  00524C  C022  F012         	movff	___lodiv@quotient+7,?___lodiv+7
  7772  005250  0012               	return		;funcret
  7773  005252                     __end_of___lodiv:
  7774                           	opt callstack 0
  7775                           
  7776 ;; *************** function _strncmp *****************
  7777 ;; Defined at:
  7778 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  _l              2   10[COMRAM] PTR const unsigned char 
  7781 ;;		 -> vfpfcnvrt@ct(3), STR_5(9), STR_4(20), STR_3(14), 
  7782 ;;  _r              2   12[COMRAM] PTR const unsigned char 
  7783 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7784 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7785 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7786 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7787 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  7788 ;;		 -> STR_20(4), STR_16(4), 
  7789 ;;  n               2   14[COMRAM] unsigned int 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  r               2   19[COMRAM] PTR const unsigned char 
  7792 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7793 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7794 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7795 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7796 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  7797 ;;		 -> STR_20(4), STR_16(4), 
  7798 ;;  l               2   17[COMRAM] PTR const unsigned char 
  7799 ;;		 -> vfpfcnvrt@ct(3), STR_5(9), STR_4(20), STR_3(14), 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  2   10[COMRAM] int 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7809 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7813 ;;Total ram usage:       11 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    5
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_vfpfcnvrt
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text12
  7824  004B18                     __ptext12:
  7825                           	opt callstack 0
  7826  004B18                     _strncmp:
  7827                           	opt callstack 21
  7828  004B18  C00B  F012         	movff	strncmp@_l,strncmp@l
  7829  004B1C  C00C  F013         	movff	strncmp@_l+1,strncmp@l+1
  7830  004B20  C00D  F014         	movff	strncmp@_r,strncmp@r
  7831  004B24  C00E  F015         	movff	strncmp@_r+1,strncmp@r+1
  7832  004B28  060F               	decf	strncmp@n^0,f,c
  7833  004B2A  A0D8               	btfss	status,0,c
  7834  004B2C  0610               	decf	(strncmp@n+1)^0,f,c
  7835  004B2E  280F               	incf	strncmp@n^0,w,c
  7836  004B30  E106               	bnz	u11731
  7837  004B32  2810               	incf	(strncmp@n+1)^0,w,c
  7838  004B34  A4D8               	btfss	status,2,c
  7839  004B36  EF9F  F025         	goto	u11731
  7840  004B3A  EFA1  F025         	goto	u11730
  7841  004B3E                     u11731:
  7842  004B3E  EFAE  F025         	goto	l9134
  7843  004B42                     u11730:
  7844  004B42  0E00               	movlw	0
  7845  004B44  6E0C               	movwf	(?_strncmp+1)^0,c
  7846  004B46  0E00               	movlw	0
  7847  004B48  6E0B               	movwf	?_strncmp^0,c
  7848  004B4A  EF1E  F026         	goto	l1770
  7849  004B4E                     l9132:
  7850  004B4E  4A12               	infsnz	strncmp@l^0,f,c
  7851  004B50  2A13               	incf	(strncmp@l+1)^0,f,c
  7852  004B52  4A14               	infsnz	strncmp@r^0,f,c
  7853  004B54  2A15               	incf	(strncmp@r+1)^0,f,c
  7854  004B56  060F               	decf	strncmp@n^0,f,c
  7855  004B58  A0D8               	btfss	status,0,c
  7856  004B5A  0610               	decf	(strncmp@n+1)^0,f,c
  7857  004B5C                     l9134:
  7858  004B5C  C012  FFF6         	movff	strncmp@l,tblptrl
  7859  004B60  C013  FFF7         	movff	strncmp@l+1,tblptrh
  7860  004B64  0E00               	movlw	low (__mediumconst shr (0+16))
  7861  004B66  6EF8               	movwf	tblptru,c
  7862  004B68  0E0E               	movlw	(high __ramtop+-1)
  7863  004B6A  64F7               	cpfsgt	tblptrh,c
  7864  004B6C  D003               	bra	u11747
  7865  004B6E  0008               	tblrd		*
  7866  004B70  50F5               	movf	tablat,w,c
  7867  004B72  D005               	bra	u11740
  7868  004B74                     u11747:
  7869  004B74  CFF6 FFE1          	movff	tblptrl,fsr1l
  7870  004B78  CFF7 FFE2          	movff	tblptrh,fsr1h
  7871  004B7C  50E7               	movf	indf1,w,c
  7872  004B7E                     u11740:
  7873  004B7E  0900               	iorlw	0
  7874  004B80  B4D8               	btfsc	status,2,c
  7875  004B82  EFC5  F025         	goto	u11751
  7876  004B86  EFC7  F025         	goto	u11750
  7877  004B8A                     u11751:
  7878  004B8A  EF00  F026         	goto	l9142
  7879  004B8E                     u11750:
  7880  004B8E  C014  FFF6         	movff	strncmp@r,tblptrl
  7881  004B92  C015  FFF7         	movff	strncmp@r+1,tblptrh
  7882  004B96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7883  004B96  6AF8               	clrf	tblptru,c
  7884  004B98                     	endif
  7885  004B98                     	if	0	;tblptru may be non-zero
  7886  004B98                     	endif
  7887  004B98  0008               	tblrd		*
  7888  004B9A  50F5               	movf	tablat,w,c
  7889  004B9C  0900               	iorlw	0
  7890  004B9E  B4D8               	btfsc	status,2,c
  7891  004BA0  EFD4  F025         	goto	u11761
  7892  004BA4  EFD6  F025         	goto	u11760
  7893  004BA8                     u11761:
  7894  004BA8  EF00  F026         	goto	l9142
  7895  004BAC                     u11760:
  7896  004BAC  500F               	movf	strncmp@n^0,w,c
  7897  004BAE  1010               	iorwf	(strncmp@n+1)^0,w,c
  7898  004BB0  B4D8               	btfsc	status,2,c
  7899  004BB2  EFDD  F025         	goto	u11771
  7900  004BB6  EFDF  F025         	goto	u11770
  7901  004BBA                     u11771:
  7902  004BBA  EF00  F026         	goto	l9142
  7903  004BBE                     u11770:
  7904  004BBE  C014  FFF6         	movff	strncmp@r,tblptrl
  7905  004BC2  C015  FFF7         	movff	strncmp@r+1,tblptrh
  7906  004BC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7907  004BC6  6AF8               	clrf	tblptru,c
  7908  004BC8                     	endif
  7909  004BC8                     	if	0	;tblptru may be non-zero
  7910  004BC8                     	endif
  7911  004BC8  0008               	tblrd		*
  7912  004BCA  CFF5 F011          	movff	tablat,??_strncmp
  7913  004BCE  C012  FFF6         	movff	strncmp@l,tblptrl
  7914  004BD2  C013  FFF7         	movff	strncmp@l+1,tblptrh
  7915  004BD6  0E00               	movlw	low (__mediumconst shr (0+16))
  7916  004BD8  6EF8               	movwf	tblptru,c
  7917  004BDA  0E0E               	movlw	(high __ramtop+-1)
  7918  004BDC  64F7               	cpfsgt	tblptrh,c
  7919  004BDE  D003               	bra	u11787
  7920  004BE0  0008               	tblrd		*
  7921  004BE2  50F5               	movf	tablat,w,c
  7922  004BE4  D005               	bra	u11785
  7923  004BE6                     u11787:
  7924  004BE6  CFF6 FFE1          	movff	tblptrl,fsr1l
  7925  004BEA  CFF7 FFE2          	movff	tblptrh,fsr1h
  7926  004BEE  50E7               	movf	indf1,w,c
  7927  004BF0                     u11785:
  7928  004BF0  1811               	xorwf	??_strncmp^0,w,c
  7929  004BF2  B4D8               	btfsc	status,2,c
  7930  004BF4  EFFE  F025         	goto	u11781
  7931  004BF8  EF00  F026         	goto	u11780
  7932  004BFC                     u11781:
  7933  004BFC  EFA7  F025         	goto	l9132
  7934  004C00                     u11780:
  7935  004C00                     l9142:
  7936  004C00  C012  FFF6         	movff	strncmp@l,tblptrl
  7937  004C04  C013  FFF7         	movff	strncmp@l+1,tblptrh
  7938  004C08  0E00               	movlw	low (__mediumconst shr (0+16))
  7939  004C0A  6EF8               	movwf	tblptru,c
  7940  004C0C  0E0E               	movlw	(high __ramtop+-1)
  7941  004C0E  64F7               	cpfsgt	tblptrh,c
  7942  004C10  D003               	bra	u11797
  7943  004C12  0008               	tblrd		*
  7944  004C14  50F5               	movf	tablat,w,c
  7945  004C16  D005               	bra	u11790
  7946  004C18                     u11797:
  7947  004C18  CFF6 FFE1          	movff	tblptrl,fsr1l
  7948  004C1C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7949  004C20  50E7               	movf	indf1,w,c
  7950  004C22                     u11790:
  7951  004C22  6E11               	movwf	??_strncmp^0,c
  7952  004C24  C014  FFF6         	movff	strncmp@r,tblptrl
  7953  004C28  C015  FFF7         	movff	strncmp@r+1,tblptrh
  7954  004C2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7955  004C2C  6AF8               	clrf	tblptru,c
  7956  004C2E                     	endif
  7957  004C2E                     	if	0	;tblptru may be non-zero
  7958  004C2E                     	endif
  7959  004C2E  0008               	tblrd		*
  7960  004C30  50F5               	movf	tablat,w,c
  7961  004C32  5C11               	subwf	??_strncmp^0,w,c
  7962  004C34  6E0B               	movwf	?_strncmp^0,c
  7963  004C36  6A0C               	clrf	(?_strncmp+1)^0,c
  7964  004C38  A0D8               	btfss	status,0,c
  7965  004C3A  060C               	decf	(?_strncmp+1)^0,f,c
  7966  004C3C                     l1770:
  7967  004C3C  0012               	return		;funcret
  7968  004C3E                     __end_of_strncmp:
  7969                           	opt callstack 0
  7970                           
  7971 ;; *************** function _stoa *****************
  7972 ;; Defined at:
  7973 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7976 ;;		 -> vsnprintf@f(6), 
  7977 ;;  s               2   21[COMRAM] PTR unsigned char 
  7978 ;;		 -> ?_snprintf(2), ticks(2), 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  nuls            7   24[COMRAM] unsigned char [7]
  7981 ;;  l               2   39[COMRAM] int 
  7982 ;;  p               2   37[COMRAM] int 
  7983 ;;  cp              2   35[COMRAM] PTR unsigned char 
  7984 ;;		 -> ?_snprintf(2), stoa@nuls(7), ticks(2), 
  7985 ;;  w               2   33[COMRAM] int 
  7986 ;;  i               2   31[COMRAM] int 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  2   19[COMRAM] int 
  7989 ;; Registers used:
  7990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8000 ;;Total ram usage:       22 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    7
  8003 ;; This function calls:
  8004 ;;		_fputc
  8005 ;;		_strlen
  8006 ;; This function is called by:
  8007 ;;		_vfpfcnvrt
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text13
  8012  00441E                     __ptext13:
  8013                           	opt callstack 0
  8014  00441E                     _stoa:
  8015                           	opt callstack 19
  8016  00441E                     
  8017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8018  00441E  EE21  F0CE         	lfsr	2,stoa@F1174
  8019  004422  EE10  F019         	lfsr	1,stoa@nuls
  8020  004426  0E06               	movlw	6
  8021  004428                     u11331:
  8022  004428  CFDB FFE3          	movff	plusw2,plusw1
  8023  00442C  06E8               	decf	wreg,f,c
  8024  00442E  E2FC               	bc	u11331
  8025  004430                     
  8026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8027  004430  C016  F024         	movff	stoa@s,stoa@cp
  8028  004434  C017  F025         	movff	stoa@s+1,stoa@cp+1
  8029  004438                     
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8031  004438  5024               	movf	stoa@cp^0,w,c
  8032  00443A  1025               	iorwf	(stoa@cp+1)^0,w,c
  8033  00443C  A4D8               	btfss	status,2,c
  8034  00443E  EF23  F022         	goto	u11341
  8035  004442  EF25  F022         	goto	u11340
  8036  004446                     u11341:
  8037  004446  EF29  F022         	goto	l8948
  8038  00444A                     u11340:
  8039  00444A                     
  8040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8041  00444A  0E19               	movlw	low stoa@nuls
  8042  00444C  6E24               	movwf	stoa@cp^0,c
  8043  00444E  0E00               	movlw	high stoa@nuls
  8044  004450  6E25               	movwf	(stoa@cp+1)^0,c
  8045  004452                     l8948:
  8046                           
  8047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8048  004452  C024  F00B         	movff	stoa@cp,strlen@s
  8049  004456  C025  F00C         	movff	stoa@cp+1,strlen@s+1
  8050  00445A  ECFF  F02E         	call	_strlen	;wreg free
  8051  00445E  C00B  F028         	movff	?_strlen,stoa@l
  8052  004462  C00C  F029         	movff	?_strlen+1,stoa@l+1
  8053  004466                     
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8055  004466  C04E  F026         	movff	_prec,stoa@p
  8056  00446A  C04F  F027         	movff	_prec+1,stoa@p+1
  8057  00446E                     
  8058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8059  00446E  BE27               	btfsc	(stoa@p+1)^0,7,c
  8060  004470  EF3C  F022         	goto	u11351
  8061  004474  EF3E  F022         	goto	u11350
  8062  004478                     u11351:
  8063  004478  EF53  F022         	goto	l811
  8064  00447C                     u11350:
  8065  00447C  5028               	movf	stoa@l^0,w,c
  8066  00447E  5C26               	subwf	stoa@p^0,w,c
  8067  004480  5027               	movf	(stoa@p+1)^0,w,c
  8068  004482  0A80               	xorlw	128
  8069  004484  6E18               	movwf	??_stoa^0,c
  8070  004486  5029               	movf	(stoa@l+1)^0,w,c
  8071  004488  0A80               	xorlw	128
  8072  00448A  5818               	subwfb	??_stoa^0,w,c
  8073  00448C  A0D8               	btfss	status,0,c
  8074  00448E  EF4B  F022         	goto	u11361
  8075  004492  EF4D  F022         	goto	u11360
  8076  004496                     u11361:
  8077  004496  EF4F  F022         	goto	l809
  8078  00449A                     u11360:
  8079  00449A  EF53  F022         	goto	l811
  8080  00449E                     l809:
  8081  00449E  C026  F028         	movff	stoa@p,stoa@l
  8082  0044A2  C027  F029         	movff	stoa@p+1,stoa@l+1
  8083  0044A6                     l811:
  8084                           
  8085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8086  0044A6  C028  F026         	movff	stoa@l,stoa@p
  8087  0044AA  C029  F027         	movff	stoa@l+1,stoa@p+1
  8088                           
  8089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8090  0044AE  C04C  F022         	movff	_width,stoa@w
  8091  0044B2  C04D  F023         	movff	_width+1,stoa@w+1
  8092                           
  8093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8094  0044B6  B050               	btfsc	_flags^0,0,c
  8095  0044B8  EF60  F022         	goto	u11371
  8096  0044BC  EF62  F022         	goto	u11370
  8097  0044C0                     u11371:
  8098  0044C0  EF7F  F022         	goto	l8964
  8099  0044C4                     u11370:
  8100  0044C4  EF70  F022         	goto	l8962
  8101  0044C8                     l8958:
  8102                           
  8103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8104  0044C8  0E00               	movlw	0
  8105  0044CA  6E0C               	movwf	(fputc@c+1)^0,c
  8106  0044CC  0E20               	movlw	32
  8107  0044CE  6E0B               	movwf	fputc@c^0,c
  8108  0044D0  C014  F00D         	movff	stoa@fp,fputc@fp
  8109  0044D4  C015  F00E         	movff	stoa@fp+1,fputc@fp+1
  8110  0044D8  EC91  F029         	call	_fputc	;wreg free
  8111  0044DC                     
  8112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8113  0044DC  4A28               	infsnz	stoa@l^0,f,c
  8114  0044DE  2A29               	incf	(stoa@l+1)^0,f,c
  8115  0044E0                     l8962:
  8116                           
  8117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8118  0044E0  5022               	movf	stoa@w^0,w,c
  8119  0044E2  5C28               	subwf	stoa@l^0,w,c
  8120  0044E4  5029               	movf	(stoa@l+1)^0,w,c
  8121  0044E6  0A80               	xorlw	128
  8122  0044E8  6E18               	movwf	??_stoa^0,c
  8123  0044EA  5023               	movf	(stoa@w+1)^0,w,c
  8124  0044EC  0A80               	xorlw	128
  8125  0044EE  5818               	subwfb	??_stoa^0,w,c
  8126  0044F0  A0D8               	btfss	status,0,c
  8127  0044F2  EF7D  F022         	goto	u11381
  8128  0044F6  EF7F  F022         	goto	u11380
  8129  0044FA                     u11381:
  8130  0044FA  EF64  F022         	goto	l8958
  8131  0044FE                     u11380:
  8132  0044FE                     l8964:
  8133                           
  8134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8135  0044FE  0E00               	movlw	0
  8136  004500  6E21               	movwf	(stoa@i+1)^0,c
  8137  004502  0E00               	movlw	0
  8138  004504  6E20               	movwf	stoa@i^0,c
  8139                           
  8140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8141  004506  EF98  F022         	goto	l8972
  8142  00450A                     l8966:
  8143                           
  8144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8145  00450A  C024  FFD9         	movff	stoa@cp,fsr2l
  8146  00450E  C025  FFDA         	movff	stoa@cp+1,fsr2h
  8147  004512  50DF               	movf	indf2,w,c
  8148  004514  6E18               	movwf	??_stoa^0,c
  8149  004516  5018               	movf	??_stoa^0,w,c
  8150  004518  6E0B               	movwf	fputc@c^0,c
  8151  00451A  6A0C               	clrf	(fputc@c+1)^0,c
  8152  00451C  C014  F00D         	movff	stoa@fp,fputc@fp
  8153  004520  C015  F00E         	movff	stoa@fp+1,fputc@fp+1
  8154  004524  EC91  F029         	call	_fputc	;wreg free
  8155  004528                     
  8156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8157  004528  4A24               	infsnz	stoa@cp^0,f,c
  8158  00452A  2A25               	incf	(stoa@cp+1)^0,f,c
  8159  00452C                     
  8160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8161  00452C  4A20               	infsnz	stoa@i^0,f,c
  8162  00452E  2A21               	incf	(stoa@i+1)^0,f,c
  8163  004530                     l8972:
  8164                           
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8166  004530  5026               	movf	stoa@p^0,w,c
  8167  004532  5C20               	subwf	stoa@i^0,w,c
  8168  004534  5021               	movf	(stoa@i+1)^0,w,c
  8169  004536  0A80               	xorlw	128
  8170  004538  6E18               	movwf	??_stoa^0,c
  8171  00453A  5027               	movf	(stoa@p+1)^0,w,c
  8172  00453C  0A80               	xorlw	128
  8173  00453E  5818               	subwfb	??_stoa^0,w,c
  8174  004540  A0D8               	btfss	status,0,c
  8175  004542  EFA5  F022         	goto	u11391
  8176  004546  EFA7  F022         	goto	u11390
  8177  00454A                     u11391:
  8178  00454A  EF85  F022         	goto	l8966
  8179  00454E                     u11390:
  8180  00454E                     
  8181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8182  00454E  A050               	btfss	_flags^0,0,c
  8183  004550  EFAC  F022         	goto	u11401
  8184  004554  EFAE  F022         	goto	u11400
  8185  004558                     u11401:
  8186  004558  EFCB  F022         	goto	l821
  8187  00455C                     u11400:
  8188  00455C  EFBC  F022         	goto	l8980
  8189  004560                     l8976:
  8190                           
  8191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8192  004560  0E00               	movlw	0
  8193  004562  6E0C               	movwf	(fputc@c+1)^0,c
  8194  004564  0E20               	movlw	32
  8195  004566  6E0B               	movwf	fputc@c^0,c
  8196  004568  C014  F00D         	movff	stoa@fp,fputc@fp
  8197  00456C  C015  F00E         	movff	stoa@fp+1,fputc@fp+1
  8198  004570  EC91  F029         	call	_fputc	;wreg free
  8199  004574                     
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8201  004574  4A28               	infsnz	stoa@l^0,f,c
  8202  004576  2A29               	incf	(stoa@l+1)^0,f,c
  8203  004578                     l8980:
  8204                           
  8205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8206  004578  5022               	movf	stoa@w^0,w,c
  8207  00457A  5C28               	subwf	stoa@l^0,w,c
  8208  00457C  5029               	movf	(stoa@l+1)^0,w,c
  8209  00457E  0A80               	xorlw	128
  8210  004580  6E18               	movwf	??_stoa^0,c
  8211  004582  5023               	movf	(stoa@w+1)^0,w,c
  8212  004584  0A80               	xorlw	128
  8213  004586  5818               	subwfb	??_stoa^0,w,c
  8214  004588  A0D8               	btfss	status,0,c
  8215  00458A  EFC9  F022         	goto	u11411
  8216  00458E  EFCB  F022         	goto	u11410
  8217  004592                     u11411:
  8218  004592  EFB0  F022         	goto	l8976
  8219  004596                     u11410:
  8220  004596                     l821:
  8221                           
  8222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8223  004596  C028  F014         	movff	stoa@l,?_stoa
  8224  00459A  C029  F015         	movff	stoa@l+1,?_stoa+1
  8225  00459E  0012               	return		;funcret
  8226  0045A0                     __end_of_stoa:
  8227                           	opt callstack 0
  8228                           
  8229 ;; *************** function _otoa *****************
  8230 ;; Defined at:
  8231 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  8234 ;;		 -> vsnprintf@f(6), 
  8235 ;;  d               8   39[COMRAM] unsigned long long 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  n               8   61[COMRAM] unsigned long long 
  8238 ;;  i               2   69[COMRAM] int 
  8239 ;;  w               2   59[COMRAM] int 
  8240 ;;  t               2   57[COMRAM] int 
  8241 ;;  p               2   55[COMRAM] int 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  2   37[COMRAM] int 
  8244 ;; Registers used:
  8245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8251 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8252 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8253 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8254 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8255 ;;Total ram usage:       34 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    9
  8258 ;; This function calls:
  8259 ;;		_pad
  8260 ;; This function is called by:
  8261 ;;		_vfpfcnvrt
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           	psect	text14
  8266  003D5E                     __ptext14:
  8267                           	opt callstack 0
  8268  003D5E                     _otoa:
  8269                           	opt callstack 17
  8270  003D5E                     
  8271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8272  003D5E  BE4F               	btfsc	(_prec+1)^0,7,c
  8273  003D60  EFB4  F01E         	goto	u11231
  8274  003D64  EFB6  F01E         	goto	u11230
  8275  003D68                     u11231:
  8276  003D68  EFB7  F01E         	goto	l8896
  8277  003D6C                     u11230:
  8278  003D6C                     
  8279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8280  003D6C  9250               	bcf	_flags^0,1,c
  8281  003D6E                     l8896:
  8282                           
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8284  003D6E  BE4F               	btfsc	(_prec+1)^0,7,c
  8285  003D70  EFC4  F01E         	goto	u11240
  8286  003D74  504F               	movf	(_prec+1)^0,w,c
  8287  003D76  E106               	bnz	u11241
  8288  003D78  044E               	decf	_prec^0,w,c
  8289  003D7A  B0D8               	btfsc	status,0,c
  8290  003D7C  EFC2  F01E         	goto	u11241
  8291  003D80  EFC4  F01E         	goto	u11240
  8292  003D84                     u11241:
  8293  003D84  EFCA  F01E         	goto	l791
  8294  003D88                     u11240:
  8295  003D88  0E00               	movlw	0
  8296  003D8A  6E39               	movwf	(otoa@p+1)^0,c
  8297  003D8C  0E01               	movlw	1
  8298  003D8E  6E38               	movwf	otoa@p^0,c
  8299  003D90  EFCE  F01E         	goto	l793
  8300  003D94                     l791:
  8301  003D94  C04E  F038         	movff	_prec,otoa@p
  8302  003D98  C04F  F039         	movff	_prec+1,otoa@p+1
  8303  003D9C                     l793:
  8304                           
  8305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8306  003D9C  C04C  F03C         	movff	_width,otoa@w
  8307  003DA0  C04D  F03D         	movff	_width+1,otoa@w+1
  8308                           
  8309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8310  003DA4  C028  F03E         	movff	otoa@d,otoa@n
  8311  003DA8  C029  F03F         	movff	otoa@d+1,otoa@n+1
  8312  003DAC  C02A  F040         	movff	otoa@d+2,otoa@n+2
  8313  003DB0  C02B  F041         	movff	otoa@d+3,otoa@n+3
  8314  003DB4  C02C  F042         	movff	otoa@d+4,otoa@n+4
  8315  003DB8  C02D  F043         	movff	otoa@d+5,otoa@n+5
  8316  003DBC  C02E  F044         	movff	otoa@d+6,otoa@n+6
  8317  003DC0  C02F  F045         	movff	otoa@d+7,otoa@n+7
  8318  003DC4                     
  8319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8320  003DC4  0E00               	movlw	0
  8321  003DC6  6E47               	movwf	(otoa@i+1)^0,c
  8322  003DC8  0E4F               	movlw	79
  8323  003DCA  6E46               	movwf	otoa@i^0,c
  8324  003DCC                     
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8326  003DCC  0E00               	movlw	0
  8327  003DCE  0101               	movlb	1	; () banked
  8328  003DD0  6FBB               	movwf	(_dbuf+79)& (0+255),b
  8329  003DD2                     
  8330                           ; BSR set to: 1
  8331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8332  003DD2  0E00               	movlw	0
  8333  003DD4  6E3B               	movwf	(otoa@t+1)^0,c
  8334  003DD6  0E00               	movlw	0
  8335  003DD8  6E3A               	movwf	otoa@t^0,c
  8336                           
  8337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8338  003DDA  EF34  F01F         	goto	l8918
  8339  003DDE                     l8906:
  8340                           
  8341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8342  003DDE  0646               	decf	otoa@i^0,f,c
  8343  003DE0  A0D8               	btfss	status,0,c
  8344  003DE2  0647               	decf	(otoa@i+1)^0,f,c
  8345  003DE4                     
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8347  003DE4  0E07               	movlw	7
  8348  003DE6  143E               	andwf	otoa@n^0,w,c
  8349  003DE8  6E3A               	movwf	otoa@t^0,c
  8350  003DEA  6A3B               	clrf	(otoa@t+1)^0,c
  8351  003DEC                     
  8352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8353  003DEC  0E6C               	movlw	low _dbuf
  8354  003DEE  2446               	addwf	otoa@i^0,w,c
  8355  003DF0  6ED9               	movwf	fsr2l,c
  8356  003DF2  0E01               	movlw	high _dbuf
  8357  003DF4  2047               	addwfc	(otoa@i+1)^0,w,c
  8358  003DF6  6EDA               	movwf	fsr2h,c
  8359  003DF8  503A               	movf	otoa@t^0,w,c
  8360  003DFA  0F30               	addlw	48
  8361  003DFC  6EDF               	movwf	indf2,c
  8362  003DFE                     
  8363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8364  003DFE  0638               	decf	otoa@p^0,f,c
  8365  003E00  A0D8               	btfss	status,0,c
  8366  003E02  0639               	decf	(otoa@p+1)^0,f,c
  8367  003E04                     
  8368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8369  003E04  063C               	decf	otoa@w^0,f,c
  8370  003E06  A0D8               	btfss	status,0,c
  8371  003E08  063D               	decf	(otoa@w+1)^0,f,c
  8372  003E0A                     
  8373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8374  003E0A  C03E  F030         	movff	otoa@n,??_otoa
  8375  003E0E  C03F  F031         	movff	otoa@n+1,??_otoa+1
  8376  003E12  C040  F032         	movff	otoa@n+2,??_otoa+2
  8377  003E16  C041  F033         	movff	otoa@n+3,??_otoa+3
  8378  003E1A  C042  F034         	movff	otoa@n+4,??_otoa+4
  8379  003E1E  C043  F035         	movff	otoa@n+5,??_otoa+5
  8380  003E22  C044  F036         	movff	otoa@n+6,??_otoa+6
  8381  003E26  C045  F037         	movff	otoa@n+7,??_otoa+7
  8382  003E2A  0E04               	movlw	4
  8383  003E2C  EF21  F01F         	goto	u11250
  8384  003E30                     u11255:
  8385  003E30  90D8               	bcf	status,0,c
  8386  003E32  3237               	rrcf	(??_otoa+7)^0,f,c
  8387  003E34  3236               	rrcf	(??_otoa+6)^0,f,c
  8388  003E36  3235               	rrcf	(??_otoa+5)^0,f,c
  8389  003E38  3234               	rrcf	(??_otoa+4)^0,f,c
  8390  003E3A  3233               	rrcf	(??_otoa+3)^0,f,c
  8391  003E3C  3232               	rrcf	(??_otoa+2)^0,f,c
  8392  003E3E  3231               	rrcf	(??_otoa+1)^0,f,c
  8393  003E40  3230               	rrcf	??_otoa^0,f,c
  8394  003E42                     u11250:
  8395  003E42  2EE8               	decfsz	wreg,f,c
  8396  003E44  EF18  F01F         	goto	u11255
  8397  003E48  C030  F03E         	movff	??_otoa,otoa@n
  8398  003E4C  C031  F03F         	movff	??_otoa+1,otoa@n+1
  8399  003E50  C032  F040         	movff	??_otoa+2,otoa@n+2
  8400  003E54  C033  F041         	movff	??_otoa+3,otoa@n+3
  8401  003E58  C034  F042         	movff	??_otoa+4,otoa@n+4
  8402  003E5C  C035  F043         	movff	??_otoa+5,otoa@n+5
  8403  003E60  C036  F044         	movff	??_otoa+6,otoa@n+6
  8404  003E64  C037  F045         	movff	??_otoa+7,otoa@n+7
  8405  003E68                     l8918:
  8406                           
  8407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8408  003E68  BE47               	btfsc	(otoa@i+1)^0,7,c
  8409  003E6A  EF3F  F01F         	goto	u11261
  8410  003E6E  5047               	movf	(otoa@i+1)^0,w,c
  8411  003E70  E108               	bnz	u11260
  8412  003E72  0446               	decf	otoa@i^0,w,c
  8413  003E74  A0D8               	btfss	status,0,c
  8414  003E76  EF3F  F01F         	goto	u11261
  8415  003E7A  EF41  F01F         	goto	u11260
  8416  003E7E                     u11261:
  8417  003E7E  EF71  F01F         	goto	l800
  8418  003E82                     u11260:
  8419  003E82  503E               	movf	otoa@n^0,w,c
  8420  003E84  103F               	iorwf	(otoa@n+1)^0,w,c
  8421  003E86  1040               	iorwf	(otoa@n+2)^0,w,c
  8422  003E88  1041               	iorwf	(otoa@n+3)^0,w,c
  8423  003E8A  1042               	iorwf	(otoa@n+4)^0,w,c
  8424  003E8C  1043               	iorwf	(otoa@n+5)^0,w,c
  8425  003E8E  1044               	iorwf	(otoa@n+6)^0,w,c
  8426  003E90  1045               	iorwf	(otoa@n+7)^0,w,c
  8427  003E92  A4D8               	btfss	status,2,c
  8428  003E94  EF4E  F01F         	goto	u11271
  8429  003E98  EF50  F01F         	goto	u11270
  8430  003E9C                     u11271:
  8431  003E9C  EFEF  F01E         	goto	l8906
  8432  003EA0                     u11270:
  8433  003EA0  BE39               	btfsc	(otoa@p+1)^0,7,c
  8434  003EA2  EF5D  F01F         	goto	u11280
  8435  003EA6  5039               	movf	(otoa@p+1)^0,w,c
  8436  003EA8  E106               	bnz	u11281
  8437  003EAA  0438               	decf	otoa@p^0,w,c
  8438  003EAC  B0D8               	btfsc	status,0,c
  8439  003EAE  EF5B  F01F         	goto	u11281
  8440  003EB2  EF5D  F01F         	goto	u11280
  8441  003EB6                     u11281:
  8442  003EB6  EFEF  F01E         	goto	l8906
  8443  003EBA                     u11280:
  8444  003EBA  BE3D               	btfsc	(otoa@w+1)^0,7,c
  8445  003EBC  EF68  F01F         	goto	u11291
  8446  003EC0  503D               	movf	(otoa@w+1)^0,w,c
  8447  003EC2  E108               	bnz	u11290
  8448  003EC4  043C               	decf	otoa@w^0,w,c
  8449  003EC6  A0D8               	btfss	status,0,c
  8450  003EC8  EF68  F01F         	goto	u11291
  8451  003ECC  EF6A  F01F         	goto	u11290
  8452  003ED0                     u11291:
  8453  003ED0  EF71  F01F         	goto	l800
  8454  003ED4                     u11290:
  8455  003ED4  B250               	btfsc	_flags^0,1,c
  8456  003ED6  EF6F  F01F         	goto	u11301
  8457  003EDA  EF71  F01F         	goto	u11300
  8458  003EDE                     u11301:
  8459  003EDE  EFEF  F01E         	goto	l8906
  8460  003EE2                     u11300:
  8461  003EE2                     l800:
  8462                           
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8464  003EE2  A850               	btfss	_flags^0,4,c
  8465  003EE4  EF76  F01F         	goto	u11311
  8466  003EE8  EF78  F01F         	goto	u11310
  8467  003EEC                     u11311:
  8468  003EEC  EF8F  F01F         	goto	l8936
  8469  003EF0                     u11310:
  8470  003EF0  503A               	movf	otoa@t^0,w,c
  8471  003EF2  103B               	iorwf	(otoa@t+1)^0,w,c
  8472  003EF4  B4D8               	btfsc	status,2,c
  8473  003EF6  EF7F  F01F         	goto	u11321
  8474  003EFA  EF81  F01F         	goto	u11320
  8475  003EFE                     u11321:
  8476  003EFE  EF8F  F01F         	goto	l8936
  8477  003F02                     u11320:
  8478  003F02                     
  8479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8480  003F02  0646               	decf	otoa@i^0,f,c
  8481  003F04  A0D8               	btfss	status,0,c
  8482  003F06  0647               	decf	(otoa@i+1)^0,f,c
  8483  003F08                     
  8484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8485  003F08  0E6C               	movlw	low _dbuf
  8486  003F0A  2446               	addwf	otoa@i^0,w,c
  8487  003F0C  6ED9               	movwf	fsr2l,c
  8488  003F0E  0E01               	movlw	high _dbuf
  8489  003F10  2047               	addwfc	(otoa@i+1)^0,w,c
  8490  003F12  6EDA               	movwf	fsr2h,c
  8491  003F14  0E30               	movlw	48
  8492  003F16  6EDF               	movwf	indf2,c
  8493  003F18                     
  8494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8495  003F18  063C               	decf	otoa@w^0,f,c
  8496  003F1A  A0D8               	btfss	status,0,c
  8497  003F1C  063D               	decf	(otoa@w+1)^0,f,c
  8498  003F1E                     l8936:
  8499                           
  8500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8501  003F1E  C026  F01B         	movff	otoa@fp,pad@fp
  8502  003F22  C027  F01C         	movff	otoa@fp+1,pad@fp+1
  8503  003F26  0E6C               	movlw	low _dbuf
  8504  003F28  2446               	addwf	otoa@i^0,w,c
  8505  003F2A  6E1D               	movwf	pad@buf^0,c
  8506  003F2C  0E01               	movlw	high _dbuf
  8507  003F2E  2047               	addwfc	(otoa@i+1)^0,w,c
  8508  003F30  6E1E               	movwf	(pad@buf+1)^0,c
  8509  003F32  C03C  F01F         	movff	otoa@w,pad@p
  8510  003F36  C03D  F020         	movff	otoa@w+1,pad@p+1
  8511  003F3A  EC58  F02A         	call	_pad	;wreg free
  8512  003F3E  C01B  F026         	movff	?_pad,?_otoa
  8513  003F42  C01C  F027         	movff	?_pad+1,?_otoa+1
  8514  003F46  0012               	return		;funcret
  8515  003F48                     __end_of_otoa:
  8516                           	opt callstack 0
  8517                           
  8518 ;; *************** function _efgtoa *****************
  8519 ;; Defined at:
  8520 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  8523 ;;		 -> vsnprintf@f(6), 
  8524 ;;  f               4   63[COMRAM] PTR struct _IO_FILE
  8525 ;;  c               1   67[COMRAM] unsigned char 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  u               4   52[BANK0 ] unsigned char 
  8528 ;;  g               4   44[BANK0 ] unsigned char 
  8529 ;;  l               4   38[BANK0 ] unsigned char 
  8530 ;;  h               4   34[BANK0 ] unsigned char 
  8531 ;;  ou              4    0[BANK0 ] unsigned char 
  8532 ;;  n               2   50[BANK0 ] int 
  8533 ;;  e               2   48[BANK0 ] int 
  8534 ;;  i               2   42[BANK0 ] int 
  8535 ;;  w               2   31[BANK0 ] int 
  8536 ;;  p               2   28[BANK0 ] int 
  8537 ;;  sign            2   26[BANK0 ] int 
  8538 ;;  d               2   24[BANK0 ] int 
  8539 ;;  ne              2   22[BANK0 ] int 
  8540 ;;  m               2   20[BANK0 ] int 
  8541 ;;  pp              2   18[BANK0 ] int 
  8542 ;;  t               2   16[BANK0 ] int 
  8543 ;;  mode            1   33[BANK0 ] unsigned char 
  8544 ;;  nmode           1   30[BANK0 ] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  2   61[COMRAM] int 
  8547 ;; Registers used:
  8548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8554 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8555 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8556 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8557 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8558 ;;Total ram usage:       68 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    9
  8561 ;; This function calls:
  8562 ;;		___awdiv
  8563 ;;		___awmod
  8564 ;;		___fladd
  8565 ;;		___fldiv
  8566 ;;		___fleq
  8567 ;;		___flge
  8568 ;;		___flmul
  8569 ;;		___flneg
  8570 ;;		___flsub
  8571 ;;		___fltol
  8572 ;;		___fpclassifyf
  8573 ;;		_floorf
  8574 ;;		_isupper
  8575 ;;		_pad
  8576 ;;		_strcpy
  8577 ;;		_tolower
  8578 ;; This function is called by:
  8579 ;;		_vfpfcnvrt
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text15
  8584  0015A8                     __ptext15:
  8585                           	opt callstack 0
  8586  0015A8                     _efgtoa:
  8587                           	opt callstack 17
  8588  0015A8                     
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8590  0015A8  0E00               	movlw	0
  8591  0015AA  0100               	movlb	0	; () banked
  8592  0015AC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8593  0015AE  0E00               	movlw	0
  8594  0015B0  6F7A               	movwf	efgtoa@sign& (0+255),b
  8595  0015B2                     
  8596                           ; BSR set to: 0
  8597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8598  0015B2  C040  F08C         	movff	efgtoa@f,efgtoa@g
  8599  0015B6  C041  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  8600  0015BA  C042  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  8601  0015BE  C043  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  8602  0015C2                     
  8603                           ; BSR set to: 0
  8604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8605  0015C2  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8606  0015C4  EFE8  F00A         	goto	u10710
  8607  0015C8  EFE6  F00A         	goto	u10711
  8608  0015CC                     u10711:
  8609  0015CC  EFFE  F00A         	goto	l8604
  8610  0015D0                     u10710:
  8611  0015D0                     
  8612                           ; BSR set to: 0
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8614  0015D0  0E00               	movlw	0
  8615  0015D2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8616  0015D4  0E01               	movlw	1
  8617  0015D6  6F7A               	movwf	efgtoa@sign& (0+255),b
  8618  0015D8                     
  8619                           ; BSR set to: 0
  8620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8621  0015D8  C08C  F00B         	movff	efgtoa@g,___flneg@f1
  8622  0015DC  C08D  F00C         	movff	efgtoa@g+1,___flneg@f1+1
  8623  0015E0  C08E  F00D         	movff	efgtoa@g+2,___flneg@f1+2
  8624  0015E4  C08F  F00E         	movff	efgtoa@g+3,___flneg@f1+3
  8625  0015E8  ECC7  F02E         	call	___flneg	;wreg free
  8626  0015EC  C00B  F08C         	movff	?___flneg,efgtoa@g
  8627  0015F0  C00C  F08D         	movff	?___flneg+1,efgtoa@g+1
  8628  0015F4  C00D  F08E         	movff	?___flneg+2,efgtoa@g+2
  8629  0015F8  C00E  F08F         	movff	?___flneg+3,efgtoa@g+3
  8630  0015FC                     l8604:
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8633  0015FC  0E00               	movlw	0
  8634  0015FE  0100               	movlb	0	; () banked
  8635  001600  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  8636  001602  0E00               	movlw	0
  8637  001604  6F92               	movwf	efgtoa@n& (0+255),b
  8638  001606                     
  8639                           ; BSR set to: 0
  8640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8641  001606  C04C  F07F         	movff	_width,efgtoa@w
  8642  00160A  C04D  F080         	movff	_width+1,efgtoa@w+1
  8643  00160E                     
  8644                           ; BSR set to: 0
  8645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8646  00160E  517A               	movf	efgtoa@sign& (0+255),w,b
  8647  001610  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8648  001612  A4D8               	btfss	status,2,c
  8649  001614  EF0E  F00B         	goto	u10721
  8650  001618  EF10  F00B         	goto	u10720
  8651  00161C                     u10721:
  8652  00161C  EF17  F00B         	goto	l8612
  8653  001620                     u10720:
  8654  001620                     
  8655                           ; BSR set to: 0
  8656  001620  A450               	btfss	_flags^0,2,c
  8657  001622  EF15  F00B         	goto	u10731
  8658  001626  EF17  F00B         	goto	u10730
  8659  00162A                     u10731:
  8660  00162A  EF31  F00B         	goto	l8624
  8661  00162E                     u10730:
  8662  00162E                     l8612:
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8666  00162E  517A               	movf	efgtoa@sign& (0+255),w,b
  8667  001630  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8668  001632  A4D8               	btfss	status,2,c
  8669  001634  EF1E  F00B         	goto	u10741
  8670  001638  EF20  F00B         	goto	u10740
  8671  00163C                     u10741:
  8672  00163C  EF26  F00B         	goto	l8616
  8673  001640                     u10740:
  8674  001640                     
  8675                           ; BSR set to: 0
  8676  001640  0E00               	movlw	0
  8677  001642  6F65               	movwf	(_efgtoa$1721+1)& (0+255),b
  8678  001644  0E2B               	movlw	43
  8679  001646  6F64               	movwf	_efgtoa$1721& (0+255),b
  8680  001648  EF2A  F00B         	goto	l8618
  8681  00164C                     l8616:
  8682                           
  8683                           ; BSR set to: 0
  8684  00164C  0E00               	movlw	0
  8685  00164E  6F65               	movwf	(_efgtoa$1721+1)& (0+255),b
  8686  001650  0E2D               	movlw	45
  8687  001652  6F64               	movwf	_efgtoa$1721& (0+255),b
  8688  001654                     l8618:
  8689                           
  8690                           ; BSR set to: 0
  8691  001654  C064  F16C         	movff	_efgtoa$1721,_dbuf
  8692  001658                     
  8693                           ; BSR set to: 0
  8694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8695  001658  4B92               	infsnz	efgtoa@n& (0+255),f,b
  8696  00165A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  8697  00165C                     
  8698                           ; BSR set to: 0
  8699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8700  00165C  077F               	decf	efgtoa@w& (0+255),f,b
  8701  00165E  A0D8               	btfss	status,0,c
  8702  001660  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  8703  001662                     l8624:
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8707  001662  C08C  F00B         	movff	efgtoa@g,___fpclassifyf@x
  8708  001666  C08D  F00C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8709  00166A  C08E  F00D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8710  00166E  C08F  F00E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8711  001672  EC32  F028         	call	___fpclassifyf	;wreg free
  8712  001676  040B               	decf	?___fpclassifyf^0,w,c
  8713  001678  100C               	iorwf	(?___fpclassifyf+1)^0,w,c
  8714  00167A  A4D8               	btfss	status,2,c
  8715  00167C  EF42  F00B         	goto	u10751
  8716  001680  EF44  F00B         	goto	u10750
  8717  001684                     u10751:
  8718  001684  EF9B  F00B         	goto	l8642
  8719  001688                     u10750:
  8720  001688  0EBF               	movlw	191
  8721  00168A  6E45               	movwf	??_efgtoa^0,c
  8722  00168C  0EFF               	movlw	255
  8723  00168E  6E46               	movwf	(??_efgtoa+1)^0,c
  8724  001690  5044               	movf	efgtoa@c^0,w,c
  8725  001692  6E47               	movwf	(??_efgtoa+2)^0,c
  8726  001694  6A48               	clrf	(??_efgtoa+3)^0,c
  8727  001696  5045               	movf	??_efgtoa^0,w,c
  8728  001698  2647               	addwf	(??_efgtoa+2)^0,f,c
  8729  00169A  5046               	movf	(??_efgtoa+1)^0,w,c
  8730  00169C  2248               	addwfc	(??_efgtoa+3)^0,f,c
  8731  00169E  5048               	movf	(??_efgtoa+3)^0,w,c
  8732  0016A0  E10A               	bnz	u10760
  8733  0016A2  0E1A               	movlw	26
  8734  0016A4  5C47               	subwf	(??_efgtoa+2)^0,w,c
  8735  0016A6  A0D8               	btfss	status,0,c
  8736  0016A8  EF58  F00B         	goto	u10761
  8737  0016AC  EF5B  F00B         	goto	u10760
  8738  0016B0                     u10761:
  8739  0016B0  0E01               	movlw	1
  8740  0016B2  EF5C  F00B         	goto	u10770
  8741  0016B6                     u10760:
  8742  0016B6  0E00               	movlw	0
  8743  0016B8                     u10770:
  8744  0016B8  0100               	movlb	0	; () banked
  8745  0016BA  6F66               	movwf	_efgtoa$1722& (0+255),b
  8746  0016BC  6B67               	clrf	(_efgtoa$1722+1)& (0+255),b
  8747  0016BE                     
  8748                           ; BSR set to: 0
  8749  0016BE  5166               	movf	_efgtoa$1722& (0+255),w,b
  8750  0016C0  1167               	iorwf	(_efgtoa$1722+1)& (0+255),w,b
  8751  0016C2  B4D8               	btfsc	status,2,c
  8752  0016C4  EF66  F00B         	goto	u10781
  8753  0016C8  EF68  F00B         	goto	u10780
  8754  0016CC                     u10781:
  8755  0016CC  EF76  F00B         	goto	l8634
  8756  0016D0                     u10780:
  8757  0016D0                     
  8758                           ; BSR set to: 0
  8759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8760  0016D0  0E6C               	movlw	low _dbuf
  8761  0016D2  2592               	addwf	efgtoa@n& (0+255),w,b
  8762  0016D4  6E0B               	movwf	strcpy@dest^0,c
  8763  0016D6  0E01               	movlw	high _dbuf
  8764  0016D8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8765  0016DA  6E0C               	movwf	(strcpy@dest+1)^0,c
  8766  0016DC  0EBA               	movlw	low STR_6
  8767  0016DE  6E0D               	movwf	strcpy@src^0,c
  8768  0016E0  0EFF               	movlw	high STR_6
  8769  0016E2  6E0E               	movwf	(strcpy@src+1)^0,c
  8770  0016E4  EC90  F02C         	call	_strcpy	;wreg free
  8771                           
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8773  0016E8  EF82  F00B         	goto	l8636
  8774  0016EC                     l8634:
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8778  0016EC  0E6C               	movlw	low _dbuf
  8779  0016EE  2592               	addwf	efgtoa@n& (0+255),w,b
  8780  0016F0  6E0B               	movwf	strcpy@dest^0,c
  8781  0016F2  0E01               	movlw	high _dbuf
  8782  0016F4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8783  0016F6  6E0C               	movwf	(strcpy@dest+1)^0,c
  8784  0016F8  0ECA               	movlw	low STR_7
  8785  0016FA  6E0D               	movwf	strcpy@src^0,c
  8786  0016FC  0EFF               	movlw	high STR_7
  8787  0016FE  6E0E               	movwf	(strcpy@src+1)^0,c
  8788  001700  EC90  F02C         	call	_strcpy	;wreg free
  8789  001704                     l8636:
  8790                           
  8791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8792  001704  0100               	movlb	0	; () banked
  8793  001706  0EFD               	movlw	253
  8794  001708  277F               	addwf	efgtoa@w& (0+255),f,b
  8795  00170A  0EFF               	movlw	255
  8796  00170C  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8797  00170E                     l8638:
  8798                           
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8800  00170E  C03E  F01B         	movff	efgtoa@fp,pad@fp
  8801  001712  C03F  F01C         	movff	efgtoa@fp+1,pad@fp+1
  8802  001716  0E6C               	movlw	low _dbuf
  8803  001718  6E1D               	movwf	pad@buf^0,c
  8804  00171A  0E01               	movlw	high _dbuf
  8805  00171C  6E1E               	movwf	(pad@buf+1)^0,c
  8806  00171E  C07F  F01F         	movff	efgtoa@w,pad@p
  8807  001722  C080  F020         	movff	efgtoa@w+1,pad@p+1
  8808  001726  EC58  F02A         	call	_pad	;wreg free
  8809  00172A  C01B  F03E         	movff	?_pad,?_efgtoa
  8810  00172E  C01C  F03F         	movff	?_pad+1,?_efgtoa+1
  8811  001732  EFAC  F010         	goto	l713
  8812  001736                     l8642:
  8813                           
  8814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8815  001736  C08C  F00B         	movff	efgtoa@g,___fpclassifyf@x
  8816  00173A  C08D  F00C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8817  00173E  C08E  F00D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8818  001742  C08F  F00E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8819  001746  EC32  F028         	call	___fpclassifyf	;wreg free
  8820  00174A  500B               	movf	?___fpclassifyf^0,w,c
  8821  00174C  100C               	iorwf	(?___fpclassifyf+1)^0,w,c
  8822  00174E  A4D8               	btfss	status,2,c
  8823  001750  EFAC  F00B         	goto	u10791
  8824  001754  EFAE  F00B         	goto	u10790
  8825  001758                     u10791:
  8826  001758  EFEE  F00B         	goto	l8660
  8827  00175C                     u10790:
  8828  00175C  0EBF               	movlw	191
  8829  00175E  6E45               	movwf	??_efgtoa^0,c
  8830  001760  0EFF               	movlw	255
  8831  001762  6E46               	movwf	(??_efgtoa+1)^0,c
  8832  001764  5044               	movf	efgtoa@c^0,w,c
  8833  001766  6E47               	movwf	(??_efgtoa+2)^0,c
  8834  001768  6A48               	clrf	(??_efgtoa+3)^0,c
  8835  00176A  5045               	movf	??_efgtoa^0,w,c
  8836  00176C  2647               	addwf	(??_efgtoa+2)^0,f,c
  8837  00176E  5046               	movf	(??_efgtoa+1)^0,w,c
  8838  001770  2248               	addwfc	(??_efgtoa+3)^0,f,c
  8839  001772  5048               	movf	(??_efgtoa+3)^0,w,c
  8840  001774  E10A               	bnz	u10800
  8841  001776  0E1A               	movlw	26
  8842  001778  5C47               	subwf	(??_efgtoa+2)^0,w,c
  8843  00177A  A0D8               	btfss	status,0,c
  8844  00177C  EFC2  F00B         	goto	u10801
  8845  001780  EFC5  F00B         	goto	u10800
  8846  001784                     u10801:
  8847  001784  0E01               	movlw	1
  8848  001786  EFC6  F00B         	goto	u10810
  8849  00178A                     u10800:
  8850  00178A  0E00               	movlw	0
  8851  00178C                     u10810:
  8852  00178C  0100               	movlb	0	; () banked
  8853  00178E  6F68               	movwf	_efgtoa$1726& (0+255),b
  8854  001790  6B69               	clrf	(_efgtoa$1726+1)& (0+255),b
  8855  001792                     
  8856                           ; BSR set to: 0
  8857  001792  5168               	movf	_efgtoa$1726& (0+255),w,b
  8858  001794  1169               	iorwf	(_efgtoa$1726+1)& (0+255),w,b
  8859  001796  B4D8               	btfsc	status,2,c
  8860  001798  EFD0  F00B         	goto	u10821
  8861  00179C  EFD2  F00B         	goto	u10820
  8862  0017A0                     u10821:
  8863  0017A0  EFE0  F00B         	goto	l8652
  8864  0017A4                     u10820:
  8865  0017A4                     
  8866                           ; BSR set to: 0
  8867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8868  0017A4  0E6C               	movlw	low _dbuf
  8869  0017A6  2592               	addwf	efgtoa@n& (0+255),w,b
  8870  0017A8  6E0B               	movwf	strcpy@dest^0,c
  8871  0017AA  0E01               	movlw	high _dbuf
  8872  0017AC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8873  0017AE  6E0C               	movwf	(strcpy@dest+1)^0,c
  8874  0017B0  0EBE               	movlw	low STR_10
  8875  0017B2  6E0D               	movwf	strcpy@src^0,c
  8876  0017B4  0EFF               	movlw	high STR_10
  8877  0017B6  6E0E               	movwf	(strcpy@src+1)^0,c
  8878  0017B8  EC90  F02C         	call	_strcpy	;wreg free
  8879                           
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8881  0017BC  EF82  F00B         	goto	l8636
  8882  0017C0                     l8652:
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8886  0017C0  0E6C               	movlw	low _dbuf
  8887  0017C2  2592               	addwf	efgtoa@n& (0+255),w,b
  8888  0017C4  6E0B               	movwf	strcpy@dest^0,c
  8889  0017C6  0E01               	movlw	high _dbuf
  8890  0017C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8891  0017CA  6E0C               	movwf	(strcpy@dest+1)^0,c
  8892  0017CC  0ED2               	movlw	low STR_11
  8893  0017CE  6E0D               	movwf	strcpy@src^0,c
  8894  0017D0  0EFF               	movlw	high STR_11
  8895  0017D2  6E0E               	movwf	(strcpy@src+1)^0,c
  8896  0017D4  EC90  F02C         	call	_strcpy	;wreg free
  8897  0017D8  EF82  F00B         	goto	l8636
  8898  0017DC                     l8660:
  8899                           
  8900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8901  0017DC  0E00               	movlw	0
  8902  0017DE  0100               	movlb	0	; () banked
  8903  0017E0  6F94               	movwf	efgtoa@u& (0+255),b
  8904  0017E2  0E00               	movlw	0
  8905  0017E4  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  8906  0017E6  0E80               	movlw	128
  8907  0017E8  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  8908  0017EA  0E3F               	movlw	63
  8909  0017EC  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  8910                           
  8911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8912  0017EE  0E00               	movlw	0
  8913  0017F0  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  8914  0017F2  0E00               	movlw	0
  8915  0017F4  6F90               	movwf	efgtoa@e& (0+255),b
  8916  0017F6                     
  8917                           ; BSR set to: 0
  8918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8919  0017F6  C08C  F00B         	movff	efgtoa@g,___fleq@ff1
  8920  0017FA  C08D  F00C         	movff	efgtoa@g+1,___fleq@ff1+1
  8921  0017FE  C08E  F00D         	movff	efgtoa@g+2,___fleq@ff1+2
  8922  001802  C08F  F00E         	movff	efgtoa@g+3,___fleq@ff1+3
  8923  001806  0E00               	movlw	0
  8924  001808  6E0F               	movwf	___fleq@ff2^0,c
  8925  00180A  0E00               	movlw	0
  8926  00180C  6E10               	movwf	(___fleq@ff2+1)^0,c
  8927  00180E  0E00               	movlw	0
  8928  001810  6E11               	movwf	(___fleq@ff2+2)^0,c
  8929  001812  0E00               	movlw	0
  8930  001814  6E12               	movwf	(___fleq@ff2+3)^0,c
  8931  001816  EC69  F02B         	call	___fleq	;wreg free
  8932  00181A  B0D8               	btfsc	status,0,c
  8933  00181C  EF12  F00C         	goto	u10831
  8934  001820  EF14  F00C         	goto	u10830
  8935  001824                     u10831:
  8936  001824  EF97  F00C         	goto	l8678
  8937  001828                     u10830:
  8938  001828  EF33  F00C         	goto	l8670
  8939  00182C                     l8666:
  8940                           
  8941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8942  00182C  C094  F019         	movff	efgtoa@u,___flmul@b
  8943  001830  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  8944  001834  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  8945  001838  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  8946  00183C  0E00               	movlw	0
  8947  00183E  6E1D               	movwf	___flmul@a^0,c
  8948  001840  0E00               	movlw	0
  8949  001842  6E1E               	movwf	(___flmul@a+1)^0,c
  8950  001844  0E20               	movlw	32
  8951  001846  6E1F               	movwf	(___flmul@a+2)^0,c
  8952  001848  0E41               	movlw	65
  8953  00184A  6E20               	movwf	(___flmul@a+3)^0,c
  8954  00184C  EC0D  F013         	call	___flmul	;wreg free
  8955  001850  C019  F094         	movff	?___flmul,efgtoa@u
  8956  001854  C01A  F095         	movff	?___flmul+1,efgtoa@u+1
  8957  001858  C01B  F096         	movff	?___flmul+2,efgtoa@u+2
  8958  00185C  C01C  F097         	movff	?___flmul+3,efgtoa@u+3
  8959  001860                     
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8961  001860  0100               	movlb	0	; () banked
  8962  001862  4B90               	infsnz	efgtoa@e& (0+255),f,b
  8963  001864  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  8964  001866                     l8670:
  8965                           
  8966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8967  001866  C08C  F032         	movff	efgtoa@g,___flge@ff1
  8968  00186A  C08D  F033         	movff	efgtoa@g+1,___flge@ff1+1
  8969  00186E  C08E  F034         	movff	efgtoa@g+2,___flge@ff1+2
  8970  001872  C08F  F035         	movff	efgtoa@g+3,___flge@ff1+3
  8971  001876  0E00               	movlw	0
  8972  001878  6E1D               	movwf	___flmul@a^0,c
  8973  00187A  0E00               	movlw	0
  8974  00187C  6E1E               	movwf	(___flmul@a+1)^0,c
  8975  00187E  0E20               	movlw	32
  8976  001880  6E1F               	movwf	(___flmul@a+2)^0,c
  8977  001882  0E41               	movlw	65
  8978  001884  6E20               	movwf	(___flmul@a+3)^0,c
  8979  001886  C094  F019         	movff	efgtoa@u,___flmul@b
  8980  00188A  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  8981  00188E  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  8982  001892  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  8983  001896  EC0D  F013         	call	___flmul	;wreg free
  8984  00189A  C019  F036         	movff	?___flmul,___flge@ff2
  8985  00189E  C01A  F037         	movff	?___flmul+1,___flge@ff2+1
  8986  0018A2  C01B  F038         	movff	?___flmul+2,___flge@ff2+2
  8987  0018A6  C01C  F039         	movff	?___flmul+3,___flge@ff2+3
  8988  0018AA  ECB0  F027         	call	___flge	;wreg free
  8989  0018AE  B0D8               	btfsc	status,0,c
  8990  0018B0  EF5C  F00C         	goto	u10841
  8991  0018B4  EF5E  F00C         	goto	u10840
  8992  0018B8                     u10841:
  8993  0018B8  EF16  F00C         	goto	l8666
  8994  0018BC                     u10840:
  8995  0018BC  EF7E  F00C         	goto	l8676
  8996  0018C0                     l8672:
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8999  0018C0  C094  F00B         	movff	efgtoa@u,___fldiv@b
  9000  0018C4  C095  F00C         	movff	efgtoa@u+1,___fldiv@b+1
  9001  0018C8  C096  F00D         	movff	efgtoa@u+2,___fldiv@b+2
  9002  0018CC  C097  F00E         	movff	efgtoa@u+3,___fldiv@b+3
  9003  0018D0  0E00               	movlw	0
  9004  0018D2  6E0F               	movwf	___fldiv@a^0,c
  9005  0018D4  0E00               	movlw	0
  9006  0018D6  6E10               	movwf	(___fldiv@a+1)^0,c
  9007  0018D8  0E20               	movlw	32
  9008  0018DA  6E11               	movwf	(___fldiv@a+2)^0,c
  9009  0018DC  0E41               	movlw	65
  9010  0018DE  6E12               	movwf	(___fldiv@a+3)^0,c
  9011  0018E0  EC22  F015         	call	___fldiv	;wreg free
  9012  0018E4  C00B  F094         	movff	?___fldiv,efgtoa@u
  9013  0018E8  C00C  F095         	movff	?___fldiv+1,efgtoa@u+1
  9014  0018EC  C00D  F096         	movff	?___fldiv+2,efgtoa@u+2
  9015  0018F0  C00E  F097         	movff	?___fldiv+3,efgtoa@u+3
  9016  0018F4                     
  9017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9018  0018F4  0100               	movlb	0	; () banked
  9019  0018F6  0790               	decf	efgtoa@e& (0+255),f,b
  9020  0018F8  A0D8               	btfss	status,0,c
  9021  0018FA  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  9022  0018FC                     l8676:
  9023                           
  9024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9025  0018FC  C08C  F032         	movff	efgtoa@g,___flge@ff1
  9026  001900  C08D  F033         	movff	efgtoa@g+1,___flge@ff1+1
  9027  001904  C08E  F034         	movff	efgtoa@g+2,___flge@ff1+2
  9028  001908  C08F  F035         	movff	efgtoa@g+3,___flge@ff1+3
  9029  00190C  C094  F036         	movff	efgtoa@u,___flge@ff2
  9030  001910  C095  F037         	movff	efgtoa@u+1,___flge@ff2+1
  9031  001914  C096  F038         	movff	efgtoa@u+2,___flge@ff2+2
  9032  001918  C097  F039         	movff	efgtoa@u+3,___flge@ff2+3
  9033  00191C  ECB0  F027         	call	___flge	;wreg free
  9034  001920  A0D8               	btfss	status,0,c
  9035  001922  EF95  F00C         	goto	u10851
  9036  001926  EF97  F00C         	goto	u10850
  9037  00192A                     u10851:
  9038  00192A  EF60  F00C         	goto	l8672
  9039  00192E                     u10850:
  9040  00192E                     l8678:
  9041                           
  9042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9043  00192E  C044  F011         	movff	efgtoa@c,tolower@c
  9044  001932  6A12               	clrf	(tolower@c+1)^0,c
  9045  001934  EC31  F02C         	call	_tolower	;wreg free
  9046  001938  5011               	movf	?_tolower^0,w,c
  9047  00193A  0100               	movlb	0	; () banked
  9048  00193C  6F81               	movwf	efgtoa@mode& (0+255),b
  9049  00193E                     
  9050                           ; BSR set to: 0
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9052  00193E  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  9053  001942                     
  9054                           ; BSR set to: 0
  9055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9056  001942  0E67               	movlw	103
  9057  001944  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9058  001946  A4D8               	btfss	status,2,c
  9059  001948  EFA8  F00C         	goto	u10861
  9060  00194C  EFAA  F00C         	goto	u10860
  9061  001950                     u10861:
  9062  001950  EFD0  F00C         	goto	l8692
  9063  001954                     u10860:
  9064  001954                     
  9065                           ; BSR set to: 0
  9066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9067  001954  504E               	movf	_prec^0,w,c
  9068  001956  104F               	iorwf	(_prec+1)^0,w,c
  9069  001958  A4D8               	btfss	status,2,c
  9070  00195A  EFB1  F00C         	goto	u10871
  9071  00195E  EFB3  F00C         	goto	u10870
  9072  001962                     u10871:
  9073  001962  EFB7  F00C         	goto	l8688
  9074  001966                     u10870:
  9075  001966                     
  9076                           ; BSR set to: 0
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9078  001966  0E00               	movlw	0
  9079  001968  6E4F               	movwf	(_prec+1)^0,c
  9080  00196A  0E01               	movlw	1
  9081  00196C  6E4E               	movwf	_prec^0,c
  9082  00196E                     l8688:
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9086  00196E  BE4F               	btfsc	(_prec+1)^0,7,c
  9087  001970  EFC4  F00C         	goto	u10880
  9088  001974  504F               	movf	(_prec+1)^0,w,c
  9089  001976  E106               	bnz	u10881
  9090  001978  044E               	decf	_prec^0,w,c
  9091  00197A  B0D8               	btfsc	status,0,c
  9092  00197C  EFC2  F00C         	goto	u10881
  9093  001980  EFC4  F00C         	goto	u10880
  9094  001984                     u10881:
  9095  001984  EFCA  F00C         	goto	l731
  9096  001988                     u10880:
  9097  001988                     l8690:
  9098                           
  9099                           ; BSR set to: 0
  9100  001988  0E00               	movlw	0
  9101  00198A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  9102  00198C  0E06               	movlw	6
  9103  00198E  6F7C               	movwf	efgtoa@p& (0+255),b
  9104  001990  EFD9  F00C         	goto	l8698
  9105  001994                     l731:
  9106                           
  9107                           ; BSR set to: 0
  9108  001994  C04E  F07C         	movff	_prec,efgtoa@p
  9109  001998  C04F  F07D         	movff	_prec+1,efgtoa@p+1
  9110  00199C  EFD9  F00C         	goto	l8698
  9111  0019A0                     l8692:
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9115  0019A0  BE4F               	btfsc	(_prec+1)^0,7,c
  9116  0019A2  EFD5  F00C         	goto	u10891
  9117  0019A6  EFD7  F00C         	goto	u10890
  9118  0019AA                     u10891:
  9119  0019AA  EFC4  F00C         	goto	l8690
  9120  0019AE                     u10890:
  9121  0019AE  EFCA  F00C         	goto	l731
  9122  0019B2                     l8698:
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9126  0019B2  0E67               	movlw	103
  9127  0019B4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9128  0019B6  A4D8               	btfss	status,2,c
  9129  0019B8  EFE0  F00C         	goto	u10901
  9130  0019BC  EFE2  F00C         	goto	u10900
  9131  0019C0                     u10901:
  9132  0019C0  EF11  F00D         	goto	l8708
  9133  0019C4                     u10900:
  9134  0019C4                     
  9135                           ; BSR set to: 0
  9136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9137  0019C4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  9138  0019C6  EFF0  F00C         	goto	u10910
  9139  0019CA  0EFC               	movlw	252
  9140  0019CC  5D90               	subwf	efgtoa@e& (0+255),w,b
  9141  0019CE  0EFF               	movlw	255
  9142  0019D0  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9143  0019D2  A0D8               	btfss	status,0,c
  9144  0019D4  EFEE  F00C         	goto	u10911
  9145  0019D8  EFF0  F00C         	goto	u10910
  9146  0019DC                     u10911:
  9147  0019DC  EF0F  F00D         	goto	l8706
  9148  0019E0                     u10910:
  9149  0019E0                     
  9150                           ; BSR set to: 0
  9151  0019E0  0EFF               	movlw	255
  9152  0019E2  6E45               	movwf	??_efgtoa^0,c
  9153  0019E4  0EFF               	movlw	255
  9154  0019E6  6E46               	movwf	(??_efgtoa+1)^0,c
  9155  0019E8  C07C  F047         	movff	efgtoa@p,??_efgtoa+2
  9156  0019EC  C07D  F048         	movff	efgtoa@p+1,??_efgtoa+3
  9157  0019F0  5045               	movf	??_efgtoa^0,w,c
  9158  0019F2  2647               	addwf	(??_efgtoa+2)^0,f,c
  9159  0019F4  5046               	movf	(??_efgtoa+1)^0,w,c
  9160  0019F6  2248               	addwfc	(??_efgtoa+3)^0,f,c
  9161  0019F8  5190               	movf	efgtoa@e& (0+255),w,b
  9162  0019FA  5C47               	subwf	(??_efgtoa+2)^0,w,c
  9163  0019FC  5048               	movf	(??_efgtoa+3)^0,w,c
  9164  0019FE  0A80               	xorlw	128
  9165  001A00  6E49               	movwf	(??_efgtoa+4)^0,c
  9166  001A02  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  9167  001A04  0A80               	xorlw	128
  9168  001A06  5849               	subwfb	(??_efgtoa+4)^0,w,c
  9169  001A08  A0D8               	btfss	status,0,c
  9170  001A0A  EF09  F00D         	goto	u10921
  9171  001A0E  EF0B  F00D         	goto	u10920
  9172  001A12                     u10921:
  9173  001A12  EF0F  F00D         	goto	l8706
  9174  001A16                     u10920:
  9175  001A16                     
  9176                           ; BSR set to: 0
  9177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9178  001A16  0E66               	movlw	102
  9179  001A18  6F7E               	movwf	efgtoa@nmode& (0+255),b
  9180                           
  9181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9182  001A1A  EF11  F00D         	goto	l8708
  9183  001A1E                     l8706:
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9187  001A1E  0E65               	movlw	101
  9188  001A20  6F7E               	movwf	efgtoa@nmode& (0+255),b
  9189  001A22                     l8708:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9193  001A22  C07C  F074         	movff	efgtoa@p,efgtoa@m
  9194  001A26  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  9195  001A2A                     
  9196                           ; BSR set to: 0
  9197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9198  001A2A  0E67               	movlw	103
  9199  001A2C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9200  001A2E  A4D8               	btfss	status,2,c
  9201  001A30  EF1C  F00D         	goto	u10931
  9202  001A34  EF1E  F00D         	goto	u10930
  9203  001A38                     u10931:
  9204  001A38  EF2E  F00D         	goto	l8716
  9205  001A3C                     u10930:
  9206  001A3C                     
  9207                           ; BSR set to: 0
  9208  001A3C  0E66               	movlw	102
  9209  001A3E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9210  001A40  A4D8               	btfss	status,2,c
  9211  001A42  EF25  F00D         	goto	u10941
  9212  001A46  EF27  F00D         	goto	u10940
  9213  001A4A                     u10941:
  9214  001A4A  EF30  F00D         	goto	l8718
  9215  001A4E                     u10940:
  9216  001A4E                     
  9217                           ; BSR set to: 0
  9218  001A4E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9219  001A50  EF2E  F00D         	goto	u10950
  9220  001A54  EF2C  F00D         	goto	u10951
  9221  001A58                     u10951:
  9222  001A58  EF30  F00D         	goto	l8718
  9223  001A5C                     u10950:
  9224  001A5C                     l8716:
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9228  001A5C  4B74               	infsnz	efgtoa@m& (0+255),f,b
  9229  001A5E  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  9230  001A60                     l8718:
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9234  001A60  0E66               	movlw	102
  9235  001A62  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9236  001A64  A4D8               	btfss	status,2,c
  9237  001A66  EF37  F00D         	goto	u10961
  9238  001A6A  EF39  F00D         	goto	u10960
  9239  001A6E                     u10961:
  9240  001A6E  EF59  F00D         	goto	l8728
  9241  001A72                     u10960:
  9242  001A72                     
  9243                           ; BSR set to: 0
  9244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9245  001A72  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9246  001A74  EF40  F00D         	goto	u10970
  9247  001A78  EF3E  F00D         	goto	u10971
  9248  001A7C                     u10971:
  9249  001A7C  EF4C  F00D         	goto	l8724
  9250  001A80                     u10970:
  9251  001A80                     
  9252                           ; BSR set to: 0
  9253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9254  001A80  0E00               	movlw	0
  9255  001A82  6F94               	movwf	efgtoa@u& (0+255),b
  9256  001A84  0E00               	movlw	0
  9257  001A86  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  9258  001A88  0E80               	movlw	128
  9259  001A8A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  9260  001A8C  0E3F               	movlw	63
  9261  001A8E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  9262                           
  9263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9264  001A90  0E00               	movlw	0
  9265  001A92  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  9266  001A94  0E00               	movlw	0
  9267  001A96  6F90               	movwf	efgtoa@e& (0+255),b
  9268  001A98                     l8724:
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9272  001A98  0E67               	movlw	103
  9273  001A9A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9274  001A9C  B4D8               	btfsc	status,2,c
  9275  001A9E  EF53  F00D         	goto	u10981
  9276  001AA2  EF55  F00D         	goto	u10980
  9277  001AA6                     u10981:
  9278  001AA6  EF59  F00D         	goto	l8728
  9279  001AAA                     u10980:
  9280  001AAA                     
  9281                           ; BSR set to: 0
  9282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9283  001AAA  5190               	movf	efgtoa@e& (0+255),w,b
  9284  001AAC  2774               	addwf	efgtoa@m& (0+255),f,b
  9285  001AAE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  9286  001AB0  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9287  001AB2                     l8728:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9291  001AB2  0E00               	movlw	0
  9292  001AB4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9293  001AB6  0E00               	movlw	0
  9294  001AB8  6F8A               	movwf	efgtoa@i& (0+255),b
  9295  001ABA                     
  9296                           ; BSR set to: 0
  9297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9298  001ABA  C08C  F082         	movff	efgtoa@g,efgtoa@h
  9299  001ABE  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  9300  001AC2  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  9301  001AC6  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  9302  001ACA                     
  9303                           ; BSR set to: 0
  9304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9305  001ACA  C094  F060         	movff	efgtoa@u,efgtoa@ou
  9306  001ACE  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  9307  001AD2  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  9308  001AD6  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  9309                           
  9310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9311  001ADA  EFEA  F00D         	goto	l8742
  9312  001ADE                     l8734:
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9316  001ADE  C082  F00B         	movff	efgtoa@h,___fldiv@b
  9317  001AE2  C083  F00C         	movff	efgtoa@h+1,___fldiv@b+1
  9318  001AE6  C084  F00D         	movff	efgtoa@h+2,___fldiv@b+2
  9319  001AEA  C085  F00E         	movff	efgtoa@h+3,___fldiv@b+3
  9320  001AEE  C094  F00F         	movff	efgtoa@u,___fldiv@a
  9321  001AF2  C095  F010         	movff	efgtoa@u+1,___fldiv@a+1
  9322  001AF6  C096  F011         	movff	efgtoa@u+2,___fldiv@a+2
  9323  001AFA  C097  F012         	movff	efgtoa@u+3,___fldiv@a+3
  9324  001AFE  EC22  F015         	call	___fldiv	;wreg free
  9325  001B02  C00B  F024         	movff	?___fldiv,floorf@x
  9326  001B06  C00C  F025         	movff	?___fldiv+1,floorf@x+1
  9327  001B0A  C00D  F026         	movff	?___fldiv+2,floorf@x+2
  9328  001B0E  C00E  F027         	movff	?___fldiv+3,floorf@x+3
  9329  001B12  ECA6  F01C         	call	_floorf	;wreg free
  9330  001B16  C024  F086         	movff	?_floorf,efgtoa@l
  9331  001B1A  C025  F087         	movff	?_floorf+1,efgtoa@l+1
  9332  001B1E  C026  F088         	movff	?_floorf+2,efgtoa@l+2
  9333  001B22  C027  F089         	movff	?_floorf+3,efgtoa@l+3
  9334                           
  9335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9336  001B26  C086  F00B         	movff	efgtoa@l,___fltol@f1
  9337  001B2A  C087  F00C         	movff	efgtoa@l+1,___fltol@f1+1
  9338  001B2E  C088  F00D         	movff	efgtoa@l+2,___fltol@f1+2
  9339  001B32  C089  F00E         	movff	efgtoa@l+3,___fltol@f1+3
  9340  001B36  EC2D  F027         	call	___fltol	;wreg free
  9341  001B3A  C00B  F078         	movff	?___fltol,efgtoa@d
  9342  001B3E  C00C  F079         	movff	?___fltol+1,efgtoa@d+1
  9343  001B42                     
  9344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9345  001B42  C082  F032         	movff	efgtoa@h,___flsub@b
  9346  001B46  C083  F033         	movff	efgtoa@h+1,___flsub@b+1
  9347  001B4A  C084  F034         	movff	efgtoa@h+2,___flsub@b+2
  9348  001B4E  C085  F035         	movff	efgtoa@h+3,___flsub@b+3
  9349  001B52  C094  F01D         	movff	efgtoa@u,___flmul@a
  9350  001B56  C095  F01E         	movff	efgtoa@u+1,___flmul@a+1
  9351  001B5A  C096  F01F         	movff	efgtoa@u+2,___flmul@a+2
  9352  001B5E  C097  F020         	movff	efgtoa@u+3,___flmul@a+3
  9353  001B62  C086  F019         	movff	efgtoa@l,___flmul@b
  9354  001B66  C087  F01A         	movff	efgtoa@l+1,___flmul@b+1
  9355  001B6A  C088  F01B         	movff	efgtoa@l+2,___flmul@b+2
  9356  001B6E  C089  F01C         	movff	efgtoa@l+3,___flmul@b+3
  9357  001B72  EC0D  F013         	call	___flmul	;wreg free
  9358  001B76  C019  F036         	movff	?___flmul,___flsub@a
  9359  001B7A  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  9360  001B7E  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  9361  001B82  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  9362  001B86  EC8A  F02D         	call	___flsub	;wreg free
  9363  001B8A  C032  F082         	movff	?___flsub,efgtoa@h
  9364  001B8E  C033  F083         	movff	?___flsub+1,efgtoa@h+1
  9365  001B92  C034  F084         	movff	?___flsub+2,efgtoa@h+2
  9366  001B96  C035  F085         	movff	?___flsub+3,efgtoa@h+3
  9367  001B9A                     
  9368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9369  001B9A  C094  F00B         	movff	efgtoa@u,___fldiv@b
  9370  001B9E  C095  F00C         	movff	efgtoa@u+1,___fldiv@b+1
  9371  001BA2  C096  F00D         	movff	efgtoa@u+2,___fldiv@b+2
  9372  001BA6  C097  F00E         	movff	efgtoa@u+3,___fldiv@b+3
  9373  001BAA  0E00               	movlw	0
  9374  001BAC  6E0F               	movwf	___fldiv@a^0,c
  9375  001BAE  0E00               	movlw	0
  9376  001BB0  6E10               	movwf	(___fldiv@a+1)^0,c
  9377  001BB2  0E20               	movlw	32
  9378  001BB4  6E11               	movwf	(___fldiv@a+2)^0,c
  9379  001BB6  0E41               	movlw	65
  9380  001BB8  6E12               	movwf	(___fldiv@a+3)^0,c
  9381  001BBA  EC22  F015         	call	___fldiv	;wreg free
  9382  001BBE  C00B  F094         	movff	?___fldiv,efgtoa@u
  9383  001BC2  C00C  F095         	movff	?___fldiv+1,efgtoa@u+1
  9384  001BC6  C00D  F096         	movff	?___fldiv+2,efgtoa@u+2
  9385  001BCA  C00E  F097         	movff	?___fldiv+3,efgtoa@u+3
  9386  001BCE                     
  9387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9388  001BCE  0100               	movlb	0	; () banked
  9389  001BD0  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9390  001BD2  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9391  001BD4                     l8742:
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9395  001BD4  5174               	movf	efgtoa@m& (0+255),w,b
  9396  001BD6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9397  001BD8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9398  001BDA  0A80               	xorlw	128
  9399  001BDC  6E45               	movwf	??_efgtoa^0,c
  9400  001BDE  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9401  001BE0  0A80               	xorlw	128
  9402  001BE2  5845               	subwfb	??_efgtoa^0,w,c
  9403  001BE4  A0D8               	btfss	status,0,c
  9404  001BE6  EFF7  F00D         	goto	u10991
  9405  001BEA  EFF9  F00D         	goto	u10990
  9406  001BEE                     u10991:
  9407  001BEE  EF6F  F00D         	goto	l8734
  9408  001BF2                     u10990:
  9409  001BF2                     
  9410                           ; BSR set to: 0
  9411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9412  001BF2  C094  F019         	movff	efgtoa@u,___flmul@b
  9413  001BF6  C095  F01A         	movff	efgtoa@u+1,___flmul@b+1
  9414  001BFA  C096  F01B         	movff	efgtoa@u+2,___flmul@b+2
  9415  001BFE  C097  F01C         	movff	efgtoa@u+3,___flmul@b+3
  9416  001C02  0E00               	movlw	0
  9417  001C04  6E1D               	movwf	___flmul@a^0,c
  9418  001C06  0E00               	movlw	0
  9419  001C08  6E1E               	movwf	(___flmul@a+1)^0,c
  9420  001C0A  0EA0               	movlw	160
  9421  001C0C  6E1F               	movwf	(___flmul@a+2)^0,c
  9422  001C0E  0E40               	movlw	64
  9423  001C10  6E20               	movwf	(___flmul@a+3)^0,c
  9424  001C12  EC0D  F013         	call	___flmul	;wreg free
  9425  001C16  C019  F086         	movff	?___flmul,efgtoa@l
  9426  001C1A  C01A  F087         	movff	?___flmul+1,efgtoa@l+1
  9427  001C1E  C01B  F088         	movff	?___flmul+2,efgtoa@l+2
  9428  001C22  C01C  F089         	movff	?___flmul+3,efgtoa@l+3
  9429  001C26                     
  9430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9431  001C26  C082  F032         	movff	efgtoa@h,___flge@ff1
  9432  001C2A  C083  F033         	movff	efgtoa@h+1,___flge@ff1+1
  9433  001C2E  C084  F034         	movff	efgtoa@h+2,___flge@ff1+2
  9434  001C32  C085  F035         	movff	efgtoa@h+3,___flge@ff1+3
  9435  001C36  C086  F036         	movff	efgtoa@l,___flge@ff2
  9436  001C3A  C087  F037         	movff	efgtoa@l+1,___flge@ff2+1
  9437  001C3E  C088  F038         	movff	efgtoa@l+2,___flge@ff2+2
  9438  001C42  C089  F039         	movff	efgtoa@l+3,___flge@ff2+3
  9439  001C46  ECB0  F027         	call	___flge	;wreg free
  9440  001C4A  B0D8               	btfsc	status,0,c
  9441  001C4C  EF2A  F00E         	goto	u11001
  9442  001C50  EF2C  F00E         	goto	u11000
  9443  001C54                     u11001:
  9444  001C54  EF37  F00E         	goto	l8750
  9445  001C58                     u11000:
  9446  001C58                     
  9447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9448  001C58  0E00               	movlw	0
  9449  001C5A  0100               	movlb	0	; () banked
  9450  001C5C  6F86               	movwf	efgtoa@l& (0+255),b
  9451  001C5E  0E00               	movlw	0
  9452  001C60  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9453  001C62  0E00               	movlw	0
  9454  001C64  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9455  001C66  0E00               	movlw	0
  9456  001C68  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9457                           
  9458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9459  001C6A  EF60  F00E         	goto	l8756
  9460  001C6E                     l8750:
  9461                           
  9462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9463  001C6E  C082  F00B         	movff	efgtoa@h,___fleq@ff1
  9464  001C72  C083  F00C         	movff	efgtoa@h+1,___fleq@ff1+1
  9465  001C76  C084  F00D         	movff	efgtoa@h+2,___fleq@ff1+2
  9466  001C7A  C085  F00E         	movff	efgtoa@h+3,___fleq@ff1+3
  9467  001C7E  C086  F00F         	movff	efgtoa@l,___fleq@ff2
  9468  001C82  C087  F010         	movff	efgtoa@l+1,___fleq@ff2+1
  9469  001C86  C088  F011         	movff	efgtoa@l+2,___fleq@ff2+2
  9470  001C8A  C089  F012         	movff	efgtoa@l+3,___fleq@ff2+3
  9471  001C8E  EC69  F02B         	call	___fleq	;wreg free
  9472  001C92  A0D8               	btfss	status,0,c
  9473  001C94  EF4E  F00E         	goto	u11011
  9474  001C98  EF50  F00E         	goto	u11010
  9475  001C9C                     u11011:
  9476  001C9C  EF60  F00E         	goto	l8756
  9477  001CA0                     u11010:
  9478  001CA0  0100               	movlb	0	; () banked
  9479  001CA2  B178               	btfsc	efgtoa@d& (0+255),0,b
  9480  001CA4  EF56  F00E         	goto	u11021
  9481  001CA8  EF58  F00E         	goto	u11020
  9482  001CAC                     u11021:
  9483  001CAC  EF60  F00E         	goto	l8756
  9484  001CB0                     u11020:
  9485  001CB0                     
  9486                           ; BSR set to: 0
  9487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9488  001CB0  0E00               	movlw	0
  9489  001CB2  6F86               	movwf	efgtoa@l& (0+255),b
  9490  001CB4  0E00               	movlw	0
  9491  001CB6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9492  001CB8  0E00               	movlw	0
  9493  001CBA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9494  001CBC  0E00               	movlw	0
  9495  001CBE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9496  001CC0                     l8756:
  9497                           
  9498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9499  001CC0  C08C  F00B         	movff	efgtoa@g,___fladd@b
  9500  001CC4  C08D  F00C         	movff	efgtoa@g+1,___fladd@b+1
  9501  001CC8  C08E  F00D         	movff	efgtoa@g+2,___fladd@b+2
  9502  001CCC  C08F  F00E         	movff	efgtoa@g+3,___fladd@b+3
  9503  001CD0  C086  F00F         	movff	efgtoa@l,___fladd@a
  9504  001CD4  C087  F010         	movff	efgtoa@l+1,___fladd@a+1
  9505  001CD8  C088  F011         	movff	efgtoa@l+2,___fladd@a+2
  9506  001CDC  C089  F012         	movff	efgtoa@l+3,___fladd@a+3
  9507  001CE0  ECAD  F010         	call	___fladd	;wreg free
  9508  001CE4  C00B  F082         	movff	?___fladd,efgtoa@h
  9509  001CE8  C00C  F083         	movff	?___fladd+1,efgtoa@h+1
  9510  001CEC  C00D  F084         	movff	?___fladd+2,efgtoa@h+2
  9511  001CF0  C00E  F085         	movff	?___fladd+3,efgtoa@h+3
  9512  001CF4                     
  9513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9514  001CF4  C060  F094         	movff	efgtoa@ou,efgtoa@u
  9515  001CF8  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  9516  001CFC  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  9517  001D00  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  9518  001D04                     
  9519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9520  001D04  0E65               	movlw	101
  9521  001D06  0100               	movlb	0	; () banked
  9522  001D08  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9523  001D0A  B4D8               	btfsc	status,2,c
  9524  001D0C  EF8A  F00E         	goto	u11031
  9525  001D10  EF8C  F00E         	goto	u11030
  9526  001D14                     u11031:
  9527  001D14  EF92  F00E         	goto	l8764
  9528  001D18                     u11030:
  9529  001D18                     
  9530                           ; BSR set to: 0
  9531  001D18  C090  F076         	movff	efgtoa@e,efgtoa@ne
  9532  001D1C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  9533  001D20  EF96  F00E         	goto	l757
  9534  001D24                     l8764:
  9535                           
  9536                           ; BSR set to: 0
  9537  001D24  0E00               	movlw	0
  9538  001D26  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  9539  001D28  0E00               	movlw	0
  9540  001D2A  6F76               	movwf	efgtoa@ne& (0+255),b
  9541  001D2C                     l757:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9545  001D2C  0E00               	movlw	0
  9546  001D2E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9547  001D30  0E00               	movlw	0
  9548  001D32  6F72               	movwf	efgtoa@pp& (0+255),b
  9549                           
  9550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9551  001D34  0E00               	movlw	0
  9552  001D36  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  9553  001D38  0E00               	movlw	0
  9554  001D3A  6F70               	movwf	efgtoa@t& (0+255),b
  9555                           
  9556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9557  001D3C  0E00               	movlw	0
  9558  001D3E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9559  001D40  0E00               	movlw	0
  9560  001D42  6F8A               	movwf	efgtoa@i& (0+255),b
  9561                           
  9562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9563  001D44  EF92  F00F         	goto	l8814
  9564  001D48                     l8766:
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9568  001D48  C082  F00B         	movff	efgtoa@h,___fldiv@b
  9569  001D4C  C083  F00C         	movff	efgtoa@h+1,___fldiv@b+1
  9570  001D50  C084  F00D         	movff	efgtoa@h+2,___fldiv@b+2
  9571  001D54  C085  F00E         	movff	efgtoa@h+3,___fldiv@b+3
  9572  001D58  C094  F00F         	movff	efgtoa@u,___fldiv@a
  9573  001D5C  C095  F010         	movff	efgtoa@u+1,___fldiv@a+1
  9574  001D60  C096  F011         	movff	efgtoa@u+2,___fldiv@a+2
  9575  001D64  C097  F012         	movff	efgtoa@u+3,___fldiv@a+3
  9576  001D68  EC22  F015         	call	___fldiv	;wreg free
  9577  001D6C  C00B  F024         	movff	?___fldiv,floorf@x
  9578  001D70  C00C  F025         	movff	?___fldiv+1,floorf@x+1
  9579  001D74  C00D  F026         	movff	?___fldiv+2,floorf@x+2
  9580  001D78  C00E  F027         	movff	?___fldiv+3,floorf@x+3
  9581  001D7C  ECA6  F01C         	call	_floorf	;wreg free
  9582  001D80  C024  F086         	movff	?_floorf,efgtoa@l
  9583  001D84  C025  F087         	movff	?_floorf+1,efgtoa@l+1
  9584  001D88  C026  F088         	movff	?_floorf+2,efgtoa@l+2
  9585  001D8C  C027  F089         	movff	?_floorf+3,efgtoa@l+3
  9586                           
  9587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9588  001D90  C086  F00B         	movff	efgtoa@l,___fltol@f1
  9589  001D94  C087  F00C         	movff	efgtoa@l+1,___fltol@f1+1
  9590  001D98  C088  F00D         	movff	efgtoa@l+2,___fltol@f1+2
  9591  001D9C  C089  F00E         	movff	efgtoa@l+3,___fltol@f1+3
  9592  001DA0  EC2D  F027         	call	___fltol	;wreg free
  9593  001DA4  C00B  F078         	movff	?___fltol,efgtoa@d
  9594  001DA8  C00C  F079         	movff	?___fltol+1,efgtoa@d+1
  9595  001DAC                     
  9596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9597  001DAC  B850               	btfsc	_flags^0,4,c
  9598  001DAE  EFDB  F00E         	goto	u11041
  9599  001DB2  EFDD  F00E         	goto	u11040
  9600  001DB6                     u11041:
  9601  001DB6  EFFB  F00E         	goto	l8778
  9602  001DBA                     u11040:
  9603  001DBA  0100               	movlb	0	; () banked
  9604  001DBC  5178               	movf	efgtoa@d& (0+255),w,b
  9605  001DBE  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9606  001DC0  A4D8               	btfss	status,2,c
  9607  001DC2  EFE5  F00E         	goto	u11051
  9608  001DC6  EFE7  F00E         	goto	u11050
  9609  001DCA                     u11051:
  9610  001DCA  EFFB  F00E         	goto	l8778
  9611  001DCE                     u11050:
  9612  001DCE                     
  9613                           ; BSR set to: 0
  9614  001DCE  0E67               	movlw	103
  9615  001DD0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9616  001DD2  A4D8               	btfss	status,2,c
  9617  001DD4  EFEE  F00E         	goto	u11061
  9618  001DD8  EFF0  F00E         	goto	u11060
  9619  001DDC                     u11061:
  9620  001DDC  EFFB  F00E         	goto	l8778
  9621  001DE0                     u11060:
  9622  001DE0                     
  9623                           ; BSR set to: 0
  9624  001DE0  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9625  001DE2  EFF7  F00E         	goto	u11070
  9626  001DE6  EFF5  F00E         	goto	u11071
  9627  001DEA                     u11071:
  9628  001DEA  EFFB  F00E         	goto	l8778
  9629  001DEE                     u11070:
  9630  001DEE                     
  9631                           ; BSR set to: 0
  9632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9633  001DEE  4B70               	infsnz	efgtoa@t& (0+255),f,b
  9634  001DF0  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  9635                           
  9636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9637  001DF2  EF46  F00F         	goto	l8806
  9638  001DF6                     l8778:
  9639                           
  9640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9641  001DF6  0100               	movlb	0	; () banked
  9642  001DF8  5172               	movf	efgtoa@pp& (0+255),w,b
  9643  001DFA  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9644  001DFC  A4D8               	btfss	status,2,c
  9645  001DFE  EF03  F00F         	goto	u11081
  9646  001E02  EF05  F00F         	goto	u11080
  9647  001E06                     u11081:
  9648  001E06  EF2F  F00F         	goto	l8798
  9649  001E0A                     u11080:
  9650  001E0A                     
  9651                           ; BSR set to: 0
  9652  001E0A  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9653  001E0C  EF0C  F00F         	goto	u11090
  9654  001E10  EF0A  F00F         	goto	u11091
  9655  001E14                     u11091:
  9656  001E14  EF2F  F00F         	goto	l8798
  9657  001E18                     u11090:
  9658  001E18                     
  9659                           ; BSR set to: 0
  9660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9661  001E18  0E6C               	movlw	low _dbuf
  9662  001E1A  2592               	addwf	efgtoa@n& (0+255),w,b
  9663  001E1C  6ED9               	movwf	fsr2l,c
  9664  001E1E  0E01               	movlw	high _dbuf
  9665  001E20  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9666  001E22  6EDA               	movwf	fsr2h,c
  9667  001E24  0E2E               	movlw	46
  9668  001E26  6EDF               	movwf	indf2,c
  9669  001E28                     
  9670                           ; BSR set to: 0
  9671  001E28  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9672  001E2A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9673  001E2C                     
  9674                           ; BSR set to: 0
  9675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9676  001E2C  077F               	decf	efgtoa@w& (0+255),f,b
  9677  001E2E  A0D8               	btfss	status,0,c
  9678  001E30  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9679  001E32                     
  9680                           ; BSR set to: 0
  9681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9682  001E32  0E00               	movlw	0
  9683  001E34  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9684  001E36  0E01               	movlw	1
  9685  001E38  6F72               	movwf	efgtoa@pp& (0+255),b
  9686  001E3A  EF2F  F00F         	goto	l8798
  9687  001E3E                     l8790:
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9691  001E3E  0E6C               	movlw	low _dbuf
  9692  001E40  2592               	addwf	efgtoa@n& (0+255),w,b
  9693  001E42  6ED9               	movwf	fsr2l,c
  9694  001E44  0E01               	movlw	high _dbuf
  9695  001E46  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9696  001E48  6EDA               	movwf	fsr2h,c
  9697  001E4A  0E30               	movlw	48
  9698  001E4C  6EDF               	movwf	indf2,c
  9699  001E4E                     
  9700                           ; BSR set to: 0
  9701  001E4E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9702  001E50  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9703  001E52                     
  9704                           ; BSR set to: 0
  9705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9706  001E52  077F               	decf	efgtoa@w& (0+255),f,b
  9707  001E54  A0D8               	btfss	status,0,c
  9708  001E56  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9709  001E58                     
  9710                           ; BSR set to: 0
  9711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9712  001E58  0770               	decf	efgtoa@t& (0+255),f,b
  9713  001E5A  A0D8               	btfss	status,0,c
  9714  001E5C  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  9715  001E5E                     l8798:
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9719  001E5E  5170               	movf	efgtoa@t& (0+255),w,b
  9720  001E60  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9721  001E62  A4D8               	btfss	status,2,c
  9722  001E64  EF36  F00F         	goto	u11101
  9723  001E68  EF38  F00F         	goto	u11100
  9724  001E6C                     u11101:
  9725  001E6C  EF1F  F00F         	goto	l8790
  9726  001E70                     u11100:
  9727  001E70                     
  9728                           ; BSR set to: 0
  9729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9730  001E70  0E6C               	movlw	low _dbuf
  9731  001E72  2592               	addwf	efgtoa@n& (0+255),w,b
  9732  001E74  6ED9               	movwf	fsr2l,c
  9733  001E76  0E01               	movlw	high _dbuf
  9734  001E78  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9735  001E7A  6EDA               	movwf	fsr2h,c
  9736  001E7C  5178               	movf	efgtoa@d& (0+255),w,b
  9737  001E7E  0F30               	addlw	48
  9738  001E80  6EDF               	movwf	indf2,c
  9739  001E82                     
  9740                           ; BSR set to: 0
  9741  001E82  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9742  001E84  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9743  001E86                     
  9744                           ; BSR set to: 0
  9745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9746  001E86  077F               	decf	efgtoa@w& (0+255),f,b
  9747  001E88  A0D8               	btfss	status,0,c
  9748  001E8A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9749  001E8C                     l8806:
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9753  001E8C  C082  F032         	movff	efgtoa@h,___flsub@b
  9754  001E90  C083  F033         	movff	efgtoa@h+1,___flsub@b+1
  9755  001E94  C084  F034         	movff	efgtoa@h+2,___flsub@b+2
  9756  001E98  C085  F035         	movff	efgtoa@h+3,___flsub@b+3
  9757  001E9C  C094  F01D         	movff	efgtoa@u,___flmul@a
  9758  001EA0  C095  F01E         	movff	efgtoa@u+1,___flmul@a+1
  9759  001EA4  C096  F01F         	movff	efgtoa@u+2,___flmul@a+2
  9760  001EA8  C097  F020         	movff	efgtoa@u+3,___flmul@a+3
  9761  001EAC  C086  F019         	movff	efgtoa@l,___flmul@b
  9762  001EB0  C087  F01A         	movff	efgtoa@l+1,___flmul@b+1
  9763  001EB4  C088  F01B         	movff	efgtoa@l+2,___flmul@b+2
  9764  001EB8  C089  F01C         	movff	efgtoa@l+3,___flmul@b+3
  9765  001EBC  EC0D  F013         	call	___flmul	;wreg free
  9766  001EC0  C019  F036         	movff	?___flmul,___flsub@a
  9767  001EC4  C01A  F037         	movff	?___flmul+1,___flsub@a+1
  9768  001EC8  C01B  F038         	movff	?___flmul+2,___flsub@a+2
  9769  001ECC  C01C  F039         	movff	?___flmul+3,___flsub@a+3
  9770  001ED0  EC8A  F02D         	call	___flsub	;wreg free
  9771  001ED4  C032  F082         	movff	?___flsub,efgtoa@h
  9772  001ED8  C033  F083         	movff	?___flsub+1,efgtoa@h+1
  9773  001EDC  C034  F084         	movff	?___flsub+2,efgtoa@h+2
  9774  001EE0  C035  F085         	movff	?___flsub+3,efgtoa@h+3
  9775  001EE4                     
  9776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9777  001EE4  C094  F00B         	movff	efgtoa@u,___fldiv@b
  9778  001EE8  C095  F00C         	movff	efgtoa@u+1,___fldiv@b+1
  9779  001EEC  C096  F00D         	movff	efgtoa@u+2,___fldiv@b+2
  9780  001EF0  C097  F00E         	movff	efgtoa@u+3,___fldiv@b+3
  9781  001EF4  0E00               	movlw	0
  9782  001EF6  6E0F               	movwf	___fldiv@a^0,c
  9783  001EF8  0E00               	movlw	0
  9784  001EFA  6E10               	movwf	(___fldiv@a+1)^0,c
  9785  001EFC  0E20               	movlw	32
  9786  001EFE  6E11               	movwf	(___fldiv@a+2)^0,c
  9787  001F00  0E41               	movlw	65
  9788  001F02  6E12               	movwf	(___fldiv@a+3)^0,c
  9789  001F04  EC22  F015         	call	___fldiv	;wreg free
  9790  001F08  C00B  F094         	movff	?___fldiv,efgtoa@u
  9791  001F0C  C00C  F095         	movff	?___fldiv+1,efgtoa@u+1
  9792  001F10  C00D  F096         	movff	?___fldiv+2,efgtoa@u+2
  9793  001F14  C00E  F097         	movff	?___fldiv+3,efgtoa@u+3
  9794  001F18                     
  9795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9796  001F18  0100               	movlb	0	; () banked
  9797  001F1A  0776               	decf	efgtoa@ne& (0+255),f,b
  9798  001F1C  A0D8               	btfss	status,0,c
  9799  001F1E  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  9800  001F20                     
  9801                           ; BSR set to: 0
  9802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9803  001F20  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9804  001F22  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9805  001F24                     l8814:
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9809  001F24  5174               	movf	efgtoa@m& (0+255),w,b
  9810  001F26  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9811  001F28  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9812  001F2A  0A80               	xorlw	128
  9813  001F2C  6E45               	movwf	??_efgtoa^0,c
  9814  001F2E  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9815  001F30  0A80               	xorlw	128
  9816  001F32  5845               	subwfb	??_efgtoa^0,w,c
  9817  001F34  B0D8               	btfsc	status,0,c
  9818  001F36  EF9F  F00F         	goto	u11111
  9819  001F3A  EFA1  F00F         	goto	u11110
  9820  001F3E                     u11111:
  9821  001F3E  EFAF  F00F         	goto	l8818
  9822  001F42                     u11110:
  9823  001F42                     
  9824                           ; BSR set to: 0
  9825  001F42  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9826  001F44  EFAD  F00F         	goto	u11121
  9827  001F48  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  9828  001F4A  E109               	bnz	u11120
  9829  001F4C  0E4B               	movlw	75
  9830  001F4E  5D92               	subwf	efgtoa@n& (0+255),w,b
  9831  001F50  A0D8               	btfss	status,0,c
  9832  001F52  EFAD  F00F         	goto	u11121
  9833  001F56  EFAF  F00F         	goto	u11120
  9834  001F5A                     u11121:
  9835  001F5A  EFA4  F00E         	goto	l8766
  9836  001F5E                     u11120:
  9837  001F5E                     l8818:
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9841  001F5E  5172               	movf	efgtoa@pp& (0+255),w,b
  9842  001F60  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9843  001F62  A4D8               	btfss	status,2,c
  9844  001F64  EFB6  F00F         	goto	u11131
  9845  001F68  EFB8  F00F         	goto	u11130
  9846  001F6C                     u11131:
  9847  001F6C  EFC9  F00F         	goto	l8826
  9848  001F70                     u11130:
  9849  001F70                     
  9850                           ; BSR set to: 0
  9851  001F70  A850               	btfss	_flags^0,4,c
  9852  001F72  EFBD  F00F         	goto	u11141
  9853  001F76  EFBF  F00F         	goto	u11140
  9854  001F7A                     u11141:
  9855  001F7A  EFC9  F00F         	goto	l8826
  9856  001F7E                     u11140:
  9857  001F7E                     
  9858                           ; BSR set to: 0
  9859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9860  001F7E  0E6C               	movlw	low _dbuf
  9861  001F80  2592               	addwf	efgtoa@n& (0+255),w,b
  9862  001F82  6ED9               	movwf	fsr2l,c
  9863  001F84  0E01               	movlw	high _dbuf
  9864  001F86  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9865  001F88  6EDA               	movwf	fsr2h,c
  9866  001F8A  0E2E               	movlw	46
  9867  001F8C  6EDF               	movwf	indf2,c
  9868  001F8E                     
  9869                           ; BSR set to: 0
  9870  001F8E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9871  001F90  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9872  001F92                     l8826:
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9876  001F92  0E6C               	movlw	low _dbuf
  9877  001F94  2592               	addwf	efgtoa@n& (0+255),w,b
  9878  001F96  6ED9               	movwf	fsr2l,c
  9879  001F98  0E01               	movlw	high _dbuf
  9880  001F9A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9881  001F9C  6EDA               	movwf	fsr2h,c
  9882  001F9E  0E00               	movlw	0
  9883  001FA0  6EDF               	movwf	indf2,c
  9884  001FA2                     
  9885                           ; BSR set to: 0
  9886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9887  001FA2  0E65               	movlw	101
  9888  001FA4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9889  001FA6  A4D8               	btfss	status,2,c
  9890  001FA8  EFD8  F00F         	goto	u11151
  9891  001FAC  EFDA  F00F         	goto	u11150
  9892  001FB0                     u11151:
  9893  001FB0  EF87  F00B         	goto	l8638
  9894  001FB4                     u11150:
  9895  001FB4                     
  9896                           ; BSR set to: 0
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9898  001FB4  0E00               	movlw	0
  9899  001FB6  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9900  001FB8  0E4F               	movlw	79
  9901  001FBA  6F8A               	movwf	efgtoa@i& (0+255),b
  9902  001FBC                     
  9903                           ; BSR set to: 0
  9904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9905  001FBC  0E6C               	movlw	low _dbuf
  9906  001FBE  258A               	addwf	efgtoa@i& (0+255),w,b
  9907  001FC0  6ED9               	movwf	fsr2l,c
  9908  001FC2  0E01               	movlw	high _dbuf
  9909  001FC4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9910  001FC6  6EDA               	movwf	fsr2h,c
  9911  001FC8  0E00               	movlw	0
  9912  001FCA  6EDF               	movwf	indf2,c
  9913  001FCC                     
  9914                           ; BSR set to: 0
  9915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9916  001FCC  0E00               	movlw	0
  9917  001FCE  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9918  001FD0  0E00               	movlw	0
  9919  001FD2  6F7A               	movwf	efgtoa@sign& (0+255),b
  9920  001FD4                     
  9921                           ; BSR set to: 0
  9922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9923  001FD4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9924  001FD6  EFF1  F00F         	goto	u11160
  9925  001FDA  EFEF  F00F         	goto	u11161
  9926  001FDE                     u11161:
  9927  001FDE  EFF9  F00F         	goto	l8842
  9928  001FE2                     u11160:
  9929  001FE2                     
  9930                           ; BSR set to: 0
  9931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9932  001FE2  0E00               	movlw	0
  9933  001FE4  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9934  001FE6  0E01               	movlw	1
  9935  001FE8  6F7A               	movwf	efgtoa@sign& (0+255),b
  9936  001FEA                     
  9937                           ; BSR set to: 0
  9938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9939  001FEA  6D90               	negf	efgtoa@e& (0+255),b
  9940  001FEC  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  9941  001FEE  B0D8               	btfsc	status,0,c
  9942  001FF0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  9943  001FF2                     l8842:
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9947  001FF2  0E00               	movlw	0
  9948  001FF4  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  9949  001FF6  0E02               	movlw	2
  9950  001FF8  6F7C               	movwf	efgtoa@p& (0+255),b
  9951                           
  9952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9953  001FFA  EF2A  F010         	goto	l8854
  9954  001FFE                     l8844:
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9958  001FFE  078A               	decf	efgtoa@i& (0+255),f,b
  9959  002000  A0D8               	btfss	status,0,c
  9960  002002  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9961  002004                     
  9962                           ; BSR set to: 0
  9963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9964  002004  0E6C               	movlw	low _dbuf
  9965  002006  258A               	addwf	efgtoa@i& (0+255),w,b
  9966  002008  6ED9               	movwf	fsr2l,c
  9967  00200A  0E01               	movlw	high _dbuf
  9968  00200C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9969  00200E  6EDA               	movwf	fsr2h,c
  9970  002010  C090  F00B         	movff	efgtoa@e,___awmod@dividend
  9971  002014  C091  F00C         	movff	efgtoa@e+1,___awmod@dividend+1
  9972  002018  0E00               	movlw	0
  9973  00201A  6E0E               	movwf	(___awmod@divisor+1)^0,c
  9974  00201C  0E0A               	movlw	10
  9975  00201E  6E0D               	movwf	___awmod@divisor^0,c
  9976  002020  ECB9  F02A         	call	___awmod	;wreg free
  9977  002024  500B               	movf	?___awmod^0,w,c
  9978  002026  0F30               	addlw	48
  9979  002028  6EDF               	movwf	indf2,c
  9980  00202A                     
  9981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9982  00202A  C090  F00B         	movff	efgtoa@e,___awdiv@dividend
  9983  00202E  C091  F00C         	movff	efgtoa@e+1,___awdiv@dividend+1
  9984  002032  0E00               	movlw	0
  9985  002034  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  9986  002036  0E0A               	movlw	10
  9987  002038  6E0D               	movwf	___awdiv@divisor^0,c
  9988  00203A  ECF6  F029         	call	___awdiv	;wreg free
  9989  00203E  C00B  F090         	movff	?___awdiv,efgtoa@e
  9990  002042  C00C  F091         	movff	?___awdiv+1,efgtoa@e+1
  9991  002046                     
  9992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9993  002046  0100               	movlb	0	; () banked
  9994  002048  077C               	decf	efgtoa@p& (0+255),f,b
  9995  00204A  A0D8               	btfss	status,0,c
  9996  00204C  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  9997  00204E                     
  9998                           ; BSR set to: 0
  9999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10000  00204E  077F               	decf	efgtoa@w& (0+255),f,b
 10001  002050  A0D8               	btfss	status,0,c
 10002  002052  0780               	decf	(efgtoa@w+1)& (0+255),f,b
 10003  002054                     l8854:
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10007  002054  5190               	movf	efgtoa@e& (0+255),w,b
 10008  002056  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10009  002058  A4D8               	btfss	status,2,c
 10010  00205A  EF31  F010         	goto	u11171
 10011  00205E  EF33  F010         	goto	u11170
 10012  002062                     u11171:
 10013  002062  EFFF  F00F         	goto	l8844
 10014  002066                     u11170:
 10015  002066                     
 10016                           ; BSR set to: 0
 10017  002066  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10018  002068  EF40  F010         	goto	u11180
 10019  00206C  517D               	movf	(efgtoa@p+1)& (0+255),w,b
 10020  00206E  E106               	bnz	u11181
 10021  002070  057C               	decf	efgtoa@p& (0+255),w,b
 10022  002072  B0D8               	btfsc	status,0,c
 10023  002074  EF3E  F010         	goto	u11181
 10024  002078  EF40  F010         	goto	u11180
 10025  00207C                     u11181:
 10026  00207C  EFFF  F00F         	goto	l8844
 10027  002080                     u11180:
 10028  002080                     
 10029                           ; BSR set to: 0
 10030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10031  002080  078A               	decf	efgtoa@i& (0+255),f,b
 10032  002082  A0D8               	btfss	status,0,c
 10033  002084  078B               	decf	(efgtoa@i+1)& (0+255),f,b
 10034  002086                     
 10035                           ; BSR set to: 0
 10036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10037  002086  517A               	movf	efgtoa@sign& (0+255),w,b
 10038  002088  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10039  00208A  A4D8               	btfss	status,2,c
 10040  00208C  EF4A  F010         	goto	u11191
 10041  002090  EF4C  F010         	goto	u11190
 10042  002094                     u11191:
 10043  002094  EF52  F010         	goto	l8864
 10044  002098                     u11190:
 10045  002098                     
 10046                           ; BSR set to: 0
 10047  002098  0E00               	movlw	0
 10048  00209A  6F6B               	movwf	(_efgtoa$1730+1)& (0+255),b
 10049  00209C  0E2B               	movlw	43
 10050  00209E  6F6A               	movwf	_efgtoa$1730& (0+255),b
 10051  0020A0  EF56  F010         	goto	l8866
 10052  0020A4                     l8864:
 10053                           
 10054                           ; BSR set to: 0
 10055  0020A4  0E00               	movlw	0
 10056  0020A6  6F6B               	movwf	(_efgtoa$1730+1)& (0+255),b
 10057  0020A8  0E2D               	movlw	45
 10058  0020AA  6F6A               	movwf	_efgtoa$1730& (0+255),b
 10059  0020AC                     l8866:
 10060                           
 10061                           ; BSR set to: 0
 10062  0020AC  0E6C               	movlw	low _dbuf
 10063  0020AE  258A               	addwf	efgtoa@i& (0+255),w,b
 10064  0020B0  6ED9               	movwf	fsr2l,c
 10065  0020B2  0E01               	movlw	high _dbuf
 10066  0020B4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10067  0020B6  6EDA               	movwf	fsr2h,c
 10068  0020B8  C06A  FFDF         	movff	_efgtoa$1730,indf2
 10069  0020BC                     
 10070                           ; BSR set to: 0
 10071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10072  0020BC  077F               	decf	efgtoa@w& (0+255),f,b
 10073  0020BE  A0D8               	btfss	status,0,c
 10074  0020C0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
 10075  0020C2                     
 10076                           ; BSR set to: 0
 10077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10078  0020C2  078A               	decf	efgtoa@i& (0+255),f,b
 10079  0020C4  A0D8               	btfss	status,0,c
 10080  0020C6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
 10081  0020C8                     
 10082                           ; BSR set to: 0
 10083  0020C8  0EBF               	movlw	191
 10084  0020CA  6E45               	movwf	??_efgtoa^0,c
 10085  0020CC  0EFF               	movlw	255
 10086  0020CE  6E46               	movwf	(??_efgtoa+1)^0,c
 10087  0020D0  5044               	movf	efgtoa@c^0,w,c
 10088  0020D2  6E47               	movwf	(??_efgtoa+2)^0,c
 10089  0020D4  6A48               	clrf	(??_efgtoa+3)^0,c
 10090  0020D6  5045               	movf	??_efgtoa^0,w,c
 10091  0020D8  2647               	addwf	(??_efgtoa+2)^0,f,c
 10092  0020DA  5046               	movf	(??_efgtoa+1)^0,w,c
 10093  0020DC  2248               	addwfc	(??_efgtoa+3)^0,f,c
 10094  0020DE  5048               	movf	(??_efgtoa+3)^0,w,c
 10095  0020E0  E10A               	bnz	u11200
 10096  0020E2  0E1A               	movlw	26
 10097  0020E4  5C47               	subwf	(??_efgtoa+2)^0,w,c
 10098  0020E6  A0D8               	btfss	status,0,c
 10099  0020E8  EF78  F010         	goto	u11201
 10100  0020EC  EF7B  F010         	goto	u11200
 10101  0020F0                     u11201:
 10102  0020F0  0E01               	movlw	1
 10103  0020F2  EF7C  F010         	goto	u11210
 10104  0020F6                     u11200:
 10105  0020F6  0E00               	movlw	0
 10106  0020F8                     u11210:
 10107  0020F8  6F6E               	movwf	_efgtoa$1732& (0+255),b
 10108  0020FA  6B6F               	clrf	(_efgtoa$1732+1)& (0+255),b
 10109  0020FC                     
 10110                           ; BSR set to: 0
 10111  0020FC  516E               	movf	_efgtoa$1732& (0+255),w,b
 10112  0020FE  116F               	iorwf	(_efgtoa$1732+1)& (0+255),w,b
 10113  002100  A4D8               	btfss	status,2,c
 10114  002102  EF85  F010         	goto	u11221
 10115  002106  EF87  F010         	goto	u11220
 10116  00210A                     u11221:
 10117  00210A  EF8D  F010         	goto	l8880
 10118  00210E                     u11220:
 10119  00210E                     
 10120                           ; BSR set to: 0
 10121  00210E  0E00               	movlw	0
 10122  002110  6F6D               	movwf	(_efgtoa$1731+1)& (0+255),b
 10123  002112  0E65               	movlw	101
 10124  002114  6F6C               	movwf	_efgtoa$1731& (0+255),b
 10125  002116  EF91  F010         	goto	l8882
 10126  00211A                     l8880:
 10127                           
 10128                           ; BSR set to: 0
 10129  00211A  0E00               	movlw	0
 10130  00211C  6F6D               	movwf	(_efgtoa$1731+1)& (0+255),b
 10131  00211E  0E45               	movlw	69
 10132  002120  6F6C               	movwf	_efgtoa$1731& (0+255),b
 10133  002122                     l8882:
 10134                           
 10135                           ; BSR set to: 0
 10136  002122  0E6C               	movlw	low _dbuf
 10137  002124  258A               	addwf	efgtoa@i& (0+255),w,b
 10138  002126  6ED9               	movwf	fsr2l,c
 10139  002128  0E01               	movlw	high _dbuf
 10140  00212A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10141  00212C  6EDA               	movwf	fsr2h,c
 10142  00212E  C06C  FFDF         	movff	_efgtoa$1731,indf2
 10143  002132                     
 10144                           ; BSR set to: 0
 10145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10146  002132  077F               	decf	efgtoa@w& (0+255),f,b
 10147  002134  A0D8               	btfss	status,0,c
 10148  002136  0780               	decf	(efgtoa@w+1)& (0+255),f,b
 10149  002138                     
 10150                           ; BSR set to: 0
 10151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10152  002138  0E6C               	movlw	low _dbuf
 10153  00213A  2592               	addwf	efgtoa@n& (0+255),w,b
 10154  00213C  6E0B               	movwf	strcpy@dest^0,c
 10155  00213E  0E01               	movlw	high _dbuf
 10156  002140  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10157  002142  6E0C               	movwf	(strcpy@dest+1)^0,c
 10158  002144  0E6C               	movlw	low _dbuf
 10159  002146  258A               	addwf	efgtoa@i& (0+255),w,b
 10160  002148  6E0D               	movwf	strcpy@src^0,c
 10161  00214A  0E01               	movlw	high _dbuf
 10162  00214C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10163  00214E  6E0E               	movwf	(strcpy@src+1)^0,c
 10164  002150  EC90  F02C         	call	_strcpy	;wreg free
 10165  002154  EF87  F00B         	goto	l8638
 10166  002158                     l713:
 10167  002158  0012               	return		;funcret
 10168  00215A                     __end_of_efgtoa:
 10169                           	opt callstack 0
 10170                           
 10171 ;; *************** function _tolower *****************
 10172 ;; Defined at:
 10173 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;  c               2   16[COMRAM] int 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  2   16[COMRAM] int 
 10180 ;; Registers used:
 10181 ;;		wreg, status,2, status,0
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10189 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10190 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;Total ram usage:        8 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:    6
 10194 ;; This function calls:
 10195 ;;		_isupper
 10196 ;; This function is called by:
 10197 ;;		_efgtoa
 10198 ;;		_vfpfcnvrt
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text16
 10203  005862                     __ptext16:
 10204                           	opt callstack 0
 10205  005862                     _tolower:
 10206                           	opt callstack 20
 10207  005862  0EBF               	movlw	191
 10208  005864  6E13               	movwf	??_tolower^0,c
 10209  005866  0EFF               	movlw	255
 10210  005868  6E14               	movwf	(??_tolower+1)^0,c
 10211  00586A  C011  F015         	movff	tolower@c,??_tolower+2
 10212  00586E  C012  F016         	movff	tolower@c+1,??_tolower+3
 10213  005872  5013               	movf	??_tolower^0,w,c
 10214  005874  2615               	addwf	(??_tolower+2)^0,f,c
 10215  005876  5014               	movf	(??_tolower+1)^0,w,c
 10216  005878  2216               	addwfc	(??_tolower+3)^0,f,c
 10217  00587A  5016               	movf	(??_tolower+3)^0,w,c
 10218  00587C  E10A               	bnz	u9430
 10219  00587E  0E1A               	movlw	26
 10220  005880  5C15               	subwf	(??_tolower+2)^0,w,c
 10221  005882  A0D8               	btfss	status,0,c
 10222  005884  EF46  F02C         	goto	u9431
 10223  005888  EF49  F02C         	goto	u9430
 10224  00588C                     u9431:
 10225  00588C  0E01               	movlw	1
 10226  00588E  EF4A  F02C         	goto	u9440
 10227  005892                     u9430:
 10228  005892  0E00               	movlw	0
 10229  005894                     u9440:
 10230  005894  6E17               	movwf	_tolower$2489^0,c
 10231  005896  6A18               	clrf	(_tolower$2489+1)^0,c
 10232  005898  5017               	movf	_tolower$2489^0,w,c
 10233  00589A  1018               	iorwf	(_tolower$2489+1)^0,w,c
 10234  00589C  B4D8               	btfsc	status,2,c
 10235  00589E  EF53  F02C         	goto	u9451
 10236  0058A2  EF55  F02C         	goto	u9450
 10237  0058A6                     u9451:
 10238  0058A6  EF5C  F02C         	goto	l1780
 10239  0058AA                     u9450:
 10240  0058AA  0E20               	movlw	32
 10241  0058AC  1011               	iorwf	tolower@c^0,w,c
 10242  0058AE  6E11               	movwf	?_tolower^0,c
 10243  0058B0  5012               	movf	(tolower@c+1)^0,w,c
 10244  0058B2  6E12               	movwf	(?_tolower+1)^0,c
 10245  0058B4  EF60  F02C         	goto	l1785
 10246  0058B8                     l1780:
 10247  0058B8  C011  F011         	movff	tolower@c,?_tolower
 10248  0058BC  C012  F012         	movff	tolower@c+1,?_tolower+1
 10249  0058C0                     l1785:
 10250  0058C0  0012               	return		;funcret
 10251  0058C2                     __end_of_tolower:
 10252                           	opt callstack 0
 10253                           
 10254 ;; *************** function _isupper *****************
 10255 ;; Defined at:
 10256 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;  c               2   10[COMRAM] int 
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  2   10[COMRAM] int 
 10263 ;; Registers used:
 10264 ;;		wreg, status,2, status,0
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10274 ;;Total ram usage:        6 bytes
 10275 ;; Hardware stack levels used:    1
 10276 ;; Hardware stack levels required when called:    5
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_efgtoa
 10281 ;;		_xtoa
 10282 ;;		_vfpfcnvrt
 10283 ;;		_tolower
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text17
 10288  005D56                     __ptext17:
 10289                           	opt callstack 0
 10290  005D56                     _isupper:
 10291                           	opt callstack 20
 10292  005D56  0EBF               	movlw	191
 10293  005D58  6E0D               	movwf	??_isupper^0,c
 10294  005D5A  0EFF               	movlw	255
 10295  005D5C  6E0E               	movwf	(??_isupper+1)^0,c
 10296  005D5E  C00B  F00F         	movff	isupper@c,??_isupper+2
 10297  005D62  C00C  F010         	movff	isupper@c+1,??_isupper+3
 10298  005D66  500D               	movf	??_isupper^0,w,c
 10299  005D68  260F               	addwf	(??_isupper+2)^0,f,c
 10300  005D6A  500E               	movf	(??_isupper+1)^0,w,c
 10301  005D6C  2210               	addwfc	(??_isupper+3)^0,f,c
 10302  005D6E  5010               	movf	(??_isupper+3)^0,w,c
 10303  005D70  E10A               	bnz	u8860
 10304  005D72  0E1A               	movlw	26
 10305  005D74  5C0F               	subwf	(??_isupper+2)^0,w,c
 10306  005D76  A0D8               	btfss	status,0,c
 10307  005D78  EFC0  F02E         	goto	u8861
 10308  005D7C  EFC3  F02E         	goto	u8860
 10309  005D80                     u8861:
 10310  005D80  0E01               	movlw	1
 10311  005D82  EFC4  F02E         	goto	u8870
 10312  005D86                     u8860:
 10313  005D86  0E00               	movlw	0
 10314  005D88                     u8870:
 10315  005D88  6E0B               	movwf	?_isupper^0,c
 10316  005D8A  6A0C               	clrf	(?_isupper+1)^0,c
 10317  005D8C  0012               	return		;funcret
 10318  005D8E                     __end_of_isupper:
 10319                           	opt callstack 0
 10320                           
 10321 ;; *************** function _strcpy *****************
 10322 ;; Defined at:
 10323 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  dest            2   10[COMRAM] PTR unsigned char 
 10326 ;;		 -> dbuf(80), 
 10327 ;;  src             2   12[COMRAM] PTR const unsigned char 
 10328 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
 10329 ;;		 -> dbuf(80), 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  d               2   18[COMRAM] PTR unsigned char 
 10332 ;;		 -> dbuf(80), 
 10333 ;;  s               2   16[COMRAM] PTR const unsigned char 
 10334 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
 10335 ;;		 -> dbuf(80), 
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  2   10[COMRAM] PTR unsigned char 
 10338 ;; Registers used:
 10339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10346 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10348 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10349 ;;Total ram usage:       10 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    5
 10352 ;; This function calls:
 10353 ;;		Nothing
 10354 ;; This function is called by:
 10355 ;;		_efgtoa
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text18
 10360  005920                     __ptext18:
 10361                           	opt callstack 0
 10362  005920                     _strcpy:
 10363                           	opt callstack 20
 10364  005920  C00D  F011         	movff	strcpy@src,strcpy@s
 10365  005924  C00E  F012         	movff	strcpy@src+1,strcpy@s+1
 10366  005928  C00B  F013         	movff	strcpy@dest,strcpy@d
 10367  00592C  C00C  F014         	movff	strcpy@dest+1,strcpy@d+1
 10368  005930                     l7880:
 10369  005930  5011               	movf	strcpy@s^0,w,c
 10370  005932  6E0F               	movwf	??_strcpy^0,c
 10371  005934  5012               	movf	(strcpy@s+1)^0,w,c
 10372  005936  6E10               	movwf	(??_strcpy+1)^0,c
 10373  005938  4A11               	infsnz	strcpy@s^0,f,c
 10374  00593A  2A12               	incf	(strcpy@s+1)^0,f,c
 10375  00593C  C00F  FFF6         	movff	??_strcpy,tblptrl
 10376  005940  C010  FFF7         	movff	??_strcpy+1,tblptrh
 10377  005944  0E00               	movlw	low (__mediumconst shr (0+16))
 10378  005946  6EF8               	movwf	tblptru,c
 10379  005948  C013  FFD9         	movff	strcpy@d,fsr2l
 10380  00594C  C014  FFDA         	movff	strcpy@d+1,fsr2h
 10381  005950  4A13               	infsnz	strcpy@d^0,f,c
 10382  005952  2A14               	incf	(strcpy@d+1)^0,f,c
 10383  005954  0E0E               	movlw	(high __ramtop+-1)
 10384  005956  64F7               	cpfsgt	tblptrh,c
 10385  005958  D003               	bra	u9417
 10386  00595A  0008               	tblrd		*
 10387  00595C  50F5               	movf	tablat,w,c
 10388  00595E  D005               	bra	u9410
 10389  005960                     u9417:
 10390  005960  CFF6 FFE1          	movff	tblptrl,fsr1l
 10391  005964  CFF7 FFE2          	movff	tblptrh,fsr1h
 10392  005968  50E7               	movf	indf1,w,c
 10393  00596A                     u9410:
 10394  00596A  6EDF               	movwf	indf2,c
 10395  00596C  50DF               	movf	indf2,w,c
 10396  00596E  A4D8               	btfss	status,2,c
 10397  005970  EFBC  F02C         	goto	u9421
 10398  005974  EFBE  F02C         	goto	u9420
 10399  005978                     u9421:
 10400  005978  EF98  F02C         	goto	l7880
 10401  00597C                     u9420:
 10402  00597C  0012               	return		;funcret
 10403  00597E                     __end_of_strcpy:
 10404                           	opt callstack 0
 10405                           
 10406 ;; *************** function _floorf *****************
 10407 ;; Defined at:
 10408 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  x               4   35[COMRAM] float 
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;  u               4   51[COMRAM] struct .
 10413 ;;  m               4   45[COMRAM] unsigned long 
 10414 ;;  e               2   49[COMRAM] int 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  4   35[COMRAM] float 
 10417 ;; Registers used:
 10418 ;;		wreg, status,2, status,0
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10425 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10426 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10427 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;Total ram usage:       20 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    5
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		_efgtoa
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text19
 10439  00394C                     __ptext19:
 10440                           	opt callstack 0
 10441  00394C                     _floorf:
 10442                           	opt callstack 20
 10443  00394C  C100  F034         	movff	floorf@F524,floorf@u
 10444  003950  C101  F035         	movff	floorf@F524+1,floorf@u+1
 10445  003954  C102  F036         	movff	floorf@F524+2,floorf@u+2
 10446  003958  C103  F037         	movff	floorf@F524+3,floorf@u+3
 10447  00395C  C024  F034         	movff	floorf@x,floorf@u
 10448  003960  C025  F035         	movff	floorf@x+1,floorf@u+1
 10449  003964  C026  F036         	movff	floorf@x+2,floorf@u+2
 10450  003968  C027  F037         	movff	floorf@x+3,floorf@u+3
 10451  00396C  0E81               	movlw	129
 10452  00396E  6E28               	movwf	??_floorf^0,c
 10453  003970  0EFF               	movlw	255
 10454  003972  6E29               	movwf	(??_floorf+1)^0,c
 10455  003974  C034  F02A         	movff	floorf@u,??_floorf+2
 10456  003978  C035  F02B         	movff	floorf@u+1,??_floorf+3
 10457  00397C  C036  F02C         	movff	floorf@u+2,??_floorf+4
 10458  003980  C037  F02D         	movff	floorf@u+3,??_floorf+5
 10459  003984  0E18               	movlw	24
 10460  003986  EFCA  F01C         	goto	u9460
 10461  00398A                     u9465:
 10462  00398A  90D8               	bcf	status,0,c
 10463  00398C  322D               	rrcf	(??_floorf+5)^0,f,c
 10464  00398E  322C               	rrcf	(??_floorf+4)^0,f,c
 10465  003990  322B               	rrcf	(??_floorf+3)^0,f,c
 10466  003992  322A               	rrcf	(??_floorf+2)^0,f,c
 10467  003994                     u9460:
 10468  003994  2EE8               	decfsz	wreg,f,c
 10469  003996  EFC5  F01C         	goto	u9465
 10470  00399A  502A               	movf	(??_floorf+2)^0,w,c
 10471  00399C  2428               	addwf	??_floorf^0,w,c
 10472  00399E  6E32               	movwf	floorf@e^0,c
 10473  0039A0  0E00               	movlw	0
 10474  0039A2  2029               	addwfc	(??_floorf+1)^0,w,c
 10475  0039A4  6E33               	movwf	(floorf@e+1)^0,c
 10476  0039A6  BE33               	btfsc	(floorf@e+1)^0,7,c
 10477  0039A8  EFDF  F01C         	goto	u9471
 10478  0039AC  5033               	movf	(floorf@e+1)^0,w,c
 10479  0039AE  E109               	bnz	u9470
 10480  0039B0  0E17               	movlw	23
 10481  0039B2  5C32               	subwf	floorf@e^0,w,c
 10482  0039B4  A0D8               	btfss	status,0,c
 10483  0039B6  EFDF  F01C         	goto	u9471
 10484  0039BA  EFE1  F01C         	goto	u9470
 10485  0039BE                     u9471:
 10486  0039BE  EFEB  F01C         	goto	l7898
 10487  0039C2                     u9470:
 10488  0039C2                     l7896:
 10489  0039C2  C024  F024         	movff	floorf@x,?_floorf
 10490  0039C6  C025  F025         	movff	floorf@x+1,?_floorf+1
 10491  0039CA  C026  F026         	movff	floorf@x+2,?_floorf+2
 10492  0039CE  C027  F027         	movff	floorf@x+3,?_floorf+3
 10493  0039D2  EFAE  F01D         	goto	l1691
 10494  0039D6                     l7898:
 10495  0039D6  BE33               	btfsc	(floorf@e+1)^0,7,c
 10496  0039D8  EFF0  F01C         	goto	u9481
 10497  0039DC  EFF2  F01C         	goto	u9480
 10498  0039E0                     u9481:
 10499  0039E0  EF62  F01D         	goto	l7908
 10500  0039E4                     u9480:
 10501  0039E4  C032  F028         	movff	floorf@e,??_floorf
 10502  0039E8  0EFF               	movlw	255
 10503  0039EA  6E29               	movwf	(??_floorf+1)^0,c
 10504  0039EC  0EFF               	movlw	255
 10505  0039EE  6E2A               	movwf	(??_floorf+2)^0,c
 10506  0039F0  0E7F               	movlw	127
 10507  0039F2  6E2B               	movwf	(??_floorf+3)^0,c
 10508  0039F4  0E00               	movlw	0
 10509  0039F6  6E2C               	movwf	(??_floorf+4)^0,c
 10510  0039F8                     u9495:
 10511  0039F8  6628               	tstfsz	??_floorf^0,c
 10512  0039FA  EF01  F01D         	goto	u9496
 10513  0039FE  EF09  F01D         	goto	u9497
 10514  003A02                     u9496:
 10515  003A02  342C               	rlcf	(??_floorf+4)^0,w,c
 10516  003A04  322C               	rrcf	(??_floorf+4)^0,f,c
 10517  003A06  322B               	rrcf	(??_floorf+3)^0,f,c
 10518  003A08  322A               	rrcf	(??_floorf+2)^0,f,c
 10519  003A0A  3229               	rrcf	(??_floorf+1)^0,f,c
 10520  003A0C  2E28               	decfsz	??_floorf^0,f,c
 10521  003A0E  EFFC  F01C         	goto	u9495
 10522  003A12                     u9497:
 10523  003A12  C029  F02E         	movff	??_floorf+1,floorf@m
 10524  003A16  C02A  F02F         	movff	??_floorf+2,floorf@m+1
 10525  003A1A  C02B  F030         	movff	??_floorf+3,floorf@m+2
 10526  003A1E  C02C  F031         	movff	??_floorf+4,floorf@m+3
 10527  003A22  502E               	movf	floorf@m^0,w,c
 10528  003A24  1434               	andwf	floorf@u^0,w,c
 10529  003A26  6E28               	movwf	??_floorf^0,c
 10530  003A28  502F               	movf	(floorf@m+1)^0,w,c
 10531  003A2A  1435               	andwf	(floorf@u+1)^0,w,c
 10532  003A2C  6E29               	movwf	(??_floorf+1)^0,c
 10533  003A2E  5030               	movf	(floorf@m+2)^0,w,c
 10534  003A30  1436               	andwf	(floorf@u+2)^0,w,c
 10535  003A32  6E2A               	movwf	(??_floorf+2)^0,c
 10536  003A34  5031               	movf	(floorf@m+3)^0,w,c
 10537  003A36  1437               	andwf	(floorf@u+3)^0,w,c
 10538  003A38  6E2B               	movwf	(??_floorf+3)^0,c
 10539  003A3A  5028               	movf	??_floorf^0,w,c
 10540  003A3C  1029               	iorwf	(??_floorf+1)^0,w,c
 10541  003A3E  102A               	iorwf	(??_floorf+2)^0,w,c
 10542  003A40  102B               	iorwf	(??_floorf+3)^0,w,c
 10543  003A42  A4D8               	btfss	status,2,c
 10544  003A44  EF26  F01D         	goto	u9501
 10545  003A48  EF28  F01D         	goto	u9500
 10546  003A4C                     u9501:
 10547  003A4C  EF2A  F01D         	goto	l7904
 10548  003A50                     u9500:
 10549  003A50  EFE1  F01C         	goto	l7896
 10550  003A54                     l7904:
 10551  003A54  C034  F028         	movff	floorf@u,??_floorf
 10552  003A58  C035  F029         	movff	floorf@u+1,??_floorf+1
 10553  003A5C  C036  F02A         	movff	floorf@u+2,??_floorf+2
 10554  003A60  C037  F02B         	movff	floorf@u+3,??_floorf+3
 10555  003A64  0E20               	movlw	32
 10556  003A66  EF3A  F01D         	goto	u9510
 10557  003A6A                     u9515:
 10558  003A6A  90D8               	bcf	status,0,c
 10559  003A6C  322B               	rrcf	(??_floorf+3)^0,f,c
 10560  003A6E  322A               	rrcf	(??_floorf+2)^0,f,c
 10561  003A70  3229               	rrcf	(??_floorf+1)^0,f,c
 10562  003A72  3228               	rrcf	??_floorf^0,f,c
 10563  003A74                     u9510:
 10564  003A74  2EE8               	decfsz	wreg,f,c
 10565  003A76  EF35  F01D         	goto	u9515
 10566  003A7A  5028               	movf	??_floorf^0,w,c
 10567  003A7C  1029               	iorwf	(??_floorf+1)^0,w,c
 10568  003A7E  102A               	iorwf	(??_floorf+2)^0,w,c
 10569  003A80  102B               	iorwf	(??_floorf+3)^0,w,c
 10570  003A82  B4D8               	btfsc	status,2,c
 10571  003A84  EF46  F01D         	goto	u9521
 10572  003A88  EF48  F01D         	goto	u9520
 10573  003A8C                     u9521:
 10574  003A8C  EF50  F01D         	goto	l1694
 10575  003A90                     u9520:
 10576  003A90  502E               	movf	floorf@m^0,w,c
 10577  003A92  2634               	addwf	floorf@u^0,f,c
 10578  003A94  502F               	movf	(floorf@m+1)^0,w,c
 10579  003A96  2235               	addwfc	(floorf@u+1)^0,f,c
 10580  003A98  5030               	movf	(floorf@m+2)^0,w,c
 10581  003A9A  2236               	addwfc	(floorf@u+2)^0,f,c
 10582  003A9C  5031               	movf	(floorf@m+3)^0,w,c
 10583  003A9E  2237               	addwfc	(floorf@u+3)^0,f,c
 10584  003AA0                     l1694:
 10585  003AA0  1C2E               	comf	floorf@m^0,w,c
 10586  003AA2  6E28               	movwf	??_floorf^0,c
 10587  003AA4  1C2F               	comf	(floorf@m+1)^0,w,c
 10588  003AA6  6E29               	movwf	(??_floorf+1)^0,c
 10589  003AA8  1C30               	comf	(floorf@m+2)^0,w,c
 10590  003AAA  6E2A               	movwf	(??_floorf+2)^0,c
 10591  003AAC  1C31               	comf	(floorf@m+3)^0,w,c
 10592  003AAE  6E2B               	movwf	(??_floorf+3)^0,c
 10593  003AB0  5028               	movf	??_floorf^0,w,c
 10594  003AB2  1634               	andwf	floorf@u^0,f,c
 10595  003AB4  5029               	movf	(??_floorf+1)^0,w,c
 10596  003AB6  1635               	andwf	(floorf@u+1)^0,f,c
 10597  003AB8  502A               	movf	(??_floorf+2)^0,w,c
 10598  003ABA  1636               	andwf	(floorf@u+2)^0,f,c
 10599  003ABC  502B               	movf	(??_floorf+3)^0,w,c
 10600  003ABE  1637               	andwf	(floorf@u+3)^0,f,c
 10601  003AC0  EFA6  F01D         	goto	l7916
 10602  003AC4                     l7908:
 10603  003AC4  C034  F028         	movff	floorf@u,??_floorf
 10604  003AC8  C035  F029         	movff	floorf@u+1,??_floorf+1
 10605  003ACC  C036  F02A         	movff	floorf@u+2,??_floorf+2
 10606  003AD0  C037  F02B         	movff	floorf@u+3,??_floorf+3
 10607  003AD4  0E20               	movlw	32
 10608  003AD6  EF72  F01D         	goto	u9530
 10609  003ADA                     u9535:
 10610  003ADA  90D8               	bcf	status,0,c
 10611  003ADC  322B               	rrcf	(??_floorf+3)^0,f,c
 10612  003ADE  322A               	rrcf	(??_floorf+2)^0,f,c
 10613  003AE0  3229               	rrcf	(??_floorf+1)^0,f,c
 10614  003AE2  3228               	rrcf	??_floorf^0,f,c
 10615  003AE4                     u9530:
 10616  003AE4  2EE8               	decfsz	wreg,f,c
 10617  003AE6  EF6D  F01D         	goto	u9535
 10618  003AEA  5028               	movf	??_floorf^0,w,c
 10619  003AEC  1029               	iorwf	(??_floorf+1)^0,w,c
 10620  003AEE  102A               	iorwf	(??_floorf+2)^0,w,c
 10621  003AF0  102B               	iorwf	(??_floorf+3)^0,w,c
 10622  003AF2  A4D8               	btfss	status,2,c
 10623  003AF4  EF7E  F01D         	goto	u9541
 10624  003AF8  EF80  F01D         	goto	u9540
 10625  003AFC                     u9541:
 10626  003AFC  EF8A  F01D         	goto	l7912
 10627  003B00                     u9540:
 10628  003B00  0E00               	movlw	0
 10629  003B02  6E34               	movwf	floorf@u^0,c
 10630  003B04  0E00               	movlw	0
 10631  003B06  6E35               	movwf	(floorf@u+1)^0,c
 10632  003B08  0E00               	movlw	0
 10633  003B0A  6E36               	movwf	(floorf@u+2)^0,c
 10634  003B0C  0E00               	movlw	0
 10635  003B0E  6E37               	movwf	(floorf@u+3)^0,c
 10636  003B10  EFA6  F01D         	goto	l7916
 10637  003B14                     l7912:
 10638  003B14  90D8               	bcf	status,0,c
 10639  003B16  3434               	rlcf	floorf@u^0,w,c
 10640  003B18  6E28               	movwf	??_floorf^0,c
 10641  003B1A  3435               	rlcf	(floorf@u+1)^0,w,c
 10642  003B1C  6E29               	movwf	(??_floorf+1)^0,c
 10643  003B1E  3436               	rlcf	(floorf@u+2)^0,w,c
 10644  003B20  6E2A               	movwf	(??_floorf+2)^0,c
 10645  003B22  3437               	rlcf	(floorf@u+3)^0,w,c
 10646  003B24  6E2B               	movwf	(??_floorf+3)^0,c
 10647  003B26  5028               	movf	??_floorf^0,w,c
 10648  003B28  1029               	iorwf	(??_floorf+1)^0,w,c
 10649  003B2A  102A               	iorwf	(??_floorf+2)^0,w,c
 10650  003B2C  102B               	iorwf	(??_floorf+3)^0,w,c
 10651  003B2E  B4D8               	btfsc	status,2,c
 10652  003B30  EF9C  F01D         	goto	u9551
 10653  003B34  EF9E  F01D         	goto	u9550
 10654  003B38                     u9551:
 10655  003B38  EFA6  F01D         	goto	l7916
 10656  003B3C                     u9550:
 10657  003B3C  0E00               	movlw	0
 10658  003B3E  6E34               	movwf	floorf@u^0,c
 10659  003B40  0E00               	movlw	0
 10660  003B42  6E35               	movwf	(floorf@u+1)^0,c
 10661  003B44  0E80               	movlw	128
 10662  003B46  6E36               	movwf	(floorf@u+2)^0,c
 10663  003B48  0EBF               	movlw	191
 10664  003B4A  6E37               	movwf	(floorf@u+3)^0,c
 10665  003B4C                     l7916:
 10666  003B4C  C034  F024         	movff	floorf@u,?_floorf
 10667  003B50  C035  F025         	movff	floorf@u+1,?_floorf+1
 10668  003B54  C036  F026         	movff	floorf@u+2,?_floorf+2
 10669  003B58  C037  F027         	movff	floorf@u+3,?_floorf+3
 10670  003B5C                     l1691:
 10671  003B5C  0012               	return		;funcret
 10672  003B5E                     __end_of_floorf:
 10673                           	opt callstack 0
 10674                           
 10675 ;; *************** function ___fpclassifyf *****************
 10676 ;; Defined at:
 10677 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  x               4   10[COMRAM] float 
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;  u               4   20[COMRAM] struct .
 10682 ;;  e               2   18[COMRAM] int 
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  2   10[COMRAM] int 
 10685 ;; Registers used:
 10686 ;;		wreg, status,2, status,0
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10693 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10695 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10696 ;;Total ram usage:       14 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    5
 10699 ;; This function calls:
 10700 ;;		Nothing
 10701 ;; This function is called by:
 10702 ;;		_efgtoa
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text20
 10707  005064                     __ptext20:
 10708                           	opt callstack 0
 10709  005064                     ___fpclassifyf:
 10710                           	opt callstack 20
 10711  005064  C104  F015         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10712  005068  C105  F016         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10713  00506C  C106  F017         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10714  005070  C107  F018         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10715  005074  C00B  F015         	movff	___fpclassifyf@x,___fpclassifyf@u
 10716  005078  C00C  F016         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10717  00507C  C00D  F017         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10718  005080  C00E  F018         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10719  005084  C015  F00F         	movff	___fpclassifyf@u,??___fpclassifyf
 10720  005088  C016  F010         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10721  00508C  C017  F011         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10722  005090  C018  F012         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10723  005094  0E18               	movlw	24
 10724  005096  EF52  F028         	goto	u9340
 10725  00509A                     u9345:
 10726  00509A  90D8               	bcf	status,0,c
 10727  00509C  3212               	rrcf	(??___fpclassifyf+3)^0,f,c
 10728  00509E  3211               	rrcf	(??___fpclassifyf+2)^0,f,c
 10729  0050A0  3210               	rrcf	(??___fpclassifyf+1)^0,f,c
 10730  0050A2  320F               	rrcf	??___fpclassifyf^0,f,c
 10731  0050A4                     u9340:
 10732  0050A4  2EE8               	decfsz	wreg,f,c
 10733  0050A6  EF4D  F028         	goto	u9345
 10734  0050AA  500F               	movf	??___fpclassifyf^0,w,c
 10735  0050AC  6E13               	movwf	___fpclassifyf@e^0,c
 10736  0050AE  6A14               	clrf	(___fpclassifyf@e+1)^0,c
 10737  0050B0  5013               	movf	___fpclassifyf@e^0,w,c
 10738  0050B2  1014               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10739  0050B4  A4D8               	btfss	status,2,c
 10740  0050B6  EF5F  F028         	goto	u9351
 10741  0050BA  EF61  F028         	goto	u9350
 10742  0050BE                     u9351:
 10743  0050BE  EF81  F028         	goto	l7868
 10744  0050C2                     u9350:
 10745  0050C2  90D8               	bcf	status,0,c
 10746  0050C4  3415               	rlcf	___fpclassifyf@u^0,w,c
 10747  0050C6  6E0F               	movwf	??___fpclassifyf^0,c
 10748  0050C8  3416               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10749  0050CA  6E10               	movwf	(??___fpclassifyf+1)^0,c
 10750  0050CC  3417               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10751  0050CE  6E11               	movwf	(??___fpclassifyf+2)^0,c
 10752  0050D0  3418               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10753  0050D2  6E12               	movwf	(??___fpclassifyf+3)^0,c
 10754  0050D4  500F               	movf	??___fpclassifyf^0,w,c
 10755  0050D6  1010               	iorwf	(??___fpclassifyf+1)^0,w,c
 10756  0050D8  1011               	iorwf	(??___fpclassifyf+2)^0,w,c
 10757  0050DA  1012               	iorwf	(??___fpclassifyf+3)^0,w,c
 10758  0050DC  A4D8               	btfss	status,2,c
 10759  0050DE  EF73  F028         	goto	u9361
 10760  0050E2  EF75  F028         	goto	u9360
 10761  0050E6                     u9361:
 10762  0050E6  EF7B  F028         	goto	l7864
 10763  0050EA                     u9360:
 10764  0050EA  0E00               	movlw	0
 10765  0050EC  6E0C               	movwf	(?___fpclassifyf+1)^0,c
 10766  0050EE  0E02               	movlw	2
 10767  0050F0  6E0B               	movwf	?___fpclassifyf^0,c
 10768  0050F2  EFB0  F028         	goto	l1646
 10769  0050F6                     l7864:
 10770  0050F6  0E00               	movlw	0
 10771  0050F8  6E0C               	movwf	(?___fpclassifyf+1)^0,c
 10772  0050FA  0E03               	movlw	3
 10773  0050FC  6E0B               	movwf	?___fpclassifyf^0,c
 10774  0050FE  EFB0  F028         	goto	l1646
 10775  005102                     l7868:
 10776  005102  2813               	incf	___fpclassifyf@e^0,w,c
 10777  005104  1014               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10778  005106  A4D8               	btfss	status,2,c
 10779  005108  EF88  F028         	goto	u9371
 10780  00510C  EF8A  F028         	goto	u9370
 10781  005110                     u9371:
 10782  005110  EFAC  F028         	goto	l7874
 10783  005114                     u9370:
 10784  005114  C015  F00F         	movff	___fpclassifyf@u,??___fpclassifyf
 10785  005118  C016  F010         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10786  00511C  C017  F011         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10787  005120  C018  F012         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10788  005124  0E09               	movlw	9
 10789  005126                     u9385:
 10790  005126  90D8               	bcf	status,0,c
 10791  005128  360F               	rlcf	??___fpclassifyf^0,f,c
 10792  00512A  3610               	rlcf	(??___fpclassifyf+1)^0,f,c
 10793  00512C  3611               	rlcf	(??___fpclassifyf+2)^0,f,c
 10794  00512E  3612               	rlcf	(??___fpclassifyf+3)^0,f,c
 10795  005130  2EE8               	decfsz	wreg,f,c
 10796  005132  EF93  F028         	goto	u9385
 10797  005136  500F               	movf	??___fpclassifyf^0,w,c
 10798  005138  1010               	iorwf	(??___fpclassifyf+1)^0,w,c
 10799  00513A  1011               	iorwf	(??___fpclassifyf+2)^0,w,c
 10800  00513C  1012               	iorwf	(??___fpclassifyf+3)^0,w,c
 10801  00513E  B4D8               	btfsc	status,2,c
 10802  005140  EFA4  F028         	goto	u9391
 10803  005144  EFA7  F028         	goto	u9390
 10804  005148                     u9391:
 10805  005148  0E01               	movlw	1
 10806  00514A  EFA8  F028         	goto	u9400
 10807  00514E                     u9390:
 10808  00514E  0E00               	movlw	0
 10809  005150                     u9400:
 10810  005150  6E0B               	movwf	?___fpclassifyf^0,c
 10811  005152  6A0C               	clrf	(?___fpclassifyf+1)^0,c
 10812  005154  EFB0  F028         	goto	l1646
 10813  005158                     l7874:
 10814  005158  0E00               	movlw	0
 10815  00515A  6E0C               	movwf	(?___fpclassifyf+1)^0,c
 10816  00515C  0E04               	movlw	4
 10817  00515E  6E0B               	movwf	?___fpclassifyf^0,c
 10818  005160                     l1646:
 10819  005160  0012               	return		;funcret
 10820  005162                     __end_of___fpclassifyf:
 10821                           	opt callstack 0
 10822                           
 10823 ;; *************** function ___fltol *****************
 10824 ;; Defined at:
 10825 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  f1              4   10[COMRAM] int 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;  exp1            1   19[COMRAM] unsigned char 
 10830 ;;  sign1           1   18[COMRAM] unsigned char 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  4   10[COMRAM] long 
 10833 ;; Registers used:
 10834 ;;		wreg, status,2, status,0
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;Total ram usage:       10 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    5
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_efgtoa
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text21
 10855  004E5A                     __ptext21:
 10856                           	opt callstack 0
 10857  004E5A                     ___fltol:
 10858                           	opt callstack 20
 10859  004E5A  340D               	rlcf	(___fltol@f1+2)^0,w,c
 10860  004E5C  340E               	rlcf	(___fltol@f1+3)^0,w,c
 10861  004E5E  6E14               	movwf	___fltol@exp1^0,c
 10862  004E60  5014               	movf	___fltol@exp1^0,w,c
 10863  004E62  A4D8               	btfss	status,2,c
 10864  004E64  EF36  F027         	goto	u10391
 10865  004E68  EF38  F027         	goto	u10390
 10866  004E6C                     u10391:
 10867  004E6C  EF42  F027         	goto	l8430
 10868  004E70                     u10390:
 10869  004E70                     l8426:
 10870  004E70  0E00               	movlw	0
 10871  004E72  6E0B               	movwf	?___fltol^0,c
 10872  004E74  0E00               	movlw	0
 10873  004E76  6E0C               	movwf	(?___fltol+1)^0,c
 10874  004E78  0E00               	movlw	0
 10875  004E7A  6E0D               	movwf	(?___fltol+2)^0,c
 10876  004E7C  0E00               	movlw	0
 10877  004E7E  6E0E               	movwf	(?___fltol+3)^0,c
 10878  004E80  EFAF  F027         	goto	l1262
 10879  004E84                     l8430:
 10880  004E84  C00B  F00F         	movff	___fltol@f1,??___fltol
 10881  004E88  C00C  F010         	movff	___fltol@f1+1,??___fltol+1
 10882  004E8C  C00D  F011         	movff	___fltol@f1+2,??___fltol+2
 10883  004E90  C00E  F012         	movff	___fltol@f1+3,??___fltol+3
 10884  004E94  0E20               	movlw	32
 10885  004E96  EF52  F027         	goto	u10400
 10886  004E9A                     u10405:
 10887  004E9A  90D8               	bcf	status,0,c
 10888  004E9C  3212               	rrcf	(??___fltol+3)^0,f,c
 10889  004E9E  3211               	rrcf	(??___fltol+2)^0,f,c
 10890  004EA0  3210               	rrcf	(??___fltol+1)^0,f,c
 10891  004EA2  320F               	rrcf	??___fltol^0,f,c
 10892  004EA4                     u10400:
 10893  004EA4  2EE8               	decfsz	wreg,f,c
 10894  004EA6  EF4D  F027         	goto	u10405
 10895  004EAA  500F               	movf	??___fltol^0,w,c
 10896  004EAC  6E13               	movwf	___fltol@sign1^0,c
 10897  004EAE  8E0D               	bsf	(___fltol@f1+2)^0,7,c
 10898  004EB0  0EFF               	movlw	255
 10899  004EB2  160B               	andwf	___fltol@f1^0,f,c
 10900  004EB4  0EFF               	movlw	255
 10901  004EB6  160C               	andwf	(___fltol@f1+1)^0,f,c
 10902  004EB8  0EFF               	movlw	255
 10903  004EBA  160D               	andwf	(___fltol@f1+2)^0,f,c
 10904  004EBC  0E00               	movlw	0
 10905  004EBE  160E               	andwf	(___fltol@f1+3)^0,f,c
 10906  004EC0  0E96               	movlw	150
 10907  004EC2  5E14               	subwf	___fltol@exp1^0,f,c
 10908  004EC4  BE14               	btfsc	___fltol@exp1^0,7,c
 10909  004EC6  EF69  F027         	goto	u10410
 10910  004ECA  EF67  F027         	goto	u10411
 10911  004ECE                     u10411:
 10912  004ECE  EF7F  F027         	goto	l8450
 10913  004ED2                     u10410:
 10914  004ED2  5014               	movf	___fltol@exp1^0,w,c
 10915  004ED4  0A80               	xorlw	128
 10916  004ED6  0F97               	addlw	151
 10917  004ED8  B0D8               	btfsc	status,0,c
 10918  004EDA  EF71  F027         	goto	u10421
 10919  004EDE  EF73  F027         	goto	u10420
 10920  004EE2                     u10421:
 10921  004EE2  EF75  F027         	goto	l8446
 10922  004EE6                     u10420:
 10923  004EE6  EF38  F027         	goto	l8426
 10924  004EEA                     l8446:
 10925  004EEA  90D8               	bcf	status,0,c
 10926  004EEC  320E               	rrcf	(___fltol@f1+3)^0,f,c
 10927  004EEE  320D               	rrcf	(___fltol@f1+2)^0,f,c
 10928  004EF0  320C               	rrcf	(___fltol@f1+1)^0,f,c
 10929  004EF2  320B               	rrcf	___fltol@f1^0,f,c
 10930  004EF4  3E14               	incfsz	___fltol@exp1^0,f,c
 10931  004EF6  EF75  F027         	goto	l8446
 10932  004EFA  EF97  F027         	goto	l8460
 10933  004EFE                     l8450:
 10934  004EFE  0E1F               	movlw	31
 10935  004F00  6414               	cpfsgt	___fltol@exp1^0,c
 10936  004F02  EF85  F027         	goto	u10431
 10937  004F06  EF87  F027         	goto	u10430
 10938  004F0A                     u10431:
 10939  004F0A  EF8F  F027         	goto	l8458
 10940  004F0E                     u10430:
 10941  004F0E  EF38  F027         	goto	l8426
 10942  004F12                     l8456:
 10943  004F12  90D8               	bcf	status,0,c
 10944  004F14  360B               	rlcf	___fltol@f1^0,f,c
 10945  004F16  360C               	rlcf	(___fltol@f1+1)^0,f,c
 10946  004F18  360D               	rlcf	(___fltol@f1+2)^0,f,c
 10947  004F1A  360E               	rlcf	(___fltol@f1+3)^0,f,c
 10948  004F1C  0614               	decf	___fltol@exp1^0,f,c
 10949  004F1E                     l8458:
 10950  004F1E  5014               	movf	___fltol@exp1^0,w,c
 10951  004F20  A4D8               	btfss	status,2,c
 10952  004F22  EF95  F027         	goto	u10441
 10953  004F26  EF97  F027         	goto	u10440
 10954  004F2A                     u10441:
 10955  004F2A  EF89  F027         	goto	l8456
 10956  004F2E                     u10440:
 10957  004F2E                     l8460:
 10958  004F2E  5013               	movf	___fltol@sign1^0,w,c
 10959  004F30  B4D8               	btfsc	status,2,c
 10960  004F32  EF9D  F027         	goto	u10451
 10961  004F36  EF9F  F027         	goto	u10450
 10962  004F3A                     u10451:
 10963  004F3A  EFA7  F027         	goto	l8464
 10964  004F3E                     u10450:
 10965  004F3E  1E0E               	comf	(___fltol@f1+3)^0,f,c
 10966  004F40  1E0D               	comf	(___fltol@f1+2)^0,f,c
 10967  004F42  1E0C               	comf	(___fltol@f1+1)^0,f,c
 10968  004F44  6C0B               	negf	___fltol@f1^0,c
 10969  004F46  0E00               	movlw	0
 10970  004F48  220C               	addwfc	(___fltol@f1+1)^0,f,c
 10971  004F4A  220D               	addwfc	(___fltol@f1+2)^0,f,c
 10972  004F4C  220E               	addwfc	(___fltol@f1+3)^0,f,c
 10973  004F4E                     l8464:
 10974  004F4E  C00B  F00B         	movff	___fltol@f1,?___fltol
 10975  004F52  C00C  F00C         	movff	___fltol@f1+1,?___fltol+1
 10976  004F56  C00D  F00D         	movff	___fltol@f1+2,?___fltol+2
 10977  004F5A  C00E  F00E         	movff	___fltol@f1+3,?___fltol+3
 10978  004F5E                     l1262:
 10979  004F5E  0012               	return		;funcret
 10980  004F60                     __end_of___fltol:
 10981                           	opt callstack 0
 10982                           
 10983 ;; *************** function ___flsub *****************
 10984 ;; Defined at:
 10985 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  b               4   49[COMRAM] long 
 10988 ;;  a               4   53[COMRAM] long 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  4   49[COMRAM] long 
 10993 ;; Registers used:
 10994 ;;		wreg, status,2, status,0, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11000 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11003 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;Total ram usage:        8 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    6
 11007 ;; This function calls:
 11008 ;;		___fladd
 11009 ;; This function is called by:
 11010 ;;		_efgtoa
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text22
 11015  005B14                     __ptext22:
 11016                           	opt callstack 0
 11017  005B14                     ___flsub:
 11018                           	opt callstack 19
 11019  005B14  0E00               	movlw	0
 11020  005B16  1A36               	xorwf	___flsub@a^0,f,c
 11021  005B18  0E00               	movlw	0
 11022  005B1A  1A37               	xorwf	(___flsub@a+1)^0,f,c
 11023  005B1C  0E00               	movlw	0
 11024  005B1E  1A38               	xorwf	(___flsub@a+2)^0,f,c
 11025  005B20  0E80               	movlw	128
 11026  005B22  1A39               	xorwf	(___flsub@a+3)^0,f,c
 11027  005B24  C032  F00B         	movff	___flsub@b,___fladd@b
 11028  005B28  C033  F00C         	movff	___flsub@b+1,___fladd@b+1
 11029  005B2C  C034  F00D         	movff	___flsub@b+2,___fladd@b+2
 11030  005B30  C035  F00E         	movff	___flsub@b+3,___fladd@b+3
 11031  005B34  C036  F00F         	movff	___flsub@a,___fladd@a
 11032  005B38  C037  F010         	movff	___flsub@a+1,___fladd@a+1
 11033  005B3C  C038  F011         	movff	___flsub@a+2,___fladd@a+2
 11034  005B40  C039  F012         	movff	___flsub@a+3,___fladd@a+3
 11035  005B44  ECAD  F010         	call	___fladd	;wreg free
 11036  005B48  C00B  F032         	movff	?___fladd,?___flsub
 11037  005B4C  C00C  F033         	movff	?___fladd+1,?___flsub+1
 11038  005B50  C00D  F034         	movff	?___fladd+2,?___flsub+2
 11039  005B54  C00E  F035         	movff	?___fladd+3,?___flsub+3
 11040  005B58  0012               	return		;funcret
 11041  005B5A                     __end_of___flsub:
 11042                           	opt callstack 0
 11043                           
 11044 ;; *************** function ___fladd *****************
 11045 ;; Defined at:
 11046 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  b               4   10[COMRAM] long 
 11049 ;;  a               4   14[COMRAM] long 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  grs             1   25[COMRAM] unsigned char 
 11052 ;;  bexp            1   24[COMRAM] unsigned char 
 11053 ;;  aexp            1   23[COMRAM] unsigned char 
 11054 ;;  signs           1   22[COMRAM] unsigned char 
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  4   10[COMRAM] unsigned char 
 11057 ;; Registers used:
 11058 ;;		wreg, status,2, status,0
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11064 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11066 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11067 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;Total ram usage:       16 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:    5
 11071 ;; This function calls:
 11072 ;;		Nothing
 11073 ;; This function is called by:
 11074 ;;		_efgtoa
 11075 ;;		___flsub
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text23
 11080  00215A                     __ptext23:
 11081                           	opt callstack 0
 11082  00215A                     ___fladd:
 11083                           	opt callstack 19
 11084  00215A  500E               	movf	(___fladd@b+3)^0,w,c
 11085  00215C  0B80               	andlw	128
 11086  00215E  6E17               	movwf	___fladd@signs^0,c
 11087  002160  500E               	movf	(___fladd@b+3)^0,w,c
 11088  002162  240E               	addwf	(___fladd@b+3)^0,w,c
 11089  002164  6E19               	movwf	___fladd@bexp^0,c
 11090  002166  AE0D               	btfss	(___fladd@b+2)^0,7,c
 11091  002168  EFB8  F010         	goto	u8881
 11092  00216C  EFBA  F010         	goto	u8880
 11093  002170                     u8881:
 11094  002170  EFBB  F010         	goto	l7630
 11095  002174                     u8880:
 11096  002174  8019               	bsf	___fladd@bexp^0,0,c
 11097  002176                     l7630:
 11098  002176  5019               	movf	___fladd@bexp^0,w,c
 11099  002178  B4D8               	btfsc	status,2,c
 11100  00217A  EFC1  F010         	goto	u8891
 11101  00217E  EFC3  F010         	goto	u8890
 11102  002182                     u8891:
 11103  002182  EFD8  F010         	goto	l7640
 11104  002186                     u8890:
 11105  002186  2819               	incf	___fladd@bexp^0,w,c
 11106  002188  A4D8               	btfss	status,2,c
 11107  00218A  EFC9  F010         	goto	u8901
 11108  00218E  EFCB  F010         	goto	u8900
 11109  002192                     u8901:
 11110  002192  EFD3  F010         	goto	l7636
 11111  002196                     u8900:
 11112  002196  0E00               	movlw	0
 11113  002198  6E0B               	movwf	___fladd@b^0,c
 11114  00219A  0E00               	movlw	0
 11115  00219C  6E0C               	movwf	(___fladd@b+1)^0,c
 11116  00219E  0E00               	movlw	0
 11117  0021A0  6E0D               	movwf	(___fladd@b+2)^0,c
 11118  0021A2  0E00               	movlw	0
 11119  0021A4  6E0E               	movwf	(___fladd@b+3)^0,c
 11120  0021A6                     l7636:
 11121  0021A6  8E0D               	bsf	(___fladd@b+2)^0,7,c
 11122  0021A8  0E00               	movlw	0
 11123  0021AA  6E0E               	movwf	(___fladd@b+3)^0,c
 11124  0021AC  EFE0  F010         	goto	l7642
 11125  0021B0                     l7640:
 11126  0021B0  0E00               	movlw	0
 11127  0021B2  6E0B               	movwf	___fladd@b^0,c
 11128  0021B4  0E00               	movlw	0
 11129  0021B6  6E0C               	movwf	(___fladd@b+1)^0,c
 11130  0021B8  0E00               	movlw	0
 11131  0021BA  6E0D               	movwf	(___fladd@b+2)^0,c
 11132  0021BC  0E00               	movlw	0
 11133  0021BE  6E0E               	movwf	(___fladd@b+3)^0,c
 11134  0021C0                     l7642:
 11135  0021C0  5012               	movf	(___fladd@a+3)^0,w,c
 11136  0021C2  0B80               	andlw	128
 11137  0021C4  6E18               	movwf	___fladd@aexp^0,c
 11138  0021C6  5017               	movf	___fladd@signs^0,w,c
 11139  0021C8  1818               	xorwf	___fladd@aexp^0,w,c
 11140  0021CA  B4D8               	btfsc	status,2,c
 11141  0021CC  EFEA  F010         	goto	u8911
 11142  0021D0  EFEC  F010         	goto	u8910
 11143  0021D4                     u8911:
 11144  0021D4  EFED  F010         	goto	l7648
 11145  0021D8                     u8910:
 11146  0021D8  8C17               	bsf	___fladd@signs^0,6,c
 11147  0021DA                     l7648:
 11148  0021DA  5012               	movf	(___fladd@a+3)^0,w,c
 11149  0021DC  2412               	addwf	(___fladd@a+3)^0,w,c
 11150  0021DE  6E18               	movwf	___fladd@aexp^0,c
 11151  0021E0  AE11               	btfss	(___fladd@a+2)^0,7,c
 11152  0021E2  EFF5  F010         	goto	u8921
 11153  0021E6  EFF7  F010         	goto	u8920
 11154  0021EA                     u8921:
 11155  0021EA  EFF8  F010         	goto	l7654
 11156  0021EE                     u8920:
 11157  0021EE  8018               	bsf	___fladd@aexp^0,0,c
 11158  0021F0                     l7654:
 11159  0021F0  5018               	movf	___fladd@aexp^0,w,c
 11160  0021F2  B4D8               	btfsc	status,2,c
 11161  0021F4  EFFE  F010         	goto	u8931
 11162  0021F8  EF00  F011         	goto	u8930
 11163  0021FC                     u8931:
 11164  0021FC  EF15  F011         	goto	l7664
 11165  002200                     u8930:
 11166  002200  2818               	incf	___fladd@aexp^0,w,c
 11167  002202  A4D8               	btfss	status,2,c
 11168  002204  EF06  F011         	goto	u8941
 11169  002208  EF08  F011         	goto	u8940
 11170  00220C                     u8941:
 11171  00220C  EF10  F011         	goto	l7660
 11172  002210                     u8940:
 11173  002210  0E00               	movlw	0
 11174  002212  6E0F               	movwf	___fladd@a^0,c
 11175  002214  0E00               	movlw	0
 11176  002216  6E10               	movwf	(___fladd@a+1)^0,c
 11177  002218  0E00               	movlw	0
 11178  00221A  6E11               	movwf	(___fladd@a+2)^0,c
 11179  00221C  0E00               	movlw	0
 11180  00221E  6E12               	movwf	(___fladd@a+3)^0,c
 11181  002220                     l7660:
 11182  002220  8E11               	bsf	(___fladd@a+2)^0,7,c
 11183  002222  0E00               	movlw	0
 11184  002224  6E12               	movwf	(___fladd@a+3)^0,c
 11185  002226  EF1D  F011         	goto	l7666
 11186  00222A                     l7664:
 11187  00222A  0E00               	movlw	0
 11188  00222C  6E0F               	movwf	___fladd@a^0,c
 11189  00222E  0E00               	movlw	0
 11190  002230  6E10               	movwf	(___fladd@a+1)^0,c
 11191  002232  0E00               	movlw	0
 11192  002234  6E11               	movwf	(___fladd@a+2)^0,c
 11193  002236  0E00               	movlw	0
 11194  002238  6E12               	movwf	(___fladd@a+3)^0,c
 11195  00223A                     l7666:
 11196  00223A  5019               	movf	___fladd@bexp^0,w,c
 11197  00223C  5C18               	subwf	___fladd@aexp^0,w,c
 11198  00223E  B0D8               	btfsc	status,0,c
 11199  002240  EF24  F011         	goto	u8951
 11200  002244  EF26  F011         	goto	u8950
 11201  002248                     u8951:
 11202  002248  EF4D  F011         	goto	l7702
 11203  00224C                     u8950:
 11204  00224C  AC17               	btfss	___fladd@signs^0,6,c
 11205  00224E  EF2B  F011         	goto	u8961
 11206  002252  EF2D  F011         	goto	u8960
 11207  002256                     u8961:
 11208  002256  EF2F  F011         	goto	l7672
 11209  00225A                     u8960:
 11210  00225A  0E80               	movlw	128
 11211  00225C  1A17               	xorwf	___fladd@signs^0,f,c
 11212  00225E                     l7672:
 11213  00225E  C019  F01A         	movff	___fladd@bexp,___fladd@grs
 11214  002262  C018  F019         	movff	___fladd@aexp,___fladd@bexp
 11215  002266  C01A  F018         	movff	___fladd@grs,___fladd@aexp
 11216  00226A  C00B  F01A         	movff	___fladd@b,___fladd@grs
 11217  00226E  C00F  F00B         	movff	___fladd@a,___fladd@b
 11218  002272  C01A  F00F         	movff	___fladd@grs,___fladd@a
 11219  002276  C00C  F01A         	movff	___fladd@b+1,___fladd@grs
 11220  00227A  C010  F00C         	movff	___fladd@a+1,___fladd@b+1
 11221  00227E  C01A  F010         	movff	___fladd@grs,___fladd@a+1
 11222  002282  C00D  F01A         	movff	___fladd@b+2,___fladd@grs
 11223  002286  C011  F00D         	movff	___fladd@a+2,___fladd@b+2
 11224  00228A  C01A  F011         	movff	___fladd@grs,___fladd@a+2
 11225  00228E  C00E  F01A         	movff	___fladd@b+3,___fladd@grs
 11226  002292  C012  F00E         	movff	___fladd@a+3,___fladd@b+3
 11227  002296  C01A  F012         	movff	___fladd@grs,___fladd@a+3
 11228  00229A                     l7702:
 11229  00229A  0E00               	movlw	0
 11230  00229C  6E1A               	movwf	___fladd@grs^0,c
 11231  00229E  5019               	movf	___fladd@bexp^0,w,c
 11232  0022A0  C018  F013         	movff	___fladd@aexp,??___fladd
 11233  0022A4  6A14               	clrf	(??___fladd+1)^0,c
 11234  0022A6  5E13               	subwf	??___fladd^0,f,c
 11235  0022A8  0E00               	movlw	0
 11236  0022AA  5A14               	subwfb	(??___fladd+1)^0,f,c
 11237  0022AC  BE14               	btfsc	(??___fladd+1)^0,7,c
 11238  0022AE  EF62  F011         	goto	u8971
 11239  0022B2  5014               	movf	(??___fladd+1)^0,w,c
 11240  0022B4  E109               	bnz	u8970
 11241  0022B6  0E1A               	movlw	26
 11242  0022B8  5C13               	subwf	??___fladd^0,w,c
 11243  0022BA  A0D8               	btfss	status,0,c
 11244  0022BC  EF62  F011         	goto	u8971
 11245  0022C0  EF64  F011         	goto	u8970
 11246  0022C4                     u8971:
 11247  0022C4  EF9B  F011         	goto	l1494
 11248  0022C8                     u8970:
 11249  0022C8  500B               	movf	___fladd@b^0,w,c
 11250  0022CA  100C               	iorwf	(___fladd@b+1)^0,w,c
 11251  0022CC  100D               	iorwf	(___fladd@b+2)^0,w,c
 11252  0022CE  100E               	iorwf	(___fladd@b+3)^0,w,c
 11253  0022D0  A4D8               	btfss	status,2,c
 11254  0022D2  EF6D  F011         	goto	u8981
 11255  0022D6  EF70  F011         	goto	u8980
 11256  0022DA                     u8981:
 11257  0022DA  0E01               	movlw	1
 11258  0022DC  EF71  F011         	goto	u8990
 11259  0022E0                     u8980:
 11260  0022E0  0E00               	movlw	0
 11261  0022E2                     u8990:
 11262  0022E2  6E1A               	movwf	___fladd@grs^0,c
 11263  0022E4  0E00               	movlw	0
 11264  0022E6  6E0B               	movwf	___fladd@b^0,c
 11265  0022E8  0E00               	movlw	0
 11266  0022EA  6E0C               	movwf	(___fladd@b+1)^0,c
 11267  0022EC  0E00               	movlw	0
 11268  0022EE  6E0D               	movwf	(___fladd@b+2)^0,c
 11269  0022F0  0E00               	movlw	0
 11270  0022F2  6E0E               	movwf	(___fladd@b+3)^0,c
 11271  0022F4  C018  F019         	movff	___fladd@aexp,___fladd@bexp
 11272  0022F8  EFA4  F011         	goto	l1493
 11273  0022FC                     l1495:
 11274  0022FC  A01A               	btfss	___fladd@grs^0,0,c
 11275  0022FE  EF83  F011         	goto	u9001
 11276  002302  EF85  F011         	goto	u9000
 11277  002306                     u9001:
 11278  002306  EF8B  F011         	goto	l7714
 11279  00230A                     u9000:
 11280  00230A  90D8               	bcf	status,0,c
 11281  00230C  301A               	rrcf	___fladd@grs^0,w,c
 11282  00230E  0901               	iorlw	1
 11283  002310  6E1A               	movwf	___fladd@grs^0,c
 11284  002312  EF8D  F011         	goto	l7716
 11285  002316                     l7714:
 11286  002316  90D8               	bcf	status,0,c
 11287  002318  321A               	rrcf	___fladd@grs^0,f,c
 11288  00231A                     l7716:
 11289  00231A  A00B               	btfss	___fladd@b^0,0,c
 11290  00231C  EF92  F011         	goto	u9011
 11291  002320  EF94  F011         	goto	u9010
 11292  002324                     u9011:
 11293  002324  EF95  F011         	goto	l7720
 11294  002328                     u9010:
 11295  002328  8E1A               	bsf	___fladd@grs^0,7,c
 11296  00232A                     l7720:
 11297  00232A  340E               	rlcf	(___fladd@b+3)^0,w,c
 11298  00232C  320E               	rrcf	(___fladd@b+3)^0,f,c
 11299  00232E  320D               	rrcf	(___fladd@b+2)^0,f,c
 11300  002330  320C               	rrcf	(___fladd@b+1)^0,f,c
 11301  002332  320B               	rrcf	___fladd@b^0,f,c
 11302  002334  2A19               	incf	___fladd@bexp^0,f,c
 11303  002336                     l1494:
 11304  002336  5018               	movf	___fladd@aexp^0,w,c
 11305  002338  5C19               	subwf	___fladd@bexp^0,w,c
 11306  00233A  A0D8               	btfss	status,0,c
 11307  00233C  EFA2  F011         	goto	u9021
 11308  002340  EFA4  F011         	goto	u9020
 11309  002344                     u9021:
 11310  002344  EF7E  F011         	goto	l1495
 11311  002348                     u9020:
 11312  002348                     l1493:
 11313  002348  BC17               	btfsc	___fladd@signs^0,6,c
 11314  00234A  EFA9  F011         	goto	u9031
 11315  00234E  EFAB  F011         	goto	u9030
 11316  002352                     u9031:
 11317  002352  EFEB  F011         	goto	l7748
 11318  002356                     u9030:
 11319  002356  5019               	movf	___fladd@bexp^0,w,c
 11320  002358  A4D8               	btfss	status,2,c
 11321  00235A  EFB1  F011         	goto	u9041
 11322  00235E  EFB3  F011         	goto	u9040
 11323  002362                     u9041:
 11324  002362  EFBD  F011         	goto	l7730
 11325  002366                     u9040:
 11326  002366  0E00               	movlw	0
 11327  002368  6E0B               	movwf	?___fladd^0,c
 11328  00236A  0E00               	movlw	0
 11329  00236C  6E0C               	movwf	(?___fladd+1)^0,c
 11330  00236E  0E00               	movlw	0
 11331  002370  6E0D               	movwf	(?___fladd+2)^0,c
 11332  002372  0E00               	movlw	0
 11333  002374  6E0E               	movwf	(?___fladd+3)^0,c
 11334  002376  EF0C  F013         	goto	l1502
 11335  00237A                     l7730:
 11336  00237A  500F               	movf	___fladd@a^0,w,c
 11337  00237C  260B               	addwf	___fladd@b^0,f,c
 11338  00237E  5010               	movf	(___fladd@a+1)^0,w,c
 11339  002380  220C               	addwfc	(___fladd@b+1)^0,f,c
 11340  002382  5011               	movf	(___fladd@a+2)^0,w,c
 11341  002384  220D               	addwfc	(___fladd@b+2)^0,f,c
 11342  002386  5012               	movf	(___fladd@a+3)^0,w,c
 11343  002388  220E               	addwfc	(___fladd@b+3)^0,f,c
 11344  00238A  A00E               	btfss	(___fladd@b+3)^0,0,c
 11345  00238C  EFCA  F011         	goto	u9051
 11346  002390  EFCC  F011         	goto	u9050
 11347  002394                     u9051:
 11348  002394  EF78  F012         	goto	l7784
 11349  002398                     u9050:
 11350  002398  A01A               	btfss	___fladd@grs^0,0,c
 11351  00239A  EFD1  F011         	goto	u9061
 11352  00239E  EFD3  F011         	goto	u9060
 11353  0023A2                     u9061:
 11354  0023A2  EFD9  F011         	goto	l7738
 11355  0023A6                     u9060:
 11356  0023A6  90D8               	bcf	status,0,c
 11357  0023A8  301A               	rrcf	___fladd@grs^0,w,c
 11358  0023AA  0901               	iorlw	1
 11359  0023AC  6E1A               	movwf	___fladd@grs^0,c
 11360  0023AE  EFDB  F011         	goto	l7740
 11361  0023B2                     l7738:
 11362  0023B2  90D8               	bcf	status,0,c
 11363  0023B4  321A               	rrcf	___fladd@grs^0,f,c
 11364  0023B6                     l7740:
 11365  0023B6  A00B               	btfss	___fladd@b^0,0,c
 11366  0023B8  EFE0  F011         	goto	u9071
 11367  0023BC  EFE2  F011         	goto	u9070
 11368  0023C0                     u9071:
 11369  0023C0  EFE3  F011         	goto	l7744
 11370  0023C4                     u9070:
 11371  0023C4  8E1A               	bsf	___fladd@grs^0,7,c
 11372  0023C6                     l7744:
 11373  0023C6  340E               	rlcf	(___fladd@b+3)^0,w,c
 11374  0023C8  320E               	rrcf	(___fladd@b+3)^0,f,c
 11375  0023CA  320D               	rrcf	(___fladd@b+2)^0,f,c
 11376  0023CC  320C               	rrcf	(___fladd@b+1)^0,f,c
 11377  0023CE  320B               	rrcf	___fladd@b^0,f,c
 11378  0023D0  2A19               	incf	___fladd@bexp^0,f,c
 11379  0023D2  EF78  F012         	goto	l7784
 11380  0023D6                     l7748:
 11381  0023D6  500F               	movf	___fladd@a^0,w,c
 11382  0023D8  5C0B               	subwf	___fladd@b^0,w,c
 11383  0023DA  5010               	movf	(___fladd@a+1)^0,w,c
 11384  0023DC  580C               	subwfb	(___fladd@b+1)^0,w,c
 11385  0023DE  5011               	movf	(___fladd@a+2)^0,w,c
 11386  0023E0  580D               	subwfb	(___fladd@b+2)^0,w,c
 11387  0023E2  500E               	movf	(___fladd@b+3)^0,w,c
 11388  0023E4  0A80               	xorlw	128
 11389  0023E6  6E13               	movwf	??___fladd^0,c
 11390  0023E8  5012               	movf	(___fladd@a+3)^0,w,c
 11391  0023EA  0A80               	xorlw	128
 11392  0023EC  5813               	subwfb	??___fladd^0,w,c
 11393  0023EE  B0D8               	btfsc	status,0,c
 11394  0023F0  EFFC  F011         	goto	u9081
 11395  0023F4  EFFE  F011         	goto	u9080
 11396  0023F8                     u9081:
 11397  0023F8  EF29  F012         	goto	l7758
 11398  0023FC                     u9080:
 11399  0023FC  500B               	movf	___fladd@b^0,w,c
 11400  0023FE  5C0F               	subwf	___fladd@a^0,w,c
 11401  002400  6E13               	movwf	??___fladd^0,c
 11402  002402  500C               	movf	(___fladd@b+1)^0,w,c
 11403  002404  5810               	subwfb	(___fladd@a+1)^0,w,c
 11404  002406  6E14               	movwf	(??___fladd+1)^0,c
 11405  002408  500D               	movf	(___fladd@b+2)^0,w,c
 11406  00240A  5811               	subwfb	(___fladd@a+2)^0,w,c
 11407  00240C  6E15               	movwf	(??___fladd+2)^0,c
 11408  00240E  500E               	movf	(___fladd@b+3)^0,w,c
 11409  002410  5812               	subwfb	(___fladd@a+3)^0,w,c
 11410  002412  6E16               	movwf	(??___fladd+3)^0,c
 11411  002414  0EFF               	movlw	255
 11412  002416  2413               	addwf	??___fladd^0,w,c
 11413  002418  6E0B               	movwf	___fladd@b^0,c
 11414  00241A  0EFF               	movlw	255
 11415  00241C  2014               	addwfc	(??___fladd+1)^0,w,c
 11416  00241E  6E0C               	movwf	(___fladd@b+1)^0,c
 11417  002420  0EFF               	movlw	255
 11418  002422  2015               	addwfc	(??___fladd+2)^0,w,c
 11419  002424  6E0D               	movwf	(___fladd@b+2)^0,c
 11420  002426  0EFF               	movlw	255
 11421  002428  2016               	addwfc	(??___fladd+3)^0,w,c
 11422  00242A  6E0E               	movwf	(___fladd@b+3)^0,c
 11423  00242C  0E80               	movlw	128
 11424  00242E  1A17               	xorwf	___fladd@signs^0,f,c
 11425  002430  6C1A               	negf	___fladd@grs^0,c
 11426  002432  501A               	movf	___fladd@grs^0,w,c
 11427  002434  A4D8               	btfss	status,2,c
 11428  002436  EF1F  F012         	goto	u9091
 11429  00243A  EF21  F012         	goto	u9090
 11430  00243E                     u9091:
 11431  00243E  EF31  F012         	goto	l1510
 11432  002442                     u9090:
 11433  002442  0E01               	movlw	1
 11434  002444  260B               	addwf	___fladd@b^0,f,c
 11435  002446  0E00               	movlw	0
 11436  002448  220C               	addwfc	(___fladd@b+1)^0,f,c
 11437  00244A  220D               	addwfc	(___fladd@b+2)^0,f,c
 11438  00244C  220E               	addwfc	(___fladd@b+3)^0,f,c
 11439  00244E  EF31  F012         	goto	l1510
 11440  002452                     l7758:
 11441  002452  500F               	movf	___fladd@a^0,w,c
 11442  002454  5E0B               	subwf	___fladd@b^0,f,c
 11443  002456  5010               	movf	(___fladd@a+1)^0,w,c
 11444  002458  5A0C               	subwfb	(___fladd@b+1)^0,f,c
 11445  00245A  5011               	movf	(___fladd@a+2)^0,w,c
 11446  00245C  5A0D               	subwfb	(___fladd@b+2)^0,f,c
 11447  00245E  5012               	movf	(___fladd@a+3)^0,w,c
 11448  002460  5A0E               	subwfb	(___fladd@b+3)^0,f,c
 11449  002462                     l1510:
 11450  002462  500B               	movf	___fladd@b^0,w,c
 11451  002464  100C               	iorwf	(___fladd@b+1)^0,w,c
 11452  002466  100D               	iorwf	(___fladd@b+2)^0,w,c
 11453  002468  100E               	iorwf	(___fladd@b+3)^0,w,c
 11454  00246A  A4D8               	btfss	status,2,c
 11455  00246C  EF3A  F012         	goto	u9101
 11456  002470  EF3C  F012         	goto	u9100
 11457  002474                     u9101:
 11458  002474  EF71  F012         	goto	l7782
 11459  002478                     u9100:
 11460  002478  501A               	movf	___fladd@grs^0,w,c
 11461  00247A  A4D8               	btfss	status,2,c
 11462  00247C  EF42  F012         	goto	u9111
 11463  002480  EF44  F012         	goto	u9110
 11464  002484                     u9111:
 11465  002484  EF71  F012         	goto	l7782
 11466  002488                     u9110:
 11467  002488  0E00               	movlw	0
 11468  00248A  6E0B               	movwf	?___fladd^0,c
 11469  00248C  0E00               	movlw	0
 11470  00248E  6E0C               	movwf	(?___fladd+1)^0,c
 11471  002490  0E00               	movlw	0
 11472  002492  6E0D               	movwf	(?___fladd+2)^0,c
 11473  002494  0E00               	movlw	0
 11474  002496  6E0E               	movwf	(?___fladd+3)^0,c
 11475  002498  EF0C  F013         	goto	l1502
 11476  00249C                     l7766:
 11477  00249C  90D8               	bcf	status,0,c
 11478  00249E  360B               	rlcf	___fladd@b^0,f,c
 11479  0024A0  360C               	rlcf	(___fladd@b+1)^0,f,c
 11480  0024A2  360D               	rlcf	(___fladd@b+2)^0,f,c
 11481  0024A4  360E               	rlcf	(___fladd@b+3)^0,f,c
 11482  0024A6  AE1A               	btfss	___fladd@grs^0,7,c
 11483  0024A8  EF58  F012         	goto	u9121
 11484  0024AC  EF5A  F012         	goto	u9120
 11485  0024B0                     u9121:
 11486  0024B0  EF5B  F012         	goto	l7772
 11487  0024B4                     u9120:
 11488  0024B4  800B               	bsf	___fladd@b^0,0,c
 11489  0024B6                     l7772:
 11490  0024B6  A01A               	btfss	___fladd@grs^0,0,c
 11491  0024B8  EF60  F012         	goto	u9131
 11492  0024BC  EF62  F012         	goto	u9130
 11493  0024C0                     u9131:
 11494  0024C0  EF66  F012         	goto	l7776
 11495  0024C4                     u9130:
 11496  0024C4  80D8               	bsf	status,0,c
 11497  0024C6  361A               	rlcf	___fladd@grs^0,f,c
 11498  0024C8  EF68  F012         	goto	l7778
 11499  0024CC                     l7776:
 11500  0024CC  90D8               	bcf	status,0,c
 11501  0024CE  361A               	rlcf	___fladd@grs^0,f,c
 11502  0024D0                     l7778:
 11503  0024D0  5019               	movf	___fladd@bexp^0,w,c
 11504  0024D2  B4D8               	btfsc	status,2,c
 11505  0024D4  EF6E  F012         	goto	u9141
 11506  0024D8  EF70  F012         	goto	u9140
 11507  0024DC                     u9141:
 11508  0024DC  EF71  F012         	goto	l7782
 11509  0024E0                     u9140:
 11510  0024E0  0619               	decf	___fladd@bexp^0,f,c
 11511  0024E2                     l7782:
 11512  0024E2  AE0D               	btfss	(___fladd@b+2)^0,7,c
 11513  0024E4  EF76  F012         	goto	u9151
 11514  0024E8  EF78  F012         	goto	u9150
 11515  0024EC                     u9151:
 11516  0024EC  EF4E  F012         	goto	l7766
 11517  0024F0                     u9150:
 11518  0024F0                     l7784:
 11519  0024F0  0E00               	movlw	0
 11520  0024F2  6E18               	movwf	___fladd@aexp^0,c
 11521  0024F4  AE1A               	btfss	___fladd@grs^0,7,c
 11522  0024F6  EF7F  F012         	goto	u9161
 11523  0024FA  EF81  F012         	goto	u9160
 11524  0024FE                     u9161:
 11525  0024FE  EF99  F012         	goto	l1519
 11526  002502                     u9160:
 11527  002502  C01A  F013         	movff	___fladd@grs,??___fladd
 11528  002506  0E7F               	movlw	127
 11529  002508  1613               	andwf	??___fladd^0,f,c
 11530  00250A  B4D8               	btfsc	status,2,c
 11531  00250C  EF8A  F012         	goto	u9171
 11532  002510  EF8C  F012         	goto	u9170
 11533  002514                     u9171:
 11534  002514  EF90  F012         	goto	l1520
 11535  002518                     u9170:
 11536  002518                     l7790:
 11537  002518  0E01               	movlw	1
 11538  00251A  6E18               	movwf	___fladd@aexp^0,c
 11539  00251C  EF99  F012         	goto	l1519
 11540  002520                     l1520:
 11541  002520  A00B               	btfss	___fladd@b^0,0,c
 11542  002522  EF95  F012         	goto	u9181
 11543  002526  EF97  F012         	goto	u9180
 11544  00252A                     u9181:
 11545  00252A  EF99  F012         	goto	l1519
 11546  00252E                     u9180:
 11547  00252E  EF8C  F012         	goto	l7790
 11548  002532                     l1519:
 11549  002532  5018               	movf	___fladd@aexp^0,w,c
 11550  002534  B4D8               	btfsc	status,2,c
 11551  002536  EF9F  F012         	goto	u9191
 11552  00253A  EFA1  F012         	goto	u9190
 11553  00253E                     u9191:
 11554  00253E  EFCC  F012         	goto	l7802
 11555  002542                     u9190:
 11556  002542  0E01               	movlw	1
 11557  002544  260B               	addwf	___fladd@b^0,f,c
 11558  002546  0E00               	movlw	0
 11559  002548  220C               	addwfc	(___fladd@b+1)^0,f,c
 11560  00254A  220D               	addwfc	(___fladd@b+2)^0,f,c
 11561  00254C  220E               	addwfc	(___fladd@b+3)^0,f,c
 11562  00254E  A00E               	btfss	(___fladd@b+3)^0,0,c
 11563  002550  EFAC  F012         	goto	u9201
 11564  002554  EFAE  F012         	goto	u9200
 11565  002558                     u9201:
 11566  002558  EFCC  F012         	goto	l7802
 11567  00255C                     u9200:
 11568  00255C  C00B  F013         	movff	___fladd@b,??___fladd
 11569  002560  C00C  F014         	movff	___fladd@b+1,??___fladd+1
 11570  002564  C00D  F015         	movff	___fladd@b+2,??___fladd+2
 11571  002568  C00E  F016         	movff	___fladd@b+3,??___fladd+3
 11572  00256C  3416               	rlcf	(??___fladd+3)^0,w,c
 11573  00256E  3216               	rrcf	(??___fladd+3)^0,f,c
 11574  002570  3215               	rrcf	(??___fladd+2)^0,f,c
 11575  002572  3214               	rrcf	(??___fladd+1)^0,f,c
 11576  002574  3213               	rrcf	??___fladd^0,f,c
 11577  002576  C013  F00B         	movff	??___fladd,___fladd@b
 11578  00257A  C014  F00C         	movff	??___fladd+1,___fladd@b+1
 11579  00257E  C015  F00D         	movff	??___fladd+2,___fladd@b+2
 11580  002582  C016  F00E         	movff	??___fladd+3,___fladd@b+3
 11581  002586  2819               	incf	___fladd@bexp^0,w,c
 11582  002588  B4D8               	btfsc	status,2,c
 11583  00258A  EFC9  F012         	goto	u9211
 11584  00258E  EFCB  F012         	goto	u9210
 11585  002592                     u9211:
 11586  002592  EFCC  F012         	goto	l7802
 11587  002596                     u9210:
 11588  002596  2A19               	incf	___fladd@bexp^0,f,c
 11589  002598                     l7802:
 11590  002598  2819               	incf	___fladd@bexp^0,w,c
 11591  00259A  B4D8               	btfsc	status,2,c
 11592  00259C  EFD2  F012         	goto	u9221
 11593  0025A0  EFD4  F012         	goto	u9220
 11594  0025A4                     u9221:
 11595  0025A4  EFDC  F012         	goto	l7806
 11596  0025A8                     u9220:
 11597  0025A8  5019               	movf	___fladd@bexp^0,w,c
 11598  0025AA  A4D8               	btfss	status,2,c
 11599  0025AC  EFDA  F012         	goto	u9231
 11600  0025B0  EFDC  F012         	goto	u9230
 11601  0025B4                     u9231:
 11602  0025B4  EFEE  F012         	goto	l7810
 11603  0025B8                     u9230:
 11604  0025B8                     l7806:
 11605  0025B8  0E00               	movlw	0
 11606  0025BA  6E0B               	movwf	___fladd@b^0,c
 11607  0025BC  0E00               	movlw	0
 11608  0025BE  6E0C               	movwf	(___fladd@b+1)^0,c
 11609  0025C0  0E00               	movlw	0
 11610  0025C2  6E0D               	movwf	(___fladd@b+2)^0,c
 11611  0025C4  0E00               	movlw	0
 11612  0025C6  6E0E               	movwf	(___fladd@b+3)^0,c
 11613  0025C8  5019               	movf	___fladd@bexp^0,w,c
 11614  0025CA  A4D8               	btfss	status,2,c
 11615  0025CC  EFEA  F012         	goto	u9241
 11616  0025D0  EFEC  F012         	goto	u9240
 11617  0025D4                     u9241:
 11618  0025D4  EFEE  F012         	goto	l7810
 11619  0025D8                     u9240:
 11620  0025D8  0E00               	movlw	0
 11621  0025DA  6E17               	movwf	___fladd@signs^0,c
 11622  0025DC                     l7810:
 11623  0025DC  A019               	btfss	___fladd@bexp^0,0,c
 11624  0025DE  EFF3  F012         	goto	u9251
 11625  0025E2  EFF5  F012         	goto	u9250
 11626  0025E6                     u9251:
 11627  0025E6  EFF8  F012         	goto	l7814
 11628  0025EA                     u9250:
 11629  0025EA  8E0D               	bsf	(___fladd@b+2)^0,7,c
 11630  0025EC  EFF9  F012         	goto	l7816
 11631  0025F0                     l7814:
 11632  0025F0  9E0D               	bcf	(___fladd@b+2)^0,7,c
 11633  0025F2                     l7816:
 11634  0025F2  90D8               	bcf	status,0,c
 11635  0025F4  3019               	rrcf	___fladd@bexp^0,w,c
 11636  0025F6  6E0E               	movwf	(___fladd@b+3)^0,c
 11637  0025F8  AE17               	btfss	___fladd@signs^0,7,c
 11638  0025FA  EF01  F013         	goto	u9261
 11639  0025FE  EF03  F013         	goto	u9260
 11640  002602                     u9261:
 11641  002602  EF04  F013         	goto	l7822
 11642  002606                     u9260:
 11643  002606  8E0E               	bsf	(___fladd@b+3)^0,7,c
 11644  002608                     l7822:
 11645  002608  C00B  F00B         	movff	___fladd@b,?___fladd
 11646  00260C  C00C  F00C         	movff	___fladd@b+1,?___fladd+1
 11647  002610  C00D  F00D         	movff	___fladd@b+2,?___fladd+2
 11648  002614  C00E  F00E         	movff	___fladd@b+3,?___fladd+3
 11649  002618                     l1502:
 11650  002618  0012               	return		;funcret
 11651  00261A                     __end_of___fladd:
 11652                           	opt callstack 0
 11653                           
 11654 ;; *************** function ___flneg *****************
 11655 ;; Defined at:
 11656 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  f1              4   10[COMRAM] unsigned char 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  4   10[COMRAM] unsigned char 
 11663 ;; Registers used:
 11664 ;;		wreg, status,2, status,0
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11674 ;;Total ram usage:        4 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:    5
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_efgtoa
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text24
 11685  005D8E                     __ptext24:
 11686                           	opt callstack 0
 11687  005D8E                     ___flneg:
 11688                           	opt callstack 20
 11689  005D8E  500B               	movf	___flneg@f1^0,w,c
 11690  005D90  100C               	iorwf	(___flneg@f1+1)^0,w,c
 11691  005D92  100D               	iorwf	(___flneg@f1+2)^0,w,c
 11692  005D94  100E               	iorwf	(___flneg@f1+3)^0,w,c
 11693  005D96  B4D8               	btfsc	status,2,c
 11694  005D98  EFD0  F02E         	goto	u10381
 11695  005D9C  EFD2  F02E         	goto	u10380
 11696  005DA0                     u10381:
 11697  005DA0  EFDA  F02E         	goto	l8420
 11698  005DA4                     u10380:
 11699  005DA4  0E00               	movlw	0
 11700  005DA6  1A0B               	xorwf	___flneg@f1^0,f,c
 11701  005DA8  0E00               	movlw	0
 11702  005DAA  1A0C               	xorwf	(___flneg@f1+1)^0,f,c
 11703  005DAC  0E00               	movlw	0
 11704  005DAE  1A0D               	xorwf	(___flneg@f1+2)^0,f,c
 11705  005DB0  0E80               	movlw	128
 11706  005DB2  1A0E               	xorwf	(___flneg@f1+3)^0,f,c
 11707  005DB4                     l8420:
 11708  005DB4  C00B  F00B         	movff	___flneg@f1,?___flneg
 11709  005DB8  C00C  F00C         	movff	___flneg@f1+1,?___flneg+1
 11710  005DBC  C00D  F00D         	movff	___flneg@f1+2,?___flneg+2
 11711  005DC0  C00E  F00E         	movff	___flneg@f1+3,?___flneg+3
 11712  005DC4  0012               	return		;funcret
 11713  005DC6                     __end_of___flneg:
 11714                           	opt callstack 0
 11715                           
 11716 ;; *************** function ___flmul *****************
 11717 ;; Defined at:
 11718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  b               4   24[COMRAM] unsigned char 
 11721 ;;  a               4   28[COMRAM] unsigned char 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;  prod            4   43[COMRAM] struct .
 11724 ;;  grs             4   38[COMRAM] unsigned long 
 11725 ;;  temp            2   47[COMRAM] struct .
 11726 ;;  bexp            1   42[COMRAM] unsigned char 
 11727 ;;  aexp            1   37[COMRAM] unsigned char 
 11728 ;;  sign            1   36[COMRAM] unsigned char 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  4   24[COMRAM] unsigned char 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2, status,0, prodl, prodh
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11738 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11739 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11740 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11741 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11742 ;;Total ram usage:       25 bytes
 11743 ;; Hardware stack levels used:    1
 11744 ;; Hardware stack levels required when called:    5
 11745 ;; This function calls:
 11746 ;;		Nothing
 11747 ;; This function is called by:
 11748 ;;		_main
 11749 ;;		_efgtoa
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text25
 11754  00261A                     __ptext25:
 11755                           	opt callstack 0
 11756  00261A                     ___flmul:
 11757                           	opt callstack 20
 11758  00261A  501C               	movf	(___flmul@b+3)^0,w,c
 11759  00261C  0B80               	andlw	128
 11760  00261E  6E25               	movwf	___flmul@sign^0,c
 11761  002620  501C               	movf	(___flmul@b+3)^0,w,c
 11762  002622  241C               	addwf	(___flmul@b+3)^0,w,c
 11763  002624  6E2B               	movwf	___flmul@bexp^0,c
 11764  002626  AE1B               	btfss	(___flmul@b+2)^0,7,c
 11765  002628  EF18  F013         	goto	u9991
 11766  00262C  EF1A  F013         	goto	u9990
 11767  002630                     u9991:
 11768  002630  EF1B  F013         	goto	l8168
 11769  002634                     u9990:
 11770  002634  802B               	bsf	___flmul@bexp^0,0,c
 11771  002636                     l8168:
 11772  002636  502B               	movf	___flmul@bexp^0,w,c
 11773  002638  B4D8               	btfsc	status,2,c
 11774  00263A  EF21  F013         	goto	u10001
 11775  00263E  EF23  F013         	goto	u10000
 11776  002642                     u10001:
 11777  002642  EF36  F013         	goto	l8176
 11778  002646                     u10000:
 11779  002646  282B               	incf	___flmul@bexp^0,w,c
 11780  002648  A4D8               	btfss	status,2,c
 11781  00264A  EF29  F013         	goto	u10011
 11782  00264E  EF2B  F013         	goto	u10010
 11783  002652                     u10011:
 11784  002652  EF33  F013         	goto	l8174
 11785  002656                     u10010:
 11786  002656  0E00               	movlw	0
 11787  002658  6E19               	movwf	___flmul@b^0,c
 11788  00265A  0E00               	movlw	0
 11789  00265C  6E1A               	movwf	(___flmul@b+1)^0,c
 11790  00265E  0E00               	movlw	0
 11791  002660  6E1B               	movwf	(___flmul@b+2)^0,c
 11792  002662  0E00               	movlw	0
 11793  002664  6E1C               	movwf	(___flmul@b+3)^0,c
 11794  002666                     l8174:
 11795  002666  8E1B               	bsf	(___flmul@b+2)^0,7,c
 11796  002668  EF3E  F013         	goto	l8178
 11797  00266C                     l8176:
 11798  00266C  0E00               	movlw	0
 11799  00266E  6E19               	movwf	___flmul@b^0,c
 11800  002670  0E00               	movlw	0
 11801  002672  6E1A               	movwf	(___flmul@b+1)^0,c
 11802  002674  0E00               	movlw	0
 11803  002676  6E1B               	movwf	(___flmul@b+2)^0,c
 11804  002678  0E00               	movlw	0
 11805  00267A  6E1C               	movwf	(___flmul@b+3)^0,c
 11806  00267C                     l8178:
 11807  00267C  5020               	movf	(___flmul@a+3)^0,w,c
 11808  00267E  0B80               	andlw	128
 11809  002680  1A25               	xorwf	___flmul@sign^0,f,c
 11810  002682  5020               	movf	(___flmul@a+3)^0,w,c
 11811  002684  2420               	addwf	(___flmul@a+3)^0,w,c
 11812  002686  6E26               	movwf	___flmul@aexp^0,c
 11813  002688  AE1F               	btfss	(___flmul@a+2)^0,7,c
 11814  00268A  EF49  F013         	goto	u10021
 11815  00268E  EF4B  F013         	goto	u10020
 11816  002692                     u10021:
 11817  002692  EF4C  F013         	goto	l8186
 11818  002696                     u10020:
 11819  002696  8026               	bsf	___flmul@aexp^0,0,c
 11820  002698                     l8186:
 11821  002698  5026               	movf	___flmul@aexp^0,w,c
 11822  00269A  B4D8               	btfsc	status,2,c
 11823  00269C  EF52  F013         	goto	u10031
 11824  0026A0  EF54  F013         	goto	u10030
 11825  0026A4                     u10031:
 11826  0026A4  EF67  F013         	goto	l8194
 11827  0026A8                     u10030:
 11828  0026A8  2826               	incf	___flmul@aexp^0,w,c
 11829  0026AA  A4D8               	btfss	status,2,c
 11830  0026AC  EF5A  F013         	goto	u10041
 11831  0026B0  EF5C  F013         	goto	u10040
 11832  0026B4                     u10041:
 11833  0026B4  EF64  F013         	goto	l8192
 11834  0026B8                     u10040:
 11835  0026B8  0E00               	movlw	0
 11836  0026BA  6E1D               	movwf	___flmul@a^0,c
 11837  0026BC  0E00               	movlw	0
 11838  0026BE  6E1E               	movwf	(___flmul@a+1)^0,c
 11839  0026C0  0E00               	movlw	0
 11840  0026C2  6E1F               	movwf	(___flmul@a+2)^0,c
 11841  0026C4  0E00               	movlw	0
 11842  0026C6  6E20               	movwf	(___flmul@a+3)^0,c
 11843  0026C8                     l8192:
 11844  0026C8  8E1F               	bsf	(___flmul@a+2)^0,7,c
 11845  0026CA  EF6F  F013         	goto	l1579
 11846  0026CE                     l8194:
 11847  0026CE  0E00               	movlw	0
 11848  0026D0  6E1D               	movwf	___flmul@a^0,c
 11849  0026D2  0E00               	movlw	0
 11850  0026D4  6E1E               	movwf	(___flmul@a+1)^0,c
 11851  0026D6  0E00               	movlw	0
 11852  0026D8  6E1F               	movwf	(___flmul@a+2)^0,c
 11853  0026DA  0E00               	movlw	0
 11854  0026DC  6E20               	movwf	(___flmul@a+3)^0,c
 11855  0026DE                     l1579:
 11856  0026DE  5026               	movf	___flmul@aexp^0,w,c
 11857  0026E0  B4D8               	btfsc	status,2,c
 11858  0026E2  EF75  F013         	goto	u10051
 11859  0026E6  EF77  F013         	goto	u10050
 11860  0026EA                     u10051:
 11861  0026EA  EF7F  F013         	goto	l8198
 11862  0026EE                     u10050:
 11863  0026EE  502B               	movf	___flmul@bexp^0,w,c
 11864  0026F0  A4D8               	btfss	status,2,c
 11865  0026F2  EF7D  F013         	goto	u10061
 11866  0026F6  EF7F  F013         	goto	u10060
 11867  0026FA                     u10061:
 11868  0026FA  EF89  F013         	goto	l8202
 11869  0026FE                     u10060:
 11870  0026FE                     l8198:
 11871  0026FE  0E00               	movlw	0
 11872  002700  6E19               	movwf	?___flmul^0,c
 11873  002702  0E00               	movlw	0
 11874  002704  6E1A               	movwf	(?___flmul+1)^0,c
 11875  002706  0E00               	movlw	0
 11876  002708  6E1B               	movwf	(?___flmul+2)^0,c
 11877  00270A  0E00               	movlw	0
 11878  00270C  6E1C               	movwf	(?___flmul+3)^0,c
 11879  00270E  EF21  F015         	goto	l1583
 11880  002712                     l8202:
 11881  002712  501F               	movf	(___flmul@a+2)^0,w,c
 11882  002714  0219               	mulwf	___flmul@b^0,c
 11883  002716  CFF3 F030          	movff	prodl,___flmul@temp
 11884  00271A  CFF4 F031          	movff	prodh,___flmul@temp+1
 11885  00271E  5030               	movf	___flmul@temp^0,w,c
 11886  002720  6E27               	movwf	___flmul@grs^0,c
 11887  002722  6A28               	clrf	(___flmul@grs+1)^0,c
 11888  002724  6A29               	clrf	(___flmul@grs+2)^0,c
 11889  002726  6A2A               	clrf	(___flmul@grs+3)^0,c
 11890  002728  5031               	movf	(___flmul@temp+1)^0,w,c
 11891  00272A  6E2C               	movwf	___flmul@prod^0,c
 11892  00272C  6A2D               	clrf	(___flmul@prod+1)^0,c
 11893  00272E  6A2E               	clrf	(___flmul@prod+2)^0,c
 11894  002730  6A2F               	clrf	(___flmul@prod+3)^0,c
 11895  002732  501E               	movf	(___flmul@a+1)^0,w,c
 11896  002734  021A               	mulwf	(___flmul@b+1)^0,c
 11897  002736  CFF3 F030          	movff	prodl,___flmul@temp
 11898  00273A  CFF4 F031          	movff	prodh,___flmul@temp+1
 11899  00273E  5030               	movf	___flmul@temp^0,w,c
 11900  002740  2627               	addwf	___flmul@grs^0,f,c
 11901  002742  0E00               	movlw	0
 11902  002744  2228               	addwfc	(___flmul@grs+1)^0,f,c
 11903  002746  2229               	addwfc	(___flmul@grs+2)^0,f,c
 11904  002748  222A               	addwfc	(___flmul@grs+3)^0,f,c
 11905  00274A  5031               	movf	(___flmul@temp+1)^0,w,c
 11906  00274C  262C               	addwf	___flmul@prod^0,f,c
 11907  00274E  0E00               	movlw	0
 11908  002750  222D               	addwfc	(___flmul@prod+1)^0,f,c
 11909  002752  222E               	addwfc	(___flmul@prod+2)^0,f,c
 11910  002754  222F               	addwfc	(___flmul@prod+3)^0,f,c
 11911  002756  501D               	movf	___flmul@a^0,w,c
 11912  002758  021B               	mulwf	(___flmul@b+2)^0,c
 11913  00275A  CFF3 F030          	movff	prodl,___flmul@temp
 11914  00275E  CFF4 F031          	movff	prodh,___flmul@temp+1
 11915  002762  5030               	movf	___flmul@temp^0,w,c
 11916  002764  2627               	addwf	___flmul@grs^0,f,c
 11917  002766  0E00               	movlw	0
 11918  002768  2228               	addwfc	(___flmul@grs+1)^0,f,c
 11919  00276A  2229               	addwfc	(___flmul@grs+2)^0,f,c
 11920  00276C  222A               	addwfc	(___flmul@grs+3)^0,f,c
 11921  00276E  5031               	movf	(___flmul@temp+1)^0,w,c
 11922  002770  262C               	addwf	___flmul@prod^0,f,c
 11923  002772  0E00               	movlw	0
 11924  002774  222D               	addwfc	(___flmul@prod+1)^0,f,c
 11925  002776  222E               	addwfc	(___flmul@prod+2)^0,f,c
 11926  002778  222F               	addwfc	(___flmul@prod+3)^0,f,c
 11927  00277A  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
 11928  00277E  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
 11929  002782  C027  F028         	movff	___flmul@grs,___flmul@grs+1
 11930  002786  6A27               	clrf	___flmul@grs^0,c
 11931  002788  501D               	movf	___flmul@a^0,w,c
 11932  00278A  021A               	mulwf	(___flmul@b+1)^0,c
 11933  00278C  CFF3 F030          	movff	prodl,___flmul@temp
 11934  002790  CFF4 F031          	movff	prodh,___flmul@temp+1
 11935  002794  5030               	movf	___flmul@temp^0,w,c
 11936  002796  2627               	addwf	___flmul@grs^0,f,c
 11937  002798  5031               	movf	(___flmul@temp+1)^0,w,c
 11938  00279A  2228               	addwfc	(___flmul@grs+1)^0,f,c
 11939  00279C  0E00               	movlw	0
 11940  00279E  2229               	addwfc	(___flmul@grs+2)^0,f,c
 11941  0027A0  0E00               	movlw	0
 11942  0027A2  222A               	addwfc	(___flmul@grs+3)^0,f,c
 11943  0027A4  501E               	movf	(___flmul@a+1)^0,w,c
 11944  0027A6  0219               	mulwf	___flmul@b^0,c
 11945  0027A8  CFF3 F030          	movff	prodl,___flmul@temp
 11946  0027AC  CFF4 F031          	movff	prodh,___flmul@temp+1
 11947  0027B0  5030               	movf	___flmul@temp^0,w,c
 11948  0027B2  2627               	addwf	___flmul@grs^0,f,c
 11949  0027B4  5031               	movf	(___flmul@temp+1)^0,w,c
 11950  0027B6  2228               	addwfc	(___flmul@grs+1)^0,f,c
 11951  0027B8  0E00               	movlw	0
 11952  0027BA  2229               	addwfc	(___flmul@grs+2)^0,f,c
 11953  0027BC  0E00               	movlw	0
 11954  0027BE  222A               	addwfc	(___flmul@grs+3)^0,f,c
 11955  0027C0  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
 11956  0027C4  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
 11957  0027C8  C027  F028         	movff	___flmul@grs,___flmul@grs+1
 11958  0027CC  6A27               	clrf	___flmul@grs^0,c
 11959  0027CE  501D               	movf	___flmul@a^0,w,c
 11960  0027D0  0219               	mulwf	___flmul@b^0,c
 11961  0027D2  CFF3 F030          	movff	prodl,___flmul@temp
 11962  0027D6  CFF4 F031          	movff	prodh,___flmul@temp+1
 11963  0027DA  5030               	movf	___flmul@temp^0,w,c
 11964  0027DC  2627               	addwf	___flmul@grs^0,f,c
 11965  0027DE  5031               	movf	(___flmul@temp+1)^0,w,c
 11966  0027E0  2228               	addwfc	(___flmul@grs+1)^0,f,c
 11967  0027E2  0E00               	movlw	0
 11968  0027E4  2229               	addwfc	(___flmul@grs+2)^0,f,c
 11969  0027E6  0E00               	movlw	0
 11970  0027E8  222A               	addwfc	(___flmul@grs+3)^0,f,c
 11971  0027EA  501F               	movf	(___flmul@a+2)^0,w,c
 11972  0027EC  021A               	mulwf	(___flmul@b+1)^0,c
 11973  0027EE  CFF3 F030          	movff	prodl,___flmul@temp
 11974  0027F2  CFF4 F031          	movff	prodh,___flmul@temp+1
 11975  0027F6  5030               	movf	___flmul@temp^0,w,c
 11976  0027F8  262C               	addwf	___flmul@prod^0,f,c
 11977  0027FA  5031               	movf	(___flmul@temp+1)^0,w,c
 11978  0027FC  222D               	addwfc	(___flmul@prod+1)^0,f,c
 11979  0027FE  0E00               	movlw	0
 11980  002800  222E               	addwfc	(___flmul@prod+2)^0,f,c
 11981  002802  0E00               	movlw	0
 11982  002804  222F               	addwfc	(___flmul@prod+3)^0,f,c
 11983  002806  501E               	movf	(___flmul@a+1)^0,w,c
 11984  002808  021B               	mulwf	(___flmul@b+2)^0,c
 11985  00280A  CFF3 F030          	movff	prodl,___flmul@temp
 11986  00280E  CFF4 F031          	movff	prodh,___flmul@temp+1
 11987  002812  5030               	movf	___flmul@temp^0,w,c
 11988  002814  262C               	addwf	___flmul@prod^0,f,c
 11989  002816  5031               	movf	(___flmul@temp+1)^0,w,c
 11990  002818  222D               	addwfc	(___flmul@prod+1)^0,f,c
 11991  00281A  0E00               	movlw	0
 11992  00281C  222E               	addwfc	(___flmul@prod+2)^0,f,c
 11993  00281E  0E00               	movlw	0
 11994  002820  222F               	addwfc	(___flmul@prod+3)^0,f,c
 11995  002822  501F               	movf	(___flmul@a+2)^0,w,c
 11996  002824  021B               	mulwf	(___flmul@b+2)^0,c
 11997  002826  CFF3 F030          	movff	prodl,___flmul@temp
 11998  00282A  CFF4 F031          	movff	prodh,___flmul@temp+1
 11999  00282E  5030               	movf	___flmul@temp^0,w,c
 12000  002830  6E21               	movwf	??___flmul^0,c
 12001  002832  5031               	movf	(___flmul@temp+1)^0,w,c
 12002  002834  6E22               	movwf	(??___flmul+1)^0,c
 12003  002836  6A23               	clrf	(??___flmul+2)^0,c
 12004  002838  6A24               	clrf	(??___flmul+3)^0,c
 12005  00283A  C023  F024         	movff	??___flmul+2,??___flmul+3
 12006  00283E  C022  F023         	movff	??___flmul+1,??___flmul+2
 12007  002842  C021  F022         	movff	??___flmul,??___flmul+1
 12008  002846  6A21               	clrf	??___flmul^0,c
 12009  002848  5021               	movf	??___flmul^0,w,c
 12010  00284A  262C               	addwf	___flmul@prod^0,f,c
 12011  00284C  5022               	movf	(??___flmul+1)^0,w,c
 12012  00284E  222D               	addwfc	(___flmul@prod+1)^0,f,c
 12013  002850  5023               	movf	(??___flmul+2)^0,w,c
 12014  002852  222E               	addwfc	(___flmul@prod+2)^0,f,c
 12015  002854  5024               	movf	(??___flmul+3)^0,w,c
 12016  002856  222F               	addwfc	(___flmul@prod+3)^0,f,c
 12017  002858  C027  F021         	movff	___flmul@grs,??___flmul
 12018  00285C  C028  F022         	movff	___flmul@grs+1,??___flmul+1
 12019  002860  C029  F023         	movff	___flmul@grs+2,??___flmul+2
 12020  002864  C02A  F024         	movff	___flmul@grs+3,??___flmul+3
 12021  002868  0E19               	movlw	25
 12022  00286A  EF3C  F014         	goto	u10070
 12023  00286E                     u10075:
 12024  00286E  90D8               	bcf	status,0,c
 12025  002870  3224               	rrcf	(??___flmul+3)^0,f,c
 12026  002872  3223               	rrcf	(??___flmul+2)^0,f,c
 12027  002874  3222               	rrcf	(??___flmul+1)^0,f,c
 12028  002876  3221               	rrcf	??___flmul^0,f,c
 12029  002878                     u10070:
 12030  002878  2EE8               	decfsz	wreg,f,c
 12031  00287A  EF37  F014         	goto	u10075
 12032  00287E  5021               	movf	??___flmul^0,w,c
 12033  002880  262C               	addwf	___flmul@prod^0,f,c
 12034  002882  5022               	movf	(??___flmul+1)^0,w,c
 12035  002884  222D               	addwfc	(___flmul@prod+1)^0,f,c
 12036  002886  5023               	movf	(??___flmul+2)^0,w,c
 12037  002888  222E               	addwfc	(___flmul@prod+2)^0,f,c
 12038  00288A  5024               	movf	(??___flmul+3)^0,w,c
 12039  00288C  222F               	addwfc	(___flmul@prod+3)^0,f,c
 12040  00288E  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
 12041  002892  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
 12042  002896  C027  F028         	movff	___flmul@grs,___flmul@grs+1
 12043  00289A  6A27               	clrf	___flmul@grs^0,c
 12044  00289C  5026               	movf	___flmul@aexp^0,w,c
 12045  00289E  C02B  F021         	movff	___flmul@bexp,??___flmul
 12046  0028A2  6A22               	clrf	(??___flmul+1)^0,c
 12047  0028A4  2621               	addwf	??___flmul^0,f,c
 12048  0028A6  0E00               	movlw	0
 12049  0028A8  2222               	addwfc	(??___flmul+1)^0,f,c
 12050  0028AA  0E82               	movlw	130
 12051  0028AC  2421               	addwf	??___flmul^0,w,c
 12052  0028AE  6E30               	movwf	___flmul@temp^0,c
 12053  0028B0  0EFF               	movlw	255
 12054  0028B2  2022               	addwfc	(??___flmul+1)^0,w,c
 12055  0028B4  6E31               	movwf	(___flmul@temp+1)^0,c
 12056  0028B6  EF72  F014         	goto	l8250
 12057  0028BA                     l8244:
 12058  0028BA  90D8               	bcf	status,0,c
 12059  0028BC  362C               	rlcf	___flmul@prod^0,f,c
 12060  0028BE  362D               	rlcf	(___flmul@prod+1)^0,f,c
 12061  0028C0  362E               	rlcf	(___flmul@prod+2)^0,f,c
 12062  0028C2  362F               	rlcf	(___flmul@prod+3)^0,f,c
 12063  0028C4  AE2A               	btfss	(___flmul@grs+3)^0,7,c
 12064  0028C6  EF67  F014         	goto	u10081
 12065  0028CA  EF69  F014         	goto	u10080
 12066  0028CE                     u10081:
 12067  0028CE  EF6A  F014         	goto	l1586
 12068  0028D2                     u10080:
 12069  0028D2  802C               	bsf	___flmul@prod^0,0,c
 12070  0028D4                     l1586:
 12071  0028D4  90D8               	bcf	status,0,c
 12072  0028D6  3627               	rlcf	___flmul@grs^0,f,c
 12073  0028D8  3628               	rlcf	(___flmul@grs+1)^0,f,c
 12074  0028DA  3629               	rlcf	(___flmul@grs+2)^0,f,c
 12075  0028DC  362A               	rlcf	(___flmul@grs+3)^0,f,c
 12076  0028DE  0630               	decf	___flmul@temp^0,f,c
 12077  0028E0  A0D8               	btfss	status,0,c
 12078  0028E2  0631               	decf	(___flmul@temp+1)^0,f,c
 12079  0028E4                     l8250:
 12080  0028E4  AE2E               	btfss	(___flmul@prod+2)^0,7,c
 12081  0028E6  EF77  F014         	goto	u10091
 12082  0028EA  EF79  F014         	goto	u10090
 12083  0028EE                     u10091:
 12084  0028EE  EF5D  F014         	goto	l8244
 12085  0028F2                     u10090:
 12086  0028F2  0E00               	movlw	0
 12087  0028F4  6E26               	movwf	___flmul@aexp^0,c
 12088  0028F6  AE2A               	btfss	(___flmul@grs+3)^0,7,c
 12089  0028F8  EF80  F014         	goto	u10101
 12090  0028FC  EF82  F014         	goto	u10100
 12091  002900                     u10101:
 12092  002900  EFA6  F014         	goto	l1588
 12093  002904                     u10100:
 12094  002904  0EFF               	movlw	255
 12095  002906  1427               	andwf	___flmul@grs^0,w,c
 12096  002908  6E21               	movwf	??___flmul^0,c
 12097  00290A  0EFF               	movlw	255
 12098  00290C  1428               	andwf	(___flmul@grs+1)^0,w,c
 12099  00290E  6E22               	movwf	(??___flmul+1)^0,c
 12100  002910  0EFF               	movlw	255
 12101  002912  1429               	andwf	(___flmul@grs+2)^0,w,c
 12102  002914  6E23               	movwf	(??___flmul+2)^0,c
 12103  002916  0E7F               	movlw	127
 12104  002918  142A               	andwf	(___flmul@grs+3)^0,w,c
 12105  00291A  6E24               	movwf	(??___flmul+3)^0,c
 12106  00291C  5021               	movf	??___flmul^0,w,c
 12107  00291E  1022               	iorwf	(??___flmul+1)^0,w,c
 12108  002920  1023               	iorwf	(??___flmul+2)^0,w,c
 12109  002922  1024               	iorwf	(??___flmul+3)^0,w,c
 12110  002924  B4D8               	btfsc	status,2,c
 12111  002926  EF97  F014         	goto	u10111
 12112  00292A  EF99  F014         	goto	u10110
 12113  00292E                     u10111:
 12114  00292E  EF9D  F014         	goto	l1589
 12115  002932                     u10110:
 12116  002932                     l8258:
 12117  002932  0E01               	movlw	1
 12118  002934  6E26               	movwf	___flmul@aexp^0,c
 12119  002936  EFA6  F014         	goto	l1588
 12120  00293A                     l1589:
 12121  00293A  A02C               	btfss	___flmul@prod^0,0,c
 12122  00293C  EFA2  F014         	goto	u10121
 12123  002940  EFA4  F014         	goto	u10120
 12124  002944                     u10121:
 12125  002944  EFA6  F014         	goto	l1588
 12126  002948                     u10120:
 12127  002948  EF99  F014         	goto	l8258
 12128  00294C                     l1588:
 12129  00294C  5026               	movf	___flmul@aexp^0,w,c
 12130  00294E  B4D8               	btfsc	status,2,c
 12131  002950  EFAC  F014         	goto	u10131
 12132  002954  EFAE  F014         	goto	u10130
 12133  002958                     u10131:
 12134  002958  EFD2  F014         	goto	l8270
 12135  00295C                     u10130:
 12136  00295C  0E01               	movlw	1
 12137  00295E  262C               	addwf	___flmul@prod^0,f,c
 12138  002960  0E00               	movlw	0
 12139  002962  222D               	addwfc	(___flmul@prod+1)^0,f,c
 12140  002964  222E               	addwfc	(___flmul@prod+2)^0,f,c
 12141  002966  222F               	addwfc	(___flmul@prod+3)^0,f,c
 12142  002968  A02F               	btfss	(___flmul@prod+3)^0,0,c
 12143  00296A  EFB9  F014         	goto	u10141
 12144  00296E  EFBB  F014         	goto	u10140
 12145  002972                     u10141:
 12146  002972  EFD2  F014         	goto	l8270
 12147  002976                     u10140:
 12148  002976  C02C  F021         	movff	___flmul@prod,??___flmul
 12149  00297A  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
 12150  00297E  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
 12151  002982  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
 12152  002986  3424               	rlcf	(??___flmul+3)^0,w,c
 12153  002988  3224               	rrcf	(??___flmul+3)^0,f,c
 12154  00298A  3223               	rrcf	(??___flmul+2)^0,f,c
 12155  00298C  3222               	rrcf	(??___flmul+1)^0,f,c
 12156  00298E  3221               	rrcf	??___flmul^0,f,c
 12157  002990  C021  F02C         	movff	??___flmul,___flmul@prod
 12158  002994  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
 12159  002998  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
 12160  00299C  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
 12161  0029A0  4A30               	infsnz	___flmul@temp^0,f,c
 12162  0029A2  2A31               	incf	(___flmul@temp+1)^0,f,c
 12163  0029A4                     l8270:
 12164  0029A4  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 12165  0029A6  EFDD  F014         	goto	u10151
 12166  0029AA  5031               	movf	(___flmul@temp+1)^0,w,c
 12167  0029AC  E108               	bnz	u10150
 12168  0029AE  2830               	incf	___flmul@temp^0,w,c
 12169  0029B0  A0D8               	btfss	status,0,c
 12170  0029B2  EFDD  F014         	goto	u10151
 12171  0029B6  EFDF  F014         	goto	u10150
 12172  0029BA                     u10151:
 12173  0029BA  EFE9  F014         	goto	l8274
 12174  0029BE                     u10150:
 12175  0029BE  0E00               	movlw	0
 12176  0029C0  6E2C               	movwf	___flmul@prod^0,c
 12177  0029C2  0E00               	movlw	0
 12178  0029C4  6E2D               	movwf	(___flmul@prod+1)^0,c
 12179  0029C6  0E80               	movlw	128
 12180  0029C8  6E2E               	movwf	(___flmul@prod+2)^0,c
 12181  0029CA  0E7F               	movlw	127
 12182  0029CC  6E2F               	movwf	(___flmul@prod+3)^0,c
 12183  0029CE  EF17  F015         	goto	l8286
 12184  0029D2                     l8274:
 12185  0029D2  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 12186  0029D4  EFF6  F014         	goto	u10160
 12187  0029D8  5031               	movf	(___flmul@temp+1)^0,w,c
 12188  0029DA  E106               	bnz	u10161
 12189  0029DC  0430               	decf	___flmul@temp^0,w,c
 12190  0029DE  B0D8               	btfsc	status,0,c
 12191  0029E0  EFF4  F014         	goto	u10161
 12192  0029E4  EFF6  F014         	goto	u10160
 12193  0029E8                     u10161:
 12194  0029E8  EF02  F015         	goto	l1596
 12195  0029EC                     u10160:
 12196  0029EC  0E00               	movlw	0
 12197  0029EE  6E2C               	movwf	___flmul@prod^0,c
 12198  0029F0  0E00               	movlw	0
 12199  0029F2  6E2D               	movwf	(___flmul@prod+1)^0,c
 12200  0029F4  0E00               	movlw	0
 12201  0029F6  6E2E               	movwf	(___flmul@prod+2)^0,c
 12202  0029F8  0E00               	movlw	0
 12203  0029FA  6E2F               	movwf	(___flmul@prod+3)^0,c
 12204  0029FC  0E00               	movlw	0
 12205  0029FE  6E25               	movwf	___flmul@sign^0,c
 12206  002A00  EF17  F015         	goto	l8286
 12207  002A04                     l1596:
 12208  002A04  C030  F02B         	movff	___flmul@temp,___flmul@bexp
 12209  002A08  0EFF               	movlw	255
 12210  002A0A  162C               	andwf	___flmul@prod^0,f,c
 12211  002A0C  0EFF               	movlw	255
 12212  002A0E  162D               	andwf	(___flmul@prod+1)^0,f,c
 12213  002A10  0E7F               	movlw	127
 12214  002A12  162E               	andwf	(___flmul@prod+2)^0,f,c
 12215  002A14  0E00               	movlw	0
 12216  002A16  162F               	andwf	(___flmul@prod+3)^0,f,c
 12217  002A18  A02B               	btfss	___flmul@bexp^0,0,c
 12218  002A1A  EF11  F015         	goto	u10171
 12219  002A1E  EF13  F015         	goto	u10170
 12220  002A22                     u10171:
 12221  002A22  EF14  F015         	goto	l8284
 12222  002A26                     u10170:
 12223  002A26  8E2E               	bsf	(___flmul@prod+2)^0,7,c
 12224  002A28                     l8284:
 12225  002A28  90D8               	bcf	status,0,c
 12226  002A2A  302B               	rrcf	___flmul@bexp^0,w,c
 12227  002A2C  6E2F               	movwf	(___flmul@prod+3)^0,c
 12228  002A2E                     l8286:
 12229  002A2E  5025               	movf	___flmul@sign^0,w,c
 12230  002A30  122F               	iorwf	(___flmul@prod+3)^0,f,c
 12231  002A32  C02C  F019         	movff	___flmul@prod,?___flmul
 12232  002A36  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
 12233  002A3A  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
 12234  002A3E  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
 12235  002A42                     l1583:
 12236  002A42  0012               	return		;funcret
 12237  002A44                     __end_of___flmul:
 12238                           	opt callstack 0
 12239                           
 12240 ;; *************** function ___flge *****************
 12241 ;; Defined at:
 12242 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;  ff1             4   49[COMRAM] unsigned char 
 12245 ;;  ff2             4   53[COMRAM] unsigned char 
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;		None
 12248 ;; Return value:  Size  Location     Type
 12249 ;;		None               void
 12250 ;; Registers used:
 12251 ;;		wreg, status,2, status,0
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12257 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12259 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12260 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12261 ;;Total ram usage:       12 bytes
 12262 ;; Hardware stack levels used:    1
 12263 ;; Hardware stack levels required when called:    5
 12264 ;; This function calls:
 12265 ;;		Nothing
 12266 ;; This function is called by:
 12267 ;;		_efgtoa
 12268 ;; This function uses a non-reentrant model
 12269 ;;
 12270                           
 12271                           	psect	text26
 12272  004F60                     __ptext26:
 12273                           	opt callstack 0
 12274  004F60                     ___flge:
 12275                           	opt callstack 20
 12276  004F60  0E00               	movlw	0
 12277  004F62  1432               	andwf	___flge@ff1^0,w,c
 12278  004F64  6E3A               	movwf	??___flge^0,c
 12279  004F66  0E00               	movlw	0
 12280  004F68  1433               	andwf	(___flge@ff1+1)^0,w,c
 12281  004F6A  6E3B               	movwf	(??___flge+1)^0,c
 12282  004F6C  0E80               	movlw	128
 12283  004F6E  1434               	andwf	(___flge@ff1+2)^0,w,c
 12284  004F70  6E3C               	movwf	(??___flge+2)^0,c
 12285  004F72  0E7F               	movlw	127
 12286  004F74  1435               	andwf	(___flge@ff1+3)^0,w,c
 12287  004F76  6E3D               	movwf	(??___flge+3)^0,c
 12288  004F78  503A               	movf	??___flge^0,w,c
 12289  004F7A  103B               	iorwf	(??___flge+1)^0,w,c
 12290  004F7C  103C               	iorwf	(??___flge+2)^0,w,c
 12291  004F7E  103D               	iorwf	(??___flge+3)^0,w,c
 12292  004F80  A4D8               	btfss	status,2,c
 12293  004F82  EFC5  F027         	goto	u10331
 12294  004F86  EFC7  F027         	goto	u10330
 12295  004F8A                     u10331:
 12296  004F8A  EFCF  F027         	goto	l8398
 12297  004F8E                     u10330:
 12298  004F8E  0E00               	movlw	0
 12299  004F90  6E32               	movwf	___flge@ff1^0,c
 12300  004F92  0E00               	movlw	0
 12301  004F94  6E33               	movwf	(___flge@ff1+1)^0,c
 12302  004F96  0E00               	movlw	0
 12303  004F98  6E34               	movwf	(___flge@ff1+2)^0,c
 12304  004F9A  0E00               	movlw	0
 12305  004F9C  6E35               	movwf	(___flge@ff1+3)^0,c
 12306  004F9E                     l8398:
 12307  004F9E  0E00               	movlw	0
 12308  004FA0  1436               	andwf	___flge@ff2^0,w,c
 12309  004FA2  6E3A               	movwf	??___flge^0,c
 12310  004FA4  0E00               	movlw	0
 12311  004FA6  1437               	andwf	(___flge@ff2+1)^0,w,c
 12312  004FA8  6E3B               	movwf	(??___flge+1)^0,c
 12313  004FAA  0E80               	movlw	128
 12314  004FAC  1438               	andwf	(___flge@ff2+2)^0,w,c
 12315  004FAE  6E3C               	movwf	(??___flge+2)^0,c
 12316  004FB0  0E7F               	movlw	127
 12317  004FB2  1439               	andwf	(___flge@ff2+3)^0,w,c
 12318  004FB4  6E3D               	movwf	(??___flge+3)^0,c
 12319  004FB6  503A               	movf	??___flge^0,w,c
 12320  004FB8  103B               	iorwf	(??___flge+1)^0,w,c
 12321  004FBA  103C               	iorwf	(??___flge+2)^0,w,c
 12322  004FBC  103D               	iorwf	(??___flge+3)^0,w,c
 12323  004FBE  A4D8               	btfss	status,2,c
 12324  004FC0  EFE4  F027         	goto	u10341
 12325  004FC4  EFE6  F027         	goto	u10340
 12326  004FC8                     u10341:
 12327  004FC8  EFEE  F027         	goto	l8402
 12328  004FCC                     u10340:
 12329  004FCC  0E00               	movlw	0
 12330  004FCE  6E36               	movwf	___flge@ff2^0,c
 12331  004FD0  0E00               	movlw	0
 12332  004FD2  6E37               	movwf	(___flge@ff2+1)^0,c
 12333  004FD4  0E00               	movlw	0
 12334  004FD6  6E38               	movwf	(___flge@ff2+2)^0,c
 12335  004FD8  0E00               	movlw	0
 12336  004FDA  6E39               	movwf	(___flge@ff2+3)^0,c
 12337  004FDC                     l8402:
 12338  004FDC  AE35               	btfss	(___flge@ff1+3)^0,7,c
 12339  004FDE  EFF3  F027         	goto	u10351
 12340  004FE2  EFF5  F027         	goto	u10350
 12341  004FE6                     u10351:
 12342  004FE6  EFFE  F027         	goto	l8406
 12343  004FEA                     u10350:
 12344  004FEA  6C32               	negf	___flge@ff1^0,c
 12345  004FEC  1E33               	comf	(___flge@ff1+1)^0,f,c
 12346  004FEE  B0D8               	btfsc	status,0,c
 12347  004FF0  2A33               	incf	(___flge@ff1+1)^0,f,c
 12348  004FF2  1E34               	comf	(___flge@ff1+2)^0,f,c
 12349  004FF4  B0D8               	btfsc	status,0,c
 12350  004FF6  2A34               	incf	(___flge@ff1+2)^0,f,c
 12351  004FF8  0E80               	movlw	128
 12352  004FFA  5635               	subfwb	(___flge@ff1+3)^0,f,c
 12353  004FFC                     l8406:
 12354  004FFC  AE39               	btfss	(___flge@ff2+3)^0,7,c
 12355  004FFE  EF03  F028         	goto	u10361
 12356  005002  EF05  F028         	goto	u10360
 12357  005006                     u10361:
 12358  005006  EF0E  F028         	goto	l1230
 12359  00500A                     u10360:
 12360  00500A  6C36               	negf	___flge@ff2^0,c
 12361  00500C  1E37               	comf	(___flge@ff2+1)^0,f,c
 12362  00500E  B0D8               	btfsc	status,0,c
 12363  005010  2A37               	incf	(___flge@ff2+1)^0,f,c
 12364  005012  1E38               	comf	(___flge@ff2+2)^0,f,c
 12365  005014  B0D8               	btfsc	status,0,c
 12366  005016  2A38               	incf	(___flge@ff2+2)^0,f,c
 12367  005018  0E80               	movlw	128
 12368  00501A  5639               	subfwb	(___flge@ff2+3)^0,f,c
 12369  00501C                     l1230:
 12370  00501C  0E00               	movlw	0
 12371  00501E  1A32               	xorwf	___flge@ff1^0,f,c
 12372  005020  0E00               	movlw	0
 12373  005022  1A33               	xorwf	(___flge@ff1+1)^0,f,c
 12374  005024  0E00               	movlw	0
 12375  005026  1A34               	xorwf	(___flge@ff1+2)^0,f,c
 12376  005028  0E80               	movlw	128
 12377  00502A  1A35               	xorwf	(___flge@ff1+3)^0,f,c
 12378  00502C  0E00               	movlw	0
 12379  00502E  1A36               	xorwf	___flge@ff2^0,f,c
 12380  005030  0E00               	movlw	0
 12381  005032  1A37               	xorwf	(___flge@ff2+1)^0,f,c
 12382  005034  0E00               	movlw	0
 12383  005036  1A38               	xorwf	(___flge@ff2+2)^0,f,c
 12384  005038  0E80               	movlw	128
 12385  00503A  1A39               	xorwf	(___flge@ff2+3)^0,f,c
 12386  00503C  5036               	movf	___flge@ff2^0,w,c
 12387  00503E  5C32               	subwf	___flge@ff1^0,w,c
 12388  005040  5037               	movf	(___flge@ff2+1)^0,w,c
 12389  005042  5833               	subwfb	(___flge@ff1+1)^0,w,c
 12390  005044  5038               	movf	(___flge@ff2+2)^0,w,c
 12391  005046  5834               	subwfb	(___flge@ff1+2)^0,w,c
 12392  005048  5039               	movf	(___flge@ff2+3)^0,w,c
 12393  00504A  5835               	subwfb	(___flge@ff1+3)^0,w,c
 12394  00504C  B0D8               	btfsc	status,0,c
 12395  00504E  EF2B  F028         	goto	u10371
 12396  005052  EF2D  F028         	goto	u10370
 12397  005056                     u10371:
 12398  005056  EF30  F028         	goto	l8412
 12399  00505A                     u10370:
 12400  00505A  90D8               	bcf	status,0,c
 12401  00505C  EF31  F028         	goto	l1235
 12402  005060                     l8412:
 12403  005060  80D8               	bsf	status,0,c
 12404  005062                     l1235:
 12405  005062  0012               	return		;funcret
 12406  005064                     __end_of___flge:
 12407                           	opt callstack 0
 12408                           
 12409 ;; *************** function ___fleq *****************
 12410 ;; Defined at:
 12411 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12412 ;; Parameters:    Size  Location     Type
 12413 ;;  ff1             4   10[COMRAM] unsigned char 
 12414 ;;  ff2             4   14[COMRAM] unsigned char 
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;		None
 12417 ;; Return value:  Size  Location     Type
 12418 ;;		None               void
 12419 ;; Registers used:
 12420 ;;		wreg, status,2, status,0
 12421 ;; Tracked objects:
 12422 ;;		On entry : 0/0
 12423 ;;		On exit  : 0/0
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12426 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12429 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12430 ;;Total ram usage:       12 bytes
 12431 ;; Hardware stack levels used:    1
 12432 ;; Hardware stack levels required when called:    5
 12433 ;; This function calls:
 12434 ;;		Nothing
 12435 ;; This function is called by:
 12436 ;;		_efgtoa
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text27
 12441  0056D2                     __ptext27:
 12442                           	opt callstack 0
 12443  0056D2                     ___fleq:
 12444                           	opt callstack 20
 12445  0056D2  0E00               	movlw	0
 12446  0056D4  140B               	andwf	___fleq@ff1^0,w,c
 12447  0056D6  6E13               	movwf	??___fleq^0,c
 12448  0056D8  0E00               	movlw	0
 12449  0056DA  140C               	andwf	(___fleq@ff1+1)^0,w,c
 12450  0056DC  6E14               	movwf	(??___fleq+1)^0,c
 12451  0056DE  0E80               	movlw	128
 12452  0056E0  140D               	andwf	(___fleq@ff1+2)^0,w,c
 12453  0056E2  6E15               	movwf	(??___fleq+2)^0,c
 12454  0056E4  0E7F               	movlw	127
 12455  0056E6  140E               	andwf	(___fleq@ff1+3)^0,w,c
 12456  0056E8  6E16               	movwf	(??___fleq+3)^0,c
 12457  0056EA  5013               	movf	??___fleq^0,w,c
 12458  0056EC  1014               	iorwf	(??___fleq+1)^0,w,c
 12459  0056EE  1015               	iorwf	(??___fleq+2)^0,w,c
 12460  0056F0  1016               	iorwf	(??___fleq+3)^0,w,c
 12461  0056F2  A4D8               	btfss	status,2,c
 12462  0056F4  EF7E  F02B         	goto	u10301
 12463  0056F8  EF80  F02B         	goto	u10300
 12464  0056FC                     u10301:
 12465  0056FC  EF88  F02B         	goto	l8382
 12466  005700                     u10300:
 12467  005700  0E00               	movlw	0
 12468  005702  6E0B               	movwf	___fleq@ff1^0,c
 12469  005704  0E00               	movlw	0
 12470  005706  6E0C               	movwf	(___fleq@ff1+1)^0,c
 12471  005708  0E00               	movlw	0
 12472  00570A  6E0D               	movwf	(___fleq@ff1+2)^0,c
 12473  00570C  0E00               	movlw	0
 12474  00570E  6E0E               	movwf	(___fleq@ff1+3)^0,c
 12475  005710                     l8382:
 12476  005710  0E00               	movlw	0
 12477  005712  140F               	andwf	___fleq@ff2^0,w,c
 12478  005714  6E13               	movwf	??___fleq^0,c
 12479  005716  0E00               	movlw	0
 12480  005718  1410               	andwf	(___fleq@ff2+1)^0,w,c
 12481  00571A  6E14               	movwf	(??___fleq+1)^0,c
 12482  00571C  0E80               	movlw	128
 12483  00571E  1411               	andwf	(___fleq@ff2+2)^0,w,c
 12484  005720  6E15               	movwf	(??___fleq+2)^0,c
 12485  005722  0E7F               	movlw	127
 12486  005724  1412               	andwf	(___fleq@ff2+3)^0,w,c
 12487  005726  6E16               	movwf	(??___fleq+3)^0,c
 12488  005728  5013               	movf	??___fleq^0,w,c
 12489  00572A  1014               	iorwf	(??___fleq+1)^0,w,c
 12490  00572C  1015               	iorwf	(??___fleq+2)^0,w,c
 12491  00572E  1016               	iorwf	(??___fleq+3)^0,w,c
 12492  005730  A4D8               	btfss	status,2,c
 12493  005732  EF9D  F02B         	goto	u10311
 12494  005736  EF9F  F02B         	goto	u10310
 12495  00573A                     u10311:
 12496  00573A  EFA7  F02B         	goto	l8386
 12497  00573E                     u10310:
 12498  00573E  0E00               	movlw	0
 12499  005740  6E0F               	movwf	___fleq@ff2^0,c
 12500  005742  0E00               	movlw	0
 12501  005744  6E10               	movwf	(___fleq@ff2+1)^0,c
 12502  005746  0E00               	movlw	0
 12503  005748  6E11               	movwf	(___fleq@ff2+2)^0,c
 12504  00574A  0E00               	movlw	0
 12505  00574C  6E12               	movwf	(___fleq@ff2+3)^0,c
 12506  00574E                     l8386:
 12507  00574E  500F               	movf	___fleq@ff2^0,w,c
 12508  005750  180B               	xorwf	___fleq@ff1^0,w,c
 12509  005752  E10F               	bnz	u10320
 12510  005754  5010               	movf	(___fleq@ff2+1)^0,w,c
 12511  005756  180C               	xorwf	(___fleq@ff1+1)^0,w,c
 12512  005758  E10C               	bnz	u10320
 12513  00575A  5011               	movf	(___fleq@ff2+2)^0,w,c
 12514  00575C  180D               	xorwf	(___fleq@ff1+2)^0,w,c
 12515  00575E  E109               	bnz	u10320
 12516  005760  5012               	movf	(___fleq@ff2+3)^0,w,c
 12517  005762  180E               	xorwf	(___fleq@ff1+3)^0,w,c
 12518  005764  B4D8               	btfsc	status,2,c
 12519  005766  EFB7  F02B         	goto	u10321
 12520  00576A  EFB9  F02B         	goto	u10320
 12521  00576E                     u10321:
 12522  00576E  EFBC  F02B         	goto	l8390
 12523  005772                     u10320:
 12524  005772  90D8               	bcf	status,0,c
 12525  005774  EFBD  F02B         	goto	l1224
 12526  005778                     l8390:
 12527  005778  80D8               	bsf	status,0,c
 12528  00577A                     l1224:
 12529  00577A  0012               	return		;funcret
 12530  00577C                     __end_of___fleq:
 12531                           	opt callstack 0
 12532                           
 12533 ;; *************** function ___fldiv *****************
 12534 ;; Defined at:
 12535 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  b               4   10[COMRAM] unsigned char 
 12538 ;;  a               4   14[COMRAM] unsigned char 
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;  grs             4   29[COMRAM] unsigned long 
 12541 ;;  rem             4   22[COMRAM] unsigned long 
 12542 ;;  new_exp         2   27[COMRAM] short 
 12543 ;;  aexp            1   34[COMRAM] unsigned char 
 12544 ;;  bexp            1   33[COMRAM] unsigned char 
 12545 ;;  sign            1   26[COMRAM] unsigned char 
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  4   10[COMRAM] unsigned char 
 12548 ;; Registers used:
 12549 ;;		wreg, status,2, status,0
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12555 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12556 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12557 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12558 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12559 ;;Total ram usage:       25 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    5
 12562 ;; This function calls:
 12563 ;;		Nothing
 12564 ;; This function is called by:
 12565 ;;		_efgtoa
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569                           	psect	text28
 12570  002A44                     __ptext28:
 12571                           	opt callstack 0
 12572  002A44                     ___fldiv:
 12573                           	opt callstack 20
 12574  002A44  500E               	movf	(___fldiv@b+3)^0,w,c
 12575  002A46  0B80               	andlw	128
 12576  002A48  6E1B               	movwf	___fldiv@sign^0,c
 12577  002A4A  500E               	movf	(___fldiv@b+3)^0,w,c
 12578  002A4C  240E               	addwf	(___fldiv@b+3)^0,w,c
 12579  002A4E  6E22               	movwf	___fldiv@bexp^0,c
 12580  002A50  AE0D               	btfss	(___fldiv@b+2)^0,7,c
 12581  002A52  EF2D  F015         	goto	u9761
 12582  002A56  EF2F  F015         	goto	u9760
 12583  002A5A                     u9761:
 12584  002A5A  EF30  F015         	goto	l8030
 12585  002A5E                     u9760:
 12586  002A5E  8022               	bsf	___fldiv@bexp^0,0,c
 12587  002A60                     l8030:
 12588  002A60  5022               	movf	___fldiv@bexp^0,w,c
 12589  002A62  B4D8               	btfsc	status,2,c
 12590  002A64  EF36  F015         	goto	u9771
 12591  002A68  EF38  F015         	goto	u9770
 12592  002A6C                     u9771:
 12593  002A6C  EF4D  F015         	goto	l8040
 12594  002A70                     u9770:
 12595  002A70  2822               	incf	___fldiv@bexp^0,w,c
 12596  002A72  A4D8               	btfss	status,2,c
 12597  002A74  EF3E  F015         	goto	u9781
 12598  002A78  EF40  F015         	goto	u9780
 12599  002A7C                     u9781:
 12600  002A7C  EF48  F015         	goto	l8036
 12601  002A80                     u9780:
 12602  002A80  0E00               	movlw	0
 12603  002A82  6E0B               	movwf	___fldiv@b^0,c
 12604  002A84  0E00               	movlw	0
 12605  002A86  6E0C               	movwf	(___fldiv@b+1)^0,c
 12606  002A88  0E00               	movlw	0
 12607  002A8A  6E0D               	movwf	(___fldiv@b+2)^0,c
 12608  002A8C  0E00               	movlw	0
 12609  002A8E  6E0E               	movwf	(___fldiv@b+3)^0,c
 12610  002A90                     l8036:
 12611  002A90  8E0D               	bsf	(___fldiv@b+2)^0,7,c
 12612  002A92  0E00               	movlw	0
 12613  002A94  6E0E               	movwf	(___fldiv@b+3)^0,c
 12614  002A96  EF55  F015         	goto	l8042
 12615  002A9A                     l8040:
 12616  002A9A  0E00               	movlw	0
 12617  002A9C  6E0B               	movwf	___fldiv@b^0,c
 12618  002A9E  0E00               	movlw	0
 12619  002AA0  6E0C               	movwf	(___fldiv@b+1)^0,c
 12620  002AA2  0E00               	movlw	0
 12621  002AA4  6E0D               	movwf	(___fldiv@b+2)^0,c
 12622  002AA6  0E00               	movlw	0
 12623  002AA8  6E0E               	movwf	(___fldiv@b+3)^0,c
 12624  002AAA                     l8042:
 12625  002AAA  5012               	movf	(___fldiv@a+3)^0,w,c
 12626  002AAC  0B80               	andlw	128
 12627  002AAE  1A1B               	xorwf	___fldiv@sign^0,f,c
 12628  002AB0  5012               	movf	(___fldiv@a+3)^0,w,c
 12629  002AB2  2412               	addwf	(___fldiv@a+3)^0,w,c
 12630  002AB4  6E23               	movwf	___fldiv@aexp^0,c
 12631  002AB6  AE11               	btfss	(___fldiv@a+2)^0,7,c
 12632  002AB8  EF60  F015         	goto	u9791
 12633  002ABC  EF62  F015         	goto	u9790
 12634  002AC0                     u9791:
 12635  002AC0  EF63  F015         	goto	l8050
 12636  002AC4                     u9790:
 12637  002AC4  8023               	bsf	___fldiv@aexp^0,0,c
 12638  002AC6                     l8050:
 12639  002AC6  5023               	movf	___fldiv@aexp^0,w,c
 12640  002AC8  B4D8               	btfsc	status,2,c
 12641  002ACA  EF69  F015         	goto	u9801
 12642  002ACE  EF6B  F015         	goto	u9800
 12643  002AD2                     u9801:
 12644  002AD2  EF80  F015         	goto	l8060
 12645  002AD6                     u9800:
 12646  002AD6  2823               	incf	___fldiv@aexp^0,w,c
 12647  002AD8  A4D8               	btfss	status,2,c
 12648  002ADA  EF71  F015         	goto	u9811
 12649  002ADE  EF73  F015         	goto	u9810
 12650  002AE2                     u9811:
 12651  002AE2  EF7B  F015         	goto	l8056
 12652  002AE6                     u9810:
 12653  002AE6  0E00               	movlw	0
 12654  002AE8  6E0F               	movwf	___fldiv@a^0,c
 12655  002AEA  0E00               	movlw	0
 12656  002AEC  6E10               	movwf	(___fldiv@a+1)^0,c
 12657  002AEE  0E00               	movlw	0
 12658  002AF0  6E11               	movwf	(___fldiv@a+2)^0,c
 12659  002AF2  0E00               	movlw	0
 12660  002AF4  6E12               	movwf	(___fldiv@a+3)^0,c
 12661  002AF6                     l8056:
 12662  002AF6  8E11               	bsf	(___fldiv@a+2)^0,7,c
 12663  002AF8  0E00               	movlw	0
 12664  002AFA  6E12               	movwf	(___fldiv@a+3)^0,c
 12665  002AFC  EF88  F015         	goto	l8062
 12666  002B00                     l8060:
 12667  002B00  0E00               	movlw	0
 12668  002B02  6E0F               	movwf	___fldiv@a^0,c
 12669  002B04  0E00               	movlw	0
 12670  002B06  6E10               	movwf	(___fldiv@a+1)^0,c
 12671  002B08  0E00               	movlw	0
 12672  002B0A  6E11               	movwf	(___fldiv@a+2)^0,c
 12673  002B0C  0E00               	movlw	0
 12674  002B0E  6E12               	movwf	(___fldiv@a+3)^0,c
 12675  002B10                     l8062:
 12676  002B10  500F               	movf	___fldiv@a^0,w,c
 12677  002B12  1010               	iorwf	(___fldiv@a+1)^0,w,c
 12678  002B14  1011               	iorwf	(___fldiv@a+2)^0,w,c
 12679  002B16  1012               	iorwf	(___fldiv@a+3)^0,w,c
 12680  002B18  A4D8               	btfss	status,2,c
 12681  002B1A  EF91  F015         	goto	u9821
 12682  002B1E  EF93  F015         	goto	u9820
 12683  002B22                     u9821:
 12684  002B22  EFAB  F015         	goto	l8074
 12685  002B26                     u9820:
 12686  002B26  0E00               	movlw	0
 12687  002B28  6E0B               	movwf	___fldiv@b^0,c
 12688  002B2A  0E00               	movlw	0
 12689  002B2C  6E0C               	movwf	(___fldiv@b+1)^0,c
 12690  002B2E  0E00               	movlw	0
 12691  002B30  6E0D               	movwf	(___fldiv@b+2)^0,c
 12692  002B32  0E00               	movlw	0
 12693  002B34  6E0E               	movwf	(___fldiv@b+3)^0,c
 12694  002B36  0E80               	movlw	128
 12695  002B38  120D               	iorwf	(___fldiv@b+2)^0,f,c
 12696  002B3A  0E7F               	movlw	127
 12697  002B3C  120E               	iorwf	(___fldiv@b+3)^0,f,c
 12698  002B3E                     l8068:
 12699  002B3E  501B               	movf	___fldiv@sign^0,w,c
 12700  002B40  120E               	iorwf	(___fldiv@b+3)^0,f,c
 12701  002B42  C00B  F00B         	movff	___fldiv@b,?___fldiv
 12702  002B46  C00C  F00C         	movff	___fldiv@b+1,?___fldiv+1
 12703  002B4A  C00D  F00D         	movff	___fldiv@b+2,?___fldiv+2
 12704  002B4E  C00E  F00E         	movff	___fldiv@b+3,?___fldiv+3
 12705  002B52  EFEE  F016         	goto	l1547
 12706  002B56                     l8074:
 12707  002B56  5022               	movf	___fldiv@bexp^0,w,c
 12708  002B58  A4D8               	btfss	status,2,c
 12709  002B5A  EFB1  F015         	goto	u9831
 12710  002B5E  EFB3  F015         	goto	u9830
 12711  002B62                     u9831:
 12712  002B62  EFBD  F015         	goto	l8082
 12713  002B66                     u9830:
 12714  002B66  0E00               	movlw	0
 12715  002B68  6E0B               	movwf	?___fldiv^0,c
 12716  002B6A  0E00               	movlw	0
 12717  002B6C  6E0C               	movwf	(?___fldiv+1)^0,c
 12718  002B6E  0E00               	movlw	0
 12719  002B70  6E0D               	movwf	(?___fldiv+2)^0,c
 12720  002B72  0E00               	movlw	0
 12721  002B74  6E0E               	movwf	(?___fldiv+3)^0,c
 12722  002B76  EFEE  F016         	goto	l1547
 12723  002B7A                     l8082:
 12724  002B7A  5023               	movf	___fldiv@aexp^0,w,c
 12725  002B7C  C022  F013         	movff	___fldiv@bexp,??___fldiv
 12726  002B80  6A14               	clrf	(??___fldiv+1)^0,c
 12727  002B82  5E13               	subwf	??___fldiv^0,f,c
 12728  002B84  0E00               	movlw	0
 12729  002B86  5A14               	subwfb	(??___fldiv+1)^0,f,c
 12730  002B88  0E7F               	movlw	127
 12731  002B8A  2413               	addwf	??___fldiv^0,w,c
 12732  002B8C  6E1C               	movwf	___fldiv@new_exp^0,c
 12733  002B8E  0E00               	movlw	0
 12734  002B90  2014               	addwfc	(??___fldiv+1)^0,w,c
 12735  002B92  6E1D               	movwf	(___fldiv@new_exp+1)^0,c
 12736  002B94  C00B  F017         	movff	___fldiv@b,___fldiv@rem
 12737  002B98  C00C  F018         	movff	___fldiv@b+1,___fldiv@rem+1
 12738  002B9C  C00D  F019         	movff	___fldiv@b+2,___fldiv@rem+2
 12739  002BA0  C00E  F01A         	movff	___fldiv@b+3,___fldiv@rem+3
 12740  002BA4  0E00               	movlw	0
 12741  002BA6  6E0B               	movwf	___fldiv@b^0,c
 12742  002BA8  0E00               	movlw	0
 12743  002BAA  6E0C               	movwf	(___fldiv@b+1)^0,c
 12744  002BAC  0E00               	movlw	0
 12745  002BAE  6E0D               	movwf	(___fldiv@b+2)^0,c
 12746  002BB0  0E00               	movlw	0
 12747  002BB2  6E0E               	movwf	(___fldiv@b+3)^0,c
 12748  002BB4  0E00               	movlw	0
 12749  002BB6  6E1E               	movwf	___fldiv@grs^0,c
 12750  002BB8  0E00               	movlw	0
 12751  002BBA  6E1F               	movwf	(___fldiv@grs+1)^0,c
 12752  002BBC  0E00               	movlw	0
 12753  002BBE  6E20               	movwf	(___fldiv@grs+2)^0,c
 12754  002BC0  0E00               	movlw	0
 12755  002BC2  6E21               	movwf	(___fldiv@grs+3)^0,c
 12756  002BC4  0E00               	movlw	0
 12757  002BC6  6E23               	movwf	___fldiv@aexp^0,c
 12758  002BC8  EF1E  F016         	goto	l1549
 12759  002BCC                     l8092:
 12760  002BCC  5023               	movf	___fldiv@aexp^0,w,c
 12761  002BCE  B4D8               	btfsc	status,2,c
 12762  002BD0  EFEC  F015         	goto	u9841
 12763  002BD4  EFEE  F015         	goto	u9840
 12764  002BD8                     u9841:
 12765  002BD8  EF05  F016         	goto	l8100
 12766  002BDC                     u9840:
 12767  002BDC  90D8               	bcf	status,0,c
 12768  002BDE  3617               	rlcf	___fldiv@rem^0,f,c
 12769  002BE0  3618               	rlcf	(___fldiv@rem+1)^0,f,c
 12770  002BE2  3619               	rlcf	(___fldiv@rem+2)^0,f,c
 12771  002BE4  361A               	rlcf	(___fldiv@rem+3)^0,f,c
 12772  002BE6  90D8               	bcf	status,0,c
 12773  002BE8  360B               	rlcf	___fldiv@b^0,f,c
 12774  002BEA  360C               	rlcf	(___fldiv@b+1)^0,f,c
 12775  002BEC  360D               	rlcf	(___fldiv@b+2)^0,f,c
 12776  002BEE  360E               	rlcf	(___fldiv@b+3)^0,f,c
 12777  002BF0  AE21               	btfss	(___fldiv@grs+3)^0,7,c
 12778  002BF2  EFFD  F015         	goto	u9851
 12779  002BF6  EFFF  F015         	goto	u9850
 12780  002BFA                     u9851:
 12781  002BFA  EF00  F016         	goto	l1552
 12782  002BFE                     u9850:
 12783  002BFE  800B               	bsf	___fldiv@b^0,0,c
 12784  002C00                     l1552:
 12785  002C00  90D8               	bcf	status,0,c
 12786  002C02  361E               	rlcf	___fldiv@grs^0,f,c
 12787  002C04  361F               	rlcf	(___fldiv@grs+1)^0,f,c
 12788  002C06  3620               	rlcf	(___fldiv@grs+2)^0,f,c
 12789  002C08  3621               	rlcf	(___fldiv@grs+3)^0,f,c
 12790  002C0A                     l8100:
 12791  002C0A  500F               	movf	___fldiv@a^0,w,c
 12792  002C0C  5C17               	subwf	___fldiv@rem^0,w,c
 12793  002C0E  5010               	movf	(___fldiv@a+1)^0,w,c
 12794  002C10  5818               	subwfb	(___fldiv@rem+1)^0,w,c
 12795  002C12  5011               	movf	(___fldiv@a+2)^0,w,c
 12796  002C14  5819               	subwfb	(___fldiv@rem+2)^0,w,c
 12797  002C16  5012               	movf	(___fldiv@a+3)^0,w,c
 12798  002C18  581A               	subwfb	(___fldiv@rem+3)^0,w,c
 12799  002C1A  A0D8               	btfss	status,0,c
 12800  002C1C  EF12  F016         	goto	u9861
 12801  002C20  EF14  F016         	goto	u9860
 12802  002C24                     u9861:
 12803  002C24  EF1D  F016         	goto	l8106
 12804  002C28                     u9860:
 12805  002C28  8C21               	bsf	(___fldiv@grs+3)^0,6,c
 12806  002C2A  500F               	movf	___fldiv@a^0,w,c
 12807  002C2C  5E17               	subwf	___fldiv@rem^0,f,c
 12808  002C2E  5010               	movf	(___fldiv@a+1)^0,w,c
 12809  002C30  5A18               	subwfb	(___fldiv@rem+1)^0,f,c
 12810  002C32  5011               	movf	(___fldiv@a+2)^0,w,c
 12811  002C34  5A19               	subwfb	(___fldiv@rem+2)^0,f,c
 12812  002C36  5012               	movf	(___fldiv@a+3)^0,w,c
 12813  002C38  5A1A               	subwfb	(___fldiv@rem+3)^0,f,c
 12814  002C3A                     l8106:
 12815  002C3A  2A23               	incf	___fldiv@aexp^0,f,c
 12816  002C3C                     l1549:
 12817  002C3C  0E19               	movlw	25
 12818  002C3E  6423               	cpfsgt	___fldiv@aexp^0,c
 12819  002C40  EF24  F016         	goto	u9871
 12820  002C44  EF26  F016         	goto	u9870
 12821  002C48                     u9871:
 12822  002C48  EFE6  F015         	goto	l8092
 12823  002C4C                     u9870:
 12824  002C4C  5017               	movf	___fldiv@rem^0,w,c
 12825  002C4E  1018               	iorwf	(___fldiv@rem+1)^0,w,c
 12826  002C50  1019               	iorwf	(___fldiv@rem+2)^0,w,c
 12827  002C52  101A               	iorwf	(___fldiv@rem+3)^0,w,c
 12828  002C54  B4D8               	btfsc	status,2,c
 12829  002C56  EF2F  F016         	goto	u9881
 12830  002C5A  EF31  F016         	goto	u9880
 12831  002C5E                     u9881:
 12832  002C5E  EF49  F016         	goto	l8118
 12833  002C62                     u9880:
 12834  002C62  801E               	bsf	___fldiv@grs^0,0,c
 12835  002C64  EF49  F016         	goto	l8118
 12836  002C68                     l8112:
 12837  002C68  90D8               	bcf	status,0,c
 12838  002C6A  360B               	rlcf	___fldiv@b^0,f,c
 12839  002C6C  360C               	rlcf	(___fldiv@b+1)^0,f,c
 12840  002C6E  360D               	rlcf	(___fldiv@b+2)^0,f,c
 12841  002C70  360E               	rlcf	(___fldiv@b+3)^0,f,c
 12842  002C72  AE21               	btfss	(___fldiv@grs+3)^0,7,c
 12843  002C74  EF3E  F016         	goto	u9891
 12844  002C78  EF40  F016         	goto	u9890
 12845  002C7C                     u9891:
 12846  002C7C  EF41  F016         	goto	l1558
 12847  002C80                     u9890:
 12848  002C80  800B               	bsf	___fldiv@b^0,0,c
 12849  002C82                     l1558:
 12850  002C82  90D8               	bcf	status,0,c
 12851  002C84  361E               	rlcf	___fldiv@grs^0,f,c
 12852  002C86  361F               	rlcf	(___fldiv@grs+1)^0,f,c
 12853  002C88  3620               	rlcf	(___fldiv@grs+2)^0,f,c
 12854  002C8A  3621               	rlcf	(___fldiv@grs+3)^0,f,c
 12855  002C8C  061C               	decf	___fldiv@new_exp^0,f,c
 12856  002C8E  A0D8               	btfss	status,0,c
 12857  002C90  061D               	decf	(___fldiv@new_exp+1)^0,f,c
 12858  002C92                     l8118:
 12859  002C92  AE0D               	btfss	(___fldiv@b+2)^0,7,c
 12860  002C94  EF4E  F016         	goto	u9901
 12861  002C98  EF50  F016         	goto	u9900
 12862  002C9C                     u9901:
 12863  002C9C  EF34  F016         	goto	l8112
 12864  002CA0                     u9900:
 12865  002CA0  0E00               	movlw	0
 12866  002CA2  6E23               	movwf	___fldiv@aexp^0,c
 12867  002CA4  AE21               	btfss	(___fldiv@grs+3)^0,7,c
 12868  002CA6  EF57  F016         	goto	u9911
 12869  002CAA  EF59  F016         	goto	u9910
 12870  002CAE                     u9911:
 12871  002CAE  EF7D  F016         	goto	l1560
 12872  002CB2                     u9910:
 12873  002CB2  0EFF               	movlw	255
 12874  002CB4  141E               	andwf	___fldiv@grs^0,w,c
 12875  002CB6  6E13               	movwf	??___fldiv^0,c
 12876  002CB8  0EFF               	movlw	255
 12877  002CBA  141F               	andwf	(___fldiv@grs+1)^0,w,c
 12878  002CBC  6E14               	movwf	(??___fldiv+1)^0,c
 12879  002CBE  0EFF               	movlw	255
 12880  002CC0  1420               	andwf	(___fldiv@grs+2)^0,w,c
 12881  002CC2  6E15               	movwf	(??___fldiv+2)^0,c
 12882  002CC4  0E7F               	movlw	127
 12883  002CC6  1421               	andwf	(___fldiv@grs+3)^0,w,c
 12884  002CC8  6E16               	movwf	(??___fldiv+3)^0,c
 12885  002CCA  5013               	movf	??___fldiv^0,w,c
 12886  002CCC  1014               	iorwf	(??___fldiv+1)^0,w,c
 12887  002CCE  1015               	iorwf	(??___fldiv+2)^0,w,c
 12888  002CD0  1016               	iorwf	(??___fldiv+3)^0,w,c
 12889  002CD2  B4D8               	btfsc	status,2,c
 12890  002CD4  EF6E  F016         	goto	u9921
 12891  002CD8  EF70  F016         	goto	u9920
 12892  002CDC                     u9921:
 12893  002CDC  EF74  F016         	goto	l1561
 12894  002CE0                     u9920:
 12895  002CE0                     l8126:
 12896  002CE0  0E01               	movlw	1
 12897  002CE2  6E23               	movwf	___fldiv@aexp^0,c
 12898  002CE4  EF7D  F016         	goto	l1560
 12899  002CE8                     l1561:
 12900  002CE8  A00B               	btfss	___fldiv@b^0,0,c
 12901  002CEA  EF79  F016         	goto	u9931
 12902  002CEE  EF7B  F016         	goto	u9930
 12903  002CF2                     u9931:
 12904  002CF2  EF7D  F016         	goto	l1560
 12905  002CF6                     u9930:
 12906  002CF6  EF70  F016         	goto	l8126
 12907  002CFA                     l1560:
 12908  002CFA  5023               	movf	___fldiv@aexp^0,w,c
 12909  002CFC  B4D8               	btfsc	status,2,c
 12910  002CFE  EF83  F016         	goto	u9941
 12911  002D02  EF85  F016         	goto	u9940
 12912  002D06                     u9941:
 12913  002D06  EFA9  F016         	goto	l8138
 12914  002D0A                     u9940:
 12915  002D0A  0E01               	movlw	1
 12916  002D0C  260B               	addwf	___fldiv@b^0,f,c
 12917  002D0E  0E00               	movlw	0
 12918  002D10  220C               	addwfc	(___fldiv@b+1)^0,f,c
 12919  002D12  220D               	addwfc	(___fldiv@b+2)^0,f,c
 12920  002D14  220E               	addwfc	(___fldiv@b+3)^0,f,c
 12921  002D16  A00E               	btfss	(___fldiv@b+3)^0,0,c
 12922  002D18  EF90  F016         	goto	u9951
 12923  002D1C  EF92  F016         	goto	u9950
 12924  002D20                     u9951:
 12925  002D20  EFA9  F016         	goto	l8138
 12926  002D24                     u9950:
 12927  002D24  C00B  F013         	movff	___fldiv@b,??___fldiv
 12928  002D28  C00C  F014         	movff	___fldiv@b+1,??___fldiv+1
 12929  002D2C  C00D  F015         	movff	___fldiv@b+2,??___fldiv+2
 12930  002D30  C00E  F016         	movff	___fldiv@b+3,??___fldiv+3
 12931  002D34  3416               	rlcf	(??___fldiv+3)^0,w,c
 12932  002D36  3216               	rrcf	(??___fldiv+3)^0,f,c
 12933  002D38  3215               	rrcf	(??___fldiv+2)^0,f,c
 12934  002D3A  3214               	rrcf	(??___fldiv+1)^0,f,c
 12935  002D3C  3213               	rrcf	??___fldiv^0,f,c
 12936  002D3E  C013  F00B         	movff	??___fldiv,___fldiv@b
 12937  002D42  C014  F00C         	movff	??___fldiv+1,___fldiv@b+1
 12938  002D46  C015  F00D         	movff	??___fldiv+2,___fldiv@b+2
 12939  002D4A  C016  F00E         	movff	??___fldiv+3,___fldiv@b+3
 12940  002D4E  4A1C               	infsnz	___fldiv@new_exp^0,f,c
 12941  002D50  2A1D               	incf	(___fldiv@new_exp+1)^0,f,c
 12942  002D52                     l8138:
 12943  002D52  BE1D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12944  002D54  EFB4  F016         	goto	u9961
 12945  002D58  501D               	movf	(___fldiv@new_exp+1)^0,w,c
 12946  002D5A  E108               	bnz	u9960
 12947  002D5C  281C               	incf	___fldiv@new_exp^0,w,c
 12948  002D5E  A0D8               	btfss	status,0,c
 12949  002D60  EFB4  F016         	goto	u9961
 12950  002D64  EFB6  F016         	goto	u9960
 12951  002D68                     u9961:
 12952  002D68  EFC1  F016         	goto	l8142
 12953  002D6C                     u9960:
 12954  002D6C  0E00               	movlw	0
 12955  002D6E  6E1D               	movwf	(___fldiv@new_exp+1)^0,c
 12956  002D70  681C               	setf	___fldiv@new_exp^0,c
 12957  002D72  0E00               	movlw	0
 12958  002D74  6E0B               	movwf	___fldiv@b^0,c
 12959  002D76  0E00               	movlw	0
 12960  002D78  6E0C               	movwf	(___fldiv@b+1)^0,c
 12961  002D7A  0E00               	movlw	0
 12962  002D7C  6E0D               	movwf	(___fldiv@b+2)^0,c
 12963  002D7E  0E00               	movlw	0
 12964  002D80  6E0E               	movwf	(___fldiv@b+3)^0,c
 12965  002D82                     l8142:
 12966  002D82  BE1D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12967  002D84  EFCE  F016         	goto	u9970
 12968  002D88  501D               	movf	(___fldiv@new_exp+1)^0,w,c
 12969  002D8A  E106               	bnz	u9971
 12970  002D8C  041C               	decf	___fldiv@new_exp^0,w,c
 12971  002D8E  B0D8               	btfsc	status,0,c
 12972  002D90  EFCC  F016         	goto	u9971
 12973  002D94  EFCE  F016         	goto	u9970
 12974  002D98                     u9971:
 12975  002D98  EFDC  F016         	goto	l8146
 12976  002D9C                     u9970:
 12977  002D9C  0E00               	movlw	0
 12978  002D9E  6E1D               	movwf	(___fldiv@new_exp+1)^0,c
 12979  002DA0  0E00               	movlw	0
 12980  002DA2  6E1C               	movwf	___fldiv@new_exp^0,c
 12981  002DA4  0E00               	movlw	0
 12982  002DA6  6E0B               	movwf	___fldiv@b^0,c
 12983  002DA8  0E00               	movlw	0
 12984  002DAA  6E0C               	movwf	(___fldiv@b+1)^0,c
 12985  002DAC  0E00               	movlw	0
 12986  002DAE  6E0D               	movwf	(___fldiv@b+2)^0,c
 12987  002DB0  0E00               	movlw	0
 12988  002DB2  6E0E               	movwf	(___fldiv@b+3)^0,c
 12989  002DB4  0E00               	movlw	0
 12990  002DB6  6E1B               	movwf	___fldiv@sign^0,c
 12991  002DB8                     l8146:
 12992  002DB8  C01C  F022         	movff	___fldiv@new_exp,___fldiv@bexp
 12993  002DBC  A022               	btfss	___fldiv@bexp^0,0,c
 12994  002DBE  EFE3  F016         	goto	u9981
 12995  002DC2  EFE5  F016         	goto	u9980
 12996  002DC6                     u9981:
 12997  002DC6  EFE8  F016         	goto	l8152
 12998  002DCA                     u9980:
 12999  002DCA  8E0D               	bsf	(___fldiv@b+2)^0,7,c
 13000  002DCC  EFE9  F016         	goto	l8154
 13001  002DD0                     l8152:
 13002  002DD0  9E0D               	bcf	(___fldiv@b+2)^0,7,c
 13003  002DD2                     l8154:
 13004  002DD2  90D8               	bcf	status,0,c
 13005  002DD4  3022               	rrcf	___fldiv@bexp^0,w,c
 13006  002DD6  6E0E               	movwf	(___fldiv@b+3)^0,c
 13007  002DD8  EF9F  F015         	goto	l8068
 13008  002DDC                     l1547:
 13009  002DDC  0012               	return		;funcret
 13010  002DDE                     __end_of___fldiv:
 13011                           	opt callstack 0
 13012                           
 13013 ;; *************** function ___awmod *****************
 13014 ;; Defined at:
 13015 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13016 ;; Parameters:    Size  Location     Type
 13017 ;;  dividend        2   10[COMRAM] int 
 13018 ;;  divisor         2   12[COMRAM] int 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  sign            1   15[COMRAM] unsigned char 
 13021 ;;  counter         1   14[COMRAM] unsigned char 
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  2   10[COMRAM] int 
 13024 ;; Registers used:
 13025 ;;		wreg, status,2, status,0
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13035 ;;Total ram usage:        6 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    5
 13038 ;; This function calls:
 13039 ;;		Nothing
 13040 ;; This function is called by:
 13041 ;;		_efgtoa
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045                           	psect	text29
 13046  005572                     __ptext29:
 13047                           	opt callstack 0
 13048  005572                     ___awmod:
 13049                           	opt callstack 20
 13050  005572  0E00               	movlw	0
 13051  005574  6E10               	movwf	___awmod@sign^0,c
 13052  005576  BE0C               	btfsc	(___awmod@dividend+1)^0,7,c
 13053  005578  EFC2  F02A         	goto	u10240
 13054  00557C  EFC0  F02A         	goto	u10241
 13055  005580                     u10241:
 13056  005580  EFC8  F02A         	goto	l8350
 13057  005584                     u10240:
 13058  005584  6C0B               	negf	___awmod@dividend^0,c
 13059  005586  1E0C               	comf	(___awmod@dividend+1)^0,f,c
 13060  005588  B0D8               	btfsc	status,0,c
 13061  00558A  2A0C               	incf	(___awmod@dividend+1)^0,f,c
 13062  00558C  0E01               	movlw	1
 13063  00558E  6E10               	movwf	___awmod@sign^0,c
 13064  005590                     l8350:
 13065  005590  BE0E               	btfsc	(___awmod@divisor+1)^0,7,c
 13066  005592  EFCF  F02A         	goto	u10250
 13067  005596  EFCD  F02A         	goto	u10251
 13068  00559A                     u10251:
 13069  00559A  EFD3  F02A         	goto	l8354
 13070  00559E                     u10250:
 13071  00559E  6C0D               	negf	___awmod@divisor^0,c
 13072  0055A0  1E0E               	comf	(___awmod@divisor+1)^0,f,c
 13073  0055A2  B0D8               	btfsc	status,0,c
 13074  0055A4  2A0E               	incf	(___awmod@divisor+1)^0,f,c
 13075  0055A6                     l8354:
 13076  0055A6  500D               	movf	___awmod@divisor^0,w,c
 13077  0055A8  100E               	iorwf	(___awmod@divisor+1)^0,w,c
 13078  0055AA  B4D8               	btfsc	status,2,c
 13079  0055AC  EFDA  F02A         	goto	u10261
 13080  0055B0  EFDC  F02A         	goto	u10260
 13081  0055B4                     u10261:
 13082  0055B4  EF00  F02B         	goto	l8370
 13083  0055B8                     u10260:
 13084  0055B8  0E01               	movlw	1
 13085  0055BA  6E0F               	movwf	___awmod@counter^0,c
 13086  0055BC  EFE4  F02A         	goto	l8360
 13087  0055C0                     l8358:
 13088  0055C0  90D8               	bcf	status,0,c
 13089  0055C2  360D               	rlcf	___awmod@divisor^0,f,c
 13090  0055C4  360E               	rlcf	(___awmod@divisor+1)^0,f,c
 13091  0055C6  2A0F               	incf	___awmod@counter^0,f,c
 13092  0055C8                     l8360:
 13093  0055C8  AE0E               	btfss	(___awmod@divisor+1)^0,7,c
 13094  0055CA  EFE9  F02A         	goto	u10271
 13095  0055CE  EFEB  F02A         	goto	u10270
 13096  0055D2                     u10271:
 13097  0055D2  EFE0  F02A         	goto	l8358
 13098  0055D6                     u10270:
 13099  0055D6                     l8362:
 13100  0055D6  500D               	movf	___awmod@divisor^0,w,c
 13101  0055D8  5C0B               	subwf	___awmod@dividend^0,w,c
 13102  0055DA  500E               	movf	(___awmod@divisor+1)^0,w,c
 13103  0055DC  580C               	subwfb	(___awmod@dividend+1)^0,w,c
 13104  0055DE  A0D8               	btfss	status,0,c
 13105  0055E0  EFF4  F02A         	goto	u10281
 13106  0055E4  EFF6  F02A         	goto	u10280
 13107  0055E8                     u10281:
 13108  0055E8  EFFA  F02A         	goto	l8366
 13109  0055EC                     u10280:
 13110  0055EC  500D               	movf	___awmod@divisor^0,w,c
 13111  0055EE  5E0B               	subwf	___awmod@dividend^0,f,c
 13112  0055F0  500E               	movf	(___awmod@divisor+1)^0,w,c
 13113  0055F2  5A0C               	subwfb	(___awmod@dividend+1)^0,f,c
 13114  0055F4                     l8366:
 13115  0055F4  90D8               	bcf	status,0,c
 13116  0055F6  320E               	rrcf	(___awmod@divisor+1)^0,f,c
 13117  0055F8  320D               	rrcf	___awmod@divisor^0,f,c
 13118  0055FA  2E0F               	decfsz	___awmod@counter^0,f,c
 13119  0055FC  EFEB  F02A         	goto	l8362
 13120  005600                     l8370:
 13121  005600  5010               	movf	___awmod@sign^0,w,c
 13122  005602  B4D8               	btfsc	status,2,c
 13123  005604  EF06  F02B         	goto	u10291
 13124  005608  EF08  F02B         	goto	u10290
 13125  00560C                     u10291:
 13126  00560C  EF0C  F02B         	goto	l8374
 13127  005610                     u10290:
 13128  005610  6C0B               	negf	___awmod@dividend^0,c
 13129  005612  1E0C               	comf	(___awmod@dividend+1)^0,f,c
 13130  005614  B0D8               	btfsc	status,0,c
 13131  005616  2A0C               	incf	(___awmod@dividend+1)^0,f,c
 13132  005618                     l8374:
 13133  005618  C00B  F00B         	movff	___awmod@dividend,?___awmod
 13134  00561C  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
 13135  005620  0012               	return		;funcret
 13136  005622                     __end_of___awmod:
 13137                           	opt callstack 0
 13138                           
 13139 ;; *************** function ___awdiv *****************
 13140 ;; Defined at:
 13141 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;  dividend        2   10[COMRAM] int 
 13144 ;;  divisor         2   12[COMRAM] int 
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;  quotient        2   16[COMRAM] int 
 13147 ;;  sign            1   15[COMRAM] unsigned char 
 13148 ;;  counter         1   14[COMRAM] unsigned char 
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  2   10[COMRAM] int 
 13151 ;; Registers used:
 13152 ;;		wreg, status,2, status,0
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13159 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13161 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13162 ;;Total ram usage:        8 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    5
 13165 ;; This function calls:
 13166 ;;		Nothing
 13167 ;; This function is called by:
 13168 ;;		_efgtoa
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           	psect	text30
 13173  0053EC                     __ptext30:
 13174                           	opt callstack 0
 13175  0053EC                     ___awdiv:
 13176                           	opt callstack 20
 13177  0053EC  0E00               	movlw	0
 13178  0053EE  6E10               	movwf	___awdiv@sign^0,c
 13179  0053F0  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
 13180  0053F2  EFFF  F029         	goto	u10180
 13181  0053F6  EFFD  F029         	goto	u10181
 13182  0053FA                     u10181:
 13183  0053FA  EF05  F02A         	goto	l8306
 13184  0053FE                     u10180:
 13185  0053FE  6C0D               	negf	___awdiv@divisor^0,c
 13186  005400  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
 13187  005402  B0D8               	btfsc	status,0,c
 13188  005404  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
 13189  005406  0E01               	movlw	1
 13190  005408  6E10               	movwf	___awdiv@sign^0,c
 13191  00540A                     l8306:
 13192  00540A  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
 13193  00540C  EF0C  F02A         	goto	u10190
 13194  005410  EF0A  F02A         	goto	u10191
 13195  005414                     u10191:
 13196  005414  EF12  F02A         	goto	l8312
 13197  005418                     u10190:
 13198  005418  6C0B               	negf	___awdiv@dividend^0,c
 13199  00541A  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
 13200  00541C  B0D8               	btfsc	status,0,c
 13201  00541E  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
 13202  005420  0E01               	movlw	1
 13203  005422  1A10               	xorwf	___awdiv@sign^0,f,c
 13204  005424                     l8312:
 13205  005424  0E00               	movlw	0
 13206  005426  6E12               	movwf	(___awdiv@quotient+1)^0,c
 13207  005428  0E00               	movlw	0
 13208  00542A  6E11               	movwf	___awdiv@quotient^0,c
 13209  00542C  500D               	movf	___awdiv@divisor^0,w,c
 13210  00542E  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
 13211  005430  B4D8               	btfsc	status,2,c
 13212  005432  EF1D  F02A         	goto	u10201
 13213  005436  EF1F  F02A         	goto	u10200
 13214  00543A                     u10201:
 13215  00543A  EF47  F02A         	goto	l8334
 13216  00543E                     u10200:
 13217  00543E  0E01               	movlw	1
 13218  005440  6E0F               	movwf	___awdiv@counter^0,c
 13219  005442  EF27  F02A         	goto	l8320
 13220  005446                     l8318:
 13221  005446  90D8               	bcf	status,0,c
 13222  005448  360D               	rlcf	___awdiv@divisor^0,f,c
 13223  00544A  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
 13224  00544C  2A0F               	incf	___awdiv@counter^0,f,c
 13225  00544E                     l8320:
 13226  00544E  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
 13227  005450  EF2C  F02A         	goto	u10211
 13228  005454  EF2E  F02A         	goto	u10210
 13229  005458                     u10211:
 13230  005458  EF23  F02A         	goto	l8318
 13231  00545C                     u10210:
 13232  00545C                     l8322:
 13233  00545C  90D8               	bcf	status,0,c
 13234  00545E  3611               	rlcf	___awdiv@quotient^0,f,c
 13235  005460  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
 13236  005462  500D               	movf	___awdiv@divisor^0,w,c
 13237  005464  5C0B               	subwf	___awdiv@dividend^0,w,c
 13238  005466  500E               	movf	(___awdiv@divisor+1)^0,w,c
 13239  005468  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
 13240  00546A  A0D8               	btfss	status,0,c
 13241  00546C  EF3A  F02A         	goto	u10221
 13242  005470  EF3C  F02A         	goto	u10220
 13243  005474                     u10221:
 13244  005474  EF41  F02A         	goto	l8330
 13245  005478                     u10220:
 13246  005478  500D               	movf	___awdiv@divisor^0,w,c
 13247  00547A  5E0B               	subwf	___awdiv@dividend^0,f,c
 13248  00547C  500E               	movf	(___awdiv@divisor+1)^0,w,c
 13249  00547E  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
 13250  005480  8011               	bsf	___awdiv@quotient^0,0,c
 13251  005482                     l8330:
 13252  005482  90D8               	bcf	status,0,c
 13253  005484  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
 13254  005486  320D               	rrcf	___awdiv@divisor^0,f,c
 13255  005488  2E0F               	decfsz	___awdiv@counter^0,f,c
 13256  00548A  EF2E  F02A         	goto	l8322
 13257  00548E                     l8334:
 13258  00548E  5010               	movf	___awdiv@sign^0,w,c
 13259  005490  B4D8               	btfsc	status,2,c
 13260  005492  EF4D  F02A         	goto	u10231
 13261  005496  EF4F  F02A         	goto	u10230
 13262  00549A                     u10231:
 13263  00549A  EF53  F02A         	goto	l8338
 13264  00549E                     u10230:
 13265  00549E  6C11               	negf	___awdiv@quotient^0,c
 13266  0054A0  1E12               	comf	(___awdiv@quotient+1)^0,f,c
 13267  0054A2  B0D8               	btfsc	status,0,c
 13268  0054A4  2A12               	incf	(___awdiv@quotient+1)^0,f,c
 13269  0054A6                     l8338:
 13270  0054A6  C011  F00B         	movff	___awdiv@quotient,?___awdiv
 13271  0054AA  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
 13272  0054AE  0012               	return		;funcret
 13273  0054B0                     __end_of___awdiv:
 13274                           	opt callstack 0
 13275                           
 13276 ;; *************** function _dtoa *****************
 13277 ;; Defined at:
 13278 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
 13281 ;;		 -> vsnprintf@f(6), 
 13282 ;;  d               8   39[COMRAM] long long 
 13283 ;; Auto vars:     Size  Location     Type
 13284 ;;  n               8   63[COMRAM] long long 
 13285 ;;  i               2   71[COMRAM] int 
 13286 ;;  s               2   61[COMRAM] int 
 13287 ;;  w               2   59[COMRAM] int 
 13288 ;;  p               2   57[COMRAM] int 
 13289 ;; Return value:  Size  Location     Type
 13290 ;;                  2   37[COMRAM] int 
 13291 ;; Registers used:
 13292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13293 ;; Tracked objects:
 13294 ;;		On entry : 0/0
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13298 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13299 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13300 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13301 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13302 ;;Total ram usage:       36 bytes
 13303 ;; Hardware stack levels used:    1
 13304 ;; Hardware stack levels required when called:    9
 13305 ;; This function calls:
 13306 ;;		___aodiv
 13307 ;;		___aomod
 13308 ;;		_abs
 13309 ;;		_pad
 13310 ;; This function is called by:
 13311 ;;		_vfpfcnvrt
 13312 ;; This function uses a non-reentrant model
 13313 ;;
 13314                           
 13315                           	psect	text31
 13316  003442                     __ptext31:
 13317                           	opt callstack 0
 13318  003442                     _dtoa:
 13319                           	opt callstack 17
 13320  003442                     
 13321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13322  003442  C028  F040         	movff	dtoa@d,dtoa@n
 13323  003446  C029  F041         	movff	dtoa@d+1,dtoa@n+1
 13324  00344A  C02A  F042         	movff	dtoa@d+2,dtoa@n+2
 13325  00344E  C02B  F043         	movff	dtoa@d+3,dtoa@n+3
 13326  003452  C02C  F044         	movff	dtoa@d+4,dtoa@n+4
 13327  003456  C02D  F045         	movff	dtoa@d+5,dtoa@n+5
 13328  00345A  C02E  F046         	movff	dtoa@d+6,dtoa@n+6
 13329  00345E  C02F  F047         	movff	dtoa@d+7,dtoa@n+7
 13330  003462                     
 13331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13332  003462  BE47               	btfsc	(dtoa@n+7)^0,7,c
 13333  003464  EF36  F01A         	goto	u10561
 13334  003468  EF39  F01A         	goto	u10560
 13335  00346C                     u10561:
 13336  00346C  0E01               	movlw	1
 13337  00346E  EF3A  F01A         	goto	u10570
 13338  003472                     u10560:
 13339  003472  0E00               	movlw	0
 13340  003474                     u10570:
 13341  003474  6E3E               	movwf	dtoa@s^0,c
 13342  003476  6A3F               	clrf	(dtoa@s+1)^0,c
 13343                           
 13344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13345  003478  503E               	movf	dtoa@s^0,w,c
 13346  00347A  103F               	iorwf	(dtoa@s+1)^0,w,c
 13347  00347C  B4D8               	btfsc	status,2,c
 13348  00347E  EF43  F01A         	goto	u10581
 13349  003482  EF45  F01A         	goto	u10580
 13350  003486                     u10581:
 13351  003486  EF55  F01A         	goto	l8538
 13352  00348A                     u10580:
 13353  00348A                     
 13354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13355  00348A  1E47               	comf	(dtoa@n+7)^0,f,c
 13356  00348C  1E46               	comf	(dtoa@n+6)^0,f,c
 13357  00348E  1E45               	comf	(dtoa@n+5)^0,f,c
 13358  003490  1E44               	comf	(dtoa@n+4)^0,f,c
 13359  003492  1E43               	comf	(dtoa@n+3)^0,f,c
 13360  003494  1E42               	comf	(dtoa@n+2)^0,f,c
 13361  003496  1E41               	comf	(dtoa@n+1)^0,f,c
 13362  003498  6C40               	negf	dtoa@n^0,c
 13363  00349A  0E00               	movlw	0
 13364  00349C  2241               	addwfc	(dtoa@n+1)^0,f,c
 13365  00349E  2242               	addwfc	(dtoa@n+2)^0,f,c
 13366  0034A0  2243               	addwfc	(dtoa@n+3)^0,f,c
 13367  0034A2  2244               	addwfc	(dtoa@n+4)^0,f,c
 13368  0034A4  2245               	addwfc	(dtoa@n+5)^0,f,c
 13369  0034A6  2246               	addwfc	(dtoa@n+6)^0,f,c
 13370  0034A8  2247               	addwfc	(dtoa@n+7)^0,f,c
 13371  0034AA                     l8538:
 13372                           
 13373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13374  0034AA  BE4F               	btfsc	(_prec+1)^0,7,c
 13375  0034AC  EF5A  F01A         	goto	u10591
 13376  0034B0  EF5C  F01A         	goto	u10590
 13377  0034B4                     u10591:
 13378  0034B4  EF5D  F01A         	goto	l8542
 13379  0034B8                     u10590:
 13380  0034B8                     
 13381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13382  0034B8  9250               	bcf	_flags^0,1,c
 13383  0034BA                     l8542:
 13384                           
 13385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13386  0034BA  BE4F               	btfsc	(_prec+1)^0,7,c
 13387  0034BC  EF6A  F01A         	goto	u10600
 13388  0034C0  504F               	movf	(_prec+1)^0,w,c
 13389  0034C2  E106               	bnz	u10601
 13390  0034C4  044E               	decf	_prec^0,w,c
 13391  0034C6  B0D8               	btfsc	status,0,c
 13392  0034C8  EF68  F01A         	goto	u10601
 13393  0034CC  EF6A  F01A         	goto	u10600
 13394  0034D0                     u10601:
 13395  0034D0  EF70  F01A         	goto	l675
 13396  0034D4                     u10600:
 13397  0034D4  0E00               	movlw	0
 13398  0034D6  6E3B               	movwf	(dtoa@p+1)^0,c
 13399  0034D8  0E01               	movlw	1
 13400  0034DA  6E3A               	movwf	dtoa@p^0,c
 13401  0034DC  EF74  F01A         	goto	l677
 13402  0034E0                     l675:
 13403  0034E0  C04E  F03A         	movff	_prec,dtoa@p
 13404  0034E4  C04F  F03B         	movff	_prec+1,dtoa@p+1
 13405  0034E8                     l677:
 13406                           
 13407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13408  0034E8  C04C  F03C         	movff	_width,dtoa@w
 13409  0034EC  C04D  F03D         	movff	_width+1,dtoa@w+1
 13410  0034F0                     
 13411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13412  0034F0  503E               	movf	dtoa@s^0,w,c
 13413  0034F2  103F               	iorwf	(dtoa@s+1)^0,w,c
 13414  0034F4  A4D8               	btfss	status,2,c
 13415  0034F6  EF7F  F01A         	goto	u10611
 13416  0034FA  EF81  F01A         	goto	u10610
 13417  0034FE                     u10611:
 13418  0034FE  EF88  F01A         	goto	l8550
 13419  003502                     u10610:
 13420  003502  A450               	btfss	_flags^0,2,c
 13421  003504  EF86  F01A         	goto	u10621
 13422  003508  EF88  F01A         	goto	u10620
 13423  00350C                     u10621:
 13424  00350C  EF8B  F01A         	goto	l8552
 13425  003510                     u10620:
 13426  003510                     l8550:
 13427                           
 13428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13429  003510  063C               	decf	dtoa@w^0,f,c
 13430  003512  A0D8               	btfss	status,0,c
 13431  003514  063D               	decf	(dtoa@w+1)^0,f,c
 13432  003516                     l8552:
 13433                           
 13434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13435  003516  0E00               	movlw	0
 13436  003518  6E49               	movwf	(dtoa@i+1)^0,c
 13437  00351A  0E4F               	movlw	79
 13438  00351C  6E48               	movwf	dtoa@i^0,c
 13439  00351E                     
 13440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13441  00351E  0E00               	movlw	0
 13442  003520  0101               	movlb	1	; () banked
 13443  003522  6FBB               	movwf	(_dbuf+79)& (0+255),b
 13444                           
 13445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13446  003524  EF10  F01B         	goto	l8566
 13447  003528                     l8556:
 13448                           
 13449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13450  003528  0648               	decf	dtoa@i^0,f,c
 13451  00352A  A0D8               	btfss	status,0,c
 13452  00352C  0649               	decf	(dtoa@i+1)^0,f,c
 13453  00352E                     
 13454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13455  00352E  0E6C               	movlw	low _dbuf
 13456  003530  2448               	addwf	dtoa@i^0,w,c
 13457  003532  6ED9               	movwf	fsr2l,c
 13458  003534  0E01               	movlw	high _dbuf
 13459  003536  2049               	addwfc	(dtoa@i+1)^0,w,c
 13460  003538  6EDA               	movwf	fsr2h,c
 13461  00353A  C040  F00B         	movff	dtoa@n,___aomod@dividend
 13462  00353E  C041  F00C         	movff	dtoa@n+1,___aomod@dividend+1
 13463  003542  C042  F00D         	movff	dtoa@n+2,___aomod@dividend+2
 13464  003546  C043  F00E         	movff	dtoa@n+3,___aomod@dividend+3
 13465  00354A  C044  F00F         	movff	dtoa@n+4,___aomod@dividend+4
 13466  00354E  C045  F010         	movff	dtoa@n+5,___aomod@dividend+5
 13467  003552  C046  F011         	movff	dtoa@n+6,___aomod@dividend+6
 13468  003556  C047  F012         	movff	dtoa@n+7,___aomod@dividend+7
 13469  00355A  0E0A               	movlw	10
 13470  00355C  6E13               	movwf	___aomod@divisor^0,c
 13471  00355E  0E00               	movlw	0
 13472  003560  6E14               	movwf	(___aomod@divisor+1)^0,c
 13473  003562  0E00               	movlw	0
 13474  003564  6E15               	movwf	(___aomod@divisor+2)^0,c
 13475  003566  0E00               	movlw	0
 13476  003568  6E16               	movwf	(___aomod@divisor+3)^0,c
 13477  00356A  0E00               	movlw	0
 13478  00356C  6E17               	movwf	(___aomod@divisor+4)^0,c
 13479  00356E  0E00               	movlw	0
 13480  003570  6E18               	movwf	(___aomod@divisor+5)^0,c
 13481  003572  0E00               	movlw	0
 13482  003574  6E19               	movwf	(___aomod@divisor+6)^0,c
 13483  003576  0E00               	movlw	0
 13484  003578  6E1A               	movwf	(___aomod@divisor+7)^0,c
 13485  00357A  EC41  F024         	call	___aomod	;wreg free
 13486  00357E  C00B  F030         	movff	?___aomod,??_dtoa
 13487  003582  C00C  F031         	movff	?___aomod+1,??_dtoa+1
 13488  003586  C00D  F032         	movff	?___aomod+2,??_dtoa+2
 13489  00358A  C00E  F033         	movff	?___aomod+3,??_dtoa+3
 13490  00358E  C00F  F034         	movff	?___aomod+4,??_dtoa+4
 13491  003592  C010  F035         	movff	?___aomod+5,??_dtoa+5
 13492  003596  C011  F036         	movff	?___aomod+6,??_dtoa+6
 13493  00359A  C012  F037         	movff	?___aomod+7,??_dtoa+7
 13494  00359E  C030  F01D         	movff	??_dtoa,abs@a
 13495  0035A2  C032  F01E         	movff	??_dtoa+2,abs@a+1
 13496  0035A6  EC34  F02E         	call	_abs	;wreg free
 13497  0035AA  501D               	movf	?_abs^0,w,c
 13498  0035AC  0F30               	addlw	48
 13499  0035AE  6EDF               	movwf	indf2,c
 13500  0035B0                     
 13501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13502  0035B0  063A               	decf	dtoa@p^0,f,c
 13503  0035B2  A0D8               	btfss	status,0,c
 13504  0035B4  063B               	decf	(dtoa@p+1)^0,f,c
 13505  0035B6                     
 13506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13507  0035B6  063C               	decf	dtoa@w^0,f,c
 13508  0035B8  A0D8               	btfss	status,0,c
 13509  0035BA  063D               	decf	(dtoa@w+1)^0,f,c
 13510  0035BC                     
 13511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13512  0035BC  C040  F00B         	movff	dtoa@n,___aodiv@dividend
 13513  0035C0  C041  F00C         	movff	dtoa@n+1,___aodiv@dividend+1
 13514  0035C4  C042  F00D         	movff	dtoa@n+2,___aodiv@dividend+2
 13515  0035C8  C043  F00E         	movff	dtoa@n+3,___aodiv@dividend+3
 13516  0035CC  C044  F00F         	movff	dtoa@n+4,___aodiv@dividend+4
 13517  0035D0  C045  F010         	movff	dtoa@n+5,___aodiv@dividend+5
 13518  0035D4  C046  F011         	movff	dtoa@n+6,___aodiv@dividend+6
 13519  0035D8  C047  F012         	movff	dtoa@n+7,___aodiv@dividend+7
 13520  0035DC  0E0A               	movlw	10
 13521  0035DE  6E13               	movwf	___aodiv@divisor^0,c
 13522  0035E0  0E00               	movlw	0
 13523  0035E2  6E14               	movwf	(___aodiv@divisor+1)^0,c
 13524  0035E4  0E00               	movlw	0
 13525  0035E6  6E15               	movwf	(___aodiv@divisor+2)^0,c
 13526  0035E8  0E00               	movlw	0
 13527  0035EA  6E16               	movwf	(___aodiv@divisor+3)^0,c
 13528  0035EC  0E00               	movlw	0
 13529  0035EE  6E17               	movwf	(___aodiv@divisor+4)^0,c
 13530  0035F0  0E00               	movlw	0
 13531  0035F2  6E18               	movwf	(___aodiv@divisor+5)^0,c
 13532  0035F4  0E00               	movlw	0
 13533  0035F6  6E19               	movwf	(___aodiv@divisor+6)^0,c
 13534  0035F8  0E00               	movlw	0
 13535  0035FA  6E1A               	movwf	(___aodiv@divisor+7)^0,c
 13536  0035FC  EC4B  F021         	call	___aodiv	;wreg free
 13537  003600  C00B  F040         	movff	?___aodiv,dtoa@n
 13538  003604  C00C  F041         	movff	?___aodiv+1,dtoa@n+1
 13539  003608  C00D  F042         	movff	?___aodiv+2,dtoa@n+2
 13540  00360C  C00E  F043         	movff	?___aodiv+3,dtoa@n+3
 13541  003610  C00F  F044         	movff	?___aodiv+4,dtoa@n+4
 13542  003614  C010  F045         	movff	?___aodiv+5,dtoa@n+5
 13543  003618  C011  F046         	movff	?___aodiv+6,dtoa@n+6
 13544  00361C  C012  F047         	movff	?___aodiv+7,dtoa@n+7
 13545  003620                     l8566:
 13546                           
 13547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13548  003620  BE49               	btfsc	(dtoa@i+1)^0,7,c
 13549  003622  EF1B  F01B         	goto	u10631
 13550  003626  5049               	movf	(dtoa@i+1)^0,w,c
 13551  003628  E108               	bnz	u10630
 13552  00362A  0448               	decf	dtoa@i^0,w,c
 13553  00362C  A0D8               	btfss	status,0,c
 13554  00362E  EF1B  F01B         	goto	u10631
 13555  003632  EF1D  F01B         	goto	u10630
 13556  003636                     u10631:
 13557  003636  EF4D  F01B         	goto	l8576
 13558  00363A                     u10630:
 13559  00363A  5040               	movf	dtoa@n^0,w,c
 13560  00363C  1041               	iorwf	(dtoa@n+1)^0,w,c
 13561  00363E  1042               	iorwf	(dtoa@n+2)^0,w,c
 13562  003640  1043               	iorwf	(dtoa@n+3)^0,w,c
 13563  003642  1044               	iorwf	(dtoa@n+4)^0,w,c
 13564  003644  1045               	iorwf	(dtoa@n+5)^0,w,c
 13565  003646  1046               	iorwf	(dtoa@n+6)^0,w,c
 13566  003648  1047               	iorwf	(dtoa@n+7)^0,w,c
 13567  00364A  A4D8               	btfss	status,2,c
 13568  00364C  EF2A  F01B         	goto	u10641
 13569  003650  EF2C  F01B         	goto	u10640
 13570  003654                     u10641:
 13571  003654  EF94  F01A         	goto	l8556
 13572  003658                     u10640:
 13573  003658  BE3B               	btfsc	(dtoa@p+1)^0,7,c
 13574  00365A  EF39  F01B         	goto	u10650
 13575  00365E  503B               	movf	(dtoa@p+1)^0,w,c
 13576  003660  E106               	bnz	u10651
 13577  003662  043A               	decf	dtoa@p^0,w,c
 13578  003664  B0D8               	btfsc	status,0,c
 13579  003666  EF37  F01B         	goto	u10651
 13580  00366A  EF39  F01B         	goto	u10650
 13581  00366E                     u10651:
 13582  00366E  EF94  F01A         	goto	l8556
 13583  003672                     u10650:
 13584  003672  BE3D               	btfsc	(dtoa@w+1)^0,7,c
 13585  003674  EF44  F01B         	goto	u10661
 13586  003678  503D               	movf	(dtoa@w+1)^0,w,c
 13587  00367A  E108               	bnz	u10660
 13588  00367C  043C               	decf	dtoa@w^0,w,c
 13589  00367E  A0D8               	btfss	status,0,c
 13590  003680  EF44  F01B         	goto	u10661
 13591  003684  EF46  F01B         	goto	u10660
 13592  003688                     u10661:
 13593  003688  EF4D  F01B         	goto	l8576
 13594  00368C                     u10660:
 13595  00368C  B250               	btfsc	_flags^0,1,c
 13596  00368E  EF4B  F01B         	goto	u10671
 13597  003692  EF4D  F01B         	goto	u10670
 13598  003696                     u10671:
 13599  003696  EF94  F01A         	goto	l8556
 13600  00369A                     u10670:
 13601  00369A                     l8576:
 13602                           
 13603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13604  00369A  503E               	movf	dtoa@s^0,w,c
 13605  00369C  103F               	iorwf	(dtoa@s+1)^0,w,c
 13606  00369E  A4D8               	btfss	status,2,c
 13607  0036A0  EF54  F01B         	goto	u10681
 13608  0036A4  EF56  F01B         	goto	u10680
 13609  0036A8                     u10681:
 13610  0036A8  EF5D  F01B         	goto	l8580
 13611  0036AC                     u10680:
 13612  0036AC  A450               	btfss	_flags^0,2,c
 13613  0036AE  EF5B  F01B         	goto	u10691
 13614  0036B2  EF5D  F01B         	goto	u10690
 13615  0036B6                     u10691:
 13616  0036B6  EF7B  F01B         	goto	l8590
 13617  0036BA                     u10690:
 13618  0036BA                     l8580:
 13619                           
 13620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13621  0036BA  0648               	decf	dtoa@i^0,f,c
 13622  0036BC  A0D8               	btfss	status,0,c
 13623  0036BE  0649               	decf	(dtoa@i+1)^0,f,c
 13624  0036C0                     
 13625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13626  0036C0  503E               	movf	dtoa@s^0,w,c
 13627  0036C2  103F               	iorwf	(dtoa@s+1)^0,w,c
 13628  0036C4  A4D8               	btfss	status,2,c
 13629  0036C6  EF67  F01B         	goto	u10701
 13630  0036CA  EF69  F01B         	goto	u10700
 13631  0036CE                     u10701:
 13632  0036CE  EF6F  F01B         	goto	l8586
 13633  0036D2                     u10700:
 13634  0036D2  0E00               	movlw	0
 13635  0036D4  6E39               	movwf	(_dtoa$1698+1)^0,c
 13636  0036D6  0E2B               	movlw	43
 13637  0036D8  6E38               	movwf	_dtoa$1698^0,c
 13638  0036DA  EF73  F01B         	goto	l8588
 13639  0036DE                     l8586:
 13640  0036DE  0E00               	movlw	0
 13641  0036E0  6E39               	movwf	(_dtoa$1698+1)^0,c
 13642  0036E2  0E2D               	movlw	45
 13643  0036E4  6E38               	movwf	_dtoa$1698^0,c
 13644  0036E6                     l8588:
 13645  0036E6  0E6C               	movlw	low _dbuf
 13646  0036E8  2448               	addwf	dtoa@i^0,w,c
 13647  0036EA  6ED9               	movwf	fsr2l,c
 13648  0036EC  0E01               	movlw	high _dbuf
 13649  0036EE  2049               	addwfc	(dtoa@i+1)^0,w,c
 13650  0036F0  6EDA               	movwf	fsr2h,c
 13651  0036F2  C038  FFDF         	movff	_dtoa$1698,indf2
 13652  0036F6                     l8590:
 13653                           
 13654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13655  0036F6  C026  F01B         	movff	dtoa@fp,pad@fp
 13656  0036FA  C027  F01C         	movff	dtoa@fp+1,pad@fp+1
 13657  0036FE  0E6C               	movlw	low _dbuf
 13658  003700  2448               	addwf	dtoa@i^0,w,c
 13659  003702  6E1D               	movwf	pad@buf^0,c
 13660  003704  0E01               	movlw	high _dbuf
 13661  003706  2049               	addwfc	(dtoa@i+1)^0,w,c
 13662  003708  6E1E               	movwf	(pad@buf+1)^0,c
 13663  00370A  C03C  F01F         	movff	dtoa@w,pad@p
 13664  00370E  C03D  F020         	movff	dtoa@w+1,pad@p+1
 13665  003712  EC58  F02A         	call	_pad	;wreg free
 13666  003716  C01B  F026         	movff	?_pad,?_dtoa
 13667  00371A  C01C  F027         	movff	?_pad+1,?_dtoa+1
 13668  00371E  0012               	return		;funcret
 13669  003720                     __end_of_dtoa:
 13670                           	opt callstack 0
 13671                           
 13672 ;; *************** function _abs *****************
 13673 ;; Defined at:
 13674 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13675 ;; Parameters:    Size  Location     Type
 13676 ;;  a               2   28[COMRAM] int 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;		None
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  2   28[COMRAM] int 
 13681 ;; Registers used:
 13682 ;;		wreg, status,2, status,0
 13683 ;; Tracked objects:
 13684 ;;		On entry : 0/0
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13690 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13692 ;;Total ram usage:        4 bytes
 13693 ;; Hardware stack levels used:    1
 13694 ;; Hardware stack levels required when called:    5
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_dtoa
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           	psect	text32
 13703  005C68                     __ptext32:
 13704                           	opt callstack 0
 13705  005C68                     _abs:
 13706                           	opt callstack 20
 13707  005C68  BE1E               	btfsc	(abs@a+1)^0,7,c
 13708  005C6A  EF41  F02E         	goto	u9330
 13709  005C6E  501E               	movf	(abs@a+1)^0,w,c
 13710  005C70  E106               	bnz	u9331
 13711  005C72  041D               	decf	abs@a^0,w,c
 13712  005C74  B0D8               	btfsc	status,0,c
 13713  005C76  EF3F  F02E         	goto	u9331
 13714  005C7A  EF41  F02E         	goto	u9330
 13715  005C7E                     u9331:
 13716  005C7E  EF4F  F02E         	goto	l1651
 13717  005C82                     u9330:
 13718  005C82  C01D  F01F         	movff	abs@a,??_abs
 13719  005C86  C01E  F020         	movff	abs@a+1,??_abs+1
 13720  005C8A  1E1F               	comf	??_abs^0,f,c
 13721  005C8C  1E20               	comf	(??_abs+1)^0,f,c
 13722  005C8E  4A1F               	infsnz	??_abs^0,f,c
 13723  005C90  2A20               	incf	(??_abs+1)^0,f,c
 13724  005C92  C01F  F01D         	movff	??_abs,?_abs
 13725  005C96  C020  F01E         	movff	??_abs+1,?_abs+1
 13726  005C9A  EF53  F02E         	goto	l1654
 13727  005C9E                     l1651:
 13728  005C9E  C01D  F01D         	movff	abs@a,?_abs
 13729  005CA2  C01E  F01E         	movff	abs@a+1,?_abs+1
 13730  005CA6                     l1654:
 13731  005CA6  0012               	return		;funcret
 13732  005CA8                     __end_of_abs:
 13733                           	opt callstack 0
 13734                           
 13735 ;; *************** function ___aomod *****************
 13736 ;; Defined at:
 13737 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  dividend        8   10[COMRAM] long long 
 13740 ;;  divisor         8   18[COMRAM] long long 
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;  sign            1   27[COMRAM] unsigned char 
 13743 ;;  counter         1   26[COMRAM] unsigned char 
 13744 ;; Return value:  Size  Location     Type
 13745 ;;                  8   10[COMRAM] long long 
 13746 ;; Registers used:
 13747 ;;		wreg, status,2, status,0
 13748 ;; Tracked objects:
 13749 ;;		On entry : 0/0
 13750 ;;		On exit  : 0/0
 13751 ;;		Unchanged: 0/0
 13752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13753 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13756 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13757 ;;Total ram usage:       18 bytes
 13758 ;; Hardware stack levels used:    1
 13759 ;; Hardware stack levels required when called:    5
 13760 ;; This function calls:
 13761 ;;		Nothing
 13762 ;; This function is called by:
 13763 ;;		_dtoa
 13764 ;; This function uses a non-reentrant model
 13765 ;;
 13766                           
 13767                           	psect	text33
 13768  004882                     __ptext33:
 13769                           	opt callstack 0
 13770  004882                     ___aomod:
 13771                           	opt callstack 20
 13772  004882  0E00               	movlw	0
 13773  004884  6E1C               	movwf	___aomod@sign^0,c
 13774  004886  BE12               	btfsc	(___aomod@dividend+7)^0,7,c
 13775  004888  EF4A  F024         	goto	u9700
 13776  00488C  EF48  F024         	goto	u9701
 13777  004890                     u9701:
 13778  004890  EF5C  F024         	goto	l7996
 13779  004894                     u9700:
 13780  004894  1E12               	comf	(___aomod@dividend+7)^0,f,c
 13781  004896  1E11               	comf	(___aomod@dividend+6)^0,f,c
 13782  004898  1E10               	comf	(___aomod@dividend+5)^0,f,c
 13783  00489A  1E0F               	comf	(___aomod@dividend+4)^0,f,c
 13784  00489C  1E0E               	comf	(___aomod@dividend+3)^0,f,c
 13785  00489E  1E0D               	comf	(___aomod@dividend+2)^0,f,c
 13786  0048A0  1E0C               	comf	(___aomod@dividend+1)^0,f,c
 13787  0048A2  6C0B               	negf	___aomod@dividend^0,c
 13788  0048A4  0E00               	movlw	0
 13789  0048A6  220C               	addwfc	(___aomod@dividend+1)^0,f,c
 13790  0048A8  220D               	addwfc	(___aomod@dividend+2)^0,f,c
 13791  0048AA  220E               	addwfc	(___aomod@dividend+3)^0,f,c
 13792  0048AC  220F               	addwfc	(___aomod@dividend+4)^0,f,c
 13793  0048AE  2210               	addwfc	(___aomod@dividend+5)^0,f,c
 13794  0048B0  2211               	addwfc	(___aomod@dividend+6)^0,f,c
 13795  0048B2  2212               	addwfc	(___aomod@dividend+7)^0,f,c
 13796  0048B4  0E01               	movlw	1
 13797  0048B6  6E1C               	movwf	___aomod@sign^0,c
 13798  0048B8                     l7996:
 13799  0048B8  BE1A               	btfsc	(___aomod@divisor+7)^0,7,c
 13800  0048BA  EF63  F024         	goto	u9710
 13801  0048BE  EF61  F024         	goto	u9711
 13802  0048C2                     u9711:
 13803  0048C2  EF73  F024         	goto	l8000
 13804  0048C6                     u9710:
 13805  0048C6  1E1A               	comf	(___aomod@divisor+7)^0,f,c
 13806  0048C8  1E19               	comf	(___aomod@divisor+6)^0,f,c
 13807  0048CA  1E18               	comf	(___aomod@divisor+5)^0,f,c
 13808  0048CC  1E17               	comf	(___aomod@divisor+4)^0,f,c
 13809  0048CE  1E16               	comf	(___aomod@divisor+3)^0,f,c
 13810  0048D0  1E15               	comf	(___aomod@divisor+2)^0,f,c
 13811  0048D2  1E14               	comf	(___aomod@divisor+1)^0,f,c
 13812  0048D4  6C13               	negf	___aomod@divisor^0,c
 13813  0048D6  0E00               	movlw	0
 13814  0048D8  2214               	addwfc	(___aomod@divisor+1)^0,f,c
 13815  0048DA  2215               	addwfc	(___aomod@divisor+2)^0,f,c
 13816  0048DC  2216               	addwfc	(___aomod@divisor+3)^0,f,c
 13817  0048DE  2217               	addwfc	(___aomod@divisor+4)^0,f,c
 13818  0048E0  2218               	addwfc	(___aomod@divisor+5)^0,f,c
 13819  0048E2  2219               	addwfc	(___aomod@divisor+6)^0,f,c
 13820  0048E4  221A               	addwfc	(___aomod@divisor+7)^0,f,c
 13821  0048E6                     l8000:
 13822  0048E6  5013               	movf	___aomod@divisor^0,w,c
 13823  0048E8  1014               	iorwf	(___aomod@divisor+1)^0,w,c
 13824  0048EA  1015               	iorwf	(___aomod@divisor+2)^0,w,c
 13825  0048EC  1016               	iorwf	(___aomod@divisor+3)^0,w,c
 13826  0048EE  1017               	iorwf	(___aomod@divisor+4)^0,w,c
 13827  0048F0  1018               	iorwf	(___aomod@divisor+5)^0,w,c
 13828  0048F2  1019               	iorwf	(___aomod@divisor+6)^0,w,c
 13829  0048F4  101A               	iorwf	(___aomod@divisor+7)^0,w,c
 13830  0048F6  B4D8               	btfsc	status,2,c
 13831  0048F8  EF80  F024         	goto	u9721
 13832  0048FC  EF82  F024         	goto	u9720
 13833  004900                     u9721:
 13834  004900  EFCA  F024         	goto	l8016
 13835  004904                     u9720:
 13836  004904  0E01               	movlw	1
 13837  004906  6E1B               	movwf	___aomod@counter^0,c
 13838  004908  EF90  F024         	goto	l8006
 13839  00490C                     l8004:
 13840  00490C  90D8               	bcf	status,0,c
 13841  00490E  3613               	rlcf	___aomod@divisor^0,f,c
 13842  004910  3614               	rlcf	(___aomod@divisor+1)^0,f,c
 13843  004912  3615               	rlcf	(___aomod@divisor+2)^0,f,c
 13844  004914  3616               	rlcf	(___aomod@divisor+3)^0,f,c
 13845  004916  3617               	rlcf	(___aomod@divisor+4)^0,f,c
 13846  004918  3618               	rlcf	(___aomod@divisor+5)^0,f,c
 13847  00491A  3619               	rlcf	(___aomod@divisor+6)^0,f,c
 13848  00491C  361A               	rlcf	(___aomod@divisor+7)^0,f,c
 13849  00491E  2A1B               	incf	___aomod@counter^0,f,c
 13850  004920                     l8006:
 13851  004920  AE1A               	btfss	(___aomod@divisor+7)^0,7,c
 13852  004922  EF95  F024         	goto	u9731
 13853  004926  EF97  F024         	goto	u9730
 13854  00492A                     u9731:
 13855  00492A  EF86  F024         	goto	l8004
 13856  00492E                     u9730:
 13857  00492E                     l8008:
 13858  00492E  5013               	movf	___aomod@divisor^0,w,c
 13859  004930  5C0B               	subwf	___aomod@dividend^0,w,c
 13860  004932  5014               	movf	(___aomod@divisor+1)^0,w,c
 13861  004934  580C               	subwfb	(___aomod@dividend+1)^0,w,c
 13862  004936  5015               	movf	(___aomod@divisor+2)^0,w,c
 13863  004938  580D               	subwfb	(___aomod@dividend+2)^0,w,c
 13864  00493A  5016               	movf	(___aomod@divisor+3)^0,w,c
 13865  00493C  580E               	subwfb	(___aomod@dividend+3)^0,w,c
 13866  00493E  5017               	movf	(___aomod@divisor+4)^0,w,c
 13867  004940  580F               	subwfb	(___aomod@dividend+4)^0,w,c
 13868  004942  5018               	movf	(___aomod@divisor+5)^0,w,c
 13869  004944  5810               	subwfb	(___aomod@dividend+5)^0,w,c
 13870  004946  5019               	movf	(___aomod@divisor+6)^0,w,c
 13871  004948  5811               	subwfb	(___aomod@dividend+6)^0,w,c
 13872  00494A  501A               	movf	(___aomod@divisor+7)^0,w,c
 13873  00494C  5812               	subwfb	(___aomod@dividend+7)^0,w,c
 13874  00494E  A0D8               	btfss	status,0,c
 13875  004950  EFAC  F024         	goto	u9741
 13876  004954  EFAE  F024         	goto	u9740
 13877  004958                     u9741:
 13878  004958  EFBE  F024         	goto	l8012
 13879  00495C                     u9740:
 13880  00495C  5013               	movf	___aomod@divisor^0,w,c
 13881  00495E  5E0B               	subwf	___aomod@dividend^0,f,c
 13882  004960  5014               	movf	(___aomod@divisor+1)^0,w,c
 13883  004962  5A0C               	subwfb	(___aomod@dividend+1)^0,f,c
 13884  004964  5015               	movf	(___aomod@divisor+2)^0,w,c
 13885  004966  5A0D               	subwfb	(___aomod@dividend+2)^0,f,c
 13886  004968  5016               	movf	(___aomod@divisor+3)^0,w,c
 13887  00496A  5A0E               	subwfb	(___aomod@dividend+3)^0,f,c
 13888  00496C  5017               	movf	(___aomod@divisor+4)^0,w,c
 13889  00496E  5A0F               	subwfb	(___aomod@dividend+4)^0,f,c
 13890  004970  5018               	movf	(___aomod@divisor+5)^0,w,c
 13891  004972  5A10               	subwfb	(___aomod@dividend+5)^0,f,c
 13892  004974  5019               	movf	(___aomod@divisor+6)^0,w,c
 13893  004976  5A11               	subwfb	(___aomod@dividend+6)^0,f,c
 13894  004978  501A               	movf	(___aomod@divisor+7)^0,w,c
 13895  00497A  5A12               	subwfb	(___aomod@dividend+7)^0,f,c
 13896  00497C                     l8012:
 13897  00497C  90D8               	bcf	status,0,c
 13898  00497E  321A               	rrcf	(___aomod@divisor+7)^0,f,c
 13899  004980  3219               	rrcf	(___aomod@divisor+6)^0,f,c
 13900  004982  3218               	rrcf	(___aomod@divisor+5)^0,f,c
 13901  004984  3217               	rrcf	(___aomod@divisor+4)^0,f,c
 13902  004986  3216               	rrcf	(___aomod@divisor+3)^0,f,c
 13903  004988  3215               	rrcf	(___aomod@divisor+2)^0,f,c
 13904  00498A  3214               	rrcf	(___aomod@divisor+1)^0,f,c
 13905  00498C  3213               	rrcf	___aomod@divisor^0,f,c
 13906  00498E  2E1B               	decfsz	___aomod@counter^0,f,c
 13907  004990  EF97  F024         	goto	l8008
 13908  004994                     l8016:
 13909  004994  501C               	movf	___aomod@sign^0,w,c
 13910  004996  B4D8               	btfsc	status,2,c
 13911  004998  EFD0  F024         	goto	u9751
 13912  00499C  EFD2  F024         	goto	u9750
 13913  0049A0                     u9751:
 13914  0049A0  EFE2  F024         	goto	l8020
 13915  0049A4                     u9750:
 13916  0049A4  1E12               	comf	(___aomod@dividend+7)^0,f,c
 13917  0049A6  1E11               	comf	(___aomod@dividend+6)^0,f,c
 13918  0049A8  1E10               	comf	(___aomod@dividend+5)^0,f,c
 13919  0049AA  1E0F               	comf	(___aomod@dividend+4)^0,f,c
 13920  0049AC  1E0E               	comf	(___aomod@dividend+3)^0,f,c
 13921  0049AE  1E0D               	comf	(___aomod@dividend+2)^0,f,c
 13922  0049B0  1E0C               	comf	(___aomod@dividend+1)^0,f,c
 13923  0049B2  6C0B               	negf	___aomod@dividend^0,c
 13924  0049B4  0E00               	movlw	0
 13925  0049B6  220C               	addwfc	(___aomod@dividend+1)^0,f,c
 13926  0049B8  220D               	addwfc	(___aomod@dividend+2)^0,f,c
 13927  0049BA  220E               	addwfc	(___aomod@dividend+3)^0,f,c
 13928  0049BC  220F               	addwfc	(___aomod@dividend+4)^0,f,c
 13929  0049BE  2210               	addwfc	(___aomod@dividend+5)^0,f,c
 13930  0049C0  2211               	addwfc	(___aomod@dividend+6)^0,f,c
 13931  0049C2  2212               	addwfc	(___aomod@dividend+7)^0,f,c
 13932  0049C4                     l8020:
 13933  0049C4  C00B  F00B         	movff	___aomod@dividend,?___aomod
 13934  0049C8  C00C  F00C         	movff	___aomod@dividend+1,?___aomod+1
 13935  0049CC  C00D  F00D         	movff	___aomod@dividend+2,?___aomod+2
 13936  0049D0  C00E  F00E         	movff	___aomod@dividend+3,?___aomod+3
 13937  0049D4  C00F  F00F         	movff	___aomod@dividend+4,?___aomod+4
 13938  0049D8  C010  F010         	movff	___aomod@dividend+5,?___aomod+5
 13939  0049DC  C011  F011         	movff	___aomod@dividend+6,?___aomod+6
 13940  0049E0  C012  F012         	movff	___aomod@dividend+7,?___aomod+7
 13941  0049E4  0012               	return		;funcret
 13942  0049E6                     __end_of___aomod:
 13943                           	opt callstack 0
 13944                           
 13945 ;; *************** function ___aodiv *****************
 13946 ;; Defined at:
 13947 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  dividend        8   10[COMRAM] long long 
 13950 ;;  divisor         8   18[COMRAM] long long 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  quotient        8   28[COMRAM] long long 
 13953 ;;  sign            1   27[COMRAM] unsigned char 
 13954 ;;  counter         1   26[COMRAM] unsigned char 
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  8   10[COMRAM] long long 
 13957 ;; Registers used:
 13958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13964 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13967 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13968 ;;Total ram usage:       26 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; Hardware stack levels required when called:    5
 13971 ;; This function calls:
 13972 ;;		Nothing
 13973 ;; This function is called by:
 13974 ;;		_dtoa
 13975 ;; This function uses a non-reentrant model
 13976 ;;
 13977                           
 13978                           	psect	text34
 13979  004296                     __ptext34:
 13980                           	opt callstack 0
 13981  004296                     ___aodiv:
 13982                           	opt callstack 20
 13983  004296  0E00               	movlw	0
 13984  004298  6E1C               	movwf	___aodiv@sign^0,c
 13985  00429A  BE1A               	btfsc	(___aodiv@divisor+7)^0,7,c
 13986  00429C  EF54  F021         	goto	u9630
 13987  0042A0  EF52  F021         	goto	u9631
 13988  0042A4                     u9631:
 13989  0042A4  EF66  F021         	goto	l7952
 13990  0042A8                     u9630:
 13991  0042A8  1E1A               	comf	(___aodiv@divisor+7)^0,f,c
 13992  0042AA  1E19               	comf	(___aodiv@divisor+6)^0,f,c
 13993  0042AC  1E18               	comf	(___aodiv@divisor+5)^0,f,c
 13994  0042AE  1E17               	comf	(___aodiv@divisor+4)^0,f,c
 13995  0042B0  1E16               	comf	(___aodiv@divisor+3)^0,f,c
 13996  0042B2  1E15               	comf	(___aodiv@divisor+2)^0,f,c
 13997  0042B4  1E14               	comf	(___aodiv@divisor+1)^0,f,c
 13998  0042B6  6C13               	negf	___aodiv@divisor^0,c
 13999  0042B8  0E00               	movlw	0
 14000  0042BA  2214               	addwfc	(___aodiv@divisor+1)^0,f,c
 14001  0042BC  2215               	addwfc	(___aodiv@divisor+2)^0,f,c
 14002  0042BE  2216               	addwfc	(___aodiv@divisor+3)^0,f,c
 14003  0042C0  2217               	addwfc	(___aodiv@divisor+4)^0,f,c
 14004  0042C2  2218               	addwfc	(___aodiv@divisor+5)^0,f,c
 14005  0042C4  2219               	addwfc	(___aodiv@divisor+6)^0,f,c
 14006  0042C6  221A               	addwfc	(___aodiv@divisor+7)^0,f,c
 14007  0042C8  0E01               	movlw	1
 14008  0042CA  6E1C               	movwf	___aodiv@sign^0,c
 14009  0042CC                     l7952:
 14010  0042CC  BE12               	btfsc	(___aodiv@dividend+7)^0,7,c
 14011  0042CE  EF6D  F021         	goto	u9640
 14012  0042D2  EF6B  F021         	goto	u9641
 14013  0042D6                     u9641:
 14014  0042D6  EF7F  F021         	goto	l7958
 14015  0042DA                     u9640:
 14016  0042DA  1E12               	comf	(___aodiv@dividend+7)^0,f,c
 14017  0042DC  1E11               	comf	(___aodiv@dividend+6)^0,f,c
 14018  0042DE  1E10               	comf	(___aodiv@dividend+5)^0,f,c
 14019  0042E0  1E0F               	comf	(___aodiv@dividend+4)^0,f,c
 14020  0042E2  1E0E               	comf	(___aodiv@dividend+3)^0,f,c
 14021  0042E4  1E0D               	comf	(___aodiv@dividend+2)^0,f,c
 14022  0042E6  1E0C               	comf	(___aodiv@dividend+1)^0,f,c
 14023  0042E8  6C0B               	negf	___aodiv@dividend^0,c
 14024  0042EA  0E00               	movlw	0
 14025  0042EC  220C               	addwfc	(___aodiv@dividend+1)^0,f,c
 14026  0042EE  220D               	addwfc	(___aodiv@dividend+2)^0,f,c
 14027  0042F0  220E               	addwfc	(___aodiv@dividend+3)^0,f,c
 14028  0042F2  220F               	addwfc	(___aodiv@dividend+4)^0,f,c
 14029  0042F4  2210               	addwfc	(___aodiv@dividend+5)^0,f,c
 14030  0042F6  2211               	addwfc	(___aodiv@dividend+6)^0,f,c
 14031  0042F8  2212               	addwfc	(___aodiv@dividend+7)^0,f,c
 14032  0042FA  0E01               	movlw	1
 14033  0042FC  1A1C               	xorwf	___aodiv@sign^0,f,c
 14034  0042FE                     l7958:
 14035  0042FE  EE20  F01D         	lfsr	2,___aodiv@quotient
 14036  004302  0E07               	movlw	7
 14037  004304                     u9651:
 14038  004304  6ADE               	clrf	postinc2,c
 14039  004306  06E8               	decf	wreg,f,c
 14040  004308  E2FD               	bc	u9651
 14041  00430A  5013               	movf	___aodiv@divisor^0,w,c
 14042  00430C  1014               	iorwf	(___aodiv@divisor+1)^0,w,c
 14043  00430E  1015               	iorwf	(___aodiv@divisor+2)^0,w,c
 14044  004310  1016               	iorwf	(___aodiv@divisor+3)^0,w,c
 14045  004312  1017               	iorwf	(___aodiv@divisor+4)^0,w,c
 14046  004314  1018               	iorwf	(___aodiv@divisor+5)^0,w,c
 14047  004316  1019               	iorwf	(___aodiv@divisor+6)^0,w,c
 14048  004318  101A               	iorwf	(___aodiv@divisor+7)^0,w,c
 14049  00431A  B4D8               	btfsc	status,2,c
 14050  00431C  EF92  F021         	goto	u9661
 14051  004320  EF94  F021         	goto	u9660
 14052  004324                     u9661:
 14053  004324  EFE6  F021         	goto	l7980
 14054  004328                     u9660:
 14055  004328  0E01               	movlw	1
 14056  00432A  6E1B               	movwf	___aodiv@counter^0,c
 14057  00432C  EFA2  F021         	goto	l7966
 14058  004330                     l7964:
 14059  004330  90D8               	bcf	status,0,c
 14060  004332  3613               	rlcf	___aodiv@divisor^0,f,c
 14061  004334  3614               	rlcf	(___aodiv@divisor+1)^0,f,c
 14062  004336  3615               	rlcf	(___aodiv@divisor+2)^0,f,c
 14063  004338  3616               	rlcf	(___aodiv@divisor+3)^0,f,c
 14064  00433A  3617               	rlcf	(___aodiv@divisor+4)^0,f,c
 14065  00433C  3618               	rlcf	(___aodiv@divisor+5)^0,f,c
 14066  00433E  3619               	rlcf	(___aodiv@divisor+6)^0,f,c
 14067  004340  361A               	rlcf	(___aodiv@divisor+7)^0,f,c
 14068  004342  2A1B               	incf	___aodiv@counter^0,f,c
 14069  004344                     l7966:
 14070  004344  AE1A               	btfss	(___aodiv@divisor+7)^0,7,c
 14071  004346  EFA7  F021         	goto	u9671
 14072  00434A  EFA9  F021         	goto	u9670
 14073  00434E                     u9671:
 14074  00434E  EF98  F021         	goto	l7964
 14075  004352                     u9670:
 14076  004352                     l7968:
 14077  004352  90D8               	bcf	status,0,c
 14078  004354  361D               	rlcf	___aodiv@quotient^0,f,c
 14079  004356  361E               	rlcf	(___aodiv@quotient+1)^0,f,c
 14080  004358  361F               	rlcf	(___aodiv@quotient+2)^0,f,c
 14081  00435A  3620               	rlcf	(___aodiv@quotient+3)^0,f,c
 14082  00435C  3621               	rlcf	(___aodiv@quotient+4)^0,f,c
 14083  00435E  3622               	rlcf	(___aodiv@quotient+5)^0,f,c
 14084  004360  3623               	rlcf	(___aodiv@quotient+6)^0,f,c
 14085  004362  3624               	rlcf	(___aodiv@quotient+7)^0,f,c
 14086  004364  5013               	movf	___aodiv@divisor^0,w,c
 14087  004366  5C0B               	subwf	___aodiv@dividend^0,w,c
 14088  004368  5014               	movf	(___aodiv@divisor+1)^0,w,c
 14089  00436A  580C               	subwfb	(___aodiv@dividend+1)^0,w,c
 14090  00436C  5015               	movf	(___aodiv@divisor+2)^0,w,c
 14091  00436E  580D               	subwfb	(___aodiv@dividend+2)^0,w,c
 14092  004370  5016               	movf	(___aodiv@divisor+3)^0,w,c
 14093  004372  580E               	subwfb	(___aodiv@dividend+3)^0,w,c
 14094  004374  5017               	movf	(___aodiv@divisor+4)^0,w,c
 14095  004376  580F               	subwfb	(___aodiv@dividend+4)^0,w,c
 14096  004378  5018               	movf	(___aodiv@divisor+5)^0,w,c
 14097  00437A  5810               	subwfb	(___aodiv@dividend+5)^0,w,c
 14098  00437C  5019               	movf	(___aodiv@divisor+6)^0,w,c
 14099  00437E  5811               	subwfb	(___aodiv@dividend+6)^0,w,c
 14100  004380  501A               	movf	(___aodiv@divisor+7)^0,w,c
 14101  004382  5812               	subwfb	(___aodiv@dividend+7)^0,w,c
 14102  004384  A0D8               	btfss	status,0,c
 14103  004386  EFC7  F021         	goto	u9681
 14104  00438A  EFC9  F021         	goto	u9680
 14105  00438E                     u9681:
 14106  00438E  EFDA  F021         	goto	l7976
 14107  004392                     u9680:
 14108  004392  5013               	movf	___aodiv@divisor^0,w,c
 14109  004394  5E0B               	subwf	___aodiv@dividend^0,f,c
 14110  004396  5014               	movf	(___aodiv@divisor+1)^0,w,c
 14111  004398  5A0C               	subwfb	(___aodiv@dividend+1)^0,f,c
 14112  00439A  5015               	movf	(___aodiv@divisor+2)^0,w,c
 14113  00439C  5A0D               	subwfb	(___aodiv@dividend+2)^0,f,c
 14114  00439E  5016               	movf	(___aodiv@divisor+3)^0,w,c
 14115  0043A0  5A0E               	subwfb	(___aodiv@dividend+3)^0,f,c
 14116  0043A2  5017               	movf	(___aodiv@divisor+4)^0,w,c
 14117  0043A4  5A0F               	subwfb	(___aodiv@dividend+4)^0,f,c
 14118  0043A6  5018               	movf	(___aodiv@divisor+5)^0,w,c
 14119  0043A8  5A10               	subwfb	(___aodiv@dividend+5)^0,f,c
 14120  0043AA  5019               	movf	(___aodiv@divisor+6)^0,w,c
 14121  0043AC  5A11               	subwfb	(___aodiv@dividend+6)^0,f,c
 14122  0043AE  501A               	movf	(___aodiv@divisor+7)^0,w,c
 14123  0043B0  5A12               	subwfb	(___aodiv@dividend+7)^0,f,c
 14124  0043B2  801D               	bsf	___aodiv@quotient^0,0,c
 14125  0043B4                     l7976:
 14126  0043B4  90D8               	bcf	status,0,c
 14127  0043B6  321A               	rrcf	(___aodiv@divisor+7)^0,f,c
 14128  0043B8  3219               	rrcf	(___aodiv@divisor+6)^0,f,c
 14129  0043BA  3218               	rrcf	(___aodiv@divisor+5)^0,f,c
 14130  0043BC  3217               	rrcf	(___aodiv@divisor+4)^0,f,c
 14131  0043BE  3216               	rrcf	(___aodiv@divisor+3)^0,f,c
 14132  0043C0  3215               	rrcf	(___aodiv@divisor+2)^0,f,c
 14133  0043C2  3214               	rrcf	(___aodiv@divisor+1)^0,f,c
 14134  0043C4  3213               	rrcf	___aodiv@divisor^0,f,c
 14135  0043C6  2E1B               	decfsz	___aodiv@counter^0,f,c
 14136  0043C8  EFA9  F021         	goto	l7968
 14137  0043CC                     l7980:
 14138  0043CC  501C               	movf	___aodiv@sign^0,w,c
 14139  0043CE  B4D8               	btfsc	status,2,c
 14140  0043D0  EFEC  F021         	goto	u9691
 14141  0043D4  EFEE  F021         	goto	u9690
 14142  0043D8                     u9691:
 14143  0043D8  EFFE  F021         	goto	l7984
 14144  0043DC                     u9690:
 14145  0043DC  1E24               	comf	(___aodiv@quotient+7)^0,f,c
 14146  0043DE  1E23               	comf	(___aodiv@quotient+6)^0,f,c
 14147  0043E0  1E22               	comf	(___aodiv@quotient+5)^0,f,c
 14148  0043E2  1E21               	comf	(___aodiv@quotient+4)^0,f,c
 14149  0043E4  1E20               	comf	(___aodiv@quotient+3)^0,f,c
 14150  0043E6  1E1F               	comf	(___aodiv@quotient+2)^0,f,c
 14151  0043E8  1E1E               	comf	(___aodiv@quotient+1)^0,f,c
 14152  0043EA  6C1D               	negf	___aodiv@quotient^0,c
 14153  0043EC  0E00               	movlw	0
 14154  0043EE  221E               	addwfc	(___aodiv@quotient+1)^0,f,c
 14155  0043F0  221F               	addwfc	(___aodiv@quotient+2)^0,f,c
 14156  0043F2  2220               	addwfc	(___aodiv@quotient+3)^0,f,c
 14157  0043F4  2221               	addwfc	(___aodiv@quotient+4)^0,f,c
 14158  0043F6  2222               	addwfc	(___aodiv@quotient+5)^0,f,c
 14159  0043F8  2223               	addwfc	(___aodiv@quotient+6)^0,f,c
 14160  0043FA  2224               	addwfc	(___aodiv@quotient+7)^0,f,c
 14161  0043FC                     l7984:
 14162  0043FC  C01D  F00B         	movff	___aodiv@quotient,?___aodiv
 14163  004400  C01E  F00C         	movff	___aodiv@quotient+1,?___aodiv+1
 14164  004404  C01F  F00D         	movff	___aodiv@quotient+2,?___aodiv+2
 14165  004408  C020  F00E         	movff	___aodiv@quotient+3,?___aodiv+3
 14166  00440C  C021  F00F         	movff	___aodiv@quotient+4,?___aodiv+4
 14167  004410  C022  F010         	movff	___aodiv@quotient+5,?___aodiv+5
 14168  004414  C023  F011         	movff	___aodiv@quotient+6,?___aodiv+6
 14169  004418  C024  F012         	movff	___aodiv@quotient+7,?___aodiv+7
 14170  00441C  0012               	return		;funcret
 14171  00441E                     __end_of___aodiv:
 14172                           	opt callstack 0
 14173                           
 14174 ;; *************** function _ctoa *****************
 14175 ;; Defined at:
 14176 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14177 ;; Parameters:    Size  Location     Type
 14178 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
 14179 ;;		 -> vsnprintf@f(6), 
 14180 ;;  c               1   39[COMRAM] unsigned char 
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;  w               2   40[COMRAM] int 
 14183 ;;  l               2    0        int 
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  2   37[COMRAM] int 
 14186 ;; Registers used:
 14187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14193 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14196 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14197 ;;Total ram usage:        5 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; Hardware stack levels required when called:    9
 14200 ;; This function calls:
 14201 ;;		_pad
 14202 ;; This function is called by:
 14203 ;;		_vfpfcnvrt
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           	psect	text35
 14208  0059D8                     __ptext35:
 14209                           	opt callstack 0
 14210  0059D8                     _ctoa:
 14211                           	opt callstack 17
 14212  0059D8                     
 14213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14214  0059D8  504C               	movf	_width^0,w,c
 14215  0059DA  104D               	iorwf	(_width+1)^0,w,c
 14216  0059DC  A4D8               	btfss	status,2,c
 14217  0059DE  EFF3  F02C         	goto	u10551
 14218  0059E2  EFF5  F02C         	goto	u10550
 14219  0059E6                     u10551:
 14220  0059E6  EFFB  F02C         	goto	l8522
 14221  0059EA                     u10550:
 14222  0059EA  C04C  F029         	movff	_width,ctoa@w
 14223  0059EE  C04D  F02A         	movff	_width+1,ctoa@w+1
 14224  0059F2  EF01  F02D         	goto	l8524
 14225  0059F6                     l8522:
 14226  0059F6  0EFF               	movlw	255
 14227  0059F8  244C               	addwf	_width^0,w,c
 14228  0059FA  6E29               	movwf	ctoa@w^0,c
 14229  0059FC  0EFF               	movlw	255
 14230  0059FE  204D               	addwfc	(_width+1)^0,w,c
 14231  005A00  6E2A               	movwf	(ctoa@w+1)^0,c
 14232  005A02                     l8524:
 14233                           
 14234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14235  005A02  C028  F16C         	movff	ctoa@c,_dbuf
 14236  005A06                     
 14237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14238  005A06  0E00               	movlw	0
 14239  005A08  0101               	movlb	1	; () banked
 14240  005A0A  6F6D               	movwf	(_dbuf+1)& (0+255),b
 14241  005A0C                     
 14242                           ; BSR set to: 1
 14243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14244  005A0C  C026  F01B         	movff	ctoa@fp,pad@fp
 14245  005A10  C027  F01C         	movff	ctoa@fp+1,pad@fp+1
 14246  005A14  0E6C               	movlw	low _dbuf
 14247  005A16  6E1D               	movwf	pad@buf^0,c
 14248  005A18  0E01               	movlw	high _dbuf
 14249  005A1A  6E1E               	movwf	(pad@buf+1)^0,c
 14250  005A1C  C029  F01F         	movff	ctoa@w,pad@p
 14251  005A20  C02A  F020         	movff	ctoa@w+1,pad@p+1
 14252  005A24  EC58  F02A         	call	_pad	;wreg free
 14253  005A28  C01B  F026         	movff	?_pad,?_ctoa
 14254  005A2C  C01C  F027         	movff	?_pad+1,?_ctoa+1
 14255  005A30  0012               	return		;funcret
 14256  005A32                     __end_of_ctoa:
 14257                           	opt callstack 0
 14258                           
 14259 ;; *************** function _pad *****************
 14260 ;; Defined at:
 14261 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
 14264 ;;		 -> vsnprintf@f(6), 
 14265 ;;  buf             2   28[COMRAM] PTR unsigned char 
 14266 ;;		 -> dbuf(80), 
 14267 ;;  p               2   30[COMRAM] int 
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;  w               2   35[COMRAM] int 
 14270 ;;  i               2   33[COMRAM] int 
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  2   26[COMRAM] int 
 14273 ;; Registers used:
 14274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14280 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14281 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;Total ram usage:       11 bytes
 14285 ;; Hardware stack levels used:    1
 14286 ;; Hardware stack levels required when called:    8
 14287 ;; This function calls:
 14288 ;;		_fputc
 14289 ;;		_fputs
 14290 ;;		_strlen
 14291 ;; This function is called by:
 14292 ;;		_ctoa
 14293 ;;		_dtoa
 14294 ;;		_efgtoa
 14295 ;;		_otoa
 14296 ;;		_utoa
 14297 ;;		_xtoa
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text36
 14302  0054B0                     __ptext36:
 14303                           	opt callstack 0
 14304  0054B0                     _pad:
 14305                           	opt callstack 17
 14306  0054B0                     
 14307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14308  0054B0  A050               	btfss	_flags^0,0,c
 14309  0054B2  EF5D  F02A         	goto	u9291
 14310  0054B6  EF5F  F02A         	goto	u9290
 14311  0054BA                     u9291:
 14312  0054BA  EF69  F02A         	goto	l7834
 14313  0054BE                     u9290:
 14314  0054BE                     
 14315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14316  0054BE  C01D  F014         	movff	pad@buf,fputs@s
 14317  0054C2  C01E  F015         	movff	pad@buf+1,fputs@s+1
 14318  0054C6  C01B  F016         	movff	pad@fp,fputs@fp
 14319  0054CA  C01C  F017         	movff	pad@fp+1,fputs@fp+1
 14320  0054CE  ECD0  F02D         	call	_fputs	;wreg free
 14321  0054D2                     l7834:
 14322                           
 14323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14324  0054D2  BE20               	btfsc	(pad@p+1)^0,7,c
 14325  0054D4  EF6E  F02A         	goto	u9301
 14326  0054D8  EF70  F02A         	goto	u9300
 14327  0054DC                     u9301:
 14328  0054DC  EF76  F02A         	goto	l7838
 14329  0054E0                     u9300:
 14330  0054E0  C01F  F024         	movff	pad@p,pad@w
 14331  0054E4  C020  F025         	movff	pad@p+1,pad@w+1
 14332  0054E8  EF7A  F02A         	goto	l657
 14333  0054EC                     l7838:
 14334  0054EC  0E00               	movlw	0
 14335  0054EE  6E25               	movwf	(pad@w+1)^0,c
 14336  0054F0  0E00               	movlw	0
 14337  0054F2  6E24               	movwf	pad@w^0,c
 14338  0054F4                     l657:
 14339                           
 14340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14341  0054F4  0E00               	movlw	0
 14342  0054F6  6E23               	movwf	(pad@i+1)^0,c
 14343  0054F8  0E00               	movlw	0
 14344  0054FA  6E22               	movwf	pad@i^0,c
 14345                           
 14346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14347  0054FC  EF8C  F02A         	goto	l7844
 14348  005500                     l7840:
 14349                           
 14350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14351  005500  0E00               	movlw	0
 14352  005502  6E0C               	movwf	(fputc@c+1)^0,c
 14353  005504  0E20               	movlw	32
 14354  005506  6E0B               	movwf	fputc@c^0,c
 14355  005508  C01B  F00D         	movff	pad@fp,fputc@fp
 14356  00550C  C01C  F00E         	movff	pad@fp+1,fputc@fp+1
 14357  005510  EC91  F029         	call	_fputc	;wreg free
 14358  005514                     
 14359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14360  005514  4A22               	infsnz	pad@i^0,f,c
 14361  005516  2A23               	incf	(pad@i+1)^0,f,c
 14362  005518                     l7844:
 14363                           
 14364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14365  005518  5024               	movf	pad@w^0,w,c
 14366  00551A  5C22               	subwf	pad@i^0,w,c
 14367  00551C  5023               	movf	(pad@i+1)^0,w,c
 14368  00551E  0A80               	xorlw	128
 14369  005520  6E21               	movwf	??_pad^0,c
 14370  005522  5025               	movf	(pad@w+1)^0,w,c
 14371  005524  0A80               	xorlw	128
 14372  005526  5821               	subwfb	??_pad^0,w,c
 14373  005528  A0D8               	btfss	status,0,c
 14374  00552A  EF99  F02A         	goto	u9311
 14375  00552E  EF9B  F02A         	goto	u9310
 14376  005532                     u9311:
 14377  005532  EF80  F02A         	goto	l7840
 14378  005536                     u9310:
 14379  005536                     
 14380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14381  005536  B050               	btfsc	_flags^0,0,c
 14382  005538  EFA0  F02A         	goto	u9321
 14383  00553C  EFA2  F02A         	goto	u9320
 14384  005540                     u9321:
 14385  005540  EFAC  F02A         	goto	l7848
 14386  005544                     u9320:
 14387  005544                     
 14388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14389  005544  C01D  F014         	movff	pad@buf,fputs@s
 14390  005548  C01E  F015         	movff	pad@buf+1,fputs@s+1
 14391  00554C  C01B  F016         	movff	pad@fp,fputs@fp
 14392  005550  C01C  F017         	movff	pad@fp+1,fputs@fp+1
 14393  005554  ECD0  F02D         	call	_fputs	;wreg free
 14394  005558                     l7848:
 14395                           
 14396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14397  005558  C01D  F00B         	movff	pad@buf,strlen@s
 14398  00555C  C01E  F00C         	movff	pad@buf+1,strlen@s+1
 14399  005560  ECFF  F02E         	call	_strlen	;wreg free
 14400  005564  5024               	movf	pad@w^0,w,c
 14401  005566  240B               	addwf	?_strlen^0,w,c
 14402  005568  6E1B               	movwf	?_pad^0,c
 14403  00556A  5025               	movf	(pad@w+1)^0,w,c
 14404  00556C  200C               	addwfc	(?_strlen+1)^0,w,c
 14405  00556E  6E1C               	movwf	(?_pad+1)^0,c
 14406  005570  0012               	return		;funcret
 14407  005572                     __end_of_pad:
 14408                           	opt callstack 0
 14409                           
 14410 ;; *************** function _strlen *****************
 14411 ;; Defined at:
 14412 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;  s               2   10[COMRAM] PTR const unsigned char 
 14415 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 14416 ;; Auto vars:     Size  Location     Type
 14417 ;;  a               2   12[COMRAM] PTR const unsigned char 
 14418 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 14419 ;; Return value:  Size  Location     Type
 14420 ;;                  2   10[COMRAM] unsigned int 
 14421 ;; Registers used:
 14422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14423 ;; Tracked objects:
 14424 ;;		On entry : 0/0
 14425 ;;		On exit  : 0/0
 14426 ;;		Unchanged: 0/0
 14427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14432 ;;Total ram usage:        4 bytes
 14433 ;; Hardware stack levels used:    1
 14434 ;; Hardware stack levels required when called:    5
 14435 ;; This function calls:
 14436 ;;		Nothing
 14437 ;; This function is called by:
 14438 ;;		_pad
 14439 ;;		_stoa
 14440 ;; This function uses a non-reentrant model
 14441 ;;
 14442                           
 14443                           	psect	text37
 14444  005DFE                     __ptext37:
 14445                           	opt callstack 0
 14446  005DFE                     _strlen:
 14447                           	opt callstack 19
 14448  005DFE  C00B  F00D         	movff	strlen@s,strlen@a
 14449  005E02  C00C  F00E         	movff	strlen@s+1,strlen@a+1
 14450  005E06  EF07  F02F         	goto	l7614
 14451  005E0A                     l7612:
 14452  005E0A  4A0B               	infsnz	strlen@s^0,f,c
 14453  005E0C  2A0C               	incf	(strlen@s+1)^0,f,c
 14454  005E0E                     l7614:
 14455  005E0E  C00B  FFD9         	movff	strlen@s,fsr2l
 14456  005E12  C00C  FFDA         	movff	strlen@s+1,fsr2h
 14457  005E16  50DF               	movf	indf2,w,c
 14458  005E18  A4D8               	btfss	status,2,c
 14459  005E1A  EF11  F02F         	goto	u8851
 14460  005E1E  EF13  F02F         	goto	u8850
 14461  005E22                     u8851:
 14462  005E22  EF05  F02F         	goto	l7612
 14463  005E26                     u8850:
 14464  005E26  500D               	movf	strlen@a^0,w,c
 14465  005E28  5C0B               	subwf	strlen@s^0,w,c
 14466  005E2A  6E0B               	movwf	?_strlen^0,c
 14467  005E2C  500E               	movf	(strlen@a+1)^0,w,c
 14468  005E2E  580C               	subwfb	(strlen@s+1)^0,w,c
 14469  005E30  6E0C               	movwf	(?_strlen+1)^0,c
 14470  005E32  0012               	return		;funcret
 14471  005E34                     __end_of_strlen:
 14472                           	opt callstack 0
 14473                           
 14474 ;; *************** function _fputs *****************
 14475 ;; Defined at:
 14476 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;  s               2   19[COMRAM] PTR const unsigned char 
 14479 ;;		 -> dbuf(80), 
 14480 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 14481 ;;		 -> vsnprintf@f(6), 
 14482 ;; Auto vars:     Size  Location     Type
 14483 ;;  i               2   24[COMRAM] int 
 14484 ;;  c               1   23[COMRAM] unsigned char 
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  2   19[COMRAM] int 
 14487 ;; Registers used:
 14488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/0
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14495 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14498 ;;Total ram usage:        7 bytes
 14499 ;; Hardware stack levels used:    1
 14500 ;; Hardware stack levels required when called:    7
 14501 ;; This function calls:
 14502 ;;		_fputc
 14503 ;; This function is called by:
 14504 ;;		_pad
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           	psect	text38
 14509  005BA0                     __ptext38:
 14510                           	opt callstack 0
 14511  005BA0                     _fputs:
 14512                           	opt callstack 17
 14513  005BA0  0E00               	movlw	0
 14514  005BA2  6E1A               	movwf	(fputs@i+1)^0,c
 14515  005BA4  0E00               	movlw	0
 14516  005BA6  6E19               	movwf	fputs@i^0,c
 14517  005BA8  EFE1  F02D         	goto	l7608
 14518  005BAC                     l7604:
 14519  005BAC  C018  F00B         	movff	fputs@c,fputc@c
 14520  005BB0  6A0C               	clrf	(fputc@c+1)^0,c
 14521  005BB2  C016  F00D         	movff	fputs@fp,fputc@fp
 14522  005BB6  C017  F00E         	movff	fputs@fp+1,fputc@fp+1
 14523  005BBA  EC91  F029         	call	_fputc	;wreg free
 14524  005BBE  4A19               	infsnz	fputs@i^0,f,c
 14525  005BC0  2A1A               	incf	(fputs@i+1)^0,f,c
 14526  005BC2                     l7608:
 14527  005BC2  5019               	movf	fputs@i^0,w,c
 14528  005BC4  2414               	addwf	fputs@s^0,w,c
 14529  005BC6  6ED9               	movwf	fsr2l,c
 14530  005BC8  501A               	movf	(fputs@i+1)^0,w,c
 14531  005BCA  2015               	addwfc	(fputs@s+1)^0,w,c
 14532  005BCC  6EDA               	movwf	fsr2h,c
 14533  005BCE  50DF               	movf	indf2,w,c
 14534  005BD0  6E18               	movwf	fputs@c^0,c
 14535  005BD2  5018               	movf	fputs@c^0,w,c
 14536  005BD4  A4D8               	btfss	status,2,c
 14537  005BD6  EFEF  F02D         	goto	u8841
 14538  005BDA  EFF1  F02D         	goto	u8840
 14539  005BDE                     u8841:
 14540  005BDE  EFD6  F02D         	goto	l7604
 14541  005BE2                     u8840:
 14542  005BE2  0012               	return		;funcret
 14543  005BE4                     __end_of_fputs:
 14544                           	opt callstack 0
 14545                           
 14546 ;; *************** function _fputc *****************
 14547 ;; Defined at:
 14548 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;  c               2   10[COMRAM] int 
 14551 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 14552 ;;		 -> vsnprintf@f(6), 
 14553 ;; Auto vars:     Size  Location     Type
 14554 ;;		None
 14555 ;; Return value:  Size  Location     Type
 14556 ;;                  2   10[COMRAM] int 
 14557 ;; Registers used:
 14558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14559 ;; Tracked objects:
 14560 ;;		On entry : 0/0
 14561 ;;		On exit  : 0/0
 14562 ;;		Unchanged: 0/0
 14563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14568 ;;Total ram usage:        9 bytes
 14569 ;; Hardware stack levels used:    1
 14570 ;; Hardware stack levels required when called:    6
 14571 ;; This function calls:
 14572 ;;		_putch
 14573 ;; This function is called by:
 14574 ;;		_pad
 14575 ;;		_stoa
 14576 ;;		_vfpfcnvrt
 14577 ;;		_fputs
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           	psect	text39
 14582  005322                     __ptext39:
 14583                           	opt callstack 0
 14584  005322                     _fputc:
 14585                           	opt callstack 17
 14586  005322  500D               	movf	fputc@fp^0,w,c
 14587  005324  100E               	iorwf	(fputc@fp+1)^0,w,c
 14588  005326  B4D8               	btfsc	status,2,c
 14589  005328  EF98  F029         	goto	u8801
 14590  00532C  EF9A  F029         	goto	u8800
 14591  005330                     u8801:
 14592  005330  EFA3  F029         	goto	l7592
 14593  005334                     u8800:
 14594  005334  500D               	movf	fputc@fp^0,w,c
 14595  005336  100E               	iorwf	(fputc@fp+1)^0,w,c
 14596  005338  A4D8               	btfss	status,2,c
 14597  00533A  EFA1  F029         	goto	u8811
 14598  00533E  EFA3  F029         	goto	u8810
 14599  005342                     u8811:
 14600  005342  EFA8  F029         	goto	l7594
 14601  005346                     u8810:
 14602  005346                     l7592:
 14603  005346  500B               	movf	fputc@c^0,w,c
 14604  005348  ECDF  F030         	call	_putch
 14605  00534C  EFF5  F029         	goto	l1736
 14606  005350                     l7594:
 14607  005350  EE20 F004          	lfsr	2,4
 14608  005354  500D               	movf	fputc@fp^0,w,c
 14609  005356  26D9               	addwf	fsr2l,f,c
 14610  005358  500E               	movf	(fputc@fp+1)^0,w,c
 14611  00535A  22DA               	addwfc	fsr2h,f,c
 14612  00535C  50DE               	movf	postinc2,w,c
 14613  00535E  10DE               	iorwf	postinc2,w,c
 14614  005360  B4D8               	btfsc	status,2,c
 14615  005362  EFB5  F029         	goto	u8821
 14616  005366  EFB7  F029         	goto	u8820
 14617  00536A                     u8821:
 14618  00536A  EFD2  F029         	goto	l7598
 14619  00536E                     u8820:
 14620  00536E  EE20 F004          	lfsr	2,4
 14621  005372  500D               	movf	fputc@fp^0,w,c
 14622  005374  26D9               	addwf	fsr2l,f,c
 14623  005376  500E               	movf	(fputc@fp+1)^0,w,c
 14624  005378  22DA               	addwfc	fsr2h,f,c
 14625  00537A  EE10 F002          	lfsr	1,2
 14626  00537E  500D               	movf	fputc@fp^0,w,c
 14627  005380  26E1               	addwf	fsr1l,f,c
 14628  005382  500E               	movf	(fputc@fp+1)^0,w,c
 14629  005384  22E2               	addwfc	fsr1h,f,c
 14630  005386  50DE               	movf	postinc2,w,c
 14631  005388  5CE6               	subwf	postinc1,w,c
 14632  00538A  50E6               	movf	postinc1,w,c
 14633  00538C  0A80               	xorlw	128
 14634  00538E  6E13               	movwf	(??_fputc+4)^0,c
 14635  005390  50DE               	movf	postinc2,w,c
 14636  005392  0A80               	xorlw	128
 14637  005394  5813               	subwfb	(??_fputc+4)^0,w,c
 14638  005396  B0D8               	btfsc	status,0,c
 14639  005398  EFD0  F029         	goto	u8831
 14640  00539C  EFD2  F029         	goto	u8830
 14641  0053A0                     u8831:
 14642  0053A0  EFF5  F029         	goto	l1736
 14643  0053A4                     u8830:
 14644  0053A4                     l7598:
 14645  0053A4  EE20 F002          	lfsr	2,2
 14646  0053A8  500D               	movf	fputc@fp^0,w,c
 14647  0053AA  26D9               	addwf	fsr2l,f,c
 14648  0053AC  500E               	movf	(fputc@fp+1)^0,w,c
 14649  0053AE  22DA               	addwfc	fsr2h,f,c
 14650  0053B0  CFDE F00F          	movff	postinc2,??_fputc
 14651  0053B4  CFDD F010          	movff	postdec2,??_fputc+1
 14652  0053B8  C00D  FFD9         	movff	fputc@fp,fsr2l
 14653  0053BC  C00E  FFDA         	movff	fputc@fp+1,fsr2h
 14654  0053C0  CFDE F011          	movff	postinc2,??_fputc+2
 14655  0053C4  CFDD F012          	movff	postdec2,??_fputc+3
 14656  0053C8  500F               	movf	??_fputc^0,w,c
 14657  0053CA  2411               	addwf	(??_fputc+2)^0,w,c
 14658  0053CC  6ED9               	movwf	fsr2l,c
 14659  0053CE  5010               	movf	(??_fputc+1)^0,w,c
 14660  0053D0  2012               	addwfc	(??_fputc+3)^0,w,c
 14661  0053D2  6EDA               	movwf	fsr2h,c
 14662  0053D4  C00B  FFDF         	movff	fputc@c,indf2
 14663  0053D8  EE20 F002          	lfsr	2,2
 14664  0053DC  500D               	movf	fputc@fp^0,w,c
 14665  0053DE  26D9               	addwf	fsr2l,f,c
 14666  0053E0  500E               	movf	(fputc@fp+1)^0,w,c
 14667  0053E2  22DA               	addwfc	fsr2h,f,c
 14668  0053E4  2ADE               	incf	postinc2,f,c
 14669  0053E6  0E00               	movlw	0
 14670  0053E8  22DD               	addwfc	postdec2,f,c
 14671  0053EA                     l1736:
 14672  0053EA  0012               	return		;funcret
 14673  0053EC                     __end_of_fputc:
 14674                           	opt callstack 0
 14675                           
 14676 ;; *************** function _putch *****************
 14677 ;; Defined at:
 14678 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;  c               1    wreg     unsigned char 
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;  c               1    0[COMRAM] unsigned char 
 14683 ;; Return value:  Size  Location     Type
 14684 ;;                  1    wreg      void 
 14685 ;; Registers used:
 14686 ;;		wreg
 14687 ;; Tracked objects:
 14688 ;;		On entry : 0/0
 14689 ;;		On exit  : 0/0
 14690 ;;		Unchanged: 0/0
 14691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14696 ;;Total ram usage:        0 bytes
 14697 ;; Hardware stack levels used:    1
 14698 ;; Hardware stack levels required when called:    5
 14699 ;; This function calls:
 14700 ;;		Nothing
 14701 ;; This function is called by:
 14702 ;;		_fputc
 14703 ;; This function uses a non-reentrant model
 14704 ;;
 14705                           
 14706                           	psect	text40
 14707  0061BE                     __ptext40:
 14708                           	opt callstack 0
 14709  0061BE                     _putch:
 14710                           	opt callstack 17
 14711  0061BE  0012               	return		;funcret
 14712  0061C0                     __end_of_putch:
 14713                           	opt callstack 0
 14714                           
 14715 ;; *************** function _atoi *****************
 14716 ;; Defined at:
 14717 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;  s               2   17[COMRAM] PTR const unsigned char 
 14720 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;  n               2   30[COMRAM] int 
 14723 ;;  neg             2   23[COMRAM] int 
 14724 ;; Return value:  Size  Location     Type
 14725 ;;                  2   17[COMRAM] int 
 14726 ;; Registers used:
 14727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14728 ;; Tracked objects:
 14729 ;;		On entry : 0/0
 14730 ;;		On exit  : 0/0
 14731 ;;		Unchanged: 0/0
 14732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14734 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14736 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14737 ;;Total ram usage:       15 bytes
 14738 ;; Hardware stack levels used:    1
 14739 ;; Hardware stack levels required when called:    6
 14740 ;; This function calls:
 14741 ;;		___wmul
 14742 ;;		_isdigit
 14743 ;;		_isspace
 14744 ;; This function is called by:
 14745 ;;		_vfpfcnvrt
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text41
 14750  0040FC                     __ptext41:
 14751                           	opt callstack 0
 14752  0040FC                     _atoi:
 14753                           	opt callstack 20
 14754  0040FC  0E00               	movlw	0
 14755  0040FE  6E20               	movwf	(atoi@n+1)^0,c
 14756  004100  0E00               	movlw	0
 14757  004102  6E1F               	movwf	atoi@n^0,c
 14758  004104  0E00               	movlw	0
 14759  004106  6E19               	movwf	(atoi@neg+1)^0,c
 14760  004108  0E00               	movlw	0
 14761  00410A  6E18               	movwf	atoi@neg^0,c
 14762  00410C  EF8A  F020         	goto	l9088
 14763  004110                     l9086:
 14764  004110  4A12               	infsnz	atoi@s^0,f,c
 14765  004112  2A13               	incf	(atoi@s+1)^0,f,c
 14766  004114                     l9088:
 14767  004114  0E01               	movlw	1
 14768  004116  6E1E               	movwf	_atoi$2367^0,c
 14769  004118  C012  FFF6         	movff	atoi@s,tblptrl
 14770  00411C  C013  FFF7         	movff	atoi@s+1,tblptrh
 14771  004120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14772  004120  6AF8               	clrf	tblptru,c
 14773  004122                     	endif
 14774  004122                     	if	0	;tblptru may be non-zero
 14775  004122                     	endif
 14776  004122  0008               	tblrd		*
 14777  004124  50F5               	movf	tablat,w,c
 14778  004126  0A20               	xorlw	32
 14779  004128  B4D8               	btfsc	status,2,c
 14780  00412A  EF99  F020         	goto	u11661
 14781  00412E  EF9B  F020         	goto	u11660
 14782  004132                     u11661:
 14783  004132  EFB9  F020         	goto	l9096
 14784  004136                     u11660:
 14785  004136  0EF7               	movlw	247
 14786  004138  6E14               	movwf	??_atoi^0,c
 14787  00413A  0EFF               	movlw	255
 14788  00413C  6E15               	movwf	(??_atoi+1)^0,c
 14789  00413E  C012  FFF6         	movff	atoi@s,tblptrl
 14790  004142  C013  FFF7         	movff	atoi@s+1,tblptrh
 14791  004146                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14792  004146  6AF8               	clrf	tblptru,c
 14793  004148                     	endif
 14794  004148                     	if	0	;tblptru may be non-zero
 14795  004148                     	endif
 14796  004148  0008               	tblrd		*
 14797  00414A  50F5               	movf	tablat,w,c
 14798  00414C  6E16               	movwf	(??_atoi+2)^0,c
 14799  00414E  6A17               	clrf	(??_atoi+3)^0,c
 14800  004150  5014               	movf	??_atoi^0,w,c
 14801  004152  2616               	addwf	(??_atoi+2)^0,f,c
 14802  004154  5015               	movf	(??_atoi+1)^0,w,c
 14803  004156  2217               	addwfc	(??_atoi+3)^0,f,c
 14804  004158  5017               	movf	(??_atoi+3)^0,w,c
 14805  00415A  E109               	bnz	u11670
 14806  00415C  0E05               	movlw	5
 14807  00415E  5C16               	subwf	(??_atoi+2)^0,w,c
 14808  004160  A0D8               	btfss	status,0,c
 14809  004162  EFB5  F020         	goto	u11671
 14810  004166  EFB7  F020         	goto	u11670
 14811  00416A                     u11671:
 14812  00416A  EFB9  F020         	goto	l9096
 14813  00416E                     u11670:
 14814  00416E  0E00               	movlw	0
 14815  004170  6E1E               	movwf	_atoi$2367^0,c
 14816  004172                     l9096:
 14817  004172  C01E  F01A         	movff	_atoi$2367,_atoi$2366
 14818  004176  6A1B               	clrf	(_atoi$2366+1)^0,c
 14819  004178  501A               	movf	_atoi$2366^0,w,c
 14820  00417A  101B               	iorwf	(_atoi$2366+1)^0,w,c
 14821  00417C  A4D8               	btfss	status,2,c
 14822  00417E  EFC3  F020         	goto	u11681
 14823  004182  EFC5  F020         	goto	u11680
 14824  004186                     u11681:
 14825  004186  EF88  F020         	goto	l9086
 14826  00418A                     u11680:
 14827  00418A  EFCF  F020         	goto	l9106
 14828  00418E                     l9102:
 14829  00418E  0E00               	movlw	0
 14830  004190  6E19               	movwf	(atoi@neg+1)^0,c
 14831  004192  0E01               	movlw	1
 14832  004194  6E18               	movwf	atoi@neg^0,c
 14833  004196                     l9104:
 14834  004196  4A12               	infsnz	atoi@s^0,f,c
 14835  004198  2A13               	incf	(atoi@s+1)^0,f,c
 14836  00419A  EF06  F021         	goto	l9112
 14837  00419E                     l9106:
 14838  00419E  C012  FFF6         	movff	atoi@s,tblptrl
 14839  0041A2  C013  FFF7         	movff	atoi@s+1,tblptrh
 14840  0041A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14841  0041A6  6AF8               	clrf	tblptru,c
 14842  0041A8                     	endif
 14843  0041A8                     	if	0	;tblptru may be non-zero
 14844  0041A8                     	endif
 14845  0041A8  0008               	tblrd		*
 14846  0041AA  50F5               	movf	tablat,w,c
 14847  0041AC  6E14               	movwf	??_atoi^0,c
 14848  0041AE  6A15               	clrf	(??_atoi+1)^0,c
 14849                           
 14850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14851                           ; Switch size 1, requested type "simple"
 14852                           ; Number of cases is 1, Range of values is 0 to 0
 14853                           ; switch strategies available:
 14854                           ; Name         Instructions Cycles
 14855                           ; simple_byte            4     3 (average)
 14856                           ;	Chosen strategy is simple_byte
 14857  0041B0  5015               	movf	(??_atoi+1)^0,w,c
 14858  0041B2  0A00               	xorlw	0	; case 0
 14859  0041B4  B4D8               	btfsc	status,2,c
 14860  0041B6  EFDF  F020         	goto	l9656
 14861  0041BA  EF06  F021         	goto	l9112
 14862  0041BE                     l9656:
 14863                           
 14864                           ; Switch size 1, requested type "simple"
 14865                           ; Number of cases is 2, Range of values is 43 to 45
 14866                           ; switch strategies available:
 14867                           ; Name         Instructions Cycles
 14868                           ; simple_byte            7     4 (average)
 14869                           ;	Chosen strategy is simple_byte
 14870  0041BE  5014               	movf	??_atoi^0,w,c
 14871  0041C0  0A2B               	xorlw	43	; case 43
 14872  0041C2  B4D8               	btfsc	status,2,c
 14873  0041C4  EFCB  F020         	goto	l9104
 14874  0041C8  0A06               	xorlw	6	; case 45
 14875  0041CA  B4D8               	btfsc	status,2,c
 14876  0041CC  EFC7  F020         	goto	l9102
 14877  0041D0  EF06  F021         	goto	l9112
 14878  0041D4                     l9108:
 14879  0041D4  C01F  F00B         	movff	atoi@n,___wmul@multiplier
 14880  0041D8  C020  F00C         	movff	atoi@n+1,___wmul@multiplier+1
 14881  0041DC  0E00               	movlw	0
 14882  0041DE  6E0E               	movwf	(___wmul@multiplicand+1)^0,c
 14883  0041E0  0E0A               	movlw	10
 14884  0041E2  6E0D               	movwf	___wmul@multiplicand^0,c
 14885  0041E4  ECFF  F02F         	call	___wmul	;wreg free
 14886  0041E8  C012  FFF6         	movff	atoi@s,tblptrl
 14887  0041EC  C013  FFF7         	movff	atoi@s+1,tblptrh
 14888  0041F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14889  0041F0  6AF8               	clrf	tblptru,c
 14890  0041F2                     	endif
 14891  0041F2                     	if	0	;tblptru may be non-zero
 14892  0041F2                     	endif
 14893  0041F2  0008               	tblrd		*
 14894  0041F4  50F5               	movf	tablat,w,c
 14895  0041F6  5E0B               	subwf	?___wmul^0,f,c
 14896  0041F8  0E00               	movlw	0
 14897  0041FA  5A0C               	subwfb	(?___wmul+1)^0,f,c
 14898  0041FC  0E30               	movlw	48
 14899  0041FE  240B               	addwf	?___wmul^0,w,c
 14900  004200  6E1F               	movwf	atoi@n^0,c
 14901  004202  0E00               	movlw	0
 14902  004204  200C               	addwfc	(?___wmul+1)^0,w,c
 14903  004206  6E20               	movwf	(atoi@n+1)^0,c
 14904  004208  EFCB  F020         	goto	l9104
 14905  00420C                     l9112:
 14906  00420C  0ED0               	movlw	208
 14907  00420E  6E14               	movwf	??_atoi^0,c
 14908  004210  0EFF               	movlw	255
 14909  004212  6E15               	movwf	(??_atoi+1)^0,c
 14910  004214  C012  FFF6         	movff	atoi@s,tblptrl
 14911  004218  C013  FFF7         	movff	atoi@s+1,tblptrh
 14912  00421C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14913  00421C  6AF8               	clrf	tblptru,c
 14914  00421E                     	endif
 14915  00421E                     	if	0	;tblptru may be non-zero
 14916  00421E                     	endif
 14917  00421E  0008               	tblrd		*
 14918  004220  50F5               	movf	tablat,w,c
 14919  004222  6E16               	movwf	(??_atoi+2)^0,c
 14920  004224  6A17               	clrf	(??_atoi+3)^0,c
 14921  004226  5014               	movf	??_atoi^0,w,c
 14922  004228  2616               	addwf	(??_atoi+2)^0,f,c
 14923  00422A  5015               	movf	(??_atoi+1)^0,w,c
 14924  00422C  2217               	addwfc	(??_atoi+3)^0,f,c
 14925  00422E  5017               	movf	(??_atoi+3)^0,w,c
 14926  004230  E10A               	bnz	u11690
 14927  004232  0E0A               	movlw	10
 14928  004234  5C16               	subwf	(??_atoi+2)^0,w,c
 14929  004236  A0D8               	btfss	status,0,c
 14930  004238  EF20  F021         	goto	u11691
 14931  00423C  EF23  F021         	goto	u11690
 14932  004240                     u11691:
 14933  004240  0E01               	movlw	1
 14934  004242  EF24  F021         	goto	u11700
 14935  004246                     u11690:
 14936  004246  0E00               	movlw	0
 14937  004248                     u11700:
 14938  004248  6E1C               	movwf	_atoi$2368^0,c
 14939  00424A  6A1D               	clrf	(_atoi$2368+1)^0,c
 14940  00424C  501C               	movf	_atoi$2368^0,w,c
 14941  00424E  101D               	iorwf	(_atoi$2368+1)^0,w,c
 14942  004250  A4D8               	btfss	status,2,c
 14943  004252  EF2D  F021         	goto	u11711
 14944  004256  EF2F  F021         	goto	u11710
 14945  00425A                     u11711:
 14946  00425A  EFEA  F020         	goto	l9108
 14947  00425E                     u11710:
 14948  00425E  5018               	movf	atoi@neg^0,w,c
 14949  004260  1019               	iorwf	(atoi@neg+1)^0,w,c
 14950  004262  A4D8               	btfss	status,2,c
 14951  004264  EF36  F021         	goto	u11721
 14952  004268  EF38  F021         	goto	u11720
 14953  00426C                     u11721:
 14954  00426C  EF46  F021         	goto	l1682
 14955  004270                     u11720:
 14956  004270  C01F  F014         	movff	atoi@n,??_atoi
 14957  004274  C020  F015         	movff	atoi@n+1,??_atoi+1
 14958  004278  1E14               	comf	??_atoi^0,f,c
 14959  00427A  1E15               	comf	(??_atoi+1)^0,f,c
 14960  00427C  4A14               	infsnz	??_atoi^0,f,c
 14961  00427E  2A15               	incf	(??_atoi+1)^0,f,c
 14962  004280  C014  F012         	movff	??_atoi,?_atoi
 14963  004284  C015  F013         	movff	??_atoi+1,?_atoi+1
 14964  004288  EF4A  F021         	goto	l1685
 14965  00428C                     l1682:
 14966  00428C  C01F  F012         	movff	atoi@n,?_atoi
 14967  004290  C020  F013         	movff	atoi@n+1,?_atoi+1
 14968  004294                     l1685:
 14969  004294  0012               	return		;funcret
 14970  004296                     __end_of_atoi:
 14971                           	opt callstack 0
 14972                           
 14973 ;; *************** function _isspace *****************
 14974 ;; Defined at:
 14975 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14976 ;; Parameters:    Size  Location     Type
 14977 ;;  c               2   10[COMRAM] int 
 14978 ;; Auto vars:     Size  Location     Type
 14979 ;;		None
 14980 ;; Return value:  Size  Location     Type
 14981 ;;                  2   10[COMRAM] int 
 14982 ;; Registers used:
 14983 ;;		wreg, status,2, status,0
 14984 ;; Tracked objects:
 14985 ;;		On entry : 0/0
 14986 ;;		On exit  : 0/0
 14987 ;;		Unchanged: 0/0
 14988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14993 ;;Total ram usage:        7 bytes
 14994 ;; Hardware stack levels used:    1
 14995 ;; Hardware stack levels required when called:    5
 14996 ;; This function calls:
 14997 ;;		Nothing
 14998 ;; This function is called by:
 14999 ;;		_atoi
 15000 ;; This function uses a non-reentrant model
 15001 ;;
 15002                           
 15003                           	psect	text42
 15004  005A32                     __ptext42:
 15005                           	opt callstack 0
 15006  005A32                     _isspace:
 15007                           	opt callstack 20
 15008  005A32  0E01               	movlw	1
 15009  005A34  6E11               	movwf	_isspace$2406^0,c
 15010  005A36  0E20               	movlw	32
 15011  005A38  180B               	xorwf	isspace@c^0,w,c
 15012  005A3A  100C               	iorwf	(isspace@c+1)^0,w,c
 15013  005A3C  B4D8               	btfsc	status,2,c
 15014  005A3E  EF23  F02D         	goto	u10531
 15015  005A42  EF25  F02D         	goto	u10530
 15016  005A46                     u10531:
 15017  005A46  EF3E  F02D         	goto	l8514
 15018  005A4A                     u10530:
 15019  005A4A  0EF7               	movlw	247
 15020  005A4C  6E0D               	movwf	??_isspace^0,c
 15021  005A4E  0EFF               	movlw	255
 15022  005A50  6E0E               	movwf	(??_isspace+1)^0,c
 15023  005A52  C00B  F00F         	movff	isspace@c,??_isspace+2
 15024  005A56  C00C  F010         	movff	isspace@c+1,??_isspace+3
 15025  005A5A  500D               	movf	??_isspace^0,w,c
 15026  005A5C  260F               	addwf	(??_isspace+2)^0,f,c
 15027  005A5E  500E               	movf	(??_isspace+1)^0,w,c
 15028  005A60  2210               	addwfc	(??_isspace+3)^0,f,c
 15029  005A62  5010               	movf	(??_isspace+3)^0,w,c
 15030  005A64  E109               	bnz	u10540
 15031  005A66  0E05               	movlw	5
 15032  005A68  5C0F               	subwf	(??_isspace+2)^0,w,c
 15033  005A6A  A0D8               	btfss	status,0,c
 15034  005A6C  EF3A  F02D         	goto	u10541
 15035  005A70  EF3C  F02D         	goto	u10540
 15036  005A74                     u10541:
 15037  005A74  EF3E  F02D         	goto	l8514
 15038  005A78                     u10540:
 15039  005A78  0E00               	movlw	0
 15040  005A7A  6E11               	movwf	_isspace$2406^0,c
 15041  005A7C                     l8514:
 15042  005A7C  C011  F00B         	movff	_isspace$2406,?_isspace
 15043  005A80  6A0C               	clrf	(?_isspace+1)^0,c
 15044  005A82  0012               	return		;funcret
 15045  005A84                     __end_of_isspace:
 15046                           	opt callstack 0
 15047                           
 15048 ;; *************** function _isdigit *****************
 15049 ;; Defined at:
 15050 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  c               2   10[COMRAM] int 
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;		None
 15055 ;; Return value:  Size  Location     Type
 15056 ;;                  2   10[COMRAM] int 
 15057 ;; Registers used:
 15058 ;;		wreg, status,2, status,0
 15059 ;; Tracked objects:
 15060 ;;		On entry : 0/0
 15061 ;;		On exit  : 0/0
 15062 ;;		Unchanged: 0/0
 15063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15066 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15067 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15068 ;;Total ram usage:        6 bytes
 15069 ;; Hardware stack levels used:    1
 15070 ;; Hardware stack levels required when called:    5
 15071 ;; This function calls:
 15072 ;;		Nothing
 15073 ;; This function is called by:
 15074 ;;		_vfpfcnvrt
 15075 ;;		_atoi
 15076 ;; This function uses a non-reentrant model
 15077 ;;
 15078                           
 15079                           	psect	text43
 15080  005DC6                     __ptext43:
 15081                           	opt callstack 0
 15082  005DC6                     _isdigit:
 15083                           	opt callstack 21
 15084  005DC6  0ED0               	movlw	208
 15085  005DC8  6E0D               	movwf	??_isdigit^0,c
 15086  005DCA  0EFF               	movlw	255
 15087  005DCC  6E0E               	movwf	(??_isdigit+1)^0,c
 15088  005DCE  C00B  F00F         	movff	isdigit@c,??_isdigit+2
 15089  005DD2  C00C  F010         	movff	isdigit@c+1,??_isdigit+3
 15090  005DD6  500D               	movf	??_isdigit^0,w,c
 15091  005DD8  260F               	addwf	(??_isdigit+2)^0,f,c
 15092  005DDA  500E               	movf	(??_isdigit+1)^0,w,c
 15093  005DDC  2210               	addwfc	(??_isdigit+3)^0,f,c
 15094  005DDE  5010               	movf	(??_isdigit+3)^0,w,c
 15095  005DE0  E10A               	bnz	u9610
 15096  005DE2  0E0A               	movlw	10
 15097  005DE4  5C0F               	subwf	(??_isdigit+2)^0,w,c
 15098  005DE6  A0D8               	btfss	status,0,c
 15099  005DE8  EFF8  F02E         	goto	u9611
 15100  005DEC  EFFB  F02E         	goto	u9610
 15101  005DF0                     u9611:
 15102  005DF0  0E01               	movlw	1
 15103  005DF2  EFFC  F02E         	goto	u9620
 15104  005DF6                     u9610:
 15105  005DF6  0E00               	movlw	0
 15106  005DF8                     u9620:
 15107  005DF8  6E0B               	movwf	?_isdigit^0,c
 15108  005DFA  6A0C               	clrf	(?_isdigit+1)^0,c
 15109  005DFC  0012               	return		;funcret
 15110  005DFE                     __end_of_isdigit:
 15111                           	opt callstack 0
 15112                           
 15113 ;; *************** function ___wmul *****************
 15114 ;; Defined at:
 15115 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15116 ;; Parameters:    Size  Location     Type
 15117 ;;  multiplier      2   10[COMRAM] unsigned int 
 15118 ;;  multiplicand    2   12[COMRAM] unsigned int 
 15119 ;; Auto vars:     Size  Location     Type
 15120 ;;  product         2   14[COMRAM] unsigned int 
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  2   10[COMRAM] unsigned int 
 15123 ;; Registers used:
 15124 ;;		wreg, status,2, status,0, prodl, prodh
 15125 ;; Tracked objects:
 15126 ;;		On entry : 0/0
 15127 ;;		On exit  : 0/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;Total ram usage:        6 bytes
 15135 ;; Hardware stack levels used:    1
 15136 ;; Hardware stack levels required when called:    5
 15137 ;; This function calls:
 15138 ;;		Nothing
 15139 ;; This function is called by:
 15140 ;;		_atoi
 15141 ;; This function uses a non-reentrant model
 15142 ;;
 15143                           
 15144                           	psect	text44
 15145  005FFE                     __ptext44:
 15146                           	opt callstack 0
 15147  005FFE                     ___wmul:
 15148                           	opt callstack 20
 15149  005FFE  500B               	movf	___wmul@multiplier^0,w,c
 15150  006000  020D               	mulwf	___wmul@multiplicand^0,c
 15151  006002  CFF3 F00F          	movff	prodl,___wmul@product
 15152  006006  CFF4 F010          	movff	prodh,___wmul@product+1
 15153  00600A  500B               	movf	___wmul@multiplier^0,w,c
 15154  00600C  020E               	mulwf	(___wmul@multiplicand+1)^0,c
 15155  00600E  50F3               	movf	243,w,c
 15156  006010  2610               	addwf	(___wmul@product+1)^0,f,c
 15157  006012  500C               	movf	(___wmul@multiplier+1)^0,w,c
 15158  006014  020D               	mulwf	___wmul@multiplicand^0,c
 15159  006016  50F3               	movf	243,w,c
 15160  006018  2610               	addwf	(___wmul@product+1)^0,f,c
 15161  00601A  C00F  F00B         	movff	___wmul@product,?___wmul
 15162  00601E  C010  F00C         	movff	___wmul@product+1,?___wmul+1
 15163  006022  0012               	return		;funcret
 15164  006024                     __end_of___wmul:
 15165                           	opt callstack 0
 15166                           
 15167 ;; *************** function _lcd_init *****************
 15168 ;; Defined at:
 15169 ;;		line 32 in file "lib_ili9341.c"
 15170 ;; Parameters:    Size  Location     Type
 15171 ;;		None
 15172 ;; Auto vars:     Size  Location     Type
 15173 ;;		None
 15174 ;; Return value:  Size  Location     Type
 15175 ;;                  1    wreg      void 
 15176 ;; Registers used:
 15177 ;;		wreg, status,2, status,0, cstack
 15178 ;; Tracked objects:
 15179 ;;		On entry : 0/0
 15180 ;;		On exit  : 0/0
 15181 ;;		Unchanged: 0/0
 15182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15187 ;;Total ram usage:        0 bytes
 15188 ;; Hardware stack levels used:    1
 15189 ;; Hardware stack levels required when called:   10
 15190 ;; This function calls:
 15191 ;;		_lcd_fill
 15192 ;;		_lcd_send
 15193 ;;		_msDelay
 15194 ;; This function is called by:
 15195 ;;		_main
 15196 ;; This function uses a non-reentrant model
 15197 ;;
 15198                           
 15199                           	psect	text45
 15200  002DDE                     __ptext45:
 15201                           	opt callstack 0
 15202  002DDE                     _lcd_init:
 15203                           	opt callstack 20
 15204  002DDE                     
 15205                           ;lib_ili9341.c: 35:     lcd_send(0, 0x01);
 15206  002DDE  0E01               	movlw	1
 15207  002DE0  6E0C               	movwf	lcd_send@value^0,c
 15208  002DE2  0E00               	movlw	0
 15209  002DE4  EC73  F030         	call	_lcd_send
 15210  002DE8                     
 15211                           ;lib_ili9341.c: 36:     msDelay(150);
 15212  002DE8  0E96               	movlw	150
 15213  002DEA  EC63  F02F         	call	_msDelay
 15214  002DEE                     
 15215                           ;lib_ili9341.c: 38:     lcd_send(0,0xEF);
 15216  002DEE  0EEF               	movlw	239
 15217  002DF0  6E0C               	movwf	lcd_send@value^0,c
 15218  002DF2  0E00               	movlw	0
 15219  002DF4  EC73  F030         	call	_lcd_send
 15220  002DF8                     
 15221                           ;lib_ili9341.c: 39:     lcd_send(1,0x03);
 15222  002DF8  0E03               	movlw	3
 15223  002DFA  6E0C               	movwf	lcd_send@value^0,c
 15224  002DFC  0E01               	movlw	1
 15225  002DFE  EC73  F030         	call	_lcd_send
 15226  002E02                     
 15227                           ;lib_ili9341.c: 40:     lcd_send(1,0x80);
 15228  002E02  0E80               	movlw	128
 15229  002E04  6E0C               	movwf	lcd_send@value^0,c
 15230  002E06  0E01               	movlw	1
 15231  002E08  EC73  F030         	call	_lcd_send
 15232  002E0C                     
 15233                           ;lib_ili9341.c: 41:     lcd_send(1,0x02);
 15234  002E0C  0E02               	movlw	2
 15235  002E0E  6E0C               	movwf	lcd_send@value^0,c
 15236  002E10  0E01               	movlw	1
 15237  002E12  EC73  F030         	call	_lcd_send
 15238  002E16                     
 15239                           ;lib_ili9341.c: 42:     lcd_send(0,0xCF);
 15240  002E16  0ECF               	movlw	207
 15241  002E18  6E0C               	movwf	lcd_send@value^0,c
 15242  002E1A  0E00               	movlw	0
 15243  002E1C  EC73  F030         	call	_lcd_send
 15244  002E20                     
 15245                           ;lib_ili9341.c: 43:     lcd_send(1,0x00);
 15246  002E20  0E00               	movlw	0
 15247  002E22  6E0C               	movwf	lcd_send@value^0,c
 15248  002E24  0E01               	movlw	1
 15249  002E26  EC73  F030         	call	_lcd_send
 15250  002E2A                     
 15251                           ;lib_ili9341.c: 44:     lcd_send(1,0XC1);
 15252  002E2A  0EC1               	movlw	193
 15253  002E2C  6E0C               	movwf	lcd_send@value^0,c
 15254  002E2E  0E01               	movlw	1
 15255  002E30  EC73  F030         	call	_lcd_send
 15256  002E34                     
 15257                           ;lib_ili9341.c: 45:     lcd_send(1,0X30);
 15258  002E34  0E30               	movlw	48
 15259  002E36  6E0C               	movwf	lcd_send@value^0,c
 15260  002E38  0E01               	movlw	1
 15261  002E3A  EC73  F030         	call	_lcd_send
 15262  002E3E                     
 15263                           ;lib_ili9341.c: 46:     lcd_send(0,0xED);
 15264  002E3E  0EED               	movlw	237
 15265  002E40  6E0C               	movwf	lcd_send@value^0,c
 15266  002E42  0E00               	movlw	0
 15267  002E44  EC73  F030         	call	_lcd_send
 15268  002E48                     
 15269                           ;lib_ili9341.c: 47:     lcd_send(1,0x64);
 15270  002E48  0E64               	movlw	100
 15271  002E4A  6E0C               	movwf	lcd_send@value^0,c
 15272  002E4C  0E01               	movlw	1
 15273  002E4E  EC73  F030         	call	_lcd_send
 15274  002E52                     
 15275                           ;lib_ili9341.c: 48:     lcd_send(1,0x03);
 15276  002E52  0E03               	movlw	3
 15277  002E54  6E0C               	movwf	lcd_send@value^0,c
 15278  002E56  0E01               	movlw	1
 15279  002E58  EC73  F030         	call	_lcd_send
 15280  002E5C                     
 15281                           ;lib_ili9341.c: 49:     lcd_send(1,0X12);
 15282  002E5C  0E12               	movlw	18
 15283  002E5E  6E0C               	movwf	lcd_send@value^0,c
 15284  002E60  0E01               	movlw	1
 15285  002E62  EC73  F030         	call	_lcd_send
 15286  002E66                     
 15287                           ;lib_ili9341.c: 50:     lcd_send(1,0X81);
 15288  002E66  0E81               	movlw	129
 15289  002E68  6E0C               	movwf	lcd_send@value^0,c
 15290  002E6A  0E01               	movlw	1
 15291  002E6C  EC73  F030         	call	_lcd_send
 15292  002E70                     
 15293                           ;lib_ili9341.c: 51:     lcd_send(0,0xE8);
 15294  002E70  0EE8               	movlw	232
 15295  002E72  6E0C               	movwf	lcd_send@value^0,c
 15296  002E74  0E00               	movlw	0
 15297  002E76  EC73  F030         	call	_lcd_send
 15298  002E7A                     
 15299                           ;lib_ili9341.c: 52:     lcd_send(1,0x85);
 15300  002E7A  0E85               	movlw	133
 15301  002E7C  6E0C               	movwf	lcd_send@value^0,c
 15302  002E7E  0E01               	movlw	1
 15303  002E80  EC73  F030         	call	_lcd_send
 15304  002E84                     
 15305                           ;lib_ili9341.c: 53:     lcd_send(1,0x00);
 15306  002E84  0E00               	movlw	0
 15307  002E86  6E0C               	movwf	lcd_send@value^0,c
 15308  002E88  0E01               	movlw	1
 15309  002E8A  EC73  F030         	call	_lcd_send
 15310  002E8E                     
 15311                           ;lib_ili9341.c: 54:     lcd_send(1,0x78);
 15312  002E8E  0E78               	movlw	120
 15313  002E90  6E0C               	movwf	lcd_send@value^0,c
 15314  002E92  0E01               	movlw	1
 15315  002E94  EC73  F030         	call	_lcd_send
 15316  002E98                     
 15317                           ;lib_ili9341.c: 55:     lcd_send(0,0xCB);
 15318  002E98  0ECB               	movlw	203
 15319  002E9A  6E0C               	movwf	lcd_send@value^0,c
 15320  002E9C  0E00               	movlw	0
 15321  002E9E  EC73  F030         	call	_lcd_send
 15322  002EA2                     
 15323                           ;lib_ili9341.c: 56:     lcd_send(1,0x39);
 15324  002EA2  0E39               	movlw	57
 15325  002EA4  6E0C               	movwf	lcd_send@value^0,c
 15326  002EA6  0E01               	movlw	1
 15327  002EA8  EC73  F030         	call	_lcd_send
 15328  002EAC                     
 15329                           ;lib_ili9341.c: 57:     lcd_send(1,0x2C);
 15330  002EAC  0E2C               	movlw	44
 15331  002EAE  6E0C               	movwf	lcd_send@value^0,c
 15332  002EB0  0E01               	movlw	1
 15333  002EB2  EC73  F030         	call	_lcd_send
 15334  002EB6                     
 15335                           ;lib_ili9341.c: 58:     lcd_send(1,0x00);
 15336  002EB6  0E00               	movlw	0
 15337  002EB8  6E0C               	movwf	lcd_send@value^0,c
 15338  002EBA  0E01               	movlw	1
 15339  002EBC  EC73  F030         	call	_lcd_send
 15340  002EC0                     
 15341                           ;lib_ili9341.c: 59:     lcd_send(1,0x34);
 15342  002EC0  0E34               	movlw	52
 15343  002EC2  6E0C               	movwf	lcd_send@value^0,c
 15344  002EC4  0E01               	movlw	1
 15345  002EC6  EC73  F030         	call	_lcd_send
 15346  002ECA                     
 15347                           ;lib_ili9341.c: 60:     lcd_send(1,0x02);
 15348  002ECA  0E02               	movlw	2
 15349  002ECC  6E0C               	movwf	lcd_send@value^0,c
 15350  002ECE  0E01               	movlw	1
 15351  002ED0  EC73  F030         	call	_lcd_send
 15352  002ED4                     
 15353                           ;lib_ili9341.c: 61:     lcd_send(0,0xF7);
 15354  002ED4  0EF7               	movlw	247
 15355  002ED6  6E0C               	movwf	lcd_send@value^0,c
 15356  002ED8  0E00               	movlw	0
 15357  002EDA  EC73  F030         	call	_lcd_send
 15358  002EDE                     
 15359                           ;lib_ili9341.c: 62:     lcd_send(1,0x20);
 15360  002EDE  0E20               	movlw	32
 15361  002EE0  6E0C               	movwf	lcd_send@value^0,c
 15362  002EE2  0E01               	movlw	1
 15363  002EE4  EC73  F030         	call	_lcd_send
 15364  002EE8                     
 15365                           ;lib_ili9341.c: 63:     lcd_send(0,0xEA);
 15366  002EE8  0EEA               	movlw	234
 15367  002EEA  6E0C               	movwf	lcd_send@value^0,c
 15368  002EEC  0E00               	movlw	0
 15369  002EEE  EC73  F030         	call	_lcd_send
 15370  002EF2                     
 15371                           ;lib_ili9341.c: 64:     lcd_send(1,0x00);
 15372  002EF2  0E00               	movlw	0
 15373  002EF4  6E0C               	movwf	lcd_send@value^0,c
 15374  002EF6  0E01               	movlw	1
 15375  002EF8  EC73  F030         	call	_lcd_send
 15376  002EFC                     
 15377                           ;lib_ili9341.c: 65:     lcd_send(1,0x00);
 15378  002EFC  0E00               	movlw	0
 15379  002EFE  6E0C               	movwf	lcd_send@value^0,c
 15380  002F00  0E01               	movlw	1
 15381  002F02  EC73  F030         	call	_lcd_send
 15382  002F06                     
 15383                           ;lib_ili9341.c: 66:     lcd_send(0,0xC0);
 15384  002F06  0EC0               	movlw	192
 15385  002F08  6E0C               	movwf	lcd_send@value^0,c
 15386  002F0A  0E00               	movlw	0
 15387  002F0C  EC73  F030         	call	_lcd_send
 15388  002F10                     
 15389                           ;lib_ili9341.c: 67:     lcd_send(1,0x23);
 15390  002F10  0E23               	movlw	35
 15391  002F12  6E0C               	movwf	lcd_send@value^0,c
 15392  002F14  0E01               	movlw	1
 15393  002F16  EC73  F030         	call	_lcd_send
 15394  002F1A                     
 15395                           ;lib_ili9341.c: 68:     lcd_send(0,0xC1);
 15396  002F1A  0EC1               	movlw	193
 15397  002F1C  6E0C               	movwf	lcd_send@value^0,c
 15398  002F1E  0E00               	movlw	0
 15399  002F20  EC73  F030         	call	_lcd_send
 15400  002F24                     
 15401                           ;lib_ili9341.c: 69:     lcd_send(1,0x10);
 15402  002F24  0E10               	movlw	16
 15403  002F26  6E0C               	movwf	lcd_send@value^0,c
 15404  002F28  0E01               	movlw	1
 15405  002F2A  EC73  F030         	call	_lcd_send
 15406  002F2E                     
 15407                           ;lib_ili9341.c: 70:     lcd_send(0,0xC5);
 15408  002F2E  0EC5               	movlw	197
 15409  002F30  6E0C               	movwf	lcd_send@value^0,c
 15410  002F32  0E00               	movlw	0
 15411  002F34  EC73  F030         	call	_lcd_send
 15412  002F38                     
 15413                           ;lib_ili9341.c: 71:     lcd_send(1,0x3e);
 15414  002F38  0E3E               	movlw	62
 15415  002F3A  6E0C               	movwf	lcd_send@value^0,c
 15416  002F3C  0E01               	movlw	1
 15417  002F3E  EC73  F030         	call	_lcd_send
 15418  002F42                     
 15419                           ;lib_ili9341.c: 72:     lcd_send(1,0x28);
 15420  002F42  0E28               	movlw	40
 15421  002F44  6E0C               	movwf	lcd_send@value^0,c
 15422  002F46  0E01               	movlw	1
 15423  002F48  EC73  F030         	call	_lcd_send
 15424  002F4C                     
 15425                           ;lib_ili9341.c: 73:     lcd_send(0,0xC7);
 15426  002F4C  0EC7               	movlw	199
 15427  002F4E  6E0C               	movwf	lcd_send@value^0,c
 15428  002F50  0E00               	movlw	0
 15429  002F52  EC73  F030         	call	_lcd_send
 15430  002F56                     
 15431                           ;lib_ili9341.c: 74:     lcd_send(1,0x86);
 15432  002F56  0E86               	movlw	134
 15433  002F58  6E0C               	movwf	lcd_send@value^0,c
 15434  002F5A  0E01               	movlw	1
 15435  002F5C  EC73  F030         	call	_lcd_send
 15436  002F60                     
 15437                           ;lib_ili9341.c: 75:     lcd_send(0,0x36);
 15438  002F60  0E36               	movlw	54
 15439  002F62  6E0C               	movwf	lcd_send@value^0,c
 15440  002F64  0E00               	movlw	0
 15441  002F66  EC73  F030         	call	_lcd_send
 15442  002F6A                     
 15443                           ;lib_ili9341.c: 76:     lcd_send(1,0x48);
 15444  002F6A  0E48               	movlw	72
 15445  002F6C  6E0C               	movwf	lcd_send@value^0,c
 15446  002F6E  0E01               	movlw	1
 15447  002F70  EC73  F030         	call	_lcd_send
 15448  002F74                     
 15449                           ;lib_ili9341.c: 77:     lcd_send(0,0x3A);
 15450  002F74  0E3A               	movlw	58
 15451  002F76  6E0C               	movwf	lcd_send@value^0,c
 15452  002F78  0E00               	movlw	0
 15453  002F7A  EC73  F030         	call	_lcd_send
 15454  002F7E                     
 15455                           ;lib_ili9341.c: 78:     lcd_send(1,0x55);
 15456  002F7E  0E55               	movlw	85
 15457  002F80  6E0C               	movwf	lcd_send@value^0,c
 15458  002F82  0E01               	movlw	1
 15459  002F84  EC73  F030         	call	_lcd_send
 15460  002F88                     
 15461                           ;lib_ili9341.c: 79:     lcd_send(0,0xB1);
 15462  002F88  0EB1               	movlw	177
 15463  002F8A  6E0C               	movwf	lcd_send@value^0,c
 15464  002F8C  0E00               	movlw	0
 15465  002F8E  EC73  F030         	call	_lcd_send
 15466  002F92                     
 15467                           ;lib_ili9341.c: 80:     lcd_send(1,0x00);
 15468  002F92  0E00               	movlw	0
 15469  002F94  6E0C               	movwf	lcd_send@value^0,c
 15470  002F96  0E01               	movlw	1
 15471  002F98  EC73  F030         	call	_lcd_send
 15472  002F9C                     
 15473                           ;lib_ili9341.c: 81:     lcd_send(1,0x18);
 15474  002F9C  0E18               	movlw	24
 15475  002F9E  6E0C               	movwf	lcd_send@value^0,c
 15476  002FA0  0E01               	movlw	1
 15477  002FA2  EC73  F030         	call	_lcd_send
 15478  002FA6                     
 15479                           ;lib_ili9341.c: 82:     lcd_send(0,0xB6);
 15480  002FA6  0EB6               	movlw	182
 15481  002FA8  6E0C               	movwf	lcd_send@value^0,c
 15482  002FAA  0E00               	movlw	0
 15483  002FAC  EC73  F030         	call	_lcd_send
 15484  002FB0                     
 15485                           ;lib_ili9341.c: 83:     lcd_send(1,0x08);
 15486  002FB0  0E08               	movlw	8
 15487  002FB2  6E0C               	movwf	lcd_send@value^0,c
 15488  002FB4  0E01               	movlw	1
 15489  002FB6  EC73  F030         	call	_lcd_send
 15490  002FBA                     
 15491                           ;lib_ili9341.c: 84:     lcd_send(1,0x82);
 15492  002FBA  0E82               	movlw	130
 15493  002FBC  6E0C               	movwf	lcd_send@value^0,c
 15494  002FBE  0E01               	movlw	1
 15495  002FC0  EC73  F030         	call	_lcd_send
 15496  002FC4                     
 15497                           ;lib_ili9341.c: 85:     lcd_send(1,0x27);
 15498  002FC4  0E27               	movlw	39
 15499  002FC6  6E0C               	movwf	lcd_send@value^0,c
 15500  002FC8  0E01               	movlw	1
 15501  002FCA  EC73  F030         	call	_lcd_send
 15502  002FCE                     
 15503                           ;lib_ili9341.c: 86:     lcd_send(0,0xF2);
 15504  002FCE  0EF2               	movlw	242
 15505  002FD0  6E0C               	movwf	lcd_send@value^0,c
 15506  002FD2  0E00               	movlw	0
 15507  002FD4  EC73  F030         	call	_lcd_send
 15508  002FD8                     
 15509                           ;lib_ili9341.c: 87:     lcd_send(1,0x00);
 15510  002FD8  0E00               	movlw	0
 15511  002FDA  6E0C               	movwf	lcd_send@value^0,c
 15512  002FDC  0E01               	movlw	1
 15513  002FDE  EC73  F030         	call	_lcd_send
 15514  002FE2                     
 15515                           ;lib_ili9341.c: 88:     lcd_send(0,0x26);
 15516  002FE2  0E26               	movlw	38
 15517  002FE4  6E0C               	movwf	lcd_send@value^0,c
 15518  002FE6  0E00               	movlw	0
 15519  002FE8  EC73  F030         	call	_lcd_send
 15520  002FEC                     
 15521                           ;lib_ili9341.c: 89:     lcd_send(1,0x01);
 15522  002FEC  0E01               	movlw	1
 15523  002FEE  6E0C               	movwf	lcd_send@value^0,c
 15524  002FF0  0E01               	movlw	1
 15525  002FF2  EC73  F030         	call	_lcd_send
 15526  002FF6                     
 15527                           ;lib_ili9341.c: 90:     lcd_send(0,0xE0);
 15528  002FF6  0EE0               	movlw	224
 15529  002FF8  6E0C               	movwf	lcd_send@value^0,c
 15530  002FFA  0E00               	movlw	0
 15531  002FFC  EC73  F030         	call	_lcd_send
 15532  003000                     
 15533                           ;lib_ili9341.c: 91:     lcd_send(1,0x0F);
 15534  003000  0E0F               	movlw	15
 15535  003002  6E0C               	movwf	lcd_send@value^0,c
 15536  003004  0E01               	movlw	1
 15537  003006  EC73  F030         	call	_lcd_send
 15538  00300A                     
 15539                           ;lib_ili9341.c: 92:     lcd_send(1,0x31);
 15540  00300A  0E31               	movlw	49
 15541  00300C  6E0C               	movwf	lcd_send@value^0,c
 15542  00300E  0E01               	movlw	1
 15543  003010  EC73  F030         	call	_lcd_send
 15544  003014                     
 15545                           ;lib_ili9341.c: 93:     lcd_send(1,0x2B);
 15546  003014  0E2B               	movlw	43
 15547  003016  6E0C               	movwf	lcd_send@value^0,c
 15548  003018  0E01               	movlw	1
 15549  00301A  EC73  F030         	call	_lcd_send
 15550  00301E                     
 15551                           ;lib_ili9341.c: 94:     lcd_send(1,0x0C);
 15552  00301E  0E0C               	movlw	12
 15553  003020  6E0C               	movwf	lcd_send@value^0,c
 15554  003022  0E01               	movlw	1
 15555  003024  EC73  F030         	call	_lcd_send
 15556  003028                     
 15557                           ;lib_ili9341.c: 95:     lcd_send(1,0x0E);
 15558  003028  0E0E               	movlw	14
 15559  00302A  6E0C               	movwf	lcd_send@value^0,c
 15560  00302C  0E01               	movlw	1
 15561  00302E  EC73  F030         	call	_lcd_send
 15562  003032                     
 15563                           ;lib_ili9341.c: 96:     lcd_send(1,0x08);
 15564  003032  0E08               	movlw	8
 15565  003034  6E0C               	movwf	lcd_send@value^0,c
 15566  003036  0E01               	movlw	1
 15567  003038  EC73  F030         	call	_lcd_send
 15568  00303C                     
 15569                           ;lib_ili9341.c: 97:     lcd_send(1,0x4E);
 15570  00303C  0E4E               	movlw	78
 15571  00303E  6E0C               	movwf	lcd_send@value^0,c
 15572  003040  0E01               	movlw	1
 15573  003042  EC73  F030         	call	_lcd_send
 15574  003046                     
 15575                           ;lib_ili9341.c: 98:     lcd_send(1,0xF1);
 15576  003046  0EF1               	movlw	241
 15577  003048  6E0C               	movwf	lcd_send@value^0,c
 15578  00304A  0E01               	movlw	1
 15579  00304C  EC73  F030         	call	_lcd_send
 15580  003050                     
 15581                           ;lib_ili9341.c: 99:     lcd_send(1,0x37);
 15582  003050  0E37               	movlw	55
 15583  003052  6E0C               	movwf	lcd_send@value^0,c
 15584  003054  0E01               	movlw	1
 15585  003056  EC73  F030         	call	_lcd_send
 15586  00305A                     
 15587                           ;lib_ili9341.c: 100:     lcd_send(1,0x07);
 15588  00305A  0E07               	movlw	7
 15589  00305C  6E0C               	movwf	lcd_send@value^0,c
 15590  00305E  0E01               	movlw	1
 15591  003060  EC73  F030         	call	_lcd_send
 15592  003064                     
 15593                           ;lib_ili9341.c: 101:     lcd_send(1,0x10);
 15594  003064  0E10               	movlw	16
 15595  003066  6E0C               	movwf	lcd_send@value^0,c
 15596  003068  0E01               	movlw	1
 15597  00306A  EC73  F030         	call	_lcd_send
 15598  00306E                     
 15599                           ;lib_ili9341.c: 102:     lcd_send(1,0x03);
 15600  00306E  0E03               	movlw	3
 15601  003070  6E0C               	movwf	lcd_send@value^0,c
 15602  003072  0E01               	movlw	1
 15603  003074  EC73  F030         	call	_lcd_send
 15604  003078                     
 15605                           ;lib_ili9341.c: 103:     lcd_send(1,0x0E);
 15606  003078  0E0E               	movlw	14
 15607  00307A  6E0C               	movwf	lcd_send@value^0,c
 15608  00307C  0E01               	movlw	1
 15609  00307E  EC73  F030         	call	_lcd_send
 15610  003082                     
 15611                           ;lib_ili9341.c: 104:     lcd_send(1,0x09);
 15612  003082  0E09               	movlw	9
 15613  003084  6E0C               	movwf	lcd_send@value^0,c
 15614  003086  0E01               	movlw	1
 15615  003088  EC73  F030         	call	_lcd_send
 15616  00308C                     
 15617                           ;lib_ili9341.c: 105:     lcd_send(1,0x00);
 15618  00308C  0E00               	movlw	0
 15619  00308E  6E0C               	movwf	lcd_send@value^0,c
 15620  003090  0E01               	movlw	1
 15621  003092  EC73  F030         	call	_lcd_send
 15622  003096                     
 15623                           ;lib_ili9341.c: 106:     lcd_send(0,0xE1);
 15624  003096  0EE1               	movlw	225
 15625  003098  6E0C               	movwf	lcd_send@value^0,c
 15626  00309A  0E00               	movlw	0
 15627  00309C  EC73  F030         	call	_lcd_send
 15628  0030A0                     
 15629                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15630  0030A0  0E00               	movlw	0
 15631  0030A2  6E0C               	movwf	lcd_send@value^0,c
 15632  0030A4  0E01               	movlw	1
 15633  0030A6  EC73  F030         	call	_lcd_send
 15634  0030AA                     
 15635                           ;lib_ili9341.c: 108:     lcd_send(1,0x0E);
 15636  0030AA  0E0E               	movlw	14
 15637  0030AC  6E0C               	movwf	lcd_send@value^0,c
 15638  0030AE  0E01               	movlw	1
 15639  0030B0  EC73  F030         	call	_lcd_send
 15640  0030B4                     
 15641                           ;lib_ili9341.c: 109:     lcd_send(1,0x14);
 15642  0030B4  0E14               	movlw	20
 15643  0030B6  6E0C               	movwf	lcd_send@value^0,c
 15644  0030B8  0E01               	movlw	1
 15645  0030BA  EC73  F030         	call	_lcd_send
 15646  0030BE                     
 15647                           ;lib_ili9341.c: 110:     lcd_send(1,0x03);
 15648  0030BE  0E03               	movlw	3
 15649  0030C0  6E0C               	movwf	lcd_send@value^0,c
 15650  0030C2  0E01               	movlw	1
 15651  0030C4  EC73  F030         	call	_lcd_send
 15652  0030C8                     
 15653                           ;lib_ili9341.c: 111:     lcd_send(1,0x11);
 15654  0030C8  0E11               	movlw	17
 15655  0030CA  6E0C               	movwf	lcd_send@value^0,c
 15656  0030CC  0E01               	movlw	1
 15657  0030CE  EC73  F030         	call	_lcd_send
 15658  0030D2                     
 15659                           ;lib_ili9341.c: 112:     lcd_send(1,0x07);
 15660  0030D2  0E07               	movlw	7
 15661  0030D4  6E0C               	movwf	lcd_send@value^0,c
 15662  0030D6  0E01               	movlw	1
 15663  0030D8  EC73  F030         	call	_lcd_send
 15664  0030DC                     
 15665                           ;lib_ili9341.c: 113:     lcd_send(1,0x31);
 15666  0030DC  0E31               	movlw	49
 15667  0030DE  6E0C               	movwf	lcd_send@value^0,c
 15668  0030E0  0E01               	movlw	1
 15669  0030E2  EC73  F030         	call	_lcd_send
 15670  0030E6                     
 15671                           ;lib_ili9341.c: 114:     lcd_send(1,0xC1);
 15672  0030E6  0EC1               	movlw	193
 15673  0030E8  6E0C               	movwf	lcd_send@value^0,c
 15674  0030EA  0E01               	movlw	1
 15675  0030EC  EC73  F030         	call	_lcd_send
 15676  0030F0                     
 15677                           ;lib_ili9341.c: 115:     lcd_send(1,0x48);
 15678  0030F0  0E48               	movlw	72
 15679  0030F2  6E0C               	movwf	lcd_send@value^0,c
 15680  0030F4  0E01               	movlw	1
 15681  0030F6  EC73  F030         	call	_lcd_send
 15682  0030FA                     
 15683                           ;lib_ili9341.c: 116:     lcd_send(1,0x08);
 15684  0030FA  0E08               	movlw	8
 15685  0030FC  6E0C               	movwf	lcd_send@value^0,c
 15686  0030FE  0E01               	movlw	1
 15687  003100  EC73  F030         	call	_lcd_send
 15688  003104                     
 15689                           ;lib_ili9341.c: 117:     lcd_send(1,0x0F);
 15690  003104  0E0F               	movlw	15
 15691  003106  6E0C               	movwf	lcd_send@value^0,c
 15692  003108  0E01               	movlw	1
 15693  00310A  EC73  F030         	call	_lcd_send
 15694  00310E                     
 15695                           ;lib_ili9341.c: 118:     lcd_send(1,0x0C);
 15696  00310E  0E0C               	movlw	12
 15697  003110  6E0C               	movwf	lcd_send@value^0,c
 15698  003112  0E01               	movlw	1
 15699  003114  EC73  F030         	call	_lcd_send
 15700  003118                     
 15701                           ;lib_ili9341.c: 119:     lcd_send(1,0x31);
 15702  003118  0E31               	movlw	49
 15703  00311A  6E0C               	movwf	lcd_send@value^0,c
 15704  00311C  0E01               	movlw	1
 15705  00311E  EC73  F030         	call	_lcd_send
 15706  003122                     
 15707                           ;lib_ili9341.c: 120:     lcd_send(1,0x36);
 15708  003122  0E36               	movlw	54
 15709  003124  6E0C               	movwf	lcd_send@value^0,c
 15710  003126  0E01               	movlw	1
 15711  003128  EC73  F030         	call	_lcd_send
 15712  00312C                     
 15713                           ;lib_ili9341.c: 121:     lcd_send(1,0x0F);
 15714  00312C  0E0F               	movlw	15
 15715  00312E  6E0C               	movwf	lcd_send@value^0,c
 15716  003130  0E01               	movlw	1
 15717  003132  EC73  F030         	call	_lcd_send
 15718  003136                     
 15719                           ;lib_ili9341.c: 122:     lcd_send(0,0x11);
 15720  003136  0E11               	movlw	17
 15721  003138  6E0C               	movwf	lcd_send@value^0,c
 15722  00313A  0E00               	movlw	0
 15723  00313C  EC73  F030         	call	_lcd_send
 15724                           
 15725                           ;lib_ili9341.c: 123:     msDelay(120);
 15726  003140  0E78               	movlw	120
 15727  003142  EC63  F02F         	call	_msDelay
 15728  003146                     
 15729                           ;lib_ili9341.c: 124:     lcd_send(0,0x29);
 15730  003146  0E29               	movlw	41
 15731  003148  6E0C               	movwf	lcd_send@value^0,c
 15732  00314A  0E00               	movlw	0
 15733  00314C  EC73  F030         	call	_lcd_send
 15734  003150                     
 15735                           ;lib_ili9341.c: 125:     msDelay(120);
 15736  003150  0E78               	movlw	120
 15737  003152  EC63  F02F         	call	_msDelay
 15738  003156                     
 15739                           ;lib_ili9341.c: 128:     lcd_fill(global_bg_color);
 15740  003156  0E00               	movlw	0
 15741  003158  6E15               	movwf	(lcd_fill@bg_color+1)^0,c
 15742  00315A  0E00               	movlw	0
 15743  00315C  6E14               	movwf	lcd_fill@bg_color^0,c
 15744  00315E  ECBE  F02B         	call	_lcd_fill	;wreg free
 15745  003162  0012               	return		;funcret
 15746  003164                     __end_of_lcd_init:
 15747                           	opt callstack 0
 15748                           
 15749 ;; *************** function _msDelay *****************
 15750 ;; Defined at:
 15751 ;;		line 14 in file "lib_ili9341.c"
 15752 ;; Parameters:    Size  Location     Type
 15753 ;;  ms              1    wreg     unsigned char 
 15754 ;; Auto vars:     Size  Location     Type
 15755 ;;  ms              1   11[COMRAM] unsigned char 
 15756 ;;  k               1   12[COMRAM] unsigned char 
 15757 ;; Return value:  Size  Location     Type
 15758 ;;                  1    wreg      void 
 15759 ;; Registers used:
 15760 ;;		wreg, status,2, status,0
 15761 ;; Tracked objects:
 15762 ;;		On entry : 0/0
 15763 ;;		On exit  : 0/0
 15764 ;;		Unchanged: 0/0
 15765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15770 ;;Total ram usage:        3 bytes
 15771 ;; Hardware stack levels used:    1
 15772 ;; Hardware stack levels required when called:    5
 15773 ;; This function calls:
 15774 ;;		Nothing
 15775 ;; This function is called by:
 15776 ;;		_lcd_init
 15777 ;; This function uses a non-reentrant model
 15778 ;;
 15779                           
 15780                           	psect	text46
 15781  005EC6                     __ptext46:
 15782                           	opt callstack 0
 15783  005EC6                     _msDelay:
 15784                           	opt callstack 24
 15785                           
 15786                           ;incstack = 0
 15787                           ;msDelay@ms stored from wreg
 15788  005EC6  6E0C               	movwf	msDelay@ms^0,c
 15789  005EC8                     
 15790                           ;lib_ili9341.c: 14: void msDelay (uint8_t ms);lib_ili9341.c: 15: {;lib_ili9341.c: 16:   
      +                            uint8_t k;;lib_ili9341.c: 18:     for(k=0; k<ms; k++)
 15791  005EC8  0E00               	movlw	0
 15792  005ECA  6E0D               	movwf	msDelay@k^0,c
 15793  005ECC  EF70  F02F         	goto	l6864
 15794  005ED0                     l6860:
 15795                           
 15796                           ;lib_ili9341.c: 19:     {;lib_ili9341.c: 20:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 15797  005ED0  0E03               	movlw	3
 15798  005ED2  6E0B               	movwf	??_msDelay^0,c
 15799  005ED4  0E98               	movlw	152
 15800  005ED6                     u12387:
 15801  005ED6  2EE8               	decfsz	wreg,f,c
 15802  005ED8  D7FE               	bra	u12387
 15803  005EDA  2E0B               	decfsz	??_msDelay^0,f,c
 15804  005EDC  D7FC               	bra	u12387
 15805  005EDE                     
 15806                           ;lib_ili9341.c: 21:     }
 15807  005EDE  2A0D               	incf	msDelay@k^0,f,c
 15808  005EE0                     l6864:
 15809  005EE0  500C               	movf	msDelay@ms^0,w,c
 15810  005EE2  5C0D               	subwf	msDelay@k^0,w,c
 15811  005EE4  A0D8               	btfss	status,0,c
 15812  005EE6  EF77  F02F         	goto	u8101
 15813  005EEA  EF79  F02F         	goto	u8100
 15814  005EEE                     u8101:
 15815  005EEE  EF68  F02F         	goto	l6860
 15816  005EF2                     u8100:
 15817  005EF2  0012               	return		;funcret
 15818  005EF4                     __end_of_msDelay:
 15819                           	opt callstack 0
 15820                           
 15821 ;; *************** function _lcd_fill *****************
 15822 ;; Defined at:
 15823 ;;		line 191 in file "lib_ili9341.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;  bg_color        2   19[COMRAM] unsigned short 
 15826 ;; Auto vars:     Size  Location     Type
 15827 ;;  width           2   23[COMRAM] unsigned short 
 15828 ;;  height          2   21[COMRAM] unsigned short 
 15829 ;; Return value:  Size  Location     Type
 15830 ;;                  1    wreg      void 
 15831 ;; Registers used:
 15832 ;;		wreg, status,2, status,0, cstack
 15833 ;; Tracked objects:
 15834 ;;		On entry : 0/0
 15835 ;;		On exit  : 0/0
 15836 ;;		Unchanged: 0/0
 15837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15841 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15842 ;;Total ram usage:        6 bytes
 15843 ;; Hardware stack levels used:    1
 15844 ;; Hardware stack levels required when called:    9
 15845 ;; This function calls:
 15846 ;;		_lcd_draw_pixel
 15847 ;;		_lcd_set_cursor
 15848 ;; This function is called by:
 15849 ;;		_lcd_init
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text47
 15854  00577C                     __ptext47:
 15855                           	opt callstack 0
 15856  00577C                     _lcd_fill:
 15857                           	opt callstack 20
 15858  00577C                     
 15859                           ;lib_ili9341.c: 191: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 192: {;lib_ili9341.
      +                          c: 193:     uint16_t width = 320, height = 240;
 15860  00577C  0E01               	movlw	1
 15861  00577E  6E19               	movwf	(lcd_fill@width+1)^0,c
 15862  005780  0E40               	movlw	64
 15863  005782  6E18               	movwf	lcd_fill@width^0,c
 15864  005784  0E00               	movlw	0
 15865  005786  6E17               	movwf	(lcd_fill@height+1)^0,c
 15866  005788  0EF0               	movlw	240
 15867  00578A  6E16               	movwf	lcd_fill@height^0,c
 15868  00578C                     
 15869                           ;lib_ili9341.c: 195:     if( lcd_set_cursor(0,0) )
 15870  00578C  0E00               	movlw	0
 15871  00578E  6E11               	movwf	(lcd_set_cursor@x+1)^0,c
 15872  005790  0E00               	movlw	0
 15873  005792  6E10               	movwf	lcd_set_cursor@x^0,c
 15874  005794  0E00               	movlw	0
 15875  005796  6E13               	movwf	(lcd_set_cursor@y+1)^0,c
 15876  005798  0E00               	movlw	0
 15877  00579A  6E12               	movwf	lcd_set_cursor@y^0,c
 15878  00579C  ECF2  F02D         	call	_lcd_set_cursor	;wreg free
 15879  0057A0  0900               	iorlw	0
 15880  0057A2  B4D8               	btfsc	status,2,c
 15881  0057A4  EFD6  F02B         	goto	u8111
 15882  0057A8  EFD8  F02B         	goto	u8110
 15883  0057AC                     u8111:
 15884  0057AC  EFF1  F02B         	goto	l6878
 15885  0057B0                     u8110:
 15886  0057B0  EFFE  F02B         	goto	l487
 15887  0057B4                     l6872:
 15888                           
 15889                           ;lib_ili9341.c: 203:         {;lib_ili9341.c: 204:             lcd_draw_pixel(bg_color);
 15890  0057B4  C014  F00E         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 15891  0057B8  C015  F00F         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 15892  0057BC  EC8B  F030         	call	_lcd_draw_pixel	;wreg free
 15893  0057C0                     l6874:
 15894                           
 15895                           ;lib_ili9341.c: 202:         while(width--)
 15896  0057C0  0618               	decf	lcd_fill@width^0,f,c
 15897  0057C2  A0D8               	btfss	status,0,c
 15898  0057C4  0619               	decf	(lcd_fill@width+1)^0,f,c
 15899  0057C6  2818               	incf	lcd_fill@width^0,w,c
 15900  0057C8  E106               	bnz	u8121
 15901  0057CA  2819               	incf	(lcd_fill@width+1)^0,w,c
 15902  0057CC  A4D8               	btfss	status,2,c
 15903  0057CE  EFEB  F02B         	goto	u8121
 15904  0057D2  EFED  F02B         	goto	u8120
 15905  0057D6                     u8121:
 15906  0057D6  EFDA  F02B         	goto	l6872
 15907  0057DA                     u8120:
 15908  0057DA                     
 15909                           ;lib_ili9341.c: 206:         width = 320;
 15910  0057DA  0E01               	movlw	1
 15911  0057DC  6E19               	movwf	(lcd_fill@width+1)^0,c
 15912  0057DE  0E40               	movlw	64
 15913  0057E0  6E18               	movwf	lcd_fill@width^0,c
 15914  0057E2                     l6878:
 15915                           
 15916                           ;lib_ili9341.c: 200:     while(height--)
 15917  0057E2  0616               	decf	lcd_fill@height^0,f,c
 15918  0057E4  A0D8               	btfss	status,0,c
 15919  0057E6  0617               	decf	(lcd_fill@height+1)^0,f,c
 15920  0057E8  2816               	incf	lcd_fill@height^0,w,c
 15921  0057EA  E106               	bnz	u8131
 15922  0057EC  2817               	incf	(lcd_fill@height+1)^0,w,c
 15923  0057EE  A4D8               	btfss	status,2,c
 15924  0057F0  EFFC  F02B         	goto	u8131
 15925  0057F4  EFFE  F02B         	goto	u8130
 15926  0057F8                     u8131:
 15927  0057F8  EFE0  F02B         	goto	l6874
 15928  0057FC                     u8130:
 15929  0057FC                     l487:
 15930  0057FC  0012               	return		;funcret
 15931  0057FE                     __end_of_lcd_fill:
 15932                           	opt callstack 0
 15933                           
 15934 ;; *************** function _lcd_draw_string *****************
 15935 ;; Defined at:
 15936 ;;		line 378 in file "lib_ili9341.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;  x               2   41[COMRAM] unsigned short 
 15939 ;;  y               2   43[COMRAM] unsigned short 
 15940 ;;  pS              2   45[COMRAM] PTR const unsigned char 
 15941 ;;		 -> steste(100), string(100), string_rpm(100), STR_2(11), 
 15942 ;;		 -> STR_1(33), 
 15943 ;;  fg_color        2   47[COMRAM] unsigned short 
 15944 ;;  bg_color        2   49[COMRAM] unsigned short 
 15945 ;; Auto vars:     Size  Location     Type
 15946 ;;  lIndex          2   57[COMRAM] unsigned short 
 15947 ;;  k               2   55[COMRAM] unsigned short 
 15948 ;; Return value:  Size  Location     Type
 15949 ;;                  1    wreg      void 
 15950 ;; Registers used:
 15951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15952 ;; Tracked objects:
 15953 ;;		On entry : 0/0
 15954 ;;		On exit  : 0/0
 15955 ;;		Unchanged: 0/0
 15956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15957 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15958 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15959 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15960 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;Total ram usage:       18 bytes
 15962 ;; Hardware stack levels used:    1
 15963 ;; Hardware stack levels required when called:   10
 15964 ;; This function calls:
 15965 ;;		_lcd_draw_char
 15966 ;; This function is called by:
 15967 ;;		_main
 15968 ;; This function uses a non-reentrant model
 15969 ;;
 15970                           
 15971                           	psect	text48
 15972  0049E6                     __ptext48:
 15973                           	opt callstack 0
 15974  0049E6                     _lcd_draw_string:
 15975                           	opt callstack 20
 15976  0049E6                     
 15977                           ;lib_ili9341.c: 378: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 379: {;lib_ili9341.c: 380:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 382:     while(*pS)
 15978  0049E6  EF72  F025         	goto	l7240
 15979  0049EA                     l7226:
 15980                           
 15981                           ;lib_ili9341.c: 383:     {;lib_ili9341.c: 384:         lIndex = 0;
 15982  0049EA  0E00               	movlw	0
 15983  0049EC  6E3B               	movwf	(lcd_draw_string@lIndex+1)^0,c
 15984  0049EE  0E00               	movlw	0
 15985  0049F0  6E3A               	movwf	lcd_draw_string@lIndex^0,c
 15986                           
 15987                           ;lib_ili9341.c: 385:         for(k=0; k<(*pS - ' '); k++)
 15988  0049F2  0E00               	movlw	0
 15989  0049F4  6E39               	movwf	(lcd_draw_string@k+1)^0,c
 15990  0049F6  0E00               	movlw	0
 15991  0049F8  6E38               	movwf	lcd_draw_string@k^0,c
 15992  0049FA  EF1E  F025         	goto	l7232
 15993  0049FE                     l7228:
 15994                           
 15995                           ;lib_ili9341.c: 386:         {;lib_ili9341.c: 387:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 15996  0049FE  90D8               	bcf	status,0,c
 15997  004A00  343A               	rlcf	lcd_draw_string@lIndex^0,w,c
 15998  004A02  6EF6               	movwf	tblptrl,c
 15999  004A04  343B               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16000  004A06  6EF7               	movwf	tblptrh,c
 16001  004A08  0E93               	movlw	low _font
 16002  004A0A  26F6               	addwf	tblptrl,f,c
 16003  004A0C  0EF1               	movlw	high _font
 16004  004A0E  22F7               	addwfc	tblptrh,f,c
 16005  004A10                     	if	1	;There are 3 active tblptr bytes
 16006  004A10  6AF8               	clrf	tblptru,c
 16007  004A12  0E00               	movlw	low (__mediumconst shr (0+16))
 16008  004A14  22F8               	addwfc	tblptru,f,c
 16009  004A16                     	endif
 16010  004A16  0009               	tblrd		*+
 16011  004A18  CFF5 F034          	movff	tablat,??_lcd_draw_string
 16012  004A1C  0009               	tblrd		*+
 16013  004A1E  CFF5 F035          	movff	tablat,??_lcd_draw_string+1
 16014  004A22  90D8               	bcf	status,0,c
 16015  004A24  3634               	rlcf	??_lcd_draw_string^0,f,c
 16016  004A26  3635               	rlcf	(??_lcd_draw_string+1)^0,f,c
 16017  004A28  0E01               	movlw	1
 16018  004A2A  2634               	addwf	??_lcd_draw_string^0,f,c
 16019  004A2C  0E00               	movlw	0
 16020  004A2E  2235               	addwfc	(??_lcd_draw_string+1)^0,f,c
 16021  004A30  5034               	movf	??_lcd_draw_string^0,w,c
 16022  004A32  263A               	addwf	lcd_draw_string@lIndex^0,f,c
 16023  004A34  5035               	movf	(??_lcd_draw_string+1)^0,w,c
 16024  004A36  223B               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 16025  004A38                     
 16026                           ;lib_ili9341.c: 388:         }
 16027  004A38  4A38               	infsnz	lcd_draw_string@k^0,f,c
 16028  004A3A  2A39               	incf	(lcd_draw_string@k+1)^0,f,c
 16029  004A3C                     l7232:
 16030  004A3C  0EE0               	movlw	224
 16031  004A3E  6E34               	movwf	??_lcd_draw_string^0,c
 16032  004A40  0EFF               	movlw	255
 16033  004A42  6E35               	movwf	(??_lcd_draw_string+1)^0,c
 16034  004A44  C02E  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16035  004A48  C02F  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16036  004A4C  0E00               	movlw	low (__mediumconst shr (0+16))
 16037  004A4E  6EF8               	movwf	tblptru,c
 16038  004A50  0E0E               	movlw	(high __ramtop+-1)
 16039  004A52  64F7               	cpfsgt	tblptrh,c
 16040  004A54  D003               	bra	u8387
 16041  004A56  0008               	tblrd		*
 16042  004A58  50F5               	movf	tablat,w,c
 16043  004A5A  D005               	bra	u8380
 16044  004A5C                     u8387:
 16045  004A5C  CFF6 FFE1          	movff	tblptrl,fsr1l
 16046  004A60  CFF7 FFE2          	movff	tblptrh,fsr1h
 16047  004A64  50E7               	movf	indf1,w,c
 16048  004A66                     u8380:
 16049  004A66  6E36               	movwf	(??_lcd_draw_string+2)^0,c
 16050  004A68  6A37               	clrf	(??_lcd_draw_string+3)^0,c
 16051  004A6A  5034               	movf	??_lcd_draw_string^0,w,c
 16052  004A6C  2636               	addwf	(??_lcd_draw_string+2)^0,f,c
 16053  004A6E  5035               	movf	(??_lcd_draw_string+1)^0,w,c
 16054  004A70  2237               	addwfc	(??_lcd_draw_string+3)^0,f,c
 16055  004A72  5036               	movf	(??_lcd_draw_string+2)^0,w,c
 16056  004A74  5C38               	subwf	lcd_draw_string@k^0,w,c
 16057  004A76  5037               	movf	(??_lcd_draw_string+3)^0,w,c
 16058  004A78  5839               	subwfb	(lcd_draw_string@k+1)^0,w,c
 16059  004A7A  A0D8               	btfss	status,0,c
 16060  004A7C  EF42  F025         	goto	u8391
 16061  004A80  EF44  F025         	goto	u8390
 16062  004A84                     u8391:
 16063  004A84  EFFF  F024         	goto	l7228
 16064  004A88                     u8390:
 16065  004A88                     
 16066                           ;lib_ili9341.c: 390:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 16067  004A88  C02A  F014         	movff	lcd_draw_string@x,lcd_draw_char@x
 16068  004A8C  C02B  F015         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 16069  004A90  C02C  F016         	movff	lcd_draw_string@y,lcd_draw_char@y
 16070  004A94  C02D  F017         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 16071  004A98  C03A  F018         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 16072  004A9C  C03B  F019         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 16073  004AA0  C030  F01A         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 16074  004AA4  C031  F01B         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 16075  004AA8  C032  F01C         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 16076  004AAC  C033  F01D         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 16077  004AB0  ECD0  F022         	call	_lcd_draw_char	;wreg free
 16078  004AB4                     
 16079                           ;lib_ili9341.c: 392:         x += font[lIndex];
 16080  004AB4  90D8               	bcf	status,0,c
 16081  004AB6  343A               	rlcf	lcd_draw_string@lIndex^0,w,c
 16082  004AB8  6EF6               	movwf	tblptrl,c
 16083  004ABA  343B               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16084  004ABC  6EF7               	movwf	tblptrh,c
 16085  004ABE  0E93               	movlw	low _font
 16086  004AC0  26F6               	addwf	tblptrl,f,c
 16087  004AC2  0EF1               	movlw	high _font
 16088  004AC4  22F7               	addwfc	tblptrh,f,c
 16089  004AC6                     	if	1	;There are 3 active tblptr bytes
 16090  004AC6  6AF8               	clrf	tblptru,c
 16091  004AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 16092  004ACA  22F8               	addwfc	tblptru,f,c
 16093  004ACC                     	endif
 16094  004ACC  0009               	tblrd		*+
 16095  004ACE  CFF5 F034          	movff	tablat,??_lcd_draw_string
 16096  004AD2  0009               	tblrd		*+
 16097  004AD4  CFF5 F035          	movff	tablat,??_lcd_draw_string+1
 16098  004AD8  5034               	movf	??_lcd_draw_string^0,w,c
 16099  004ADA  262A               	addwf	lcd_draw_string@x^0,f,c
 16100  004ADC  5035               	movf	(??_lcd_draw_string+1)^0,w,c
 16101  004ADE  222B               	addwfc	(lcd_draw_string@x+1)^0,f,c
 16102  004AE0                     
 16103                           ;lib_ili9341.c: 394:         pS++;
 16104  004AE0  4A2E               	infsnz	lcd_draw_string@pS^0,f,c
 16105  004AE2  2A2F               	incf	(lcd_draw_string@pS+1)^0,f,c
 16106  004AE4                     l7240:
 16107                           
 16108                           ;lib_ili9341.c: 382:     while(*pS)
 16109  004AE4  C02E  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16110  004AE8  C02F  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16111  004AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 16112  004AEE  6EF8               	movwf	tblptru,c
 16113  004AF0  0E0E               	movlw	(high __ramtop+-1)
 16114  004AF2  64F7               	cpfsgt	tblptrh,c
 16115  004AF4  D003               	bra	u8407
 16116  004AF6  0008               	tblrd		*
 16117  004AF8  50F5               	movf	tablat,w,c
 16118  004AFA  D005               	bra	u8400
 16119  004AFC                     u8407:
 16120  004AFC  CFF6 FFE1          	movff	tblptrl,fsr1l
 16121  004B00  CFF7 FFE2          	movff	tblptrh,fsr1h
 16122  004B04  50E7               	movf	indf1,w,c
 16123  004B06                     u8400:
 16124  004B06  0900               	iorlw	0
 16125  004B08  A4D8               	btfss	status,2,c
 16126  004B0A  EF89  F025         	goto	u8411
 16127  004B0E  EF8B  F025         	goto	u8410
 16128  004B12                     u8411:
 16129  004B12  EFF5  F024         	goto	l7226
 16130  004B16                     u8410:
 16131  004B16  0012               	return		;funcret
 16132  004B18                     __end_of_lcd_draw_string:
 16133                           	opt callstack 0
 16134                           
 16135 ;; *************** function _lcd_draw_char *****************
 16136 ;; Defined at:
 16137 ;;		line 353 in file "lib_ili9341.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;  x               2   19[COMRAM] unsigned short 
 16140 ;;  y               2   21[COMRAM] unsigned short 
 16141 ;;  fIndex          2   23[COMRAM] unsigned short 
 16142 ;;  fg_color        2   25[COMRAM] unsigned short 
 16143 ;;  bg_color        2   27[COMRAM] unsigned short 
 16144 ;; Auto vars:     Size  Location     Type
 16145 ;;  i               1   40[COMRAM] unsigned char 
 16146 ;;  k               1   39[COMRAM] unsigned char 
 16147 ;;  j               1   38[COMRAM] unsigned char 
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  1    wreg      void 
 16150 ;; Registers used:
 16151 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16157 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16158 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16159 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16160 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16161 ;;Total ram usage:       22 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; Hardware stack levels required when called:    9
 16164 ;; This function calls:
 16165 ;;		_lcd_draw_pixel
 16166 ;;		_lcd_set_cursor
 16167 ;; This function is called by:
 16168 ;;		_lcd_draw_string
 16169 ;; This function uses a non-reentrant model
 16170 ;;
 16171                           
 16172                           	psect	text49
 16173  0045A0                     __ptext49:
 16174                           	opt callstack 0
 16175  0045A0                     _lcd_draw_char:
 16176                           	opt callstack 20
 16177  0045A0                     
 16178                           ;lib_ili9341.c: 353: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 354: {;lib_ili9341.c: 355:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 357:     for(j=0; j < font[fIndex]; j++)
 16179  0045A0  0E00               	movlw	0
 16180  0045A2  6E27               	movwf	lcd_draw_char@j^0,c
 16181  0045A4  EF70  F023         	goto	l6916
 16182  0045A8                     l6886:
 16183                           
 16184                           ;lib_ili9341.c: 358:     {;lib_ili9341.c: 359:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 16185  0045A8  90D8               	bcf	status,0,c
 16186  0045AA  3418               	rlcf	lcd_draw_char@fIndex^0,w,c
 16187  0045AC  6EF6               	movwf	tblptrl,c
 16188  0045AE  3419               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16189  0045B0  6EF7               	movwf	tblptrh,c
 16190  0045B2  0E93               	movlw	low _font
 16191  0045B4  26F6               	addwf	tblptrl,f,c
 16192  0045B6  0EF1               	movlw	high _font
 16193  0045B8  22F7               	addwfc	tblptrh,f,c
 16194  0045BA                     	if	1	;There are 3 active tblptr bytes
 16195  0045BA  6AF8               	clrf	tblptru,c
 16196  0045BC  0E00               	movlw	low (__mediumconst shr (0+16))
 16197  0045BE  22F8               	addwfc	tblptru,f,c
 16198  0045C0                     	endif
 16199  0045C0  0009               	tblrd		*+
 16200  0045C2  CFF5 F01E          	movff	tablat,??_lcd_draw_char
 16201  0045C6  0009               	tblrd		*+
 16202  0045C8  CFF5 F01F          	movff	tablat,??_lcd_draw_char+1
 16203  0045CC  5027               	movf	lcd_draw_char@j^0,w,c
 16204  0045CE  5E1E               	subwf	??_lcd_draw_char^0,f,c
 16205  0045D0  0E00               	movlw	0
 16206  0045D2  5A1F               	subwfb	(??_lcd_draw_char+1)^0,f,c
 16207  0045D4  5014               	movf	lcd_draw_char@x^0,w,c
 16208  0045D6  241E               	addwf	??_lcd_draw_char^0,w,c
 16209  0045D8  6E10               	movwf	lcd_set_cursor@x^0,c
 16210  0045DA  5015               	movf	(lcd_draw_char@x+1)^0,w,c
 16211  0045DC  201F               	addwfc	(??_lcd_draw_char+1)^0,w,c
 16212  0045DE  6E11               	movwf	(lcd_set_cursor@x+1)^0,c
 16213  0045E0  C016  F012         	movff	lcd_draw_char@y,lcd_set_cursor@y
 16214  0045E4  C017  F013         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 16215  0045E8  ECF2  F02D         	call	_lcd_set_cursor	;wreg free
 16216  0045EC                     
 16217                           ;lib_ili9341.c: 361:         for(k=0; k<2; k++)
 16218  0045EC  0E00               	movlw	0
 16219  0045EE  6E28               	movwf	lcd_draw_char@k^0,c
 16220  0045F0                     l6894:
 16221                           
 16222                           ;lib_ili9341.c: 362:         {;lib_ili9341.c: 363:             for(i=0; i<8; i++)
 16223  0045F0  0E00               	movlw	0
 16224  0045F2  6E29               	movwf	lcd_draw_char@i^0,c
 16225  0045F4                     l6900:
 16226                           
 16227                           ;lib_ili9341.c: 364:             {;lib_ili9341.c: 365:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 16228  0045F4  5027               	movf	lcd_draw_char@j^0,w,c
 16229  0045F6  6E1E               	movwf	??_lcd_draw_char^0,c
 16230  0045F8  6A1F               	clrf	(??_lcd_draw_char+1)^0,c
 16231  0045FA  90D8               	bcf	status,0,c
 16232  0045FC  361E               	rlcf	??_lcd_draw_char^0,f,c
 16233  0045FE  361F               	rlcf	(??_lcd_draw_char+1)^0,f,c
 16234  004600  90D8               	bcf	status,0,c
 16235  004602  3418               	rlcf	lcd_draw_char@fIndex^0,w,c
 16236  004604  6EF6               	movwf	tblptrl,c
 16237  004606  3419               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16238  004608  6EF7               	movwf	tblptrh,c
 16239  00460A  0E93               	movlw	low _font
 16240  00460C  26F6               	addwf	tblptrl,f,c
 16241  00460E  0EF1               	movlw	high _font
 16242  004610  22F7               	addwfc	tblptrh,f,c
 16243  004612                     	if	1	;There are 3 active tblptr bytes
 16244  004612  6AF8               	clrf	tblptru,c
 16245  004614  0E00               	movlw	low (__mediumconst shr (0+16))
 16246  004616  22F8               	addwfc	tblptru,f,c
 16247  004618                     	endif
 16248  004618  0009               	tblrd		*+
 16249  00461A  CFF5 F020          	movff	tablat,??_lcd_draw_char+2
 16250  00461E  0009               	tblrd		*+
 16251  004620  CFF5 F021          	movff	tablat,??_lcd_draw_char+3
 16252  004624  90D8               	bcf	status,0,c
 16253  004626  3620               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16254  004628  3621               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16255  00462A  501E               	movf	??_lcd_draw_char^0,w,c
 16256  00462C  5E20               	subwf	(??_lcd_draw_char+2)^0,f,c
 16257  00462E  501F               	movf	(??_lcd_draw_char+1)^0,w,c
 16258  004630  5A21               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16259  004632  5028               	movf	lcd_draw_char@k^0,w,c
 16260  004634  5E20               	subwf	(??_lcd_draw_char+2)^0,f,c
 16261  004636  0E00               	movlw	0
 16262  004638  5A21               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16263  00463A  5018               	movf	lcd_draw_char@fIndex^0,w,c
 16264  00463C  2620               	addwf	(??_lcd_draw_char+2)^0,f,c
 16265  00463E  5019               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 16266  004640  2221               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16267  004642  90D8               	bcf	status,0,c
 16268  004644  3620               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16269  004646  3621               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16270  004648  0E93               	movlw	low _font
 16271  00464A  2420               	addwf	(??_lcd_draw_char+2)^0,w,c
 16272  00464C  6EF6               	movwf	tblptrl,c
 16273  00464E  0EF1               	movlw	high _font
 16274  004650  2021               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16275  004652  6EF7               	movwf	tblptrh,c
 16276  004654                     	if	1	;There are 3 active tblptr bytes
 16277  004654  6AF8               	clrf	tblptru,c
 16278  004656  0E00               	movlw	low (__mediumconst shr (0+16))
 16279  004658  22F8               	addwfc	tblptru,f,c
 16280  00465A                     	endif
 16281  00465A  0009               	tblrd		*+
 16282  00465C  CFF5 F022          	movff	tablat,??_lcd_draw_char+4
 16283  004660  0009               	tblrd		*+
 16284  004662  CFF5 F023          	movff	tablat,??_lcd_draw_char+5
 16285  004666  C029  F024         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16286  00466A  0E80               	movlw	128
 16287  00466C  6E25               	movwf	(??_lcd_draw_char+7)^0,c
 16288  00466E  0E00               	movlw	0
 16289  004670  6E26               	movwf	(??_lcd_draw_char+8)^0,c
 16290  004672  2A24               	incf	(??_lcd_draw_char+6)^0,f,c
 16291  004674  EF3F  F023         	goto	u8154
 16292  004678                     u8155:
 16293  004678  3426               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16294  00467A  3226               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16295  00467C  3225               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16296  00467E                     u8154:
 16297  00467E  2E24               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16298  004680  EF3C  F023         	goto	u8155
 16299  004684  5022               	movf	(??_lcd_draw_char+4)^0,w,c
 16300  004686  1625               	andwf	(??_lcd_draw_char+7)^0,f,c
 16301  004688  5023               	movf	(??_lcd_draw_char+5)^0,w,c
 16302  00468A  1626               	andwf	(??_lcd_draw_char+8)^0,f,c
 16303  00468C  5025               	movf	(??_lcd_draw_char+7)^0,w,c
 16304  00468E  1026               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16305  004690  B4D8               	btfsc	status,2,c
 16306  004692  EF4D  F023         	goto	u8161
 16307  004696  EF4F  F023         	goto	u8160
 16308  00469A                     u8161:
 16309  00469A  EF57  F023         	goto	l6904
 16310  00469E                     u8160:
 16311  00469E                     
 16312                           ;lib_ili9341.c: 366:                 {;lib_ili9341.c: 367:                     lcd_draw_
      +                          pixel(fg_color);
 16313  00469E  C01A  F00E         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16314  0046A2  C01B  F00F         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16315  0046A6  EC8B  F030         	call	_lcd_draw_pixel	;wreg free
 16316                           
 16317                           ;lib_ili9341.c: 368:                 }
 16318  0046AA  EF5D  F023         	goto	l6906
 16319  0046AE                     l6904:
 16320                           
 16321                           ;lib_ili9341.c: 370:                 {;lib_ili9341.c: 371:                     lcd_draw_
      +                          pixel(bg_color);
 16322  0046AE  C01C  F00E         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16323  0046B2  C01D  F00F         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16324  0046B6  EC8B  F030         	call	_lcd_draw_pixel	;wreg free
 16325  0046BA                     l6906:
 16326                           
 16327                           ;lib_ili9341.c: 373:             }
 16328  0046BA  2A29               	incf	lcd_draw_char@i^0,f,c
 16329  0046BC  0E07               	movlw	7
 16330  0046BE  6429               	cpfsgt	lcd_draw_char@i^0,c
 16331  0046C0  EF64  F023         	goto	u8171
 16332  0046C4  EF66  F023         	goto	u8170
 16333  0046C8                     u8171:
 16334  0046C8  EFFA  F022         	goto	l6900
 16335  0046CC                     u8170:
 16336  0046CC                     
 16337                           ;lib_ili9341.c: 374:         }
 16338  0046CC  2A28               	incf	lcd_draw_char@k^0,f,c
 16339  0046CE  0E01               	movlw	1
 16340  0046D0  6428               	cpfsgt	lcd_draw_char@k^0,c
 16341  0046D2  EF6D  F023         	goto	u8181
 16342  0046D6  EF6F  F023         	goto	u8180
 16343  0046DA                     u8181:
 16344  0046DA  EFF8  F022         	goto	l6894
 16345  0046DE                     u8180:
 16346  0046DE                     
 16347                           ;lib_ili9341.c: 375:     }
 16348  0046DE  2A27               	incf	lcd_draw_char@j^0,f,c
 16349  0046E0                     l6916:
 16350  0046E0  90D8               	bcf	status,0,c
 16351  0046E2  3418               	rlcf	lcd_draw_char@fIndex^0,w,c
 16352  0046E4  6EF6               	movwf	tblptrl,c
 16353  0046E6  3419               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16354  0046E8  6EF7               	movwf	tblptrh,c
 16355  0046EA  0E93               	movlw	low _font
 16356  0046EC  26F6               	addwf	tblptrl,f,c
 16357  0046EE  0EF1               	movlw	high _font
 16358  0046F0  22F7               	addwfc	tblptrh,f,c
 16359  0046F2                     	if	1	;There are 3 active tblptr bytes
 16360  0046F2  6AF8               	clrf	tblptru,c
 16361  0046F4  0E00               	movlw	low (__mediumconst shr (0+16))
 16362  0046F6  22F8               	addwfc	tblptru,f,c
 16363  0046F8                     	endif
 16364  0046F8  5027               	movf	lcd_draw_char@j^0,w,c
 16365  0046FA  6E1E               	movwf	??_lcd_draw_char^0,c
 16366  0046FC  6A1F               	clrf	(??_lcd_draw_char+1)^0,c
 16367  0046FE  0009               	tblrd		*+
 16368  004700  50F5               	movf	tablat,w,c
 16369  004702  5C1E               	subwf	??_lcd_draw_char^0,w,c
 16370  004704  0009               	tblrd		*+
 16371  004706  50F5               	movf	tablat,w,c
 16372  004708  581F               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16373  00470A  A0D8               	btfss	status,0,c
 16374  00470C  EF8A  F023         	goto	u8191
 16375  004710  EF8C  F023         	goto	u8190
 16376  004714                     u8191:
 16377  004714  EFD4  F022         	goto	l6886
 16378  004718                     u8190:
 16379  004718  0012               	return		;funcret
 16380  00471A                     __end_of_lcd_draw_char:
 16381                           	opt callstack 0
 16382                           
 16383 ;; *************** function _lcd_draw_line *****************
 16384 ;; Defined at:
 16385 ;;		line 210 in file "lib_ili9341.c"
 16386 ;; Parameters:    Size  Location     Type
 16387 ;;  x0              2   25[COMRAM] unsigned short 
 16388 ;;  y0              2   27[COMRAM] unsigned short 
 16389 ;;  x1              2   29[COMRAM] unsigned short 
 16390 ;;  y1              2   31[COMRAM] unsigned short 
 16391 ;;  color           2   33[COMRAM] unsigned short 
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;  dy              2   46[COMRAM] short 
 16394 ;;  dx              2   44[COMRAM] short 
 16395 ;;  e2              2   42[COMRAM] short 
 16396 ;;  err             2   40[COMRAM] short 
 16397 ;;  sy              2   38[COMRAM] short 
 16398 ;;  sx              2   36[COMRAM] short 
 16399 ;; Return value:  Size  Location     Type
 16400 ;;                  1    wreg      void 
 16401 ;; Registers used:
 16402 ;;		wreg, status,2, status,0, cstack
 16403 ;; Tracked objects:
 16404 ;;		On entry : 0/0
 16405 ;;		On exit  : 0/0
 16406 ;;		Unchanged: 0/0
 16407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16408 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16409 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16411 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16412 ;;Total ram usage:       23 bytes
 16413 ;; Hardware stack levels used:    1
 16414 ;; Hardware stack levels required when called:   10
 16415 ;; This function calls:
 16416 ;;		_lcd_draw_pixel_at
 16417 ;; This function is called by:
 16418 ;;		_main
 16419 ;;		_lcd_draw_filled_circle
 16420 ;; This function uses a non-reentrant model
 16421 ;;
 16422                           
 16423                           	psect	text50
 16424  00471A                     __ptext50:
 16425                           	opt callstack 0
 16426  00471A                     _lcd_draw_line:
 16427                           	opt callstack 20
 16428  00471A                     
 16429                           ;lib_ili9341.c: 210: void lcd_draw_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 211: {;lib_ili9341.c: 212:     int16_t dx = x1 - x0, 
      +                          sx = x0 < x1 ? 1 : -1;
 16430  00471A  501A               	movf	lcd_draw_line@x0^0,w,c
 16431  00471C  5C1E               	subwf	lcd_draw_line@x1^0,w,c
 16432  00471E  6E2D               	movwf	lcd_draw_line@dx^0,c
 16433  004720  501B               	movf	(lcd_draw_line@x0+1)^0,w,c
 16434  004722  581F               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 16435  004724  6E2E               	movwf	(lcd_draw_line@dx+1)^0,c
 16436  004726  501E               	movf	lcd_draw_line@x1^0,w,c
 16437  004728  5C1A               	subwf	lcd_draw_line@x0^0,w,c
 16438  00472A  501F               	movf	(lcd_draw_line@x1+1)^0,w,c
 16439  00472C  581B               	subwfb	(lcd_draw_line@x0+1)^0,w,c
 16440  00472E  A0D8               	btfss	status,0,c
 16441  004730  EF9C  F023         	goto	u8301
 16442  004734  EF9E  F023         	goto	u8300
 16443  004738                     u8301:
 16444  004738  EFA2  F023         	goto	l7190
 16445  00473C                     u8300:
 16446  00473C  6825               	setf	lcd_draw_line@sx^0,c
 16447  00473E  6826               	setf	(lcd_draw_line@sx+1)^0,c
 16448  004740  EFA6  F023         	goto	l7192
 16449  004744                     l7190:
 16450  004744  0E00               	movlw	0
 16451  004746  6E26               	movwf	(lcd_draw_line@sx+1)^0,c
 16452  004748  0E01               	movlw	1
 16453  00474A  6E25               	movwf	lcd_draw_line@sx^0,c
 16454  00474C                     l7192:
 16455                           
 16456                           ;lib_ili9341.c: 213:     int16_t dy = y1 - y0, sy = y0 < y1 ? 1 : -1;
 16457  00474C  501C               	movf	lcd_draw_line@y0^0,w,c
 16458  00474E  5C20               	subwf	lcd_draw_line@y1^0,w,c
 16459  004750  6E2F               	movwf	lcd_draw_line@dy^0,c
 16460  004752  501D               	movf	(lcd_draw_line@y0+1)^0,w,c
 16461  004754  5821               	subwfb	(lcd_draw_line@y1+1)^0,w,c
 16462  004756  6E30               	movwf	(lcd_draw_line@dy+1)^0,c
 16463  004758  5020               	movf	lcd_draw_line@y1^0,w,c
 16464  00475A  5C1C               	subwf	lcd_draw_line@y0^0,w,c
 16465  00475C  5021               	movf	(lcd_draw_line@y1+1)^0,w,c
 16466  00475E  581D               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 16467  004760  A0D8               	btfss	status,0,c
 16468  004762  EFB5  F023         	goto	u8311
 16469  004766  EFB7  F023         	goto	u8310
 16470  00476A                     u8311:
 16471  00476A  EFBB  F023         	goto	l7198
 16472  00476E                     u8310:
 16473  00476E  6827               	setf	lcd_draw_line@sy^0,c
 16474  004770  6828               	setf	(lcd_draw_line@sy+1)^0,c
 16475  004772  EFBF  F023         	goto	l7200
 16476  004776                     l7198:
 16477  004776  0E00               	movlw	0
 16478  004778  6E28               	movwf	(lcd_draw_line@sy+1)^0,c
 16479  00477A  0E01               	movlw	1
 16480  00477C  6E27               	movwf	lcd_draw_line@sy^0,c
 16481  00477E                     l7200:
 16482                           
 16483                           ;lib_ili9341.c: 214:     int16_t err, e2;;lib_ili9341.c: 216:     if(x0 > x1)
 16484  00477E  501A               	movf	lcd_draw_line@x0^0,w,c
 16485  004780  5C1E               	subwf	lcd_draw_line@x1^0,w,c
 16486  004782  501B               	movf	(lcd_draw_line@x0+1)^0,w,c
 16487  004784  581F               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 16488  004786  B0D8               	btfsc	status,0,c
 16489  004788  EFC8  F023         	goto	u8321
 16490  00478C  EFCA  F023         	goto	u8320
 16491  004790                     u8321:
 16492  004790  EFCE  F023         	goto	l7204
 16493  004794                     u8320:
 16494  004794                     
 16495                           ;lib_ili9341.c: 217:     {;lib_ili9341.c: 218:         dx = -dx;
 16496  004794  6C2D               	negf	lcd_draw_line@dx^0,c
 16497  004796  1E2E               	comf	(lcd_draw_line@dx+1)^0,f,c
 16498  004798  B0D8               	btfsc	status,0,c
 16499  00479A  2A2E               	incf	(lcd_draw_line@dx+1)^0,f,c
 16500  00479C                     l7204:
 16501                           
 16502                           ;lib_ili9341.c: 221:     if(y1 > y0)
 16503  00479C  5020               	movf	lcd_draw_line@y1^0,w,c
 16504  00479E  5C1C               	subwf	lcd_draw_line@y0^0,w,c
 16505  0047A0  5021               	movf	(lcd_draw_line@y1+1)^0,w,c
 16506  0047A2  581D               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 16507  0047A4  B0D8               	btfsc	status,0,c
 16508  0047A6  EFD7  F023         	goto	u8331
 16509  0047AA  EFD9  F023         	goto	u8330
 16510  0047AE                     u8331:
 16511  0047AE  EFDD  F023         	goto	l7208
 16512  0047B2                     u8330:
 16513  0047B2                     
 16514                           ;lib_ili9341.c: 222:     {;lib_ili9341.c: 223:         dy = -dy;
 16515  0047B2  6C2F               	negf	lcd_draw_line@dy^0,c
 16516  0047B4  1E30               	comf	(lcd_draw_line@dy+1)^0,f,c
 16517  0047B6  B0D8               	btfsc	status,0,c
 16518  0047B8  2A30               	incf	(lcd_draw_line@dy+1)^0,f,c
 16519  0047BA                     l7208:
 16520                           
 16521                           ;lib_ili9341.c: 226:     err = dx + dy;
 16522  0047BA  502F               	movf	lcd_draw_line@dy^0,w,c
 16523  0047BC  242D               	addwf	lcd_draw_line@dx^0,w,c
 16524  0047BE  6E29               	movwf	lcd_draw_line@err^0,c
 16525  0047C0  5030               	movf	(lcd_draw_line@dy+1)^0,w,c
 16526  0047C2  202E               	addwfc	(lcd_draw_line@dx+1)^0,w,c
 16527  0047C4  6E2A               	movwf	(lcd_draw_line@err+1)^0,c
 16528  0047C6                     l7210:
 16529                           
 16530                           ;lib_ili9341.c: 229:     {;lib_ili9341.c: 230:         lcd_draw_pixel_at( x0, y0, color)
      +                          ;
 16531  0047C6  C01A  F014         	movff	lcd_draw_line@x0,lcd_draw_pixel_at@x
 16532  0047CA  C01B  F015         	movff	lcd_draw_line@x0+1,lcd_draw_pixel_at@x+1
 16533  0047CE  C01C  F016         	movff	lcd_draw_line@y0,lcd_draw_pixel_at@y
 16534  0047D2  C01D  F017         	movff	lcd_draw_line@y0+1,lcd_draw_pixel_at@y+1
 16535  0047D6  C022  F018         	movff	lcd_draw_line@color,lcd_draw_pixel_at@color
 16536  0047DA  C023  F019         	movff	lcd_draw_line@color+1,lcd_draw_pixel_at@color+1
 16537  0047DE  EC1A  F02F         	call	_lcd_draw_pixel_at	;wreg free
 16538  0047E2                     
 16539                           ;lib_ili9341.c: 232:         if ( (x0 == x1) && (y0 == y1) )
 16540  0047E2  501E               	movf	lcd_draw_line@x1^0,w,c
 16541  0047E4  181A               	xorwf	lcd_draw_line@x0^0,w,c
 16542  0047E6  E107               	bnz	u8341
 16543  0047E8  501F               	movf	(lcd_draw_line@x1+1)^0,w,c
 16544  0047EA  181B               	xorwf	(lcd_draw_line@x0+1)^0,w,c
 16545  0047EC  A4D8               	btfss	status,2,c
 16546  0047EE  EFFB  F023         	goto	u8341
 16547  0047F2  EFFD  F023         	goto	u8340
 16548  0047F6                     u8341:
 16549  0047F6  EF0B  F024         	goto	l7218
 16550  0047FA                     u8340:
 16551  0047FA  5020               	movf	lcd_draw_line@y1^0,w,c
 16552  0047FC  181C               	xorwf	lcd_draw_line@y0^0,w,c
 16553  0047FE  E107               	bnz	u8351
 16554  004800  5021               	movf	(lcd_draw_line@y1+1)^0,w,c
 16555  004802  181D               	xorwf	(lcd_draw_line@y0+1)^0,w,c
 16556  004804  A4D8               	btfss	status,2,c
 16557  004806  EF07  F024         	goto	u8351
 16558  00480A  EF09  F024         	goto	u8350
 16559  00480E                     u8351:
 16560  00480E  EF0B  F024         	goto	l7218
 16561  004812                     u8350:
 16562  004812  EF40  F024         	goto	l512
 16563  004816                     l7218:
 16564                           
 16565                           ;lib_ili9341.c: 237:         e2 = (err << 1);
 16566  004816  90D8               	bcf	status,0,c
 16567  004818  3429               	rlcf	lcd_draw_line@err^0,w,c
 16568  00481A  6E2B               	movwf	lcd_draw_line@e2^0,c
 16569  00481C  342A               	rlcf	(lcd_draw_line@err+1)^0,w,c
 16570  00481E  6E2C               	movwf	(lcd_draw_line@e2+1)^0,c
 16571                           
 16572                           ;lib_ili9341.c: 239:         if(e2 >= dy)
 16573  004820  502F               	movf	lcd_draw_line@dy^0,w,c
 16574  004822  5C2B               	subwf	lcd_draw_line@e2^0,w,c
 16575  004824  502C               	movf	(lcd_draw_line@e2+1)^0,w,c
 16576  004826  0A80               	xorlw	128
 16577  004828  6E24               	movwf	??_lcd_draw_line^0,c
 16578  00482A  5030               	movf	(lcd_draw_line@dy+1)^0,w,c
 16579  00482C  0A80               	xorlw	128
 16580  00482E  5824               	subwfb	??_lcd_draw_line^0,w,c
 16581  004830  A0D8               	btfss	status,0,c
 16582  004832  EF1D  F024         	goto	u8361
 16583  004836  EF1F  F024         	goto	u8360
 16584  00483A                     u8361:
 16585  00483A  EF27  F024         	goto	l509
 16586  00483E                     u8360:
 16587  00483E                     
 16588                           ;lib_ili9341.c: 240:         {;lib_ili9341.c: 241:             err += dy;
 16589  00483E  502F               	movf	lcd_draw_line@dy^0,w,c
 16590  004840  2629               	addwf	lcd_draw_line@err^0,f,c
 16591  004842  5030               	movf	(lcd_draw_line@dy+1)^0,w,c
 16592  004844  222A               	addwfc	(lcd_draw_line@err+1)^0,f,c
 16593                           
 16594                           ;lib_ili9341.c: 242:             x0 += sx;
 16595  004846  5025               	movf	lcd_draw_line@sx^0,w,c
 16596  004848  261A               	addwf	lcd_draw_line@x0^0,f,c
 16597  00484A  5026               	movf	(lcd_draw_line@sx+1)^0,w,c
 16598  00484C  221B               	addwfc	(lcd_draw_line@x0+1)^0,f,c
 16599  00484E                     l509:
 16600                           
 16601                           ;lib_ili9341.c: 245:         if(e2 <= dx)
 16602  00484E  502B               	movf	lcd_draw_line@e2^0,w,c
 16603  004850  5C2D               	subwf	lcd_draw_line@dx^0,w,c
 16604  004852  502E               	movf	(lcd_draw_line@dx+1)^0,w,c
 16605  004854  0A80               	xorlw	128
 16606  004856  6E24               	movwf	??_lcd_draw_line^0,c
 16607  004858  502C               	movf	(lcd_draw_line@e2+1)^0,w,c
 16608  00485A  0A80               	xorlw	128
 16609  00485C  5824               	subwfb	??_lcd_draw_line^0,w,c
 16610  00485E  A0D8               	btfss	status,0,c
 16611  004860  EF34  F024         	goto	u8371
 16612  004864  EF36  F024         	goto	u8370
 16613  004868                     u8371:
 16614  004868  EFE3  F023         	goto	l7210
 16615  00486C                     u8370:
 16616  00486C                     
 16617                           ;lib_ili9341.c: 246:         {;lib_ili9341.c: 247:             err += dx;
 16618  00486C  502D               	movf	lcd_draw_line@dx^0,w,c
 16619  00486E  2629               	addwf	lcd_draw_line@err^0,f,c
 16620  004870  502E               	movf	(lcd_draw_line@dx+1)^0,w,c
 16621  004872  222A               	addwfc	(lcd_draw_line@err+1)^0,f,c
 16622                           
 16623                           ;lib_ili9341.c: 248:             y0 += sy;
 16624  004874  5027               	movf	lcd_draw_line@sy^0,w,c
 16625  004876  261C               	addwf	lcd_draw_line@y0^0,f,c
 16626  004878  5028               	movf	(lcd_draw_line@sy+1)^0,w,c
 16627  00487A  221D               	addwfc	(lcd_draw_line@y0+1)^0,f,c
 16628  00487C  EFE3  F023         	goto	l7210
 16629  004880                     l512:
 16630  004880  0012               	return		;funcret
 16631  004882                     __end_of_lcd_draw_line:
 16632                           	opt callstack 0
 16633                           
 16634 ;; *************** function _lcd_draw_pixel_at *****************
 16635 ;; Defined at:
 16636 ;;		line 253 in file "lib_ili9341.c"
 16637 ;; Parameters:    Size  Location     Type
 16638 ;;  x               2   19[COMRAM] unsigned short 
 16639 ;;  y               2   21[COMRAM] unsigned short 
 16640 ;;  color           2   23[COMRAM] unsigned short 
 16641 ;; Auto vars:     Size  Location     Type
 16642 ;;		None
 16643 ;; Return value:  Size  Location     Type
 16644 ;;                  1    wreg      void 
 16645 ;; Registers used:
 16646 ;;		wreg, status,2, status,0, cstack
 16647 ;; Tracked objects:
 16648 ;;		On entry : 0/0
 16649 ;;		On exit  : 0/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16652 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16655 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16656 ;;Total ram usage:        6 bytes
 16657 ;; Hardware stack levels used:    1
 16658 ;; Hardware stack levels required when called:    9
 16659 ;; This function calls:
 16660 ;;		_lcd_draw_pixel
 16661 ;;		_lcd_set_cursor
 16662 ;; This function is called by:
 16663 ;;		_lcd_draw_line
 16664 ;;		_lcd_draw_circle
 16665 ;; This function uses a non-reentrant model
 16666 ;;
 16667                           
 16668                           	psect	text51
 16669  005E34                     __ptext51:
 16670                           	opt callstack 0
 16671  005E34                     _lcd_draw_pixel_at:
 16672                           	opt callstack 20
 16673  005E34                     
 16674                           ;lib_ili9341.c: 253: void lcd_draw_pixel_at(uint16_t x, uint16_t y, uint16_t color);lib_
      +                          ili9341.c: 254: {;lib_ili9341.c: 255:     if( !lcd_set_cursor(x,y) )
 16675  005E34  C014  F010         	movff	lcd_draw_pixel_at@x,lcd_set_cursor@x
 16676  005E38  C015  F011         	movff	lcd_draw_pixel_at@x+1,lcd_set_cursor@x+1
 16677  005E3C  C016  F012         	movff	lcd_draw_pixel_at@y,lcd_set_cursor@y
 16678  005E40  C017  F013         	movff	lcd_draw_pixel_at@y+1,lcd_set_cursor@y+1
 16679  005E44  ECF2  F02D         	call	_lcd_set_cursor	;wreg free
 16680  005E48  0900               	iorlw	0
 16681  005E4A  A4D8               	btfss	status,2,c
 16682  005E4C  EF2A  F02F         	goto	u8141
 16683  005E50  EF2C  F02F         	goto	u8140
 16684  005E54                     u8141:
 16685  005E54  EF32  F02F         	goto	l516
 16686  005E58                     u8140:
 16687  005E58                     
 16688                           ;lib_ili9341.c: 256:     {;lib_ili9341.c: 257:         lcd_draw_pixel(color);
 16689  005E58  C018  F00E         	movff	lcd_draw_pixel_at@color,lcd_draw_pixel@color
 16690  005E5C  C019  F00F         	movff	lcd_draw_pixel_at@color+1,lcd_draw_pixel@color+1
 16691  005E60  EC8B  F030         	call	_lcd_draw_pixel	;wreg free
 16692  005E64                     l516:
 16693  005E64  0012               	return		;funcret
 16694  005E66                     __end_of_lcd_draw_pixel_at:
 16695                           	opt callstack 0
 16696                           
 16697 ;; *************** function _lcd_set_cursor *****************
 16698 ;; Defined at:
 16699 ;;		line 142 in file "lib_ili9341.c"
 16700 ;; Parameters:    Size  Location     Type
 16701 ;;  x               2   15[COMRAM] unsigned short 
 16702 ;;  y               2   17[COMRAM] unsigned short 
 16703 ;; Auto vars:     Size  Location     Type
 16704 ;;		None
 16705 ;; Return value:  Size  Location     Type
 16706 ;;                  1    wreg      unsigned char 
 16707 ;; Registers used:
 16708 ;;		wreg, status,2, status,0, cstack
 16709 ;; Tracked objects:
 16710 ;;		On entry : 0/0
 16711 ;;		On exit  : 0/0
 16712 ;;		Unchanged: 0/0
 16713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16718 ;;Total ram usage:        4 bytes
 16719 ;; Hardware stack levels used:    1
 16720 ;; Hardware stack levels required when called:    8
 16721 ;; This function calls:
 16722 ;;		_lcd_set_cursor_x
 16723 ;;		_lcd_set_cursor_y
 16724 ;; This function is called by:
 16725 ;;		_lcd_fill
 16726 ;;		_lcd_draw_pixel_at
 16727 ;;		_lcd_draw_char
 16728 ;;		_lcd_fill_rect
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           	psect	text52
 16733  005BE4                     __ptext52:
 16734                           	opt callstack 0
 16735  005BE4                     _lcd_set_cursor:
 16736                           	opt callstack 20
 16737  005BE4                     
 16738                           ;lib_ili9341.c: 142: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 143: 
      +                          {;lib_ili9341.c: 144:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16739  005BE4  C010  F00E         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16740  005BE8  C011  F00F         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16741  005BEC  EC66  F02D         	call	_lcd_set_cursor_x	;wreg free
 16742  005BF0  0900               	iorlw	0
 16743  005BF2  A4D8               	btfss	status,2,c
 16744  005BF4  EFFE  F02D         	goto	u8011
 16745  005BF8  EF00  F02E         	goto	u8010
 16746  005BFC                     u8011:
 16747  005BFC  EF0E  F02E         	goto	l6762
 16748  005C00                     u8010:
 16749  005C00  C012  F00E         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16750  005C04  C013  F00F         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16751  005C08  EC42  F02D         	call	_lcd_set_cursor_y	;wreg free
 16752  005C0C  0900               	iorlw	0
 16753  005C0E  B4D8               	btfsc	status,2,c
 16754  005C10  EF0C  F02E         	goto	u8021
 16755  005C14  EF0E  F02E         	goto	u8020
 16756  005C18                     u8021:
 16757  005C18  EF11  F02E         	goto	l6766
 16758  005C1C                     u8020:
 16759  005C1C                     l6762:
 16760                           
 16761                           ;lib_ili9341.c: 145:     {;lib_ili9341.c: 146:         return 1;
 16762  005C1C  0E01               	movlw	1
 16763  005C1E  EF12  F02E         	goto	l472
 16764  005C22                     l6766:
 16765                           
 16766                           ;lib_ili9341.c: 149:     return 0;
 16767  005C22  0E00               	movlw	0
 16768  005C24                     l472:
 16769  005C24  0012               	return		;funcret
 16770  005C26                     __end_of_lcd_set_cursor:
 16771                           	opt callstack 0
 16772                           
 16773 ;; *************** function _lcd_set_cursor_y *****************
 16774 ;; Defined at:
 16775 ;;		line 168 in file "lib_ili9341.c"
 16776 ;; Parameters:    Size  Location     Type
 16777 ;;  y               2   13[COMRAM] unsigned short 
 16778 ;; Auto vars:     Size  Location     Type
 16779 ;;		None
 16780 ;; Return value:  Size  Location     Type
 16781 ;;                  1    wreg      unsigned char 
 16782 ;; Registers used:
 16783 ;;		wreg, status,2, status,0, cstack
 16784 ;; Tracked objects:
 16785 ;;		On entry : 0/0
 16786 ;;		On exit  : 0/0
 16787 ;;		Unchanged: 0/0
 16788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;Total ram usage:        2 bytes
 16794 ;; Hardware stack levels used:    1
 16795 ;; Hardware stack levels required when called:    7
 16796 ;; This function calls:
 16797 ;;		_lcd_send
 16798 ;; This function is called by:
 16799 ;;		_lcd_set_cursor
 16800 ;; This function uses a non-reentrant model
 16801 ;;
 16802                           
 16803                           	psect	text53
 16804  005A84                     __ptext53:
 16805                           	opt callstack 0
 16806  005A84                     _lcd_set_cursor_y:
 16807                           	opt callstack 20
 16808  005A84                     
 16809                           ;lib_ili9341.c: 168: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 169: {;lib_ili9
      +                          341.c: 170:     if( y >= 240 )
 16810  005A84  500F               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16811  005A86  E109               	bnz	u7460
 16812  005A88  0EF0               	movlw	240
 16813  005A8A  5C0E               	subwf	lcd_set_cursor_y@y^0,w,c
 16814  005A8C  A0D8               	btfss	status,0,c
 16815  005A8E  EF4B  F02D         	goto	u7461
 16816  005A92  EF4D  F02D         	goto	u7460
 16817  005A96                     u7461:
 16818  005A96  EF50  F02D         	goto	l6358
 16819  005A9A                     u7460:
 16820  005A9A                     
 16821                           ;lib_ili9341.c: 171:     {;lib_ili9341.c: 172:         return 1;
 16822  005A9A  0E01               	movlw	1
 16823  005A9C  EF65  F02D         	goto	l480
 16824  005AA0                     l6358:
 16825                           
 16826                           ;lib_ili9341.c: 175:     lcd_send(0, 0x2A);
 16827  005AA0  0E2A               	movlw	42
 16828  005AA2  6E0C               	movwf	lcd_send@value^0,c
 16829  005AA4  0E00               	movlw	0
 16830  005AA6  EC73  F030         	call	_lcd_send
 16831                           
 16832                           ;lib_ili9341.c: 176:     lcd_send(1, y >> 8);
 16833  005AAA  500F               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16834  005AAC  6E0C               	movwf	lcd_send@value^0,c
 16835  005AAE  0E01               	movlw	1
 16836  005AB0  EC73  F030         	call	_lcd_send
 16837                           
 16838                           ;lib_ili9341.c: 177:     lcd_send(1, y & 0xFF);
 16839  005AB4  C00E  F00C         	movff	lcd_set_cursor_y@y,lcd_send@value
 16840  005AB8  0E01               	movlw	1
 16841  005ABA  EC73  F030         	call	_lcd_send
 16842                           
 16843                           ;lib_ili9341.c: 178:     lcd_send(0, 0x2c);
 16844  005ABE  0E2C               	movlw	44
 16845  005AC0  6E0C               	movwf	lcd_send@value^0,c
 16846  005AC2  0E00               	movlw	0
 16847  005AC4  EC73  F030         	call	_lcd_send
 16848  005AC8                     
 16849                           ;lib_ili9341.c: 180:     return 0;
 16850  005AC8  0E00               	movlw	0
 16851  005ACA                     l480:
 16852  005ACA  0012               	return		;funcret
 16853  005ACC                     __end_of_lcd_set_cursor_y:
 16854                           	opt callstack 0
 16855                           
 16856 ;; *************** function _lcd_set_cursor_x *****************
 16857 ;; Defined at:
 16858 ;;		line 153 in file "lib_ili9341.c"
 16859 ;; Parameters:    Size  Location     Type
 16860 ;;  x               2   13[COMRAM] unsigned short 
 16861 ;; Auto vars:     Size  Location     Type
 16862 ;;		None
 16863 ;; Return value:  Size  Location     Type
 16864 ;;                  1    wreg      unsigned char 
 16865 ;; Registers used:
 16866 ;;		wreg, status,2, status,0, cstack
 16867 ;; Tracked objects:
 16868 ;;		On entry : 0/0
 16869 ;;		On exit  : 0/0
 16870 ;;		Unchanged: 0/0
 16871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16876 ;;Total ram usage:        2 bytes
 16877 ;; Hardware stack levels used:    1
 16878 ;; Hardware stack levels required when called:    7
 16879 ;; This function calls:
 16880 ;;		_lcd_send
 16881 ;; This function is called by:
 16882 ;;		_lcd_set_cursor
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           	psect	text54
 16887  005ACC                     __ptext54:
 16888                           	opt callstack 0
 16889  005ACC                     _lcd_set_cursor_x:
 16890                           	opt callstack 20
 16891  005ACC                     
 16892                           ;lib_ili9341.c: 153: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 154: {;lib_ili9
      +                          341.c: 155:     if( x >= 320 )
 16893  005ACC  0E40               	movlw	64
 16894  005ACE  5C0E               	subwf	lcd_set_cursor_x@x^0,w,c
 16895  005AD0  0E01               	movlw	1
 16896  005AD2  580F               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16897  005AD4  A0D8               	btfss	status,0,c
 16898  005AD6  EF6F  F02D         	goto	u7451
 16899  005ADA  EF71  F02D         	goto	u7450
 16900  005ADE                     u7451:
 16901  005ADE  EF74  F02D         	goto	l6346
 16902  005AE2                     u7450:
 16903  005AE2                     
 16904                           ;lib_ili9341.c: 156:     {;lib_ili9341.c: 157:         return 1;
 16905  005AE2  0E01               	movlw	1
 16906  005AE4  EF89  F02D         	goto	l476
 16907  005AE8                     l6346:
 16908                           
 16909                           ;lib_ili9341.c: 160:     lcd_send(0, 0x2B);
 16910  005AE8  0E2B               	movlw	43
 16911  005AEA  6E0C               	movwf	lcd_send@value^0,c
 16912  005AEC  0E00               	movlw	0
 16913  005AEE  EC73  F030         	call	_lcd_send
 16914                           
 16915                           ;lib_ili9341.c: 161:     lcd_send(1, x >> 8);
 16916  005AF2  500F               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16917  005AF4  6E0C               	movwf	lcd_send@value^0,c
 16918  005AF6  0E01               	movlw	1
 16919  005AF8  EC73  F030         	call	_lcd_send
 16920                           
 16921                           ;lib_ili9341.c: 162:     lcd_send(1, x & 0xFF);
 16922  005AFC  C00E  F00C         	movff	lcd_set_cursor_x@x,lcd_send@value
 16923  005B00  0E01               	movlw	1
 16924  005B02  EC73  F030         	call	_lcd_send
 16925                           
 16926                           ;lib_ili9341.c: 163:     lcd_send(0, 0x2c);
 16927  005B06  0E2C               	movlw	44
 16928  005B08  6E0C               	movwf	lcd_send@value^0,c
 16929  005B0A  0E00               	movlw	0
 16930  005B0C  EC73  F030         	call	_lcd_send
 16931  005B10                     
 16932                           ;lib_ili9341.c: 165:     return 0;
 16933  005B10  0E00               	movlw	0
 16934  005B12                     l476:
 16935  005B12  0012               	return		;funcret
 16936  005B14                     __end_of_lcd_set_cursor_x:
 16937                           	opt callstack 0
 16938                           
 16939 ;; *************** function _lcd_draw_pixel *****************
 16940 ;; Defined at:
 16941 ;;		line 183 in file "lib_ili9341.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;  color           2   13[COMRAM] unsigned short 
 16944 ;; Auto vars:     Size  Location     Type
 16945 ;;		None
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  1    wreg      unsigned char 
 16948 ;; Registers used:
 16949 ;;		wreg, status,2, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16959 ;;Total ram usage:        2 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:    7
 16962 ;; This function calls:
 16963 ;;		_lcd_send
 16964 ;; This function is called by:
 16965 ;;		_lcd_fill
 16966 ;;		_lcd_draw_pixel_at
 16967 ;;		_lcd_draw_char
 16968 ;;		_lcd_fill_rect
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           	psect	text55
 16973  006116                     __ptext55:
 16974                           	opt callstack 0
 16975  006116                     _lcd_draw_pixel:
 16976                           	opt callstack 21
 16977  006116                     
 16978                           ;lib_ili9341.c: 183: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 184: {;lib_il
      +                          i9341.c: 185:     lcd_send(1, color >> 8);
 16979  006116  500F               	movf	(lcd_draw_pixel@color+1)^0,w,c
 16980  006118  6E0C               	movwf	lcd_send@value^0,c
 16981  00611A  0E01               	movlw	1
 16982  00611C  EC73  F030         	call	_lcd_send
 16983                           
 16984                           ;lib_ili9341.c: 186:     lcd_send(1, color & 0xFF);
 16985  006120  C00E  F00C         	movff	lcd_draw_pixel@color,lcd_send@value
 16986  006124  0E01               	movlw	1
 16987  006126  EC73  F030         	call	_lcd_send
 16988  00612A  0012               	return		;funcret
 16989  00612C                     __end_of_lcd_draw_pixel:
 16990                           	opt callstack 0
 16991                           
 16992 ;; *************** function _lcd_send *****************
 16993 ;; Defined at:
 16994 ;;		line 132 in file "lib_ili9341.c"
 16995 ;; Parameters:    Size  Location     Type
 16996 ;;  dc              1    wreg     _Bool 
 16997 ;;  value           1   11[COMRAM] unsigned char 
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;  dc              1   12[COMRAM] _Bool 
 17000 ;; Return value:  Size  Location     Type
 17001 ;;                  1    wreg      void 
 17002 ;; Registers used:
 17003 ;;		wreg, status,2, cstack
 17004 ;; Tracked objects:
 17005 ;;		On entry : 0/0
 17006 ;;		On exit  : 0/0
 17007 ;;		Unchanged: 0/0
 17008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17009 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17013 ;;Total ram usage:        2 bytes
 17014 ;; Hardware stack levels used:    1
 17015 ;; Hardware stack levels required when called:    6
 17016 ;; This function calls:
 17017 ;;		_SPI_ExchangeByte
 17018 ;; This function is called by:
 17019 ;;		_lcd_init
 17020 ;;		_lcd_set_cursor_x
 17021 ;;		_lcd_set_cursor_y
 17022 ;;		_lcd_draw_pixel
 17023 ;; This function uses a non-reentrant model
 17024 ;;
 17025                           
 17026                           	psect	text56
 17027  0060E6                     __ptext56:
 17028                           	opt callstack 0
 17029  0060E6                     _lcd_send:
 17030                           	opt callstack 23
 17031                           
 17032                           ;incstack = 0
 17033                           ;lcd_send@dc stored from wreg
 17034  0060E6  6E0D               	movwf	lcd_send@dc^0,c
 17035  0060E8                     
 17036                           ;lib_ili9341.c: 132: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 133: {;lib_il
      +                          i9341.c: 134:     LATEbits.LE0 = dc;
 17037  0060E8  B00D               	btfsc	lcd_send@dc^0,0,c
 17038  0060EA  D002               	bra	u6185
 17039  0060EC  908D               	bcf	141,0,c	;volatile
 17040  0060EE  D001               	bra	u6186
 17041  0060F0                     u6185:
 17042  0060F0  808D               	bsf	141,0,c	;volatile
 17043  0060F2                     u6186:
 17044  0060F2                     
 17045                           ;lib_ili9341.c: 136:     LATEbits.LE1 = 0;
 17046  0060F2  928D               	bcf	141,1,c	;volatile
 17047  0060F4                     
 17048                           ;lib_ili9341.c: 138:     SPI_ExchangeByte(value);
 17049  0060F4  500C               	movf	lcd_send@value^0,w,c
 17050  0060F6  EC66  F030         	call	_SPI_ExchangeByte
 17051  0060FA                     
 17052                           ;lib_ili9341.c: 139:     LATEbits.LE1 = 1;
 17053  0060FA  828D               	bsf	141,1,c	;volatile
 17054  0060FC  0012               	return		;funcret
 17055  0060FE                     __end_of_lcd_send:
 17056                           	opt callstack 0
 17057                           
 17058 ;; *************** function _SPI_ExchangeByte *****************
 17059 ;; Defined at:
 17060 ;;		line 92 in file "mcc_generated_files/spi.c"
 17061 ;; Parameters:    Size  Location     Type
 17062 ;;  data            1    wreg     unsigned char 
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;  data            1   10[COMRAM] unsigned char 
 17065 ;; Return value:  Size  Location     Type
 17066 ;;                  1    wreg      unsigned char 
 17067 ;; Registers used:
 17068 ;;		wreg, status,2
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17078 ;;Total ram usage:        1 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; Hardware stack levels required when called:    5
 17081 ;; This function calls:
 17082 ;;		Nothing
 17083 ;; This function is called by:
 17084 ;;		_lcd_send
 17085 ;;		_SPI_WriteBlock
 17086 ;;		_SPI_ReadBlock
 17087 ;; This function uses a non-reentrant model
 17088 ;;
 17089                           
 17090                           	psect	text57
 17091  0060CC                     __ptext57:
 17092                           	opt callstack 0
 17093  0060CC                     _SPI_ExchangeByte:
 17094                           	opt callstack 23
 17095                           
 17096                           ;incstack = 0
 17097                           ;SPI_ExchangeByte@data stored from wreg
 17098  0060CC  6E0B               	movwf	SPI_ExchangeByte@data^0,c
 17099  0060CE                     
 17100                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 17101  0060CE  C00B  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 17102  0060D2                     l154:
 17103  0060D2  A69E               	btfss	158,3,c	;volatile
 17104  0060D4  EF6E  F030         	goto	u4911
 17105  0060D8  EF70  F030         	goto	u4910
 17106  0060DC                     u4911:
 17107  0060DC  EF69  F030         	goto	l154
 17108  0060E0                     u4910:
 17109  0060E0                     
 17110                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 17111  0060E0  969E               	bcf	158,3,c	;volatile
 17112                           
 17113                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 17114  0060E2  50C9               	movf	201,w,c	;volatile
 17115  0060E4  0012               	return		;funcret
 17116  0060E6                     __end_of_SPI_ExchangeByte:
 17117                           	opt callstack 0
 17118                           
 17119 ;; *************** function ___xxtofl *****************
 17120 ;; Defined at:
 17121 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 17122 ;; Parameters:    Size  Location     Type
 17123 ;;  sign            1    wreg     unsigned char 
 17124 ;;  val             4   10[COMRAM] long 
 17125 ;; Auto vars:     Size  Location     Type
 17126 ;;  sign            1   18[COMRAM] unsigned char 
 17127 ;;  arg             4   20[COMRAM] unsigned long 
 17128 ;;  exp             1   19[COMRAM] unsigned char 
 17129 ;; Return value:  Size  Location     Type
 17130 ;;                  4   10[COMRAM] unsigned char 
 17131 ;; Registers used:
 17132 ;;		wreg, status,2, status,0
 17133 ;; Tracked objects:
 17134 ;;		On entry : 0/0
 17135 ;;		On exit  : 0/0
 17136 ;;		Unchanged: 0/0
 17137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17139 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17140 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17141 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17142 ;;Total ram usage:       14 bytes
 17143 ;; Hardware stack levels used:    1
 17144 ;; Hardware stack levels required when called:    5
 17145 ;; This function calls:
 17146 ;;		Nothing
 17147 ;; This function is called by:
 17148 ;;		_main
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           	psect	text58
 17153  003F48                     __ptext58:
 17154                           	opt callstack 0
 17155  003F48                     ___xxtofl:
 17156                           	opt callstack 25
 17157                           
 17158                           ;incstack = 0
 17159                           ;___xxtofl@sign stored from wreg
 17160  003F48  6E13               	movwf	___xxtofl@sign^0,c
 17161  003F4A  5013               	movf	___xxtofl@sign^0,w,c
 17162  003F4C  B4D8               	btfsc	status,2,c
 17163  003F4E  EFAB  F01F         	goto	u8491
 17164  003F52  EFAD  F01F         	goto	u8490
 17165  003F56                     u8491:
 17166  003F56  EFCF  F01F         	goto	l1620
 17167  003F5A                     u8490:
 17168  003F5A  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 17169  003F5C  EFB4  F01F         	goto	u8500
 17170  003F60  EFB2  F01F         	goto	u8501
 17171  003F64                     u8501:
 17172  003F64  EFCF  F01F         	goto	l1620
 17173  003F68                     u8500:
 17174  003F68  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
 17175  003F6C  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
 17176  003F70  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
 17177  003F74  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
 17178  003F78  1E0F               	comf	??___xxtofl^0,f,c
 17179  003F7A  1E10               	comf	(??___xxtofl+1)^0,f,c
 17180  003F7C  1E11               	comf	(??___xxtofl+2)^0,f,c
 17181  003F7E  1E12               	comf	(??___xxtofl+3)^0,f,c
 17182  003F80  2A0F               	incf	??___xxtofl^0,f,c
 17183  003F82  0E00               	movlw	0
 17184  003F84  2210               	addwfc	(??___xxtofl+1)^0,f,c
 17185  003F86  2211               	addwfc	(??___xxtofl+2)^0,f,c
 17186  003F88  2212               	addwfc	(??___xxtofl+3)^0,f,c
 17187  003F8A  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
 17188  003F8E  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
 17189  003F92  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
 17190  003F96  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
 17191  003F9A  EFD7  F01F         	goto	l7312
 17192  003F9E                     l1620:
 17193  003F9E  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
 17194  003FA2  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17195  003FA6  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17196  003FAA  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17197  003FAE                     l7312:
 17198  003FAE  500B               	movf	___xxtofl@val^0,w,c
 17199  003FB0  100C               	iorwf	(___xxtofl@val+1)^0,w,c
 17200  003FB2  100D               	iorwf	(___xxtofl@val+2)^0,w,c
 17201  003FB4  100E               	iorwf	(___xxtofl@val+3)^0,w,c
 17202  003FB6  A4D8               	btfss	status,2,c
 17203  003FB8  EFE0  F01F         	goto	u8511
 17204  003FBC  EFE2  F01F         	goto	u8510
 17205  003FC0                     u8511:
 17206  003FC0  EFEC  F01F         	goto	l7318
 17207  003FC4                     u8510:
 17208  003FC4  0E00               	movlw	0
 17209  003FC6  6E0B               	movwf	?___xxtofl^0,c
 17210  003FC8  0E00               	movlw	0
 17211  003FCA  6E0C               	movwf	(?___xxtofl+1)^0,c
 17212  003FCC  0E00               	movlw	0
 17213  003FCE  6E0D               	movwf	(?___xxtofl+2)^0,c
 17214  003FD0  0E00               	movlw	0
 17215  003FD2  6E0E               	movwf	(?___xxtofl+3)^0,c
 17216  003FD4  EF7D  F020         	goto	l1623
 17217  003FD8                     l7318:
 17218  003FD8  0E96               	movlw	150
 17219  003FDA  6E14               	movwf	___xxtofl@exp^0,c
 17220  003FDC  EFF6  F01F         	goto	l7322
 17221  003FE0                     l7320:
 17222  003FE0  2A14               	incf	___xxtofl@exp^0,f,c
 17223  003FE2  90D8               	bcf	status,0,c
 17224  003FE4  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 17225  003FE6  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 17226  003FE8  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 17227  003FEA  3215               	rrcf	___xxtofl@arg^0,f,c
 17228  003FEC                     l7322:
 17229  003FEC  0E00               	movlw	0
 17230  003FEE  1415               	andwf	___xxtofl@arg^0,w,c
 17231  003FF0  6E0F               	movwf	??___xxtofl^0,c
 17232  003FF2  0E00               	movlw	0
 17233  003FF4  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 17234  003FF6  6E10               	movwf	(??___xxtofl+1)^0,c
 17235  003FF8  0E00               	movlw	0
 17236  003FFA  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 17237  003FFC  6E11               	movwf	(??___xxtofl+2)^0,c
 17238  003FFE  0EFE               	movlw	254
 17239  004000  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 17240  004002  6E12               	movwf	(??___xxtofl+3)^0,c
 17241  004004  500F               	movf	??___xxtofl^0,w,c
 17242  004006  1010               	iorwf	(??___xxtofl+1)^0,w,c
 17243  004008  1011               	iorwf	(??___xxtofl+2)^0,w,c
 17244  00400A  1012               	iorwf	(??___xxtofl+3)^0,w,c
 17245  00400C  A4D8               	btfss	status,2,c
 17246  00400E  EF0B  F020         	goto	u8521
 17247  004012  EF0D  F020         	goto	u8520
 17248  004016                     u8521:
 17249  004016  EFF0  F01F         	goto	l7320
 17250  00401A                     u8520:
 17251  00401A  EF1B  F020         	goto	l1627
 17252  00401E                     l7324:
 17253  00401E  2A14               	incf	___xxtofl@exp^0,f,c
 17254  004020  0E01               	movlw	1
 17255  004022  2615               	addwf	___xxtofl@arg^0,f,c
 17256  004024  0E00               	movlw	0
 17257  004026  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
 17258  004028  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
 17259  00402A  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
 17260  00402C  90D8               	bcf	status,0,c
 17261  00402E  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 17262  004030  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 17263  004032  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 17264  004034  3215               	rrcf	___xxtofl@arg^0,f,c
 17265  004036                     l1627:
 17266  004036  0E00               	movlw	0
 17267  004038  1415               	andwf	___xxtofl@arg^0,w,c
 17268  00403A  6E0F               	movwf	??___xxtofl^0,c
 17269  00403C  0E00               	movlw	0
 17270  00403E  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 17271  004040  6E10               	movwf	(??___xxtofl+1)^0,c
 17272  004042  0E00               	movlw	0
 17273  004044  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 17274  004046  6E11               	movwf	(??___xxtofl+2)^0,c
 17275  004048  0EFF               	movlw	255
 17276  00404A  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 17277  00404C  6E12               	movwf	(??___xxtofl+3)^0,c
 17278  00404E  500F               	movf	??___xxtofl^0,w,c
 17279  004050  1010               	iorwf	(??___xxtofl+1)^0,w,c
 17280  004052  1011               	iorwf	(??___xxtofl+2)^0,w,c
 17281  004054  1012               	iorwf	(??___xxtofl+3)^0,w,c
 17282  004056  A4D8               	btfss	status,2,c
 17283  004058  EF30  F020         	goto	u8531
 17284  00405C  EF32  F020         	goto	u8530
 17285  004060                     u8531:
 17286  004060  EF0F  F020         	goto	l7324
 17287  004064                     u8530:
 17288  004064  EF3A  F020         	goto	l7332
 17289  004068                     l7330:
 17290  004068  0614               	decf	___xxtofl@exp^0,f,c
 17291  00406A  90D8               	bcf	status,0,c
 17292  00406C  3615               	rlcf	___xxtofl@arg^0,f,c
 17293  00406E  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
 17294  004070  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
 17295  004072  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
 17296  004074                     l7332:
 17297  004074  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
 17298  004076  EF3F  F020         	goto	u8541
 17299  00407A  EF41  F020         	goto	u8540
 17300  00407E                     u8541:
 17301  00407E  EF49  F020         	goto	l1634
 17302  004082                     u8540:
 17303  004082  0E02               	movlw	2
 17304  004084  6014               	cpfslt	___xxtofl@exp^0,c
 17305  004086  EF47  F020         	goto	u8551
 17306  00408A  EF49  F020         	goto	u8550
 17307  00408E                     u8551:
 17308  00408E  EF34  F020         	goto	l7330
 17309  004092                     u8550:
 17310  004092                     l1634:
 17311  004092  B014               	btfsc	___xxtofl@exp^0,0,c
 17312  004094  EF4E  F020         	goto	u8561
 17313  004098  EF50  F020         	goto	u8560
 17314  00409C                     u8561:
 17315  00409C  EF51  F020         	goto	l7338
 17316  0040A0                     u8560:
 17317  0040A0  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
 17318  0040A2                     l7338:
 17319  0040A2  90D8               	bcf	status,0,c
 17320  0040A4  3214               	rrcf	___xxtofl@exp^0,f,c
 17321  0040A6  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
 17322  0040AA  6A10               	clrf	(??___xxtofl+1)^0,c
 17323  0040AC  6A11               	clrf	(??___xxtofl+2)^0,c
 17324  0040AE  6A12               	clrf	(??___xxtofl+3)^0,c
 17325  0040B0  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
 17326  0040B4  6A11               	clrf	(??___xxtofl+2)^0,c
 17327  0040B6  6A10               	clrf	(??___xxtofl+1)^0,c
 17328  0040B8  6A0F               	clrf	??___xxtofl^0,c
 17329  0040BA  500F               	movf	??___xxtofl^0,w,c
 17330  0040BC  1215               	iorwf	___xxtofl@arg^0,f,c
 17331  0040BE  5010               	movf	(??___xxtofl+1)^0,w,c
 17332  0040C0  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
 17333  0040C2  5011               	movf	(??___xxtofl+2)^0,w,c
 17334  0040C4  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
 17335  0040C6  5012               	movf	(??___xxtofl+3)^0,w,c
 17336  0040C8  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
 17337  0040CA  5013               	movf	___xxtofl@sign^0,w,c
 17338  0040CC  B4D8               	btfsc	status,2,c
 17339  0040CE  EF6B  F020         	goto	u8571
 17340  0040D2  EF6D  F020         	goto	u8570
 17341  0040D6                     u8571:
 17342  0040D6  EF75  F020         	goto	l7348
 17343  0040DA                     u8570:
 17344  0040DA  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 17345  0040DC  EF74  F020         	goto	u8580
 17346  0040E0  EF72  F020         	goto	u8581
 17347  0040E4                     u8581:
 17348  0040E4  EF75  F020         	goto	l7348
 17349  0040E8                     u8580:
 17350  0040E8  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
 17351  0040EA                     l7348:
 17352  0040EA  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
 17353  0040EE  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
 17354  0040F2  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
 17355  0040F6  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
 17356  0040FA                     l1623:
 17357  0040FA  0012               	return		;funcret
 17358  0040FC                     __end_of___xxtofl:
 17359                           	opt callstack 0
 17360                           
 17361 ;; *************** function ___aldiv *****************
 17362 ;; Defined at:
 17363 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;  dividend        4   10[COMRAM] long 
 17366 ;;  divisor         4   14[COMRAM] long 
 17367 ;; Auto vars:     Size  Location     Type
 17368 ;;  quotient        4   20[COMRAM] long 
 17369 ;;  sign            1   19[COMRAM] unsigned char 
 17370 ;;  counter         1   18[COMRAM] unsigned char 
 17371 ;; Return value:  Size  Location     Type
 17372 ;;                  4   10[COMRAM] long 
 17373 ;; Registers used:
 17374 ;;		wreg, status,2, status,0
 17375 ;; Tracked objects:
 17376 ;;		On entry : 0/0
 17377 ;;		On exit  : 0/0
 17378 ;;		Unchanged: 0/0
 17379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17380 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17381 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17383 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17384 ;;Total ram usage:       14 bytes
 17385 ;; Hardware stack levels used:    1
 17386 ;; Hardware stack levels required when called:    5
 17387 ;; This function calls:
 17388 ;;		Nothing
 17389 ;; This function is called by:
 17390 ;;		_main
 17391 ;; This function uses a non-reentrant model
 17392 ;;
 17393                           
 17394                           	psect	text59
 17395  004D4E                     __ptext59:
 17396                           	opt callstack 0
 17397  004D4E                     ___aldiv:
 17398                           	opt callstack 25
 17399  004D4E  0E00               	movlw	0
 17400  004D50  6E14               	movwf	___aldiv@sign^0,c
 17401  004D52  BE12               	btfsc	(___aldiv@divisor+3)^0,7,c
 17402  004D54  EFB0  F026         	goto	u8430
 17403  004D58  EFAE  F026         	goto	u8431
 17404  004D5C                     u8431:
 17405  004D5C  EFBA  F026         	goto	l7270
 17406  004D60                     u8430:
 17407  004D60  1E12               	comf	(___aldiv@divisor+3)^0,f,c
 17408  004D62  1E11               	comf	(___aldiv@divisor+2)^0,f,c
 17409  004D64  1E10               	comf	(___aldiv@divisor+1)^0,f,c
 17410  004D66  6C0F               	negf	___aldiv@divisor^0,c
 17411  004D68  0E00               	movlw	0
 17412  004D6A  2210               	addwfc	(___aldiv@divisor+1)^0,f,c
 17413  004D6C  2211               	addwfc	(___aldiv@divisor+2)^0,f,c
 17414  004D6E  2212               	addwfc	(___aldiv@divisor+3)^0,f,c
 17415  004D70  0E01               	movlw	1
 17416  004D72  6E14               	movwf	___aldiv@sign^0,c
 17417  004D74                     l7270:
 17418  004D74  BE0E               	btfsc	(___aldiv@dividend+3)^0,7,c
 17419  004D76  EFC1  F026         	goto	u8440
 17420  004D7A  EFBF  F026         	goto	u8441
 17421  004D7E                     u8441:
 17422  004D7E  EFCB  F026         	goto	l7276
 17423  004D82                     u8440:
 17424  004D82  1E0E               	comf	(___aldiv@dividend+3)^0,f,c
 17425  004D84  1E0D               	comf	(___aldiv@dividend+2)^0,f,c
 17426  004D86  1E0C               	comf	(___aldiv@dividend+1)^0,f,c
 17427  004D88  6C0B               	negf	___aldiv@dividend^0,c
 17428  004D8A  0E00               	movlw	0
 17429  004D8C  220C               	addwfc	(___aldiv@dividend+1)^0,f,c
 17430  004D8E  220D               	addwfc	(___aldiv@dividend+2)^0,f,c
 17431  004D90  220E               	addwfc	(___aldiv@dividend+3)^0,f,c
 17432  004D92  0E01               	movlw	1
 17433  004D94  1A14               	xorwf	___aldiv@sign^0,f,c
 17434  004D96                     l7276:
 17435  004D96  0E00               	movlw	0
 17436  004D98  6E15               	movwf	___aldiv@quotient^0,c
 17437  004D9A  0E00               	movlw	0
 17438  004D9C  6E16               	movwf	(___aldiv@quotient+1)^0,c
 17439  004D9E  0E00               	movlw	0
 17440  004DA0  6E17               	movwf	(___aldiv@quotient+2)^0,c
 17441  004DA2  0E00               	movlw	0
 17442  004DA4  6E18               	movwf	(___aldiv@quotient+3)^0,c
 17443  004DA6  500F               	movf	___aldiv@divisor^0,w,c
 17444  004DA8  1010               	iorwf	(___aldiv@divisor+1)^0,w,c
 17445  004DAA  1011               	iorwf	(___aldiv@divisor+2)^0,w,c
 17446  004DAC  1012               	iorwf	(___aldiv@divisor+3)^0,w,c
 17447  004DAE  B4D8               	btfsc	status,2,c
 17448  004DB0  EFDC  F026         	goto	u8451
 17449  004DB4  EFDE  F026         	goto	u8450
 17450  004DB8                     u8451:
 17451  004DB8  EF14  F027         	goto	l7298
 17452  004DBC                     u8450:
 17453  004DBC  0E01               	movlw	1
 17454  004DBE  6E13               	movwf	___aldiv@counter^0,c
 17455  004DC0  EFE8  F026         	goto	l7284
 17456  004DC4                     l7282:
 17457  004DC4  90D8               	bcf	status,0,c
 17458  004DC6  360F               	rlcf	___aldiv@divisor^0,f,c
 17459  004DC8  3610               	rlcf	(___aldiv@divisor+1)^0,f,c
 17460  004DCA  3611               	rlcf	(___aldiv@divisor+2)^0,f,c
 17461  004DCC  3612               	rlcf	(___aldiv@divisor+3)^0,f,c
 17462  004DCE  2A13               	incf	___aldiv@counter^0,f,c
 17463  004DD0                     l7284:
 17464  004DD0  AE12               	btfss	(___aldiv@divisor+3)^0,7,c
 17465  004DD2  EFED  F026         	goto	u8461
 17466  004DD6  EFEF  F026         	goto	u8460
 17467  004DDA                     u8461:
 17468  004DDA  EFE2  F026         	goto	l7282
 17469  004DDE                     u8460:
 17470  004DDE                     l7286:
 17471  004DDE  90D8               	bcf	status,0,c
 17472  004DE0  3615               	rlcf	___aldiv@quotient^0,f,c
 17473  004DE2  3616               	rlcf	(___aldiv@quotient+1)^0,f,c
 17474  004DE4  3617               	rlcf	(___aldiv@quotient+2)^0,f,c
 17475  004DE6  3618               	rlcf	(___aldiv@quotient+3)^0,f,c
 17476  004DE8  500F               	movf	___aldiv@divisor^0,w,c
 17477  004DEA  5C0B               	subwf	___aldiv@dividend^0,w,c
 17478  004DEC  5010               	movf	(___aldiv@divisor+1)^0,w,c
 17479  004DEE  580C               	subwfb	(___aldiv@dividend+1)^0,w,c
 17480  004DF0  5011               	movf	(___aldiv@divisor+2)^0,w,c
 17481  004DF2  580D               	subwfb	(___aldiv@dividend+2)^0,w,c
 17482  004DF4  5012               	movf	(___aldiv@divisor+3)^0,w,c
 17483  004DF6  580E               	subwfb	(___aldiv@dividend+3)^0,w,c
 17484  004DF8  A0D8               	btfss	status,0,c
 17485  004DFA  EF01  F027         	goto	u8471
 17486  004DFE  EF03  F027         	goto	u8470
 17487  004E02                     u8471:
 17488  004E02  EF0C  F027         	goto	l7294
 17489  004E06                     u8470:
 17490  004E06  500F               	movf	___aldiv@divisor^0,w,c
 17491  004E08  5E0B               	subwf	___aldiv@dividend^0,f,c
 17492  004E0A  5010               	movf	(___aldiv@divisor+1)^0,w,c
 17493  004E0C  5A0C               	subwfb	(___aldiv@dividend+1)^0,f,c
 17494  004E0E  5011               	movf	(___aldiv@divisor+2)^0,w,c
 17495  004E10  5A0D               	subwfb	(___aldiv@dividend+2)^0,f,c
 17496  004E12  5012               	movf	(___aldiv@divisor+3)^0,w,c
 17497  004E14  5A0E               	subwfb	(___aldiv@dividend+3)^0,f,c
 17498  004E16  8015               	bsf	___aldiv@quotient^0,0,c
 17499  004E18                     l7294:
 17500  004E18  90D8               	bcf	status,0,c
 17501  004E1A  3212               	rrcf	(___aldiv@divisor+3)^0,f,c
 17502  004E1C  3211               	rrcf	(___aldiv@divisor+2)^0,f,c
 17503  004E1E  3210               	rrcf	(___aldiv@divisor+1)^0,f,c
 17504  004E20  320F               	rrcf	___aldiv@divisor^0,f,c
 17505  004E22  2E13               	decfsz	___aldiv@counter^0,f,c
 17506  004E24  EFEF  F026         	goto	l7286
 17507  004E28                     l7298:
 17508  004E28  5014               	movf	___aldiv@sign^0,w,c
 17509  004E2A  B4D8               	btfsc	status,2,c
 17510  004E2C  EF1A  F027         	goto	u8481
 17511  004E30  EF1C  F027         	goto	u8480
 17512  004E34                     u8481:
 17513  004E34  EF24  F027         	goto	l7302
 17514  004E38                     u8480:
 17515  004E38  1E18               	comf	(___aldiv@quotient+3)^0,f,c
 17516  004E3A  1E17               	comf	(___aldiv@quotient+2)^0,f,c
 17517  004E3C  1E16               	comf	(___aldiv@quotient+1)^0,f,c
 17518  004E3E  6C15               	negf	___aldiv@quotient^0,c
 17519  004E40  0E00               	movlw	0
 17520  004E42  2216               	addwfc	(___aldiv@quotient+1)^0,f,c
 17521  004E44  2217               	addwfc	(___aldiv@quotient+2)^0,f,c
 17522  004E46  2218               	addwfc	(___aldiv@quotient+3)^0,f,c
 17523  004E48                     l7302:
 17524  004E48  C015  F00B         	movff	___aldiv@quotient,?___aldiv
 17525  004E4C  C016  F00C         	movff	___aldiv@quotient+1,?___aldiv+1
 17526  004E50  C017  F00D         	movff	___aldiv@quotient+2,?___aldiv+2
 17527  004E54  C018  F00E         	movff	___aldiv@quotient+3,?___aldiv+3
 17528  004E58  0012               	return		;funcret
 17529  004E5A                     __end_of___aldiv:
 17530                           	opt callstack 0
 17531                           
 17532 ;; *************** function _SYSTEM_Initialize *****************
 17533 ;; Defined at:
 17534 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17535 ;; Parameters:    Size  Location     Type
 17536 ;;		None
 17537 ;; Auto vars:     Size  Location     Type
 17538 ;;		None
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  1    wreg      void 
 17541 ;; Registers used:
 17542 ;;		wreg, status,2, status,0, cstack
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/0
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;Total ram usage:        0 bytes
 17553 ;; Hardware stack levels used:    1
 17554 ;; Hardware stack levels required when called:    7
 17555 ;; This function calls:
 17556 ;;		_ADC_Initialize
 17557 ;;		_EXT_INT_Initialize
 17558 ;;		_INTERRUPT_Initialize
 17559 ;;		_OSCILLATOR_Initialize
 17560 ;;		_PIN_MANAGER_Initialize
 17561 ;;		_SPI_Initialize
 17562 ;;		_TMR0_Initialize
 17563 ;;		_TMR1_Initialize
 17564 ;;		_TMR2_Initialize
 17565 ;; This function is called by:
 17566 ;;		_main
 17567 ;; This function uses a non-reentrant model
 17568 ;;
 17569                           
 17570                           	psect	text60
 17571  006024                     __ptext60:
 17572                           	opt callstack 0
 17573  006024                     _SYSTEM_Initialize:
 17574                           	opt callstack 23
 17575  006024                     
 17576                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 17577  006024  ECD9  F030         	call	_INTERRUPT_Initialize	;wreg free
 17578  006028                     
 17579                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 17580  006028  ECA0  F030         	call	_SPI_Initialize	;wreg free
 17581  00602C                     
 17582                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17583  00602C  ECAD  F02D         	call	_PIN_MANAGER_Initialize	;wreg free
 17584  006030                     
 17585                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17586  006030  ECA9  F030         	call	_OSCILLATOR_Initialize	;wreg free
 17587  006034                     
 17588                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 17589  006034  EC25  F030         	call	_ADC_Initialize	;wreg free
 17590  006038                     
 17591                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 17592  006038  EC48  F030         	call	_TMR2_Initialize	;wreg free
 17593  00603C                     
 17594                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 17595  00603C  EC96  F030         	call	_EXT_INT_Initialize	;wreg free
 17596  006040                     
 17597                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 17598  006040  ECBF  F02F         	call	_TMR1_Initialize	;wreg free
 17599  006044                     
 17600                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 17601  006044  ECD5  F02F         	call	_TMR0_Initialize	;wreg free
 17602  006048  0012               	return		;funcret
 17603  00604A                     __end_of_SYSTEM_Initialize:
 17604                           	opt callstack 0
 17605                           
 17606 ;; *************** function _TMR2_Initialize *****************
 17607 ;; Defined at:
 17608 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;		None
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;		None
 17613 ;; Return value:  Size  Location     Type
 17614 ;;                  1    wreg      void 
 17615 ;; Registers used:
 17616 ;;		wreg, status,2, status,0, cstack
 17617 ;; Tracked objects:
 17618 ;;		On entry : 0/0
 17619 ;;		On exit  : 0/0
 17620 ;;		Unchanged: 0/0
 17621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;Total ram usage:        0 bytes
 17627 ;; Hardware stack levels used:    1
 17628 ;; Hardware stack levels required when called:    6
 17629 ;; This function calls:
 17630 ;;		_TMR2_SetInterruptHandler
 17631 ;; This function is called by:
 17632 ;;		_SYSTEM_Initialize
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           	psect	text61
 17637  006090                     __ptext61:
 17638                           	opt callstack 0
 17639  006090                     _TMR2_Initialize:
 17640                           	opt callstack 23
 17641  006090                     
 17642                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
 17643  006090  0EF9               	movlw	249
 17644  006092  6ECB               	movwf	203,c	;volatile
 17645                           
 17646                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 17647  006094  0E00               	movlw	0
 17648  006096  6ECC               	movwf	204,c	;volatile
 17649  006098                     
 17650                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 17651  006098  929E               	bcf	158,1,c	;volatile
 17652  00609A                     
 17653                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 17654  00609A  829D               	bsf	157,1,c	;volatile
 17655  00609C                     
 17656                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 17657  00609C  0EC0               	movlw	low _TMR2_DefaultInterruptHandler
 17658  00609E  6E0B               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 17659  0060A0  0E61               	movlw	high _TMR2_DefaultInterruptHandler
 17660  0060A2  6E0C               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 17661  0060A4  ECB8  F030         	call	_TMR2_SetInterruptHandler	;wreg free
 17662  0060A8                     
 17663                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x0D;
 17664  0060A8  0E0D               	movlw	13
 17665  0060AA  6ECA               	movwf	202,c	;volatile
 17666  0060AC  0012               	return		;funcret
 17667  0060AE                     __end_of_TMR2_Initialize:
 17668                           	opt callstack 0
 17669                           
 17670 ;; *************** function _TMR2_SetInterruptHandler *****************
 17671 ;; Defined at:
 17672 ;;		line 147 in file "mcc_generated_files/tmr2.c"
 17673 ;; Parameters:    Size  Location     Type
 17674 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
 17675 ;;		 -> led_inter(1), TMR2_DefaultInterruptHandler(1), 
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;		None
 17678 ;; Return value:  Size  Location     Type
 17679 ;;                  1    wreg      void 
 17680 ;; Registers used:
 17681 ;;		wreg, status,2, status,0
 17682 ;; Tracked objects:
 17683 ;;		On entry : 0/0
 17684 ;;		On exit  : 0/0
 17685 ;;		Unchanged: 0/0
 17686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17691 ;;Total ram usage:        2 bytes
 17692 ;; Hardware stack levels used:    1
 17693 ;; Hardware stack levels required when called:    5
 17694 ;; This function calls:
 17695 ;;		Nothing
 17696 ;; This function is called by:
 17697 ;;		_TMR2_Initialize
 17698 ;;		_main
 17699 ;; This function uses a non-reentrant model
 17700 ;;
 17701                           
 17702                           	psect	text62
 17703  006170                     __ptext62:
 17704                           	opt callstack 0
 17705  006170                     _TMR2_SetInterruptHandler:
 17706                           	opt callstack 25
 17707  006170                     
 17708                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
 17709  006170  C00B  F1C8         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 17710  006174  C00C  F1C9         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 17711  006178  0012               	return		;funcret
 17712  00617A                     __end_of_TMR2_SetInterruptHandler:
 17713                           	opt callstack 0
 17714                           
 17715 ;; *************** function _TMR1_Initialize *****************
 17716 ;; Defined at:
 17717 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17718 ;; Parameters:    Size  Location     Type
 17719 ;;		None
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;		None
 17722 ;; Return value:  Size  Location     Type
 17723 ;;                  1    wreg      void 
 17724 ;; Registers used:
 17725 ;;		wreg, status,2, status,0
 17726 ;; Tracked objects:
 17727 ;;		On entry : 0/0
 17728 ;;		On exit  : 0/0
 17729 ;;		Unchanged: 0/0
 17730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17735 ;;Total ram usage:        2 bytes
 17736 ;; Hardware stack levels used:    1
 17737 ;; Hardware stack levels required when called:    5
 17738 ;; This function calls:
 17739 ;;		Nothing
 17740 ;; This function is called by:
 17741 ;;		_SYSTEM_Initialize
 17742 ;; This function uses a non-reentrant model
 17743 ;;
 17744                           
 17745                           	psect	text63
 17746  005F7E                     __ptext63:
 17747                           	opt callstack 0
 17748  005F7E                     _TMR1_Initialize:
 17749                           	opt callstack 24
 17750  005F7E                     
 17751                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17752  005F7E  0E00               	movlw	0
 17753  005F80  6EAA               	movwf	170,c	;volatile
 17754                           
 17755                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
 17756  005F82  0E00               	movlw	0
 17757  005F84  6ECF               	movwf	207,c	;volatile
 17758                           
 17759                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
 17760  005F86  0E00               	movlw	0
 17761  005F88  6ECE               	movwf	206,c	;volatile
 17762  005F8A                     
 17763                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 17764  005F8A  909E               	bcf	158,0,c	;volatile
 17765  005F8C                     
 17766                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17767  005F8C  50CE               	movf	206,w,c	;volatile
 17768  005F8E  CFCF F00B          	movff	4047,??_TMR1_Initialize	;volatile
 17769  005F92  6A0C               	clrf	(??_TMR1_Initialize+1)^0,c
 17770  005F94  C00B  F00C         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17771  005F98  6A0B               	clrf	??_TMR1_Initialize^0,c
 17772  005F9A  100B               	iorwf	??_TMR1_Initialize^0,w,c
 17773  005F9C  0101               	movlb	1	; () banked
 17774  005F9E  6FC6               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17775  005FA0  500C               	movf	(??_TMR1_Initialize+1)^0,w,c
 17776  005FA2  6FC7               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17777  005FA4                     
 17778                           ; BSR set to: 1
 17779                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
 17780  005FA4  0E01               	movlw	1
 17781  005FA6  6ECD               	movwf	205,c	;volatile
 17782  005FA8                     
 17783                           ; BSR set to: 1
 17784  005FA8  0012               	return		;funcret
 17785  005FAA                     __end_of_TMR1_Initialize:
 17786                           	opt callstack 0
 17787                           
 17788 ;; *************** function _TMR0_Initialize *****************
 17789 ;; Defined at:
 17790 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;		None
 17793 ;; Auto vars:     Size  Location     Type
 17794 ;;		None
 17795 ;; Return value:  Size  Location     Type
 17796 ;;                  1    wreg      void 
 17797 ;; Registers used:
 17798 ;;		wreg, status,2, status,0
 17799 ;; Tracked objects:
 17800 ;;		On entry : 0/0
 17801 ;;		On exit  : 0/0
 17802 ;;		Unchanged: 0/0
 17803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17808 ;;Total ram usage:        2 bytes
 17809 ;; Hardware stack levels used:    1
 17810 ;; Hardware stack levels required when called:    5
 17811 ;; This function calls:
 17812 ;;		Nothing
 17813 ;; This function is called by:
 17814 ;;		_SYSTEM_Initialize
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818                           	psect	text64
 17819  005FAA                     __ptext64:
 17820                           	opt callstack 0
 17821  005FAA                     _TMR0_Initialize:
 17822                           	opt callstack 24
 17823  005FAA                     
 17824                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 17825  005FAA  9CD5               	bcf	213,6,c	;volatile
 17826  005FAC                     
 17827                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x0B;
 17828  005FAC  0E0B               	movlw	11
 17829  005FAE  6ED7               	movwf	215,c	;volatile
 17830                           
 17831                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xDB;
 17832  005FB0  0EDB               	movlw	219
 17833  005FB2  6ED6               	movwf	214,c	;volatile
 17834  005FB4                     
 17835                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 17836  005FB4  50D6               	movf	214,w,c	;volatile
 17837  005FB6  CFD7 F00B          	movff	4055,??_TMR0_Initialize	;volatile
 17838  005FBA  6A0C               	clrf	(??_TMR0_Initialize+1)^0,c
 17839  005FBC  C00B  F00C         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 17840  005FC0  6A0B               	clrf	??_TMR0_Initialize^0,c
 17841  005FC2  100B               	iorwf	??_TMR0_Initialize^0,w,c
 17842  005FC4  0100               	movlb	0	; () banked
 17843  005FC6  6FFA               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 17844  005FC8  500C               	movf	(??_TMR0_Initialize+1)^0,w,c
 17845  005FCA  6FFB               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 17846  005FCC                     
 17847                           ; BSR set to: 0
 17848                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 17849  005FCC  94F2               	bcf	242,2,c	;volatile
 17850  005FCE                     
 17851                           ; BSR set to: 0
 17852                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x97;
 17853  005FCE  0E97               	movlw	151
 17854  005FD0  6ED5               	movwf	213,c	;volatile
 17855  005FD2                     
 17856                           ; BSR set to: 0
 17857  005FD2  0012               	return		;funcret
 17858  005FD4                     __end_of_TMR0_Initialize:
 17859                           	opt callstack 0
 17860                           
 17861 ;; *************** function _SPI_Initialize *****************
 17862 ;; Defined at:
 17863 ;;		line 62 in file "mcc_generated_files/spi.c"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;		None
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      void 
 17870 ;; Registers used:
 17871 ;;		wreg, status,2
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17881 ;;Total ram usage:        0 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    5
 17884 ;; This function calls:
 17885 ;;		Nothing
 17886 ;; This function is called by:
 17887 ;;		_SYSTEM_Initialize
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           	psect	text65
 17892  006140                     __ptext65:
 17893                           	opt callstack 0
 17894  006140                     _SPI_Initialize:
 17895                           	opt callstack 24
 17896  006140                     
 17897                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 17898  006140  0E40               	movlw	64
 17899  006142  6EC7               	movwf	199,c	;volatile
 17900                           
 17901                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 17902  006144  0E00               	movlw	0
 17903  006146  6EC6               	movwf	198,c	;volatile
 17904                           
 17905                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 17906  006148  0E01               	movlw	1
 17907  00614A  6EC8               	movwf	200,c	;volatile
 17908  00614C                     
 17909                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 17910  00614C  9694               	bcf	148,3,c	;volatile
 17911  00614E                     
 17912                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 17913  00614E  9AC6               	bcf	198,5,c	;volatile
 17914  006150  0012               	return		;funcret
 17915  006152                     __end_of_SPI_Initialize:
 17916                           	opt callstack 0
 17917                           
 17918 ;; *************** function _PIN_MANAGER_Initialize *****************
 17919 ;; Defined at:
 17920 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17921 ;; Parameters:    Size  Location     Type
 17922 ;;		None
 17923 ;; Auto vars:     Size  Location     Type
 17924 ;;		None
 17925 ;; Return value:  Size  Location     Type
 17926 ;;                  1    wreg      void 
 17927 ;; Registers used:
 17928 ;;		wreg, status,2, status,0, cstack
 17929 ;; Tracked objects:
 17930 ;;		On entry : 0/0
 17931 ;;		On exit  : 0/0
 17932 ;;		Unchanged: 0/0
 17933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17938 ;;Total ram usage:        0 bytes
 17939 ;; Hardware stack levels used:    1
 17940 ;; Hardware stack levels required when called:    6
 17941 ;; This function calls:
 17942 ;;		_IOCB4_SetInterruptHandler
 17943 ;; This function is called by:
 17944 ;;		_SYSTEM_Initialize
 17945 ;; This function uses a non-reentrant model
 17946 ;;
 17947                           
 17948                           	psect	text66
 17949  005B5A                     __ptext66:
 17950                           	opt callstack 0
 17951  005B5A                     _PIN_MANAGER_Initialize:
 17952                           	opt callstack 23
 17953  005B5A                     
 17954                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 17955  005B5A  0E00               	movlw	0
 17956  005B5C  6E8D               	movwf	141,c	;volatile
 17957                           
 17958                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17959  005B5E  0E00               	movlw	0
 17960  005B60  6E8C               	movwf	140,c	;volatile
 17961                           
 17962                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17963  005B62  0E00               	movlw	0
 17964  005B64  6E89               	movwf	137,c	;volatile
 17965                           
 17966                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 17967  005B66  0E00               	movlw	0
 17968  005B68  6E8A               	movwf	138,c	;volatile
 17969                           
 17970                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 17971  005B6A  0E00               	movlw	0
 17972  005B6C  6E8B               	movwf	139,c	;volatile
 17973                           
 17974                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 17975  005B6E  0E04               	movlw	4
 17976  005B70  6E96               	movwf	150,c	;volatile
 17977                           
 17978                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x8F;
 17979  005B72  0E8F               	movlw	143
 17980  005B74  6E92               	movwf	146,c	;volatile
 17981  005B76                     
 17982                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 17983  005B76  6893               	setf	147,c	;volatile
 17984                           
 17985                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 17986  005B78  0ED7               	movlw	215
 17987  005B7A  6E94               	movwf	148,c	;volatile
 17988  005B7C                     
 17989                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 17990  005B7C  6895               	setf	149,c	;volatile
 17991                           
 17992                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x8F;
 17993  005B7E  0E8F               	movlw	143
 17994  005B80  010F               	movlb	15	; () banked
 17995  005B82  6F5D               	movwf	93,b	;volatile
 17996                           
 17997                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
 17998  005B84  0E79               	movlw	121
 17999  005B86  6F5C               	movwf	92,b	;volatile
 18000                           
 18001                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 18002  005B88  0E00               	movlw	0
 18003  005B8A  6F5B               	movwf	91,b	;volatile
 18004  005B8C                     
 18005                           ; BSR set to: 15
 18006                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 18007  005B8C  8EF1               	bsf	241,7,c	;volatile
 18008  005B8E                     
 18009                           ; BSR set to: 15
 18010                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 18011  005B8E  895A               	bsf	90,4,b	;volatile
 18012  005B90                     
 18013                           ; BSR set to: 15
 18014                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 18015  005B90  0EC2               	movlw	low _IOCB4_DefaultInterruptHandler
 18016  005B92  6E0B               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 18017  005B94  0E61               	movlw	high _IOCB4_DefaultInterruptHandler
 18018  005B96  6E0C               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 18019  005B98  ECBD  F030         	call	_IOCB4_SetInterruptHandler	;wreg free
 18020  005B9C                     
 18021                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 18022  005B9C  86F2               	bsf	242,3,c	;volatile
 18023  005B9E  0012               	return		;funcret
 18024  005BA0                     __end_of_PIN_MANAGER_Initialize:
 18025                           	opt callstack 0
 18026                           
 18027 ;; *************** function _IOCB4_SetInterruptHandler *****************
 18028 ;; Defined at:
 18029 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 18030 ;; Parameters:    Size  Location     Type
 18031 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
 18032 ;;		 -> acende_led(1), IOCB4_DefaultInterruptHandler(1), 
 18033 ;; Auto vars:     Size  Location     Type
 18034 ;;		None
 18035 ;; Return value:  Size  Location     Type
 18036 ;;                  1    wreg      void 
 18037 ;; Registers used:
 18038 ;;		wreg, status,2, status,0
 18039 ;; Tracked objects:
 18040 ;;		On entry : 0/0
 18041 ;;		On exit  : 0/0
 18042 ;;		Unchanged: 0/0
 18043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18047 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18048 ;;Total ram usage:        2 bytes
 18049 ;; Hardware stack levels used:    1
 18050 ;; Hardware stack levels required when called:    5
 18051 ;; This function calls:
 18052 ;;		Nothing
 18053 ;; This function is called by:
 18054 ;;		_PIN_MANAGER_Initialize
 18055 ;;		_main
 18056 ;; This function uses a non-reentrant model
 18057 ;;
 18058                           
 18059                           	psect	text67
 18060  00617A                     __ptext67:
 18061                           	opt callstack 0
 18062  00617A                     _IOCB4_SetInterruptHandler:
 18063                           	opt callstack 23
 18064  00617A                     
 18065                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 18066  00617A  C00B  F0FC         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 18067  00617E  C00C  F0FD         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 18068  006182  0012               	return		;funcret
 18069  006184                     __end_of_IOCB4_SetInterruptHandler:
 18070                           	opt callstack 0
 18071                           
 18072 ;; *************** function _OSCILLATOR_Initialize *****************
 18073 ;; Defined at:
 18074 ;;		line 64 in file "mcc_generated_files/mcc.c"
 18075 ;; Parameters:    Size  Location     Type
 18076 ;;		None
 18077 ;; Auto vars:     Size  Location     Type
 18078 ;;		None
 18079 ;; Return value:  Size  Location     Type
 18080 ;;                  1    wreg      void 
 18081 ;; Registers used:
 18082 ;;		wreg, status,2
 18083 ;; Tracked objects:
 18084 ;;		On entry : 0/0
 18085 ;;		On exit  : 0/0
 18086 ;;		Unchanged: 0/0
 18087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18092 ;;Total ram usage:        0 bytes
 18093 ;; Hardware stack levels used:    1
 18094 ;; Hardware stack levels required when called:    5
 18095 ;; This function calls:
 18096 ;;		Nothing
 18097 ;; This function is called by:
 18098 ;;		_SYSTEM_Initialize
 18099 ;; This function uses a non-reentrant model
 18100 ;;
 18101                           
 18102                           	psect	text68
 18103  006152                     __ptext68:
 18104                           	opt callstack 0
 18105  006152                     _OSCILLATOR_Initialize:
 18106                           	opt callstack 24
 18107  006152                     
 18108                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x62;
 18109  006152  0E62               	movlw	98
 18110  006154  6ED3               	movwf	211,c	;volatile
 18111                           
 18112                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
 18113  006156  0E00               	movlw	0
 18114  006158  6ED2               	movwf	210,c	;volatile
 18115                           
 18116                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 18117  00615A  0E00               	movlw	0
 18118  00615C  6E9B               	movwf	155,c	;volatile
 18119                           
 18120                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
 18121  00615E  0E00               	movlw	0
 18122  006160  6E9A               	movwf	154,c	;volatile
 18123  006162  0012               	return		;funcret
 18124  006164                     __end_of_OSCILLATOR_Initialize:
 18125                           	opt callstack 0
 18126                           
 18127 ;; *************** function _INTERRUPT_Initialize *****************
 18128 ;; Defined at:
 18129 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18130 ;; Parameters:    Size  Location     Type
 18131 ;;		None
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;		None
 18134 ;; Return value:  Size  Location     Type
 18135 ;;                  1    wreg      void 
 18136 ;; Registers used:
 18137 ;;		None
 18138 ;; Tracked objects:
 18139 ;;		On entry : 0/0
 18140 ;;		On exit  : 0/0
 18141 ;;		Unchanged: 0/0
 18142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18147 ;;Total ram usage:        0 bytes
 18148 ;; Hardware stack levels used:    1
 18149 ;; Hardware stack levels required when called:    5
 18150 ;; This function calls:
 18151 ;;		Nothing
 18152 ;; This function is called by:
 18153 ;;		_SYSTEM_Initialize
 18154 ;; This function uses a non-reentrant model
 18155 ;;
 18156                           
 18157                           	psect	text69
 18158  0061B2                     __ptext69:
 18159                           	opt callstack 0
 18160  0061B2                     _INTERRUPT_Initialize:
 18161                           	opt callstack 24
 18162  0061B2                     
 18163                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 18164  0061B2  9ED0               	bcf	208,7,c	;volatile
 18165  0061B4  0012               	return		;funcret
 18166  0061B6                     __end_of_INTERRUPT_Initialize:
 18167                           	opt callstack 0
 18168                           
 18169 ;; *************** function _EXT_INT_Initialize *****************
 18170 ;; Defined at:
 18171 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18172 ;; Parameters:    Size  Location     Type
 18173 ;;		None
 18174 ;; Auto vars:     Size  Location     Type
 18175 ;;		None
 18176 ;; Return value:  Size  Location     Type
 18177 ;;                  1    wreg      void 
 18178 ;; Registers used:
 18179 ;;		wreg, status,2, status,0, cstack
 18180 ;; Tracked objects:
 18181 ;;		On entry : 0/0
 18182 ;;		On exit  : 0/0
 18183 ;;		Unchanged: 0/0
 18184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18189 ;;Total ram usage:        0 bytes
 18190 ;; Hardware stack levels used:    1
 18191 ;; Hardware stack levels required when called:    6
 18192 ;; This function calls:
 18193 ;;		_INT0_SetInterruptHandler
 18194 ;; This function is called by:
 18195 ;;		_SYSTEM_Initialize
 18196 ;; This function uses a non-reentrant model
 18197 ;;
 18198                           
 18199                           	psect	text70
 18200  00612C                     __ptext70:
 18201                           	opt callstack 0
 18202  00612C                     _EXT_INT_Initialize:
 18203                           	opt callstack 23
 18204  00612C                     
 18205                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
 18206  00612C  92F2               	bcf	242,1,c	;volatile
 18207                           
 18208                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 1);
 18209  00612E  8CF1               	bsf	241,6,c	;volatile
 18210  006130                     
 18211                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
 18212  006130  0EC4               	movlw	low _INT0_DefaultInterruptHandler
 18213  006132  6E0B               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
 18214  006134  0E61               	movlw	high _INT0_DefaultInterruptHandler
 18215  006136  6E0C               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
 18216  006138  ECC2  F030         	call	_INT0_SetInterruptHandler	;wreg free
 18217  00613C                     
 18218                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
 18219  00613C  88F2               	bsf	242,4,c	;volatile
 18220  00613E  0012               	return		;funcret
 18221  006140                     __end_of_EXT_INT_Initialize:
 18222                           	opt callstack 0
 18223                           
 18224 ;; *************** function _INT0_SetInterruptHandler *****************
 18225 ;; Defined at:
 18226 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 18227 ;; Parameters:    Size  Location     Type
 18228 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
 18229 ;;		 -> pulso_encoder(1), INT0_DefaultInterruptHandler(1), 
 18230 ;; Auto vars:     Size  Location     Type
 18231 ;;		None
 18232 ;; Return value:  Size  Location     Type
 18233 ;;                  1    wreg      void 
 18234 ;; Registers used:
 18235 ;;		wreg, status,2, status,0
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/0
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18245 ;;Total ram usage:        2 bytes
 18246 ;; Hardware stack levels used:    1
 18247 ;; Hardware stack levels required when called:    5
 18248 ;; This function calls:
 18249 ;;		Nothing
 18250 ;; This function is called by:
 18251 ;;		_EXT_INT_Initialize
 18252 ;;		_main
 18253 ;; This function uses a non-reentrant model
 18254 ;;
 18255                           
 18256                           	psect	text71
 18257  006184                     __ptext71:
 18258                           	opt callstack 0
 18259  006184                     _INT0_SetInterruptHandler:
 18260                           	opt callstack 23
 18261  006184                     
 18262                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
 18263  006184  C00B  F1CA         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 18264  006188  C00C  F1CB         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 18265  00618C  0012               	return		;funcret
 18266  00618E                     __end_of_INT0_SetInterruptHandler:
 18267                           	opt callstack 0
 18268                           
 18269 ;; *************** function _ADC_Initialize *****************
 18270 ;; Defined at:
 18271 ;;		line 62 in file "mcc_generated_files/adc.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;		None
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;		None
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      void 
 18278 ;; Registers used:
 18279 ;;		wreg, status,2, status,0, cstack
 18280 ;; Tracked objects:
 18281 ;;		On entry : 0/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18289 ;;Total ram usage:        0 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:    6
 18292 ;; This function calls:
 18293 ;;		_ADC_SetInterruptHandler
 18294 ;; This function is called by:
 18295 ;;		_SYSTEM_Initialize
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text72
 18300  00604A                     __ptext72:
 18301                           	opt callstack 0
 18302  00604A                     _ADC_Initialize:
 18303                           	opt callstack 23
 18304  00604A                     
 18305                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x03;
 18306  00604A  0E03               	movlw	3
 18307  00604C  6EC2               	movwf	194,c	;volatile
 18308                           
 18309                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 18310  00604E  0E80               	movlw	128
 18311  006050  6EC1               	movwf	193,c	;volatile
 18312                           
 18313                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xA1;
 18314  006052  0EA1               	movlw	161
 18315  006054  6EC0               	movwf	192,c	;volatile
 18316                           
 18317                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 18318  006056  0E00               	movlw	0
 18319  006058  6EC4               	movwf	196,c	;volatile
 18320                           
 18321                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 18322  00605A  0E00               	movlw	0
 18323  00605C  6EC3               	movwf	195,c	;volatile
 18324  00605E                     
 18325                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
 18326  00605E  8C9D               	bsf	157,6,c	;volatile
 18327  006060                     
 18328                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 18329  006060  0EC6               	movlw	low _ADC_DefaultInterruptHandler
 18330  006062  6E0B               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
 18331  006064  0E61               	movlw	high _ADC_DefaultInterruptHandler
 18332  006066  6E0C               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
 18333  006068  ECC7  F030         	call	_ADC_SetInterruptHandler	;wreg free
 18334  00606C  0012               	return		;funcret
 18335  00606E                     __end_of_ADC_Initialize:
 18336                           	opt callstack 0
 18337                           
 18338 ;; *************** function _ADC_SetInterruptHandler *****************
 18339 ;; Defined at:
 18340 ;;		line 150 in file "mcc_generated_files/adc.c"
 18341 ;; Parameters:    Size  Location     Type
 18342 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
 18343 ;;		 -> ADC_DefaultInterruptHandler(1), 
 18344 ;; Auto vars:     Size  Location     Type
 18345 ;;		None
 18346 ;; Return value:  Size  Location     Type
 18347 ;;                  1    wreg      void 
 18348 ;; Registers used:
 18349 ;;		wreg, status,2, status,0
 18350 ;; Tracked objects:
 18351 ;;		On entry : 0/0
 18352 ;;		On exit  : 0/0
 18353 ;;		Unchanged: 0/0
 18354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18359 ;;Total ram usage:        2 bytes
 18360 ;; Hardware stack levels used:    1
 18361 ;; Hardware stack levels required when called:    5
 18362 ;; This function calls:
 18363 ;;		Nothing
 18364 ;; This function is called by:
 18365 ;;		_ADC_Initialize
 18366 ;; This function uses a non-reentrant model
 18367 ;;
 18368                           
 18369                           	psect	text73
 18370  00618E                     __ptext73:
 18371                           	opt callstack 0
 18372  00618E                     _ADC_SetInterruptHandler:
 18373                           	opt callstack 23
 18374  00618E                     
 18375                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
 18376  00618E  C00B  F1CC         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
 18377  006192  C00C  F1CD         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
 18378  006196  0012               	return		;funcret
 18379  006198                     __end_of_ADC_SetInterruptHandler:
 18380                           	opt callstack 0
 18381                           
 18382 ;; *************** function _SPI_Open *****************
 18383 ;; Defined at:
 18384 ;;		line 72 in file "mcc_generated_files/spi.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;  spiUniqueCon    1    wreg     enum E353
 18387 ;; Auto vars:     Size  Location     Type
 18388 ;;  spiUniqueCon    1   11[COMRAM] enum E353
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  1    wreg      _Bool 
 18391 ;; Registers used:
 18392 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18402 ;;Total ram usage:        2 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:    5
 18405 ;; This function calls:
 18406 ;;		Nothing
 18407 ;; This function is called by:
 18408 ;;		_main
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           	psect	text74
 18413  005622                     __ptext74:
 18414                           	opt callstack 0
 18415  005622                     _SPI_Open:
 18416                           	opt callstack 25
 18417                           
 18418                           ;incstack = 0
 18419                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 18420  005622  6E0C               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 18421  005624                     
 18422                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 18423  005624  BAC6               	btfsc	198,5,c	;volatile
 18424  005626  EF17  F02B         	goto	u8291
 18425  00562A  EF19  F02B         	goto	u8290
 18426  00562E                     u8291:
 18427  00562E  EF68  F02B         	goto	l148
 18428  005632                     u8290:
 18429  005632                     
 18430                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 18431  005632  500C               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18432  005634  0D04               	mullw	4
 18433  005636  0E01               	movlw	1
 18434  005638  26F3               	addwf	243,f,c
 18435  00563A  0E00               	movlw	0
 18436  00563C  22F4               	addwfc	244,f,c
 18437  00563E  0E5F               	movlw	low _spi_configuration
 18438  005640  24F3               	addwf	243,w,c
 18439  005642  6EF6               	movwf	tblptrl,c
 18440  005644  0EFF               	movlw	high _spi_configuration
 18441  005646  20F4               	addwfc	244,w,c
 18442  005648  6EF7               	movwf	tblptrh,c
 18443  00564A                     	if	1	;There are 3 active tblptr bytes
 18444  00564A  6AF8               	clrf	tblptru,c
 18445  00564C  0E00               	movlw	low (__mediumconst shr (0+16))
 18446  00564E  22F8               	addwfc	tblptru,f,c
 18447  005650                     	endif
 18448  005650  0008               	tblrd		*
 18449  005652  CFF5 FFC7          	movff	tablat,4039	;volatile
 18450                           
 18451                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 18452  005656  500C               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18453  005658  0D04               	mullw	4
 18454  00565A  0E5F               	movlw	low _spi_configuration
 18455  00565C  24F3               	addwf	243,w,c
 18456  00565E  6EF6               	movwf	tblptrl,c
 18457  005660  0EFF               	movlw	high _spi_configuration
 18458  005662  20F4               	addwfc	244,w,c
 18459  005664  6EF7               	movwf	tblptrh,c
 18460  005666                     	if	1	;There are 3 active tblptr bytes
 18461  005666  6AF8               	clrf	tblptru,c
 18462  005668  0E00               	movlw	low (__mediumconst shr (0+16))
 18463  00566A  22F8               	addwfc	tblptru,f,c
 18464  00566C                     	endif
 18465  00566C  0008               	tblrd		*
 18466  00566E  CFF5 FFC6          	movff	tablat,4038	;volatile
 18467  005672                     
 18468                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 18469  005672  0E00               	movlw	0
 18470  005674  6EC5               	movwf	197,c	;volatile
 18471  005676                     
 18472                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 18473  005676  500C               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18474  005678  0D04               	mullw	4
 18475  00567A  0E02               	movlw	2
 18476  00567C  26F3               	addwf	243,f,c
 18477  00567E  0E00               	movlw	0
 18478  005680  22F4               	addwfc	244,f,c
 18479  005682  0E5F               	movlw	low _spi_configuration
 18480  005684  24F3               	addwf	243,w,c
 18481  005686  6EF6               	movwf	tblptrl,c
 18482  005688  0EFF               	movlw	high _spi_configuration
 18483  00568A  20F4               	addwfc	244,w,c
 18484  00568C  6EF7               	movwf	tblptrh,c
 18485  00568E                     	if	1	;There are 3 active tblptr bytes
 18486  00568E  6AF8               	clrf	tblptru,c
 18487  005690  0E00               	movlw	low (__mediumconst shr (0+16))
 18488  005692  22F8               	addwfc	tblptru,f,c
 18489  005694                     	endif
 18490  005694  0008               	tblrd		*
 18491  005696  CFF5 FFC8          	movff	tablat,4040	;volatile
 18492  00569A                     
 18493                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 18494  00569A  500C               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18495  00569C  0D04               	mullw	4
 18496  00569E  0E03               	movlw	3
 18497  0056A0  26F3               	addwf	243,f,c
 18498  0056A2  0E00               	movlw	0
 18499  0056A4  22F4               	addwfc	244,f,c
 18500  0056A6  0E5F               	movlw	low _spi_configuration
 18501  0056A8  24F3               	addwf	243,w,c
 18502  0056AA  6EF6               	movwf	tblptrl,c
 18503  0056AC  0EFF               	movlw	high _spi_configuration
 18504  0056AE  20F4               	addwfc	244,w,c
 18505  0056B0  6EF7               	movwf	tblptrh,c
 18506  0056B2                     	if	1	;There are 3 active tblptr bytes
 18507  0056B2  6AF8               	clrf	tblptru,c
 18508  0056B4  0E00               	movlw	low (__mediumconst shr (0+16))
 18509  0056B6  22F8               	addwfc	tblptru,f,c
 18510  0056B8                     	endif
 18511  0056B8  0008               	tblrd		*
 18512  0056BA  CFF5 F00B          	movff	tablat,??_SPI_Open
 18513  0056BE  460B               	rlncf	??_SPI_Open^0,f,c
 18514  0056C0  460B               	rlncf	??_SPI_Open^0,f,c
 18515  0056C2  460B               	rlncf	??_SPI_Open^0,f,c
 18516  0056C4  5094               	movf	148,w,c	;volatile
 18517  0056C6  180B               	xorwf	??_SPI_Open^0,w,c
 18518  0056C8  0BF7               	andlw	-9
 18519  0056CA  180B               	xorwf	??_SPI_Open^0,w,c
 18520  0056CC  6E94               	movwf	148,c	;volatile
 18521  0056CE                     
 18522                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 18523  0056CE  8AC6               	bsf	198,5,c	;volatile
 18524  0056D0                     l148:
 18525  0056D0  0012               	return		;funcret
 18526  0056D2                     __end_of_SPI_Open:
 18527                           	opt callstack 0
 18528                           
 18529 ;; *************** function _INTERRUPT_InterruptManager *****************
 18530 ;; Defined at:
 18531 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;		None
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;		None
 18536 ;; Return value:  Size  Location     Type
 18537 ;;                  1    wreg      void 
 18538 ;; Registers used:
 18539 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18540 ;; Tracked objects:
 18541 ;;		On entry : 0/0
 18542 ;;		On exit  : 0/0
 18543 ;;		Unchanged: 0/0
 18544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18549 ;;Total ram usage:        2 bytes
 18550 ;; Hardware stack levels used:    1
 18551 ;; Hardware stack levels required when called:    4
 18552 ;; This function calls:
 18553 ;;		_ADC_ISR
 18554 ;;		_INT0_ISR
 18555 ;;		_PIN_MANAGER_IOC
 18556 ;;		_TMR2_ISR
 18557 ;; This function is called by:
 18558 ;;		Interrupt level 2
 18559 ;; This function uses a non-reentrant model
 18560 ;;
 18561                           
 18562                           	psect	intcode
 18563  000008                     __pintcode:
 18564                           	opt callstack 0
 18565  000008                     _INTERRUPT_InterruptManager:
 18566                           	opt callstack 17
 18567                           
 18568                           ;incstack = 0
 18569  000008  8254               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18570  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
 18571  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18572  000012                     
 18573                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
 18574  000012  A8F2               	btfss	242,4,c	;volatile
 18575  000014  EF0E  F000         	goto	i2u859_41
 18576  000018  EF10  F000         	goto	i2u859_40
 18577  00001C                     i2u859_41:
 18578  00001C  EF1B  F000         	goto	i2l113
 18579  000020                     i2u859_40:
 18580  000020  A2F2               	btfss	242,1,c	;volatile
 18581  000022  EF15  F000         	goto	i2u860_41
 18582  000026  EF17  F000         	goto	i2u860_40
 18583  00002A                     i2u860_41:
 18584  00002A  EF1B  F000         	goto	i2l113
 18585  00002E                     i2u860_40:
 18586  00002E                     
 18587                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
 18588  00002E  ECD1  F030         	call	_INT0_ISR	;wreg free
 18589                           
 18590                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 18591  000032  EF58  F000         	goto	i2l123
 18592  000036                     i2l113:
 18593  000036  A6F2               	btfss	242,3,c	;volatile
 18594  000038  EF20  F000         	goto	i2u861_41
 18595  00003C  EF22  F000         	goto	i2u861_40
 18596  000040                     i2u861_41:
 18597  000040  EF2D  F000         	goto	i2l115
 18598  000044                     i2u861_40:
 18599  000044  A0F2               	btfss	242,0,c	;volatile
 18600  000046  EF27  F000         	goto	i2u862_41
 18601  00004A  EF29  F000         	goto	i2u862_40
 18602  00004E                     i2u862_41:
 18603  00004E  EF2D  F000         	goto	i2l115
 18604  000052                     i2u862_40:
 18605  000052                     
 18606                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 18607  000052  EC7F  F030         	call	_PIN_MANAGER_IOC	;wreg free
 18608                           
 18609                           ;mcc_generated_files/interrupt_manager.c: 68:     }
 18610  000056  EF58  F000         	goto	i2l123
 18611  00005A                     i2l115:
 18612  00005A  ACF2               	btfss	242,6,c	;volatile
 18613  00005C  EF32  F000         	goto	i2u863_41
 18614  000060  EF34  F000         	goto	i2u863_40
 18615  000064                     i2u863_41:
 18616  000064  EF58  F000         	goto	i2l122
 18617  000068                     i2u863_40:
 18618  000068                     
 18619                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 18620  000068  AC9D               	btfss	157,6,c	;volatile
 18621  00006A  EF39  F000         	goto	i2u864_41
 18622  00006E  EF3B  F000         	goto	i2u864_40
 18623  000072                     i2u864_41:
 18624  000072  EF46  F000         	goto	i2l118
 18625  000076                     i2u864_40:
 18626  000076  AC9E               	btfss	158,6,c	;volatile
 18627  000078  EF40  F000         	goto	i2u865_41
 18628  00007C  EF42  F000         	goto	i2u865_40
 18629  000080                     i2u865_41:
 18630  000080  EF46  F000         	goto	i2l118
 18631  000084                     i2u865_40:
 18632  000084                     
 18633                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADC_ISR();
 18634  000084  EC4B  F02F         	call	_ADC_ISR	;wreg free
 18635                           
 18636                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 18637  000088  EF58  F000         	goto	i2l123
 18638  00008C                     i2l118:
 18639  00008C  A29D               	btfss	157,1,c	;volatile
 18640  00008E  EF4B  F000         	goto	i2u866_41
 18641  000092  EF4D  F000         	goto	i2u866_40
 18642  000096                     i2u866_41:
 18643  000096  EF58  F000         	goto	i2l122
 18644  00009A                     i2u866_40:
 18645  00009A  A29E               	btfss	158,1,c	;volatile
 18646  00009C  EF52  F000         	goto	i2u867_41
 18647  0000A0  EF54  F000         	goto	i2u867_40
 18648  0000A4                     i2u867_41:
 18649  0000A4  EF58  F000         	goto	i2l122
 18650  0000A8                     i2u867_40:
 18651  0000A8                     
 18652                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
 18653  0000A8  ECEA  F02F         	call	_TMR2_ISR	;wreg free
 18654                           
 18655                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 18656  0000AC  EF58  F000         	goto	i2l123
 18657  0000B0                     i2l122:
 18658  0000B0                     i2l123:
 18659  0000B0  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18660  0000B4  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18661  0000B8  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18662  0000BA  0011               	retfie		f
 18663  0000BC                     __end_of_INTERRUPT_InterruptManager:
 18664                           	opt callstack 0
 18665                           
 18666 ;; *************** function _TMR2_ISR *****************
 18667 ;; Defined at:
 18668 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 18669 ;; Parameters:    Size  Location     Type
 18670 ;;		None
 18671 ;; Auto vars:     Size  Location     Type
 18672 ;;		None
 18673 ;; Return value:  Size  Location     Type
 18674 ;;                  1    wreg      void 
 18675 ;; Registers used:
 18676 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18677 ;; Tracked objects:
 18678 ;;		On entry : 0/0
 18679 ;;		On exit  : 0/0
 18680 ;;		Unchanged: 0/0
 18681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18686 ;;Total ram usage:        0 bytes
 18687 ;; Hardware stack levels used:    1
 18688 ;; Hardware stack levels required when called:    2
 18689 ;; This function calls:
 18690 ;;		_TMR2_CallBack
 18691 ;; This function is called by:
 18692 ;;		_INTERRUPT_InterruptManager
 18693 ;; This function uses a non-reentrant model
 18694 ;;
 18695                           
 18696                           	psect	text76
 18697  005FD4                     __ptext76:
 18698                           	opt callstack 0
 18699  005FD4                     _TMR2_ISR:
 18700                           	opt callstack 18
 18701  005FD4                     
 18702                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
 18703  005FD4  929E               	bcf	158,1,c	;volatile
 18704  005FD6                     
 18705                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 250)
 18706  005FD6  4A52               	infsnz	TMR2_ISR@CountCallBack^0,f,c	;volatile
 18707  005FD8  2A53               	incf	(TMR2_ISR@CountCallBack+1)^0,f,c	;volatile
 18708  005FDA  5053               	movf	(TMR2_ISR@CountCallBack+1)^0,w,c	;volatile
 18709  005FDC  E109               	bnz	i2u828_40
 18710  005FDE  0EFA               	movlw	250
 18711  005FE0  5C52               	subwf	TMR2_ISR@CountCallBack^0,w,c	;volatile
 18712  005FE2  A0D8               	btfss	status,0,c
 18713  005FE4  EFF6  F02F         	goto	i2u828_41
 18714  005FE8  EFF8  F02F         	goto	i2u828_40
 18715  005FEC                     i2u828_41:
 18716  005FEC  EFFE  F02F         	goto	i2l340
 18717  005FF0                     i2u828_40:
 18718  005FF0                     
 18719                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
 18720  005FF0  EC7A  F02F         	call	_TMR2_CallBack	;wreg free
 18721  005FF4                     
 18722                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
 18723  005FF4  0E00               	movlw	0
 18724  005FF6  6E53               	movwf	(TMR2_ISR@CountCallBack+1)^0,c	;volatile
 18725  005FF8  0E00               	movlw	0
 18726  005FFA  6E52               	movwf	TMR2_ISR@CountCallBack^0,c	;volatile
 18727  005FFC                     i2l340:
 18728  005FFC  0012               	return		;funcret
 18729  005FFE                     __end_of_TMR2_ISR:
 18730                           	opt callstack 0
 18731                           
 18732 ;; *************** function _TMR2_CallBack *****************
 18733 ;; Defined at:
 18734 ;;		line 137 in file "mcc_generated_files/tmr2.c"
 18735 ;; Parameters:    Size  Location     Type
 18736 ;;		None
 18737 ;; Auto vars:     Size  Location     Type
 18738 ;;		None
 18739 ;; Return value:  Size  Location     Type
 18740 ;;                  1    wreg      void 
 18741 ;; Registers used:
 18742 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18743 ;; Tracked objects:
 18744 ;;		On entry : 0/0
 18745 ;;		On exit  : 0/0
 18746 ;;		Unchanged: 0/0
 18747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18752 ;;Total ram usage:        0 bytes
 18753 ;; Hardware stack levels used:    1
 18754 ;; Hardware stack levels required when called:    1
 18755 ;; This function calls:
 18756 ;;		Absolute function
 18757 ;;		_TMR2_DefaultInterruptHandler
 18758 ;;		_led_inter
 18759 ;; This function is called by:
 18760 ;;		_TMR2_ISR
 18761 ;; This function uses a non-reentrant model
 18762 ;;
 18763                           
 18764                           	psect	text77
 18765  005EF4                     __ptext77:
 18766                           	opt callstack 0
 18767  005EF4                     _TMR2_CallBack:
 18768                           	opt callstack 18
 18769  005EF4                     
 18770                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
 18771  005EF4  0101               	movlb	1	; () banked
 18772  005EF6  51C8               	movf	_TMR2_InterruptHandler& (0+255),w,b
 18773  005EF8  11C9               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 18774  005EFA  B4D8               	btfsc	status,2,c
 18775  005EFC  EF82  F02F         	goto	i2u808_41
 18776  005F00  EF84  F02F         	goto	i2u808_40
 18777  005F04                     i2u808_41:
 18778  005F04  EF90  F02F         	goto	i2l344
 18779  005F08                     i2u808_40:
 18780  005F08                     
 18781                           ; BSR set to: 1
 18782                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
 18783  005F08  D802               	call	i2u809_48
 18784  005F0A  EF90  F02F         	goto	i2u809_49
 18785  005F0E                     i2u809_48:
 18786  005F0E  0005               	push	
 18787  005F10  6EFA               	movwf	pclath,c
 18788  005F12  51C8               	movf	_TMR2_InterruptHandler& (0+255),w,b
 18789  005F14  6EFD               	movwf	tosl,c
 18790  005F16  51C9               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 18791  005F18  6EFE               	movwf	tosh,c
 18792  005F1A  6AFF               	clrf	tosu,c
 18793  005F1C  50FA               	movf	pclath,w,c
 18794  005F1E  0012               	return		;indir
 18795  005F20                     i2u809_49:
 18796  005F20                     i2l344:
 18797  005F20  0012               	return		;funcret
 18798  005F22                     __end_of_TMR2_CallBack:
 18799                           	opt callstack 0
 18800                           
 18801 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 18802 ;; Defined at:
 18803 ;;		line 151 in file "mcc_generated_files/tmr2.c"
 18804 ;; Parameters:    Size  Location     Type
 18805 ;;		None
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;		None
 18808 ;; Return value:  Size  Location     Type
 18809 ;;                  1    wreg      void 
 18810 ;; Registers used:
 18811 ;;		None
 18812 ;; Tracked objects:
 18813 ;;		On entry : 0/0
 18814 ;;		On exit  : 0/0
 18815 ;;		Unchanged: 0/0
 18816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18821 ;;Total ram usage:        0 bytes
 18822 ;; Hardware stack levels used:    1
 18823 ;; This function calls:
 18824 ;;		Nothing
 18825 ;; This function is called by:
 18826 ;;		_TMR2_Initialize
 18827 ;;		_TMR2_CallBack
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text78
 18832  0061C0                     __ptext78:
 18833                           	opt callstack 0
 18834  0061C0                     _TMR2_DefaultInterruptHandler:
 18835                           	opt callstack 18
 18836  0061C0  0012               	return		;funcret
 18837  0061C2                     __end_of_TMR2_DefaultInterruptHandler:
 18838                           	opt callstack 0
 18839                           
 18840 ;; *************** function _led_inter *****************
 18841 ;; Defined at:
 18842 ;;		line 41 in file "main.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;		None
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;		None
 18847 ;; Return value:  Size  Location     Type
 18848 ;;                  1    wreg      void 
 18849 ;; Registers used:
 18850 ;;		wreg, status,2
 18851 ;; Tracked objects:
 18852 ;;		On entry : 0/0
 18853 ;;		On exit  : 0/0
 18854 ;;		Unchanged: 0/0
 18855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18860 ;;Total ram usage:        0 bytes
 18861 ;; Hardware stack levels used:    1
 18862 ;; This function calls:
 18863 ;;		Nothing
 18864 ;; This function is called by:
 18865 ;;		_main
 18866 ;;		_TMR2_CallBack
 18867 ;; This function uses a non-reentrant model
 18868 ;;
 18869                           
 18870                           	psect	text79
 18871  006164                     __ptext79:
 18872                           	opt callstack 0
 18873  006164                     _led_inter:
 18874                           	opt callstack 18
 18875  006164                     
 18876                           ;main.c: 48:     teste = 42;
 18877  006164  0E00               	movlw	0
 18878  006166  0100               	movlb	0	; () banked
 18879  006168  6FF1               	movwf	(_teste+1)& (0+255),b
 18880  00616A  0E2A               	movlw	42
 18881  00616C  6FF0               	movwf	_teste& (0+255),b
 18882  00616E                     
 18883                           ; BSR set to: 0
 18884  00616E  0012               	return		;funcret
 18885  006170                     __end_of_led_inter:
 18886                           	opt callstack 0
 18887                           
 18888 ;; *************** function _PIN_MANAGER_IOC *****************
 18889 ;; Defined at:
 18890 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 18891 ;; Parameters:    Size  Location     Type
 18892 ;;		None
 18893 ;; Auto vars:     Size  Location     Type
 18894 ;;		None
 18895 ;; Return value:  Size  Location     Type
 18896 ;;                  1    wreg      void 
 18897 ;; Registers used:
 18898 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18899 ;; Tracked objects:
 18900 ;;		On entry : 0/0
 18901 ;;		On exit  : 0/0
 18902 ;;		Unchanged: 0/0
 18903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18908 ;;Total ram usage:        0 bytes
 18909 ;; Hardware stack levels used:    1
 18910 ;; Hardware stack levels required when called:    3
 18911 ;; This function calls:
 18912 ;;		_IOCB4_ISR
 18913 ;; This function is called by:
 18914 ;;		_INTERRUPT_InterruptManager
 18915 ;; This function uses a non-reentrant model
 18916 ;;
 18917                           
 18918                           	psect	text80
 18919  0060FE                     __ptext80:
 18920                           	opt callstack 0
 18921  0060FE                     _PIN_MANAGER_IOC:
 18922                           	opt callstack 17
 18923  0060FE                     
 18924                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 18925  0060FE  010F               	movlb	15	; () banked
 18926  006100  A95A               	btfss	90,4,b	;volatile
 18927  006102  EF85  F030         	goto	i2u825_41
 18928  006106  EF87  F030         	goto	i2u825_40
 18929  00610A                     i2u825_41:
 18930  00610A  EF89  F030         	goto	i2l6954
 18931  00610E                     i2u825_40:
 18932  00610E                     
 18933                           ; BSR set to: 15
 18934                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 18935  00610E  EC91  F02F         	call	_IOCB4_ISR	;wreg free
 18936  006112                     i2l6954:
 18937                           
 18938                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 18939  006112  90F2               	bcf	242,0,c	;volatile
 18940  006114  0012               	return		;funcret
 18941  006116                     __end_of_PIN_MANAGER_IOC:
 18942                           	opt callstack 0
 18943                           
 18944 ;; *************** function _IOCB4_ISR *****************
 18945 ;; Defined at:
 18946 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 18947 ;; Parameters:    Size  Location     Type
 18948 ;;		None
 18949 ;; Auto vars:     Size  Location     Type
 18950 ;;		None
 18951 ;; Return value:  Size  Location     Type
 18952 ;;                  1    wreg      void 
 18953 ;; Registers used:
 18954 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18955 ;; Tracked objects:
 18956 ;;		On entry : 0/0
 18957 ;;		On exit  : 0/0
 18958 ;;		Unchanged: 0/0
 18959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18964 ;;Total ram usage:        0 bytes
 18965 ;; Hardware stack levels used:    1
 18966 ;; Hardware stack levels required when called:    2
 18967 ;; This function calls:
 18968 ;;		Absolute function
 18969 ;;		_IOCB4_DefaultInterruptHandler
 18970 ;;		_acende_led
 18971 ;; This function is called by:
 18972 ;;		_PIN_MANAGER_IOC
 18973 ;; This function uses a non-reentrant model
 18974 ;;
 18975                           
 18976                           	psect	text81
 18977  005F22                     __ptext81:
 18978                           	opt callstack 0
 18979  005F22                     _IOCB4_ISR:
 18980                           	opt callstack 17
 18981  005F22                     
 18982                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 18983  005F22  0100               	movlb	0	; () banked
 18984  005F24  51FC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18985  005F26  11FD               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18986  005F28  B4D8               	btfsc	status,2,c
 18987  005F2A  EF99  F02F         	goto	i2u804_41
 18988  005F2E  EF9B  F02F         	goto	i2u804_40
 18989  005F32                     i2u804_41:
 18990  005F32  EFA7  F02F         	goto	i2l51
 18991  005F36                     i2u804_40:
 18992  005F36                     
 18993                           ; BSR set to: 0
 18994                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 18995  005F36  D802               	call	i2u805_48
 18996  005F38  EFA7  F02F         	goto	i2u805_49
 18997  005F3C                     i2u805_48:
 18998  005F3C  0005               	push	
 18999  005F3E  6EFA               	movwf	pclath,c
 19000  005F40  51FC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 19001  005F42  6EFD               	movwf	tosl,c
 19002  005F44  51FD               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 19003  005F46  6EFE               	movwf	tosh,c
 19004  005F48  6AFF               	clrf	tosu,c
 19005  005F4A  50FA               	movf	pclath,w,c
 19006  005F4C  0012               	return		;indir
 19007  005F4E                     i2u805_49:
 19008  005F4E                     i2l51:
 19009  005F4E  0012               	return		;funcret
 19010  005F50                     __end_of_IOCB4_ISR:
 19011                           	opt callstack 0
 19012                           
 19013 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 19014 ;; Defined at:
 19015 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 19016 ;; Parameters:    Size  Location     Type
 19017 ;;		None
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;		None
 19020 ;; Return value:  Size  Location     Type
 19021 ;;                  1    wreg      void 
 19022 ;; Registers used:
 19023 ;;		None
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19033 ;;Total ram usage:        0 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; This function calls:
 19036 ;;		Nothing
 19037 ;; This function is called by:
 19038 ;;		_PIN_MANAGER_Initialize
 19039 ;;		_IOCB4_ISR
 19040 ;; This function uses a non-reentrant model
 19041 ;;
 19042                           
 19043                           	psect	text82
 19044  0061C2                     __ptext82:
 19045                           	opt callstack 0
 19046  0061C2                     _IOCB4_DefaultInterruptHandler:
 19047                           	opt callstack 18
 19048  0061C2  0012               	return		;funcret
 19049  0061C4                     __end_of_IOCB4_DefaultInterruptHandler:
 19050                           	opt callstack 0
 19051                           
 19052 ;; *************** function _acende_led *****************
 19053 ;; Defined at:
 19054 ;;		line 27 in file "main.c"
 19055 ;; Parameters:    Size  Location     Type
 19056 ;;		None
 19057 ;; Auto vars:     Size  Location     Type
 19058 ;;		None
 19059 ;; Return value:  Size  Location     Type
 19060 ;;                  1    wreg      void 
 19061 ;; Registers used:
 19062 ;;		wreg, status,2, status,0, cstack
 19063 ;; Tracked objects:
 19064 ;;		On entry : 0/0
 19065 ;;		On exit  : 0/0
 19066 ;;		Unchanged: 0/0
 19067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19072 ;;Total ram usage:        1 bytes
 19073 ;; Hardware stack levels used:    1
 19074 ;; Hardware stack levels required when called:    1
 19075 ;; This function calls:
 19076 ;;		_ADC_GetConversion
 19077 ;; This function is called by:
 19078 ;;		_main
 19079 ;;		_IOCB4_ISR
 19080 ;; This function uses a non-reentrant model
 19081 ;;
 19082                           
 19083                           	psect	text83
 19084  005C26                     __ptext83:
 19085                           	opt callstack 0
 19086  005C26                     _acende_led:
 19087                           	opt callstack 17
 19088  005C26                     
 19089                           ;main.c: 28:     if (PORTBbits.RB4 == 0){
 19090  005C26  B881               	btfsc	129,4,c	;volatile
 19091  005C28  EF18  F02E         	goto	i2u799_41
 19092  005C2C  EF1A  F02E         	goto	i2u799_40
 19093  005C30                     i2u799_41:
 19094  005C30  EF33  F02E         	goto	i2l410
 19095  005C34                     i2u799_40:
 19096  005C34  BA89               	btfsc	137,5,c	;volatile
 19097  005C36  EF1F  F02E         	goto	i2u800_41
 19098  005C3A  EF22  F02E         	goto	i2u800_40
 19099  005C3E                     i2u800_41:
 19100  005C3E  0E01               	movlw	1
 19101  005C40  EF23  F02E         	goto	i2u800_46
 19102  005C44                     i2u800_40:
 19103  005C44  0E00               	movlw	0
 19104  005C46                     i2u800_46:
 19105  005C46  0AFF               	xorlw	255
 19106  005C48  6E06               	movwf	??_acende_led^0,c
 19107  005C4A  3A06               	swapf	??_acende_led^0,f,c
 19108  005C4C  4606               	rlncf	??_acende_led^0,f,c
 19109  005C4E  5089               	movf	137,w,c	;volatile
 19110  005C50  1806               	xorwf	??_acende_led^0,w,c
 19111  005C52  0BDF               	andlw	-33
 19112  005C54  1806               	xorwf	??_acende_led^0,w,c
 19113  005C56  6E89               	movwf	137,c	;volatile
 19114  005C58                     
 19115                           ;main.c: 30:         codigo_digital = ADC_GetConversion(POT);
 19116  005C58  0E00               	movlw	0
 19117  005C5A  EC72  F02E         	call	_ADC_GetConversion
 19118  005C5E  C001  F0F6         	movff	?_ADC_GetConversion,_codigo_digital
 19119  005C62  C002  F0F7         	movff	?_ADC_GetConversion+1,_codigo_digital+1
 19120  005C66                     i2l410:
 19121  005C66  0012               	return		;funcret
 19122  005C68                     __end_of_acende_led:
 19123                           	opt callstack 0
 19124                           
 19125 ;; *************** function _ADC_GetConversion *****************
 19126 ;; Defined at:
 19127 ;;		line 113 in file "mcc_generated_files/adc.c"
 19128 ;; Parameters:    Size  Location     Type
 19129 ;;  channel         1    wreg     enum E12385
 19130 ;; Auto vars:     Size  Location     Type
 19131 ;;  channel         1    4[COMRAM] enum E12385
 19132 ;; Return value:  Size  Location     Type
 19133 ;;                  2    0[COMRAM] unsigned short 
 19134 ;; Registers used:
 19135 ;;		wreg, status,2, status,0
 19136 ;; Tracked objects:
 19137 ;;		On entry : 0/0
 19138 ;;		On exit  : 0/0
 19139 ;;		Unchanged: 0/0
 19140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19144 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19145 ;;Total ram usage:        5 bytes
 19146 ;; Hardware stack levels used:    1
 19147 ;; This function calls:
 19148 ;;		Nothing
 19149 ;; This function is called by:
 19150 ;;		_acende_led
 19151 ;; This function uses a non-reentrant model
 19152 ;;
 19153                           
 19154                           	psect	text84
 19155  005CE4                     __ptext84:
 19156                           	opt callstack 0
 19157  005CE4                     _ADC_GetConversion:
 19158                           	opt callstack 17
 19159                           
 19160                           ;incstack = 0
 19161                           ;ADC_GetConversion@channel stored from wreg
 19162  005CE4  6E05               	movwf	ADC_GetConversion@channel^0,c
 19163  005CE6                     
 19164                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 19165  005CE6  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 19166  005CEA  4603               	rlncf	??_ADC_GetConversion^0,f,c
 19167  005CEC  4603               	rlncf	??_ADC_GetConversion^0,f,c
 19168  005CEE  50C2               	movf	194,w,c	;volatile
 19169  005CF0  1803               	xorwf	??_ADC_GetConversion^0,w,c
 19170  005CF2  0B83               	andlw	-125
 19171  005CF4  1803               	xorwf	??_ADC_GetConversion^0,w,c
 19172  005CF6  6EC2               	movwf	194,c	;volatile
 19173  005CF8                     
 19174                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 19175  005CF8  80C2               	bsf	194,0,c	;volatile
 19176  005CFA                     
 19177                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 19178  005CFA  82C2               	bsf	194,1,c	;volatile
 19179  005CFC                     i2l223:
 19180                           
 19181                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 19182  005CFC  B2C2               	btfsc	194,1,c	;volatile
 19183  005CFE  EF83  F02E         	goto	i2u744_41
 19184  005D02  EF85  F02E         	goto	i2u744_40
 19185  005D06                     i2u744_41:
 19186  005D06  EF7E  F02E         	goto	i2l223
 19187  005D0A                     i2u744_40:
 19188  005D0A                     
 19189                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19190  005D0A  50C4               	movf	196,w,c	;volatile
 19191  005D0C  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
 19192  005D0E  6A03               	clrf	??_ADC_GetConversion^0,c
 19193  005D10  50C3               	movf	195,w,c	;volatile
 19194  005D12  2403               	addwf	??_ADC_GetConversion^0,w,c
 19195  005D14  6E01               	movwf	?_ADC_GetConversion^0,c
 19196  005D16  0E00               	movlw	0
 19197  005D18  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 19198  005D1A  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
 19199  005D1C  0012               	return		;funcret
 19200  005D1E                     __end_of_ADC_GetConversion:
 19201                           	opt callstack 0
 19202                           
 19203 ;; *************** function _INT0_ISR *****************
 19204 ;; Defined at:
 19205 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 19206 ;; Parameters:    Size  Location     Type
 19207 ;;		None
 19208 ;; Auto vars:     Size  Location     Type
 19209 ;;		None
 19210 ;; Return value:  Size  Location     Type
 19211 ;;                  1    wreg      void 
 19212 ;; Registers used:
 19213 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19214 ;; Tracked objects:
 19215 ;;		On entry : 0/0
 19216 ;;		On exit  : 0/0
 19217 ;;		Unchanged: 0/0
 19218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;Total ram usage:        0 bytes
 19224 ;; Hardware stack levels used:    1
 19225 ;; Hardware stack levels required when called:    3
 19226 ;; This function calls:
 19227 ;;		_INT0_CallBack
 19228 ;; This function is called by:
 19229 ;;		_INTERRUPT_InterruptManager
 19230 ;; This function uses a non-reentrant model
 19231 ;;
 19232                           
 19233                           	psect	text85
 19234  0061A2                     __ptext85:
 19235                           	opt callstack 0
 19236  0061A2                     _INT0_ISR:
 19237                           	opt callstack 17
 19238  0061A2                     
 19239                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
 19240  0061A2  92F2               	bcf	242,1,c	;volatile
 19241  0061A4                     
 19242                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
 19243  0061A4  ECA8  F02F         	call	_INT0_CallBack	;wreg free
 19244  0061A8  0012               	return		;funcret
 19245  0061AA                     __end_of_INT0_ISR:
 19246                           	opt callstack 0
 19247                           
 19248 ;; *************** function _INT0_CallBack *****************
 19249 ;; Defined at:
 19250 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 19251 ;; Parameters:    Size  Location     Type
 19252 ;;		None
 19253 ;; Auto vars:     Size  Location     Type
 19254 ;;		None
 19255 ;; Return value:  Size  Location     Type
 19256 ;;                  1    wreg      void 
 19257 ;; Registers used:
 19258 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19259 ;; Tracked objects:
 19260 ;;		On entry : 0/0
 19261 ;;		On exit  : 0/0
 19262 ;;		Unchanged: 0/0
 19263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19268 ;;Total ram usage:        0 bytes
 19269 ;; Hardware stack levels used:    1
 19270 ;; Hardware stack levels required when called:    2
 19271 ;; This function calls:
 19272 ;;		Absolute function
 19273 ;;		_INT0_DefaultInterruptHandler
 19274 ;;		_pulso_encoder
 19275 ;; This function is called by:
 19276 ;;		_INT0_ISR
 19277 ;; This function uses a non-reentrant model
 19278 ;;
 19279                           
 19280                           	psect	text86
 19281  005F50                     __ptext86:
 19282                           	opt callstack 0
 19283  005F50                     _INT0_CallBack:
 19284                           	opt callstack 17
 19285  005F50                     
 19286                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
 19287  005F50  0101               	movlb	1	; () banked
 19288  005F52  51CA               	movf	_INT0_InterruptHandler& (0+255),w,b
 19289  005F54  11CB               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 19290  005F56  B4D8               	btfsc	status,2,c
 19291  005F58  EFB0  F02F         	goto	i2u806_41
 19292  005F5C  EFB2  F02F         	goto	i2u806_40
 19293  005F60                     i2u806_41:
 19294  005F60  EFBE  F02F         	goto	i2l287
 19295  005F64                     i2u806_40:
 19296  005F64                     
 19297                           ; BSR set to: 1
 19298                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
 19299  005F64  D802               	call	i2u807_48
 19300  005F66  EFBE  F02F         	goto	i2u807_49
 19301  005F6A                     i2u807_48:
 19302  005F6A  0005               	push	
 19303  005F6C  6EFA               	movwf	pclath,c
 19304  005F6E  51CA               	movf	_INT0_InterruptHandler& (0+255),w,b
 19305  005F70  6EFD               	movwf	tosl,c
 19306  005F72  51CB               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 19307  005F74  6EFE               	movwf	tosh,c
 19308  005F76  6AFF               	clrf	tosu,c
 19309  005F78  50FA               	movf	pclath,w,c
 19310  005F7A  0012               	return		;indir
 19311  005F7C                     i2u807_49:
 19312  005F7C                     i2l287:
 19313  005F7C  0012               	return		;funcret
 19314  005F7E                     __end_of_INT0_CallBack:
 19315                           	opt callstack 0
 19316                           
 19317 ;; *************** function _INT0_DefaultInterruptHandler *****************
 19318 ;; Defined at:
 19319 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 19320 ;; Parameters:    Size  Location     Type
 19321 ;;		None
 19322 ;; Auto vars:     Size  Location     Type
 19323 ;;		None
 19324 ;; Return value:  Size  Location     Type
 19325 ;;                  1    wreg      void 
 19326 ;; Registers used:
 19327 ;;		None
 19328 ;; Tracked objects:
 19329 ;;		On entry : 0/0
 19330 ;;		On exit  : 0/0
 19331 ;;		Unchanged: 0/0
 19332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19337 ;;Total ram usage:        0 bytes
 19338 ;; Hardware stack levels used:    1
 19339 ;; This function calls:
 19340 ;;		Nothing
 19341 ;; This function is called by:
 19342 ;;		_EXT_INT_Initialize
 19343 ;;		_INT0_CallBack
 19344 ;; This function uses a non-reentrant model
 19345 ;;
 19346                           
 19347                           	psect	text87
 19348  0061C4                     __ptext87:
 19349                           	opt callstack 0
 19350  0061C4                     _INT0_DefaultInterruptHandler:
 19351                           	opt callstack 18
 19352  0061C4  0012               	return		;funcret
 19353  0061C6                     __end_of_INT0_DefaultInterruptHandler:
 19354                           	opt callstack 0
 19355                           
 19356 ;; *************** function _pulso_encoder *****************
 19357 ;; Defined at:
 19358 ;;		line 34 in file "main.c"
 19359 ;; Parameters:    Size  Location     Type
 19360 ;;		None
 19361 ;; Auto vars:     Size  Location     Type
 19362 ;;		None
 19363 ;; Return value:  Size  Location     Type
 19364 ;;                  1    wreg      void 
 19365 ;; Registers used:
 19366 ;;		wreg, status,2, cstack
 19367 ;; Tracked objects:
 19368 ;;		On entry : 0/0
 19369 ;;		On exit  : 0/0
 19370 ;;		Unchanged: 0/0
 19371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19376 ;;Total ram usage:        0 bytes
 19377 ;; Hardware stack levels used:    1
 19378 ;; Hardware stack levels required when called:    1
 19379 ;; This function calls:
 19380 ;;		_TMR0_ReadTimer
 19381 ;;		_TMR0_StartTimer
 19382 ;;		_TMR0_StopTimer
 19383 ;;		_TMR0_WriteTimer
 19384 ;; This function is called by:
 19385 ;;		_main
 19386 ;;		_INT0_CallBack
 19387 ;; This function uses a non-reentrant model
 19388 ;;
 19389                           
 19390                           	psect	text88
 19391  00606E                     __ptext88:
 19392                           	opt callstack 0
 19393  00606E                     _pulso_encoder:
 19394                           	opt callstack 17
 19395  00606E                     
 19396                           ;main.c: 35:     TMR0_StopTimer();
 19397  00606E  ECDB  F030         	call	_TMR0_StopTimer	;wreg free
 19398  006072                     
 19399                           ;main.c: 36:     ticks=TMR0_ReadTimer();
 19400  006072  EC57  F030         	call	_TMR0_ReadTimer	;wreg free
 19401  006076  C001  F0F8         	movff	?_TMR0_ReadTimer,_ticks
 19402  00607A  C002  F0F9         	movff	?_TMR0_ReadTimer+1,_ticks+1
 19403  00607E                     
 19404                           ;main.c: 37:     TMR0_WriteTimer(0x00);
 19405  00607E  0E00               	movlw	0
 19406  006080  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
 19407  006082  0E00               	movlw	0
 19408  006084  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
 19409  006086  ECCC  F030         	call	_TMR0_WriteTimer	;wreg free
 19410                           
 19411                           ;main.c: 38:     TMR0_StartTimer();
 19412  00608A  ECDD  F030         	call	_TMR0_StartTimer	;wreg free
 19413  00608E  0012               	return		;funcret
 19414  006090                     __end_of_pulso_encoder:
 19415                           	opt callstack 0
 19416                           
 19417 ;; *************** function _TMR0_WriteTimer *****************
 19418 ;; Defined at:
 19419 ;;		line 115 in file "mcc_generated_files/tmr0.c"
 19420 ;; Parameters:    Size  Location     Type
 19421 ;;  timerVal        2    0[COMRAM] unsigned short 
 19422 ;; Auto vars:     Size  Location     Type
 19423 ;;		None
 19424 ;; Return value:  Size  Location     Type
 19425 ;;                  1    wreg      void 
 19426 ;; Registers used:
 19427 ;;		wreg, status,2
 19428 ;; Tracked objects:
 19429 ;;		On entry : 0/0
 19430 ;;		On exit  : 0/0
 19431 ;;		Unchanged: 0/0
 19432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19437 ;;Total ram usage:        2 bytes
 19438 ;; Hardware stack levels used:    1
 19439 ;; This function calls:
 19440 ;;		Nothing
 19441 ;; This function is called by:
 19442 ;;		_pulso_encoder
 19443 ;; This function uses a non-reentrant model
 19444 ;;
 19445                           
 19446                           	psect	text89
 19447  006198                     __ptext89:
 19448                           	opt callstack 0
 19449  006198                     _TMR0_WriteTimer:
 19450                           	opt callstack 17
 19451  006198                     
 19452                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
 19453  006198  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
 19454  00619A  6ED7               	movwf	215,c	;volatile
 19455  00619C                     
 19456                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
 19457  00619C  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
 19458  0061A0  0012               	return		;funcret
 19459  0061A2                     __end_of_TMR0_WriteTimer:
 19460                           	opt callstack 0
 19461                           
 19462 ;; *************** function _TMR0_StopTimer *****************
 19463 ;; Defined at:
 19464 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 19465 ;; Parameters:    Size  Location     Type
 19466 ;;		None
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;		None
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  1    wreg      void 
 19471 ;; Registers used:
 19472 ;;		None
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/0
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19482 ;;Total ram usage:        0 bytes
 19483 ;; Hardware stack levels used:    1
 19484 ;; This function calls:
 19485 ;;		Nothing
 19486 ;; This function is called by:
 19487 ;;		_pulso_encoder
 19488 ;; This function uses a non-reentrant model
 19489 ;;
 19490                           
 19491                           	psect	text90
 19492  0061B6                     __ptext90:
 19493                           	opt callstack 0
 19494  0061B6                     _TMR0_StopTimer:
 19495                           	opt callstack 17
 19496  0061B6                     
 19497                           ;mcc_generated_files/tmr0.c: 99:     T0CONbits.TMR0ON = 0;
 19498  0061B6  9ED5               	bcf	213,7,c	;volatile
 19499  0061B8  0012               	return		;funcret
 19500  0061BA                     __end_of_TMR0_StopTimer:
 19501                           	opt callstack 0
 19502                           
 19503 ;; *************** function _TMR0_StartTimer *****************
 19504 ;; Defined at:
 19505 ;;		line 90 in file "mcc_generated_files/tmr0.c"
 19506 ;; Parameters:    Size  Location     Type
 19507 ;;		None
 19508 ;; Auto vars:     Size  Location     Type
 19509 ;;		None
 19510 ;; Return value:  Size  Location     Type
 19511 ;;                  1    wreg      void 
 19512 ;; Registers used:
 19513 ;;		None
 19514 ;; Tracked objects:
 19515 ;;		On entry : 0/0
 19516 ;;		On exit  : 0/0
 19517 ;;		Unchanged: 0/0
 19518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19523 ;;Total ram usage:        0 bytes
 19524 ;; Hardware stack levels used:    1
 19525 ;; This function calls:
 19526 ;;		Nothing
 19527 ;; This function is called by:
 19528 ;;		_pulso_encoder
 19529 ;; This function uses a non-reentrant model
 19530 ;;
 19531                           
 19532                           	psect	text91
 19533  0061BA                     __ptext91:
 19534                           	opt callstack 0
 19535  0061BA                     _TMR0_StartTimer:
 19536                           	opt callstack 17
 19537  0061BA                     
 19538                           ;mcc_generated_files/tmr0.c: 93:     T0CONbits.TMR0ON = 1;
 19539  0061BA  8ED5               	bsf	213,7,c	;volatile
 19540  0061BC  0012               	return		;funcret
 19541  0061BE                     __end_of_TMR0_StartTimer:
 19542                           	opt callstack 0
 19543                           
 19544 ;; *************** function _TMR0_ReadTimer *****************
 19545 ;; Defined at:
 19546 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 19547 ;; Parameters:    Size  Location     Type
 19548 ;;		None
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  readVal         2    4[COMRAM] unsigned short 
 19551 ;;  readValHigh     1    7[COMRAM] unsigned char 
 19552 ;;  readValLow      1    6[COMRAM] unsigned char 
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  2    0[COMRAM] unsigned short 
 19555 ;; Registers used:
 19556 ;;		wreg, status,2
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/0
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19563 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19565 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19566 ;;Total ram usage:        8 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; This function calls:
 19569 ;;		Nothing
 19570 ;; This function is called by:
 19571 ;;		_pulso_encoder
 19572 ;; This function uses a non-reentrant model
 19573 ;;
 19574                           
 19575                           	psect	text92
 19576  0060AE                     __ptext92:
 19577                           	opt callstack 0
 19578  0060AE                     _TMR0_ReadTimer:
 19579                           	opt callstack 17
 19580  0060AE                     
 19581                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
 19582  0060AE  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 19583                           
 19584                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
 19585  0060B2  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 19586  0060B6                     
 19587                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 19588  0060B6  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 19589  0060B8  6E03               	movwf	??_TMR0_ReadTimer^0,c
 19590  0060BA  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 19591  0060BC  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 19592  0060BE  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 19593  0060C2                     
 19594                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
 19595  0060C2  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 19596  0060C6  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 19597  0060CA  0012               	return		;funcret
 19598  0060CC                     __end_of_TMR0_ReadTimer:
 19599                           	opt callstack 0
 19600                           
 19601 ;; *************** function _ADC_ISR *****************
 19602 ;; Defined at:
 19603 ;;		line 139 in file "mcc_generated_files/adc.c"
 19604 ;; Parameters:    Size  Location     Type
 19605 ;;		None
 19606 ;; Auto vars:     Size  Location     Type
 19607 ;;		None
 19608 ;; Return value:  Size  Location     Type
 19609 ;;                  1    wreg      void 
 19610 ;; Registers used:
 19611 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19612 ;; Tracked objects:
 19613 ;;		On entry : 0/0
 19614 ;;		On exit  : 0/0
 19615 ;;		Unchanged: 0/0
 19616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19621 ;;Total ram usage:        0 bytes
 19622 ;; Hardware stack levels used:    1
 19623 ;; Hardware stack levels required when called:    1
 19624 ;; This function calls:
 19625 ;;		Absolute function
 19626 ;;		_ADC_DefaultInterruptHandler
 19627 ;; This function is called by:
 19628 ;;		_INTERRUPT_InterruptManager
 19629 ;; This function uses a non-reentrant model
 19630 ;;
 19631                           
 19632                           	psect	text93
 19633  005E96                     __ptext93:
 19634                           	opt callstack 0
 19635  005E96                     _ADC_ISR:
 19636                           	opt callstack 19
 19637  005E96                     
 19638                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
 19639  005E96  9C9E               	bcf	158,6,c	;volatile
 19640  005E98                     
 19641                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
 19642  005E98  0101               	movlb	1	; () banked
 19643  005E9A  51CC               	movf	_ADC_InterruptHandler& (0+255),w,b
 19644  005E9C  11CD               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
 19645  005E9E  B4D8               	btfsc	status,2,c
 19646  005EA0  EF54  F02F         	goto	i2u826_41
 19647  005EA4  EF56  F02F         	goto	i2u826_40
 19648  005EA8                     i2u826_41:
 19649  005EA8  EF62  F02F         	goto	i2l233
 19650  005EAC                     i2u826_40:
 19651  005EAC                     
 19652                           ; BSR set to: 1
 19653                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
 19654  005EAC  D802               	call	i2u827_48
 19655  005EAE  EF62  F02F         	goto	i2u827_49
 19656  005EB2                     i2u827_48:
 19657  005EB2  0005               	push	
 19658  005EB4  6EFA               	movwf	pclath,c
 19659  005EB6  51CC               	movf	_ADC_InterruptHandler& (0+255),w,b
 19660  005EB8  6EFD               	movwf	tosl,c
 19661  005EBA  51CD               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
 19662  005EBC  6EFE               	movwf	tosh,c
 19663  005EBE  6AFF               	clrf	tosu,c
 19664  005EC0  50FA               	movf	pclath,w,c
 19665  005EC2  0012               	return		;indir
 19666  005EC4                     i2u827_49:
 19667  005EC4                     i2l233:
 19668  005EC4  0012               	return		;funcret
 19669  005EC6                     __end_of_ADC_ISR:
 19670                           	opt callstack 0
 19671                           
 19672 ;; *************** function _ADC_DefaultInterruptHandler *****************
 19673 ;; Defined at:
 19674 ;;		line 154 in file "mcc_generated_files/adc.c"
 19675 ;; Parameters:    Size  Location     Type
 19676 ;;		None
 19677 ;; Auto vars:     Size  Location     Type
 19678 ;;		None
 19679 ;; Return value:  Size  Location     Type
 19680 ;;                  1    wreg      void 
 19681 ;; Registers used:
 19682 ;;		None
 19683 ;; Tracked objects:
 19684 ;;		On entry : 0/0
 19685 ;;		On exit  : 0/0
 19686 ;;		Unchanged: 0/0
 19687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19692 ;;Total ram usage:        0 bytes
 19693 ;; Hardware stack levels used:    1
 19694 ;; This function calls:
 19695 ;;		Nothing
 19696 ;; This function is called by:
 19697 ;;		_ADC_Initialize
 19698 ;;		_ADC_ISR
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           	psect	text94
 19703  0061C6                     __ptext94:
 19704                           	opt callstack 0
 19705  0061C6                     _ADC_DefaultInterruptHandler:
 19706                           	opt callstack 19
 19707  0061C6  0012               	return		;funcret
 19708  0061C8                     __end_of_ADC_DefaultInterruptHandler:
 19709                           	opt callstack 0
 19710                           
 19711                           	psect	text95
 19712  000000                     __ptext95:
 19713                           	opt callstack 0
 19714  000000                     
 19715                           	psect	rparam
 19716  0000                     
 19717                           	psect	temp
 19718  000054                     btemp:
 19719                           	opt callstack 0
 19720  000054                     	ds	1
 19721  0000                     int$flags	set	btemp
 19722  0000                     wtemp8	set	btemp+1
 19723  0000                     ttemp5	set	btemp+1
 19724  0000                     ttemp6	set	btemp+4
 19725  0000                     ttemp7	set	btemp+8
 19726                           tosu	equ	0xFFF
 19727                           tosh	equ	0xFFE
 19728                           tosl	equ	0xFFD
 19729                           stkptr	equ	0xFFC
 19730                           pclatu	equ	0xFFB
 19731                           pclath	equ	0xFFA
 19732                           pcl	equ	0xFF9
 19733                           tblptru	equ	0xFF8
 19734                           tblptrh	equ	0xFF7
 19735                           tblptrl	equ	0xFF6
 19736                           tablat	equ	0xFF5
 19737                           prodh	equ	0xFF4
 19738                           prodl	equ	0xFF3
 19739                           indf0	equ	0xFEF
 19740                           postinc0	equ	0xFEE
 19741                           postdec0	equ	0xFED
 19742                           preinc0	equ	0xFEC
 19743                           plusw0	equ	0xFEB
 19744                           fsr0h	equ	0xFEA
 19745                           fsr0l	equ	0xFE9
 19746                           wreg	equ	0xFE8
 19747                           indf1	equ	0xFE7
 19748                           postinc1	equ	0xFE6
 19749                           postdec1	equ	0xFE5
 19750                           preinc1	equ	0xFE4
 19751                           plusw1	equ	0xFE3
 19752                           fsr1h	equ	0xFE2
 19753                           fsr1l	equ	0xFE1
 19754                           bsr	equ	0xFE0
 19755                           indf2	equ	0xFDF
 19756                           postinc2	equ	0xFDE
 19757                           postdec2	equ	0xFDD
 19758                           preinc2	equ	0xFDC
 19759                           plusw2	equ	0xFDB
 19760                           fsr2h	equ	0xFDA
 19761                           fsr2l	equ	0xFD9
 19762                           status	equ	0xFD8


Data Sizes:
    Strings     155
    Constant    3536
    Data        7
    BSS         416
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      83
    BANK0           160    136     158
    BANK1           256     10     213
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[4]), STR_16(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[4]), STR_16(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ticks(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ticks(BANK0[2]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S2419_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), ticks(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), STR_2(CODE[11]), 
		 -> STR_1(CODE[33]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_inter(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_inter(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pulso_encoder(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pulso_encoder(), INT0_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_draw_line->_lcd_draw_pixel_at
    _lcd_draw_pixel_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_acende_led
    _acende_led->_ADC_GetConversion
    _pulso_encoder->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  191186
           _INT0_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                            ___aldiv
                            ___flmul
                           ___xxtofl
                      _lcd_draw_line
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   98128
                                            132 BANK0      4     4      0
                                              0 BANK1     10     0     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   97013
                                            110 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   95976
                                            102 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   95149
                                             56 BANK0     46    40      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             37 COMRAM    19     8     11
                                              0 BANK0     20    20      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             16 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             37 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             10 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             10 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                             10 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             19 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             37 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31747
                                             61 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                             16 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                             10 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             35 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                             10 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             49 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                             10 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                             10 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             49 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             10 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                             10 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             37 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             28 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             10 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             10 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             37 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             26 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             19 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                             10 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                             17 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             10 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             19 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   26560
                                             41 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             19 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_line                                       23    13     10   29702
                                             25 COMRAM    23    13     10
                  _lcd_draw_pixel_at
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_pixel_at                                    6     0      6   26704
                                             19 COMRAM     6     0      6
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                             15 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                             13 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                             13 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                             13 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                             11 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             10 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     620
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     211
                                              8 COMRAM     2     2      0
                            _ADC_ISR
                           _INT0_ISR
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _led_inter *
 ---------------------------------------------------------------------------------
 (13) _led_inter                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0      22
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0      22
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                         _acende_led *
 ---------------------------------------------------------------------------------
 (13) _acende_led                                          1     1      0      22
                                              5 COMRAM     1     1      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0     189
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0     189
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                      _pulso_encoder *
 ---------------------------------------------------------------------------------
 (13) _pulso_encoder                                       0     0      0     189
                     _TMR0_ReadTimer
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR0_WriteTimer                                     2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT0_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   ___aldiv
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_line
     _lcd_draw_pixel_at
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _pulso_encoder *
         _TMR0_ReadTimer
         _TMR0_StartTimer
         _TMR0_StopTimer
         _TMR0_WriteTimer
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _acende_led *
         _ADC_GetConversion
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _led_inter *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      A      D5       8       83.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      53       1       88.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28E       6        0.0%
DATA                 0      0     28E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 28 11:18:31 2020

                   __size_of_pulso_encoder 0022                           fp__pulso_encoder 0000  
                           _SPI_Initialize 6140           __end_of_TMR2_SetInterruptHandler 617A  
                             ___fldiv@aexp 0023                               ___fldiv@bexp 0022  
                             ___fldiv@sign 001B                                _SSPSTATbits 000FC7  
                                       l43 5B9E                                         l54 6182  
                                       l86 6048                                         l89 6162  
                             ___awdiv@sign 0010                        ___wmul@multiplicand 000D  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
                          _timer0ReloadVal 00FA                 ?_IOCB4_SetInterruptHandler 000B  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l211 606C                                        l108 61B4  
                                      l144 6150                                        l154 60D2  
                                      l148 56D0                                        l236 6196  
                                      l156 60E0                                        l157 60E4  
                                      l254 5FD2                                        l319 60AC  
                                      l512 4880                                        l290 618C  
                                      l347 6178                                        l516 5E64  
                                      l509 484E                                        l454 5EF2  
                                      l463 3162                                        l296 613E  
                                      l480 5ACA                                        l472 5C24  
                                      l800 3EE2                                        l713 2158  
                                      l466 60FC                                        l802 3F46  
                                      l483 612A                                        l731 1994  
                                      l811 44A6                                        l476 5B12  
                                      l556 4718                                        l660 5536  
                                      l820 454E                                        l565 4B16  
                                      l821 4596                                        l662 5570  
                                      l830 3B94                                        l487 57FC  
                                      l584 5FA8                                        l840 3D5C  
                                      l832 3B9C                                        l657 54F4  
                                      l825 459E                                        l809 449E  
                                      l675 34E0                                        l669 5A30  
                                      l677 34E8                                        l757 1D2C  
                                      l845 319C                                        l909 15A6  
                                      l870 3440                                        l854 323E  
                                      l695 371E                                        l791 3D94  
                                      l847 31A4                                        l793 3D9C  
                                      l929 09BC                                        l961 5858  
                                      l962 5860                                        l868 33DE  
                                      l884 01B6                                        l965 6022  
                             __CFG_CPB$OFF 000000                                        _PR2 000FCB  
                             __CFG_CPD$OFF 000000                 ??_INT0_SetInterruptHandler 000D  
                          _timer1ReloadVal 01C6                                        _abs 5C68  
                                      _pad 54B0                            __end_of_ADC_ISR 5EC6  
                                      _rpm 00F2            __end_of_ADC_SetInterruptHandler 6198  
                             ___awmod@sign 0010                            _TMR2_Initialize 6090  
                                      tosl 000FFD                                        wreg 000FE8  
                            _INT0_CallBack 5F50                               ___flmul@aexp 0026  
                             ___flmul@bexp 002B               ?_ADC_DefaultInterruptHandler 0001  
                             ___flmul@sign 0025                               ___flmul@temp 0030  
                             ___flmul@prod 002C                            ?_lcd_set_cursor 0010  
                             ___fltol@exp1 0014                         __size_of_IOCB4_ISR 002E  
                                     ?_abs 001D                                       l1044 4E58  
                                     l1230 501C                                       l1224 577A  
                                     l1209 5620                                       l1410 5250  
                                     l1235 5062                                       l1403 5230  
                                     l1092 49E4                                       l1420 5320  
                                     l1413 5300                                       l1510 2462  
                                     l1502 2618                                       l1262 4F5E  
                                     l1079 441C                                       l1239 5DC4  
                                     l1520 2520                                       l1620 3F9E  
                                     l1196 54AE                                       l1701 5CE2  
                                     l1623 40FA                                       l1519 2532  
                                     l1535 5B58                                       l1560 2CFA  
                                     l1552 2C00                                       l1561 2CE8  
                                     l1721 5D8C                                       l1634 4092  
                                     l1627 4036                                       l1707 5DFC  
                                     l1715 5A82                                       l1651 5C9E  
                                     l1547 2DDC                                       l1804 5D54  
                                     l1820 4D2C                                       l1549 2C3C  
                                     l1493 2348                                       l1654 5CA6  
                                     l1558 2C82                                       l1494 2336  
                                     l1646 5160                                       l1583 2A42  
                                     l1495 22FC                                       l1815 4D4C  
                                     l1736 53EA                                       l1744 5BE2  
                                     l1760 597C                                       l1682 428C  
                                     l1586 28D4                                       l1770 4C3C  
                                     l1754 5E94                                       l1747 61BE  
                                     l1579 26DE                                       l1691 3B5C  
                                     l1596 2A04                                       l1588 294C  
                                     l1780 58B8                                       l1685 4294  
                                     l1589 293A                                       l1766 5E32  
                                     l1694 3AA0                                       l7000 569A  
                                     l1785 58C0                                       l1793 5916  
                                     l7002 56CE                                       l7010 2DEE  
                                     l7100 2FB0                                       l7020 2E20  
                                     l7012 2DF8                                       l7110 2FE2  
                                     l7102 2FBA                                       l7030 2E52  
                                     l7022 2E2A                                       l7014 2E02  
                                     l7006 2DDE                                       l1798 591E  
                                     ?_pad 001B                                       l7200 477E  
                                     l7120 3014                                       l7112 2FEC  
                                     l7104 2FC4                                       l7040 2E84  
                                     l7032 2E5C                                       l7024 2E34  
                                     l7016 2E0C                                       l7008 2DE8  
                                     l8000 48E6                                       l7210 47C6  
                                     l7202 4794                                       l7130 3046  
                                     l7122 301E                                       l7114 2FF6  
                                     l7106 2FCE                                       l7050 2EB6  
                                     l7042 2E8E                                       l7034 2E66  
                                     l7026 2E3E                                       l7018 2E16  
                                     l8010 495C                                       l8002 4904  
                                     l7300 4E38                                       l6340 5ACC  
                                     l7220 483E                                       l7212 47E2  
                                     l7204 479C                                       l7140 3078  
                                     l7132 3050                                       l7124 3028  
                                     l7116 3000                                       l7108 2FD8  
                                     l7060 2EE8                                       l7052 2EC0  
                                     l7044 2E98                                       l7036 2E70  
                                     l7028 2E48                                       l8020 49C4  
                                     l8012 497C                                       l8004 490C  
                                     l8100 2C0A                                       l7302 4E48  
                                     l7310 3F68                                       l6342 5AE2  
                                     l7222 486C                                       l7214 47FA  
                                     l7206 47B2                                       l7230 4A38  
                                     l7150 30AA                                       l7142 3082  
                                     l7134 305A                                       l7126 3032  
                                     l7118 300A                                       l7070 2F1A  
                                     l7062 2EF2                                       l7054 2ECA  
                                     l7046 2EA2                                       l7038 2E7A  
                                     l8014 498E                                       l8006 4920  
                                     l8110 2C62                                       l8102 2C28  
                                     l8030 2A60                                       l7320 3FE0  
                                     l7312 3FAE                                       l6360 5AC8  
                                     l6352 5A84                                       l7208 47BA  
                                     l7232 4A3C                                       l7240 4AE4  
                                     l7224 49E6                                       l7160 30DC  
                                     l7152 30B4                                       l7144 308C  
                                     l7136 3064                                       l7128 303C  
                                     l7080 2F4C                                       l7072 2F24  
                                     l7064 2EFC                                       l7056 2ED4  
                                     l7048 2EAC                                       l8008 492E  
                                     l8016 4994                                       l8120 2CA0  
                                     l8112 2C68                                       l8104 2C2A  
                                     l8032 2A70                                       l8040 2A9A  
                                     l8024 2A44                                       l9000 3C58  
                                     l7330 4068                                       l7322 3FEC  
                                     l7314 3FC4                                       l7306 3F4A  
                                     l6346 5AE8                                       l6354 5A9A  
                                     l7218 4816                                       l7234 4A88  
                                     l7226 49EA                                       l7170 310E  
                                     l7162 30E6                                       l7154 30BE  
                                     l7146 3096                                       l7138 306E  
                                     l7090 2F7E                                       l7082 2F56  
                                     l7074 2F2E                                       l7066 2F06  
                                     l7058 2EDE                                       l8018 49A4  
                                     l8130 2D0A                                       l8122 2CA4  
                                     l8114 2C72                                       l8106 2C3A  
                                     l8050 2AC6                                       l8042 2AAA  
                                     l8034 2A80                                       l8026 2A50  
                                     l8210 274A                                       l8202 2712  
                                     l9010 3D0C                                       l9002 3C5E  
                                     l7340 40A6                                       l7332 4074  
                                     l7324 401E                                       l7308 3F5A  
                                     l6348 5B10                                       l7236 4AB4  
                                     l7228 49FE                                       l7180 3146  
                                     l7172 3118                                       l7164 30F0  
                                     l7156 30C8                                       l7148 30A0  
                                     l7092 2F88                                       l7084 2F60  
                                     l7076 2F38                                       l7068 2F10  
                                     l9100 4178                                       l8300 53F0  
                                     l8140 2D6C                                       l8132 2D16  
                                     l8124 2CB2                                       l8116 2C80  
                                     l8108 2C4C                                       l8052 2AD6  
                                     l8060 2B00                                       l8044 2AB0  
                                     l8036 2A90                                       l8028 2A5E  
                                     l8220 2794                                       l8212 2762  
                                     l8204 271E                                       l9012 3D26  
                                     l9004 3CC2                                       l9020 3172  
                                     l7270 4D74                                       l7262 4D4E  
                                     l7342 40CA                                       l7334 4082  
                                     l7326 4020                                       l7318 3FD8  
                                     l6358 5AA0                                       l7190 4744  
                                     l7238 4AE0                                       l7182 3150  
                                     l7174 3122                                       l7166 30FA  
                                     l7158 30D2                                       l7094 2F92  
                                     l7086 2F6A                                       l7078 2F42  
                                     l9102 418E                                       l8310 5420  
                                     l8302 53FE                                       l8150 2DCA  
                                     l8142 2D82                                       l8134 2D24  
                                     l8126 2CE0                                       l8118 2C92  
                                     l8070 2B42                                       l8062 2B10  
                                     l8054 2AE6                                       l8046 2AB6  
                                     l8038 2A92                                       l8230 27EA  
                                     l8222 27A4                                       l8214 276E  
                                     l8206 2728                                       l9006 3CD4  
                                     l9014 3D34                                       l9030 31E4  
                                     l9022 3174                                       l6800 61B2  
                                     l7280 4DBC                                       l7272 4D82  
                                     l7264 4D52                                       l7344 40DA  
                                     l7336 40A0                                       l7328 402C  
                                     l5680 60F2                                       l7192 474C  
                                     l7184 3156                                       l7176 312C  
                                     l7168 3104                                       l7096 2F9C  
                                     l7088 2F74                                       l9120 4270  
                                     l9112 420C                                       l9104 4196  
                                     l8320 544E                                       l8312 5424  
                                     l8304 5406                                       l8152 2DD0  
                                     l8144 2D9C                                       l8136 2D4E  
                                     l8064 2B26                                       l8056 2AF6  
                                     l8048 2AC4                                       l8400 4FCC  
                                     l8240 288E                                       l8232 2806  
                                     l8224 27B0                                       l8216 277A  
                                     l8208 273E                                       l9008 3CF2  
                                     l9040 3222                                       l9032 31EE  
                                     l9024 318E                                       l6810 604A  
                                     l6802 6140                                       l7290 4E06  
                                     l7282 4DC4                                       l7274 4D92  
                                     l7266 4D60                                       l7346 40E8  
                                     l7338 40A2                                       l5682 60F4  
                                     l7194 4758                                       l7186 471A  
                                     l7178 3136                                       l7098 2FA6  
                                     l9106 419E                                       l7602 5BA0  
                                     l7610 5DFE                                       l8330 5482  
                                     l8322 545C                                       l8314 542C  
                                     l8306 540A                                       l8154 2DD2  
                                     l8146 2DB8                                       l8138 2D52  
                                     l8090 2BC4                                       l8082 2B7A  
                                     l8066 2B36                                       l8074 2B56  
                                     l8058 2AF8                                       l8410 505A  
                                     l8402 4FDC                                       l8250 28E4  
                                     l8242 289C                                       l8234 2812  
                                     l8226 27C0                                       l8218 2788  
                                     l8170 2646                                       l8162 261A  
                                     l9042 3232                                       l9034 31F8  
                                     l9026 31BA                                       l9018 3164  
                                     l9210 0304                                       l9202 02B6  
                                     l6812 605E                                       l6740 6184  
                                     l6804 614C                                       l6820 609A  
                                     l7292 4E16                                       l7284 4DD0  
                                     l7276 4D96                                       l7268 4D70  
                                     l7348 40EA                                       l5684 60FA  
                                     l7196 476E                                       l7188 473C  
                                     l6900 45F4                                       l9116 424C  
                                     l9108 41D4                                       l7604 5BAC  
                                     l7612 5E0A                                       l8332 5488  
                                     l8324 5462                                       l8316 543E  
                                     l8308 5418                                       l8148 2DBC  
                                     l8092 2BCC                                       l8084 2B94  
                                     l8076 2B66                                       l8068 2B3E  
                                     l8412 5060                                       l8404 4FEA  
                                     l8252 28F2                                       l8244 28BA  
                                     l8236 282E                                       l8228 27DA  
                                     l8180 2682                                       l8172 2656  
                                     l8164 2626                                       l8420 5DB4  
                                     l7700 2296                                       l7620 5D56  
                                     l9140 4BBE                                       l9132 4B4E  
                                     l8500 52C8                                       l9060 32FC  
                                     l9052 32BE                                       l9036 31FE  
                                     l9028 31C4                                       l9300 0946  
                                     l9212 032A                                       l9204 02C8  
                                     l6814 6060                                       l6830 613C  
                                     l6806 614E                                       l6742 6170  
                                     l6822 609C                                       l7294 4E18  
                                     l7286 4DDE                                       l7278 4DA6  
                                     l5678 60E8                                       l7198 4776  
                                     l6910 46CC                                       l6902 469E  
                                     l8510 5A4A                                       l9118 425E  
                                     l7606 5BBE                                       l7614 5E0E  
                                     l8326 5478                                       l8318 5446  
                                     l8334 548E                                       l8350 5590  
                                     l8342 5572                                       l8094 2BDC  
                                     l8086 2BA4                                       l8078 2B66  
                                     l8406 4FFC                                       l8262 295C  
                                     l8270 29A4                                       l8254 28F6  
                                     l8246 28C4                                       l8238 2858  
                                     l8190 26B8                                       l8182 2688  
                                     l8174 2666                                       l8166 2634  
                                     l7710 22F4                                       l7702 229A  
                                     l7630 2176                                       l8430 4E84  
                                     l9142 4C00                                       l9134 4B5C  
                                     l9126 4B18                                       l8502 52E8  
                                     l9070 33B6                                       l9062 3302  
                                     l9054 32D0                                       l9046 3272  
                                     l9038 3206                                       l9302 0958  
                                     l9310 09D0                                       l9230 0456  
                                     l9222 03DC                                       l9214 0364  
                                     l9206 02EE                                       l9150 00F4  
                                     l6808 6152                                       l6736 617A  
                                     l6840 5FAA                                       l6832 5F7E  
                                     l6824 60A8                                       l6816 6090  
                                     l7296 4E22                                       l7288 4DE8  
                                     l6760 5C00                                       l6912 46CE  
                                     l6904 46AE                                       l8512 5A78  
                                     l7608 5BC2                                       l7616 5E26  
                                     l8520 59EA                                       l8336 549E  
                                     l8328 5480                                       l8360 55C8  
                                     l8352 559E                                       l8344 5576  
                                     l8096 2BF0                                       l8088 2BB4  
                                     l8408 500A                                       l8280 2A18  
                                     l8272 29BE                                       l8264 2968  
                                     l8256 2904                                       l8248 28D2  
                                     l8192 26C8                                       l8184 2696  
                                     l8176 266C                                       l8168 2636  
                                     l8416 5D8E                                       l7800 2596  
                                     l7720 232A                                       l7712 230A  
                                     l7704 229E                                       l7632 2186  
                                     l7640 21B0                                       l7624 215A  
                                     l8440 4ED2                                       l8432 4EAE  
                                     l8424 4E5A                                       l8600 15D0  
                                     l9136 4B8E                                       l9128 4B42  
                                     l8504 52FA                                       l9080 3418  
                                     l9072 33D0                                       l9048 3284  
                                     l9056 32E4                                       l9064 3360  
                                     l9400 0F68                                       l9320 0ABC  
                                     l9312 0A06                                       l9304 098C  
                                     l9232 0466                                       l9216 0384  
                                     l9208 02F6                                       l9224 03EE  
                                     l9160 012A                                       l9152 0104  
                                     l6738 618E                                       l6826 612C  
                                     l6842 5FAC                                       l6834 5F8A  
                                     l6818 6098                                       l7298 4E28  
                                     l6770 6116                                       l6762 5C1C  
                                     l6914 46DE                                       l6906 46BA  
                                     l8514 5A7C                                       l8506 5A32  
                                     l9090 4118                                       l8522 59F6  
                                     l8338 54A6                                       l8362 55D6  
                                     l8370 5600                                       l8354 55A6  
                                     l8346 5584                                       l8098 2BFE  
                                     l8282 2A26                                       l8274 29D2  
                                     l8266 2976                                       l8258 2932  
                                     l8194 26CE                                       l8186 2698  
                                     l8178 267C                                       l8418 5DA4  
                                     l7810 25DC                                       l7802 2598  
                                     l7730 237A                                       l7722 2334  
                                     l7714 2316                                       l7706 22C8  
                                     l7650 21E0                                       l7642 21C0  
                                     l7634 2196                                       l7626 2166  
                                     l8450 4EFE                                       l8434 4EB0  
                                     l8426 4E70                                       l8610 1620  
                                     l8602 15D8                                       l9138 4BAC  
                                     l9074 33EC                                       l9066 337E  
                                     l9058 32F6                                       l9402 0FB0  
                                     l9314 0A4E                                       l9242 050E  
                                     l9234 049A                                       l9226 0412  
                                     l9218 0392                                       l9154 0108  
                                     l9146 00C0                                       l6828 6130  
                                     l6844 5FB4                                       l6836 5F8C  
                                     l4988 60CE                                       l6908 46BC  
                                     l6916 46E0                                       l6860 5ED0  
                                     l8508 5A36                                       l9092 4136  
                                     l9084 40FC                                       l8524 5A02  
                                     l8540 34B8                                       l8532 3442  
                                     l8372 5610                                       l8364 55EC  
                                     l8356 55B8                                       l8348 558C  
                                     l8380 5700                                       l8284 2A28  
                                     l8276 29EC                                       l8268 29A0  
                                     l8196 26EE                                       l8188 26A8  
                                     l7820 2606                                       l7812 25EA  
                                     l7804 25A8                                       l7740 23B6  
                                     l7732 238A                                       l7724 2356  
                                     l7716 231A                                       l7708 22E4  
                                     l7660 2220                                       l7652 21EE  
                                     l7644 21C6                                       l7636 21A6  
                                     l7628 2174                                       l8292 5B14  
                                     l8460 4F2E                                       l8436 4EC0  
                                     l7900 39E4                                       l8700 19C4  
                                     l8620 1658                                       l8612 162E  
                                     l8604 15FC                                       l9076 33F2  
                                     l9068 339C                                       l9252 05FC  
                                     l9244 0544                                       l9236 04C0  
                                     l9228 0422                                       l9180 014E  
                                     l9172 013C                                       l9164 0130  
                                     l9156 0116                                       l9148 00E6  
                                     l6790 5B8E                                       l6782 5B5A  
                                     l6846 5FCC                                       l6838 5FA4  
                                     l6766 5C22                                       l6758 5BE4  
                                     l6862 5EDE                                       l9094 416E  
                                     l9086 4110                                       l7590 5334  
                                     l7830 54B0                                       l8526 5A06  
                                     l8518 59D8                                       l8550 3510  
                                     l8542 34BA                                       l8534 3462  
                                     l8374 5618                                       l8366 55F4  
                                     l8358 55C0                                       l8390 5778  
                                     l8382 5710                                       l8278 2A08  
                                     l8286 2A2E                                       l8198 26FE  
                                     l7822 2608                                       l7814 25F0  
                                     l7806 25B8                                       l7750 23FC  
                                     l7742 23C4                                       l7734 2398  
                                     l7726 2366                                       l7718 2328  
                                     l7670 225A                                       l7662 2222  
                                     l7654 21F0                                       l7646 21D8  
                                     l7638 21A8                                       l8294 5B24  
                                     l8462 4F3E                                       l8446 4EEA  
                                     l8438 4EC4                                       l7910 3B00  
                                     l8710 1A2A                                       l8702 19E0  
                                     l8630 16BE                                       l8622 165C  
                                     l8614 1640                                       l8606 1606  
                                     l8470 516E                                       l9078 3402  
                                     l9430 116E                                       l9422 10E6  
                                     l9414 1070                                       l9406 0FE8  
                                     l9342 0C0C                                       l9334 0B84  
                                     l9326 0B0E                                       l9318 0A86  
                                     l9262 06B8                                       l9254 0632  
                                     l9246 057A                                       l9238 04F2  
                                     l9190 0222                                       l9158 0118  
                                     l9182 01A4                                       l9502 156E  
                                     l6792 5B90                                       l6784 5B76  
                                     l6848 5FCE                                       l6960 602C  
                                     l6880 5E34                                       l6872 57B4  
                                     l6864 5EE0                                       l9096 4172  
                                     l9088 4114                                       l7592 5346  
                                     l7840 5500                                       l7832 54BE  
                                     l8528 5A0C                                       l8560 35B0  
                                     l8552 3516                                       l8544 34D4  
                                     l8536 348A                                       l8368 55FA  
                                     l8384 573E                                       l8288 2A32  
                                     l7816 25F2                                       l7808 25D8  
                                     l7760 2478                                       l7752 2430  
                                     l7744 23C6                                       l7736 23A6  
                                     l7680 226E                                       l7672 225E  
                                     l7656 2200                                       l7664 222A  
                                     l7648 21DA                                       l8464 4F4E  
                                     l8456 4F12                                       l8448 4EF4  
                                     l7912 3B14                                       l7904 3A54  
                                     l8800 1E70                                       l8720 1A72  
                                     l8712 1A3C                                       l8704 1A16  
                                     l8632 16D0                                       l8616 164C  
                                     l8624 1662                                       l8608 160E  
                                     l8480 51C8                                       l8472 518C  
                                     l7920 5CA8                                       l9504 1594  
                                     l9440 124A                                       l9432 11A4  
                                     l9424 111C                                       l9416 1096  
                                     l9408 101E                                       l9344 0C42  
                                     l9352 0C94                                       l9336 0BBA  
                                     l9328 0B34                                       l9272 0752  
                                     l9264 06DE                                       l9256 0668  
                                     l9248 05C4                                       l9192 0230  
                                     l9184 01C4                                       l9176 0142  
                                     l9168 0136                                       l9520 5806  
                                     l6794 5B9C                                       l6786 5B7C  
                                     l6970 6040                                       l6962 6030  
                                     l6882 5E58                                       l6874 57C0  
                                     l6866 577C                                       l6858 5EC8  
                                     l7594 5350                                       l7842 5514  
                                     l7834 54D2                                       l8570 3658  
                                     l8562 35B6                                       l8554 351E  
                                     l8546 34F0                                       l8538 34AA  
                                     l8298 53EC                                       l8386 574E  
                                     l8378 56D2                                       l8394 4F60  
                                     l7818 25F8                                       l7770 24B4  
                                     l7762 2488                                       l7754 2432  
                                     l7746 23D0                                       l7738 23B2  
                                     l7690 2282                                       l7682 2272  
                                     l7674 2262                                       l7666 223A  
                                     l7658 2210                                       l8458 4F1E  
                                     l7914 3B3C                                       l7906 3A90  
                                     l8810 1F18                                       l8802 1E82  
                                     l8730 1ABA                                       l8722 1A80  
                                     l8714 1A4E                                       l8706 1A1E  
                                     l8650 17A4                                       l8634 16EC  
                                     l8626 1688                                       l8642 1736  
                                     l8618 1654                                       l8482 51F6  
                                     l8474 5194                                       l8490 5252  
                                     l7826 5D1E                                       l7930 590A  
                                     l9450 131C                                       l9434 11DA  
                                     l9354 0CCA                                       l9362 0D16  
                                     l9346 0C7A                                       l9290 087A  
                                     l9282 0810                                       l9274 0788  
                                     l9266 0704                                       l9194 023E  
                                     l9186 01C6                                       l9522 5812  
                                     l9530 4C5A                                       l6788 5B8C  
                                     l6972 6044                                       l6964 6034  
                                     l6956 6024                                       l6884 45A0  
                                     l6876 57DA                                       l6868 578C  
                                     l7940 601A                                       l7596 536E  
                                     l7588 5322                                       l7844 5518  
                                     l7836 54E0                                       l7852 5C68  
                                     l8580 36BA                                       l8572 3672  
                                     l8564 35BC                                       l8556 3528  
                                     l8548 3502                                       l8388 5772  
                                     l8396 4F8E                                       l7780 24E0  
                                     l7772 24B6                                       l7756 2442  
                                     l7748 23D6                                       l7692 2286  
                                     l7684 2276                                       l7676 2266  
                                     l7668 224C                                       l7860 50C2  
                                     l7916 3B4C                                       l7908 3AC4  
                                     l8820 1F70                                       l8812 1F20  
                                     l8804 1E86                                       l8740 1BCE  
                                     l8732 1ACA                                       l8724 1A98  
                                     l8716 1A5C                                       l8708 1A22  
                                     l8652 17C0                                       l8644 175C  
                                     l8660 17DC                                       l8636 1704  
                                     l8900 3DC4                                       l8484 5216  
                                     l8476 51A8                                       l8468 5162  
                                     l8492 5270                                       l7924 58C2  
                                     l9460 1392                                       l9452 132C  
                                     l9436 1204                                       l9444 1286  
                                     l9364 0D3C                                       l9372 0D86  
                                     l9356 0D02                                       l9348 0C86  
                                     l9284 0824                                       l9276 07BE  
                                     l9196 025E                                       l9188 01EC  
                                     l9524 583A                                       l9540 4C98  
                                     l6966 6038                                       l6958 6028  
                                     l6894 45F0                                       l6886 45A8  
                                     l6878 57E2                                       l7934 5DC6  
                                     l7598 53A4                                       l7846 5544  
                                     l7838 54EC                                       l7950 42C8  
                                     l7854 5C82                                       l8582 36C0  
                                     l8590 36F6                                       l8574 368C  
                                     l8558 352E                                       l8566 3620  
                                     l8398 4F9E                                       l7790 2518  
                                     l7774 24C4                                       l7766 249C  
                                     l7782 24E2                                       l7758 2452  
                                     l7694 228A                                       l7686 227A  
                                     l7678 226A                                       l7870 5114  
                                     l7862 50EA                                       l8830 1FB4  
                                     l8822 1F7E                                       l8806 1E8C  
                                     l8814 1F24                                       l8750 1C6E  
                                     l8734 1ADE                                       l8742 1BD4  
                                     l8726 1AAA                                       l8718 1A60  
                                     l8670 1866                                       l8662 17F6  
                                     l8638 170E                                       l8910 3DEC  
                                     l8902 3DCC                                       l8486 5218  
                                     l8478 51B6                                       l8494 5278  
                                     l9462 13B8                                       l9446 12BC  
                                     l9438 1214                                       l9390 0EB6  
                                     l9374 0DBC                                       l9382 0E08  
                                     l9366 0D72                                       l9286 083C  
                                     l9294 08A6                                       l9198 026C  
                                     l9518 57FE                                       l9550 4D1C  
                                     l9542 4CA8                                       l9534 4C62  
                                     l9526 4C3E                                       l6992 5624  
                                     l6968 603C                                       l6888 45EC  
                                     l7848 5558                                       l7960 430A  
                                     l7952 42CC                                       l7944 4296  
                                     l8584 36D2                                       l8568 363A  
                                     l8576 369A                                       l7776 24CC  
                                     l7768 24A6                                       l7784 24F0  
                                     l7696 228E                                       l7688 227E  
                                     l7864 50F6                                       l7856 5064  
                                     l7880 5930                                       l8840 1FEA  
                                     l8832 1FBC                                       l8824 1F8E  
                                     l8816 1F42                                       l8808 1EE4  
                                     l8760 1D04                                       l8752 1CA0  
                                     l8744 1BF2                                       l8736 1B42  
                                     l8728 1AB2                                       l8680 193E  
                                     l8672 18C0                                       l8648 1792  
                                     l8920 3E82                                       l8912 3DFE  
                                     l8904 3DD2                                       l8488 522A  
                                     l8496 528C                                       l7928 58F8  
                                     l9480 14C6                                       l9464 13D0  
                                     l9472 1420                                       l9448 12F2  
                                     l9392 0EDC                                       l9384 0E2E  
                                     l9376 0DF4                                       l9296 08D4  
                                     l9288 084A                                       l9552 4D34  
                                     l9544 4CCC                                       l9536 4C80  
                                     l9528 4C52                                       l9560 5E70  
                                     l6994 5632                                       l7938 5FFE  
                                     l7970 4364                                       l7962 4328  
                                     l7954 42DA                                       l7946 429A  
                                     l8586 36DE                                       l8578 36AC  
                                     l7794 2542                                       l7786 24F4  
                                     l7778 24D0                                       l7698 2292  
                                     l7874 5158                                       l7858 5084  
                                     l7882 5862                                       l8850 2046  
                                     l8842 1FF2                                       l8834 1FCC  
                                     l8826 1F92                                       l8818 1F5E  
                                     l8770 1DBA                                       l8762 1D18  
                                     l8754 1CB0                                       l8746 1C26  
                                     l8738 1B9A                                       l8690 1988  
                                     l8682 1942                                       l8674 18F4  
                                     l8666 182C                                       l8594 15A8  
                                     l8930 3F02                                       l8922 3EA0  
                                     l8914 3E04                                       l8906 3DDE  
                                     l8498 529A                                       l9490 153A  
                                     l9474 1456                                       l9466 13DE  
                                     l9458 136C                                       l9394 0F12  
                                     l9386 0E7A                                       l9546 4CE0  
                                     l9554 4D44                                       l9538 4C8C  
                                     l9570 3752                                       l6996 5672  
                                     l7972 4392                                       l7964 4330  
                                     l7980 43CC                                       l7956 42FA  
                                     l7948 42A8                                       l8588 36E6  
                                     l7796 254E                                       l7788 2502  
                                     l7868 5102                                       l7892 394C  
                                     l8860 2086                                       l8852 204E  
                                     l8844 1FFE                                       l8836 1FD4  
                                     l8828 1FA2                                       l8780 1E0A  
                                     l8772 1DCE                                       l8764 1D24  
                                     l8756 1CC0                                       l8748 1C58  
                                     l8684 1954                                       l8692 19A0  
                                     l8676 18FC                                       l8668 1860  
                                     l8596 15B2                                       l8932 3F08  
                                     l8924 3EBA                                       l8916 3E0A  
                                     l8908 3DE4                                       l8940 441E  
                                     l9492 154E                                       l9476 148C  
                                     l9548 4CEE                                       l9580 381E  
                                     l9572 377E                                       l9564 3720  
                                     l6998 5676                                       l7982 43DC  
                                     l7974 43B2                                       l7966 4344  
                                     l7958 42FE                                       l7990 4886  
                                     l7798 255C                                       l7894 396C  
                                     l7878 5920                                       l7886 5898  
                                     l8870 20C2                                       l8862 2098  
                                     l8846 2004                                       l8854 2054  
                                     l8838 1FE2                                       l8790 1E3E  
                                     l8782 1E18                                       l8774 1DE0  
                                     l8766 1D48                                       l8758 1CF4  
                                     l8686 1966                                       l8678 192E  
                                     l8598 15C2                                       l8934 3F18  
                                     l8926 3ED4                                       l8918 3E68  
                                     l8950 4466                                       l8942 4430  
                                     l9478 14B6                                       l9486 1506  
                                     l9398 0F32                                       l9654 0176  
                                     l9558 5E66                                       l9590 38F2  
                                     l9582 3846                                       l9574 37AA  
                                     l9566 3748                                       l9656 41BE  
                                     l7984 43FC                                       l7976 43B4  
                                     l7968 4352                                       l7992 4894  
                                     l7896 39C2                                       l7888 58AA  
                                     l8880 211A                                       l8872 20C8  
                                     l8864 20A4                                       l8856 2066  
                                     l8848 202A                                       l8792 1E4E  
                                     l8784 1E28                                       l8776 1DEE  
                                     l8768 1DAC                                       l8688 196E  
                                     l8928 3EF0                                       l8936 3F1E  
                                     l8960 44DC                                       l8952 446E  
                                     l8944 4438                                       l9488 152C  
                                     l9496 155C                                       l9592 3918  
                                     l9584 386C                                       l9576 37D6  
                                     l9568 374E                                       l7978 43C6  
                                     l7994 48B4                                       l7898 39D6  
                                     l8882 2122                                       l8866 20AC  
                                     l8858 2080                                       l8794 1E52  
                                     l8786 1E2C                                       l8778 1DF6  
                                     l8698 19B2                                       l8970 452C  
                                     l8962 44E0                                       l8954 447C  
                                     l8946 444A                                       l9586 3898  
                                     l9578 37D8                                       l7996 48B8  
                                     l7988 4882                                       l8884 2132  
                                     l8876 20FC                                       l8868 20BC  
                                     l8796 1E58                                       l8788 1E32  
                                     l8892 3D5E                                       l8980 4578  
                                     l8972 4530                                       l8964 44FE  
                                     l8948 4452                                       l9588 38C6  
                                     l7998 48C6                                       l8886 2138  
                                     l8878 210E                                       l8798 1E5E  
                                     l8894 3D6C                                       l8966 450A  
                                     l8958 44C8                                       l8990 3BC4  
                                     l8982 3B5E                                       STR_1 FF63  
                                     l8896 3D6E                                       l8976 4560  
                                     l8968 4528                                       l8992 3BCC  
                                     l8984 3B6C                                       STR_2 FFA6  
                                     STR_3 FF98                                       l8898 3D88  
                                     l8978 4574                                       l8994 3BD6  
                                     l8986 3B6E                                       STR_4 FF84  
                                     STR_5 FFB1                                       l8996 3BDC  
                                     l8988 3B88                                       STR_6 FFBA  
                                     STR_7 FFCA                                       l8998 3C52  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u8010 5C00  
                                     u8011 5BFC                                       u8020 5C1C  
                                     u8100 5EF2                                       u8021 5C18  
                                     u8101 5EEE                                       u4910 60E0  
                                     u8110 57B0                                       u4911 60DC  
                                     u8111 57AC                                       u8120 57DA  
                                     u9000 230A                                       u6185 60F0  
                                     u8121 57D6                                       u9001 2306  
                                     u6186 60F2                                       u8130 57FC  
                                     u9010 2328                                       i2l51 5F4E  
                                     u8131 57F8                                       u9011 2324  
                                     u8140 5E58                                       u8300 473C  
                                     u9100 2478                                       u9020 2348  
                                     u8141 5E54                                       u8301 4738  
                                     u9101 2474                                       u9021 2344  
                                     u8310 476E                                       u9110 2488  
                                     u9030 2356                                       i2l47 6114  
                                     u8311 476A                                       u9111 2484  
                                     u9031 2352                                       u8320 4794  
                                     u8160 469E                                       u8400 4B06  
                                     u9200 255C                                       u9120 24B4  
                                     u9040 2366                                       i2l57 61C2  
                                     u8321 4790                                       u8161 469A  
                                     u9201 2558                                       u9121 24B0  
                                     u9041 2362                                       u7450 5AE2  
                                     u8330 47B2                                       u8170 46CC  
                                     u8154 467E                                       u8410 4B16  
                                     u9210 2596                                       u9130 24C4  
                                     u9050 2398                                       u7451 5ADE  
                                     u8331 47AE                                       u8171 46C8  
                                     u8155 4678                                       u8411 4B12  
                                     u9211 2592                                       u9131 24C0  
                                     u9051 2394                                       u8500 3F68  
                                     u7460 5A9A                                       u8340 47FA  
                                     u8180 46DE                                       u9300 54E0  
                                     u9220 25A8                                       u9140 24E0  
                                     u9060 23A6                                       u8501 3F64  
                                     u7461 5A96                                       u8341 47F6  
                                     u8181 46DA                                       u9301 54DC  
                                     u9221 25A4                                       u9141 24DC  
                                     u9061 23A2                                       u8430 4D60  
                                     u8510 3FC4                                       u8350 4812  
                                     u8190 4718                                       u9310 5536  
                                     u9230 25B8                                       u9150 24F0  
                                     u9070 23C4                                       u8431 4D5C  
                                     u8511 3FC0                                       u8351 480E  
                                     u8191 4714                                       u8407 4AFC  
                                     u9311 5532                                       u9231 25B4  
                                     u9151 24EC                                       u9071 23C0  
                                     u8440 4D82                                       u8520 401A  
                                     u8360 483E                                       u9320 5544  
                                     u9240 25D8                                       u9160 2502  
                                     u9080 23FC                                       u9400 5150  
                                     u8441 4D7E                                       u8521 4016  
                                     u8361 483A                                       u9321 5540  
                                     u9241 25D4                                       u9161 24FE  
                                     u9081 23F8                                       u8290 5632  
                                     u8450 4DBC                                       u8530 4064  
                                     u8370 486C                                       u9330 5C82  
                                     u9250 25EA                                       u9170 2518  
                                     u9090 2442                                       u9410 596A  
                                     u8291 562E                                       u8451 4DB8  
                                     u8531 4060                                       u8371 4868  
                                     u9331 5C7E                                       u9251 25E6  
                                     u9171 2514                                       u9091 243E  
                                     u8460 4DDE                                       u8540 4082  
                                     u8380 4A66                                       u9260 2606  
                                     u9180 252E                                       u9340 50A4  
                                     u9500 3A50                                       u9420 597C  
                                     u8461 4DDA                                       u8541 407E  
                                     u9261 2602                                       u9181 252A  
                                     u9501 3A4C                                       u9421 5978  
                                     u8470 4E06                                       u8550 4092  
                                     u8390 4A88                                       u9190 2542  
                                     u9350 50C2                                       u9510 3A74  
                                     u9430 5892                                       u9270 5D4E  
                                     u8471 4E02                                       u8551 408E  
                                     u8391 4A84                                       u9191 253E  
                                     u9351 50BE                                       u9431 588C  
                                     u9271 5D48                                       u8480 4E38  
                                     u8560 40A0                                       u8800 5334  
                                     u9360 50EA                                       u9520 3A90  
                                     u9440 5894                                       u9280 5D50  
                                     u9600 590A                                       u8481 4E34  
                                     u8561 409C                                       u8801 5330  
                                     u9361 50E6                                       u9345 509A  
                                     u9521 3A8C                                       u9417 5960  
                                     u9601 5906                                       u8570 40DA  
                                     u8490 3F5A                                       u9610 5DF6  
                                     u8810 5346                                       u9290 54BE  
                                     u9370 5114                                       u9530 3AE4  
                                     u9450 58AA                                       u8571 40D6  
                                     u8491 3F56                                       u8387 4A5C  
                                     u9611 5DF0                                       u8811 5342  
                                     u9291 54BA                                       u9371 5110  
                                     u9515 3A6A                                       u9451 58A6  
                                     u8580 40E8                                       u9620 5DF8  
                                     u8820 536E                                       u9700 4894  
                                     u8900 2196                                       u9540 3B00  
                                     u9460 3994                                       u8581 40E4  
                                     u8821 536A                                       u9701 4890  
                                     u8901 2192                                       u9541 3AFC  
                                     u8830 53A4                                       u9630 42A8  
                                     u9710 48C6                                       u8910 21D8  
                                     u9390 514E                                       u9550 3B3C  
                                     u9470 39C2                                       u8831 53A0  
                                     u9631 42A4                                       u9711 48C2  
                                     u8911 21D4                                       u9391 5148  
                                     u9551 3B38                                       u9535 3ADA  
                                     u9471 39BE                                       u8840 5BE2  
                                     u9640 42DA                                       u9720 4904  
                                     u9800 2AD6                                       u8920 21EE  
                                     u9480 39E4                                       u9560 5CDC  
                                     u8841 5BDE                                       u9641 42D6  
                                     u9721 4900                                       u9801 2AD2  
                                     u8921 21EA                                       u9385 5126  
                                     u9481 39E0                                       u9465 398A  
                                     u9561 5CD6                                       u8850 5E26  
                                     u9730 492E                                       u9810 2AE6  
                                     u8930 2200                                       u9570 5CDE  
                                     u8851 5E22                                       u9651 4304  
                                     u9731 492A                                       u9811 2AE2  
                                     u8931 21FC                                       u9660 4328  
                                     u9740 495C                                       u9900 2CA0  
                                     u9820 2B26                                       u8940 2210  
                                     u8860 5D86                                       u9580 58F2  
                                     u9661 4324                                       u9741 4958  
                                     u9901 2C9C                                       u9821 2B22  
                                     u8941 220C                                       u8861 5D80  
                                     u9581 58EC                                       u9670 4352  
                                     u9750 49A4                                       u9910 2CB2  
                                     u9830 2B66                                       u8950 224C  
                                     u8870 5D88                                       u9590 58F4  
                                     u9671 434E                                       u9751 49A0  
                                     u9911 2CAE                                       u9831 2B62  
                                     u8951 2248                                       u9495 39F8  
                                     u9680 4392                                       u9920 2CE0  
                                     u9840 2BDC                                       u9760 2A5E  
                                     u8960 225A                                       u8880 2174  
                                     u9496 3A02                                       u9681 438E  
                                     u9921 2CDC                                       u9841 2BD8  
                                     u9761 2A5A                                       u8961 2256  
                                     u8881 2170                                       u9497 3A12  
                                     u9690 43DC                                       u9930 2CF6  
                                     u9850 2BFE                                       u9770 2A70  
                                     u8970 22C8                                       u8890 2186  
                                     u9691 43D8                                       u9931 2CF2  
                                     u9851 2BFA                                       u9771 2A6C  
                                     u8971 22C4                                       u8891 2182  
                                     u9940 2D0A                                       u9860 2C28  
                                     u9780 2A80                                       u8980 22E0  
                                     u9941 2D06                                       u9861 2C24  
                                     u9781 2A7C                                       u8981 22DA  
                                     u9950 2D24                                       u9870 2C4C  
                                     u9790 2AC4                                       u8990 22E2  
                                     u9951 2D20                                       u9871 2C48  
                                     u9791 2AC0                                       u9960 2D6C  
                                     u9880 2C62                                       u9961 2D68  
                                     u9881 2C5E                                       u9970 2D9C  
                                     u9890 2C80                                       _TMR2 000FCC  
                                     u9971 2D98                                       u9891 2C7C  
                                     u9980 2DCA                                       u9981 2DC6  
                                     u9990 2634                                       u9991 2630  
                                     _WPUB 000F5B                                       abs@a 001D  
                                     _dbuf 016C                                       _atoi 40FC  
                                     _ctoa 59D8                                       _main 3720  
                                     _dtoa 3442                                       _font F193  
                                     _prec 004E                            _TMR0_StartTimer 61BA  
                                     _otoa 3D5E                                       _nout 004A  
                                     pad@i 0022                                       pad@p 001F  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 0024  
                                     fsr2l 000FD9                                       _stoa 441E  
                                     btemp 0054                                       _utoa 3B5E  
                                     _xtoa 3164                              ___fpclassifyf 5064  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 00BC                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 001C                     __end_of_SPI_Initialize 6152  
                             _tolower$2489 0017                              lcd_fill@width 0018  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                                    ??_abs 001F                                      ??_pad 0021  
                  __end_of_TMR0_Initialize 5FD4                           __end_of_INT0_ISR 61AA  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 6164  
                            ___fltol@sign1 0013                            __end_of___aldiv 4E5A  
                          __end_of___aodiv 441E                                      ?_atoi 0012  
                                    ?_ctoa 0026                            __end_of___fladd 261A  
                                    ?_main 0001                                      ?_dtoa 0026  
                          __end_of___aomod 49E6                            __end_of___fldiv 2DDE  
                          __end_of___awdiv 54B0                            __end_of___flneg 5DC6  
                                    STR_10 FFBE                                      STR_11 FFD2  
                                    STR_20 FFCE                                      STR_14 FFC6  
                                    STR_16 FFC6                                      STR_32 FFE9  
                                    STR_25 FFC7                                      STR_41 FFEC  
                                    STR_34 FFE9                                      STR_18 FFCE  
                                    STR_43 FFEC                                      STR_36 FFEF  
                          __end_of___awmod 5622                                      STR_29 FFCF  
                                    STR_53 FFDB                                      STR_61 FFD6  
                                    STR_38 FFEF                                      STR_46 FFDA  
                                    STR_63 FFD6                                      STR_71 FFF2  
                                    STR_48 FFDA                                      STR_56 FFF5  
                                    STR_73 FFF2                                      STR_58 FFF5  
                                    STR_83 FFDF                                      STR_91 FFE2  
                                    STR_68 FFD7                                      STR_76 FFDE  
                                    STR_93 FFE2                                      STR_78 FFDE  
                                    STR_86 FFF8                                      STR_95 FFC2  
                                    STR_88 FFF8                            __end_of___flmul 2A44  
                                    STR_97 FFC2                                      ?_otoa 0026  
                TMR0_ReadTimer@readValHigh 0008                            __end_of___flsub 5B5A  
                          __end_of___fltol 4F60          __end_of_IOCB4_SetInterruptHandler 6184  
                                    ?_stoa 0014                                      u10000 2646  
                                    u10001 2642                                      u10010 2656  
                                    u10011 2652                                      u10100 2904  
                                    u10020 2696                                      u10101 2900  
                                    u10021 2692                                      u10110 2932  
                                    u10030 26A8                                      u10111 292E  
                                    u10031 26A4                                      ?_utoa 0026  
                                    u10200 543E                                      u10120 2948  
                                    u10040 26B8                                      u11000 1C58  
                                    u10201 543A                                      u10121 2944  
                                    u10041 26B4                                      u11001 1C54  
                                    u10210 545C                                      u10130 295C  
                                    u10050 26EE                                      u11010 1CA0  
                                    u10211 5458                                      u10131 2958  
                                    u10051 26EA                                      u11011 1C9C  
                                    u10220 5478                                      u10300 5700  
                                    u10140 2976                                      u10060 26FE  
                                    u11100 1E70                                      u11020 1CB0  
                                    u10221 5474                                      u10301 56FC  
                                    u10141 2972                                      u10061 26FA  
                                    u11101 1E6C                                      u11021 1CAC  
                                    u10230 549E                                      u10310 573E  
                                    u10150 29BE                                      u10070 2878  
                                    u11110 1F42                                      u11030 1D18  
                                    u10231 549A                                      u10311 573A  
                                    u10151 29BA                                      u11111 1F3E  
                                    u11031 1D14                                      u10240 5584  
                                    u10320 5772                                      u10160 29EC  
                                    u10080 28D2                                      u10400 4EA4  
                                    u11200 20F6                                      u11120 1F5E  
                                    u11040 1DBA                                      u12000 06DE  
                                    u10241 5580                                      u10321 576E  
                                    u10161 29E8                                      u10081 28CE  
                                    u11201 20F0                                      u11121 1F5A  
                                    u11041 1DB6                                      u12001 06DA  
                                    u10250 559E                                      u10330 4F8E  
                                    u10170 2A26                                      u10090 28F2  
                                    u10410 4ED2                                      u11210 20F8  
                                    u11130 1F70                                      u11050 1DCE  
                                    u12010 0704                                      u10251 559A  
                                    u10331 4F8A                                      u10171 2A22  
                                    u10091 28EE                                      u10075 286E  
                                    u10411 4ECE                                      u11131 1F6C  
                                    u11051 1DCA                                      u12011 0700  
                                    u10180 53FE                                      u10260 55B8  
                                    u10340 4FCC                                      u10420 4EE6  
                                    u11220 210E                                      u11140 1F7E  
                                    u11060 1DE0                                      u11300 3EE2  
                                    u10500 5270                                      u12100 0ABC  
                                    u12020 0788                                      u10181 53FA  
                                    u10261 55B4                                      u10341 4FC8  
                                    u10421 4EE2                                      u10405 4E9A  
                                    u11221 210A                                      u11141 1F7A  
                                    u11061 1DDC                                      u11301 3EDE  
                                    u10501 526C                                      u12101 0AB8  
                                    u12021 0784                                      u10190 5418  
                                    u10270 55D6                                      u10350 4FEA  
                                    u10430 4F0E                                      u11150 1FB4  
                                    u11070 1DEE                                      u11310 3EF0  
                                    u11230 3D6C                                      u10510 529A  
                                    u12110 0B34                                      u12030 07BE  
                                    u10191 5414                                      u10271 55D2  
                                    u10351 4FE6                                      u10431 4F0A  
                                    u11151 1FB0                                      u11071 1DEA  
                                    u11311 3EEC                                      u11231 3D68  
                                    u10511 5296                                      u12111 0B30  
                                    u12031 07BA                                      u10600 34D4  
                                    u10280 55EC                                      u10360 500A  
                                    u10440 4F2E                                      u11160 1FE2  
                                    u11080 1E0A                                      u11320 3F02  
                                    u11240 3D88                                      u11400 455C  
                                    u10520 52C8                                      u12200 101E  
                                    u12120 0BBA                                      u12040 0824  
                                    _T0CON 000FD5                                      u10601 34D0  
                                    u10281 55E8                                      u10361 5006  
                                    u10441 4F2A                                      u11161 1FDE  
                                    u11081 1E06                                      u11321 3EFE  
                                    u11241 3D84                                      u11401 4558  
                                    u10521 52C4                                      u12201 101A  
                                    u12121 0BB6                                      u12041 0820  
                                    u10530 5A4A                                      u10610 3502  
                                    u10290 5610                                      u10370 505A  
                                    u10450 4F3E                                      u11170 2066  
                                    u11090 1E18                                      u11250 3E42  
                                    u11410 4596                                      u12210 1096  
                                    u12130 0C42                                      u12050 08D4  
                                    u10531 5A46                                      u10611 34FE  
                                    u10291 560C                                      u10371 5056  
                                    u10451 4F3A                                      u11171 2062  
                                    u11091 1E14                                      u11411 4592  
                                    u11331 4428                            __end_of___lodiv 5252  
                                    u12211 1092                                      u12131 0C3E  
                                    u12051 08D0                                      u10540 5A78  
                                    u10700 36D2                                      u10620 3510  
                                    u10380 5DA4                                      u11180 2080  
                                    u11260 3E82                                      u11340 444A  
                                    u11420 3B6C                                      u11500 318E  
                                    u12300 148C                                      u12220 111C  
                                    u12140 0CCA                                      u12060 0940  
                          ___awdiv@divisor 000D                                      u10541 5A74  
                                    u10701 36CE                                      u10621 350C  
                                    u10381 5DA0                                      u11181 207C  
                                    u11261 3E7E                                      u11341 4446  
                                    u10461 5168                                      u11421 3B68  
                                    u11501 318A                                      u12301 1488  
                                    u12221 1118                                      u12141 0CC6  
                                    u12061 093A                                      u10550 59EA  
                                    u10630 363A                                      u10390 4E70  
                                    u11190 2098                                      u10710 15D0  
                                    u11270 3EA0                                      u11350 447C  
                                    u10470 518C                                      u11430 3B88  
                                    u11510 31BA                                      u12310 152C  
                                    u12230 11A4                                      u12150 0D3C  
                                    u12070 0942                                      u10551 59E6  
                                    u10631 3636                                      u10391 4E6C  
                                    u11191 2094                                      u10711 15CC  
                                    u11271 3E9C                                      u11255 3E30  
                                    u11351 4478                                      u10471 5188  
                                    u11431 3B84                                      u11511 31B6  
                                    u12311 1528                                      u12231 11A0  
                                    u12151 0D38                                      ?_xtoa 0026  
                                    u10640 3658                                      u10560 3472  
                                    u10800 178A                                      u10720 1620  
                                    u11280 3EBA                                      u11360 449A  
                                    u10480 51B6                                      u11440 3CD4  
                                    u11600 337E                                      u11520 3222  
                                    u12240 11DA                                      u12160 0DBC  
                                    u12080 0958                                      u12320 5858  
                                    _T1CON 000FCD                                      u10641 3654  
                                    u10561 346C                                      u10801 1784  
                                    u10721 161C                                      u11281 3EB6  
                                    u11361 4496                                      u10481 51B2  
                                    u11441 3CD0                                      u11601 337A  
                                    u11521 321E                                      u12241 11D6  
                                    u12161 0DB8                                      u12081 0954  
                                    u12321 5854                                      u10650 3672  
                                    u10570 3474                                      u10810 178C  
                                    u10730 162E                                      u11290 3ED4  
                                    u11370 44C4                                      u10490 51F6  
                                    u11450 3CF2                                      u11610 339C  
                                    u11530 326C                                      u12250 12BC  
                                    u12170 0E2E                                      u12090 0A06  
                                    u12330 4C52                                      u10651 366E  
                                    u10731 162A                                      u11291 3ED0  
                                    u11371 44C0                                      u10491 51F2  
                                    u11451 3CEE                                      u11611 3398  
                                    u11531 3266                                      u12251 12B8  
                                    u12171 0E2A                                      u12091 0A02  
                                    u12331 4C4E                                      u11700 4248  
                                    u10660 368C                                      u10580 348A  
                                    u10900 19C4                                      u10820 17A4  
                                    u10740 1640                                      u11380 44FE  
                                    u11460 3D0C                                      u11620 33B6  
                                    u11540 326E                                      u12260 12F2  
                                    u12180 0EDC                                      u12340 4C80  
                                    u10661 3688                                      u10581 3486  
                                    u10901 19C0                                      u10821 17A0  
                                    u10741 163C                                      u11381 44FA  
                                    u11461 3D08                                      u11621 33B2  
                                    u12261 12EE                                      u12181 0ED8  
                                    u12341 4C7C                                      u11710 425E  
                                    u10670 369A                                      u10590 34B8  
                                    u10910 19E0                                      u10830 1828  
                                    u10750 1688                                      u11390 454E  
                                    u11470 3D26                                      u11630 33D0  
                                    u11550 3284                                      u12270 1392  
                                    u12190 0F68                                      u12350 4CE0  
                                    u11711 425A                                      u10671 3696  
                                    u10591 34B4                                      u10911 19DC  
                                    u10831 1824                                      u10751 1684  
                                    u11391 454A                                      u11471 3D22  
                                    u11631 33CC                                      u11551 3280  
                                    u12271 138E                                      u12191 0F64  
                                    u12351 4CDC                                      u11720 4270  
                                    u10680 36AC                                      u10920 1A16  
                                    u10840 18BC                                      u10760 16B6  
                                    u11480 3D34                                      u11640 33DE  
                                    u11560 32B8                                      u12280 13B8  
                                    u11800 00E6                                      u12360 4CEE  
                                    _T2CON 000FCA                                      u11721 426C  
                                    u10681 36A8                                      u10921 1A12  
                                    u10841 18B8                                      u10761 16B0  
                                    u11481 3D30                                      u11641 33DA  
                                    u11561 32B2                                      u12281 13B4  
                                    u11801 00E2                                      u12361 4CEA  
                                    u10690 36BA                                      u10930 1A3C  
                                    u10850 192E                                      u10770 16B8  
                                    u11730 4B42                                      u11650 33EC  
                                    u11570 32BA                                      u11490 3172  
                                    u12290 1456                                      u11810 01B6  
                                    u12370 4D1C                                      u10691 36B6  
                                    u10931 1A38                                      u10851 192A  
                                    u11731 4B3E                                      u11651 33E8  
                                    u11491 316E                                      u12291 1452  
                                    u11811 01B2                                      u12371 4D18  
                                    u11660 4136                                      u10940 1A4E  
                                    u10860 1954                                      u10780 16D0  
                                    u11740 4B7E                                      u11580 32D0  
                                    u11900 03D6                                      u11820 01C4  
                                    u11661 4132                                      u10941 1A4A  
                                    u10861 1950                                      u10781 16CC  
                                    u11581 32CC                                      u11901 03D0  
                                    u11821 01C0                                      u11670 416E  
                                    u10950 1A5C                                      u10870 1966  
                                    u10790 175C                                      u11750 4B8E  
                                    u11590 333A                                      u11910 03D8  
                                    u11830 01EC                                      u11671 416A  
                                    u10951 1A58                                      u10871 1962  
                                    u10791 1758                                      u11751 4B8A  
                                    u11831 01E8                                      u11680 418A  
                                    u10960 1A72                                      u10880 1988  
                                    u11760 4BAC                                      u11920 03EE  
                                    u11840 0230                                      u11681 4186  
                                    u10961 1A6E                                      u10881 1984  
                                    u11761 4BA8                                      u11921 03EA  
                                    u11841 022C                                      u11690 4246  
                                    u10970 1A80                                      u10890 19AE  
                                    u11770 4BBE                                      u11930 0422  
                                    u11850 02B0                                      u12387 5ED6  
                                    u11691 4240                                      u10971 1A7C  
                                    u10891 19AA                                      u11771 4BBA  
                                    u11747 4B74                                      u11595 3328  
                                    u11931 041E                                      u11851 02AA  
                                    u10980 1AAA                                      u11780 4C00  
                                    u11940 0466                                      u11860 02B2  
                                    u10981 1AA6                                      u11781 4BFC  
                                    u11941 0462                                      u10990 1BF2  
                                    u11790 4C22                                      u11950 04C0  
                                    u11870 02C8                                      u10991 1BEE  
                                    u11951 04BC                                      u11871 02C4  
                                    u11960 0544                                      u11880 02EE  
                                    u11785 4BF0                            __end_of___lomod 5322  
                                    u11961 0540                                      u11881 02EA  
                                    u11970 057A                                      u11890 032A  
                                    u11787 4BE6                                      u11971 0576  
                                    u11891 0326                                      u11980 0632  
                                    u11797 4C18                                      u11981 062E  
                                    u11990 0668                                      u11991 0664  
                                    i2l113 0036                                      i2l122 00B0  
                                    i2l115 005A                                      i2l123 00B0  
                                    i2l118 008C                                      i2l223 5CFC  
                                    i2l233 5EC4                                      i2l226 5D1C  
                                    i2l410 5C66                                      i2l260 61B8  
                                    i2l340 5FFC                                      i2l413 608E  
                          _TMR0_WriteTimer 6198                                      i2l350 61C0  
                                    i2l239 61C6                                      i2l263 60CA  
                                    i2l416 616E                                      i2l344 5F20  
                                    i2l257 61BC                                      i2l266 61A0  
                                    i2l283 61A8                                      i2l293 61C4  
                                    i2l287 5F7C                            ___awdiv@counter 000F  
                             vfpfcnvrt@fmt 009A                                      _TMR0H 000FD7  
                             vfpfcnvrt@llu 00BE                                      _TMR1H 000FCF  
                                    _TMR0L 000FD6                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                           ?_INT0_CallBack 0001                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 001E  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                            ??_lcd_draw_line 0024  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              _pulso_encoder 606E  
                         __end_of_TMR2_ISR 5FFE                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 5EF4                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 6116                                      _flags 0050  
                                    _errno 00EC                                      _fputc 5322  
                          __end_of_isalpha 5CE4                                      _fputs 5BA0  
                          __end_of_isdigit 5DFE                                      _ticks 00F8  
                                    _teste 00F0                                      atoi@n 001F  
                                    pad@fp 001B                                      atoi@s 0012  
                                    _width 004C                                      ctoa@c 0028  
                                    _putch 61BE                                      ctoa@w 0029  
                                    dtoa@d 0028                                      dtoa@i 0048  
                                    dtoa@n 0040                                      dtoa@p 003A  
                                    dtoa@s 003E                                      dtoa@w 003C  
                         __end_of_SPI_Open 56D2                            __end_of_islower 5D56  
                          __end_of_isspace 5A84                    __end_of_TMR1_Initialize 5FAA  
                          __end_of_isupper 5D8E                                      pclath 000FFA  
                                    tablat 000FF5                                      otoa@d 0028  
                                    otoa@i 0046                                      otoa@n 003E  
                                    otoa@p 0038                                      otoa@t 003A  
                                    otoa@w 003C                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0020  
                                    stoa@l 0028                                      stoa@p 0026  
                                    stoa@s 0016                                      stoa@w 0022  
                                    ttemp5 0055                                      ttemp6 0058  
                                    ttemp7 005C                                      utoa@d 0028  
                                    utoa@i 0044                                      utoa@n 003C  
                                    utoa@p 0038                                      utoa@w 003A  
                                    status 000FD8                                      wtemp8 0055  
                           ?___fpclassifyf 000B                            __end_of_tolower 58C2  
                                    xtoa@c 0072                                      xtoa@d 0028  
                                    xtoa@i 0070                                      xtoa@n 0068  
                                    xtoa@p 0064                                      xtoa@w 0066  
                                    xtoa@x 0030                            __end_of_strncmp 4C3E  
                          __end_of_toupper 5920                             lcd_fill@height 0016  
                         ___lodiv@dividend 000B                            ?_SPI_Initialize 0001  
          ??_IOCB4_DefaultInterruptHandler 0001                               _toupper$2504 0017  
                          __initialization 597E                               __end_of_atoi 4296  
                             __end_of_ctoa 5A32                               __end_of_main 394C  
                             __end_of_dtoa 3720                               __end_of_font FF5F  
                             __end_of_otoa 3F48                               __end_of_stoa 45A0  
                             __end_of_utoa 3D5E                               __end_of_xtoa 3442  
                        __end_of_IOCB4_ISR 5F50                    __end_of_TMR2_Initialize 60AE  
                                ??_ADC_ISR 0001                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 0014                                     ??_ctoa 0029  
                 _TMR2_SetInterruptHandler 6170                                     ??_main 004A  
                                   ??_dtoa 0030                          ?_lcd_set_cursor_x 000E  
                        ?_lcd_set_cursor_y 000E                              lcd_send@value 000C  
                                   ??_otoa 0030                                     ??_stoa 0018  
                                   ??_utoa 0030                                     ??_xtoa 0031  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0010  
                       ??_lcd_set_cursor_y 0010                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 001B                             ?_pulso_encoder 0001  
                           lcd_draw_char@i 0029                             lcd_draw_char@j 0027  
                           lcd_draw_char@k 0028                   __end_of_SPI_ExchangeByte 60E6  
                  __end_of_TMR0_StartTimer 61BE                             lcd_draw_char@x 0014  
                           lcd_draw_char@y 0016                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 000B                                     STR_102 FFE3  
                                   ?_fputs 0014                                     STR_111 FFFB  
                                   STR_113 FFE6                                     STR_106 FFC3  
                                   _ADRESH 000FC4                                     STR_115 FFE6  
                                   STR_109 FFFB                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 000B                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                           __CFG_WDTEN$OFF 000000                                     i2l6320 5D0A  
                                   i2l6330 60B6                                     i2l6314 5CE6  
                                   i2l6332 60C2                                     i2l6324 61BA  
                                   i2l6316 5CF8                                     i2l6326 61B6  
                                   i2l6318 5CFA                                     i2l6328 60AE  
                                   i2l6336 6198                                     i2l6338 619C  
                                   i2l7360 0052                                     i2l7352 0012  
                                   i2l7370 00A8                                     i2l7362 0068  
                                   i2l7354 0020                                     i2l7364 0076  
                                   i2l7356 002E                                     i2l6750 606E  
                                   i2l7366 0084                                     i2l7358 0044  
                                   i2l6752 6072                                     i2l6744 5C26  
                                   i2l7368 009A                                     i2l6754 607E  
                                   i2l6850 5F50                                     i2l6746 5C34  
                                   i2l6852 5F64                                     i2l6748 5C58  
                                   i2l6756 6164                                     i2l6950 60FE  
                                   i2l6854 5EF4                                     i2l6952 610E  
                                   i2l6856 5F08                                     i2l6954 6112  
                                   i2l6980 5E98                                     i2l6796 5F22  
                                   i2l6982 5EAC                                     i2l6974 61A2  
                                   i2l6798 5F36                                     i2l6990 5FF4  
                                   i2l6976 61A4                                     i2l6984 5FD4  
                                   i2l6978 5E96                                     i2l6986 5FD6  
                                   i2l6988 5FF0                                     _OSCCON 000FD3  
                            vfpfcnvrt@done 00A4                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                           __end_of___xxtofl 40FC  
                          _global_bg_color 00EE                             __CFG_XINST$OFF 000000  
                         ??_lcd_draw_pixel 0010                           __end_of_lcd_fill 57FE  
                             vfprintf@cfmt 00CC                           __end_of_lcd_init 3164  
     __size_of_ADC_DefaultInterruptHandler 0002           __size_of_ADC_SetInterruptHandler 000A  
                         __end_of_lcd_send 60FE                                     ___flge 4F60  
                                   ___fleq 56D2                                  ??___aldiv 0013  
                                ??___aodiv 001B                                  ??___fladd 0013  
                                ??___aomod 001B                                     ___wmul 5FFE  
                                ??___fldiv 0013                                  ??___awdiv 000F  
                                ??___flneg 000F                             __CFG_STVREN$ON 000000  
                                ??___awmod 000F                                  ??___flmul 0021  
                                ??___flsub 003A                                  ??___fltol 000F  
                  __end_of_TMR0_WriteTimer 61A2                                  ??___lodiv 001B  
                                ??___lomod 001B                                     _efgtoa 15A8  
                                   _floorf 394C                           ?_TMR0_Initialize 0001  
                                   clear_0 59A4                                     clear_1 59B0  
                                   clear_2 59BC                                     clear_3 59C8  
                         ___awdiv@quotient 0011                            ___awmod@divisor 000D  
                          ___awmod@counter 000F                                     pad@buf 001D  
                                   ctoa@fp 0026                            ??_INT0_CallBack 0009  
                                   _steste 0200                                     dtoa@fp 0026  
                                   _strcpy 5920                                     _string 0108  
                                   _strlen 5DFE                                  ??_msDelay 000B  
                                   fputc@c 000B                                     fputs@c 0018  
                                   fputs@i 0019                                     fputs@s 0014  
                                ??_isalpha 000D                                  ??_isdigit 000D  
                          ___fpclassifyf@e 0013                            ___fpclassifyf@u 0015  
                          ___fpclassifyf@x 000B                                  ??_islower 000D  
                             __mediumconst F192                                  ??_isspace 000D  
                                   otoa@fp 0026                                     tblptrh 000FF7  
                                ??_isupper 000D                                     tblptrl 000FF6  
                                   tblptru 000FF8                   ADC_GetConversion@channel 0005  
                                   stoa@cp 0024                                     stoa@fp 0014  
                                   putch@c 0001                           __end_of_vfprintf 5862  
                                   utoa@fp 0026   TMR2_SetInterruptHandler@InterruptHandler 000B  
 INT0_SetInterruptHandler@InterruptHandler 000B    ADC_SetInterruptHandler@InterruptHandler 000B  
IOCB4_SetInterruptHandler@InterruptHandler 000B                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 5E96                                  ??_tolower 0013  
                                   xtoa@fp 0026                                  ??_strncmp 0011  
                                ??_toupper 0013              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 0032                                 ___flge@ff2 0036  
                          ??___fpclassifyf 000F                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 0015                               ___xxtofl@exp 0014  
                        _SYSTEM_Initialize 6024                               ___xxtofl@val 000B  
                               ___fleq@ff1 000B                                 ___fleq@ff2 000F  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 59CE                                  ?_INT0_ISR 0001  
                               ___flneg@f1 000B                      __end_of_TMR2_CallBack 5F22  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 000B                             __pcstackCOMRAM 0001  
                             __pidataBANK1 61AA                        ??_SYSTEM_Initialize 000D  
                                ?_TMR2_ISR 0001                              __end_of_fputc 53EC  
                            __end_of_fputs 5BE4      __end_of_IOCB4_DefaultInterruptHandler 61C4  
   __size_of_IOCB4_DefaultInterruptHandler 0002              _IOCB4_DefaultInterruptHandler 61C2  
                            __end_of_putch 61C0                    __size_of_TMR0_ReadTimer 001E  
                         ?_TMR2_Initialize 0001                                  ?_SPI_Open 0001  
                               _acende_led 5C26                ??_IOCB4_SetInterruptHandler 000D  
                         ??_lcd_set_cursor 0014                            ??_pulso_encoder 0009  
              __size_of_EXT_INT_Initialize 0014                           ?_TMR0_StartTimer 0001  
                       __size_of_led_inter 000C                                    ??_fputc 000F  
                __end_of_SYSTEM_Initialize 604A                                    ??_fputs 0018  
                                  ??_putch 000B                                 __pbssBANK0 00E8  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                          __CFG_PLLCFG$OFF 000000                      _INT0_InterruptHandler 01CA  
                               ??_INT0_ISR 0009                                    ?___flge 0032  
                                  ?___fleq 000B                    __size_of_TMR0_StopTimer 0004  
                                  ?___wmul 000B                                 ??_TMR2_ISR 0001  
                                  ?_efgtoa 003E                           ?_TMR0_WriteTimer 0001  
                                  ?_floorf 0024                                    _ADC_ISR 5E96  
                               ??_SPI_Open 000B                            lcd_draw_line@e2 002B  
                          lcd_draw_line@x0 001A                            lcd_draw_line@x1 001E  
                          lcd_draw_line@y0 001C                            lcd_draw_line@y1 0020  
                  __size_of_ADC_Initialize 0024                            lcd_draw_line@dx 002D  
                          lcd_draw_line@dy 002F                                    ?_strcpy 000B  
                          lcd_draw_line@sx 0025                            lcd_draw_line@sy 0027  
                                  ?_strlen 000B                           __CFG_CANMX$PORTB 000000  
                                ?___xxtofl 000B                                    _REFOCON 000F9A  
                                  _OSCCON2 000FD2                         __size_of_vfpfcnvrt 14E8  
                                  _OSCTUNE 000F9B                                    _POT_VAL 00F4  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 0014                                  ?_lcd_init 0001  
                                ?_lcd_send 000C                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 000B                           ??_SPI_Initialize 000B  
                _IOCB4_SetInterruptHandler 617A          __size_of_INT0_SetInterruptHandler 000A  
                ?_INT0_SetInterruptHandler 000B                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 01CC                                    __Hparam 0000  
                  _ADC_SetInterruptHandler 618E                                    __Lparam 0000  
               ??_TMR2_SetInterruptHandler 000D                         __size_of_vsnprintf 0110  
                        ??_lcd_draw_string 0034                                    ___aldiv 4D4E  
                          __size_of___flge 0104                            __size_of___fleq 00AA  
                                  ___aodiv 4296                                    ___fladd 215A  
                                  ___aomod 4882                                    ___fldiv 2A44  
                                  ___awdiv 53EC                                    ___flneg 5D8E  
                                  ___awmod 5572                                    ___flmul 261A  
                                  ___flsub 5B14                                    ___fltol 4E5A  
                        __end_of_led_inter 6170                            __size_of___wmul 0026  
                                  ___lodiv 5162                                    ___lomod 5252  
                                ?_vfprintf 00C6                            __size_of_efgtoa 0BB2  
                                ?_snprintf 01BC                            __size_of_floorf 0212  
                                  __pcinit 597E                                    __ramtop 0F00  
                              ?_acende_led 0001                                    __ptext0 3720  
                                  __ptext1 5E66                                    __ptext2 4C3E  
                                  __ptext3 57FE                                    __ptext4 00C0  
                                  __ptext5 3164                                    __ptext6 58C2  
                                  __ptext7 5D1E                                    __ptext8 5CA8  
                                  __ptext9 3B5E                                  _T0CONbits 000FD5  
                                  _msDelay 5EC6                                  _IOCB4_ISR 5F22  
                          __size_of_strcpy 005E                            __size_of_strlen 0036  
                                _T1CONbits 000FCD                      _OSCILLATOR_Initialize 6152  
                                _T2CONbits 000FCA                               __size_of_abs 0040  
                             __size_of_pad 00C2                                    _isalpha 5CA8  
                                  _isdigit 5DC6                                 ??___xxtofl 000F  
                         ___awmod@dividend 000B                           ___aldiv@dividend 000B  
                                  _islower 5D1E                   ??_PIN_MANAGER_Initialize 000D  
                                  _isspace 5A32                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 5D56                                    efgtoa@c 0044  
                                  efgtoa@d 0078                                    efgtoa@e 0090  
                                  efgtoa@f 0040                                    efgtoa@g 008C  
                                  efgtoa@h 0082                                    efgtoa@i 008A  
                                  efgtoa@l 0086                                    efgtoa@m 0074  
                                  efgtoa@n 0092                                    efgtoa@p 007C  
                                  efgtoa@t 0070                                    efgtoa@u 0094  
                                  efgtoa@w 007F                                    atoi@neg 0018  
                    __end_of_lcd_draw_char 471A                      __end_of_lcd_draw_line 4882  
               __size_of_SYSTEM_Initialize 0026                                 ??_lcd_fill 0016  
                                  _tolower 5862                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 001A                                 ??_lcd_send 000D  
                                  _strncmp 4B18                                    _toupper 58C2  
                     end_of_initialization 59CE                                    floorf@e 0032  
                                  floorf@m 002E                                    floorf@u 0034  
                                  floorf@x 0024                         ??_SPI_ExchangeByte 000B  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 000D                                    fputs@fp 0016  
                      lcd_draw_char@fIndex 0018                          __end_of_vfpfcnvrt 15A8  
                               efgtoa@mode 0081                      TMR0_ReadTimer@readVal 0005  
                               efgtoa@sign 007A                           ___aldiv@quotient 0015  
                                  postdec1 000FE5                                    postdec2 000FDD  
                   lcd_draw_pixel_at@color 0018                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 0014                                 ??_vfprintf 004A  
                           _TMR0_ReadTimer 60AE                                 ??_snprintf 004A  
                                  strcpy@d 0013                                    strlen@a 000D  
                                  strcpy@s 0011                                    strlen@s 000B  
                        lcd_draw_string@pS 002E                                  _PORTBbits 000F81  
                        _spi_configuration FF5F                                 ?_IOCB4_ISR 0001  
                              ___fladd@grs 001A                           __CFG_FOSC$INTIO2 000000  
      __end_of_ADC_DefaultInterruptHandler 61C8                _ADC_DefaultInterruptHandler 61C6  
                            ___xxtofl@sign 0013                                  _TRISCbits 000F94  
                        __end_of_vsnprintf 4D4E                                ___fldiv@grs 001E  
                              ___fldiv@rem 0017                                ___flmul@grs 0027  
            ??_ADC_DefaultInterruptHandler 0001                                 lcd_send@dc 000D  
                ??_ADC_SetInterruptHandler 000D                        __size_of_acende_led 0042  
                        __size_of_INT0_ISR 0008                             _TMR0_StopTimer 61B6  
                   __end_of_TMR0_ReadTimer 60CC                                 _string_rpm 0264  
             __end_of_INTERRUPT_Initialize 61B6                       SPI_ExchangeByte@data 000B  
     __end_of_TMR2_DefaultInterruptHandler 61C2      __size_of_TMR2_DefaultInterruptHandler 0002  
             _TMR2_DefaultInterruptHandler 61C0                             __end_of___flge 5064  
                           __end_of___fleq 577C       __end_of_INT0_DefaultInterruptHandler 61C6  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 61C4  
                __end_of_spi_configuration FF63                                vfpfcnvrt@ap 009C  
                              vfpfcnvrt@cp 00A2                                vfpfcnvrt@ct 00B0  
                              vfpfcnvrt@fp 0098                                vfpfcnvrt@ll 00B3  
                           __end_of___wmul 6024                                vfpfcnvrt@vp 00BB  
                           __end_of_efgtoa 215A                          __size_of_TMR2_ISR 002A  
                           _ADC_Initialize 604A                             __end_of_floorf 3B5E  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 0100  
                    __end_of_INT0_CallBack 5F7E                          __size_of_SPI_Open 00B0  
                           __end_of_strcpy 597E                             __end_of_strlen 5E34  
                      start_initialization 597E                            ___lodiv@divisor 0013  
                          ___lodiv@counter 0023                          _lcd_draw_pixel_at 5E34  
                 __size_of_TMR0_Initialize 002A            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 5CA8                                __end_of_pad 5572  
                       ?_lcd_draw_pixel_at 0014                             _codigo_digital 00F6  
                    __end_of___fpclassifyf 5162                        ??_lcd_draw_pixel_at 001A  
                 __size_of_PIN_MANAGER_IOC 0018                     __end_of_TMR0_StopTimer 61BA  
           SPI_Open@spiUniqueConfiguration 000C                   __size_of_TMR1_Initialize 002C  
                              vfprintf@fmt 00C8                                   ??___flge 003A  
                                 ??___fleq 0013                            ?_TMR0_ReadTimer 0001  
                                 ??___wmul 000F                                   ??_efgtoa 0045  
                   __end_of_ADC_Initialize 606E                                __pdataBANK1 01CE  
                                 ??_floorf 0028                                   ?_ADC_ISR 0001  
               __end_of_EXT_INT_Initialize 6140            fp__TMR2_DefaultInterruptHandler 0000  
            ?_TMR2_DefaultInterruptHandler 0001            fp__INT0_DefaultInterruptHandler 0000  
            ?_INT0_DefaultInterruptHandler 0001                                   ??_strcpy 000F  
                                 ??_strlen 000D                                ??_IOCB4_ISR 0007  
                                ___fladd@a 000F                                  ___fladd@b 000B  
                  __size_of_lcd_draw_pixel 0016                  __end_of_lcd_draw_pixel_at 5E66  
                             vsnprintf@cnt 00DC                               vsnprintf@fmt 00D2  
                                ___fldiv@a 000F                                  ___fldiv@b 000B  
                   __size_of_TMR2_CallBack 002E                                  ___flmul@a 001D  
                                ___flmul@b 0019                                __pbssCOMRAM 004A  
                                ___flsub@a 0036                                  ___flsub@b 0032  
         __end_of_INT0_SetInterruptHandler 618E                      __end_of_pulso_encoder 6090  
                            __pcstackBANK0 0060                              __pcstackBANK1 01BC  
                         ___aodiv@dividend 000B                   __size_of_TMR2_Initialize 001E  
                              snprintf@fmt 01C0                          __size_of___xxtofl 01B4  
                          _lcd_draw_string 49E6                           _lcd_set_cursor_x 5ACC  
                         _lcd_set_cursor_y 5A84                          __size_of_lcd_fill 0082  
                        __size_of_lcd_init 0386                          __size_of_lcd_send 0018  
                                _atoi$2366 001A                                  _atoi$2367 001E  
                                _atoi$2368 001C                                  __pnvBANK0 00FA  
                                __pnvBANK1 01C6                   __size_of_TMR0_StartTimer 0004  
                          ?_TMR0_StopTimer 0001                                _efgtoa$1721 0064  
                              _efgtoa$1730 006A                                _efgtoa$1722 0066  
                              _efgtoa$1731 006C                                _efgtoa$1732 006E  
                              _efgtoa$1726 0068                     _PIN_MANAGER_Initialize 5B5A  
                                _dtoa$1698 0038                                  __pintcode 0008  
                            __pmediumconst F192                                   ?___aldiv 000B  
                                 ?___aodiv 000B                                   ?___fladd 000B  
                                 ?___aomod 000B                                   ?___fldiv 000B  
                                 ?___awdiv 000B                           ___aodiv@quotient 001D  
                                 ?___flneg 000B                                   ?___awmod 000B  
                                 ?___flmul 0019                                   ?___flsub 0032  
                                 ?___fltol 000B                                   ?___lodiv 000B  
                                 ?___lomod 000B                            ?_ADC_Initialize 0001  
                             ??_acende_led 0006               ??_INTERRUPT_InterruptManager 0009  
                        __size_of_vfprintf 0064                                  _led_inter 6164  
                        __size_of_snprintf 0030                                   ?_msDelay 0001  
                          ___lomod@divisor 0013                            ___lomod@counter 001B  
                                 ?_isalpha 000B                                   ?_isdigit 000B  
                 __size_of_TMR0_WriteTimer 000A                                   ?_islower 000B  
                                 ?_isspace 000B                                   ?_isupper 000B  
                                 ?_tolower 0011                           lcd_draw_line@err 0029  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 000B                                   ?_toupper 0011  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 61B2  
                  __size_of_lcd_set_cursor 0042                            ___aldiv@divisor 000F  
                        ??_TMR0_Initialize 000B                            ___aldiv@counter 0013  
                                 _INT0_ISR 61A2                             ___wmul@product 000F  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                              _TMR2_CallBack 5EF4  
                       __end_of_acende_led 5C68                                   _PIE1bits 000F9D  
                          lcd_set_cursor@x 0010                            lcd_set_cursor@y 0012  
      __size_of_INTERRUPT_InterruptManager 00B4                                   _PIR1bits 000F9E  
                                 i2u800_40 5C44                                   i2u800_41 5C3E  
                                 i2u800_46 5C46                      lcd_draw_string@lIndex 003A  
                                 i2u804_40 5F36                                   i2u804_41 5F32  
                                 i2u806_40 5F64                                   i2u805_48 5F3C  
                                 i2u806_41 5F60                                   i2u805_49 5F4E  
                                 i2u807_48 5F6A                                   i2u744_40 5D0A  
                                 i2u808_40 5F08                                   i2u807_49 5F7C  
                                 i2u744_41 5D06                                   i2u808_41 5F04  
                                 i2u825_40 610E                                   i2u825_41 610A  
                                 i2u826_40 5EAC                                   i2u809_48 5F0E  
                                 i2u826_41 5EA8                                   i2u809_49 5F20  
                                 i2u827_48 5EB2                                   i2u828_40 5FF0  
                                 i2u860_40 002E                                   i2u827_49 5EC4  
                                 i2u828_41 5FEC                                   i2u860_41 002A  
                                 i2u861_40 0044                                   i2u861_41 0040  
                                 i2u862_40 0052                                   i2u862_41 004E  
                                 i2u863_40 0068                                   i2u863_41 0064  
                                 i2u864_40 0076                                   i2u864_41 0072  
                                 i2u865_40 0084                                   i2u865_41 0080  
                                 i2u866_40 009A                                   i2u866_41 0096  
                                 i2u867_40 00A8                                   i2u859_40 0020  
                                 i2u867_41 00A4                                   i2u859_41 001C  
                                 i2u799_40 5C34                                   i2u799_41 5C30  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001A  
           fp__ADC_DefaultInterruptHandler 0000                                   _TMR2_ISR 5FD4  
                         lcd_draw_string@k 0038                           lcd_draw_string@x 002A  
                         lcd_draw_string@y 002C                          ??_PIN_MANAGER_IOC 0007  
                                _vfpfcnvrt 00C0                   TMR0_ReadTimer@readValLow 0007  
                                _xtoa$1768 0060                                  _xtoa$1769 0062  
                                 _SPI_Open 5622                          ??_TMR1_Initialize 000B  
                         __size_of_ADC_ISR 0030                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 000B                                 ?_led_inter 0001  
                         __CFG_SOSCSEL$DIG 000000                 __size_of_lcd_draw_pixel_at 0032  
                  __end_of_lcd_draw_string 4B18             ??_TMR2_DefaultInterruptHandler 0001  
        __size_of_TMR2_SetInterruptHandler 000A             ??_INT0_DefaultInterruptHandler 0001  
                ?_TMR2_SetInterruptHandler 000B                               _isspace$2406 0011  
                                msDelay@ms 000C                                 vfpfcnvrt@c 00BD  
                               vfpfcnvrt@f 00AC                                _INTCON2bits 000FF1  
                                copy_data0 5992                      ?_INTERRUPT_Initialize 0001  
                 _INT0_SetInterruptHandler 6184                                  _vsnprintf 4C3E  
                        ??_TMR2_Initialize 000D                             ?_TMR2_CallBack 0001  
                      lcd_draw_pixel@color 000E                                   __Hrparam 0000  
                               vfprintf@ap 00CA                                   __Lrparam 0000  
                               vfprintf@fp 00C6                          _ADC_GetConversion 5CE4  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 000B                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0001                          ??_TMR0_StartTimer 0001  
                         __size_of___aldiv 010C                           __size_of___aodiv 0188  
                   __size_of_lcd_draw_line 0168                           __size_of___fladd 04C0  
                         __size_of___aomod 0164                           __size_of___fldiv 039A  
                         __size_of___awdiv 00C4                           __size_of___flneg 0038  
                         __size_of___awmod 00B0                                vsnprintf@ap 00D4  
                         __size_of___flmul 042A                           __size_of___flsub 0046  
                         __size_of___fltol 0106                           __size_of___lodiv 00F0  
                         __size_of___lomod 00D0                                 ?_vfpfcnvrt 0098  
                               snprintf@ap 00E6                            ___aodiv@divisor 0013  
                          ___aodiv@counter 001B                     _IOCB4_InterruptHandler 00FC  
                           _lcd_draw_pixel 6116                         ___fpclassifyf@F463 0104  
                      ??_ADC_GetConversion 0003                           __size_of_msDelay 002E  
                                 ___xxtofl 3F48                         lcd_draw_line@color 0022  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 5252                                   __ptext11 5162  
                                 __ptext20 5064                                   __ptext12 4B18  
                                 __ptext21 4E5A                                   __ptext13 441E  
                               _T1GCONbits 000FAA                                   __ptext30 53EC  
                                 __ptext22 5B14                                   __ptext14 3D5E  
                                 __ptext31 3442                                   __ptext23 215A  
                                 __ptext15 15A8                                   __ptext40 61BE  
                                 __ptext32 5C68                                   __ptext24 5D8E  
                                 __ptext16 5862                                   __ptext41 40FC  
                                 __ptext33 4882                                   __ptext25 261A  
                                 __ptext17 5D56                                   __ptext50 471A  
                                 __ptext42 5A32                                   __ptext34 4296  
                                 __ptext26 4F60                                   __ptext18 5920  
                                 __ptext51 5E34                                   __ptext43 5DC6  
                                 __ptext35 59D8                                   __ptext27 56D2  
                                 __ptext19 394C                                   __ptext60 6024  
                                 __ptext52 5BE4                                   __ptext44 5FFE  
                                 __ptext36 54B0                                   __ptext28 2A44  
                                 __ptext61 6090                                   __ptext53 5A84  
                                 __ptext45 2DDE                                   __ptext37 5DFE  
                                 __ptext29 5572                                   __ptext70 612C  
                                 __ptext62 6170                                   __ptext54 5ACC  
                                 __ptext46 5EC6                                   __ptext38 5BA0  
                                 __ptext71 6184                                   __ptext63 5F7E  
                                 __ptext55 6116                                   __ptext47 577C  
                                 __ptext39 5322                                   __ptext80 60FE  
                                 __ptext72 604A                                   __ptext64 5FAA  
                                 __ptext56 60E6                                   __ptext48 49E6  
                                 __ptext81 5F22                                   __ptext73 618E  
                                 __ptext65 6140                                   __ptext57 60CC  
                                 __ptext49 45A0                                   __ptext90 61B6  
                                 __ptext82 61C2                                   __ptext74 5622  
                                 __ptext66 5B5A                                   __ptext58 3F48  
                                 __ptext91 61BA                                   __ptext83 5C26  
                                 __ptext67 617A                                   __ptext59 4D4E  
                                 __ptext92 60AE                                   __ptext84 5CE4  
                                 __ptext76 5FD4                                   __ptext68 6152  
                                 __ptext93 5E96                                   __ptext85 61A2  
                                 __ptext77 5EF4                                   __ptext69 61B2  
                                 __ptext94 61C6                                   __ptext86 5F50  
                                 __ptext78 61C0                                   __ptext95 0000  
                                 __ptext87 61C4                                   __ptext79 6164  
                                 __ptext88 606E                                   __ptext89 6198  
                         __size_of_isupper 0038                                   _lcd_fill 577C  
                                 _lcd_init 2DDE                                   _lcd_send 60E6  
                         __size_of_tolower 0060                    TMR0_WriteTimer@timerVal 0001  
                        ??_TMR0_WriteTimer 0003                                 strcpy@dest 000B  
                         __size_of_strncmp 0126                           __size_of_toupper 005E  
                               ?_vsnprintf 00CE                              __size_of_atoi 019A  
                            __size_of_ctoa 005A                              __size_of_main 022C  
                            __size_of_dtoa 02DE                              __size_of_otoa 01EA  
                            __size_of_stoa 0182                              __size_of_utoa 0200  
                         ??_TMR0_ReadTimer 0003                              __size_of_xtoa 02DE  
                __end_of_ADC_GetConversion 5D1E                                   efgtoa@fp 003E  
                                 efgtoa@ne 0076                                   efgtoa@pp 0072  
                                 efgtoa@ou 0060                                  stoa@F1174 01CE  
                    lcd_draw_char@bg_color 001C                                   int$flags 0054  
                                 _vfprintf 57FE                      lcd_draw_char@fg_color 001A  
       __end_of_INTERRUPT_InterruptManager 00BC                 _INTERRUPT_InterruptManager 0008  
                   __end_of_lcd_draw_pixel 612C                                   _snprintf 5E66  
                              _percentagem 00E8                   __end_of_lcd_set_cursor_x 5B14  
                 __end_of_lcd_set_cursor_y 5ACC                        __CFG_INTOSCSEL$HIGH 000000  
                                 msDelay@k 000D                                ??_led_inter 0001  
                         ___aomod@dividend 000B                             _vfpfcnvrt$1805 00AA  
                           _vfpfcnvrt$1783 00A6                             _vfpfcnvrt$1784 00A8  
                               _INTCONbits 000FF2                              fp__acende_led 0000  
                         ?_lcd_draw_string 002A                                   isalpha@c 000B  
                                 isdigit@c 000B                     ??_INTERRUPT_Initialize 000B  
                       lcd_draw_pixel_at@x 0014                         lcd_draw_pixel_at@y 0016  
                               vsnprintf@f 00DE                                 vsnprintf@n 00D0  
                               vsnprintf@s 00CE                         _EXT_INT_Initialize 612C  
                 ?_ADC_SetInterruptHandler 000B                              _lcd_draw_char 45A0  
                                snprintf@n 01BE                                  snprintf@s 01BC  
                            _lcd_draw_line 471A                                   intlevel2 0000  
                           _lcd_set_cursor 5BE4                           ??_TMR0_StopTimer 0001  
                          ??_TMR2_CallBack 0001                          lcd_set_cursor_x@x 000E  
                        lcd_set_cursor_y@y 000E                                   islower@c 000B  
                                 isspace@c 000B                    ?_PIN_MANAGER_Initialize 0001  
                      ?_EXT_INT_Initialize 0001                                  strcpy@src 000D  
                                 isupper@c 000B                                  strncmp@_l 000B  
                                strncmp@_r 000D                           ??_ADC_Initialize 000D  
                   __size_of_INT0_CallBack 002E                           _SPI_ExchangeByte 60CC  
                  lcd_draw_string@bg_color 0032                                efgtoa@nmode 007E  
                       __CFG_WDTPS$1048576 000000                            ___aomod@divisor 0013  
                  lcd_draw_string@fg_color 0030                            ?_lcd_draw_pixel 000E  
                              ??_vfpfcnvrt 009E                                   stoa@nuls 0019  
                          ___aomod@counter 001B                       ??_EXT_INT_Initialize 000D  
                                 tolower@c 0011                             _vsnprintf$2536 00DA  
                   __size_of___fpclassifyf 00FE                      TMR2_ISR@CountCallBack 0052  
                          _TMR0_Initialize 5FAA                                   strncmp@l 0012  
                                 strncmp@n 000F                                   strncmp@r 0014  
                                 toupper@c 0011                               ___aldiv@sign 0014  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 5C26  
                           ?_lcd_draw_char 0014                             ?_lcd_draw_line 001A  
                            ___fladd@signs 0017                               ___aodiv@sign 001C  
           __end_of_PIN_MANAGER_Initialize 5BA0                                ??_vsnprintf 00D6  
                             ___fladd@aexp 0018                               ___fladd@bexp 0019  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 60FE  
                    _TMR2_InterruptHandler 01C8                 __size_of_ADC_GetConversion 003A  
                             fp__led_inter 0000                               ___aomod@sign 001C  
                          _TMR1_Initialize 5F7E  
