

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 14 13:41:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.10
    84                           ; Generated 31/07/2019 GMT
    85                           ; 
    86                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F46K80 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  0039C2                     __pidataBANK0:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for stoa@F1152
   123  0039C2  28                 	db	40
   124  0039C3  6E                 	db	110
   125  0039C4  75                 	db	117
   126  0039C5  6C                 	db	108
   127  0039C6  6C                 	db	108
   128  0039C7  29                 	db	41
   129  0039C8  00                 	db	0
   130                           
   131                           	psect	mediumconst
   132  00F1C0                     __pmediumconst:
   133                           	opt callstack 0
   134  00F1C0  00                 	db	0
   135  00F1C1                     _font:
   136                           	opt callstack 0
   137  00F1C1  0004               	dw	4
   138  00F1C3  0000               	dw	0
   139  00F1C5  0000               	dw	0
   140  00F1C7  0000               	dw	0
   141  00F1C9  0000               	dw	0
   142  00F1CB  0000               	dw	0
   143  00F1CD  0000               	dw	0
   144  00F1CF  0000               	dw	0
   145  00F1D1  0000               	dw	0
   146  00F1D3  0003               	dw	3
   147  00F1D5  0000               	dw	0
   148  00F1D7  0000               	dw	0
   149  00F1D9  00FE               	dw	254
   150  00F1DB  001B               	dw	27
   151  00F1DD  0000               	dw	0
   152  00F1DF  0000               	dw	0
   153  00F1E1  0005               	dw	5
   154  00F1E3  001E               	dw	30
   155  00F1E5  0000               	dw	0
   156  00F1E7  0000               	dw	0
   157  00F1E9  0000               	dw	0
   158  00F1EB  0000               	dw	0
   159  00F1ED  0000               	dw	0
   160  00F1EF  001E               	dw	30
   161  00F1F1  0000               	dw	0
   162  00F1F3  0000               	dw	0
   163  00F1F5  0000               	dw	0
   164  00F1F7  000B               	dw	11
   165  00F1F9  0000               	dw	0
   166  00F1FB  0000               	dw	0
   167  00F1FD  0010               	dw	16
   168  00F1FF  0001               	dw	1
   169  00F201  0010               	dw	16
   170  00F203  001D               	dw	29
   171  00F205  00F0               	dw	240
   172  00F207  0003               	dw	3
   173  00F209  001E               	dw	30
   174  00F20B  0001               	dw	1
   175  00F20D  0010               	dw	16
   176  00F20F  0001               	dw	1
   177  00F211  0010               	dw	16
   178  00F213  001D               	dw	29
   179  00F215  00F0               	dw	240
   180  00F217  0003               	dw	3
   181  00F219  001E               	dw	30
   182  00F21B  0001               	dw	1
   183  00F21D  0010               	dw	16
   184  00F21F  0001               	dw	1
   185  00F221  0000               	dw	0
   186  00F223  0000               	dw	0
   187  00F225  0009               	dw	9
   188  00F227  0000               	dw	0
   189  00F229  0004               	dw	4
   190  00F22B  001C               	dw	28
   191  00F22D  0008               	dw	8
   192  00F22F  0022               	dw	34
   193  00F231  0010               	dw	16
   194  00F233  0042               	dw	66
   195  00F235  0010               	dw	16
   196  00F237  00FF               	dw	255
   197  00F239  007F               	dw	127
   198  00F23B  0042               	dw	66
   199  00F23D  0010               	dw	16
   200  00F23F  0084               	dw	132
   201  00F241  0010               	dw	16
   202  00F243  0000               	dw	0
   203  00F245  000F               	dw	15
   204  00F247  0000               	dw	0
   205  00F249  0000               	dw	0
   206  00F24B  000C               	dw	12
   207  00F24D  001C               	dw	28
   208  00F24F  0000               	dw	0
   209  00F251  0022               	dw	34
   210  00F253  0010               	dw	16
   211  00F255  0022               	dw	34
   212  00F257  0008               	dw	8
   213  00F259  0022               	dw	34
   214  00F25B  0006               	dw	6
   215  00F25D  001C               	dw	28
   216  00F25F  0001               	dw	1
   217  00F261  00C0               	dw	192
   218  00F263  0000               	dw	0
   219  00F265  0020               	dw	32
   220  00F267  000E               	dw	14
   221  00F269  0018               	dw	24
   222  00F26B  0011               	dw	17
   223  00F26D  0004               	dw	4
   224  00F26F  0011               	dw	17
   225  00F271  0002               	dw	2
   226  00F273  0011               	dw	17
   227  00F275  0000               	dw	0
   228  00F277  000E               	dw	14
   229  00F279  0000               	dw	0
   230  00F27B  0000               	dw	0
   231  00F27D  000B               	dw	11
   232  00F27F  0000               	dw	0
   233  00F281  0000               	dw	0
   234  00F283  0000               	dw	0
   235  00F285  000E               	dw	14
   236  00F287  001C               	dw	28
   237  00F289  0011               	dw	17
   238  00F28B  00A2               	dw	162
   239  00F28D  0010               	dw	16
   240  00F28F  00C2               	dw	194
   241  00F291  0010               	dw	16
   242  00F293  0022               	dw	34
   243  00F295  0011               	dw	17
   244  00F297  001C               	dw	28
   245  00F299  000A               	dw	10
   246  00F29B  0000               	dw	0
   247  00F29D  000C               	dw	12
   248  00F29F  0000               	dw	0
   249  00F2A1  000C               	dw	12
   250  00F2A3  0000               	dw	0
   251  00F2A5  0012               	dw	18
   252  00F2A7  0000               	dw	0
   253  00F2A9  0000               	dw	0
   254  00F2AB  0003               	dw	3
   255  00F2AD  0000               	dw	0
   256  00F2AF  0000               	dw	0
   257  00F2B1  001E               	dw	30
   258  00F2B3  0000               	dw	0
   259  00F2B5  0000               	dw	0
   260  00F2B7  0000               	dw	0
   261  00F2B9  0006               	dw	6
   262  00F2BB  0000               	dw	0
   263  00F2BD  0000               	dw	0
   264  00F2BF  0000               	dw	0
   265  00F2C1  0000               	dw	0
   266  00F2C3  00E0               	dw	224
   267  00F2C5  001F               	dw	31
   268  00F2C7  001C               	dw	28
   269  00F2C9  0060               	dw	96
   270  00F2CB  0002               	dw	2
   271  00F2CD  0080               	dw	128
   272  00F2CF  0000               	dw	0
   273  00F2D1  0000               	dw	0
   274  00F2D3  0004               	dw	4
   275  00F2D5  0000               	dw	0
   276  00F2D7  0000               	dw	0
   277  00F2D9  0006               	dw	6
   278  00F2DB  00C0               	dw	192
   279  00F2DD  00F8               	dw	248
   280  00F2DF  003F               	dw	63
   281  00F2E1  0000               	dw	0
   282  00F2E3  0000               	dw	0
   283  00F2E5  0006               	dw	6
   284  00F2E7  0024               	dw	36
   285  00F2E9  0000               	dw	0
   286  00F2EB  0018               	dw	24
   287  00F2ED  0000               	dw	0
   288  00F2EF  007E               	dw	126
   289  00F2F1  0000               	dw	0
   290  00F2F3  0018               	dw	24
   291  00F2F5  0000               	dw	0
   292  00F2F7  0024               	dw	36
   293  00F2F9  0000               	dw	0
   294  00F2FB  0000               	dw	0
   295  00F2FD  0000               	dw	0
   296  00F2FF  0009               	dw	9
   297  00F301  0000               	dw	0
   298  00F303  0000               	dw	0
   299  00F305  0080               	dw	128
   300  00F307  0000               	dw	0
   301  00F309  0080               	dw	128
   302  00F30B  0000               	dw	0
   303  00F30D  0080               	dw	128
   304  00F30F  0000               	dw	0
   305  00F311  00F0               	dw	240
   306  00F313  0007               	dw	7
   307  00F315  0080               	dw	128
   308  00F317  0000               	dw	0
   309  00F319  0080               	dw	128
   310  00F31B  0000               	dw	0
   311  00F31D  0080               	dw	128
   312  00F31F  0000               	dw	0
   313  00F321  0000               	dw	0
   314  00F323  0000               	dw	0
   315  00F325  0004               	dw	4
   316  00F327  0000               	dw	0
   317  00F329  0000               	dw	0
   318  00F32B  0000               	dw	0
   319  00F32D  0060               	dw	96
   320  00F32F  0000               	dw	0
   321  00F331  0018               	dw	24
   322  00F333  0000               	dw	0
   323  00F335  0000               	dw	0
   324  00F337  0005               	dw	5
   325  00F339  0000               	dw	0
   326  00F33B  0001               	dw	1
   327  00F33D  0000               	dw	0
   328  00F33F  0001               	dw	1
   329  00F341  0000               	dw	0
   330  00F343  0001               	dw	1
   331  00F345  0000               	dw	0
   332  00F347  0001               	dw	1
   333  00F349  0000               	dw	0
   334  00F34B  0000               	dw	0
   335  00F34D  0004               	dw	4
   336  00F34F  0000               	dw	0
   337  00F351  0000               	dw	0
   338  00F353  0000               	dw	0
   339  00F355  0018               	dw	24
   340  00F357  0000               	dw	0
   341  00F359  0018               	dw	24
   342  00F35B  0000               	dw	0
   343  00F35D  0000               	dw	0
   344  00F35F  0008               	dw	8
   345  00F361  0000               	dw	0
   346  00F363  0000               	dw	0
   347  00F365  0000               	dw	0
   348  00F367  0040               	dw	64
   349  00F369  0000               	dw	0
   350  00F36B  0038               	dw	56
   351  00F36D  0000               	dw	0
   352  00F36F  0007               	dw	7
   353  00F371  00E0               	dw	224
   354  00F373  0000               	dw	0
   355  00F375  001C               	dw	28
   356  00F377  0000               	dw	0
   357  00F379  0002               	dw	2
   358  00F37B  0000               	dw	0
   359  00F37D  0000               	dw	0
   360  00F37F  0000               	dw	0
   361  00F381  0009               	dw	9
   362  00F383  00F8               	dw	248
   363  00F385  0007               	dw	7
   364  00F387  0004               	dw	4
   365  00F389  0008               	dw	8
   366  00F38B  0002               	dw	2
   367  00F38D  0010               	dw	16
   368  00F38F  0002               	dw	2
   369  00F391  0010               	dw	16
   370  00F393  0002               	dw	2
   371  00F395  0010               	dw	16
   372  00F397  0002               	dw	2
   373  00F399  0010               	dw	16
   374  00F39B  0004               	dw	4
   375  00F39D  0008               	dw	8
   376  00F39F  00F8               	dw	248
   377  00F3A1  0007               	dw	7
   378  00F3A3  0000               	dw	0
   379  00F3A5  0000               	dw	0
   380  00F3A7  0006               	dw	6
   381  00F3A9  0000               	dw	0
   382  00F3AB  0000               	dw	0
   383  00F3AD  0000               	dw	0
   384  00F3AF  0000               	dw	0
   385  00F3B1  0002               	dw	2
   386  00F3B3  0000               	dw	0
   387  00F3B5  0002               	dw	2
   388  00F3B7  0000               	dw	0
   389  00F3B9  00FE               	dw	254
   390  00F3BB  001F               	dw	31
   391  00F3BD  0000               	dw	0
   392  00F3BF  0000               	dw	0
   393  00F3C1  0009               	dw	9
   394  00F3C3  0018               	dw	24
   395  00F3C5  0010               	dw	16
   396  00F3C7  0004               	dw	4
   397  00F3C9  0018               	dw	24
   398  00F3CB  0002               	dw	2
   399  00F3CD  0014               	dw	20
   400  00F3CF  0002               	dw	2
   401  00F3D1  0012               	dw	18
   402  00F3D3  0002               	dw	2
   403  00F3D5  0011               	dw	17
   404  00F3D7  0082               	dw	130
   405  00F3D9  0010               	dw	16
   406  00F3DB  0044               	dw	68
   407  00F3DD  0010               	dw	16
   408  00F3DF  0038               	dw	56
   409  00F3E1  0010               	dw	16
   410  00F3E3  0000               	dw	0
   411  00F3E5  0000               	dw	0
   412  00F3E7  0009               	dw	9
   413  00F3E9  0008               	dw	8
   414  00F3EB  000C               	dw	12
   415  00F3ED  0004               	dw	4
   416  00F3EF  0010               	dw	16
   417  00F3F1  0002               	dw	2
   418  00F3F3  0010               	dw	16
   419  00F3F5  0042               	dw	66
   420  00F3F7  0010               	dw	16
   421  00F3F9  0042               	dw	66
   422  00F3FB  0010               	dw	16
   423  00F3FD  0044               	dw	68
   424  00F3FF  0010               	dw	16
   425  00F401  00B8               	dw	184
   426  00F403  0008               	dw	8
   427  00F405  0000               	dw	0
   428  00F407  0007               	dw	7
   429  00F409  0000               	dw	0
   430  00F40B  0000               	dw	0
   431  00F40D  0009               	dw	9
   432  00F40F  0000               	dw	0
   433  00F411  0002               	dw	2
   434  00F413  0000               	dw	0
   435  00F415  0003               	dw	3
   436  00F417  0080               	dw	128
   437  00F419  0002               	dw	2
   438  00F41B  0060               	dw	96
   439  00F41D  0002               	dw	2
   440  00F41F  0010               	dw	16
   441  00F421  0002               	dw	2
   442  00F423  0008               	dw	8
   443  00F425  0002               	dw	2
   444  00F427  00FE               	dw	254
   445  00F429  001F               	dw	31
   446  00F42B  0000               	dw	0
   447  00F42D  0002               	dw	2
   448  00F42F  0000               	dw	0
   449  00F431  0000               	dw	0
   450  00F433  0009               	dw	9
   451  00F435  0000               	dw	0
   452  00F437  0004               	dw	4
   453  00F439  0070               	dw	112
   454  00F43B  0008               	dw	8
   455  00F43D  002E               	dw	46
   456  00F43F  0010               	dw	16
   457  00F441  0022               	dw	34
   458  00F443  0010               	dw	16
   459  00F445  0022               	dw	34
   460  00F447  0010               	dw	16
   461  00F449  0022               	dw	34
   462  00F44B  0010               	dw	16
   463  00F44D  0042               	dw	66
   464  00F44F  0008               	dw	8
   465  00F451  0082               	dw	130
   466  00F453  0007               	dw	7
   467  00F455  0000               	dw	0
   468  00F457  0000               	dw	0
   469  00F459  0009               	dw	9
   470  00F45B  0000               	dw	0
   471  00F45D  0000               	dw	0
   472  00F45F  0000               	dw	0
   473  00F461  0007               	dw	7
   474  00F463  00C0               	dw	192
   475  00F465  0008               	dw	8
   476  00F467  0060               	dw	96
   477  00F469  0010               	dw	16
   478  00F46B  0058               	dw	88
   479  00F46D  0010               	dw	16
   480  00F46F  0044               	dw	68
   481  00F471  0010               	dw	16
   482  00F473  0082               	dw	130
   483  00F475  0008               	dw	8
   484  00F477  0000               	dw	0
   485  00F479  0007               	dw	7
   486  00F47B  0000               	dw	0
   487  00F47D  0000               	dw	0
   488  00F47F  0009               	dw	9
   489  00F481  0000               	dw	0
   490  00F483  0000               	dw	0
   491  00F485  0002               	dw	2
   492  00F487  0010               	dw	16
   493  00F489  0002               	dw	2
   494  00F48B  000C               	dw	12
   495  00F48D  0002               	dw	2
   496  00F48F  0003               	dw	3
   497  00F491  00C2               	dw	194
   498  00F493  0000               	dw	0
   499  00F495  0032               	dw	50
   500  00F497  0000               	dw	0
   501  00F499  000E               	dw	14
   502  00F49B  0000               	dw	0
   503  00F49D  0002               	dw	2
   504  00F49F  0000               	dw	0
   505  00F4A1  0000               	dw	0
   506  00F4A3  0000               	dw	0
   507  00F4A5  0009               	dw	9
   508  00F4A7  0000               	dw	0
   509  00F4A9  0007               	dw	7
   510  00F4AB  0098               	dw	152
   511  00F4AD  0008               	dw	8
   512  00F4AF  0064               	dw	100
   513  00F4B1  0010               	dw	16
   514  00F4B3  0042               	dw	66
   515  00F4B5  0010               	dw	16
   516  00F4B7  0042               	dw	66
   517  00F4B9  0010               	dw	16
   518  00F4BB  0064               	dw	100
   519  00F4BD  0010               	dw	16
   520  00F4BF  0098               	dw	152
   521  00F4C1  0008               	dw	8
   522  00F4C3  0000               	dw	0
   523  00F4C5  0007               	dw	7
   524  00F4C7  0000               	dw	0
   525  00F4C9  0000               	dw	0
   526  00F4CB  0009               	dw	9
   527  00F4CD  0000               	dw	0
   528  00F4CF  0000               	dw	0
   529  00F4D1  0038               	dw	56
   530  00F4D3  0000               	dw	0
   531  00F4D5  0044               	dw	68
   532  00F4D7  0010               	dw	16
   533  00F4D9  0082               	dw	130
   534  00F4DB  0008               	dw	8
   535  00F4DD  0082               	dw	130
   536  00F4DF  0004               	dw	4
   537  00F4E1  0082               	dw	130
   538  00F4E3  0003               	dw	3
   539  00F4E5  0084               	dw	132
   540  00F4E7  0000               	dw	0
   541  00F4E9  0078               	dw	120
   542  00F4EB  0000               	dw	0
   543  00F4ED  0000               	dw	0
   544  00F4EF  0000               	dw	0
   545  00F4F1  0004               	dw	4
   546  00F4F3  0000               	dw	0
   547  00F4F5  0000               	dw	0
   548  00F4F7  0030               	dw	48
   549  00F4F9  0018               	dw	24
   550  00F4FB  0030               	dw	48
   551  00F4FD  0018               	dw	24
   552  00F4FF  0000               	dw	0
   553  00F501  0000               	dw	0
   554  00F503  0004               	dw	4
   555  00F505  0000               	dw	0
   556  00F507  0000               	dw	0
   557  00F509  0030               	dw	48
   558  00F50B  0060               	dw	96
   559  00F50D  0030               	dw	48
   560  00F50F  0018               	dw	24
   561  00F511  0000               	dw	0
   562  00F513  0000               	dw	0
   563  00F515  000A               	dw	10
   564  00F517  0000               	dw	0
   565  00F519  0000               	dw	0
   566  00F51B  0080               	dw	128
   567  00F51D  0000               	dw	0
   568  00F51F  0080               	dw	128
   569  00F521  0000               	dw	0
   570  00F523  0040               	dw	64
   571  00F525  0001               	dw	1
   572  00F527  0020               	dw	32
   573  00F529  0002               	dw	2
   574  00F52B  0020               	dw	32
   575  00F52D  0002               	dw	2
   576  00F52F  0010               	dw	16
   577  00F531  0004               	dw	4
   578  00F533  0010               	dw	16
   579  00F535  0004               	dw	4
   580  00F537  0008               	dw	8
   581  00F539  0008               	dw	8
   582  00F53B  0000               	dw	0
   583  00F53D  0000               	dw	0
   584  00F53F  000A               	dw	10
   585  00F541  0000               	dw	0
   586  00F543  0000               	dw	0
   587  00F545  0020               	dw	32
   588  00F547  0001               	dw	1
   589  00F549  0020               	dw	32
   590  00F54B  0001               	dw	1
   591  00F54D  0020               	dw	32
   592  00F54F  0001               	dw	1
   593  00F551  0020               	dw	32
   594  00F553  0001               	dw	1
   595  00F555  0020               	dw	32
   596  00F557  0001               	dw	1
   597  00F559  0020               	dw	32
   598  00F55B  0001               	dw	1
   599  00F55D  0020               	dw	32
   600  00F55F  0001               	dw	1
   601  00F561  0020               	dw	32
   602  00F563  0001               	dw	1
   603  00F565  0000               	dw	0
   604  00F567  0000               	dw	0
   605  00F569  000A               	dw	10
   606  00F56B  0000               	dw	0
   607  00F56D  0000               	dw	0
   608  00F56F  0008               	dw	8
   609  00F571  0008               	dw	8
   610  00F573  0010               	dw	16
   611  00F575  0004               	dw	4
   612  00F577  0010               	dw	16
   613  00F579  0004               	dw	4
   614  00F57B  0020               	dw	32
   615  00F57D  0002               	dw	2
   616  00F57F  0020               	dw	32
   617  00F581  0002               	dw	2
   618  00F583  0040               	dw	64
   619  00F585  0001               	dw	1
   620  00F587  0080               	dw	128
   621  00F589  0000               	dw	0
   622  00F58B  0080               	dw	128
   623  00F58D  0000               	dw	0
   624  00F58F  0000               	dw	0
   625  00F591  0000               	dw	0
   626  00F593  0008               	dw	8
   627  00F595  0000               	dw	0
   628  00F597  0000               	dw	0
   629  00F599  000C               	dw	12
   630  00F59B  0000               	dw	0
   631  00F59D  0082               	dw	130
   632  00F59F  0001               	dw	1
   633  00F5A1  0042               	dw	66
   634  00F5A3  0002               	dw	2
   635  00F5A5  0022               	dw	34
   636  00F5A7  001A               	dw	26
   637  00F5A9  0022               	dw	34
   638  00F5AB  001A               	dw	26
   639  00F5AD  009C               	dw	156
   640  00F5AF  0001               	dw	1
   641  00F5B1  0000               	dw	0
   642  00F5B3  0000               	dw	0
   643  00F5B5  000E               	dw	14
   644  00F5B7  0000               	dw	0
   645  00F5B9  0000               	dw	0
   646  00F5BB  00F0               	dw	240
   647  00F5BD  0003               	dw	3
   648  00F5BF  0008               	dw	8
   649  00F5C1  0004               	dw	4
   650  00F5C3  0004               	dw	4
   651  00F5C5  0008               	dw	8
   652  00F5C7  00C2               	dw	194
   653  00F5C9  0011               	dw	17
   654  00F5CB  0022               	dw	34
   655  00F5CD  0012               	dw	18
   656  00F5CF  0012               	dw	18
   657  00F5D1  0012               	dw	18
   658  00F5D3  0012               	dw	18
   659  00F5D5  0012               	dw	18
   660  00F5D7  00E2               	dw	226
   661  00F5D9  0011               	dw	17
   662  00F5DB  0012               	dw	18
   663  00F5DD  0012               	dw	18
   664  00F5DF  0004               	dw	4
   665  00F5E1  0012               	dw	18
   666  00F5E3  0008               	dw	8
   667  00F5E5  0009               	dw	9
   668  00F5E7  00F0               	dw	240
   669  00F5E9  0004               	dw	4
   670  00F5EB  0000               	dw	0
   671  00F5ED  0000               	dw	0
   672  00F5EF  000D               	dw	13
   673  00F5F1  0000               	dw	0
   674  00F5F3  0000               	dw	0
   675  00F5F5  0000               	dw	0
   676  00F5F7  0010               	dw	16
   677  00F5F9  0000               	dw	0
   678  00F5FB  000E               	dw	14
   679  00F5FD  0080               	dw	128
   680  00F5FF  0001               	dw	1
   681  00F601  0060               	dw	96
   682  00F603  0001               	dw	1
   683  00F605  001C               	dw	28
   684  00F607  0001               	dw	1
   685  00F609  0002               	dw	2
   686  00F60B  0001               	dw	1
   687  00F60D  001C               	dw	28
   688  00F60F  0001               	dw	1
   689  00F611  0060               	dw	96
   690  00F613  0001               	dw	1
   691  00F615  0080               	dw	128
   692  00F617  0001               	dw	1
   693  00F619  0000               	dw	0
   694  00F61B  000E               	dw	14
   695  00F61D  0000               	dw	0
   696  00F61F  0010               	dw	16
   697  00F621  0000               	dw	0
   698  00F623  0000               	dw	0
   699  00F625  0009               	dw	9
   700  00F627  0000               	dw	0
   701  00F629  0000               	dw	0
   702  00F62B  0000               	dw	0
   703  00F62D  0000               	dw	0
   704  00F62F  00FE               	dw	254
   705  00F631  001F               	dw	31
   706  00F633  0042               	dw	66
   707  00F635  0010               	dw	16
   708  00F637  0042               	dw	66
   709  00F639  0010               	dw	16
   710  00F63B  0064               	dw	100
   711  00F63D  0010               	dw	16
   712  00F63F  0098               	dw	152
   713  00F641  0008               	dw	8
   714  00F643  0000               	dw	0
   715  00F645  0007               	dw	7
   716  00F647  0000               	dw	0
   717  00F649  0000               	dw	0
   718  00F64B  000D               	dw	13
   719  00F64D  0000               	dw	0
   720  00F64F  0000               	dw	0
   721  00F651  00F0               	dw	240
   722  00F653  0003               	dw	3
   723  00F655  0008               	dw	8
   724  00F657  0004               	dw	4
   725  00F659  0004               	dw	4
   726  00F65B  0008               	dw	8
   727  00F65D  0002               	dw	2
   728  00F65F  0010               	dw	16
   729  00F661  0002               	dw	2
   730  00F663  0010               	dw	16
   731  00F665  0002               	dw	2
   732  00F667  0010               	dw	16
   733  00F669  0002               	dw	2
   734  00F66B  0010               	dw	16
   735  00F66D  0002               	dw	2
   736  00F66F  0010               	dw	16
   737  00F671  0004               	dw	4
   738  00F673  0008               	dw	8
   739  00F675  0004               	dw	4
   740  00F677  0008               	dw	8
   741  00F679  0008               	dw	8
   742  00F67B  0004               	dw	4
   743  00F67D  0000               	dw	0
   744  00F67F  0000               	dw	0
   745  00F681  000C               	dw	12
   746  00F683  0000               	dw	0
   747  00F685  0000               	dw	0
   748  00F687  0000               	dw	0
   749  00F689  0000               	dw	0
   750  00F68B  00FE               	dw	254
   751  00F68D  001F               	dw	31
   752  00F68F  0002               	dw	2
   753  00F691  0010               	dw	16
   754  00F693  0002               	dw	2
   755  00F695  0010               	dw	16
   756  00F697  0002               	dw	2
   757  00F699  0010               	dw	16
   758  00F69B  0002               	dw	2
   759  00F69D  0010               	dw	16
   760  00F69F  0002               	dw	2
   761  00F6A1  0010               	dw	16
   762  00F6A3  0004               	dw	4
   763  00F6A5  0008               	dw	8
   764  00F6A7  0008               	dw	8
   765  00F6A9  0004               	dw	4
   766  00F6AB  00F0               	dw	240
   767  00F6AD  0003               	dw	3
   768  00F6AF  0000               	dw	0
   769  00F6B1  0000               	dw	0
   770  00F6B3  0009               	dw	9
   771  00F6B5  0000               	dw	0
   772  00F6B7  0000               	dw	0
   773  00F6B9  0000               	dw	0
   774  00F6BB  0000               	dw	0
   775  00F6BD  00FE               	dw	254
   776  00F6BF  001F               	dw	31
   777  00F6C1  0042               	dw	66
   778  00F6C3  0010               	dw	16
   779  00F6C5  0042               	dw	66
   780  00F6C7  0010               	dw	16
   781  00F6C9  0042               	dw	66
   782  00F6CB  0010               	dw	16
   783  00F6CD  0042               	dw	66
   784  00F6CF  0010               	dw	16
   785  00F6D1  0042               	dw	66
   786  00F6D3  0010               	dw	16
   787  00F6D5  0000               	dw	0
   788  00F6D7  0000               	dw	0
   789  00F6D9  0008               	dw	8
   790  00F6DB  0000               	dw	0
   791  00F6DD  0000               	dw	0
   792  00F6DF  0000               	dw	0
   793  00F6E1  0000               	dw	0
   794  00F6E3  00FE               	dw	254
   795  00F6E5  001F               	dw	31
   796  00F6E7  0042               	dw	66
   797  00F6E9  0000               	dw	0
   798  00F6EB  0042               	dw	66
   799  00F6ED  0000               	dw	0
   800  00F6EF  0042               	dw	66
   801  00F6F1  0000               	dw	0
   802  00F6F3  0042               	dw	66
   803  00F6F5  0000               	dw	0
   804  00F6F7  0000               	dw	0
   805  00F6F9  0000               	dw	0
   806  00F6FB  000E               	dw	14
   807  00F6FD  0000               	dw	0
   808  00F6FF  0000               	dw	0
   809  00F701  00F0               	dw	240
   810  00F703  0003               	dw	3
   811  00F705  0008               	dw	8
   812  00F707  0004               	dw	4
   813  00F709  0004               	dw	4
   814  00F70B  0008               	dw	8
   815  00F70D  0002               	dw	2
   816  00F70F  0010               	dw	16
   817  00F711  0002               	dw	2
   818  00F713  0010               	dw	16
   819  00F715  0002               	dw	2
   820  00F717  0010               	dw	16
   821  00F719  0002               	dw	2
   822  00F71B  0010               	dw	16
   823  00F71D  0082               	dw	130
   824  00F71F  0010               	dw	16
   825  00F721  0084               	dw	132
   826  00F723  0010               	dw	16
   827  00F725  0084               	dw	132
   828  00F727  0008               	dw	8
   829  00F729  0088               	dw	136
   830  00F72B  0004               	dw	4
   831  00F72D  0080               	dw	128
   832  00F72F  0003               	dw	3
   833  00F731  0000               	dw	0
   834  00F733  0000               	dw	0
   835  00F735  000A               	dw	10
   836  00F737  0000               	dw	0
   837  00F739  0000               	dw	0
   838  00F73B  0000               	dw	0
   839  00F73D  0000               	dw	0
   840  00F73F  00FE               	dw	254
   841  00F741  001F               	dw	31
   842  00F743  0040               	dw	64
   843  00F745  0000               	dw	0
   844  00F747  0040               	dw	64
   845  00F749  0000               	dw	0
   846  00F74B  0040               	dw	64
   847  00F74D  0000               	dw	0
   848  00F74F  0040               	dw	64
   849  00F751  0000               	dw	0
   850  00F753  0040               	dw	64
   851  00F755  0000               	dw	0
   852  00F757  00FE               	dw	254
   853  00F759  001F               	dw	31
   854  00F75B  0000               	dw	0
   855  00F75D  0000               	dw	0
   856  00F75F  0004               	dw	4
   857  00F761  0000               	dw	0
   858  00F763  0000               	dw	0
   859  00F765  0000               	dw	0
   860  00F767  0000               	dw	0
   861  00F769  00FE               	dw	254
   862  00F76B  001F               	dw	31
   863  00F76D  0000               	dw	0
   864  00F76F  0000               	dw	0
   865  00F771  0007               	dw	7
   866  00F773  0000               	dw	0
   867  00F775  0000               	dw	0
   868  00F777  0000               	dw	0
   869  00F779  0008               	dw	8
   870  00F77B  0000               	dw	0
   871  00F77D  0010               	dw	16
   872  00F77F  0000               	dw	0
   873  00F781  0010               	dw	16
   874  00F783  0000               	dw	0
   875  00F785  0008               	dw	8
   876  00F787  00FE               	dw	254
   877  00F789  0007               	dw	7
   878  00F78B  0000               	dw	0
   879  00F78D  0000               	dw	0
   880  00F78F  0009               	dw	9
   881  00F791  0000               	dw	0
   882  00F793  0000               	dw	0
   883  00F795  0000               	dw	0
   884  00F797  0000               	dw	0
   885  00F799  00FE               	dw	254
   886  00F79B  001F               	dw	31
   887  00F79D  0060               	dw	96
   888  00F79F  0000               	dw	0
   889  00F7A1  0090               	dw	144
   890  00F7A3  0001               	dw	1
   891  00F7A5  0008               	dw	8
   892  00F7A7  0002               	dw	2
   893  00F7A9  0004               	dw	4
   894  00F7AB  000C               	dw	12
   895  00F7AD  0002               	dw	2
   896  00F7AF  0010               	dw	16
   897  00F7B1  0000               	dw	0
   898  00F7B3  0000               	dw	0
   899  00F7B5  0008               	dw	8
   900  00F7B7  0000               	dw	0
   901  00F7B9  0000               	dw	0
   902  00F7BB  0000               	dw	0
   903  00F7BD  0000               	dw	0
   904  00F7BF  00FE               	dw	254
   905  00F7C1  001F               	dw	31
   906  00F7C3  0000               	dw	0
   907  00F7C5  0010               	dw	16
   908  00F7C7  0000               	dw	0
   909  00F7C9  0010               	dw	16
   910  00F7CB  0000               	dw	0
   911  00F7CD  0010               	dw	16
   912  00F7CF  0000               	dw	0
   913  00F7D1  0010               	dw	16
   914  00F7D3  0000               	dw	0
   915  00F7D5  0000               	dw	0
   916  00F7D7  000F               	dw	15
   917  00F7D9  0000               	dw	0
   918  00F7DB  0000               	dw	0
   919  00F7DD  0000               	dw	0
   920  00F7DF  001C               	dw	28
   921  00F7E1  00F8               	dw	248
   922  00F7E3  0003               	dw	3
   923  00F7E5  0006               	dw	6
   924  00F7E7  0000               	dw	0
   925  00F7E9  0038               	dw	56
   926  00F7EB  0000               	dw	0
   927  00F7ED  00C0               	dw	192
   928  00F7EF  0001               	dw	1
   929  00F7F1  0000               	dw	0
   930  00F7F3  000E               	dw	14
   931  00F7F5  0000               	dw	0
   932  00F7F7  0010               	dw	16
   933  00F7F9  0000               	dw	0
   934  00F7FB  000E               	dw	14
   935  00F7FD  00C0               	dw	192
   936  00F7FF  0001               	dw	1
   937  00F801  0038               	dw	56
   938  00F803  0000               	dw	0
   939  00F805  0006               	dw	6
   940  00F807  0000               	dw	0
   941  00F809  00F8               	dw	248
   942  00F80B  0003               	dw	3
   943  00F80D  0000               	dw	0
   944  00F80F  001C               	dw	28
   945  00F811  0000               	dw	0
   946  00F813  0000               	dw	0
   947  00F815  000B               	dw	11
   948  00F817  0000               	dw	0
   949  00F819  0000               	dw	0
   950  00F81B  0000               	dw	0
   951  00F81D  0000               	dw	0
   952  00F81F  00FE               	dw	254
   953  00F821  001F               	dw	31
   954  00F823  0008               	dw	8
   955  00F825  0000               	dw	0
   956  00F827  0030               	dw	48
   957  00F829  0000               	dw	0
   958  00F82B  0040               	dw	64
   959  00F82D  0000               	dw	0
   960  00F82F  0080               	dw	128
   961  00F831  0000               	dw	0
   962  00F833  0000               	dw	0
   963  00F835  0003               	dw	3
   964  00F837  0000               	dw	0
   965  00F839  0004               	dw	4
   966  00F83B  00FE               	dw	254
   967  00F83D  001F               	dw	31
   968  00F83F  0000               	dw	0
   969  00F841  0000               	dw	0
   970  00F843  000E               	dw	14
   971  00F845  0000               	dw	0
   972  00F847  0000               	dw	0
   973  00F849  00F0               	dw	240
   974  00F84B  0003               	dw	3
   975  00F84D  0008               	dw	8
   976  00F84F  0004               	dw	4
   977  00F851  0004               	dw	4
   978  00F853  0008               	dw	8
   979  00F855  0002               	dw	2
   980  00F857  0010               	dw	16
   981  00F859  0002               	dw	2
   982  00F85B  0010               	dw	16
   983  00F85D  0002               	dw	2
   984  00F85F  0010               	dw	16
   985  00F861  0002               	dw	2
   986  00F863  0010               	dw	16
   987  00F865  0002               	dw	2
   988  00F867  0010               	dw	16
   989  00F869  0002               	dw	2
   990  00F86B  0010               	dw	16
   991  00F86D  0004               	dw	4
   992  00F86F  0008               	dw	8
   993  00F871  0008               	dw	8
   994  00F873  0004               	dw	4
   995  00F875  00F0               	dw	240
   996  00F877  0003               	dw	3
   997  00F879  0000               	dw	0
   998  00F87B  0000               	dw	0
   999  00F87D  0009               	dw	9
  1000  00F87F  0000               	dw	0
  1001  00F881  0000               	dw	0
  1002  00F883  0000               	dw	0
  1003  00F885  0000               	dw	0
  1004  00F887  00FE               	dw	254
  1005  00F889  001F               	dw	31
  1006  00F88B  0042               	dw	66
  1007  00F88D  0000               	dw	0
  1008  00F88F  0042               	dw	66
  1009  00F891  0000               	dw	0
  1010  00F893  0042               	dw	66
  1011  00F895  0000               	dw	0
  1012  00F897  0024               	dw	36
  1013  00F899  0000               	dw	0
  1014  00F89B  0018               	dw	24
  1015  00F89D  0000               	dw	0
  1016  00F89F  0000               	dw	0
  1017  00F8A1  0000               	dw	0
  1018  00F8A3  000E               	dw	14
  1019  00F8A5  0000               	dw	0
  1020  00F8A7  0000               	dw	0
  1021  00F8A9  00F0               	dw	240
  1022  00F8AB  0003               	dw	3
  1023  00F8AD  0008               	dw	8
  1024  00F8AF  0004               	dw	4
  1025  00F8B1  0004               	dw	4
  1026  00F8B3  0008               	dw	8
  1027  00F8B5  0002               	dw	2
  1028  00F8B7  0010               	dw	16
  1029  00F8B9  0002               	dw	2
  1030  00F8BB  0010               	dw	16
  1031  00F8BD  0002               	dw	2
  1032  00F8BF  0010               	dw	16
  1033  00F8C1  0002               	dw	2
  1034  00F8C3  0011               	dw	17
  1035  00F8C5  0002               	dw	2
  1036  00F8C7  0012               	dw	18
  1037  00F8C9  0002               	dw	2
  1038  00F8CB  000C               	dw	12
  1039  00F8CD  0004               	dw	4
  1040  00F8CF  0008               	dw	8
  1041  00F8D1  0008               	dw	8
  1042  00F8D3  0016               	dw	22
  1043  00F8D5  00F0               	dw	240
  1044  00F8D7  0021               	dw	33
  1045  00F8D9  0000               	dw	0
  1046  00F8DB  0000               	dw	0
  1047  00F8DD  000A               	dw	10
  1048  00F8DF  0000               	dw	0
  1049  00F8E1  0000               	dw	0
  1050  00F8E3  0000               	dw	0
  1051  00F8E5  0000               	dw	0
  1052  00F8E7  00FE               	dw	254
  1053  00F8E9  001F               	dw	31
  1054  00F8EB  0042               	dw	66
  1055  00F8ED  0000               	dw	0
  1056  00F8EF  00C2               	dw	194
  1057  00F8F1  0000               	dw	0
  1058  00F8F3  0042               	dw	66
  1059  00F8F5  0001               	dw	1
  1060  00F8F7  0042               	dw	66
  1061  00F8F9  0006               	dw	6
  1062  00F8FB  0024               	dw	36
  1063  00F8FD  0008               	dw	8
  1064  00F8FF  0018               	dw	24
  1065  00F901  0010               	dw	16
  1066  00F903  0000               	dw	0
  1067  00F905  0000               	dw	0
  1068  00F907  0008               	dw	8
  1069  00F909  0000               	dw	0
  1070  00F90B  0004               	dw	4
  1071  00F90D  0018               	dw	24
  1072  00F90F  0008               	dw	8
  1073  00F911  0024               	dw	36
  1074  00F913  0010               	dw	16
  1075  00F915  0042               	dw	66
  1076  00F917  0010               	dw	16
  1077  00F919  0042               	dw	66
  1078  00F91B  0010               	dw	16
  1079  00F91D  0084               	dw	132
  1080  00F91F  0008               	dw	8
  1081  00F921  0008               	dw	8
  1082  00F923  0007               	dw	7
  1083  00F925  0000               	dw	0
  1084  00F927  0000               	dw	0
  1085  00F929  0008               	dw	8
  1086  00F92B  0002               	dw	2
  1087  00F92D  0000               	dw	0
  1088  00F92F  0002               	dw	2
  1089  00F931  0000               	dw	0
  1090  00F933  0002               	dw	2
  1091  00F935  0000               	dw	0
  1092  00F937  00FE               	dw	254
  1093  00F939  001F               	dw	31
  1094  00F93B  0002               	dw	2
  1095  00F93D  0000               	dw	0
  1096  00F93F  0002               	dw	2
  1097  00F941  0000               	dw	0
  1098  00F943  0002               	dw	2
  1099  00F945  0000               	dw	0
  1100  00F947  0000               	dw	0
  1101  00F949  0000               	dw	0
  1102  00F94B  000A               	dw	10
  1103  00F94D  0000               	dw	0
  1104  00F94F  0000               	dw	0
  1105  00F951  0000               	dw	0
  1106  00F953  0000               	dw	0
  1107  00F955  00FE               	dw	254
  1108  00F957  0007               	dw	7
  1109  00F959  0000               	dw	0
  1110  00F95B  0008               	dw	8
  1111  00F95D  0000               	dw	0
  1112  00F95F  0010               	dw	16
  1113  00F961  0000               	dw	0
  1114  00F963  0010               	dw	16
  1115  00F965  0000               	dw	0
  1116  00F967  0010               	dw	16
  1117  00F969  0000               	dw	0
  1118  00F96B  0008               	dw	8
  1119  00F96D  00FE               	dw	254
  1120  00F96F  0007               	dw	7
  1121  00F971  0000               	dw	0
  1122  00F973  0000               	dw	0
  1123  00F975  000C               	dw	12
  1124  00F977  0002               	dw	2
  1125  00F979  0000               	dw	0
  1126  00F97B  001C               	dw	28
  1127  00F97D  0000               	dw	0
  1128  00F97F  0060               	dw	96
  1129  00F981  0000               	dw	0
  1130  00F983  0080               	dw	128
  1131  00F985  0001               	dw	1
  1132  00F987  0000               	dw	0
  1133  00F989  000E               	dw	14
  1134  00F98B  0000               	dw	0
  1135  00F98D  0010               	dw	16
  1136  00F98F  0000               	dw	0
  1137  00F991  000E               	dw	14
  1138  00F993  0080               	dw	128
  1139  00F995  0001               	dw	1
  1140  00F997  0060               	dw	96
  1141  00F999  0000               	dw	0
  1142  00F99B  001C               	dw	28
  1143  00F99D  0000               	dw	0
  1144  00F99F  0002               	dw	2
  1145  00F9A1  0000               	dw	0
  1146  00F9A3  0000               	dw	0
  1147  00F9A5  0000               	dw	0
  1148  00F9A7  000F               	dw	15
  1149  00F9A9  0000               	dw	0
  1150  00F9AB  0000               	dw	0
  1151  00F9AD  0006               	dw	6
  1152  00F9AF  0000               	dw	0
  1153  00F9B1  0078               	dw	120
  1154  00F9B3  0000               	dw	0
  1155  00F9B5  0080               	dw	128
  1156  00F9B7  0007               	dw	7
  1157  00F9B9  0000               	dw	0
  1158  00F9BB  0018               	dw	24
  1159  00F9BD  0080               	dw	128
  1160  00F9BF  0007               	dw	7
  1161  00F9C1  0078               	dw	120
  1162  00F9C3  0000               	dw	0
  1163  00F9C5  0006               	dw	6
  1164  00F9C7  0000               	dw	0
  1165  00F9C9  0078               	dw	120
  1166  00F9CB  0000               	dw	0
  1167  00F9CD  0080               	dw	128
  1168  00F9CF  0007               	dw	7
  1169  00F9D1  0000               	dw	0
  1170  00F9D3  0018               	dw	24
  1171  00F9D5  0080               	dw	128
  1172  00F9D7  0007               	dw	7
  1173  00F9D9  0078               	dw	120
  1174  00F9DB  0000               	dw	0
  1175  00F9DD  0006               	dw	6
  1176  00F9DF  0000               	dw	0
  1177  00F9E1  0000               	dw	0
  1178  00F9E3  0000               	dw	0
  1179  00F9E5  0009               	dw	9
  1180  00F9E7  0000               	dw	0
  1181  00F9E9  0000               	dw	0
  1182  00F9EB  0006               	dw	6
  1183  00F9ED  0018               	dw	24
  1184  00F9EF  0008               	dw	8
  1185  00F9F1  0004               	dw	4
  1186  00F9F3  0030               	dw	48
  1187  00F9F5  0003               	dw	3
  1188  00F9F7  00C0               	dw	192
  1189  00F9F9  0000               	dw	0
  1190  00F9FB  0030               	dw	48
  1191  00F9FD  0003               	dw	3
  1192  00F9FF  0008               	dw	8
  1193  00FA01  0004               	dw	4
  1194  00FA03  0006               	dw	6
  1195  00FA05  0018               	dw	24
  1196  00FA07  0000               	dw	0
  1197  00FA09  0000               	dw	0
  1198  00FA0B  000B               	dw	11
  1199  00FA0D  0000               	dw	0
  1200  00FA0F  0000               	dw	0
  1201  00FA11  0002               	dw	2
  1202  00FA13  0000               	dw	0
  1203  00FA15  0004               	dw	4
  1204  00FA17  0000               	dw	0
  1205  00FA19  0018               	dw	24
  1206  00FA1B  0000               	dw	0
  1207  00FA1D  0060               	dw	96
  1208  00FA1F  0000               	dw	0
  1209  00FA21  0080               	dw	128
  1210  00FA23  001F               	dw	31
  1211  00FA25  0060               	dw	96
  1212  00FA27  0000               	dw	0
  1213  00FA29  0018               	dw	24
  1214  00FA2B  0000               	dw	0
  1215  00FA2D  0004               	dw	4
  1216  00FA2F  0000               	dw	0
  1217  00FA31  0002               	dw	2
  1218  00FA33  0000               	dw	0
  1219  00FA35  0000               	dw	0
  1220  00FA37  0000               	dw	0
  1221  00FA39  0008               	dw	8
  1222  00FA3B  0002               	dw	2
  1223  00FA3D  0010               	dw	16
  1224  00FA3F  0002               	dw	2
  1225  00FA41  001C               	dw	28
  1226  00FA43  0002               	dw	2
  1227  00FA45  0013               	dw	19
  1228  00FA47  00C2               	dw	194
  1229  00FA49  0010               	dw	16
  1230  00FA4B  0032               	dw	50
  1231  00FA4D  0010               	dw	16
  1232  00FA4F  000E               	dw	14
  1233  00FA51  0010               	dw	16
  1234  00FA53  0002               	dw	2
  1235  00FA55  0010               	dw	16
  1236  00FA57  0000               	dw	0
  1237  00FA59  0000               	dw	0
  1238  00FA5B  0006               	dw	6
  1239  00FA5D  0000               	dw	0
  1240  00FA5F  0000               	dw	0
  1241  00FA61  0000               	dw	0
  1242  00FA63  0000               	dw	0
  1243  00FA65  00FE               	dw	254
  1244  00FA67  00FF               	dw	255
  1245  00FA69  0002               	dw	2
  1246  00FA6B  0080               	dw	128
  1247  00FA6D  0002               	dw	2
  1248  00FA6F  0080               	dw	128
  1249  00FA71  0000               	dw	0
  1250  00FA73  0000               	dw	0
  1251  00FA75  000A               	dw	10
  1252  00FA77  0002               	dw	2
  1253  00FA79  0000               	dw	0
  1254  00FA7B  000C               	dw	12
  1255  00FA7D  0000               	dw	0
  1256  00FA7F  0010               	dw	16
  1257  00FA81  0000               	dw	0
  1258  00FA83  0060               	dw	96
  1259  00FA85  0000               	dw	0
  1260  00FA87  0080               	dw	128
  1261  00FA89  0001               	dw	1
  1262  00FA8B  0000               	dw	0
  1263  00FA8D  0006               	dw	6
  1264  00FA8F  0000               	dw	0
  1265  00FA91  0008               	dw	8
  1266  00FA93  0000               	dw	0
  1267  00FA95  0030               	dw	48
  1268  00FA97  0000               	dw	0
  1269  00FA99  0040               	dw	64
  1270  00FA9B  0000               	dw	0
  1271  00FA9D  0000               	dw	0
  1272  00FA9F  0005               	dw	5
  1273  00FAA1  0000               	dw	0
  1274  00FAA3  0000               	dw	0
  1275  00FAA5  0002               	dw	2
  1276  00FAA7  0080               	dw	128
  1277  00FAA9  0002               	dw	2
  1278  00FAAB  0080               	dw	128
  1279  00FAAD  00FE               	dw	254
  1280  00FAAF  00FF               	dw	255
  1281  00FAB1  0000               	dw	0
  1282  00FAB3  0000               	dw	0
  1283  00FAB5  000B               	dw	11
  1284  00FAB7  0000               	dw	0
  1285  00FAB9  0000               	dw	0
  1286  00FABB  0000               	dw	0
  1287  00FABD  0002               	dw	2
  1288  00FABF  0080               	dw	128
  1289  00FAC1  0001               	dw	1
  1290  00FAC3  0070               	dw	112
  1291  00FAC5  0000               	dw	0
  1292  00FAC7  000C               	dw	12
  1293  00FAC9  0000               	dw	0
  1294  00FACB  0002               	dw	2
  1295  00FACD  0000               	dw	0
  1296  00FACF  000C               	dw	12
  1297  00FAD1  0000               	dw	0
  1298  00FAD3  0070               	dw	112
  1299  00FAD5  0000               	dw	0
  1300  00FAD7  0080               	dw	128
  1301  00FAD9  0001               	dw	1
  1302  00FADB  0000               	dw	0
  1303  00FADD  0002               	dw	2
  1304  00FADF  0000               	dw	0
  1305  00FAE1  0000               	dw	0
  1306  00FAE3  0009               	dw	9
  1307  00FAE5  0000               	dw	0
  1308  00FAE7  0040               	dw	64
  1309  00FAE9  0000               	dw	0
  1310  00FAEB  0040               	dw	64
  1311  00FAED  0000               	dw	0
  1312  00FAEF  0040               	dw	64
  1313  00FAF1  0000               	dw	0
  1314  00FAF3  0040               	dw	64
  1315  00FAF5  0000               	dw	0
  1316  00FAF7  0040               	dw	64
  1317  00FAF9  0000               	dw	0
  1318  00FAFB  0040               	dw	64
  1319  00FAFD  0000               	dw	0
  1320  00FAFF  0040               	dw	64
  1321  00FB01  0000               	dw	0
  1322  00FB03  0040               	dw	64
  1323  00FB05  0000               	dw	0
  1324  00FB07  0000               	dw	0
  1325  00FB09  0005               	dw	5
  1326  00FB0B  0000               	dw	0
  1327  00FB0D  0000               	dw	0
  1328  00FB0F  0000               	dw	0
  1329  00FB11  0000               	dw	0
  1330  00FB13  0002               	dw	2
  1331  00FB15  0000               	dw	0
  1332  00FB17  0004               	dw	4
  1333  00FB19  0000               	dw	0
  1334  00FB1B  0000               	dw	0
  1335  00FB1D  0000               	dw	0
  1336  00FB1F  000B               	dw	11
  1337  00FB21  0000               	dw	0
  1338  00FB23  0000               	dw	0
  1339  00FB25  00C0               	dw	192
  1340  00FB27  0007               	dw	7
  1341  00FB29  0020               	dw	32
  1342  00FB2B  0008               	dw	8
  1343  00FB2D  0010               	dw	16
  1344  00FB2F  0010               	dw	16
  1345  00FB31  0010               	dw	16
  1346  00FB33  0010               	dw	16
  1347  00FB35  0010               	dw	16
  1348  00FB37  0010               	dw	16
  1349  00FB39  0010               	dw	16
  1350  00FB3B  0010               	dw	16
  1351  00FB3D  0010               	dw	16
  1352  00FB3F  0010               	dw	16
  1353  00FB41  0020               	dw	32
  1354  00FB43  0008               	dw	8
  1355  00FB45  00F0               	dw	240
  1356  00FB47  001F               	dw	31
  1357  00FB49  0000               	dw	0
  1358  00FB4B  0000               	dw	0
  1359  00FB4D  000B               	dw	11
  1360  00FB4F  0000               	dw	0
  1361  00FB51  0000               	dw	0
  1362  00FB53  00FE               	dw	254
  1363  00FB55  001F               	dw	31
  1364  00FB57  0020               	dw	32
  1365  00FB59  0008               	dw	8
  1366  00FB5B  0010               	dw	16
  1367  00FB5D  0010               	dw	16
  1368  00FB5F  0010               	dw	16
  1369  00FB61  0010               	dw	16
  1370  00FB63  0010               	dw	16
  1371  00FB65  0010               	dw	16
  1372  00FB67  0010               	dw	16
  1373  00FB69  0010               	dw	16
  1374  00FB6B  0010               	dw	16
  1375  00FB6D  0010               	dw	16
  1376  00FB6F  0020               	dw	32
  1377  00FB71  0008               	dw	8
  1378  00FB73  00C0               	dw	192
  1379  00FB75  0007               	dw	7
  1380  00FB77  0000               	dw	0
  1381  00FB79  0000               	dw	0
  1382  00FB7B  000A               	dw	10
  1383  00FB7D  0000               	dw	0
  1384  00FB7F  0000               	dw	0
  1385  00FB81  00C0               	dw	192
  1386  00FB83  0007               	dw	7
  1387  00FB85  0020               	dw	32
  1388  00FB87  0008               	dw	8
  1389  00FB89  0010               	dw	16
  1390  00FB8B  0010               	dw	16
  1391  00FB8D  0010               	dw	16
  1392  00FB8F  0010               	dw	16
  1393  00FB91  0010               	dw	16
  1394  00FB93  0010               	dw	16
  1395  00FB95  0010               	dw	16
  1396  00FB97  0010               	dw	16
  1397  00FB99  0020               	dw	32
  1398  00FB9B  0008               	dw	8
  1399  00FB9D  0040               	dw	64
  1400  00FB9F  0004               	dw	4
  1401  00FBA1  0000               	dw	0
  1402  00FBA3  0000               	dw	0
  1403  00FBA5  000B               	dw	11
  1404  00FBA7  0000               	dw	0
  1405  00FBA9  0000               	dw	0
  1406  00FBAB  00C0               	dw	192
  1407  00FBAD  0007               	dw	7
  1408  00FBAF  0020               	dw	32
  1409  00FBB1  0008               	dw	8
  1410  00FBB3  0010               	dw	16
  1411  00FBB5  0010               	dw	16
  1412  00FBB7  0010               	dw	16
  1413  00FBB9  0010               	dw	16
  1414  00FBBB  0010               	dw	16
  1415  00FBBD  0010               	dw	16
  1416  00FBBF  0010               	dw	16
  1417  00FBC1  0010               	dw	16
  1418  00FBC3  0010               	dw	16
  1419  00FBC5  0010               	dw	16
  1420  00FBC7  0020               	dw	32
  1421  00FBC9  0008               	dw	8
  1422  00FBCB  00FE               	dw	254
  1423  00FBCD  001F               	dw	31
  1424  00FBCF  0000               	dw	0
  1425  00FBD1  0000               	dw	0
  1426  00FBD3  000A               	dw	10
  1427  00FBD5  0000               	dw	0
  1428  00FBD7  0000               	dw	0
  1429  00FBD9  00C0               	dw	192
  1430  00FBDB  0007               	dw	7
  1431  00FBDD  0020               	dw	32
  1432  00FBDF  0009               	dw	9
  1433  00FBE1  0010               	dw	16
  1434  00FBE3  0011               	dw	17
  1435  00FBE5  0010               	dw	16
  1436  00FBE7  0011               	dw	17
  1437  00FBE9  0010               	dw	16
  1438  00FBEB  0011               	dw	17
  1439  00FBED  0010               	dw	16
  1440  00FBEF  0011               	dw	17
  1441  00FBF1  0020               	dw	32
  1442  00FBF3  0009               	dw	9
  1443  00FBF5  00C0               	dw	192
  1444  00FBF7  0005               	dw	5
  1445  00FBF9  0000               	dw	0
  1446  00FBFB  0000               	dw	0
  1447  00FBFD  0006               	dw	6
  1448  00FBFF  0000               	dw	0
  1449  00FC01  0000               	dw	0
  1450  00FC03  0010               	dw	16
  1451  00FC05  0000               	dw	0
  1452  00FC07  00FC               	dw	252
  1453  00FC09  001F               	dw	31
  1454  00FC0B  0012               	dw	18
  1455  00FC0D  0000               	dw	0
  1456  00FC0F  0012               	dw	18
  1457  00FC11  0000               	dw	0
  1458  00FC13  0000               	dw	0
  1459  00FC15  0000               	dw	0
  1460  00FC17  000B               	dw	11
  1461  00FC19  0000               	dw	0
  1462  00FC1B  0000               	dw	0
  1463  00FC1D  00C0               	dw	192
  1464  00FC1F  0027               	dw	39
  1465  00FC21  0020               	dw	32
  1466  00FC23  0048               	dw	72
  1467  00FC25  0010               	dw	16
  1468  00FC27  0090               	dw	144
  1469  00FC29  0010               	dw	16
  1470  00FC2B  0090               	dw	144
  1471  00FC2D  0010               	dw	16
  1472  00FC2F  0090               	dw	144
  1473  00FC31  0010               	dw	16
  1474  00FC33  0090               	dw	144
  1475  00FC35  0010               	dw	16
  1476  00FC37  0090               	dw	144
  1477  00FC39  0020               	dw	32
  1478  00FC3B  0048               	dw	72
  1479  00FC3D  00F0               	dw	240
  1480  00FC3F  003F               	dw	63
  1481  00FC41  0000               	dw	0
  1482  00FC43  0000               	dw	0
  1483  00FC45  000A               	dw	10
  1484  00FC47  0000               	dw	0
  1485  00FC49  0000               	dw	0
  1486  00FC4B  00FE               	dw	254
  1487  00FC4D  001F               	dw	31
  1488  00FC4F  0020               	dw	32
  1489  00FC51  0000               	dw	0
  1490  00FC53  0010               	dw	16
  1491  00FC55  0000               	dw	0
  1492  00FC57  0010               	dw	16
  1493  00FC59  0000               	dw	0
  1494  00FC5B  0010               	dw	16
  1495  00FC5D  0000               	dw	0
  1496  00FC5F  0010               	dw	16
  1497  00FC61  0000               	dw	0
  1498  00FC63  0020               	dw	32
  1499  00FC65  0000               	dw	0
  1500  00FC67  00C0               	dw	192
  1501  00FC69  001F               	dw	31
  1502  00FC6B  0000               	dw	0
  1503  00FC6D  0000               	dw	0
  1504  00FC6F  0003               	dw	3
  1505  00FC71  0000               	dw	0
  1506  00FC73  0000               	dw	0
  1507  00FC75  00F6               	dw	246
  1508  00FC77  001F               	dw	31
  1509  00FC79  0000               	dw	0
  1510  00FC7B  0000               	dw	0
  1511  00FC7D  0003               	dw	3
  1512  00FC7F  0000               	dw	0
  1513  00FC81  0080               	dw	128
  1514  00FC83  00F6               	dw	246
  1515  00FC85  007F               	dw	127
  1516  00FC87  0000               	dw	0
  1517  00FC89  0000               	dw	0
  1518  00FC8B  0008               	dw	8
  1519  00FC8D  0000               	dw	0
  1520  00FC8F  0000               	dw	0
  1521  00FC91  00FE               	dw	254
  1522  00FC93  001F               	dw	31
  1523  00FC95  0000               	dw	0
  1524  00FC97  0001               	dw	1
  1525  00FC99  0080               	dw	128
  1526  00FC9B  0002               	dw	2
  1527  00FC9D  0040               	dw	64
  1528  00FC9F  0004               	dw	4
  1529  00FCA1  0020               	dw	32
  1530  00FCA3  0008               	dw	8
  1531  00FCA5  0010               	dw	16
  1532  00FCA7  0010               	dw	16
  1533  00FCA9  0000               	dw	0
  1534  00FCAB  0000               	dw	0
  1535  00FCAD  0003               	dw	3
  1536  00FCAF  0000               	dw	0
  1537  00FCB1  0000               	dw	0
  1538  00FCB3  00FE               	dw	254
  1539  00FCB5  001F               	dw	31
  1540  00FCB7  0000               	dw	0
  1541  00FCB9  0000               	dw	0
  1542  00FCBB  000F               	dw	15
  1543  00FCBD  0000               	dw	0
  1544  00FCBF  0000               	dw	0
  1545  00FCC1  00F0               	dw	240
  1546  00FCC3  001F               	dw	31
  1547  00FCC5  0020               	dw	32
  1548  00FCC7  0000               	dw	0
  1549  00FCC9  0010               	dw	16
  1550  00FCCB  0000               	dw	0
  1551  00FCCD  0010               	dw	16
  1552  00FCCF  0000               	dw	0
  1553  00FCD1  0010               	dw	16
  1554  00FCD3  0000               	dw	0
  1555  00FCD5  0020               	dw	32
  1556  00FCD7  0000               	dw	0
  1557  00FCD9  00C0               	dw	192
  1558  00FCDB  001F               	dw	31
  1559  00FCDD  0020               	dw	32
  1560  00FCDF  0000               	dw	0
  1561  00FCE1  0010               	dw	16
  1562  00FCE3  0000               	dw	0
  1563  00FCE5  0010               	dw	16
  1564  00FCE7  0000               	dw	0
  1565  00FCE9  0010               	dw	16
  1566  00FCEB  0000               	dw	0
  1567  00FCED  0020               	dw	32
  1568  00FCEF  0000               	dw	0
  1569  00FCF1  00C0               	dw	192
  1570  00FCF3  001F               	dw	31
  1571  00FCF5  0000               	dw	0
  1572  00FCF7  0000               	dw	0
  1573  00FCF9  000A               	dw	10
  1574  00FCFB  0000               	dw	0
  1575  00FCFD  0000               	dw	0
  1576  00FCFF  00F0               	dw	240
  1577  00FD01  001F               	dw	31
  1578  00FD03  0020               	dw	32
  1579  00FD05  0000               	dw	0
  1580  00FD07  0010               	dw	16
  1581  00FD09  0000               	dw	0
  1582  00FD0B  0010               	dw	16
  1583  00FD0D  0000               	dw	0
  1584  00FD0F  0010               	dw	16
  1585  00FD11  0000               	dw	0
  1586  00FD13  0010               	dw	16
  1587  00FD15  0000               	dw	0
  1588  00FD17  0020               	dw	32
  1589  00FD19  0000               	dw	0
  1590  00FD1B  00C0               	dw	192
  1591  00FD1D  001F               	dw	31
  1592  00FD1F  0000               	dw	0
  1593  00FD21  0000               	dw	0
  1594  00FD23  000A               	dw	10
  1595  00FD25  0000               	dw	0
  1596  00FD27  0000               	dw	0
  1597  00FD29  00C0               	dw	192
  1598  00FD2B  0007               	dw	7
  1599  00FD2D  0020               	dw	32
  1600  00FD2F  0008               	dw	8
  1601  00FD31  0010               	dw	16
  1602  00FD33  0010               	dw	16
  1603  00FD35  0010               	dw	16
  1604  00FD37  0010               	dw	16
  1605  00FD39  0010               	dw	16
  1606  00FD3B  0010               	dw	16
  1607  00FD3D  0010               	dw	16
  1608  00FD3F  0010               	dw	16
  1609  00FD41  0020               	dw	32
  1610  00FD43  0008               	dw	8
  1611  00FD45  00C0               	dw	192
  1612  00FD47  0007               	dw	7
  1613  00FD49  0000               	dw	0
  1614  00FD4B  0000               	dw	0
  1615  00FD4D  000B               	dw	11
  1616  00FD4F  0000               	dw	0
  1617  00FD51  0000               	dw	0
  1618  00FD53  00F0               	dw	240
  1619  00FD55  00FF               	dw	255
  1620  00FD57  0020               	dw	32
  1621  00FD59  0008               	dw	8
  1622  00FD5B  0010               	dw	16
  1623  00FD5D  0010               	dw	16
  1624  00FD5F  0010               	dw	16
  1625  00FD61  0010               	dw	16
  1626  00FD63  0010               	dw	16
  1627  00FD65  0010               	dw	16
  1628  00FD67  0010               	dw	16
  1629  00FD69  0010               	dw	16
  1630  00FD6B  0010               	dw	16
  1631  00FD6D  0010               	dw	16
  1632  00FD6F  0020               	dw	32
  1633  00FD71  0008               	dw	8
  1634  00FD73  00C0               	dw	192
  1635  00FD75  0007               	dw	7
  1636  00FD77  0000               	dw	0
  1637  00FD79  0000               	dw	0
  1638  00FD7B  000B               	dw	11
  1639  00FD7D  0000               	dw	0
  1640  00FD7F  0000               	dw	0
  1641  00FD81  00C0               	dw	192
  1642  00FD83  0007               	dw	7
  1643  00FD85  0020               	dw	32
  1644  00FD87  0008               	dw	8
  1645  00FD89  0010               	dw	16
  1646  00FD8B  0010               	dw	16
  1647  00FD8D  0010               	dw	16
  1648  00FD8F  0010               	dw	16
  1649  00FD91  0010               	dw	16
  1650  00FD93  0010               	dw	16
  1651  00FD95  0010               	dw	16
  1652  00FD97  0010               	dw	16
  1653  00FD99  0010               	dw	16
  1654  00FD9B  0010               	dw	16
  1655  00FD9D  0020               	dw	32
  1656  00FD9F  0008               	dw	8
  1657  00FDA1  00F0               	dw	240
  1658  00FDA3  00FF               	dw	255
  1659  00FDA5  0000               	dw	0
  1660  00FDA7  0000               	dw	0
  1661  00FDA9  0006               	dw	6
  1662  00FDAB  0000               	dw	0
  1663  00FDAD  0000               	dw	0
  1664  00FDAF  00F0               	dw	240
  1665  00FDB1  001F               	dw	31
  1666  00FDB3  0020               	dw	32
  1667  00FDB5  0000               	dw	0
  1668  00FDB7  0010               	dw	16
  1669  00FDB9  0000               	dw	0
  1670  00FDBB  0010               	dw	16
  1671  00FDBD  0000               	dw	0
  1672  00FDBF  0000               	dw	0
  1673  00FDC1  0000               	dw	0
  1674  00FDC3  0006               	dw	6
  1675  00FDC5  0060               	dw	96
  1676  00FDC7  0008               	dw	8
  1677  00FDC9  0090               	dw	144
  1678  00FDCB  0010               	dw	16
  1679  00FDCD  0010               	dw	16
  1680  00FDCF  0011               	dw	17
  1681  00FDD1  0010               	dw	16
  1682  00FDD3  0011               	dw	17
  1683  00FDD5  0020               	dw	32
  1684  00FDD7  000E               	dw	14
  1685  00FDD9  0000               	dw	0
  1686  00FDDB  0000               	dw	0
  1687  00FDDD  0007               	dw	7
  1688  00FDDF  0000               	dw	0
  1689  00FDE1  0000               	dw	0
  1690  00FDE3  0010               	dw	16
  1691  00FDE5  0000               	dw	0
  1692  00FDE7  0010               	dw	16
  1693  00FDE9  0000               	dw	0
  1694  00FDEB  00FE               	dw	254
  1695  00FDED  001F               	dw	31
  1696  00FDEF  0010               	dw	16
  1697  00FDF1  0000               	dw	0
  1698  00FDF3  0010               	dw	16
  1699  00FDF5  0000               	dw	0
  1700  00FDF7  0000               	dw	0
  1701  00FDF9  0000               	dw	0
  1702  00FDFB  000A               	dw	10
  1703  00FDFD  0000               	dw	0
  1704  00FDFF  0000               	dw	0
  1705  00FE01  00F0               	dw	240
  1706  00FE03  0007               	dw	7
  1707  00FE05  0000               	dw	0
  1708  00FE07  0008               	dw	8
  1709  00FE09  0000               	dw	0
  1710  00FE0B  0010               	dw	16
  1711  00FE0D  0000               	dw	0
  1712  00FE0F  0010               	dw	16
  1713  00FE11  0000               	dw	0
  1714  00FE13  0010               	dw	16
  1715  00FE15  0000               	dw	0
  1716  00FE17  0010               	dw	16
  1717  00FE19  0000               	dw	0
  1718  00FE1B  0008               	dw	8
  1719  00FE1D  00F0               	dw	240
  1720  00FE1F  0007               	dw	7
  1721  00FE21  0000               	dw	0
  1722  00FE23  0000               	dw	0
  1723  00FE25  000A               	dw	10
  1724  00FE27  0010               	dw	16
  1725  00FE29  0000               	dw	0
  1726  00FE2B  0060               	dw	96
  1727  00FE2D  0000               	dw	0
  1728  00FE2F  0080               	dw	128
  1729  00FE31  0003               	dw	3
  1730  00FE33  0000               	dw	0
  1731  00FE35  000C               	dw	12
  1732  00FE37  0000               	dw	0
  1733  00FE39  0010               	dw	16
  1734  00FE3B  0000               	dw	0
  1735  00FE3D  000C               	dw	12
  1736  00FE3F  0080               	dw	128
  1737  00FE41  0003               	dw	3
  1738  00FE43  0060               	dw	96
  1739  00FE45  0000               	dw	0
  1740  00FE47  0010               	dw	16
  1741  00FE49  0000               	dw	0
  1742  00FE4B  0000               	dw	0
  1743  00FE4D  0000               	dw	0
  1744  00FE4F  000E               	dw	14
  1745  00FE51  0010               	dw	16
  1746  00FE53  0000               	dw	0
  1747  00FE55  00E0               	dw	224
  1748  00FE57  0000               	dw	0
  1749  00FE59  0000               	dw	0
  1750  00FE5B  0007               	dw	7
  1751  00FE5D  0000               	dw	0
  1752  00FE5F  0018               	dw	24
  1753  00FE61  0000               	dw	0
  1754  00FE63  0007               	dw	7
  1755  00FE65  00E0               	dw	224
  1756  00FE67  0000               	dw	0
  1757  00FE69  0010               	dw	16
  1758  00FE6B  0000               	dw	0
  1759  00FE6D  00E0               	dw	224
  1760  00FE6F  0000               	dw	0
  1761  00FE71  0000               	dw	0
  1762  00FE73  0007               	dw	7
  1763  00FE75  0000               	dw	0
  1764  00FE77  0018               	dw	24
  1765  00FE79  0000               	dw	0
  1766  00FE7B  0007               	dw	7
  1767  00FE7D  00E0               	dw	224
  1768  00FE7F  0000               	dw	0
  1769  00FE81  0010               	dw	16
  1770  00FE83  0000               	dw	0
  1771  00FE85  0000               	dw	0
  1772  00FE87  0000               	dw	0
  1773  00FE89  0009               	dw	9
  1774  00FE8B  0010               	dw	16
  1775  00FE8D  0010               	dw	16
  1776  00FE8F  0020               	dw	32
  1777  00FE91  0008               	dw	8
  1778  00FE93  0040               	dw	64
  1779  00FE95  0004               	dw	4
  1780  00FE97  0080               	dw	128
  1781  00FE99  0003               	dw	3
  1782  00FE9B  0080               	dw	128
  1783  00FE9D  0003               	dw	3
  1784  00FE9F  0040               	dw	64
  1785  00FEA1  0004               	dw	4
  1786  00FEA3  0020               	dw	32
  1787  00FEA5  0008               	dw	8
  1788  00FEA7  0010               	dw	16
  1789  00FEA9  0010               	dw	16
  1790  00FEAB  0000               	dw	0
  1791  00FEAD  0000               	dw	0
  1792  00FEAF  0009               	dw	9
  1793  00FEB1  0010               	dw	16
  1794  00FEB3  0000               	dw	0
  1795  00FEB5  00E0               	dw	224
  1796  00FEB7  0000               	dw	0
  1797  00FEB9  0000               	dw	0
  1798  00FEBB  0083               	dw	131
  1799  00FEBD  0000               	dw	0
  1800  00FEBF  007C               	dw	124
  1801  00FEC1  0000               	dw	0
  1802  00FEC3  000C               	dw	12
  1803  00FEC5  0000               	dw	0
  1804  00FEC7  0003               	dw	3
  1805  00FEC9  00E0               	dw	224
  1806  00FECB  0000               	dw	0
  1807  00FECD  0010               	dw	16
  1808  00FECF  0000               	dw	0
  1809  00FED1  0000               	dw	0
  1810  00FED3  0000               	dw	0
  1811  00FED5  0008               	dw	8
  1812  00FED7  0010               	dw	16
  1813  00FED9  0010               	dw	16
  1814  00FEDB  0010               	dw	16
  1815  00FEDD  0018               	dw	24
  1816  00FEDF  0010               	dw	16
  1817  00FEE1  0016               	dw	22
  1818  00FEE3  0010               	dw	16
  1819  00FEE5  0011               	dw	17
  1820  00FEE7  00D0               	dw	208
  1821  00FEE9  0010               	dw	16
  1822  00FEEB  0030               	dw	48
  1823  00FEED  0010               	dw	16
  1824  00FEEF  0010               	dw	16
  1825  00FEF1  0010               	dw	16
  1826  00FEF3  0000               	dw	0
  1827  00FEF5  0000               	dw	0
  1828  00FEF7  0007               	dw	7
  1829  00FEF9  0000               	dw	0
  1830  00FEFB  0000               	dw	0
  1831  00FEFD  0000               	dw	0
  1832  00FEFF  0001               	dw	1
  1833  00FF01  0080               	dw	128
  1834  00FF03  0002               	dw	2
  1835  00FF05  00FC               	dw	252
  1836  00FF07  007E               	dw	126
  1837  00FF09  0002               	dw	2
  1838  00FF0B  0080               	dw	128
  1839  00FF0D  0002               	dw	2
  1840  00FF0F  0080               	dw	128
  1841  00FF11  0000               	dw	0
  1842  00FF13  0000               	dw	0
  1843  00FF15  0007               	dw	7
  1844  00FF17  0000               	dw	0
  1845  00FF19  0000               	dw	0
  1846  00FF1B  0000               	dw	0
  1847  00FF1D  0000               	dw	0
  1848  00FF1F  0000               	dw	0
  1849  00FF21  0000               	dw	0
  1850  00FF23  0000               	dw	0
  1851  00FF25  0000               	dw	0
  1852  00FF27  0000               	dw	0
  1853  00FF29  0000               	dw	0
  1854  00FF2B  00FE               	dw	254
  1855  00FF2D  00FF               	dw	255
  1856  00FF2F  0000               	dw	0
  1857  00FF31  0000               	dw	0
  1858  00FF33  0006               	dw	6
  1859  00FF35  0002               	dw	2
  1860  00FF37  0080               	dw	128
  1861  00FF39  0002               	dw	2
  1862  00FF3B  0080               	dw	128
  1863  00FF3D  00FC               	dw	252
  1864  00FF3F  007E               	dw	126
  1865  00FF41  0080               	dw	128
  1866  00FF43  0002               	dw	2
  1867  00FF45  0000               	dw	0
  1868  00FF47  0001               	dw	1
  1869  00FF49  0000               	dw	0
  1870  00FF4B  0000               	dw	0
  1871  00FF4D  000A               	dw	10
  1872  00FF4F  0000               	dw	0
  1873  00FF51  0000               	dw	0
  1874  00FF53  0080               	dw	128
  1875  00FF55  0000               	dw	0
  1876  00FF57  0040               	dw	64
  1877  00FF59  0000               	dw	0
  1878  00FF5B  0040               	dw	64
  1879  00FF5D  0000               	dw	0
  1880  00FF5F  0040               	dw	64
  1881  00FF61  0000               	dw	0
  1882  00FF63  0080               	dw	128
  1883  00FF65  0000               	dw	0
  1884  00FF67  0080               	dw	128
  1885  00FF69  0000               	dw	0
  1886  00FF6B  0080               	dw	128
  1887  00FF6D  0000               	dw	0
  1888  00FF6F  0040               	dw	64
  1889  00FF71  0000               	dw	0
  1890  00FF73  0000               	dw	0
  1891  00FF75  0000               	dw	0
  1892  00FF77  0005               	dw	5
  1893  00FF79  00FF               	dw	255
  1894  00FF7B  000F               	dw	15
  1895  00FF7D  0001               	dw	1
  1896  00FF7F  0008               	dw	8
  1897  00FF81  0001               	dw	1
  1898  00FF83  0008               	dw	8
  1899  00FF85  00FF               	dw	255
  1900  00FF87  000F               	dw	15
  1901  00FF89  0000               	dw	0
  1902  00FF8B  0000               	dw	0
  1903  00FF8D                     __end_of_font:
  1904                           	opt callstack 0
  1905  00FF8D                     _spi_configuration:
  1906                           	opt callstack 0
  1907  00FF8D  00                 	db	0
  1908  00FF8E  40                 	db	64
  1909  00FF8F  01                 	db	1
  1910  00FF90  00                 	db	0
  1911  00FF91                     __end_of_spi_configuration:
  1912                           	opt callstack 0
  1913  00FF91                     STR_2:
  1914  00FF91  58                 	db	88	;'X'
  1915  00FF92  43                 	db	67	;'C'
  1916  00FF93  38                 	db	56	;'8'
  1917  00FF94  20                 	db	32
  1918  00FF95  2D                 	db	45
  1919  00FF96  20                 	db	32
  1920  00FF97  42                 	db	66	;'B'
  1921  00FF98  69                 	db	105	;'i'
  1922  00FF99  62                 	db	98	;'b'
  1923  00FF9A  6C                 	db	108	;'l'
  1924  00FF9B  69                 	db	105	;'i'
  1925  00FF9C  6F                 	db	111	;'o'
  1926  00FF9D  74                 	db	116	;'t'
  1927  00FF9E  65                 	db	101	;'e'
  1928  00FF9F  63                 	db	99	;'c'
  1929  00FFA0  61                 	db	97	;'a'
  1930  00FFA1  20                 	db	32
  1931  00FFA2  2D                 	db	45
  1932  00FFA3  20                 	db	32
  1933  00FFA4  4C                 	db	76	;'L'
  1934  00FFA5  43                 	db	67	;'C'
  1935  00FFA6  44                 	db	68	;'D'
  1936  00FFA7  20                 	db	32
  1937  00FFA8  2D                 	db	45
  1938  00FFA9  20                 	db	32
  1939  00FFAA  49                 	db	73	;'I'
  1940  00FFAB  4C                 	db	76	;'L'
  1941  00FFAC  49                 	db	73	;'I'
  1942  00FFAD  39                 	db	57	;'9'
  1943  00FFAE  33                 	db	51	;'3'
  1944  00FFAF  34                 	db	52	;'4'
  1945  00FFB0  31                 	db	49	;'1'
  1946  00FFB1  00                 	db	0
  1947  00FFB2                     STR_1:
  1948  00FFB2  70                 	db	112	;'p'
  1949  00FFB3  65                 	db	101	;'e'
  1950  00FFB4  72                 	db	114	;'r'
  1951  00FFB5  63                 	db	99	;'c'
  1952  00FFB6  65                 	db	101	;'e'
  1953  00FFB7  6E                 	db	110	;'n'
  1954  00FFB8  74                 	db	116	;'t'
  1955  00FFB9  61                 	db	97	;'a'
  1956  00FFBA  67                 	db	103	;'g'
  1957  00FFBB  65                 	db	101	;'e'
  1958  00FFBC  6D                 	db	109	;'m'
  1959  00FFBD  20                 	db	32
  1960  00FFBE  3D                 	db	61	;'='
  1961  00FFBF  20                 	db	32
  1962  00FFC0  25                 	db	37
  1963  00FFC1  64                 	db	100	;'d'
  1964  00FFC2  00                 	db	0
  1965  00FFC3                     STR_3:
  1966  00FFC3  50                 	db	80	;'P'
  1967  00FFC4  49                 	db	73	;'I'
  1968  00FFC5  43                 	db	67	;'C'
  1969  00FFC6  20                 	db	32
  1970  00FFC7  2D                 	db	45
  1971  00FFC8  20                 	db	32
  1972  00FFC9  53                 	db	83	;'S'
  1973  00FFCA  45                 	db	69	;'E'
  1974  00FFCB  45                 	db	69	;'E'
  1975  00FFCC  56                 	db	86	;'V'
  1976  00FFCD  00                 	db	0
  1977  00FFCE                     STR_80:
  1978  00FFCE  68                 	db	104	;'h'
  1979  00FFCF  68                 	db	104	;'h'
  1980  00FFD0  58                 	db	88	;'X'
  1981  00FFD1  00                 	db	0
  1982  00FFD2                     STR_4:
  1983  00FFD2  68                 	db	104	;'h'
  1984  00FFD3  68                 	db	104	;'h'
  1985  00FFD4  64                 	db	100	;'d'
  1986  00FFD5  00                 	db	0
  1987  00FFD6                     STR_8:
  1988  00FFD6  68                 	db	104	;'h'
  1989  00FFD7  68                 	db	104	;'h'
  1990  00FFD8  69                 	db	105	;'i'
  1991  00FFD9  00                 	db	0
  1992  00FFDA                     STR_46:
  1993  00FFDA  68                 	db	104	;'h'
  1994  00FFDB  68                 	db	104	;'h'
  1995  00FFDC  6E                 	db	110	;'n'
  1996  00FFDD  00                 	db	0
  1997  00FFDE                     STR_31:
  1998  00FFDE  68                 	db	104	;'h'
  1999  00FFDF  68                 	db	104	;'h'
  2000  00FFE0  6F                 	db	111	;'o'
  2001  00FFE1  00                 	db	0
  2002  00FFE2                     STR_61:
  2003  00FFE2  68                 	db	104	;'h'
  2004  00FFE3  68                 	db	104	;'h'
  2005  00FFE4  75                 	db	117	;'u'
  2006  00FFE5  00                 	db	0
  2007  00FFE6                     STR_76:
  2008  00FFE6  68                 	db	104	;'h'
  2009  00FFE7  68                 	db	104	;'h'
  2010  00FFE8  78                 	db	120	;'x'
  2011  00FFE9  00                 	db	0
  2012  00FFEA                     STR_98:
  2013  00FFEA  7A                 	db	122	;'z'
  2014  00FFEB  58                 	db	88	;'X'
  2015  00FFEC  00                 	db	0
  2016  00FFED                     STR_22:
  2017  00FFED  7A                 	db	122	;'z'
  2018  00FFEE  64                 	db	100	;'d'
  2019  00FFEF  00                 	db	0
  2020  00FFF0                     STR_26:
  2021  00FFF0  7A                 	db	122	;'z'
  2022  00FFF1  69                 	db	105	;'i'
  2023  00FFF2  00                 	db	0
  2024  00FFF3                     STR_56:
  2025  00FFF3  7A                 	db	122	;'z'
  2026  00FFF4  6E                 	db	110	;'n'
  2027  00FFF5  00                 	db	0
  2028  00FFF6                     STR_41:
  2029  00FFF6  7A                 	db	122	;'z'
  2030  00FFF7  6F                 	db	111	;'o'
  2031  00FFF8  00                 	db	0
  2032  00FFF9                     STR_71:
  2033  00FFF9  7A                 	db	122	;'z'
  2034  00FFFA  75                 	db	117	;'u'
  2035  00FFFB  00                 	db	0
  2036  00FFFC                     STR_94:
  2037  00FFFC  7A                 	db	122	;'z'
  2038  00FFFD  78                 	db	120	;'x'
  2039  00FFFE  00                 	db	0
  2040  0000                     
  2041                           ; #config settings
  2042  00FFFF  00                 	db	0	; dummy byte at the end
  2043  0000                     
  2044                           	psect	nvCOMRAM
  2045  000049                     __pnvCOMRAM:
  2046                           	opt callstack 0
  2047  000049                     _ADC_InterruptHandler:
  2048                           	opt callstack 0
  2049  000049                     	ds	2
  2050  00004B                     _IOCB4_InterruptHandler:
  2051                           	opt callstack 0
  2052  00004B                     	ds	2
  2053  0000                     _IOCBbits	set	3930
  2054  0000                     _WPUB	set	3931
  2055  0000                     _ANCON1	set	3932
  2056  0000                     _ANCON0	set	3933
  2057  0000                     _ADCON0bits	set	4034
  2058  0000                     _ADRESL	set	4035
  2059  0000                     _ADRESH	set	4036
  2060  0000                     _ADCON2	set	4032
  2061  0000                     _ADCON1	set	4033
  2062  0000                     _ADCON0	set	4034
  2063  0000                     _LATEbits	set	3981
  2064  0000                     _SSPSTATbits	set	4039
  2065  0000                     _LATAbits	set	3977
  2066  0000                     _PORTBbits	set	3969
  2067  0000                     _SSPBUF	set	4041
  2068  0000                     _SSPCON2	set	4037
  2069  0000                     _SSPCON1bits	set	4038
  2070  0000                     _TRISCbits	set	3988
  2071  0000                     _SSPADD	set	4040
  2072  0000                     _SSPCON1	set	4038
  2073  0000                     _SSPSTAT	set	4039
  2074  0000                     _PIR1bits	set	3998
  2075  0000                     _PIE1bits	set	3997
  2076  0000                     _RCONbits	set	4048
  2077  0000                     _REFOCON	set	3994
  2078  0000                     _OSCTUNE	set	3995
  2079  0000                     _OSCCON2	set	4050
  2080  0000                     _OSCCON	set	4051
  2081  0000                     _INTCONbits	set	4082
  2082  0000                     _INTCON2bits	set	4081
  2083  0000                     _TRISD	set	3989
  2084  0000                     _TRISC	set	3988
  2085  0000                     _TRISB	set	3987
  2086  0000                     _TRISA	set	3986
  2087  0000                     _TRISE	set	3990
  2088  0000                     _LATC	set	3979
  2089  0000                     _LATB	set	3978
  2090  0000                     _LATA	set	3977
  2091  0000                     _LATD	set	3980
  2092  0000                     _LATE	set	3981
  2093                           
  2094                           	psect	cinit
  2095  00340A                     __pcinit:
  2096                           	opt callstack 0
  2097  00340A                     start_initialization:
  2098                           	opt callstack 0
  2099  00340A                     __initialization:
  2100                           	opt callstack 0
  2101                           
  2102                           ; Initialize objects allocated to BANK0 (7 bytes)
  2103                           ; load TBLPTR registers with __pidataBANK0
  2104  00340A  0EC2               	movlw	low __pidataBANK0
  2105  00340C  6EF6               	movwf	tblptrl,c
  2106  00340E  0E39               	movlw	high __pidataBANK0
  2107  003410  6EF7               	movwf	tblptrh,c
  2108  003412  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2109  003414  6EF8               	movwf	tblptru,c
  2110  003416  EE00  F0EB         	lfsr	0,__pdataBANK0
  2111  00341A  EE10 F007          	lfsr	1,7
  2112  00341E                     copy_data0:
  2113  00341E  0009               	tblrd		*+
  2114  003420  CFF5 FFEE          	movff	tablat,postinc0
  2115  003424  50E5               	movf	postdec1,w,c
  2116  003426  50E1               	movf	fsr1l,w,c
  2117  003428  E1FA               	bnz	copy_data0
  2118                           
  2119                           ; Clear objects allocated to BANK1 (100 bytes)
  2120  00342A  EE01  F000         	lfsr	0,__pbssBANK1
  2121  00342E  0E64               	movlw	100
  2122  003430                     clear_0:
  2123  003430  6AEE               	clrf	postinc0,c
  2124  003432  06E8               	decf	wreg,f,c
  2125  003434  E1FD               	bnz	clear_0
  2126                           
  2127                           ; Clear objects allocated to BANK0 (36 bytes)
  2128  003436  EE00  F0C7         	lfsr	0,__pbssBANK0
  2129  00343A  0E24               	movlw	36
  2130  00343C                     clear_1:
  2131  00343C  6AEE               	clrf	postinc0,c
  2132  00343E  06E8               	decf	wreg,f,c
  2133  003440  E1FD               	bnz	clear_1
  2134                           
  2135                           ; Clear objects allocated to COMRAM (12 bytes)
  2136  003442  EE00  F03D         	lfsr	0,__pbssCOMRAM
  2137  003446  0E0C               	movlw	12
  2138  003448                     clear_2:
  2139  003448  6AEE               	clrf	postinc0,c
  2140  00344A  06E8               	decf	wreg,f,c
  2141  00344C  E1FD               	bnz	clear_2
  2142  00344E                     end_of_initialization:
  2143                           	opt callstack 0
  2144  00344E                     __end_of__initialization:
  2145                           	opt callstack 0
  2146  00344E  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2147  003450  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2148  003452  0100               	movlb	0
  2149  003454  EFB5  F015         	goto	_main	;jump to C main() function
  2150                           
  2151                           	psect	bssCOMRAM
  2152  00003D                     __pbssCOMRAM:
  2153                           	opt callstack 0
  2154  00003D                     _nout:
  2155                           	opt callstack 0
  2156  00003D                     	ds	2
  2157  00003F                     _width:
  2158                           	opt callstack 0
  2159  00003F                     	ds	2
  2160  000041                     _prec:
  2161                           	opt callstack 0
  2162  000041                     	ds	2
  2163  000043                     _flags:
  2164                           	opt callstack 0
  2165  000043                     	ds	2
  2166  000045                     _global_bg_color:
  2167                           	opt callstack 0
  2168  000045                     	ds	2
  2169  000047                     _codigo_digital:
  2170                           	opt callstack 0
  2171  000047                     	ds	2
  2172                           
  2173                           	psect	bssBANK0
  2174  0000C7                     __pbssBANK0:
  2175                           	opt callstack 0
  2176  0000C7                     _errno:
  2177                           	opt callstack 0
  2178  0000C7                     	ds	2
  2179  0000C9                     _percentagem:
  2180                           	opt callstack 0
  2181  0000C9                     	ds	2
  2182  0000CB                     _dbuf:
  2183                           	opt callstack 0
  2184  0000CB                     	ds	32
  2185                           
  2186                           	psect	dataBANK0
  2187  0000EB                     __pdataBANK0:
  2188                           	opt callstack 0
  2189  0000EB                     stoa@F1152:
  2190                           	opt callstack 0
  2191  0000EB                     	ds	7
  2192                           
  2193                           	psect	bssBANK1
  2194  000100                     __pbssBANK1:
  2195                           	opt callstack 0
  2196  000100                     _string:
  2197                           	opt callstack 0
  2198  000100                     	ds	100
  2199                           
  2200                           	psect	cstackBANK0
  2201  000060                     __pcstackBANK0:
  2202                           	opt callstack 0
  2203  000060                     ??_lcd_draw_string:
  2204  000060                     ??_dtoa:
  2205  000060                     ??_otoa:
  2206  000060                     ??_utoa:
  2207  000060                     ??_xtoa:
  2208                           
  2209                           ; 1 bytes @ 0x0
  2210  000060                     	ds	4
  2211  000064                     lcd_draw_string@k:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x4
  2215  000064                     	ds	2
  2216  000066                     lcd_draw_string@lIndex:
  2217                           	opt callstack 0
  2218                           
  2219                           ; 2 bytes @ 0x6
  2220  000066                     	ds	2
  2221  000068                     _dtoa$1233:
  2222                           	opt callstack 0
  2223  000068                     otoa@p:
  2224                           	opt callstack 0
  2225  000068                     utoa@p:
  2226                           	opt callstack 0
  2227  000068                     _xtoa$1269:
  2228                           	opt callstack 0
  2229                           
  2230                           ; 2 bytes @ 0x8
  2231  000068                     	ds	2
  2232  00006A                     dtoa@p:
  2233                           	opt callstack 0
  2234  00006A                     otoa@t:
  2235                           	opt callstack 0
  2236  00006A                     utoa@w:
  2237                           	opt callstack 0
  2238  00006A                     _xtoa$1270:
  2239                           	opt callstack 0
  2240                           
  2241                           ; 2 bytes @ 0xA
  2242  00006A                     	ds	2
  2243  00006C                     dtoa@w:
  2244                           	opt callstack 0
  2245  00006C                     otoa@w:
  2246                           	opt callstack 0
  2247  00006C                     xtoa@p:
  2248                           	opt callstack 0
  2249  00006C                     utoa@n:
  2250                           	opt callstack 0
  2251                           
  2252                           ; 8 bytes @ 0xC
  2253  00006C                     	ds	2
  2254  00006E                     dtoa@s:
  2255                           	opt callstack 0
  2256  00006E                     xtoa@w:
  2257                           	opt callstack 0
  2258  00006E                     otoa@n:
  2259                           	opt callstack 0
  2260                           
  2261                           ; 8 bytes @ 0xE
  2262  00006E                     	ds	2
  2263  000070                     dtoa@n:
  2264                           	opt callstack 0
  2265  000070                     xtoa@n:
  2266                           	opt callstack 0
  2267                           
  2268                           ; 8 bytes @ 0x10
  2269  000070                     	ds	4
  2270  000074                     utoa@i:
  2271                           	opt callstack 0
  2272                           
  2273                           ; 2 bytes @ 0x14
  2274  000074                     	ds	2
  2275  000076                     otoa@i:
  2276                           	opt callstack 0
  2277                           
  2278                           ; 2 bytes @ 0x16
  2279  000076                     	ds	2
  2280  000078                     dtoa@i:
  2281                           	opt callstack 0
  2282  000078                     xtoa@i:
  2283                           	opt callstack 0
  2284                           
  2285                           ; 2 bytes @ 0x18
  2286  000078                     	ds	2
  2287  00007A                     xtoa@c:
  2288                           	opt callstack 0
  2289                           
  2290                           ; 2 bytes @ 0x1A
  2291  00007A                     	ds	2
  2292  00007C                     ?_vfpfcnvrt:
  2293                           	opt callstack 0
  2294  00007C                     vfpfcnvrt@fp:
  2295                           	opt callstack 0
  2296                           
  2297                           ; 2 bytes @ 0x1C
  2298  00007C                     	ds	2
  2299  00007E                     vfpfcnvrt@fmt:
  2300                           	opt callstack 0
  2301                           
  2302                           ; 2 bytes @ 0x1E
  2303  00007E                     	ds	2
  2304  000080                     vfpfcnvrt@ap:
  2305                           	opt callstack 0
  2306                           
  2307                           ; 2 bytes @ 0x20
  2308  000080                     	ds	2
  2309  000082                     vfpfcnvrt@cp:
  2310                           	opt callstack 0
  2311                           
  2312                           ; 2 bytes @ 0x22
  2313  000082                     	ds	2
  2314  000084                     vfpfcnvrt@done:
  2315                           	opt callstack 0
  2316                           
  2317                           ; 2 bytes @ 0x24
  2318  000084                     	ds	2
  2319  000086                     _vfpfcnvrt$1284:
  2320                           	opt callstack 0
  2321                           
  2322                           ; 2 bytes @ 0x26
  2323  000086                     	ds	2
  2324  000088                     _vfpfcnvrt$1285:
  2325                           	opt callstack 0
  2326                           
  2327                           ; 2 bytes @ 0x28
  2328  000088                     	ds	2
  2329  00008A                     vfpfcnvrt@ll:
  2330                           	opt callstack 0
  2331                           
  2332                           ; 8 bytes @ 0x2A
  2333  00008A                     	ds	8
  2334  000092                     vfpfcnvrt@vp:
  2335                           	opt callstack 0
  2336                           
  2337                           ; 2 bytes @ 0x32
  2338  000092                     	ds	2
  2339  000094                     vfpfcnvrt@c:
  2340                           	opt callstack 0
  2341                           
  2342                           ; 1 bytes @ 0x34
  2343  000094                     	ds	1
  2344  000095                     vfpfcnvrt@llu:
  2345                           	opt callstack 0
  2346                           
  2347                           ; 8 bytes @ 0x35
  2348  000095                     	ds	8
  2349  00009D                     ?_vfprintf:
  2350                           	opt callstack 0
  2351  00009D                     vfprintf@fp:
  2352                           	opt callstack 0
  2353                           
  2354                           ; 2 bytes @ 0x3D
  2355  00009D                     	ds	2
  2356  00009F                     vfprintf@fmt:
  2357                           	opt callstack 0
  2358                           
  2359                           ; 2 bytes @ 0x3F
  2360  00009F                     	ds	2
  2361  0000A1                     vfprintf@ap:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x41
  2365  0000A1                     	ds	2
  2366  0000A3                     vfprintf@cfmt:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 2 bytes @ 0x43
  2370  0000A3                     	ds	2
  2371  0000A5                     ?_vsnprintf:
  2372                           	opt callstack 0
  2373  0000A5                     vsnprintf@s:
  2374                           	opt callstack 0
  2375                           
  2376                           ; 2 bytes @ 0x45
  2377  0000A5                     	ds	2
  2378  0000A7                     vsnprintf@n:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x47
  2382  0000A7                     	ds	2
  2383  0000A9                     vsnprintf@fmt:
  2384                           	opt callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x49
  2387  0000A9                     	ds	2
  2388  0000AB                     vsnprintf@ap:
  2389                           	opt callstack 0
  2390                           
  2391                           ; 2 bytes @ 0x4B
  2392  0000AB                     	ds	2
  2393  0000AD                     ??_vsnprintf:
  2394                           
  2395                           ; 1 bytes @ 0x4D
  2396  0000AD                     	ds	4
  2397  0000B1                     _vsnprintf$1985:
  2398                           	opt callstack 0
  2399                           
  2400                           ; 2 bytes @ 0x51
  2401  0000B1                     	ds	2
  2402  0000B3                     vsnprintf@cnt:
  2403                           	opt callstack 0
  2404                           
  2405                           ; 2 bytes @ 0x53
  2406  0000B3                     	ds	2
  2407  0000B5                     vsnprintf@f:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 6 bytes @ 0x55
  2411  0000B5                     	ds	6
  2412  0000BB                     ?_snprintf:
  2413                           	opt callstack 0
  2414  0000BB                     snprintf@s:
  2415                           	opt callstack 0
  2416                           
  2417                           ; 2 bytes @ 0x5B
  2418  0000BB                     	ds	2
  2419  0000BD                     snprintf@n:
  2420                           	opt callstack 0
  2421                           
  2422                           ; 2 bytes @ 0x5D
  2423  0000BD                     	ds	2
  2424  0000BF                     snprintf@fmt:
  2425                           	opt callstack 0
  2426                           
  2427                           ; 2 bytes @ 0x5F
  2428  0000BF                     	ds	6
  2429  0000C5                     snprintf@ap:
  2430                           	opt callstack 0
  2431                           
  2432                           ; 2 bytes @ 0x65
  2433  0000C5                     	ds	2
  2434                           
  2435                           	psect	cstackCOMRAM
  2436  000001                     __pcstackCOMRAM:
  2437                           	opt callstack 0
  2438  000001                     ?_ADC_GetConversion:
  2439                           	opt callstack 0
  2440  000001                     ?___awdiv:
  2441                           	opt callstack 0
  2442  000001                     ___awdiv@dividend:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 2 bytes @ 0x0
  2446  000001                     	ds	2
  2447  000003                     ??_ADC_GetConversion:
  2448  000003                     ___awdiv@divisor:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x2
  2452  000003                     	ds	2
  2453  000005                     ADC_GetConversion@channel:
  2454                           	opt callstack 0
  2455  000005                     ___awdiv@counter:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 1 bytes @ 0x4
  2459  000005                     	ds	1
  2460  000006                     ??_acende_led:
  2461  000006                     ___awdiv@sign:
  2462                           	opt callstack 0
  2463                           
  2464                           ; 1 bytes @ 0x5
  2465  000006                     	ds	1
  2466  000007                     ___awdiv@quotient:
  2467                           	opt callstack 0
  2468                           
  2469                           ; 2 bytes @ 0x6
  2470  000007                     	ds	2
  2471  000009                     ?i2___wmul:
  2472                           	opt callstack 0
  2473  000009                     i2___wmul@multiplier:
  2474                           	opt callstack 0
  2475                           
  2476                           ; 2 bytes @ 0x8
  2477  000009                     	ds	2
  2478  00000B                     i2___wmul@multiplicand:
  2479                           	opt callstack 0
  2480                           
  2481                           ; 2 bytes @ 0xA
  2482  00000B                     	ds	2
  2483  00000D                     i2___wmul@product:
  2484                           	opt callstack 0
  2485                           
  2486                           ; 2 bytes @ 0xC
  2487  00000D                     	ds	2
  2488  00000F                     ??_INTERRUPT_InterruptManager:
  2489  00000F                     
  2490                           ; 1 bytes @ 0xE
  2491  00000F                     	ds	4
  2492  000013                     ??_SPI_Open:
  2493  000013                     ??_msDelay:
  2494  000013                     ?_strlen:
  2495                           	opt callstack 0
  2496  000013                     ?_isupper:
  2497                           	opt callstack 0
  2498  000013                     ?_isalpha:
  2499                           	opt callstack 0
  2500  000013                     ?_isdigit:
  2501                           	opt callstack 0
  2502  000013                     ?_strncmp:
  2503                           	opt callstack 0
  2504  000013                     ?_isspace:
  2505                           	opt callstack 0
  2506  000013                     ?_islower:
  2507                           	opt callstack 0
  2508  000013                     ?___wmul:
  2509                           	opt callstack 0
  2510  000013                     ?___aodiv:
  2511                           	opt callstack 0
  2512  000013                     ?___aomod:
  2513                           	opt callstack 0
  2514  000013                     ?___lodiv:
  2515                           	opt callstack 0
  2516  000013                     ?___lomod:
  2517                           	opt callstack 0
  2518  000013                     SPI_ExchangeByte@data:
  2519                           	opt callstack 0
  2520  000013                     IOCB4_SetInterruptHandler@InterruptHandler:
  2521                           	opt callstack 0
  2522  000013                     ADC_SetInterruptHandler@InterruptHandler:
  2523                           	opt callstack 0
  2524  000013                     ___wmul@multiplier:
  2525                           	opt callstack 0
  2526  000013                     isalpha@c:
  2527                           	opt callstack 0
  2528  000013                     isdigit@c:
  2529                           	opt callstack 0
  2530  000013                     isspace@c:
  2531                           	opt callstack 0
  2532  000013                     isupper@c:
  2533                           	opt callstack 0
  2534  000013                     fputc@c:
  2535                           	opt callstack 0
  2536  000013                     strlen@s:
  2537                           	opt callstack 0
  2538  000013                     strncmp@_l:
  2539                           	opt callstack 0
  2540  000013                     islower@c:
  2541                           	opt callstack 0
  2542  000013                     ___aodiv@dividend:
  2543                           	opt callstack 0
  2544  000013                     ___aomod@dividend:
  2545                           	opt callstack 0
  2546  000013                     ___lodiv@dividend:
  2547                           	opt callstack 0
  2548  000013                     ___lomod@dividend:
  2549                           	opt callstack 0
  2550                           
  2551                           ; 8 bytes @ 0x12
  2552  000013                     	ds	1
  2553  000014                     SPI_Open@spiUniqueConfiguration:
  2554                           	opt callstack 0
  2555  000014                     msDelay@ms:
  2556                           	opt callstack 0
  2557  000014                     lcd_send@value:
  2558                           	opt callstack 0
  2559                           
  2560                           ; 1 bytes @ 0x13
  2561  000014                     	ds	1
  2562  000015                     ??_isupper:
  2563  000015                     ??_isalpha:
  2564  000015                     ??_isdigit:
  2565  000015                     ??_isspace:
  2566  000015                     ??_islower:
  2567  000015                     msDelay@k:
  2568                           	opt callstack 0
  2569  000015                     lcd_send@dc:
  2570                           	opt callstack 0
  2571  000015                     ___wmul@multiplicand:
  2572                           	opt callstack 0
  2573  000015                     fputc@fp:
  2574                           	opt callstack 0
  2575  000015                     strlen@a:
  2576                           	opt callstack 0
  2577  000015                     strncmp@_r:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 2 bytes @ 0x14
  2581  000015                     	ds	1
  2582  000016                     lcd_set_cursor_x@x:
  2583                           	opt callstack 0
  2584  000016                     lcd_set_cursor_y@y:
  2585                           	opt callstack 0
  2586  000016                     lcd_draw_pixel@color:
  2587                           	opt callstack 0
  2588                           
  2589                           ; 2 bytes @ 0x15
  2590  000016                     	ds	1
  2591  000017                     ??_fputc:
  2592  000017                     ___wmul@product:
  2593                           	opt callstack 0
  2594  000017                     strncmp@n:
  2595                           	opt callstack 0
  2596                           
  2597                           ; 2 bytes @ 0x16
  2598  000017                     	ds	1
  2599  000018                     lcd_set_cursor@x:
  2600                           	opt callstack 0
  2601                           
  2602                           ; 2 bytes @ 0x17
  2603  000018                     	ds	1
  2604  000019                     ??_strncmp:
  2605  000019                     ?_toupper:
  2606                           	opt callstack 0
  2607  000019                     _isspace$1873:
  2608                           	opt callstack 0
  2609  000019                     toupper@c:
  2610                           	opt callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x18
  2613  000019                     	ds	1
  2614  00001A                     ?_atoi:
  2615                           	opt callstack 0
  2616  00001A                     lcd_set_cursor@y:
  2617                           	opt callstack 0
  2618  00001A                     atoi@s:
  2619                           	opt callstack 0
  2620  00001A                     strncmp@l:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 2 bytes @ 0x19
  2624  00001A                     	ds	1
  2625  00001B                     ??_toupper:
  2626  00001B                     ___aodiv@divisor:
  2627                           	opt callstack 0
  2628  00001B                     ___aomod@divisor:
  2629                           	opt callstack 0
  2630  00001B                     ___lodiv@divisor:
  2631                           	opt callstack 0
  2632  00001B                     ___lomod@divisor:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 8 bytes @ 0x1A
  2636  00001B                     	ds	1
  2637  00001C                     ??_atoi:
  2638  00001C                     ?_stoa:
  2639                           	opt callstack 0
  2640  00001C                     lcd_fill@bg_color:
  2641                           	opt callstack 0
  2642  00001C                     lcd_draw_pixel_at@x:
  2643                           	opt callstack 0
  2644  00001C                     lcd_draw_char@x:
  2645                           	opt callstack 0
  2646  00001C                     stoa@fp:
  2647                           	opt callstack 0
  2648  00001C                     fputs@s:
  2649                           	opt callstack 0
  2650  00001C                     strncmp@r:
  2651                           	opt callstack 0
  2652                           
  2653                           ; 2 bytes @ 0x1B
  2654  00001C                     	ds	2
  2655  00001E                     lcd_fill@height:
  2656                           	opt callstack 0
  2657  00001E                     lcd_draw_pixel_at@y:
  2658                           	opt callstack 0
  2659  00001E                     lcd_draw_char@y:
  2660                           	opt callstack 0
  2661  00001E                     stoa@s:
  2662                           	opt callstack 0
  2663  00001E                     fputs@fp:
  2664                           	opt callstack 0
  2665                           
  2666                           ; 2 bytes @ 0x1D
  2667  00001E                     	ds	1
  2668  00001F                     _toupper$1953:
  2669                           	opt callstack 0
  2670                           
  2671                           ; 2 bytes @ 0x1E
  2672  00001F                     	ds	1
  2673  000020                     ??_stoa:
  2674  000020                     fputs@c:
  2675                           	opt callstack 0
  2676  000020                     lcd_fill@width:
  2677                           	opt callstack 0
  2678  000020                     lcd_draw_pixel_at@color:
  2679                           	opt callstack 0
  2680  000020                     lcd_draw_char@fIndex:
  2681                           	opt callstack 0
  2682  000020                     atoi@neg:
  2683                           	opt callstack 0
  2684                           
  2685                           ; 2 bytes @ 0x1F
  2686  000020                     	ds	1
  2687  000021                     fputs@i:
  2688                           	opt callstack 0
  2689  000021                     stoa@nuls:
  2690                           	opt callstack 0
  2691                           
  2692                           ; 7 bytes @ 0x20
  2693  000021                     	ds	1
  2694  000022                     lcd_draw_line@x0:
  2695                           	opt callstack 0
  2696  000022                     lcd_draw_char@fg_color:
  2697                           	opt callstack 0
  2698  000022                     _atoi$1846:
  2699                           	opt callstack 0
  2700                           
  2701                           ; 2 bytes @ 0x21
  2702  000022                     	ds	1
  2703  000023                     ?_pad:
  2704                           	opt callstack 0
  2705  000023                     ___aodiv@counter:
  2706                           	opt callstack 0
  2707  000023                     ___aomod@counter:
  2708                           	opt callstack 0
  2709  000023                     ___lomod@counter:
  2710                           	opt callstack 0
  2711  000023                     pad@fp:
  2712                           	opt callstack 0
  2713  000023                     ___lodiv@quotient:
  2714                           	opt callstack 0
  2715                           
  2716                           ; 8 bytes @ 0x22
  2717  000023                     	ds	1
  2718  000024                     ___aodiv@sign:
  2719                           	opt callstack 0
  2720  000024                     ___aomod@sign:
  2721                           	opt callstack 0
  2722  000024                     lcd_draw_line@y0:
  2723                           	opt callstack 0
  2724  000024                     lcd_draw_char@bg_color:
  2725                           	opt callstack 0
  2726  000024                     _atoi$1848:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 2 bytes @ 0x23
  2730  000024                     	ds	1
  2731  000025                     ?_abs:
  2732                           	opt callstack 0
  2733  000025                     pad@buf:
  2734                           	opt callstack 0
  2735  000025                     abs@a:
  2736                           	opt callstack 0
  2737  000025                     ___aodiv@quotient:
  2738                           	opt callstack 0
  2739                           
  2740                           ; 8 bytes @ 0x24
  2741  000025                     	ds	1
  2742  000026                     ??_lcd_draw_char:
  2743  000026                     _atoi$1847:
  2744                           	opt callstack 0
  2745  000026                     lcd_draw_line@x1:
  2746                           	opt callstack 0
  2747                           
  2748                           ; 2 bytes @ 0x25
  2749  000026                     	ds	1
  2750  000027                     ??_abs:
  2751  000027                     pad@p:
  2752                           	opt callstack 0
  2753  000027                     atoi@n:
  2754                           	opt callstack 0
  2755                           
  2756                           ; 2 bytes @ 0x26
  2757  000027                     	ds	1
  2758  000028                     lcd_draw_line@y1:
  2759                           	opt callstack 0
  2760  000028                     stoa@i:
  2761                           	opt callstack 0
  2762                           
  2763                           ; 2 bytes @ 0x27
  2764  000028                     	ds	1
  2765  000029                     ??_pad:
  2766                           
  2767                           ; 1 bytes @ 0x28
  2768  000029                     	ds	1
  2769  00002A                     lcd_draw_line@color:
  2770                           	opt callstack 0
  2771  00002A                     pad@i:
  2772                           	opt callstack 0
  2773  00002A                     stoa@w:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 2 bytes @ 0x29
  2777  00002A                     	ds	1
  2778  00002B                     ___lodiv@counter:
  2779                           	opt callstack 0
  2780                           
  2781                           ; 1 bytes @ 0x2A
  2782  00002B                     	ds	1
  2783  00002C                     ??_lcd_draw_line:
  2784  00002C                     pad@w:
  2785                           	opt callstack 0
  2786  00002C                     stoa@cp:
  2787                           	opt callstack 0
  2788                           
  2789                           ; 2 bytes @ 0x2B
  2790  00002C                     	ds	1
  2791  00002D                     lcd_draw_line@sx:
  2792                           	opt callstack 0
  2793                           
  2794                           ; 2 bytes @ 0x2C
  2795  00002D                     	ds	1
  2796  00002E                     ?_ctoa:
  2797                           	opt callstack 0
  2798  00002E                     ?_dtoa:
  2799                           	opt callstack 0
  2800  00002E                     ?_otoa:
  2801                           	opt callstack 0
  2802  00002E                     ?_utoa:
  2803                           	opt callstack 0
  2804  00002E                     ?_xtoa:
  2805                           	opt callstack 0
  2806  00002E                     ctoa@fp:
  2807                           	opt callstack 0
  2808  00002E                     dtoa@fp:
  2809                           	opt callstack 0
  2810  00002E                     otoa@fp:
  2811                           	opt callstack 0
  2812  00002E                     stoa@p:
  2813                           	opt callstack 0
  2814  00002E                     utoa@fp:
  2815                           	opt callstack 0
  2816  00002E                     xtoa@fp:
  2817                           	opt callstack 0
  2818                           
  2819                           ; 2 bytes @ 0x2D
  2820  00002E                     	ds	1
  2821  00002F                     lcd_draw_char@j:
  2822                           	opt callstack 0
  2823  00002F                     lcd_draw_line@sy:
  2824                           	opt callstack 0
  2825                           
  2826                           ; 2 bytes @ 0x2E
  2827  00002F                     	ds	1
  2828  000030                     lcd_draw_char@k:
  2829                           	opt callstack 0
  2830  000030                     ctoa@c:
  2831                           	opt callstack 0
  2832  000030                     stoa@l:
  2833                           	opt callstack 0
  2834  000030                     dtoa@d:
  2835                           	opt callstack 0
  2836  000030                     otoa@d:
  2837                           	opt callstack 0
  2838  000030                     utoa@d:
  2839                           	opt callstack 0
  2840  000030                     xtoa@d:
  2841                           	opt callstack 0
  2842                           
  2843                           ; 8 bytes @ 0x2F
  2844  000030                     	ds	1
  2845  000031                     lcd_draw_char@i:
  2846                           	opt callstack 0
  2847  000031                     lcd_draw_line@err:
  2848                           	opt callstack 0
  2849  000031                     ctoa@w:
  2850                           	opt callstack 0
  2851                           
  2852                           ; 2 bytes @ 0x30
  2853  000031                     	ds	1
  2854  000032                     lcd_draw_string@x:
  2855                           	opt callstack 0
  2856                           
  2857                           ; 2 bytes @ 0x31
  2858  000032                     	ds	1
  2859  000033                     lcd_draw_line@e2:
  2860                           	opt callstack 0
  2861                           
  2862                           ; 2 bytes @ 0x32
  2863  000033                     	ds	1
  2864  000034                     lcd_draw_string@y:
  2865                           	opt callstack 0
  2866                           
  2867                           ; 2 bytes @ 0x33
  2868  000034                     	ds	1
  2869  000035                     lcd_draw_line@dx:
  2870                           	opt callstack 0
  2871                           
  2872                           ; 2 bytes @ 0x34
  2873  000035                     	ds	1
  2874  000036                     lcd_draw_string@pS:
  2875                           	opt callstack 0
  2876                           
  2877                           ; 2 bytes @ 0x35
  2878  000036                     	ds	1
  2879  000037                     lcd_draw_line@dy:
  2880                           	opt callstack 0
  2881                           
  2882                           ; 2 bytes @ 0x36
  2883  000037                     	ds	1
  2884  000038                     xtoa@x:
  2885                           	opt callstack 0
  2886  000038                     lcd_draw_string@fg_color:
  2887                           	opt callstack 0
  2888                           
  2889                           ; 2 bytes @ 0x37
  2890  000038                     	ds	1
  2891  000039                     ??_vfpfcnvrt:
  2892                           
  2893                           ; 1 bytes @ 0x38
  2894  000039                     	ds	1
  2895  00003A                     lcd_draw_string@bg_color:
  2896                           	opt callstack 0
  2897                           
  2898                           ; 2 bytes @ 0x39
  2899  00003A                     	ds	3
  2900  00003D                     
  2901                           ; 1 bytes @ 0x3C
  2902 ;;
  2903 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2904 ;;
  2905 ;; *************** function _main *****************
  2906 ;; Defined at:
  2907 ;;		line 36 in file "main.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels required when called:   14
  2927 ;; This function calls:
  2928 ;;		_ADC_SetInterruptHandler
  2929 ;;		_IOCB4_SetInterruptHandler
  2930 ;;		_SPI_Open
  2931 ;;		_SYSTEM_Initialize
  2932 ;;		_lcd_draw_line
  2933 ;;		_lcd_draw_string
  2934 ;;		_lcd_init
  2935 ;;		_snprintf
  2936 ;; This function is called by:
  2937 ;;		Startup code after reset
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text0
  2942  002B6A                     __ptext0:
  2943                           	opt callstack 0
  2944  002B6A                     _main:
  2945                           	opt callstack 17
  2946  002B6A                     
  2947                           ;main.c: 39:     SYSTEM_Initialize();
  2948  002B6A  ECBA  F01C         	call	_SYSTEM_Initialize	;wreg free
  2949                           
  2950                           ;main.c: 45:     IOCB4_SetInterruptHandler(acende_led);
  2951  002B6E  0EB4               	movlw	low _acende_led
  2952  002B70  6E13               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  2953  002B72  0E35               	movlw	high _acende_led
  2954  002B74  6E14               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  2955  002B76  ECD7  F01C         	call	_IOCB4_SetInterruptHandler	;wreg free
  2956                           
  2957                           ;main.c: 47:     ADC_SetInterruptHandler(ADC_POT);
  2958  002B7A  0EEC               	movlw	low _ADC_POT
  2959  002B7C  6E13               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  2960  002B7E  0E37               	movlw	high _ADC_POT
  2961  002B80  6E14               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  2962  002B82  ECDC  F01C         	call	_ADC_SetInterruptHandler	;wreg free
  2963  002B86                     
  2964                           ;main.c: 49:     SPI_Open(SPI_DEFAULT);
  2965  002B86  0E00               	movlw	0
  2966  002B88  ECB5  F018         	call	_SPI_Open
  2967  002B8C                     
  2968                           ;main.c: 51:     lcd_init ();
  2969  002B8C  EC82  F009         	call	_lcd_init	;wreg free
  2970  002B90                     
  2971                           ;main.c: 53:     snprintf(string,sizeof(string),"percentagem = %d",percentagem);
  2972  002B90  0E00               	movlw	low _string
  2973  002B92  0100               	movlb	0	; () banked
  2974  002B94  6FBB               	movwf	snprintf@s& (0+255),b
  2975  002B96  0E01               	movlw	high _string
  2976  002B98  6FBC               	movwf	(snprintf@s+1)& (0+255),b
  2977  002B9A  0E00               	movlw	0
  2978  002B9C  6FBE               	movwf	(snprintf@n+1)& (0+255),b
  2979  002B9E  0E64               	movlw	100
  2980  002BA0  6FBD               	movwf	snprintf@n& (0+255),b
  2981  002BA2  0EB2               	movlw	low STR_1
  2982  002BA4  6FBF               	movwf	snprintf@fmt& (0+255),b
  2983  002BA6  0EFF               	movlw	high STR_1
  2984  002BA8  6FC0               	movwf	(snprintf@fmt+1)& (0+255),b
  2985  002BAA  C0C9  F0C1         	movff	_percentagem,?_snprintf+6
  2986  002BAE  C0CA  F0C2         	movff	_percentagem+1,?_snprintf+7
  2987  002BB2  ECDE  F01B         	call	_snprintf	;wreg free
  2988  002BB6                     
  2989                           ;main.c: 55:     lcd_draw_line(40,150,280,150,0xFFE0);
  2990  002BB6  0E00               	movlw	0
  2991  002BB8  6E23               	movwf	(lcd_draw_line@x0+1)^0,c
  2992  002BBA  0E28               	movlw	40
  2993  002BBC  6E22               	movwf	lcd_draw_line@x0^0,c
  2994  002BBE  0E00               	movlw	0
  2995  002BC0  6E25               	movwf	(lcd_draw_line@y0+1)^0,c
  2996  002BC2  0E96               	movlw	150
  2997  002BC4  6E24               	movwf	lcd_draw_line@y0^0,c
  2998  002BC6  0E01               	movlw	1
  2999  002BC8  6E27               	movwf	(lcd_draw_line@x1+1)^0,c
  3000  002BCA  0E18               	movlw	24
  3001  002BCC  6E26               	movwf	lcd_draw_line@x1^0,c
  3002  002BCE  0E00               	movlw	0
  3003  002BD0  6E29               	movwf	(lcd_draw_line@y1+1)^0,c
  3004  002BD2  0E96               	movlw	150
  3005  002BD4  6E28               	movwf	lcd_draw_line@y1^0,c
  3006  002BD6  0EFF               	movlw	255
  3007  002BD8  6E2B               	movwf	(lcd_draw_line@color+1)^0,c
  3008  002BDA  0EE0               	movlw	224
  3009  002BDC  6E2A               	movwf	lcd_draw_line@color^0,c
  3010  002BDE  EC2B  F013         	call	_lcd_draw_line	;wreg free
  3011  002BE2                     
  3012                           ;main.c: 57:     lcd_draw_string (45,155,"XC8 - Biblioteca - LCD - ILI9341",0x001F,0x000
      +                          0);
  3013  002BE2  0E00               	movlw	0
  3014  002BE4  6E33               	movwf	(lcd_draw_string@x+1)^0,c
  3015  002BE6  0E2D               	movlw	45
  3016  002BE8  6E32               	movwf	lcd_draw_string@x^0,c
  3017  002BEA  0E00               	movlw	0
  3018  002BEC  6E35               	movwf	(lcd_draw_string@y+1)^0,c
  3019  002BEE  0E9B               	movlw	155
  3020  002BF0  6E34               	movwf	lcd_draw_string@y^0,c
  3021  002BF2  0E91               	movlw	low STR_2
  3022  002BF4  6E36               	movwf	lcd_draw_string@pS^0,c
  3023  002BF6  0EFF               	movlw	high STR_2
  3024  002BF8  6E37               	movwf	(lcd_draw_string@pS+1)^0,c
  3025  002BFA  0E00               	movlw	0
  3026  002BFC  6E39               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3027  002BFE  0E1F               	movlw	31
  3028  002C00  6E38               	movwf	lcd_draw_string@fg_color^0,c
  3029  002C02  0E00               	movlw	0
  3030  002C04  6E3B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3031  002C06  0E00               	movlw	0
  3032  002C08  6E3A               	movwf	lcd_draw_string@bg_color^0,c
  3033  002C0A  EC91  F014         	call	_lcd_draw_string	;wreg free
  3034  002C0E                     
  3035                           ;main.c: 59:     lcd_draw_string (120,120,"PIC - SEEV",0x0400,0x0000);
  3036  002C0E  0E00               	movlw	0
  3037  002C10  6E33               	movwf	(lcd_draw_string@x+1)^0,c
  3038  002C12  0E78               	movlw	120
  3039  002C14  6E32               	movwf	lcd_draw_string@x^0,c
  3040  002C16  0E00               	movlw	0
  3041  002C18  6E35               	movwf	(lcd_draw_string@y+1)^0,c
  3042  002C1A  0E78               	movlw	120
  3043  002C1C  6E34               	movwf	lcd_draw_string@y^0,c
  3044  002C1E  0EC3               	movlw	low STR_3
  3045  002C20  6E36               	movwf	lcd_draw_string@pS^0,c
  3046  002C22  0EFF               	movlw	high STR_3
  3047  002C24  6E37               	movwf	(lcd_draw_string@pS+1)^0,c
  3048  002C26  0E04               	movlw	4
  3049  002C28  6E39               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3050  002C2A  0E00               	movlw	0
  3051  002C2C  6E38               	movwf	lcd_draw_string@fg_color^0,c
  3052  002C2E  0E00               	movlw	0
  3053  002C30  6E3B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3054  002C32  0E00               	movlw	0
  3055  002C34  6E3A               	movwf	lcd_draw_string@bg_color^0,c
  3056  002C36  EC91  F014         	call	_lcd_draw_string	;wreg free
  3057  002C3A                     
  3058                           ;main.c: 61:     lcd_draw_string (120,80,string,0x0400,0x0000);
  3059  002C3A  0E00               	movlw	0
  3060  002C3C  6E33               	movwf	(lcd_draw_string@x+1)^0,c
  3061  002C3E  0E78               	movlw	120
  3062  002C40  6E32               	movwf	lcd_draw_string@x^0,c
  3063  002C42  0E00               	movlw	0
  3064  002C44  6E35               	movwf	(lcd_draw_string@y+1)^0,c
  3065  002C46  0E50               	movlw	80
  3066  002C48  6E34               	movwf	lcd_draw_string@y^0,c
  3067  002C4A  0E00               	movlw	low _string
  3068  002C4C  6E36               	movwf	lcd_draw_string@pS^0,c
  3069  002C4E  0E01               	movlw	high _string
  3070  002C50  6E37               	movwf	(lcd_draw_string@pS+1)^0,c
  3071  002C52  0E04               	movlw	4
  3072  002C54  6E39               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3073  002C56  0E00               	movlw	0
  3074  002C58  6E38               	movwf	lcd_draw_string@fg_color^0,c
  3075  002C5A  0E00               	movlw	0
  3076  002C5C  6E3B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3077  002C5E  0E00               	movlw	0
  3078  002C60  6E3A               	movwf	lcd_draw_string@bg_color^0,c
  3079  002C62  EC91  F014         	call	_lcd_draw_string	;wreg free
  3080  002C66                     
  3081                           ;main.c: 63:     (INTCONbits.GIE = 1);
  3082  002C66  8EF2               	bsf	242,7,c	;volatile
  3083  002C68                     l214:
  3084  002C68  EF34  F016         	goto	l214
  3085  002C6C  EF42  F000         	goto	start
  3086  002C70                     __end_of_main:
  3087                           	opt callstack 0
  3088                           
  3089 ;; *************** function _snprintf *****************
  3090 ;; Defined at:
  3091 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  s               2   91[BANK0 ] PTR unsigned char 
  3094 ;;		 -> string(100), 
  3095 ;;  n               2   93[BANK0 ] unsigned int 
  3096 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
  3097 ;;		 -> STR_1(17), 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  ap              2  101[BANK0 ] PTR void [1]
  3100 ;;		 -> ?_snprintf(2), 
  3101 ;;  ret             2    0        int 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2   91[BANK0 ] int 
  3104 ;; Registers used:
  3105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3111 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3112 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3114 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3115 ;;Total ram usage:       12 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:   13
  3118 ;; This function calls:
  3119 ;;		_vsnprintf
  3120 ;; This function is called by:
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text1
  3126  0037BC                     __ptext1:
  3127                           	opt callstack 0
  3128  0037BC                     _snprintf:
  3129                           	opt callstack 17
  3130  0037BC  0EC1               	movlw	low (?_snprintf+6)
  3131  0037BE  0100               	movlb	0	; () banked
  3132  0037C0  6FC5               	movwf	snprintf@ap& (0+255),b
  3133  0037C2  0E00               	movlw	high (?_snprintf+6)
  3134  0037C4  6FC6               	movwf	(snprintf@ap+1)& (0+255),b
  3135  0037C6                     
  3136                           ; BSR set to: 0
  3137  0037C6  C0BB  F0A5         	movff	snprintf@s,vsnprintf@s
  3138  0037CA  C0BC  F0A6         	movff	snprintf@s+1,vsnprintf@s+1
  3139  0037CE  C0BD  F0A7         	movff	snprintf@n,vsnprintf@n
  3140  0037D2  C0BE  F0A8         	movff	snprintf@n+1,vsnprintf@n+1
  3141  0037D6  C0BF  F0A9         	movff	snprintf@fmt,vsnprintf@fmt
  3142  0037DA  C0C0  F0AA         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3143  0037DE  0EC5               	movlw	low snprintf@ap
  3144  0037E0  6FAB               	movwf	vsnprintf@ap& (0+255),b
  3145  0037E2  0E00               	movlw	high snprintf@ap
  3146  0037E4  6FAC               	movwf	(vsnprintf@ap+1)& (0+255),b
  3147  0037E6  EC2D  F015         	call	_vsnprintf	;wreg free
  3148  0037EA  0012               	return		;funcret
  3149  0037EC                     __end_of_snprintf:
  3150                           	opt callstack 0
  3151                           
  3152 ;; *************** function _vsnprintf *****************
  3153 ;; Defined at:
  3154 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  s               2   69[BANK0 ] PTR unsigned char 
  3157 ;;		 -> string(100), 
  3158 ;;  n               2   71[BANK0 ] unsigned int 
  3159 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  3160 ;;		 -> STR_1(17), 
  3161 ;;  ap              2   75[BANK0 ] PTR PTR void 
  3162 ;;		 -> snprintf@ap(2), 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  f               6   85[BANK0 ] struct _IO_FILE
  3165 ;;  cnt             2   83[BANK0 ] int 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2   69[BANK0 ] int 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3175 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3176 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3178 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;Total ram usage:       22 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:   12
  3182 ;; This function calls:
  3183 ;;		_vfprintf
  3184 ;; This function is called by:
  3185 ;;		_snprintf
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text2
  3190  002A5A                     __ptext2:
  3191                           	opt callstack 0
  3192  002A5A                     _vsnprintf:
  3193                           	opt callstack 17
  3194  002A5A  0E80               	movlw	128
  3195  002A5C  0100               	movlb	0	; () banked
  3196  002A5E  5DA8               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3197  002A60  A0D8               	btfss	status,0,c
  3198  002A62  EF35  F015         	goto	u6321
  3199  002A66  EF37  F015         	goto	u6320
  3200  002A6A                     u6321:
  3201  002A6A  EF3F  F015         	goto	l5793
  3202  002A6E                     u6320:
  3203  002A6E                     
  3204                           ; BSR set to: 0
  3205  002A6E  0E00               	movlw	0
  3206  002A70  6FC8               	movwf	(_errno+1)& (0+255),b
  3207  002A72  0E4B               	movlw	75
  3208  002A74  6FC7               	movwf	_errno& (0+255),b
  3209  002A76                     
  3210                           ; BSR set to: 0
  3211  002A76  69A5               	setf	?_vsnprintf& (0+255),b
  3212  002A78  69A6               	setf	(?_vsnprintf+1)& (0+255),b
  3213  002A7A  EFB4  F015         	goto	l1466
  3214  002A7E                     l5793:
  3215                           
  3216                           ; BSR set to: 0
  3217  002A7E  C0A5  F0B5         	movff	vsnprintf@s,vsnprintf@f
  3218  002A82  C0A6  F0B6         	movff	vsnprintf@s+1,vsnprintf@f+1
  3219  002A86  51A8               	movf	(vsnprintf@n+1)& (0+255),w,b
  3220  002A88  E109               	bnz	u6330
  3221  002A8A  0E02               	movlw	2
  3222  002A8C  5DA7               	subwf	vsnprintf@n& (0+255),w,b
  3223  002A8E  A0D8               	btfss	status,0,c
  3224  002A90  EF4C  F015         	goto	u6331
  3225  002A94  EF4E  F015         	goto	u6330
  3226  002A98                     u6331:
  3227  002A98  EF5A  F015         	goto	l5799
  3228  002A9C                     u6330:
  3229  002A9C                     
  3230                           ; BSR set to: 0
  3231  002A9C  0EFF               	movlw	255
  3232  002A9E  25A7               	addwf	vsnprintf@n& (0+255),w,b
  3233  002AA0  6FB9               	movwf	(vsnprintf@f+4)& (0+255),b
  3234  002AA2  0EFF               	movlw	255
  3235  002AA4  21A8               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3236  002AA6  6FBA               	movwf	(vsnprintf@f+5)& (0+255),b
  3237  002AA8                     
  3238                           ; BSR set to: 0
  3239  002AA8  0E00               	movlw	0
  3240  002AAA  6FB8               	movwf	(vsnprintf@f+3)& (0+255),b
  3241  002AAC  0E00               	movlw	0
  3242  002AAE  6FB7               	movwf	(vsnprintf@f+2)& (0+255),b
  3243  002AB0  EF62  F015         	goto	l5801
  3244  002AB4                     l5799:
  3245                           
  3246                           ; BSR set to: 0
  3247  002AB4  0E00               	movlw	0
  3248  002AB6  6FBA               	movwf	(vsnprintf@f+5)& (0+255),b
  3249  002AB8  0E01               	movlw	1
  3250  002ABA  6FB9               	movwf	(vsnprintf@f+4)& (0+255),b
  3251  002ABC  0E00               	movlw	0
  3252  002ABE  6FB8               	movwf	(vsnprintf@f+3)& (0+255),b
  3253  002AC0  0E01               	movlw	1
  3254  002AC2  6FB7               	movwf	(vsnprintf@f+2)& (0+255),b
  3255  002AC4                     l5801:
  3256                           
  3257                           ; BSR set to: 0
  3258  002AC4  0EB5               	movlw	low vsnprintf@f
  3259  002AC6  6F9D               	movwf	vfprintf@fp& (0+255),b
  3260  002AC8  0E00               	movlw	high vsnprintf@f
  3261  002ACA  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  3262  002ACC  C0A9  F09F         	movff	vsnprintf@fmt,vfprintf@fmt
  3263  002AD0  C0AA  F0A0         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3264  002AD4  C0AB  F0A1         	movff	vsnprintf@ap,vfprintf@ap
  3265  002AD8  C0AC  F0A2         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3266  002ADC  EC4E  F019         	call	_vfprintf	;wreg free
  3267  002AE0  C09D  F0B3         	movff	?_vfprintf,vsnprintf@cnt
  3268  002AE4  C09E  F0B4         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3269  002AE8  0100               	movlb	0	; () banked
  3270  002AEA  51A7               	movf	vsnprintf@n& (0+255),w,b
  3271  002AEC  11A8               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3272  002AEE  B4D8               	btfsc	status,2,c
  3273  002AF0  EF7C  F015         	goto	u6341
  3274  002AF4  EF7E  F015         	goto	u6340
  3275  002AF8                     u6341:
  3276  002AF8  EFB0  F015         	goto	l5813
  3277  002AFC                     u6340:
  3278  002AFC                     
  3279                           ; BSR set to: 0
  3280  002AFC  BFB4               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3281  002AFE  EF83  F015         	goto	u6351
  3282  002B02  EF85  F015         	goto	u6350
  3283  002B06                     u6351:
  3284  002B06  EFB0  F015         	goto	l5813
  3285  002B0A                     u6350:
  3286  002B0A                     
  3287                           ; BSR set to: 0
  3288  002B0A  0EFF               	movlw	255
  3289  002B0C  6FAD               	movwf	??_vsnprintf& (0+255),b
  3290  002B0E  0EFF               	movlw	255
  3291  002B10  6FAE               	movwf	(??_vsnprintf+1)& (0+255),b
  3292  002B12  C0A7  F0AF         	movff	vsnprintf@n,??_vsnprintf+2
  3293  002B16  C0A8  F0B0         	movff	vsnprintf@n+1,??_vsnprintf+3
  3294  002B1A  51AD               	movf	??_vsnprintf& (0+255),w,b
  3295  002B1C  27AF               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3296  002B1E  51AE               	movf	(??_vsnprintf+1)& (0+255),w,b
  3297  002B20  23B0               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3298  002B22  51AF               	movf	(??_vsnprintf+2)& (0+255),w,b
  3299  002B24  5DB3               	subwf	vsnprintf@cnt& (0+255),w,b
  3300  002B26  51B0               	movf	(??_vsnprintf+3)& (0+255),w,b
  3301  002B28  59B4               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3302  002B2A  A0D8               	btfss	status,0,c
  3303  002B2C  EF9A  F015         	goto	u6361
  3304  002B30  EF9C  F015         	goto	u6360
  3305  002B34                     u6361:
  3306  002B34  EFA4  F015         	goto	l1471
  3307  002B38                     u6360:
  3308  002B38                     
  3309                           ; BSR set to: 0
  3310  002B38  0EFF               	movlw	255
  3311  002B3A  25A7               	addwf	vsnprintf@n& (0+255),w,b
  3312  002B3C  6FB1               	movwf	_vsnprintf$1985& (0+255),b
  3313  002B3E  0EFF               	movlw	255
  3314  002B40  21A8               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3315  002B42  6FB2               	movwf	(_vsnprintf$1985+1)& (0+255),b
  3316  002B44  EFA8  F015         	goto	l5811
  3317  002B48                     l1471:
  3318                           
  3319                           ; BSR set to: 0
  3320  002B48  C0B3  F0B1         	movff	vsnprintf@cnt,_vsnprintf$1985
  3321  002B4C  C0B4  F0B2         	movff	vsnprintf@cnt+1,_vsnprintf$1985+1
  3322  002B50                     l5811:
  3323                           
  3324                           ; BSR set to: 0
  3325  002B50  51B1               	movf	_vsnprintf$1985& (0+255),w,b
  3326  002B52  25A5               	addwf	vsnprintf@s& (0+255),w,b
  3327  002B54  6ED9               	movwf	fsr2l,c
  3328  002B56  51B2               	movf	(_vsnprintf$1985+1)& (0+255),w,b
  3329  002B58  21A6               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3330  002B5A  6EDA               	movwf	fsr2h,c
  3331  002B5C  0E00               	movlw	0
  3332  002B5E  6EDF               	movwf	indf2,c
  3333  002B60                     l5813:
  3334                           
  3335                           ; BSR set to: 0
  3336  002B60  C0B3  F0A5         	movff	vsnprintf@cnt,?_vsnprintf
  3337  002B64  C0B4  F0A6         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3338  002B68                     l1466:
  3339                           
  3340                           ; BSR set to: 0
  3341  002B68  0012               	return		;funcret
  3342  002B6A                     __end_of_vsnprintf:
  3343                           	opt callstack 0
  3344                           
  3345 ;; *************** function _vfprintf *****************
  3346 ;; Defined at:
  3347 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  3350 ;;		 -> vsnprintf@f(6), 
  3351 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  3352 ;;		 -> STR_1(17), 
  3353 ;;  ap              2   65[BANK0 ] PTR PTR void 
  3354 ;;		 -> snprintf@ap(2), 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  cfmt            2   67[BANK0 ] PTR unsigned char 
  3357 ;;		 -> STR_1(17), 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2   61[BANK0 ] int 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3367 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3368 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;Total ram usage:        8 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:   11
  3374 ;; This function calls:
  3375 ;;		_vfpfcnvrt
  3376 ;; This function is called by:
  3377 ;;		_vsnprintf
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text3
  3382  00329C                     __ptext3:
  3383                           	opt callstack 0
  3384  00329C                     _vfprintf:
  3385                           	opt callstack 17
  3386  00329C                     
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3388  00329C  C09F  F0A3         	movff	vfprintf@fmt,vfprintf@cfmt
  3389  0032A0  C0A0  F0A4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3390  0032A4                     
  3391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3392  0032A4  0E00               	movlw	0
  3393  0032A6  6E3E               	movwf	(_nout+1)^0,c
  3394  0032A8  0E00               	movlw	0
  3395  0032AA  6E3D               	movwf	_nout^0,c
  3396                           
  3397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3398  0032AC  EF6C  F019         	goto	l5731
  3399  0032B0                     l5729:
  3400                           
  3401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3402  0032B0  C09D  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3403  0032B4  C09E  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3404  0032B8  0EA3               	movlw	low vfprintf@cfmt
  3405  0032BA  0100               	movlb	0	; () banked
  3406  0032BC  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  3407  0032BE  0E00               	movlw	high vfprintf@cfmt
  3408  0032C0  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3409  0032C2  C0A1  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  3410  0032C6  C0A2  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3411  0032CA  EC44  F000         	call	_vfpfcnvrt	;wreg free
  3412  0032CE  0100               	movlb	0	; () banked
  3413  0032D0  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  3414  0032D2  263D               	addwf	_nout^0,f,c
  3415  0032D4  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3416  0032D6  223E               	addwfc	(_nout+1)^0,f,c
  3417  0032D8                     l5731:
  3418                           
  3419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3420  0032D8  C0A3  FFF6         	movff	vfprintf@cfmt,tblptrl
  3421  0032DC  C0A4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3422  0032E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3423  0032E0  6AF8               	clrf	tblptru,c
  3424  0032E2                     	endif
  3425  0032E2                     	if	0	;tblptru may be non-zero
  3426  0032E2                     	endif
  3427  0032E2  0008               	tblrd		*
  3428  0032E4  50F5               	movf	tablat,w,c
  3429  0032E6  0900               	iorlw	0
  3430  0032E8  A4D8               	btfss	status,2,c
  3431  0032EA  EF79  F019         	goto	u6221
  3432  0032EE  EF7B  F019         	goto	u6220
  3433  0032F2                     u6221:
  3434  0032F2  EF58  F019         	goto	l5729
  3435  0032F6                     u6220:
  3436  0032F6                     
  3437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3438  0032F6  C03D  F09D         	movff	_nout,?_vfprintf
  3439  0032FA  C03E  F09E         	movff	_nout+1,?_vfprintf+1
  3440  0032FE  0012               	return		;funcret
  3441  003300                     __end_of_vfprintf:
  3442                           	opt callstack 0
  3443                           
  3444 ;; *************** function _vfpfcnvrt *****************
  3445 ;; Defined at:
  3446 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  3449 ;;		 -> vsnprintf@f(6), 
  3450 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  3451 ;;		 -> vfprintf@cfmt(2), 
  3452 ;;  ap              2   32[BANK0 ] PTR PTR void 
  3453 ;;		 -> snprintf@ap(2), 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  llu             8   53[BANK0 ] unsigned long long 
  3456 ;;  ll              8   42[BANK0 ] long long 
  3457 ;;  f               4    0        long long 
  3458 ;;  ct              3    0        unsigned char [3]
  3459 ;;  vp              2   50[BANK0 ] PTR void 
  3460 ;;		 -> ?_snprintf(2), codigo_digital(2), 
  3461 ;;  done            2   36[BANK0 ] int 
  3462 ;;  cp              2   34[BANK0 ] PTR unsigned char 
  3463 ;;		 -> ?_snprintf(2), codigo_digital(2), 
  3464 ;;  i               2    0        int 
  3465 ;;  c               1   52[BANK0 ] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  2   28[BANK0 ] int 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3475 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;Total ram usage:       37 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:   10
  3482 ;; This function calls:
  3483 ;;		_atoi
  3484 ;;		_ctoa
  3485 ;;		_dtoa
  3486 ;;		_fputc
  3487 ;;		_isdigit
  3488 ;;		_otoa
  3489 ;;		_stoa
  3490 ;;		_strncmp
  3491 ;;		_utoa
  3492 ;;		_xtoa
  3493 ;; This function is called by:
  3494 ;;		_vfprintf
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text4
  3499  000088                     __ptext4:
  3500                           	opt callstack 0
  3501  000088                     _vfpfcnvrt:
  3502                           	opt callstack 17
  3503  000088                     
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3505  000088  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3506  00008C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3507  000090  CFDE FFF6          	movff	postinc2,tblptrl
  3508  000094  CFDD FFF7          	movff	postdec2,tblptrh
  3509  000098                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3510  000098  6AF8               	clrf	tblptru,c
  3511  00009A                     	endif
  3512  00009A                     	if	0	;tblptru may be non-zero
  3513  00009A                     	endif
  3514  00009A  0008               	tblrd		*
  3515  00009C  50F5               	movf	tablat,w,c
  3516  00009E  0A25               	xorlw	37
  3517  0000A0  A4D8               	btfss	status,2,c
  3518  0000A2  EF55  F000         	goto	u5751
  3519  0000A6  EF57  F000         	goto	u5750
  3520  0000AA                     u5751:
  3521  0000AA  EF65  F009         	goto	l5691
  3522  0000AE                     u5750:
  3523  0000AE                     
  3524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3525  0000AE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3526  0000B2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3527  0000B6  2ADE               	incf	postinc2,f,c
  3528  0000B8  0E00               	movlw	0
  3529  0000BA  22DD               	addwfc	postdec2,f,c
  3530  0000BC                     
  3531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3532  0000BC  0E00               	movlw	0
  3533  0000BE  6E40               	movwf	(_width+1)^0,c
  3534  0000C0  0E00               	movlw	0
  3535  0000C2  6E3F               	movwf	_width^0,c
  3536  0000C4  C03F  F043         	movff	_width,_flags
  3537  0000C8  C040  F044         	movff	_width+1,_flags+1
  3538  0000CC                     
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3540  0000CC  6841               	setf	_prec^0,c
  3541  0000CE  6842               	setf	(_prec+1)^0,c
  3542  0000D0                     
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3544  0000D0  0E00               	movlw	0
  3545  0000D2  0100               	movlb	0	; () banked
  3546  0000D4  6F85               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3547  0000D6  0E00               	movlw	0
  3548  0000D8  6F84               	movwf	vfpfcnvrt@done& (0+255),b
  3549                           
  3550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3551  0000DA  EFB6  F000         	goto	l5409
  3552  0000DE                     l5383:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3556  0000DE  8043               	bsf	_flags^0,0,c
  3557  0000E0                     l5385:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3561  0000E0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3562  0000E4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3563  0000E8  2ADE               	incf	postinc2,f,c
  3564  0000EA  0E00               	movlw	0
  3565  0000EC  22DD               	addwfc	postdec2,f,c
  3566                           
  3567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3568  0000EE  EFB6  F000         	goto	l5409
  3569  0000F2                     l5387:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3573  0000F2  8243               	bsf	_flags^0,1,c
  3574  0000F4  EF70  F000         	goto	l5385
  3575  0000F8                     l5391:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3579  0000F8  8443               	bsf	_flags^0,2,c
  3580  0000FA  EF70  F000         	goto	l5385
  3581  0000FE                     l5395:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3585  0000FE  8643               	bsf	_flags^0,3,c
  3586  000100  EF70  F000         	goto	l5385
  3587  000104                     l5399:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3591  000104  8843               	bsf	_flags^0,4,c
  3592  000106  EF70  F000         	goto	l5385
  3593  00010A                     l5403:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3597  00010A  0E00               	movlw	0
  3598  00010C  6F85               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3599  00010E  0E01               	movlw	1
  3600  000110  6F84               	movwf	vfpfcnvrt@done& (0+255),b
  3601                           
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3603  000112  EFB6  F000         	goto	l5409
  3604  000116                     l5407:
  3605                           
  3606                           ; BSR set to: 0
  3607  000116  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3608  00011A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3609  00011E  CFDE FFF6          	movff	postinc2,tblptrl
  3610  000122  CFDD FFF7          	movff	postdec2,tblptrh
  3611  000126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3612  000126  6AF8               	clrf	tblptru,c
  3613  000128                     	endif
  3614  000128                     	if	0	;tblptru may be non-zero
  3615  000128                     	endif
  3616  000128  0008               	tblrd		*
  3617  00012A  50F5               	movf	tablat,w,c
  3618  00012C  6E39               	movwf	??_vfpfcnvrt^0,c
  3619  00012E  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  3620                           
  3621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3622                           ; Switch size 1, requested type "simple"
  3623                           ; Number of cases is 1, Range of values is 0 to 0
  3624                           ; switch strategies available:
  3625                           ; Name         Instructions Cycles
  3626                           ; simple_byte            4     3 (average)
  3627                           ;	Chosen strategy is simple_byte
  3628  000130  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3629  000132  0A00               	xorlw	0	; case 0
  3630  000134  B4D8               	btfsc	status,2,c
  3631  000136  EF9F  F000         	goto	l6267
  3632  00013A  EF85  F000         	goto	l5403
  3633  00013E                     l6267:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ; Switch size 1, requested type "simple"
  3637                           ; Number of cases is 5, Range of values is 32 to 48
  3638                           ; switch strategies available:
  3639                           ; Name         Instructions Cycles
  3640                           ; simple_byte           16     9 (average)
  3641                           ;	Chosen strategy is simple_byte
  3642  00013E  5039               	movf	??_vfpfcnvrt^0,w,c
  3643  000140  0A20               	xorlw	32	; case 32
  3644  000142  B4D8               	btfsc	status,2,c
  3645  000144  EF7F  F000         	goto	l5395
  3646  000148  0A03               	xorlw	3	; case 35
  3647  00014A  B4D8               	btfsc	status,2,c
  3648  00014C  EF82  F000         	goto	l5399
  3649  000150  0A08               	xorlw	8	; case 43
  3650  000152  B4D8               	btfsc	status,2,c
  3651  000154  EF7C  F000         	goto	l5391
  3652  000158  0A06               	xorlw	6	; case 45
  3653  00015A  B4D8               	btfsc	status,2,c
  3654  00015C  EF6F  F000         	goto	l5383
  3655  000160  0A1D               	xorlw	29	; case 48
  3656  000162  B4D8               	btfsc	status,2,c
  3657  000164  EF79  F000         	goto	l5387
  3658  000168  EF85  F000         	goto	l5403
  3659  00016C                     l5409:
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3663  00016C  5184               	movf	vfpfcnvrt@done& (0+255),w,b
  3664  00016E  1185               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3665  000170  B4D8               	btfsc	status,2,c
  3666  000172  EFBD  F000         	goto	u5761
  3667  000176  EFBF  F000         	goto	u5760
  3668  00017A                     u5761:
  3669  00017A  EF8B  F000         	goto	l5407
  3670  00017E                     u5760:
  3671  00017E                     
  3672                           ; BSR set to: 0
  3673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3674  00017E  A043               	btfss	_flags^0,0,c
  3675  000180  EFC4  F000         	goto	u5771
  3676  000184  EFC6  F000         	goto	u5770
  3677  000188                     u5771:
  3678  000188  EFC7  F000         	goto	l5413
  3679  00018C                     u5770:
  3680  00018C                     
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3683  00018C  9243               	bcf	_flags^0,1,c
  3684  00018E                     l5413:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3688  00018E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3689  000192  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3690  000196  CFDE FFF6          	movff	postinc2,tblptrl
  3691  00019A  CFDD FFF7          	movff	postdec2,tblptrh
  3692  00019E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3693  00019E  6AF8               	clrf	tblptru,c
  3694  0001A0                     	endif
  3695  0001A0                     	if	0	;tblptru may be non-zero
  3696  0001A0                     	endif
  3697  0001A0  0008               	tblrd		*
  3698  0001A2  50F5               	movf	tablat,w,c
  3699  0001A4  0A2A               	xorlw	42
  3700  0001A6  A4D8               	btfss	status,2,c
  3701  0001A8  EFD8  F000         	goto	u5781
  3702  0001AC  EFDA  F000         	goto	u5780
  3703  0001B0                     u5781:
  3704  0001B0  EF03  F001         	goto	l5421
  3705  0001B4                     u5780:
  3706  0001B4                     
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3709  0001B4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3710  0001B8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3711  0001BC  2ADE               	incf	postinc2,f,c
  3712  0001BE  0E00               	movlw	0
  3713  0001C0  22DD               	addwfc	postdec2,f,c
  3714                           
  3715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3716  0001C2  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3717  0001C6  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3718  0001CA  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3719  0001CE  0E02               	movlw	2
  3720  0001D0  26DE               	addwf	postinc2,f,c
  3721  0001D2  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  3722  0001D6  0E00               	movlw	0
  3723  0001D8  22DD               	addwfc	postdec2,f,c
  3724  0001DA  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3725  0001DE  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3726  0001E2  CFDE F03F          	movff	postinc2,_width
  3727  0001E6  CFDD F040          	movff	postdec2,_width+1
  3728  0001EA                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3731  0001EA  BE40               	btfsc	(_width+1)^0,7,c
  3732  0001EC  EFFC  F000         	goto	u5790
  3733  0001F0  EFFA  F000         	goto	u5791
  3734  0001F4                     u5791:
  3735  0001F4  EF48  F001         	goto	l5431
  3736  0001F8                     u5790:
  3737  0001F8                     
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3740  0001F8  8043               	bsf	_flags^0,0,c
  3741                           
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3743  0001FA  6C3F               	negf	_width^0,c
  3744  0001FC  1E40               	comf	(_width+1)^0,f,c
  3745  0001FE  B0D8               	btfsc	status,0,c
  3746  000200  2A40               	incf	(_width+1)^0,f,c
  3747  000202  EF48  F001         	goto	l5431
  3748  000206                     l5421:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3752  000206  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3753  00020A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3754  00020E  CFDE F01A          	movff	postinc2,atoi@s
  3755  000212  CFDD F01B          	movff	postdec2,atoi@s+1
  3756  000216  EC1C  F010         	call	_atoi	;wreg free
  3757  00021A  C01A  F03F         	movff	?_atoi,_width
  3758  00021E  C01B  F040         	movff	?_atoi+1,_width+1
  3759                           
  3760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3761  000222  EF1A  F001         	goto	l5425
  3762  000226                     l5423:
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3766  000226  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3767  00022A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3768  00022E  2ADE               	incf	postinc2,f,c
  3769  000230  0E00               	movlw	0
  3770  000232  22DD               	addwfc	postdec2,f,c
  3771  000234                     l5425:
  3772  000234  0ED0               	movlw	208
  3773  000236  6E39               	movwf	??_vfpfcnvrt^0,c
  3774  000238  0EFF               	movlw	255
  3775  00023A  6E3A               	movwf	(??_vfpfcnvrt+1)^0,c
  3776  00023C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  000240  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  000244  CFDE FFF6          	movff	postinc2,tblptrl
  3779  000248  CFDD FFF7          	movff	postdec2,tblptrh
  3780  00024C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3781  00024C  6AF8               	clrf	tblptru,c
  3782  00024E                     	endif
  3783  00024E                     	if	0	;tblptru may be non-zero
  3784  00024E                     	endif
  3785  00024E  0008               	tblrd		*
  3786  000250  50F5               	movf	tablat,w,c
  3787  000252  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  3788  000254  6A3C               	clrf	(??_vfpfcnvrt+3)^0,c
  3789  000256  5039               	movf	??_vfpfcnvrt^0,w,c
  3790  000258  263B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3791  00025A  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3792  00025C  223C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3793  00025E  503C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3794  000260  E10A               	bnz	u5800
  3795  000262  0E0A               	movlw	10
  3796  000264  5C3B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3797  000266  A0D8               	btfss	status,0,c
  3798  000268  EF38  F001         	goto	u5801
  3799  00026C  EF3B  F001         	goto	u5800
  3800  000270                     u5801:
  3801  000270  0E01               	movlw	1
  3802  000272  EF3C  F001         	goto	u5810
  3803  000276                     u5800:
  3804  000276  0E00               	movlw	0
  3805  000278                     u5810:
  3806  000278  0100               	movlb	0	; () banked
  3807  00027A  6F86               	movwf	_vfpfcnvrt$1284& (0+255),b
  3808  00027C  6B87               	clrf	(_vfpfcnvrt$1284+1)& (0+255),b
  3809  00027E                     
  3810                           ; BSR set to: 0
  3811  00027E  5186               	movf	_vfpfcnvrt$1284& (0+255),w,b
  3812  000280  1187               	iorwf	(_vfpfcnvrt$1284+1)& (0+255),w,b
  3813  000282  A4D8               	btfss	status,2,c
  3814  000284  EF46  F001         	goto	u5821
  3815  000288  EF48  F001         	goto	u5820
  3816  00028C                     u5821:
  3817  00028C  EF13  F001         	goto	l5423
  3818  000290                     u5820:
  3819  000290                     l5431:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3823  000290  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3824  000294  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3825  000298  CFDE FFF6          	movff	postinc2,tblptrl
  3826  00029C  CFDD FFF7          	movff	postdec2,tblptrh
  3827  0002A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3828  0002A0  6AF8               	clrf	tblptru,c
  3829  0002A2                     	endif
  3830  0002A2                     	if	0	;tblptru may be non-zero
  3831  0002A2                     	endif
  3832  0002A2  0008               	tblrd		*
  3833  0002A4  50F5               	movf	tablat,w,c
  3834  0002A6  0A2E               	xorlw	46
  3835  0002A8  A4D8               	btfss	status,2,c
  3836  0002AA  EF59  F001         	goto	u5831
  3837  0002AE  EF5B  F001         	goto	u5830
  3838  0002B2                     u5831:
  3839  0002B2  EFDB  F001         	goto	l5451
  3840  0002B6                     u5830:
  3841  0002B6                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3844  0002B6  0E00               	movlw	0
  3845  0002B8  6E42               	movwf	(_prec+1)^0,c
  3846  0002BA  0E00               	movlw	0
  3847  0002BC  6E41               	movwf	_prec^0,c
  3848  0002BE                     
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3851  0002BE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3852  0002C2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3853  0002C6  2ADE               	incf	postinc2,f,c
  3854  0002C8  0E00               	movlw	0
  3855  0002CA  22DD               	addwfc	postdec2,f,c
  3856  0002CC                     
  3857                           ; BSR set to: 0
  3858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3859  0002CC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3860  0002D0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3861  0002D4  CFDE FFF6          	movff	postinc2,tblptrl
  3862  0002D8  CFDD FFF7          	movff	postdec2,tblptrh
  3863  0002DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3864  0002DC  6AF8               	clrf	tblptru,c
  3865  0002DE                     	endif
  3866  0002DE                     	if	0	;tblptru may be non-zero
  3867  0002DE                     	endif
  3868  0002DE  0008               	tblrd		*
  3869  0002E0  50F5               	movf	tablat,w,c
  3870  0002E2  0A2A               	xorlw	42
  3871  0002E4  A4D8               	btfss	status,2,c
  3872  0002E6  EF77  F001         	goto	u5841
  3873  0002EA  EF79  F001         	goto	u5840
  3874  0002EE                     u5841:
  3875  0002EE  EF96  F001         	goto	l5441
  3876  0002F2                     u5840:
  3877  0002F2                     
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3880  0002F2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3881  0002F6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3882  0002FA  2ADE               	incf	postinc2,f,c
  3883  0002FC  0E00               	movlw	0
  3884  0002FE  22DD               	addwfc	postdec2,f,c
  3885                           
  3886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3887  000300  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3888  000304  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3889  000308  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3890  00030C  0E02               	movlw	2
  3891  00030E  26DE               	addwf	postinc2,f,c
  3892  000310  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  3893  000314  0E00               	movlw	0
  3894  000316  22DD               	addwfc	postdec2,f,c
  3895  000318  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3896  00031C  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3897  000320  CFDE F041          	movff	postinc2,_prec
  3898  000324  CFDD F042          	movff	postdec2,_prec+1
  3899                           
  3900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3901  000328  EFDB  F001         	goto	l5451
  3902  00032C                     l5441:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3906  00032C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3907  000330  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3908  000334  CFDE F01A          	movff	postinc2,atoi@s
  3909  000338  CFDD F01B          	movff	postdec2,atoi@s+1
  3910  00033C  EC1C  F010         	call	_atoi	;wreg free
  3911  000340  C01A  F041         	movff	?_atoi,_prec
  3912  000344  C01B  F042         	movff	?_atoi+1,_prec+1
  3913                           
  3914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3915  000348  EFAD  F001         	goto	l5445
  3916  00034C                     l5443:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3920  00034C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3921  000350  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3922  000354  2ADE               	incf	postinc2,f,c
  3923  000356  0E00               	movlw	0
  3924  000358  22DD               	addwfc	postdec2,f,c
  3925  00035A                     l5445:
  3926  00035A  0ED0               	movlw	208
  3927  00035C  6E39               	movwf	??_vfpfcnvrt^0,c
  3928  00035E  0EFF               	movlw	255
  3929  000360  6E3A               	movwf	(??_vfpfcnvrt+1)^0,c
  3930  000362  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3931  000366  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3932  00036A  CFDE FFF6          	movff	postinc2,tblptrl
  3933  00036E  CFDD FFF7          	movff	postdec2,tblptrh
  3934  000372                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3935  000372  6AF8               	clrf	tblptru,c
  3936  000374                     	endif
  3937  000374                     	if	0	;tblptru may be non-zero
  3938  000374                     	endif
  3939  000374  0008               	tblrd		*
  3940  000376  50F5               	movf	tablat,w,c
  3941  000378  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  3942  00037A  6A3C               	clrf	(??_vfpfcnvrt+3)^0,c
  3943  00037C  5039               	movf	??_vfpfcnvrt^0,w,c
  3944  00037E  263B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3945  000380  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3946  000382  223C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3947  000384  503C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3948  000386  E10A               	bnz	u5850
  3949  000388  0E0A               	movlw	10
  3950  00038A  5C3B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3951  00038C  A0D8               	btfss	status,0,c
  3952  00038E  EFCB  F001         	goto	u5851
  3953  000392  EFCE  F001         	goto	u5850
  3954  000396                     u5851:
  3955  000396  0E01               	movlw	1
  3956  000398  EFCF  F001         	goto	u5860
  3957  00039C                     u5850:
  3958  00039C  0E00               	movlw	0
  3959  00039E                     u5860:
  3960  00039E  0100               	movlb	0	; () banked
  3961  0003A0  6F88               	movwf	_vfpfcnvrt$1285& (0+255),b
  3962  0003A2  6B89               	clrf	(_vfpfcnvrt$1285+1)& (0+255),b
  3963  0003A4                     
  3964                           ; BSR set to: 0
  3965  0003A4  5188               	movf	_vfpfcnvrt$1285& (0+255),w,b
  3966  0003A6  1189               	iorwf	(_vfpfcnvrt$1285+1)& (0+255),w,b
  3967  0003A8  A4D8               	btfss	status,2,c
  3968  0003AA  EFD9  F001         	goto	u5871
  3969  0003AE  EFDB  F001         	goto	u5870
  3970  0003B2                     u5871:
  3971  0003B2  EFA6  F001         	goto	l5443
  3972  0003B6                     u5870:
  3973  0003B6                     l5451:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3977  0003B6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3978  0003BA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3979  0003BE  CFDE FFF6          	movff	postinc2,tblptrl
  3980  0003C2  CFDD FFF7          	movff	postdec2,tblptrh
  3981  0003C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3982  0003C6  6AF8               	clrf	tblptru,c
  3983  0003C8                     	endif
  3984  0003C8                     	if	0	;tblptru may be non-zero
  3985  0003C8                     	endif
  3986  0003C8  0008               	tblrd		*
  3987  0003CA  50F5               	movf	tablat,w,c
  3988  0003CC  0A63               	xorlw	99
  3989  0003CE  A4D8               	btfss	status,2,c
  3990  0003D0  EFEC  F001         	goto	u5881
  3991  0003D4  EFEE  F001         	goto	u5880
  3992  0003D8                     u5881:
  3993  0003D8  EF15  F002         	goto	l5459
  3994  0003DC                     u5880:
  3995  0003DC                     
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  3998  0003DC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3999  0003E0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4000  0003E4  2ADE               	incf	postinc2,f,c
  4001  0003E6  0E00               	movlw	0
  4002  0003E8  22DD               	addwfc	postdec2,f,c
  4003                           
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4005  0003EA  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4006  0003EE  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4007  0003F2  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4008  0003F6  0E02               	movlw	2
  4009  0003F8  26DE               	addwf	postinc2,f,c
  4010  0003FA  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4011  0003FE  0E00               	movlw	0
  4012  000400  22DD               	addwfc	postdec2,f,c
  4013  000402  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4014  000406  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4015  00040A  50DF               	movf	indf2,w,c
  4016  00040C  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  4017  00040E                     
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4020  00040E  C07C  F02E         	movff	vfpfcnvrt@fp,ctoa@fp
  4021  000412  C07D  F02F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4022  000416  C094  F030         	movff	vfpfcnvrt@c,ctoa@c
  4023  00041A  ECAF  F019         	call	_ctoa	;wreg free
  4024  00041E  C02E  F07C         	movff	?_ctoa,?_vfpfcnvrt
  4025  000422  C02F  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4026  000426  EF81  F009         	goto	l611
  4027  00042A                     l5459:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4031  00042A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4032  00042E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4033  000432  CFDE F013          	movff	postinc2,strncmp@_l
  4034  000436  CFDD F014          	movff	postdec2,strncmp@_l+1
  4035  00043A  0ED2               	movlw	low STR_4
  4036  00043C  6E15               	movwf	strncmp@_r^0,c
  4037  00043E  0EFF               	movlw	high STR_4
  4038  000440  6E16               	movwf	(strncmp@_r+1)^0,c
  4039  000442  0E00               	movlw	0
  4040  000444  6E18               	movwf	(strncmp@n+1)^0,c
  4041  000446  0E03               	movlw	3
  4042  000448  6E17               	movwf	strncmp@n^0,c
  4043  00044A  ECB0  F016         	call	_strncmp	;wreg free
  4044  00044E  5013               	movf	?_strncmp^0,w,c
  4045  000450  1014               	iorwf	(?_strncmp+1)^0,w,c
  4046  000452  B4D8               	btfsc	status,2,c
  4047  000454  EF2E  F002         	goto	u5891
  4048  000458  EF30  F002         	goto	u5890
  4049  00045C                     u5891:
  4050  00045C  EF4B  F002         	goto	l5463
  4051  000460                     u5890:
  4052  000460  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4053  000464  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4054  000468  CFDE F013          	movff	postinc2,strncmp@_l
  4055  00046C  CFDD F014          	movff	postdec2,strncmp@_l+1
  4056  000470  0ED6               	movlw	low STR_8
  4057  000472  6E15               	movwf	strncmp@_r^0,c
  4058  000474  0EFF               	movlw	high STR_8
  4059  000476  6E16               	movwf	(strncmp@_r+1)^0,c
  4060  000478  0E00               	movlw	0
  4061  00047A  6E18               	movwf	(strncmp@n+1)^0,c
  4062  00047C  0E03               	movlw	3
  4063  00047E  6E17               	movwf	strncmp@n^0,c
  4064  000480  ECB0  F016         	call	_strncmp	;wreg free
  4065  000484  5013               	movf	?_strncmp^0,w,c
  4066  000486  1014               	iorwf	(?_strncmp+1)^0,w,c
  4067  000488  A4D8               	btfss	status,2,c
  4068  00048A  EF49  F002         	goto	u5901
  4069  00048E  EF4B  F002         	goto	u5900
  4070  000492                     u5901:
  4071  000492  EF8C  F002         	goto	l5469
  4072  000496                     u5900:
  4073  000496                     l5463:
  4074                           
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4076  000496  0E03               	movlw	3
  4077  000498  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4078  00049C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4079  0004A0  26DE               	addwf	postinc2,f,c
  4080  0004A2  0E00               	movlw	0
  4081  0004A4  22DD               	addwfc	postdec2,f,c
  4082                           
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4084  0004A6  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4085  0004AA  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4086  0004AE  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4087  0004B2  0E02               	movlw	2
  4088  0004B4  26DE               	addwf	postinc2,f,c
  4089  0004B6  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4090  0004BA  0E00               	movlw	0
  4091  0004BC  22DD               	addwfc	postdec2,f,c
  4092  0004BE  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4093  0004C2  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4094  0004C6  50DF               	movf	indf2,w,c
  4095  0004C8  0100               	movlb	0	; () banked
  4096  0004CA  6F8A               	movwf	vfpfcnvrt@ll& (0+255),b
  4097  0004CC  0E00               	movlw	0
  4098  0004CE  BF8A               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4099  0004D0  0EFF               	movlw	-1
  4100  0004D2  6F8B               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4101  0004D4  6F8C               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4102  0004D6  6F8D               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4103  0004D8  6F8E               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4104  0004DA  6F8F               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4105  0004DC  6F90               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4106  0004DE  6F91               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4107  0004E0                     l5465:
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4111  0004E0  C07C  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  4112  0004E4  C07D  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4113  0004E8  C08A  F030         	movff	vfpfcnvrt@ll,dtoa@d
  4114  0004EC  C08B  F031         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4115  0004F0  C08C  F032         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4116  0004F4  C08D  F033         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4117  0004F8  C08E  F034         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4118  0004FC  C08F  F035         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4119  000500  C090  F036         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4120  000504  C091  F037         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4121  000508  EC45  F00B         	call	_dtoa	;wreg free
  4122  00050C  C02E  F07C         	movff	?_dtoa,?_vfpfcnvrt
  4123  000510  C02F  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4124  000514  EF81  F009         	goto	l611
  4125  000518                     l5469:
  4126                           
  4127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4128  000518  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4129  00051C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4130  000520  CFDE F013          	movff	postinc2,strncmp@_l
  4131  000524  CFDD F014          	movff	postdec2,strncmp@_l+1
  4132  000528  0ED3               	movlw	low (STR_4+1)
  4133  00052A  6E15               	movwf	strncmp@_r^0,c
  4134  00052C  0EFF               	movlw	high (STR_4+1)
  4135  00052E  6E16               	movwf	(strncmp@_r+1)^0,c
  4136  000530  0E00               	movlw	0
  4137  000532  6E18               	movwf	(strncmp@n+1)^0,c
  4138  000534  0E02               	movlw	2
  4139  000536  6E17               	movwf	strncmp@n^0,c
  4140  000538  ECB0  F016         	call	_strncmp	;wreg free
  4141  00053C  5013               	movf	?_strncmp^0,w,c
  4142  00053E  1014               	iorwf	(?_strncmp+1)^0,w,c
  4143  000540  B4D8               	btfsc	status,2,c
  4144  000542  EFA5  F002         	goto	u5911
  4145  000546  EFA7  F002         	goto	u5910
  4146  00054A                     u5911:
  4147  00054A  EFC2  F002         	goto	l5473
  4148  00054E                     u5910:
  4149  00054E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4150  000552  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4151  000556  CFDE F013          	movff	postinc2,strncmp@_l
  4152  00055A  CFDD F014          	movff	postdec2,strncmp@_l+1
  4153  00055E  0ED7               	movlw	low (STR_8+1)
  4154  000560  6E15               	movwf	strncmp@_r^0,c
  4155  000562  0EFF               	movlw	high (STR_8+1)
  4156  000564  6E16               	movwf	(strncmp@_r+1)^0,c
  4157  000566  0E00               	movlw	0
  4158  000568  6E18               	movwf	(strncmp@n+1)^0,c
  4159  00056A  0E02               	movlw	2
  4160  00056C  6E17               	movwf	strncmp@n^0,c
  4161  00056E  ECB0  F016         	call	_strncmp	;wreg free
  4162  000572  5013               	movf	?_strncmp^0,w,c
  4163  000574  1014               	iorwf	(?_strncmp+1)^0,w,c
  4164  000576  A4D8               	btfss	status,2,c
  4165  000578  EFC0  F002         	goto	u5921
  4166  00057C  EFC2  F002         	goto	u5920
  4167  000580                     u5921:
  4168  000580  EFEA  F002         	goto	l5479
  4169  000584                     u5920:
  4170  000584                     l5473:
  4171                           
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4173  000584  0E02               	movlw	2
  4174  000586  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4175  00058A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4176  00058E  26DE               	addwf	postinc2,f,c
  4177  000590  0E00               	movlw	0
  4178  000592  22DD               	addwfc	postdec2,f,c
  4179                           
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4181  000594  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4182  000598  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4183  00059C  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4184  0005A0  0E02               	movlw	2
  4185  0005A2  26DE               	addwf	postinc2,f,c
  4186  0005A4  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4187  0005A8  0E00               	movlw	0
  4188  0005AA  22DD               	addwfc	postdec2,f,c
  4189  0005AC  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4190  0005B0  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4191  0005B4  CFDE F08A          	movff	postinc2,vfpfcnvrt@ll
  4192  0005B8  CFDD F08B          	movff	postdec2,vfpfcnvrt@ll+1
  4193  0005BC  0100               	movlb	0	; () banked
  4194  0005BE  0E00               	movlw	0
  4195  0005C0  BF8B               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4196  0005C2  0EFF               	movlw	-1
  4197  0005C4  6F8C               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4198  0005C6  6F8D               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4199  0005C8  6F8E               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4200  0005CA  6F8F               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4201  0005CC  6F90               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4202  0005CE  6F91               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4203  0005D0  EF70  F002         	goto	l5465
  4204  0005D4                     l5479:
  4205                           
  4206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4207  0005D4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4208  0005D8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4209  0005DC  CFDE FFF6          	movff	postinc2,tblptrl
  4210  0005E0  CFDD FFF7          	movff	postdec2,tblptrh
  4211  0005E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4212  0005E4  6AF8               	clrf	tblptru,c
  4213  0005E6                     	endif
  4214  0005E6                     	if	0	;tblptru may be non-zero
  4215  0005E6                     	endif
  4216  0005E6  0008               	tblrd		*
  4217  0005E8  50F5               	movf	tablat,w,c
  4218  0005EA  0A64               	xorlw	100
  4219  0005EC  B4D8               	btfsc	status,2,c
  4220  0005EE  EFFB  F002         	goto	u5931
  4221  0005F2  EFFD  F002         	goto	u5930
  4222  0005F6                     u5931:
  4223  0005F6  EF10  F003         	goto	l5483
  4224  0005FA                     u5930:
  4225  0005FA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4226  0005FE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4227  000602  CFDE FFF6          	movff	postinc2,tblptrl
  4228  000606  CFDD FFF7          	movff	postdec2,tblptrh
  4229  00060A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4230  00060A  6AF8               	clrf	tblptru,c
  4231  00060C                     	endif
  4232  00060C                     	if	0	;tblptru may be non-zero
  4233  00060C                     	endif
  4234  00060C  0008               	tblrd		*
  4235  00060E  50F5               	movf	tablat,w,c
  4236  000610  0A69               	xorlw	105
  4237  000612  A4D8               	btfss	status,2,c
  4238  000614  EF0E  F003         	goto	u5941
  4239  000618  EF10  F003         	goto	u5940
  4240  00061C                     u5941:
  4241  00061C  EF37  F003         	goto	l5489
  4242  000620                     u5940:
  4243  000620                     l5483:
  4244                           
  4245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4246  000620  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4247  000624  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4248  000628  2ADE               	incf	postinc2,f,c
  4249  00062A  0E00               	movlw	0
  4250  00062C  22DD               	addwfc	postdec2,f,c
  4251                           
  4252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4253  00062E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4254  000632  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4255  000636  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4256  00063A  0E02               	movlw	2
  4257  00063C  26DE               	addwf	postinc2,f,c
  4258  00063E  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4259  000642  0E00               	movlw	0
  4260  000644  22DD               	addwfc	postdec2,f,c
  4261  000646  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4262  00064A  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4263  00064E  CFDE F08A          	movff	postinc2,vfpfcnvrt@ll
  4264  000652  CFDD F08B          	movff	postdec2,vfpfcnvrt@ll+1
  4265  000656  0100               	movlb	0	; () banked
  4266  000658  0E00               	movlw	0
  4267  00065A  BF8B               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4268  00065C  0EFF               	movlw	-1
  4269  00065E  6F8C               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4270  000660  6F8D               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4271  000662  6F8E               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4272  000664  6F8F               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4273  000666  6F90               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4274  000668  6F91               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4275  00066A  EF70  F002         	goto	l5465
  4276  00066E                     l5489:
  4277                           
  4278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4279  00066E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4280  000672  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4281  000676  CFDE F013          	movff	postinc2,strncmp@_l
  4282  00067A  CFDD F014          	movff	postdec2,strncmp@_l+1
  4283  00067E  0EED               	movlw	low STR_22
  4284  000680  6E15               	movwf	strncmp@_r^0,c
  4285  000682  0EFF               	movlw	high STR_22
  4286  000684  6E16               	movwf	(strncmp@_r+1)^0,c
  4287  000686  0E00               	movlw	0
  4288  000688  6E18               	movwf	(strncmp@n+1)^0,c
  4289  00068A  0E02               	movlw	2
  4290  00068C  6E17               	movwf	strncmp@n^0,c
  4291  00068E  ECB0  F016         	call	_strncmp	;wreg free
  4292  000692  5013               	movf	?_strncmp^0,w,c
  4293  000694  1014               	iorwf	(?_strncmp+1)^0,w,c
  4294  000696  B4D8               	btfsc	status,2,c
  4295  000698  EF50  F003         	goto	u5951
  4296  00069C  EF52  F003         	goto	u5950
  4297  0006A0                     u5951:
  4298  0006A0  EF6D  F003         	goto	l5493
  4299  0006A4                     u5950:
  4300  0006A4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4301  0006A8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4302  0006AC  CFDE F013          	movff	postinc2,strncmp@_l
  4303  0006B0  CFDD F014          	movff	postdec2,strncmp@_l+1
  4304  0006B4  0EF0               	movlw	low STR_26
  4305  0006B6  6E15               	movwf	strncmp@_r^0,c
  4306  0006B8  0EFF               	movlw	high STR_26
  4307  0006BA  6E16               	movwf	(strncmp@_r+1)^0,c
  4308  0006BC  0E00               	movlw	0
  4309  0006BE  6E18               	movwf	(strncmp@n+1)^0,c
  4310  0006C0  0E02               	movlw	2
  4311  0006C2  6E17               	movwf	strncmp@n^0,c
  4312  0006C4  ECB0  F016         	call	_strncmp	;wreg free
  4313  0006C8  5013               	movf	?_strncmp^0,w,c
  4314  0006CA  1014               	iorwf	(?_strncmp+1)^0,w,c
  4315  0006CC  A4D8               	btfss	status,2,c
  4316  0006CE  EF6B  F003         	goto	u5961
  4317  0006D2  EF6D  F003         	goto	u5960
  4318  0006D6                     u5961:
  4319  0006D6  EF96  F003         	goto	l5499
  4320  0006DA                     u5960:
  4321  0006DA                     l5493:
  4322                           
  4323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4324  0006DA  0E02               	movlw	2
  4325  0006DC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4326  0006E0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4327  0006E4  26DE               	addwf	postinc2,f,c
  4328  0006E6  0E00               	movlw	0
  4329  0006E8  22DD               	addwfc	postdec2,f,c
  4330                           
  4331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4332  0006EA  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4333  0006EE  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4334  0006F2  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4335  0006F6  0E02               	movlw	2
  4336  0006F8  26DE               	addwf	postinc2,f,c
  4337  0006FA  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4338  0006FE  0E00               	movlw	0
  4339  000700  22DD               	addwfc	postdec2,f,c
  4340  000702  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4341  000706  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4342  00070A  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4343  00070E  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4344  000712  C03B  F08A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4345  000716  C03C  F08B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4346  00071A  0100               	movlb	0	; () banked
  4347  00071C  6B8C               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4348  00071E  6B8D               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4349  000720  6B8E               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4350  000722  6B8F               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4351  000724  6B90               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4352  000726  6B91               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4353  000728  EF70  F002         	goto	l5465
  4354  00072C                     l5499:
  4355                           
  4356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4357  00072C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4358  000730  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4359  000734  CFDE F013          	movff	postinc2,strncmp@_l
  4360  000738  CFDD F014          	movff	postdec2,strncmp@_l+1
  4361  00073C  0EDE               	movlw	low STR_31
  4362  00073E  6E15               	movwf	strncmp@_r^0,c
  4363  000740  0EFF               	movlw	high STR_31
  4364  000742  6E16               	movwf	(strncmp@_r+1)^0,c
  4365  000744  0E00               	movlw	0
  4366  000746  6E18               	movwf	(strncmp@n+1)^0,c
  4367  000748  0E03               	movlw	3
  4368  00074A  6E17               	movwf	strncmp@n^0,c
  4369  00074C  ECB0  F016         	call	_strncmp	;wreg free
  4370  000750  5013               	movf	?_strncmp^0,w,c
  4371  000752  1014               	iorwf	(?_strncmp+1)^0,w,c
  4372  000754  A4D8               	btfss	status,2,c
  4373  000756  EFAF  F003         	goto	u5971
  4374  00075A  EFB1  F003         	goto	u5970
  4375  00075E                     u5971:
  4376  00075E  EFF1  F003         	goto	l5507
  4377  000762                     u5970:
  4378  000762                     
  4379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4380  000762  0E03               	movlw	3
  4381  000764  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4382  000768  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4383  00076C  26DE               	addwf	postinc2,f,c
  4384  00076E  0E00               	movlw	0
  4385  000770  22DD               	addwfc	postdec2,f,c
  4386                           
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4388  000772  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4389  000776  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4390  00077A  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4391  00077E  0E02               	movlw	2
  4392  000780  26DE               	addwf	postinc2,f,c
  4393  000782  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4394  000786  0E00               	movlw	0
  4395  000788  22DD               	addwfc	postdec2,f,c
  4396  00078A  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4397  00078E  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4398  000792  50DF               	movf	indf2,w,c
  4399  000794  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  4400  000796  503B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4401  000798  0100               	movlb	0	; () banked
  4402  00079A  6F95               	movwf	vfpfcnvrt@llu& (0+255),b
  4403  00079C  6B96               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4404  00079E  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4405  0007A0  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4406  0007A2  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4407  0007A4  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4408  0007A6  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4409  0007A8  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4410  0007AA                     l5503:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  4414  0007AA  C07C  F02E         	movff	vfpfcnvrt@fp,otoa@fp
  4415  0007AE  C07D  F02F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4416  0007B2  C095  F030         	movff	vfpfcnvrt@llu,otoa@d
  4417  0007B6  C096  F031         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4418  0007BA  C097  F032         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4419  0007BE  C098  F033         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4420  0007C2  C099  F034         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4421  0007C6  C09A  F035         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4422  0007CA  C09B  F036         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4423  0007CE  C09C  F037         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4424  0007D2  EC26  F00F         	call	_otoa	;wreg free
  4425  0007D6  C02E  F07C         	movff	?_otoa,?_vfpfcnvrt
  4426  0007DA  C02F  F07D         	movff	?_otoa+1,?_vfpfcnvrt+1
  4427  0007DE  EF81  F009         	goto	l611
  4428  0007E2                     l5507:
  4429                           
  4430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4431  0007E2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4432  0007E6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4433  0007EA  CFDE F013          	movff	postinc2,strncmp@_l
  4434  0007EE  CFDD F014          	movff	postdec2,strncmp@_l+1
  4435  0007F2  0EDF               	movlw	low (STR_31+1)
  4436  0007F4  6E15               	movwf	strncmp@_r^0,c
  4437  0007F6  0EFF               	movlw	high (STR_31+1)
  4438  0007F8  6E16               	movwf	(strncmp@_r+1)^0,c
  4439  0007FA  0E00               	movlw	0
  4440  0007FC  6E18               	movwf	(strncmp@n+1)^0,c
  4441  0007FE  0E02               	movlw	2
  4442  000800  6E17               	movwf	strncmp@n^0,c
  4443  000802  ECB0  F016         	call	_strncmp	;wreg free
  4444  000806  5013               	movf	?_strncmp^0,w,c
  4445  000808  1014               	iorwf	(?_strncmp+1)^0,w,c
  4446  00080A  A4D8               	btfss	status,2,c
  4447  00080C  EF0A  F004         	goto	u5981
  4448  000810  EF0C  F004         	goto	u5980
  4449  000814                     u5981:
  4450  000814  EF35  F004         	goto	l5515
  4451  000818                     u5980:
  4452  000818                     
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4454  000818  0E02               	movlw	2
  4455  00081A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4456  00081E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4457  000822  26DE               	addwf	postinc2,f,c
  4458  000824  0E00               	movlw	0
  4459  000826  22DD               	addwfc	postdec2,f,c
  4460                           
  4461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4462  000828  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4463  00082C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4464  000830  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4465  000834  0E02               	movlw	2
  4466  000836  26DE               	addwf	postinc2,f,c
  4467  000838  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4468  00083C  0E00               	movlw	0
  4469  00083E  22DD               	addwfc	postdec2,f,c
  4470  000840  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4471  000844  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4472  000848  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4473  00084C  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4474  000850  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4475  000854  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4476  000858  0100               	movlb	0	; () banked
  4477  00085A  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4478  00085C  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4479  00085E  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4480  000860  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4481  000862  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4482  000864  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4483  000866  EFD5  F003         	goto	l5503
  4484  00086A                     l5515:
  4485                           
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  4487  00086A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4488  00086E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4489  000872  CFDE FFF6          	movff	postinc2,tblptrl
  4490  000876  CFDD FFF7          	movff	postdec2,tblptrh
  4491  00087A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4492  00087A  6AF8               	clrf	tblptru,c
  4493  00087C                     	endif
  4494  00087C                     	if	0	;tblptru may be non-zero
  4495  00087C                     	endif
  4496  00087C  0008               	tblrd		*
  4497  00087E  50F5               	movf	tablat,w,c
  4498  000880  0A6F               	xorlw	111
  4499  000882  A4D8               	btfss	status,2,c
  4500  000884  EF46  F004         	goto	u5991
  4501  000888  EF48  F004         	goto	u5990
  4502  00088C                     u5991:
  4503  00088C  EF70  F004         	goto	l5523
  4504  000890                     u5990:
  4505  000890                     
  4506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  4507  000890  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4508  000894  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4509  000898  2ADE               	incf	postinc2,f,c
  4510  00089A  0E00               	movlw	0
  4511  00089C  22DD               	addwfc	postdec2,f,c
  4512                           
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  4514  00089E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4515  0008A2  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4516  0008A6  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4517  0008AA  0E02               	movlw	2
  4518  0008AC  26DE               	addwf	postinc2,f,c
  4519  0008AE  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4520  0008B2  0E00               	movlw	0
  4521  0008B4  22DD               	addwfc	postdec2,f,c
  4522  0008B6  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4523  0008BA  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4524  0008BE  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4525  0008C2  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4526  0008C6  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4527  0008CA  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4528  0008CE  0100               	movlb	0	; () banked
  4529  0008D0  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4530  0008D2  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4531  0008D4  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4532  0008D6  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4533  0008D8  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4534  0008DA  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4535  0008DC  EFD5  F003         	goto	l5503
  4536  0008E0                     l5523:
  4537                           
  4538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4539  0008E0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4540  0008E4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4541  0008E8  CFDE F013          	movff	postinc2,strncmp@_l
  4542  0008EC  CFDD F014          	movff	postdec2,strncmp@_l+1
  4543  0008F0  0EF6               	movlw	low STR_41
  4544  0008F2  6E15               	movwf	strncmp@_r^0,c
  4545  0008F4  0EFF               	movlw	high STR_41
  4546  0008F6  6E16               	movwf	(strncmp@_r+1)^0,c
  4547  0008F8  0E00               	movlw	0
  4548  0008FA  6E18               	movwf	(strncmp@n+1)^0,c
  4549  0008FC  0E02               	movlw	2
  4550  0008FE  6E17               	movwf	strncmp@n^0,c
  4551  000900  ECB0  F016         	call	_strncmp	;wreg free
  4552  000904  5013               	movf	?_strncmp^0,w,c
  4553  000906  1014               	iorwf	(?_strncmp+1)^0,w,c
  4554  000908  A4D8               	btfss	status,2,c
  4555  00090A  EF89  F004         	goto	u6001
  4556  00090E  EF8B  F004         	goto	u6000
  4557  000912                     u6001:
  4558  000912  EFB4  F004         	goto	l5531
  4559  000916                     u6000:
  4560  000916                     
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4562  000916  0E02               	movlw	2
  4563  000918  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4564  00091C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4565  000920  26DE               	addwf	postinc2,f,c
  4566  000922  0E00               	movlw	0
  4567  000924  22DD               	addwfc	postdec2,f,c
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4570  000926  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4571  00092A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4572  00092E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4573  000932  0E02               	movlw	2
  4574  000934  26DE               	addwf	postinc2,f,c
  4575  000936  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4576  00093A  0E00               	movlw	0
  4577  00093C  22DD               	addwfc	postdec2,f,c
  4578  00093E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4579  000942  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4580  000946  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4581  00094A  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4582  00094E  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4583  000952  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4584  000956  0100               	movlb	0	; () banked
  4585  000958  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4586  00095A  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4587  00095C  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4588  00095E  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4589  000960  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4590  000962  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4591  000964  EFD5  F003         	goto	l5503
  4592  000968                     l5531:
  4593                           
  4594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4595  000968  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4596  00096C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4597  000970  CFDE F013          	movff	postinc2,strncmp@_l
  4598  000974  CFDD F014          	movff	postdec2,strncmp@_l+1
  4599  000978  0EDA               	movlw	low STR_46
  4600  00097A  6E15               	movwf	strncmp@_r^0,c
  4601  00097C  0EFF               	movlw	high STR_46
  4602  00097E  6E16               	movwf	(strncmp@_r+1)^0,c
  4603  000980  0E00               	movlw	0
  4604  000982  6E18               	movwf	(strncmp@n+1)^0,c
  4605  000984  0E03               	movlw	3
  4606  000986  6E17               	movwf	strncmp@n^0,c
  4607  000988  ECB0  F016         	call	_strncmp	;wreg free
  4608  00098C  5013               	movf	?_strncmp^0,w,c
  4609  00098E  1014               	iorwf	(?_strncmp+1)^0,w,c
  4610  000990  A4D8               	btfss	status,2,c
  4611  000992  EFCD  F004         	goto	u6011
  4612  000996  EFCF  F004         	goto	u6010
  4613  00099A                     u6011:
  4614  00099A  EFF8  F004         	goto	l5541
  4615  00099E                     u6010:
  4616  00099E                     
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4618  00099E  0E03               	movlw	3
  4619  0009A0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4620  0009A4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4621  0009A8  26DE               	addwf	postinc2,f,c
  4622  0009AA  0E00               	movlw	0
  4623  0009AC  22DD               	addwfc	postdec2,f,c
  4624                           
  4625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4626  0009AE  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4627  0009B2  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4628  0009B6  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4629  0009BA  0E02               	movlw	2
  4630  0009BC  26DE               	addwf	postinc2,f,c
  4631  0009BE  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4632  0009C2  0E00               	movlw	0
  4633  0009C4  22DD               	addwfc	postdec2,f,c
  4634  0009C6  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4635  0009CA  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4636  0009CE  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4637  0009D2  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4638  0009D6                     
  4639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  4640  0009D6  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4641  0009DA  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4642  0009DE  C03D  FFDF         	movff	_nout,indf2
  4643  0009E2                     l5537:
  4644                           
  4645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  4646  0009E2  0E00               	movlw	0
  4647  0009E4  0100               	movlb	0	; () banked
  4648  0009E6  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4649  0009E8  0E00               	movlw	0
  4650  0009EA  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  4651  0009EC  EF81  F009         	goto	l611
  4652  0009F0                     l5541:
  4653                           
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4655  0009F0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4656  0009F4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4657  0009F8  CFDE F013          	movff	postinc2,strncmp@_l
  4658  0009FC  CFDD F014          	movff	postdec2,strncmp@_l+1
  4659  000A00  0EDB               	movlw	low (STR_46+1)
  4660  000A02  6E15               	movwf	strncmp@_r^0,c
  4661  000A04  0EFF               	movlw	high (STR_46+1)
  4662  000A06  6E16               	movwf	(strncmp@_r+1)^0,c
  4663  000A08  0E00               	movlw	0
  4664  000A0A  6E18               	movwf	(strncmp@n+1)^0,c
  4665  000A0C  0E02               	movlw	2
  4666  000A0E  6E17               	movwf	strncmp@n^0,c
  4667  000A10  ECB0  F016         	call	_strncmp	;wreg free
  4668  000A14  5013               	movf	?_strncmp^0,w,c
  4669  000A16  1014               	iorwf	(?_strncmp+1)^0,w,c
  4670  000A18  A4D8               	btfss	status,2,c
  4671  000A1A  EF11  F005         	goto	u6021
  4672  000A1E  EF13  F005         	goto	u6020
  4673  000A22                     u6021:
  4674  000A22  EF39  F005         	goto	l5551
  4675  000A26                     u6020:
  4676  000A26                     
  4677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4678  000A26  0E02               	movlw	2
  4679  000A28  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4680  000A2C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4681  000A30  26DE               	addwf	postinc2,f,c
  4682  000A32  0E00               	movlw	0
  4683  000A34  22DD               	addwfc	postdec2,f,c
  4684                           
  4685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4686  000A36  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4687  000A3A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4688  000A3E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4689  000A42  0E02               	movlw	2
  4690  000A44  26DE               	addwf	postinc2,f,c
  4691  000A46  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4692  000A4A  0E00               	movlw	0
  4693  000A4C  22DD               	addwfc	postdec2,f,c
  4694  000A4E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4695  000A52  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4696  000A56  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4697  000A5A  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4698  000A5E                     
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  4700  000A5E  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4701  000A62  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4702  000A66  C03D  FFDE         	movff	_nout,postinc2
  4703  000A6A  C03E  FFDD         	movff	_nout+1,postdec2
  4704  000A6E  EFF1  F004         	goto	l5537
  4705  000A72                     l5551:
  4706                           
  4707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4708  000A72  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4709  000A76  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4710  000A7A  CFDE FFF6          	movff	postinc2,tblptrl
  4711  000A7E  CFDD FFF7          	movff	postdec2,tblptrh
  4712  000A82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4713  000A82  6AF8               	clrf	tblptru,c
  4714  000A84                     	endif
  4715  000A84                     	if	0	;tblptru may be non-zero
  4716  000A84                     	endif
  4717  000A84  0008               	tblrd		*
  4718  000A86  50F5               	movf	tablat,w,c
  4719  000A88  0A6E               	xorlw	110
  4720  000A8A  A4D8               	btfss	status,2,c
  4721  000A8C  EF4A  F005         	goto	u6031
  4722  000A90  EF4C  F005         	goto	u6030
  4723  000A94                     u6031:
  4724  000A94  EF71  F005         	goto	l5561
  4725  000A98                     u6030:
  4726  000A98                     
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4728  000A98  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4729  000A9C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4730  000AA0  2ADE               	incf	postinc2,f,c
  4731  000AA2  0E00               	movlw	0
  4732  000AA4  22DD               	addwfc	postdec2,f,c
  4733                           
  4734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4735  000AA6  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4736  000AAA  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4737  000AAE  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4738  000AB2  0E02               	movlw	2
  4739  000AB4  26DE               	addwf	postinc2,f,c
  4740  000AB6  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4741  000ABA  0E00               	movlw	0
  4742  000ABC  22DD               	addwfc	postdec2,f,c
  4743  000ABE  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4744  000AC2  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4745  000AC6  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4746  000ACA  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4747  000ACE                     
  4748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  4749  000ACE  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4750  000AD2  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4751  000AD6  C03D  FFDE         	movff	_nout,postinc2
  4752  000ADA  C03E  FFDD         	movff	_nout+1,postdec2
  4753  000ADE  EFF1  F004         	goto	l5537
  4754  000AE2                     l5561:
  4755                           
  4756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4757  000AE2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4758  000AE6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4759  000AEA  CFDE F013          	movff	postinc2,strncmp@_l
  4760  000AEE  CFDD F014          	movff	postdec2,strncmp@_l+1
  4761  000AF2  0EF3               	movlw	low STR_56
  4762  000AF4  6E15               	movwf	strncmp@_r^0,c
  4763  000AF6  0EFF               	movlw	high STR_56
  4764  000AF8  6E16               	movwf	(strncmp@_r+1)^0,c
  4765  000AFA  0E00               	movlw	0
  4766  000AFC  6E18               	movwf	(strncmp@n+1)^0,c
  4767  000AFE  0E02               	movlw	2
  4768  000B00  6E17               	movwf	strncmp@n^0,c
  4769  000B02  ECB0  F016         	call	_strncmp	;wreg free
  4770  000B06  5013               	movf	?_strncmp^0,w,c
  4771  000B08  1014               	iorwf	(?_strncmp+1)^0,w,c
  4772  000B0A  A4D8               	btfss	status,2,c
  4773  000B0C  EF8A  F005         	goto	u6041
  4774  000B10  EF8C  F005         	goto	u6040
  4775  000B14                     u6041:
  4776  000B14  EFB2  F005         	goto	l5571
  4777  000B18                     u6040:
  4778  000B18                     
  4779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4780  000B18  0E02               	movlw	2
  4781  000B1A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4782  000B1E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4783  000B22  26DE               	addwf	postinc2,f,c
  4784  000B24  0E00               	movlw	0
  4785  000B26  22DD               	addwfc	postdec2,f,c
  4786                           
  4787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4788  000B28  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4789  000B2C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4790  000B30  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4791  000B34  0E02               	movlw	2
  4792  000B36  26DE               	addwf	postinc2,f,c
  4793  000B38  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4794  000B3C  0E00               	movlw	0
  4795  000B3E  22DD               	addwfc	postdec2,f,c
  4796  000B40  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4797  000B44  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4798  000B48  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4799  000B4C  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4800  000B50                     
  4801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  4802  000B50  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4803  000B54  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4804  000B58  C03D  FFDE         	movff	_nout,postinc2
  4805  000B5C  C03E  FFDD         	movff	_nout+1,postdec2
  4806  000B60  EFF1  F004         	goto	l5537
  4807  000B64                     l5571:
  4808                           
  4809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  4810  000B64  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4811  000B68  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4812  000B6C  CFDE FFF6          	movff	postinc2,tblptrl
  4813  000B70  CFDD FFF7          	movff	postdec2,tblptrh
  4814  000B74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4815  000B74  6AF8               	clrf	tblptru,c
  4816  000B76                     	endif
  4817  000B76                     	if	0	;tblptru may be non-zero
  4818  000B76                     	endif
  4819  000B76  0008               	tblrd		*
  4820  000B78  50F5               	movf	tablat,w,c
  4821  000B7A  0A70               	xorlw	112
  4822  000B7C  A4D8               	btfss	status,2,c
  4823  000B7E  EFC3  F005         	goto	u6051
  4824  000B82  EFC5  F005         	goto	u6050
  4825  000B86                     u6051:
  4826  000B86  EF09  F006         	goto	l5579
  4827  000B8A                     u6050:
  4828  000B8A                     
  4829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  4830  000B8A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4831  000B8E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4832  000B92  2ADE               	incf	postinc2,f,c
  4833  000B94  0E00               	movlw	0
  4834  000B96  22DD               	addwfc	postdec2,f,c
  4835                           
  4836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  4837  000B98  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4838  000B9C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4839  000BA0  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4840  000BA4  0E02               	movlw	2
  4841  000BA6  26DE               	addwf	postinc2,f,c
  4842  000BA8  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4843  000BAC  0E00               	movlw	0
  4844  000BAE  22DD               	addwfc	postdec2,f,c
  4845  000BB0  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4846  000BB4  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4847  000BB8  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4848  000BBC  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4849  000BC0  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4850  000BC4  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4851  000BC8  0100               	movlb	0	; () banked
  4852  000BCA  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4853  000BCC  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4854  000BCE  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4855  000BD0  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4856  000BD2  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4857  000BD4  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4858  000BD6                     
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  4861  000BD6  C07C  F02E         	movff	vfpfcnvrt@fp,xtoa@fp
  4862  000BDA  C07D  F02F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4863  000BDE  C095  F030         	movff	vfpfcnvrt@llu,xtoa@d
  4864  000BE2  C096  F031         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4865  000BE6  C097  F032         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4866  000BEA  C098  F033         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4867  000BEE  C099  F034         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4868  000BF2  C09A  F035         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4869  000BF6  C09B  F036         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4870  000BFA  C09C  F037         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4871  000BFE  0E78               	movlw	120
  4872  000C00  6E38               	movwf	xtoa@x^0,c
  4873  000C02  ECB6  F00C         	call	_xtoa	;wreg free
  4874  000C06  C02E  F07C         	movff	?_xtoa,?_vfpfcnvrt
  4875  000C0A  C02F  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4876  000C0E  EF81  F009         	goto	l611
  4877  000C12                     l5579:
  4878                           
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4880  000C12  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4881  000C16  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4882  000C1A  CFDE FFF6          	movff	postinc2,tblptrl
  4883  000C1E  CFDD FFF7          	movff	postdec2,tblptrh
  4884  000C22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4885  000C22  6AF8               	clrf	tblptru,c
  4886  000C24                     	endif
  4887  000C24                     	if	0	;tblptru may be non-zero
  4888  000C24                     	endif
  4889  000C24  0008               	tblrd		*
  4890  000C26  50F5               	movf	tablat,w,c
  4891  000C28  0A73               	xorlw	115
  4892  000C2A  A4D8               	btfss	status,2,c
  4893  000C2C  EF1A  F006         	goto	u6061
  4894  000C30  EF1C  F006         	goto	u6060
  4895  000C34                     u6061:
  4896  000C34  EF47  F006         	goto	l5587
  4897  000C38                     u6060:
  4898  000C38                     
  4899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4900  000C38  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4901  000C3C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4902  000C40  2ADE               	incf	postinc2,f,c
  4903  000C42  0E00               	movlw	0
  4904  000C44  22DD               	addwfc	postdec2,f,c
  4905                           
  4906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4907  000C46  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4908  000C4A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4909  000C4E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4910  000C52  0E02               	movlw	2
  4911  000C54  26DE               	addwf	postinc2,f,c
  4912  000C56  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4913  000C5A  0E00               	movlw	0
  4914  000C5C  22DD               	addwfc	postdec2,f,c
  4915  000C5E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4916  000C62  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4917  000C66  CFDE F082          	movff	postinc2,vfpfcnvrt@cp
  4918  000C6A  CFDD F083          	movff	postdec2,vfpfcnvrt@cp+1
  4919  000C6E                     
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4921  000C6E  C07C  F01C         	movff	vfpfcnvrt@fp,stoa@fp
  4922  000C72  C07D  F01D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4923  000C76  C082  F01E         	movff	vfpfcnvrt@cp,stoa@s
  4924  000C7A  C083  F01F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4925  000C7E  ECAD  F011         	call	_stoa	;wreg free
  4926  000C82  C01C  F07C         	movff	?_stoa,?_vfpfcnvrt
  4927  000C86  C01D  F07D         	movff	?_stoa+1,?_vfpfcnvrt+1
  4928  000C8A  EF81  F009         	goto	l611
  4929  000C8E                     l5587:
  4930                           
  4931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  4932  000C8E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4933  000C92  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4934  000C96  CFDE F013          	movff	postinc2,strncmp@_l
  4935  000C9A  CFDD F014          	movff	postdec2,strncmp@_l+1
  4936  000C9E  0EE2               	movlw	low STR_61
  4937  000CA0  6E15               	movwf	strncmp@_r^0,c
  4938  000CA2  0EFF               	movlw	high STR_61
  4939  000CA4  6E16               	movwf	(strncmp@_r+1)^0,c
  4940  000CA6  0E00               	movlw	0
  4941  000CA8  6E18               	movwf	(strncmp@n+1)^0,c
  4942  000CAA  0E03               	movlw	3
  4943  000CAC  6E17               	movwf	strncmp@n^0,c
  4944  000CAE  ECB0  F016         	call	_strncmp	;wreg free
  4945  000CB2  5013               	movf	?_strncmp^0,w,c
  4946  000CB4  1014               	iorwf	(?_strncmp+1)^0,w,c
  4947  000CB6  A4D8               	btfss	status,2,c
  4948  000CB8  EF60  F006         	goto	u6071
  4949  000CBC  EF62  F006         	goto	u6070
  4950  000CC0                     u6071:
  4951  000CC0  EFA2  F006         	goto	l5595
  4952  000CC4                     u6070:
  4953  000CC4                     
  4954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  4955  000CC4  0E03               	movlw	3
  4956  000CC6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4957  000CCA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4958  000CCE  26DE               	addwf	postinc2,f,c
  4959  000CD0  0E00               	movlw	0
  4960  000CD2  22DD               	addwfc	postdec2,f,c
  4961                           
  4962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4963  000CD4  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4964  000CD8  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4965  000CDC  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4966  000CE0  0E02               	movlw	2
  4967  000CE2  26DE               	addwf	postinc2,f,c
  4968  000CE4  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4969  000CE8  0E00               	movlw	0
  4970  000CEA  22DD               	addwfc	postdec2,f,c
  4971  000CEC  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4972  000CF0  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4973  000CF4  50DF               	movf	indf2,w,c
  4974  000CF6  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  4975  000CF8  503B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4976  000CFA  0100               	movlb	0	; () banked
  4977  000CFC  6F95               	movwf	vfpfcnvrt@llu& (0+255),b
  4978  000CFE  6B96               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4979  000D00  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4980  000D02  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4981  000D04  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4982  000D06  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4983  000D08  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4984  000D0A  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4985  000D0C                     l5591:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  4989  000D0C  C07C  F02E         	movff	vfpfcnvrt@fp,utoa@fp
  4990  000D10  C07D  F02F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4991  000D14  C095  F030         	movff	vfpfcnvrt@llu,utoa@d
  4992  000D18  C096  F031         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4993  000D1C  C097  F032         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4994  000D20  C098  F033         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4995  000D24  C099  F034         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4996  000D28  C09A  F035         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4997  000D2C  C09B  F036         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4998  000D30  C09C  F037         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4999  000D34  EC23  F00E         	call	_utoa	;wreg free
  5000  000D38  C02E  F07C         	movff	?_utoa,?_vfpfcnvrt
  5001  000D3C  C02F  F07D         	movff	?_utoa+1,?_vfpfcnvrt+1
  5002  000D40  EF81  F009         	goto	l611
  5003  000D44                     l5595:
  5004                           
  5005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5006  000D44  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5007  000D48  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5008  000D4C  CFDE F013          	movff	postinc2,strncmp@_l
  5009  000D50  CFDD F014          	movff	postdec2,strncmp@_l+1
  5010  000D54  0EE3               	movlw	low (STR_61+1)
  5011  000D56  6E15               	movwf	strncmp@_r^0,c
  5012  000D58  0EFF               	movlw	high (STR_61+1)
  5013  000D5A  6E16               	movwf	(strncmp@_r+1)^0,c
  5014  000D5C  0E00               	movlw	0
  5015  000D5E  6E18               	movwf	(strncmp@n+1)^0,c
  5016  000D60  0E02               	movlw	2
  5017  000D62  6E17               	movwf	strncmp@n^0,c
  5018  000D64  ECB0  F016         	call	_strncmp	;wreg free
  5019  000D68  5013               	movf	?_strncmp^0,w,c
  5020  000D6A  1014               	iorwf	(?_strncmp+1)^0,w,c
  5021  000D6C  A4D8               	btfss	status,2,c
  5022  000D6E  EFBB  F006         	goto	u6081
  5023  000D72  EFBD  F006         	goto	u6080
  5024  000D76                     u6081:
  5025  000D76  EFE6  F006         	goto	l5603
  5026  000D7A                     u6080:
  5027  000D7A                     
  5028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5029  000D7A  0E02               	movlw	2
  5030  000D7C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5031  000D80  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5032  000D84  26DE               	addwf	postinc2,f,c
  5033  000D86  0E00               	movlw	0
  5034  000D88  22DD               	addwfc	postdec2,f,c
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5037  000D8A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5038  000D8E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5039  000D92  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5040  000D96  0E02               	movlw	2
  5041  000D98  26DE               	addwf	postinc2,f,c
  5042  000D9A  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5043  000D9E  0E00               	movlw	0
  5044  000DA0  22DD               	addwfc	postdec2,f,c
  5045  000DA2  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5046  000DA6  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5047  000DAA  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5048  000DAE  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5049  000DB2  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5050  000DB6  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5051  000DBA  0100               	movlb	0	; () banked
  5052  000DBC  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5053  000DBE  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5054  000DC0  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5055  000DC2  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5056  000DC4  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5057  000DC6  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5058  000DC8  EF86  F006         	goto	l5591
  5059  000DCC                     l5603:
  5060                           
  5061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5062  000DCC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5063  000DD0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5064  000DD4  CFDE FFF6          	movff	postinc2,tblptrl
  5065  000DD8  CFDD FFF7          	movff	postdec2,tblptrh
  5066  000DDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5067  000DDC  6AF8               	clrf	tblptru,c
  5068  000DDE                     	endif
  5069  000DDE                     	if	0	;tblptru may be non-zero
  5070  000DDE                     	endif
  5071  000DDE  0008               	tblrd		*
  5072  000DE0  50F5               	movf	tablat,w,c
  5073  000DE2  0A75               	xorlw	117
  5074  000DE4  A4D8               	btfss	status,2,c
  5075  000DE6  EFF7  F006         	goto	u6091
  5076  000DEA  EFF9  F006         	goto	u6090
  5077  000DEE                     u6091:
  5078  000DEE  EF21  F007         	goto	l5611
  5079  000DF2                     u6090:
  5080  000DF2                     
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5082  000DF2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5083  000DF6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5084  000DFA  2ADE               	incf	postinc2,f,c
  5085  000DFC  0E00               	movlw	0
  5086  000DFE  22DD               	addwfc	postdec2,f,c
  5087                           
  5088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5089  000E00  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5090  000E04  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5091  000E08  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5092  000E0C  0E02               	movlw	2
  5093  000E0E  26DE               	addwf	postinc2,f,c
  5094  000E10  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5095  000E14  0E00               	movlw	0
  5096  000E16  22DD               	addwfc	postdec2,f,c
  5097  000E18  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5098  000E1C  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5099  000E20  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5100  000E24  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5101  000E28  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5102  000E2C  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5103  000E30  0100               	movlb	0	; () banked
  5104  000E32  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5105  000E34  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5106  000E36  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5107  000E38  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5108  000E3A  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5109  000E3C  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5110  000E3E  EF86  F006         	goto	l5591
  5111  000E42                     l5611:
  5112                           
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5114  000E42  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5115  000E46  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5116  000E4A  CFDE F013          	movff	postinc2,strncmp@_l
  5117  000E4E  CFDD F014          	movff	postdec2,strncmp@_l+1
  5118  000E52  0EF9               	movlw	low STR_71
  5119  000E54  6E15               	movwf	strncmp@_r^0,c
  5120  000E56  0EFF               	movlw	high STR_71
  5121  000E58  6E16               	movwf	(strncmp@_r+1)^0,c
  5122  000E5A  0E00               	movlw	0
  5123  000E5C  6E18               	movwf	(strncmp@n+1)^0,c
  5124  000E5E  0E02               	movlw	2
  5125  000E60  6E17               	movwf	strncmp@n^0,c
  5126  000E62  ECB0  F016         	call	_strncmp	;wreg free
  5127  000E66  5013               	movf	?_strncmp^0,w,c
  5128  000E68  1014               	iorwf	(?_strncmp+1)^0,w,c
  5129  000E6A  A4D8               	btfss	status,2,c
  5130  000E6C  EF3A  F007         	goto	u6101
  5131  000E70  EF3C  F007         	goto	u6100
  5132  000E74                     u6101:
  5133  000E74  EF65  F007         	goto	l5619
  5134  000E78                     u6100:
  5135  000E78                     
  5136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5137  000E78  0E02               	movlw	2
  5138  000E7A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5139  000E7E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5140  000E82  26DE               	addwf	postinc2,f,c
  5141  000E84  0E00               	movlw	0
  5142  000E86  22DD               	addwfc	postdec2,f,c
  5143                           
  5144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5145  000E88  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5146  000E8C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5147  000E90  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5148  000E94  0E02               	movlw	2
  5149  000E96  26DE               	addwf	postinc2,f,c
  5150  000E98  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5151  000E9C  0E00               	movlw	0
  5152  000E9E  22DD               	addwfc	postdec2,f,c
  5153  000EA0  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5154  000EA4  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5155  000EA8  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5156  000EAC  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5157  000EB0  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5158  000EB4  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5159  000EB8  0100               	movlb	0	; () banked
  5160  000EBA  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5161  000EBC  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5162  000EBE  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5163  000EC0  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5164  000EC2  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5165  000EC4  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5166  000EC6  EF86  F006         	goto	l5591
  5167  000ECA                     l5619:
  5168                           
  5169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5170  000ECA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5171  000ECE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5172  000ED2  CFDE F013          	movff	postinc2,strncmp@_l
  5173  000ED6  CFDD F014          	movff	postdec2,strncmp@_l+1
  5174  000EDA  0EE6               	movlw	low STR_76
  5175  000EDC  6E15               	movwf	strncmp@_r^0,c
  5176  000EDE  0EFF               	movlw	high STR_76
  5177  000EE0  6E16               	movwf	(strncmp@_r+1)^0,c
  5178  000EE2  0E00               	movlw	0
  5179  000EE4  6E18               	movwf	(strncmp@n+1)^0,c
  5180  000EE6  0E03               	movlw	3
  5181  000EE8  6E17               	movwf	strncmp@n^0,c
  5182  000EEA  ECB0  F016         	call	_strncmp	;wreg free
  5183  000EEE  5013               	movf	?_strncmp^0,w,c
  5184  000EF0  1014               	iorwf	(?_strncmp+1)^0,w,c
  5185  000EF2  B4D8               	btfsc	status,2,c
  5186  000EF4  EF7E  F007         	goto	u6111
  5187  000EF8  EF80  F007         	goto	u6110
  5188  000EFC                     u6111:
  5189  000EFC  EF9B  F007         	goto	l5623
  5190  000F00                     u6110:
  5191  000F00  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5192  000F04  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5193  000F08  CFDE F013          	movff	postinc2,strncmp@_l
  5194  000F0C  CFDD F014          	movff	postdec2,strncmp@_l+1
  5195  000F10  0ECE               	movlw	low STR_80
  5196  000F12  6E15               	movwf	strncmp@_r^0,c
  5197  000F14  0EFF               	movlw	high STR_80
  5198  000F16  6E16               	movwf	(strncmp@_r+1)^0,c
  5199  000F18  0E00               	movlw	0
  5200  000F1A  6E18               	movwf	(strncmp@n+1)^0,c
  5201  000F1C  0E03               	movlw	3
  5202  000F1E  6E17               	movwf	strncmp@n^0,c
  5203  000F20  ECB0  F016         	call	_strncmp	;wreg free
  5204  000F24  5013               	movf	?_strncmp^0,w,c
  5205  000F26  1014               	iorwf	(?_strncmp+1)^0,w,c
  5206  000F28  A4D8               	btfss	status,2,c
  5207  000F2A  EF99  F007         	goto	u6121
  5208  000F2E  EF9B  F007         	goto	u6120
  5209  000F32                     u6121:
  5210  000F32  EFF1  F007         	goto	l5633
  5211  000F36                     u6120:
  5212  000F36                     l5623:
  5213                           
  5214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5215  000F36  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5216  000F3A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5217  000F3E  CFDE F039          	movff	postinc2,??_vfpfcnvrt
  5218  000F42  CFDD F03A          	movff	postdec2,??_vfpfcnvrt+1
  5219  000F46  0E02               	movlw	2
  5220  000F48  2639               	addwf	??_vfpfcnvrt^0,f,c
  5221  000F4A  0E00               	movlw	0
  5222  000F4C  223A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5223  000F4E  C039  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5224  000F52  C03A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5225  000F56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5226  000F56  6AF8               	clrf	tblptru,c
  5227  000F58                     	endif
  5228  000F58                     	if	0	;tblptru may be non-zero
  5229  000F58                     	endif
  5230  000F58  0008               	tblrd		*
  5231  000F5A  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5232  000F5E                     
  5233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5234  000F5E  0E03               	movlw	3
  5235  000F60  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5236  000F64  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5237  000F68  26DE               	addwf	postinc2,f,c
  5238  000F6A  0E00               	movlw	0
  5239  000F6C  22DD               	addwfc	postdec2,f,c
  5240  000F6E                     
  5241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5242  000F6E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5243  000F72  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5244  000F76  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5245  000F7A  0E02               	movlw	2
  5246  000F7C  26DE               	addwf	postinc2,f,c
  5247  000F7E  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5248  000F82  0E00               	movlw	0
  5249  000F84  22DD               	addwfc	postdec2,f,c
  5250  000F86  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5251  000F8A  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5252  000F8E  50DF               	movf	indf2,w,c
  5253  000F90  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  5254  000F92  503B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5255  000F94  0100               	movlb	0	; () banked
  5256  000F96  6F95               	movwf	vfpfcnvrt@llu& (0+255),b
  5257  000F98  6B96               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5258  000F9A  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5259  000F9C  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5260  000F9E  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5261  000FA0  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5262  000FA2  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5263  000FA4  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5264  000FA6                     l5629:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  5268  000FA6  C07C  F02E         	movff	vfpfcnvrt@fp,xtoa@fp
  5269  000FAA  C07D  F02F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5270  000FAE  C095  F030         	movff	vfpfcnvrt@llu,xtoa@d
  5271  000FB2  C096  F031         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5272  000FB6  C097  F032         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5273  000FBA  C098  F033         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5274  000FBE  C099  F034         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5275  000FC2  C09A  F035         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5276  000FC6  C09B  F036         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5277  000FCA  C09C  F037         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5278  000FCE  C094  F038         	movff	vfpfcnvrt@c,xtoa@x
  5279  000FD2  ECB6  F00C         	call	_xtoa	;wreg free
  5280  000FD6  C02E  F07C         	movff	?_xtoa,?_vfpfcnvrt
  5281  000FDA  C02F  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5282  000FDE  EF81  F009         	goto	l611
  5283  000FE2                     l5633:
  5284                           
  5285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  5286  000FE2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5287  000FE6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5288  000FEA  CFDE F013          	movff	postinc2,strncmp@_l
  5289  000FEE  CFDD F014          	movff	postdec2,strncmp@_l+1
  5290  000FF2  0EE7               	movlw	low (STR_76+1)
  5291  000FF4  6E15               	movwf	strncmp@_r^0,c
  5292  000FF6  0EFF               	movlw	high (STR_76+1)
  5293  000FF8  6E16               	movwf	(strncmp@_r+1)^0,c
  5294  000FFA  0E00               	movlw	0
  5295  000FFC  6E18               	movwf	(strncmp@n+1)^0,c
  5296  000FFE  0E02               	movlw	2
  5297  001000  6E17               	movwf	strncmp@n^0,c
  5298  001002  ECB0  F016         	call	_strncmp	;wreg free
  5299  001006  5013               	movf	?_strncmp^0,w,c
  5300  001008  1014               	iorwf	(?_strncmp+1)^0,w,c
  5301  00100A  B4D8               	btfsc	status,2,c
  5302  00100C  EF0A  F008         	goto	u6131
  5303  001010  EF0C  F008         	goto	u6130
  5304  001014                     u6131:
  5305  001014  EF27  F008         	goto	l5637
  5306  001018                     u6130:
  5307  001018  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5308  00101C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5309  001020  CFDE F013          	movff	postinc2,strncmp@_l
  5310  001024  CFDD F014          	movff	postdec2,strncmp@_l+1
  5311  001028  0ECF               	movlw	low (STR_80+1)
  5312  00102A  6E15               	movwf	strncmp@_r^0,c
  5313  00102C  0EFF               	movlw	high (STR_80+1)
  5314  00102E  6E16               	movwf	(strncmp@_r+1)^0,c
  5315  001030  0E00               	movlw	0
  5316  001032  6E18               	movwf	(strncmp@n+1)^0,c
  5317  001034  0E02               	movlw	2
  5318  001036  6E17               	movwf	strncmp@n^0,c
  5319  001038  ECB0  F016         	call	_strncmp	;wreg free
  5320  00103C  5013               	movf	?_strncmp^0,w,c
  5321  00103E  1014               	iorwf	(?_strncmp+1)^0,w,c
  5322  001040  A4D8               	btfss	status,2,c
  5323  001042  EF25  F008         	goto	u6141
  5324  001046  EF27  F008         	goto	u6140
  5325  00104A                     u6141:
  5326  00104A  EF64  F008         	goto	l5647
  5327  00104E                     u6140:
  5328  00104E                     l5637:
  5329                           
  5330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  5331  00104E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5332  001052  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5333  001056  CFDE F039          	movff	postinc2,??_vfpfcnvrt
  5334  00105A  CFDD F03A          	movff	postdec2,??_vfpfcnvrt+1
  5335  00105E  0E01               	movlw	1
  5336  001060  2639               	addwf	??_vfpfcnvrt^0,f,c
  5337  001062  0E00               	movlw	0
  5338  001064  223A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5339  001066  C039  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5340  00106A  C03A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5341  00106E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5342  00106E  6AF8               	clrf	tblptru,c
  5343  001070                     	endif
  5344  001070                     	if	0	;tblptru may be non-zero
  5345  001070                     	endif
  5346  001070  0008               	tblrd		*
  5347  001072  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5348  001076                     
  5349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5350  001076  0E02               	movlw	2
  5351  001078  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5352  00107C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5353  001080  26DE               	addwf	postinc2,f,c
  5354  001082  0E00               	movlw	0
  5355  001084  22DD               	addwfc	postdec2,f,c
  5356  001086                     
  5357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5358  001086  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5359  00108A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5360  00108E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5361  001092  0E02               	movlw	2
  5362  001094  26DE               	addwf	postinc2,f,c
  5363  001096  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5364  00109A  0E00               	movlw	0
  5365  00109C  22DD               	addwfc	postdec2,f,c
  5366  00109E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5367  0010A2  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5368  0010A6  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5369  0010AA  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5370  0010AE  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5371  0010B2  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5372  0010B6  0100               	movlb	0	; () banked
  5373  0010B8  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5374  0010BA  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5375  0010BC  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5376  0010BE  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5377  0010C0  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5378  0010C2  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5379  0010C4  EFD3  F007         	goto	l5629
  5380  0010C8                     l5647:
  5381                           
  5382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5383  0010C8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5384  0010CC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5385  0010D0  CFDE FFF6          	movff	postinc2,tblptrl
  5386  0010D4  CFDD FFF7          	movff	postdec2,tblptrh
  5387  0010D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5388  0010D8  6AF8               	clrf	tblptru,c
  5389  0010DA                     	endif
  5390  0010DA                     	if	0	;tblptru may be non-zero
  5391  0010DA                     	endif
  5392  0010DA  0008               	tblrd		*
  5393  0010DC  50F5               	movf	tablat,w,c
  5394  0010DE  0A78               	xorlw	120
  5395  0010E0  B4D8               	btfsc	status,2,c
  5396  0010E2  EF75  F008         	goto	u6151
  5397  0010E6  EF77  F008         	goto	u6150
  5398  0010EA                     u6151:
  5399  0010EA  EF8A  F008         	goto	l5651
  5400  0010EE                     u6150:
  5401  0010EE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5402  0010F2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5403  0010F6  CFDE FFF6          	movff	postinc2,tblptrl
  5404  0010FA  CFDD FFF7          	movff	postdec2,tblptrh
  5405  0010FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5406  0010FE  6AF8               	clrf	tblptru,c
  5407  001100                     	endif
  5408  001100                     	if	0	;tblptru may be non-zero
  5409  001100                     	endif
  5410  001100  0008               	tblrd		*
  5411  001102  50F5               	movf	tablat,w,c
  5412  001104  0A58               	xorlw	88
  5413  001106  A4D8               	btfss	status,2,c
  5414  001108  EF88  F008         	goto	u6161
  5415  00110C  EF8A  F008         	goto	u6160
  5416  001110                     u6161:
  5417  001110  EFBE  F008         	goto	l5661
  5418  001114                     u6160:
  5419  001114                     l5651:
  5420                           
  5421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5422  001114  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5423  001118  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5424  00111C  CFDE FFF6          	movff	postinc2,tblptrl
  5425  001120  CFDD FFF7          	movff	postdec2,tblptrh
  5426  001124                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5427  001124  6AF8               	clrf	tblptru,c
  5428  001126                     	endif
  5429  001126                     	if	0	;tblptru may be non-zero
  5430  001126                     	endif
  5431  001126  0008               	tblrd		*
  5432  001128  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5433  00112C                     
  5434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5435  00112C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5436  001130  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5437  001134  2ADE               	incf	postinc2,f,c
  5438  001136  0E00               	movlw	0
  5439  001138  22DD               	addwfc	postdec2,f,c
  5440  00113A                     
  5441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5442  00113A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5443  00113E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5444  001142  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5445  001146  0E02               	movlw	2
  5446  001148  26DE               	addwf	postinc2,f,c
  5447  00114A  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5448  00114E  0E00               	movlw	0
  5449  001150  22DD               	addwfc	postdec2,f,c
  5450  001152  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5451  001156  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5452  00115A  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5453  00115E  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5454  001162  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5455  001166  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5456  00116A  0100               	movlb	0	; () banked
  5457  00116C  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5458  00116E  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5459  001170  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5460  001172  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5461  001174  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5462  001176  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5463  001178  EFD3  F007         	goto	l5629
  5464  00117C                     l5661:
  5465                           
  5466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  5467  00117C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5468  001180  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5469  001184  CFDE F013          	movff	postinc2,strncmp@_l
  5470  001188  CFDD F014          	movff	postdec2,strncmp@_l+1
  5471  00118C  0EFC               	movlw	low STR_94
  5472  00118E  6E15               	movwf	strncmp@_r^0,c
  5473  001190  0EFF               	movlw	high STR_94
  5474  001192  6E16               	movwf	(strncmp@_r+1)^0,c
  5475  001194  0E00               	movlw	0
  5476  001196  6E18               	movwf	(strncmp@n+1)^0,c
  5477  001198  0E02               	movlw	2
  5478  00119A  6E17               	movwf	strncmp@n^0,c
  5479  00119C  ECB0  F016         	call	_strncmp	;wreg free
  5480  0011A0  5013               	movf	?_strncmp^0,w,c
  5481  0011A2  1014               	iorwf	(?_strncmp+1)^0,w,c
  5482  0011A4  B4D8               	btfsc	status,2,c
  5483  0011A6  EFD7  F008         	goto	u6171
  5484  0011AA  EFD9  F008         	goto	u6170
  5485  0011AE                     u6171:
  5486  0011AE  EFF4  F008         	goto	l5665
  5487  0011B2                     u6170:
  5488  0011B2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5489  0011B6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5490  0011BA  CFDE F013          	movff	postinc2,strncmp@_l
  5491  0011BE  CFDD F014          	movff	postdec2,strncmp@_l+1
  5492  0011C2  0EEA               	movlw	low STR_98
  5493  0011C4  6E15               	movwf	strncmp@_r^0,c
  5494  0011C6  0EFF               	movlw	high STR_98
  5495  0011C8  6E16               	movwf	(strncmp@_r+1)^0,c
  5496  0011CA  0E00               	movlw	0
  5497  0011CC  6E18               	movwf	(strncmp@n+1)^0,c
  5498  0011CE  0E02               	movlw	2
  5499  0011D0  6E17               	movwf	strncmp@n^0,c
  5500  0011D2  ECB0  F016         	call	_strncmp	;wreg free
  5501  0011D6  5013               	movf	?_strncmp^0,w,c
  5502  0011D8  1014               	iorwf	(?_strncmp+1)^0,w,c
  5503  0011DA  A4D8               	btfss	status,2,c
  5504  0011DC  EFF2  F008         	goto	u6181
  5505  0011E0  EFF4  F008         	goto	u6180
  5506  0011E4                     u6181:
  5507  0011E4  EF31  F009         	goto	l5675
  5508  0011E8                     u6180:
  5509  0011E8                     l5665:
  5510                           
  5511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  5512  0011E8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5513  0011EC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5514  0011F0  CFDE F039          	movff	postinc2,??_vfpfcnvrt
  5515  0011F4  CFDD F03A          	movff	postdec2,??_vfpfcnvrt+1
  5516  0011F8  0E01               	movlw	1
  5517  0011FA  2639               	addwf	??_vfpfcnvrt^0,f,c
  5518  0011FC  0E00               	movlw	0
  5519  0011FE  223A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5520  001200  C039  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5521  001204  C03A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5522  001208                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5523  001208  6AF8               	clrf	tblptru,c
  5524  00120A                     	endif
  5525  00120A                     	if	0	;tblptru may be non-zero
  5526  00120A                     	endif
  5527  00120A  0008               	tblrd		*
  5528  00120C  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5529  001210                     
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5531  001210  0E02               	movlw	2
  5532  001212  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5533  001216  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5534  00121A  26DE               	addwf	postinc2,f,c
  5535  00121C  0E00               	movlw	0
  5536  00121E  22DD               	addwfc	postdec2,f,c
  5537  001220                     
  5538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5539  001220  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5540  001224  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5541  001228  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5542  00122C  0E02               	movlw	2
  5543  00122E  26DE               	addwf	postinc2,f,c
  5544  001230  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5545  001234  0E00               	movlw	0
  5546  001236  22DD               	addwfc	postdec2,f,c
  5547  001238  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5548  00123C  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5549  001240  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5550  001244  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5551  001248  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5552  00124C  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5553  001250  0100               	movlb	0	; () banked
  5554  001252  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5555  001254  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5556  001256  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5557  001258  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5558  00125A  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5559  00125C  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5560  00125E  EFD3  F007         	goto	l5629
  5561  001262                     l5675:
  5562                           
  5563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5564  001262  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5565  001266  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5566  00126A  CFDE FFF6          	movff	postinc2,tblptrl
  5567  00126E  CFDD FFF7          	movff	postdec2,tblptrh
  5568  001272                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5569  001272  6AF8               	clrf	tblptru,c
  5570  001274                     	endif
  5571  001274                     	if	0	;tblptru may be non-zero
  5572  001274                     	endif
  5573  001274  0008               	tblrd		*
  5574  001276  50F5               	movf	tablat,w,c
  5575  001278  0A25               	xorlw	37
  5576  00127A  A4D8               	btfss	status,2,c
  5577  00127C  EF42  F009         	goto	u6191
  5578  001280  EF44  F009         	goto	u6190
  5579  001284                     u6191:
  5580  001284  EF5C  F009         	goto	l5685
  5581  001288                     u6190:
  5582  001288                     
  5583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5584  001288  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5585  00128C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5586  001290  2ADE               	incf	postinc2,f,c
  5587  001292  0E00               	movlw	0
  5588  001294  22DD               	addwfc	postdec2,f,c
  5589  001296                     
  5590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5591  001296  0E00               	movlw	0
  5592  001298  6E14               	movwf	(fputc@c+1)^0,c
  5593  00129A  0E25               	movlw	37
  5594  00129C  6E13               	movwf	fputc@c^0,c
  5595  00129E  C07C  F015         	movff	vfpfcnvrt@fp,fputc@fp
  5596  0012A2  C07D  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5597  0012A6  EC8D  F017         	call	_fputc	;wreg free
  5598  0012AA                     l5681:
  5599                           
  5600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5601  0012AA  0E00               	movlw	0
  5602  0012AC  0100               	movlb	0	; () banked
  5603  0012AE  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5604  0012B0  0E01               	movlw	1
  5605  0012B2  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  5606  0012B4  EF81  F009         	goto	l611
  5607  0012B8                     l5685:
  5608                           
  5609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5610  0012B8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5611  0012BC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5612  0012C0  2ADE               	incf	postinc2,f,c
  5613  0012C2  0E00               	movlw	0
  5614  0012C4  22DD               	addwfc	postdec2,f,c
  5615  0012C6  EFF1  F004         	goto	l5537
  5616  0012CA                     l5691:
  5617                           
  5618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5619  0012CA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5620  0012CE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5621  0012D2  CFDE FFF6          	movff	postinc2,tblptrl
  5622  0012D6  CFDD FFF7          	movff	postdec2,tblptrh
  5623  0012DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5624  0012DA  6AF8               	clrf	tblptru,c
  5625  0012DC                     	endif
  5626  0012DC                     	if	0	;tblptru may be non-zero
  5627  0012DC                     	endif
  5628  0012DC  0008               	tblrd		*
  5629  0012DE  50F5               	movf	tablat,w,c
  5630  0012E0  6E13               	movwf	fputc@c^0,c
  5631  0012E2  6A14               	clrf	(fputc@c+1)^0,c
  5632  0012E4  C07C  F015         	movff	vfpfcnvrt@fp,fputc@fp
  5633  0012E8  C07D  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5634  0012EC  EC8D  F017         	call	_fputc	;wreg free
  5635  0012F0                     
  5636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5637  0012F0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5638  0012F4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5639  0012F8  2ADE               	incf	postinc2,f,c
  5640  0012FA  0E00               	movlw	0
  5641  0012FC  22DD               	addwfc	postdec2,f,c
  5642  0012FE  EF55  F009         	goto	l5681
  5643  001302                     l611:
  5644  001302  0012               	return		;funcret
  5645  001304                     __end_of_vfpfcnvrt:
  5646                           	opt callstack 0
  5647                           
  5648 ;; *************** function _xtoa *****************
  5649 ;; Defined at:
  5650 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  5653 ;;		 -> vsnprintf@f(6), 
  5654 ;;  d               8   47[COMRAM] unsigned long long 
  5655 ;;  x               1   55[COMRAM] unsigned char 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  n               8   16[BANK0 ] unsigned long long 
  5658 ;;  c               2   26[BANK0 ] int 
  5659 ;;  i               2   24[BANK0 ] int 
  5660 ;;  w               2   14[BANK0 ] int 
  5661 ;;  p               2   12[BANK0 ] int 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  2   45[COMRAM] int 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5671 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;Total ram usage:       39 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    9
  5678 ;; This function calls:
  5679 ;;		_isalpha
  5680 ;;		_isupper
  5681 ;;		_pad
  5682 ;;		_toupper
  5683 ;; This function is called by:
  5684 ;;		_vfpfcnvrt
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text5
  5689  00196C                     __ptext5:
  5690                           	opt callstack 0
  5691  00196C                     _xtoa:
  5692                           	opt callstack 17
  5693  00196C                     
  5694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5695  00196C  BE42               	btfsc	(_prec+1)^0,7,c
  5696  00196E  EFBB  F00C         	goto	u5441
  5697  001972  EFBD  F00C         	goto	u5440
  5698  001976                     u5441:
  5699  001976  EFBE  F00C         	goto	l5225
  5700  00197A                     u5440:
  5701  00197A                     
  5702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5703  00197A  9243               	bcf	_flags^0,1,c
  5704  00197C                     l5225:
  5705                           
  5706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5707  00197C  BE42               	btfsc	(_prec+1)^0,7,c
  5708  00197E  EFCB  F00C         	goto	u5450
  5709  001982  5042               	movf	(_prec+1)^0,w,c
  5710  001984  E106               	bnz	u5451
  5711  001986  0441               	decf	_prec^0,w,c
  5712  001988  B0D8               	btfsc	status,0,c
  5713  00198A  EFC9  F00C         	goto	u5451
  5714  00198E  EFCB  F00C         	goto	u5450
  5715  001992                     u5451:
  5716  001992  EFD2  F00C         	goto	l549
  5717  001996                     u5450:
  5718  001996  0E00               	movlw	0
  5719  001998  0100               	movlb	0	; () banked
  5720  00199A  6F6D               	movwf	(xtoa@p+1)& (0+255),b
  5721  00199C  0E01               	movlw	1
  5722  00199E  6F6C               	movwf	xtoa@p& (0+255),b
  5723  0019A0  EFD6  F00C         	goto	l551
  5724  0019A4                     l549:
  5725  0019A4  C041  F06C         	movff	_prec,xtoa@p
  5726  0019A8  C042  F06D         	movff	_prec+1,xtoa@p+1
  5727  0019AC                     l551:
  5728                           
  5729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5730  0019AC  C03F  F06E         	movff	_width,xtoa@w
  5731  0019B0  C040  F06F         	movff	_width+1,xtoa@w+1
  5732                           
  5733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5734  0019B4  A843               	btfss	_flags^0,4,c
  5735  0019B6  EFDF  F00C         	goto	u5461
  5736  0019BA  EFE1  F00C         	goto	u5460
  5737  0019BE                     u5461:
  5738  0019BE  EFE6  F00C         	goto	l5231
  5739  0019C2                     u5460:
  5740  0019C2                     
  5741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5742  0019C2  0100               	movlb	0	; () banked
  5743  0019C4  0EFE               	movlw	254
  5744  0019C6  276E               	addwf	xtoa@w& (0+255),f,b
  5745  0019C8  0EFF               	movlw	255
  5746  0019CA  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
  5747  0019CC                     l5231:
  5748                           
  5749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5750  0019CC  C030  F070         	movff	xtoa@d,xtoa@n
  5751  0019D0  C031  F071         	movff	xtoa@d+1,xtoa@n+1
  5752  0019D4  C032  F072         	movff	xtoa@d+2,xtoa@n+2
  5753  0019D8  C033  F073         	movff	xtoa@d+3,xtoa@n+3
  5754  0019DC  C034  F074         	movff	xtoa@d+4,xtoa@n+4
  5755  0019E0  C035  F075         	movff	xtoa@d+5,xtoa@n+5
  5756  0019E4  C036  F076         	movff	xtoa@d+6,xtoa@n+6
  5757  0019E8  C037  F077         	movff	xtoa@d+7,xtoa@n+7
  5758  0019EC                     
  5759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5760  0019EC  0E00               	movlw	0
  5761  0019EE  0100               	movlb	0	; () banked
  5762  0019F0  6F79               	movwf	(xtoa@i+1)& (0+255),b
  5763  0019F2  0E1F               	movlw	31
  5764  0019F4  6F78               	movwf	xtoa@i& (0+255),b
  5765  0019F6                     
  5766                           ; BSR set to: 0
  5767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5768  0019F6  0E00               	movlw	0
  5769  0019F8  6FEA               	movwf	(_dbuf+31)& (0+255),b
  5770                           
  5771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5772  0019FA  EFB3  F00D         	goto	l5267
  5773  0019FE                     l5237:
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5777  0019FE  0778               	decf	xtoa@i& (0+255),f,b
  5778  001A00  A0D8               	btfss	status,0,c
  5779  001A02  0779               	decf	(xtoa@i+1)& (0+255),f,b
  5780  001A04                     
  5781                           ; BSR set to: 0
  5782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5783  001A04  0E0F               	movlw	15
  5784  001A06  1570               	andwf	xtoa@n& (0+255),w,b
  5785  001A08  6F7A               	movwf	xtoa@c& (0+255),b
  5786  001A0A  6B7B               	clrf	(xtoa@c+1)& (0+255),b
  5787  001A0C                     
  5788                           ; BSR set to: 0
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5790  001A0C  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
  5791  001A0E  EF12  F00D         	goto	u5471
  5792  001A12  517B               	movf	(xtoa@c+1)& (0+255),w,b
  5793  001A14  E109               	bnz	u5470
  5794  001A16  0E0A               	movlw	10
  5795  001A18  5D7A               	subwf	xtoa@c& (0+255),w,b
  5796  001A1A  A0D8               	btfss	status,0,c
  5797  001A1C  EF12  F00D         	goto	u5471
  5798  001A20  EF14  F00D         	goto	u5470
  5799  001A24                     u5471:
  5800  001A24  EF1C  F00D         	goto	l5245
  5801  001A28                     u5470:
  5802  001A28                     
  5803                           ; BSR set to: 0
  5804  001A28  0E57               	movlw	87
  5805  001A2A  257A               	addwf	xtoa@c& (0+255),w,b
  5806  001A2C  6F7A               	movwf	xtoa@c& (0+255),b
  5807  001A2E  0E00               	movlw	0
  5808  001A30  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  5809  001A32  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  5810  001A34  EF22  F00D         	goto	l558
  5811  001A38                     l5245:
  5812                           
  5813                           ; BSR set to: 0
  5814  001A38  0E30               	movlw	48
  5815  001A3A  257A               	addwf	xtoa@c& (0+255),w,b
  5816  001A3C  6F7A               	movwf	xtoa@c& (0+255),b
  5817  001A3E  0E00               	movlw	0
  5818  001A40  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  5819  001A42  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  5820  001A44                     l558:
  5821                           
  5822                           ; BSR set to: 0
  5823  001A44  0EBF               	movlw	191
  5824  001A46  6F60               	movwf	??_xtoa& (0+255),b
  5825  001A48  0EFF               	movlw	255
  5826  001A4A  6F61               	movwf	(??_xtoa+1)& (0+255),b
  5827  001A4C  5038               	movf	xtoa@x^0,w,c
  5828  001A4E  6F62               	movwf	(??_xtoa+2)& (0+255),b
  5829  001A50  6B63               	clrf	(??_xtoa+3)& (0+255),b
  5830  001A52  5160               	movf	??_xtoa& (0+255),w,b
  5831  001A54  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  5832  001A56  5161               	movf	(??_xtoa+1)& (0+255),w,b
  5833  001A58  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  5834  001A5A  5163               	movf	(??_xtoa+3)& (0+255),w,b
  5835  001A5C  E10A               	bnz	u5480
  5836  001A5E  0E1A               	movlw	26
  5837  001A60  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  5838  001A62  A0D8               	btfss	status,0,c
  5839  001A64  EF36  F00D         	goto	u5481
  5840  001A68  EF39  F00D         	goto	u5480
  5841  001A6C                     u5481:
  5842  001A6C  0E01               	movlw	1
  5843  001A6E  EF3A  F00D         	goto	u5490
  5844  001A72                     u5480:
  5845  001A72  0E00               	movlw	0
  5846  001A74                     u5490:
  5847  001A74  6F68               	movwf	_xtoa$1269& (0+255),b
  5848  001A76  6B69               	clrf	(_xtoa$1269+1)& (0+255),b
  5849  001A78                     
  5850                           ; BSR set to: 0
  5851  001A78  5168               	movf	_xtoa$1269& (0+255),w,b
  5852  001A7A  1169               	iorwf	(_xtoa$1269+1)& (0+255),w,b
  5853  001A7C  B4D8               	btfsc	status,2,c
  5854  001A7E  EF43  F00D         	goto	u5501
  5855  001A82  EF45  F00D         	goto	u5500
  5856  001A86                     u5501:
  5857  001A86  EF75  F00D         	goto	l5259
  5858  001A8A                     u5500:
  5859  001A8A                     
  5860                           ; BSR set to: 0
  5861  001A8A  0E9F               	movlw	159
  5862  001A8C  6F60               	movwf	??_xtoa& (0+255),b
  5863  001A8E  0EFF               	movlw	255
  5864  001A90  6F61               	movwf	(??_xtoa+1)& (0+255),b
  5865  001A92  0E20               	movlw	32
  5866  001A94  117A               	iorwf	xtoa@c& (0+255),w,b
  5867  001A96  6F62               	movwf	(??_xtoa+2)& (0+255),b
  5868  001A98  0E00               	movlw	0
  5869  001A9A  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
  5870  001A9C  6F63               	movwf	(??_xtoa+3)& (0+255),b
  5871  001A9E  5160               	movf	??_xtoa& (0+255),w,b
  5872  001AA0  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  5873  001AA2  5161               	movf	(??_xtoa+1)& (0+255),w,b
  5874  001AA4  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  5875  001AA6  5163               	movf	(??_xtoa+3)& (0+255),w,b
  5876  001AA8  E10A               	bnz	u5510
  5877  001AAA  0E1A               	movlw	26
  5878  001AAC  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  5879  001AAE  A0D8               	btfss	status,0,c
  5880  001AB0  EF5C  F00D         	goto	u5511
  5881  001AB4  EF5F  F00D         	goto	u5510
  5882  001AB8                     u5511:
  5883  001AB8  0E01               	movlw	1
  5884  001ABA  EF60  F00D         	goto	u5520
  5885  001ABE                     u5510:
  5886  001ABE  0E00               	movlw	0
  5887  001AC0                     u5520:
  5888  001AC0  6F6A               	movwf	_xtoa$1270& (0+255),b
  5889  001AC2  6B6B               	clrf	(_xtoa$1270+1)& (0+255),b
  5890  001AC4                     
  5891                           ; BSR set to: 0
  5892  001AC4  516A               	movf	_xtoa$1270& (0+255),w,b
  5893  001AC6  116B               	iorwf	(_xtoa$1270+1)& (0+255),w,b
  5894  001AC8  B4D8               	btfsc	status,2,c
  5895  001ACA  EF69  F00D         	goto	u5531
  5896  001ACE  EF6B  F00D         	goto	u5530
  5897  001AD2                     u5531:
  5898  001AD2  EF75  F00D         	goto	l5259
  5899  001AD6                     u5530:
  5900  001AD6                     
  5901                           ; BSR set to: 0
  5902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5903  001AD6  C07A  F019         	movff	xtoa@c,toupper@c
  5904  001ADA  C07B  F01A         	movff	xtoa@c+1,toupper@c+1
  5905  001ADE  EC80  F019         	call	_toupper	;wreg free
  5906  001AE2  C019  F07A         	movff	?_toupper,xtoa@c
  5907  001AE6  C01A  F07B         	movff	?_toupper+1,xtoa@c+1
  5908  001AEA                     l5259:
  5909                           
  5910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5911  001AEA  0ECB               	movlw	low _dbuf
  5912  001AEC  0100               	movlb	0	; () banked
  5913  001AEE  2578               	addwf	xtoa@i& (0+255),w,b
  5914  001AF0  6ED9               	movwf	fsr2l,c
  5915  001AF2  0E00               	movlw	high _dbuf
  5916  001AF4  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  5917  001AF6  6EDA               	movwf	fsr2h,c
  5918  001AF8  C07A  FFDF         	movff	xtoa@c,indf2
  5919  001AFC                     
  5920                           ; BSR set to: 0
  5921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5922  001AFC  076C               	decf	xtoa@p& (0+255),f,b
  5923  001AFE  A0D8               	btfss	status,0,c
  5924  001B00  076D               	decf	(xtoa@p+1)& (0+255),f,b
  5925  001B02                     
  5926                           ; BSR set to: 0
  5927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  5928  001B02  076E               	decf	xtoa@w& (0+255),f,b
  5929  001B04  A0D8               	btfss	status,0,c
  5930  001B06  076F               	decf	(xtoa@w+1)& (0+255),f,b
  5931  001B08                     
  5932                           ; BSR set to: 0
  5933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  5934  001B08  C070  F060         	movff	xtoa@n,??_xtoa
  5935  001B0C  C071  F061         	movff	xtoa@n+1,??_xtoa+1
  5936  001B10  C072  F062         	movff	xtoa@n+2,??_xtoa+2
  5937  001B14  C073  F063         	movff	xtoa@n+3,??_xtoa+3
  5938  001B18  C074  F064         	movff	xtoa@n+4,??_xtoa+4
  5939  001B1C  C075  F065         	movff	xtoa@n+5,??_xtoa+5
  5940  001B20  C076  F066         	movff	xtoa@n+6,??_xtoa+6
  5941  001B24  C077  F067         	movff	xtoa@n+7,??_xtoa+7
  5942  001B28  0E05               	movlw	5
  5943  001B2A  EFA0  F00D         	goto	u5540
  5944  001B2E                     u5545:
  5945  001B2E  90D8               	bcf	status,0,c
  5946  001B30  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
  5947  001B32  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
  5948  001B34  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
  5949  001B36  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
  5950  001B38  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
  5951  001B3A  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
  5952  001B3C  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
  5953  001B3E  3360               	rrcf	??_xtoa& (0+255),f,b
  5954  001B40                     u5540:
  5955  001B40  2EE8               	decfsz	wreg,f,c
  5956  001B42  EF97  F00D         	goto	u5545
  5957  001B46  C060  F070         	movff	??_xtoa,xtoa@n
  5958  001B4A  C061  F071         	movff	??_xtoa+1,xtoa@n+1
  5959  001B4E  C062  F072         	movff	??_xtoa+2,xtoa@n+2
  5960  001B52  C063  F073         	movff	??_xtoa+3,xtoa@n+3
  5961  001B56  C064  F074         	movff	??_xtoa+4,xtoa@n+4
  5962  001B5A  C065  F075         	movff	??_xtoa+5,xtoa@n+5
  5963  001B5E  C066  F076         	movff	??_xtoa+6,xtoa@n+6
  5964  001B62  C067  F077         	movff	??_xtoa+7,xtoa@n+7
  5965  001B66                     l5267:
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5969  001B66  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
  5970  001B68  EFBF  F00D         	goto	u5551
  5971  001B6C  5179               	movf	(xtoa@i+1)& (0+255),w,b
  5972  001B6E  E109               	bnz	u5550
  5973  001B70  0E02               	movlw	2
  5974  001B72  5D78               	subwf	xtoa@i& (0+255),w,b
  5975  001B74  A0D8               	btfss	status,0,c
  5976  001B76  EFBF  F00D         	goto	u5551
  5977  001B7A  EFC1  F00D         	goto	u5550
  5978  001B7E                     u5551:
  5979  001B7E  EFF1  F00D         	goto	l572
  5980  001B82                     u5550:
  5981  001B82                     
  5982                           ; BSR set to: 0
  5983  001B82  5170               	movf	xtoa@n& (0+255),w,b
  5984  001B84  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
  5985  001B86  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
  5986  001B88  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
  5987  001B8A  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
  5988  001B8C  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
  5989  001B8E  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
  5990  001B90  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
  5991  001B92  A4D8               	btfss	status,2,c
  5992  001B94  EFCE  F00D         	goto	u5561
  5993  001B98  EFD0  F00D         	goto	u5560
  5994  001B9C                     u5561:
  5995  001B9C  EFFF  F00C         	goto	l5237
  5996  001BA0                     u5560:
  5997  001BA0                     
  5998                           ; BSR set to: 0
  5999  001BA0  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
  6000  001BA2  EFDD  F00D         	goto	u5570
  6001  001BA6  516D               	movf	(xtoa@p+1)& (0+255),w,b
  6002  001BA8  E106               	bnz	u5571
  6003  001BAA  056C               	decf	xtoa@p& (0+255),w,b
  6004  001BAC  B0D8               	btfsc	status,0,c
  6005  001BAE  EFDB  F00D         	goto	u5571
  6006  001BB2  EFDD  F00D         	goto	u5570
  6007  001BB6                     u5571:
  6008  001BB6  EFFF  F00C         	goto	l5237
  6009  001BBA                     u5570:
  6010  001BBA                     
  6011                           ; BSR set to: 0
  6012  001BBA  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
  6013  001BBC  EFE8  F00D         	goto	u5581
  6014  001BC0  516F               	movf	(xtoa@w+1)& (0+255),w,b
  6015  001BC2  E108               	bnz	u5580
  6016  001BC4  056E               	decf	xtoa@w& (0+255),w,b
  6017  001BC6  A0D8               	btfss	status,0,c
  6018  001BC8  EFE8  F00D         	goto	u5581
  6019  001BCC  EFEA  F00D         	goto	u5580
  6020  001BD0                     u5581:
  6021  001BD0  EFF1  F00D         	goto	l572
  6022  001BD4                     u5580:
  6023  001BD4                     
  6024                           ; BSR set to: 0
  6025  001BD4  B243               	btfsc	_flags^0,1,c
  6026  001BD6  EFEF  F00D         	goto	u5591
  6027  001BDA  EFF1  F00D         	goto	u5590
  6028  001BDE                     u5591:
  6029  001BDE  EFFF  F00C         	goto	l5237
  6030  001BE2                     u5590:
  6031  001BE2                     l572:
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6035  001BE2  A843               	btfss	_flags^0,4,c
  6036  001BE4  EFF6  F00D         	goto	u5601
  6037  001BE8  EFF8  F00D         	goto	u5600
  6038  001BEC                     u5601:
  6039  001BEC  EF0E  F00E         	goto	l5283
  6040  001BF0                     u5600:
  6041  001BF0                     
  6042                           ; BSR set to: 0
  6043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6044  001BF0  0778               	decf	xtoa@i& (0+255),f,b
  6045  001BF2  A0D8               	btfss	status,0,c
  6046  001BF4  0779               	decf	(xtoa@i+1)& (0+255),f,b
  6047  001BF6                     
  6048                           ; BSR set to: 0
  6049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6050  001BF6  0ECB               	movlw	low _dbuf
  6051  001BF8  2578               	addwf	xtoa@i& (0+255),w,b
  6052  001BFA  6ED9               	movwf	fsr2l,c
  6053  001BFC  0E00               	movlw	high _dbuf
  6054  001BFE  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  6055  001C00  6EDA               	movwf	fsr2h,c
  6056  001C02  C038  FFDF         	movff	xtoa@x,indf2
  6057  001C06                     
  6058                           ; BSR set to: 0
  6059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6060  001C06  0778               	decf	xtoa@i& (0+255),f,b
  6061  001C08  A0D8               	btfss	status,0,c
  6062  001C0A  0779               	decf	(xtoa@i+1)& (0+255),f,b
  6063                           
  6064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6065  001C0C  0ECB               	movlw	low _dbuf
  6066  001C0E  2578               	addwf	xtoa@i& (0+255),w,b
  6067  001C10  6ED9               	movwf	fsr2l,c
  6068  001C12  0E00               	movlw	high _dbuf
  6069  001C14  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  6070  001C16  6EDA               	movwf	fsr2h,c
  6071  001C18  0E30               	movlw	48
  6072  001C1A  6EDF               	movwf	indf2,c
  6073  001C1C                     l5283:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6077  001C1C  C02E  F023         	movff	xtoa@fp,pad@fp
  6078  001C20  C02F  F024         	movff	xtoa@fp+1,pad@fp+1
  6079  001C24  0ECB               	movlw	low _dbuf
  6080  001C26  2578               	addwf	xtoa@i& (0+255),w,b
  6081  001C28  6E25               	movwf	pad@buf^0,c
  6082  001C2A  0E00               	movlw	high _dbuf
  6083  001C2C  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  6084  001C2E  6E26               	movwf	(pad@buf+1)^0,c
  6085  001C30  C06E  F027         	movff	xtoa@w,pad@p
  6086  001C34  C06F  F028         	movff	xtoa@w+1,pad@p+1
  6087  001C38  EC54  F018         	call	_pad	;wreg free
  6088  001C3C  C023  F02E         	movff	?_pad,?_xtoa
  6089  001C40  C024  F02F         	movff	?_pad+1,?_xtoa+1
  6090  001C44  0012               	return		;funcret
  6091  001C46                     __end_of_xtoa:
  6092                           	opt callstack 0
  6093                           
  6094 ;; *************** function _toupper *****************
  6095 ;; Defined at:
  6096 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  c               2   24[COMRAM] int 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  2   24[COMRAM] int 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6112 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6114 ;;Total ram usage:        8 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    6
  6117 ;; This function calls:
  6118 ;;		_islower
  6119 ;; This function is called by:
  6120 ;;		_xtoa
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text6
  6125  003300                     __ptext6:
  6126                           	opt callstack 0
  6127  003300                     _toupper:
  6128                           	opt callstack 19
  6129  003300  0E9F               	movlw	159
  6130  003302  6E1B               	movwf	??_toupper^0,c
  6131  003304  0EFF               	movlw	255
  6132  003306  6E1C               	movwf	(??_toupper+1)^0,c
  6133  003308  C019  F01D         	movff	toupper@c,??_toupper+2
  6134  00330C  C01A  F01E         	movff	toupper@c+1,??_toupper+3
  6135  003310  501B               	movf	??_toupper^0,w,c
  6136  003312  261D               	addwf	(??_toupper+2)^0,f,c
  6137  003314  501C               	movf	(??_toupper+1)^0,w,c
  6138  003316  221E               	addwfc	(??_toupper+3)^0,f,c
  6139  003318  501E               	movf	(??_toupper+3)^0,w,c
  6140  00331A  E10A               	bnz	u4740
  6141  00331C  0E1A               	movlw	26
  6142  00331E  5C1D               	subwf	(??_toupper+2)^0,w,c
  6143  003320  A0D8               	btfss	status,0,c
  6144  003322  EF95  F019         	goto	u4741
  6145  003326  EF98  F019         	goto	u4740
  6146  00332A                     u4741:
  6147  00332A  0E01               	movlw	1
  6148  00332C  EF99  F019         	goto	u4750
  6149  003330                     u4740:
  6150  003330  0E00               	movlw	0
  6151  003332                     u4750:
  6152  003332  6E1F               	movwf	_toupper$1953^0,c
  6153  003334  6A20               	clrf	(_toupper$1953+1)^0,c
  6154  003336  501F               	movf	_toupper$1953^0,w,c
  6155  003338  1020               	iorwf	(_toupper$1953+1)^0,w,c
  6156  00333A  B4D8               	btfsc	status,2,c
  6157  00333C  EFA2  F019         	goto	u4761
  6158  003340  EFA4  F019         	goto	u4760
  6159  003344                     u4761:
  6160  003344  EFAA  F019         	goto	l1444
  6161  003348                     u4760:
  6162  003348  0E5F               	movlw	95
  6163  00334A  1419               	andwf	toupper@c^0,w,c
  6164  00334C  6E19               	movwf	?_toupper^0,c
  6165  00334E  6A1A               	clrf	(?_toupper+1)^0,c
  6166  003350  EFAE  F019         	goto	l1449
  6167  003354                     l1444:
  6168  003354  C019  F019         	movff	toupper@c,?_toupper
  6169  003358  C01A  F01A         	movff	toupper@c+1,?_toupper+1
  6170  00335C                     l1449:
  6171  00335C  0012               	return		;funcret
  6172  00335E                     __end_of_toupper:
  6173                           	opt callstack 0
  6174                           
  6175 ;; *************** function _islower *****************
  6176 ;; Defined at:
  6177 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  c               2   18[COMRAM] int 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  2   18[COMRAM] int 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;Total ram usage:        6 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    5
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_toupper
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text7
  6206  0036AC                     __ptext7:
  6207                           	opt callstack 0
  6208  0036AC                     _islower:
  6209                           	opt callstack 19
  6210  0036AC  0E9F               	movlw	159
  6211  0036AE  6E15               	movwf	??_islower^0,c
  6212  0036B0  0EFF               	movlw	255
  6213  0036B2  6E16               	movwf	(??_islower+1)^0,c
  6214  0036B4  C013  F017         	movff	islower@c,??_islower+2
  6215  0036B8  C014  F018         	movff	islower@c+1,??_islower+3
  6216  0036BC  5015               	movf	??_islower^0,w,c
  6217  0036BE  2617               	addwf	(??_islower+2)^0,f,c
  6218  0036C0  5016               	movf	(??_islower+1)^0,w,c
  6219  0036C2  2218               	addwfc	(??_islower+3)^0,f,c
  6220  0036C4  5018               	movf	(??_islower+3)^0,w,c
  6221  0036C6  E10A               	bnz	u4620
  6222  0036C8  0E1A               	movlw	26
  6223  0036CA  5C17               	subwf	(??_islower+2)^0,w,c
  6224  0036CC  A0D8               	btfss	status,0,c
  6225  0036CE  EF6B  F01B         	goto	u4621
  6226  0036D2  EF6E  F01B         	goto	u4620
  6227  0036D6                     u4621:
  6228  0036D6  0E01               	movlw	1
  6229  0036D8  EF6F  F01B         	goto	u4630
  6230  0036DC                     u4620:
  6231  0036DC  0E00               	movlw	0
  6232  0036DE                     u4630:
  6233  0036DE  6E13               	movwf	?_islower^0,c
  6234  0036E0  6A14               	clrf	(?_islower+1)^0,c
  6235  0036E2  0012               	return		;funcret
  6236  0036E4                     __end_of_islower:
  6237                           	opt callstack 0
  6238                           
  6239 ;; *************** function _isupper *****************
  6240 ;; Defined at:
  6241 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  c               2   18[COMRAM] int 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  2   18[COMRAM] int 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;Total ram usage:        6 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    5
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_xtoa
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text8
  6270  0036E4                     __ptext8:
  6271                           	opt callstack 0
  6272  0036E4                     _isupper:
  6273                           	opt callstack 20
  6274  0036E4  0EBF               	movlw	191
  6275  0036E6  6E15               	movwf	??_isupper^0,c
  6276  0036E8  0EFF               	movlw	255
  6277  0036EA  6E16               	movwf	(??_isupper+1)^0,c
  6278  0036EC  C013  F017         	movff	isupper@c,??_isupper+2
  6279  0036F0  C014  F018         	movff	isupper@c+1,??_isupper+3
  6280  0036F4  5015               	movf	??_isupper^0,w,c
  6281  0036F6  2617               	addwf	(??_isupper+2)^0,f,c
  6282  0036F8  5016               	movf	(??_isupper+1)^0,w,c
  6283  0036FA  2218               	addwfc	(??_isupper+3)^0,f,c
  6284  0036FC  5018               	movf	(??_isupper+3)^0,w,c
  6285  0036FE  E10A               	bnz	u4700
  6286  003700  0E1A               	movlw	26
  6287  003702  5C17               	subwf	(??_isupper+2)^0,w,c
  6288  003704  A0D8               	btfss	status,0,c
  6289  003706  EF87  F01B         	goto	u4701
  6290  00370A  EF8A  F01B         	goto	u4700
  6291  00370E                     u4701:
  6292  00370E  0E01               	movlw	1
  6293  003710  EF8B  F01B         	goto	u4710
  6294  003714                     u4700:
  6295  003714  0E00               	movlw	0
  6296  003716                     u4710:
  6297  003716  6E13               	movwf	?_isupper^0,c
  6298  003718  6A14               	clrf	(?_isupper+1)^0,c
  6299  00371A  0012               	return		;funcret
  6300  00371C                     __end_of_isupper:
  6301                           	opt callstack 0
  6302                           
  6303 ;; *************** function _isalpha *****************
  6304 ;; Defined at:
  6305 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  c               2   18[COMRAM] int 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  2   18[COMRAM] int 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;Total ram usage:        6 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    5
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_xtoa
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text9
  6334  003636                     __ptext9:
  6335                           	opt callstack 0
  6336  003636                     _isalpha:
  6337                           	opt callstack 20
  6338  003636  0E9F               	movlw	159
  6339  003638  6E15               	movwf	??_isalpha^0,c
  6340  00363A  0EFF               	movlw	255
  6341  00363C  6E16               	movwf	(??_isalpha+1)^0,c
  6342  00363E  0E20               	movlw	32
  6343  003640  1013               	iorwf	isalpha@c^0,w,c
  6344  003642  6E17               	movwf	(??_isalpha+2)^0,c
  6345  003644  0E00               	movlw	0
  6346  003646  1014               	iorwf	(isalpha@c+1)^0,w,c
  6347  003648  6E18               	movwf	(??_isalpha+3)^0,c
  6348  00364A  5015               	movf	??_isalpha^0,w,c
  6349  00364C  2617               	addwf	(??_isalpha+2)^0,f,c
  6350  00364E  5016               	movf	(??_isalpha+1)^0,w,c
  6351  003650  2218               	addwfc	(??_isalpha+3)^0,f,c
  6352  003652  5018               	movf	(??_isalpha+3)^0,w,c
  6353  003654  E10A               	bnz	u4720
  6354  003656  0E1A               	movlw	26
  6355  003658  5C17               	subwf	(??_isalpha+2)^0,w,c
  6356  00365A  A0D8               	btfss	status,0,c
  6357  00365C  EF32  F01B         	goto	u4721
  6358  003660  EF35  F01B         	goto	u4720
  6359  003664                     u4721:
  6360  003664  0E01               	movlw	1
  6361  003666  EF36  F01B         	goto	u4730
  6362  00366A                     u4720:
  6363  00366A  0E00               	movlw	0
  6364  00366C                     u4730:
  6365  00366C  6E13               	movwf	?_isalpha^0,c
  6366  00366E  6A14               	clrf	(?_isalpha+1)^0,c
  6367  003670  0012               	return		;funcret
  6368  003672                     __end_of_isalpha:
  6369                           	opt callstack 0
  6370                           
  6371 ;; *************** function _utoa *****************
  6372 ;; Defined at:
  6373 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  6376 ;;		 -> vsnprintf@f(6), 
  6377 ;;  d               8   47[COMRAM] unsigned long long 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  n               8   12[BANK0 ] unsigned long long 
  6380 ;;  i               2   20[BANK0 ] int 
  6381 ;;  w               2   10[BANK0 ] int 
  6382 ;;  p               2    8[BANK0 ] int 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  2   45[COMRAM] int 
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6392 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;Total ram usage:       32 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    9
  6399 ;; This function calls:
  6400 ;;		___lodiv
  6401 ;;		___lomod
  6402 ;;		_pad
  6403 ;; This function is called by:
  6404 ;;		_vfpfcnvrt
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text10
  6409  001C46                     __ptext10:
  6410                           	opt callstack 0
  6411  001C46                     _utoa:
  6412                           	opt callstack 17
  6413  001C46                     
  6414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6415  001C46  BE42               	btfsc	(_prec+1)^0,7,c
  6416  001C48  EF28  F00E         	goto	u5371
  6417  001C4C  EF2A  F00E         	goto	u5370
  6418  001C50                     u5371:
  6419  001C50  EF2B  F00E         	goto	l5189
  6420  001C54                     u5370:
  6421  001C54                     
  6422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6423  001C54  9243               	bcf	_flags^0,1,c
  6424  001C56                     l5189:
  6425                           
  6426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6427  001C56  BE42               	btfsc	(_prec+1)^0,7,c
  6428  001C58  EF38  F00E         	goto	u5380
  6429  001C5C  5042               	movf	(_prec+1)^0,w,c
  6430  001C5E  E106               	bnz	u5381
  6431  001C60  0441               	decf	_prec^0,w,c
  6432  001C62  B0D8               	btfsc	status,0,c
  6433  001C64  EF36  F00E         	goto	u5381
  6434  001C68  EF38  F00E         	goto	u5380
  6435  001C6C                     u5381:
  6436  001C6C  EF3F  F00E         	goto	l534
  6437  001C70                     u5380:
  6438  001C70  0E00               	movlw	0
  6439  001C72  0100               	movlb	0	; () banked
  6440  001C74  6F69               	movwf	(utoa@p+1)& (0+255),b
  6441  001C76  0E01               	movlw	1
  6442  001C78  6F68               	movwf	utoa@p& (0+255),b
  6443  001C7A  EF43  F00E         	goto	l536
  6444  001C7E                     l534:
  6445  001C7E  C041  F068         	movff	_prec,utoa@p
  6446  001C82  C042  F069         	movff	_prec+1,utoa@p+1
  6447  001C86                     l536:
  6448                           
  6449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6450  001C86  C03F  F06A         	movff	_width,utoa@w
  6451  001C8A  C040  F06B         	movff	_width+1,utoa@w+1
  6452                           
  6453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6454  001C8E  C030  F06C         	movff	utoa@d,utoa@n
  6455  001C92  C031  F06D         	movff	utoa@d+1,utoa@n+1
  6456  001C96  C032  F06E         	movff	utoa@d+2,utoa@n+2
  6457  001C9A  C033  F06F         	movff	utoa@d+3,utoa@n+3
  6458  001C9E  C034  F070         	movff	utoa@d+4,utoa@n+4
  6459  001CA2  C035  F071         	movff	utoa@d+5,utoa@n+5
  6460  001CA6  C036  F072         	movff	utoa@d+6,utoa@n+6
  6461  001CAA  C037  F073         	movff	utoa@d+7,utoa@n+7
  6462  001CAE                     
  6463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6464  001CAE  0E00               	movlw	0
  6465  001CB0  0100               	movlb	0	; () banked
  6466  001CB2  6F75               	movwf	(utoa@i+1)& (0+255),b
  6467  001CB4  0E1F               	movlw	31
  6468  001CB6  6F74               	movwf	utoa@i& (0+255),b
  6469  001CB8                     
  6470                           ; BSR set to: 0
  6471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6472  001CB8  0E00               	movlw	0
  6473  001CBA  6FEA               	movwf	(_dbuf+31)& (0+255),b
  6474                           
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6476  001CBC  EFD7  F00E         	goto	l5207
  6477  001CC0                     l5197:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6481  001CC0  0774               	decf	utoa@i& (0+255),f,b
  6482  001CC2  A0D8               	btfss	status,0,c
  6483  001CC4  0775               	decf	(utoa@i+1)& (0+255),f,b
  6484  001CC6                     
  6485                           ; BSR set to: 0
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6487  001CC6  0ECB               	movlw	low _dbuf
  6488  001CC8  2574               	addwf	utoa@i& (0+255),w,b
  6489  001CCA  6ED9               	movwf	fsr2l,c
  6490  001CCC  0E00               	movlw	high _dbuf
  6491  001CCE  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  6492  001CD0  6EDA               	movwf	fsr2h,c
  6493  001CD2  C06C  F013         	movff	utoa@n,___lomod@dividend
  6494  001CD6  C06D  F014         	movff	utoa@n+1,___lomod@dividend+1
  6495  001CDA  C06E  F015         	movff	utoa@n+2,___lomod@dividend+2
  6496  001CDE  C06F  F016         	movff	utoa@n+3,___lomod@dividend+3
  6497  001CE2  C070  F017         	movff	utoa@n+4,___lomod@dividend+4
  6498  001CE6  C071  F018         	movff	utoa@n+5,___lomod@dividend+5
  6499  001CEA  C072  F019         	movff	utoa@n+6,___lomod@dividend+6
  6500  001CEE  C073  F01A         	movff	utoa@n+7,___lomod@dividend+7
  6501  001CF2  0E0A               	movlw	10
  6502  001CF4  6E1B               	movwf	___lomod@divisor^0,c
  6503  001CF6  0E00               	movlw	0
  6504  001CF8  6E1C               	movwf	(___lomod@divisor+1)^0,c
  6505  001CFA  0E00               	movlw	0
  6506  001CFC  6E1D               	movwf	(___lomod@divisor+2)^0,c
  6507  001CFE  0E00               	movlw	0
  6508  001D00  6E1E               	movwf	(___lomod@divisor+3)^0,c
  6509  001D02  0E00               	movlw	0
  6510  001D04  6E1F               	movwf	(___lomod@divisor+4)^0,c
  6511  001D06  0E00               	movlw	0
  6512  001D08  6E20               	movwf	(___lomod@divisor+5)^0,c
  6513  001D0A  0E00               	movlw	0
  6514  001D0C  6E21               	movwf	(___lomod@divisor+6)^0,c
  6515  001D0E  0E00               	movlw	0
  6516  001D10  6E22               	movwf	(___lomod@divisor+7)^0,c
  6517  001D12  EC25  F017         	call	___lomod	;wreg free
  6518  001D16  C013  F060         	movff	?___lomod,??_utoa
  6519  001D1A  C014  F061         	movff	?___lomod+1,??_utoa+1
  6520  001D1E  C015  F062         	movff	?___lomod+2,??_utoa+2
  6521  001D22  C016  F063         	movff	?___lomod+3,??_utoa+3
  6522  001D26  C017  F064         	movff	?___lomod+4,??_utoa+4
  6523  001D2A  C018  F065         	movff	?___lomod+5,??_utoa+5
  6524  001D2E  C019  F066         	movff	?___lomod+6,??_utoa+6
  6525  001D32  C01A  F067         	movff	?___lomod+7,??_utoa+7
  6526  001D36  0100               	movlb	0	; () banked
  6527  001D38  5160               	movf	??_utoa& (0+255),w,b
  6528  001D3A  0F30               	addlw	48
  6529  001D3C  6EDF               	movwf	indf2,c
  6530  001D3E                     
  6531                           ; BSR set to: 0
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6533  001D3E  0768               	decf	utoa@p& (0+255),f,b
  6534  001D40  A0D8               	btfss	status,0,c
  6535  001D42  0769               	decf	(utoa@p+1)& (0+255),f,b
  6536  001D44                     
  6537                           ; BSR set to: 0
  6538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6539  001D44  076A               	decf	utoa@w& (0+255),f,b
  6540  001D46  A0D8               	btfss	status,0,c
  6541  001D48  076B               	decf	(utoa@w+1)& (0+255),f,b
  6542  001D4A                     
  6543                           ; BSR set to: 0
  6544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6545  001D4A  C06C  F013         	movff	utoa@n,___lodiv@dividend
  6546  001D4E  C06D  F014         	movff	utoa@n+1,___lodiv@dividend+1
  6547  001D52  C06E  F015         	movff	utoa@n+2,___lodiv@dividend+2
  6548  001D56  C06F  F016         	movff	utoa@n+3,___lodiv@dividend+3
  6549  001D5A  C070  F017         	movff	utoa@n+4,___lodiv@dividend+4
  6550  001D5E  C071  F018         	movff	utoa@n+5,___lodiv@dividend+5
  6551  001D62  C072  F019         	movff	utoa@n+6,___lodiv@dividend+6
  6552  001D66  C073  F01A         	movff	utoa@n+7,___lodiv@dividend+7
  6553  001D6A  0E0A               	movlw	10
  6554  001D6C  6E1B               	movwf	___lodiv@divisor^0,c
  6555  001D6E  0E00               	movlw	0
  6556  001D70  6E1C               	movwf	(___lodiv@divisor+1)^0,c
  6557  001D72  0E00               	movlw	0
  6558  001D74  6E1D               	movwf	(___lodiv@divisor+2)^0,c
  6559  001D76  0E00               	movlw	0
  6560  001D78  6E1E               	movwf	(___lodiv@divisor+3)^0,c
  6561  001D7A  0E00               	movlw	0
  6562  001D7C  6E1F               	movwf	(___lodiv@divisor+4)^0,c
  6563  001D7E  0E00               	movlw	0
  6564  001D80  6E20               	movwf	(___lodiv@divisor+5)^0,c
  6565  001D82  0E00               	movlw	0
  6566  001D84  6E21               	movwf	(___lodiv@divisor+6)^0,c
  6567  001D86  0E00               	movlw	0
  6568  001D88  6E22               	movwf	(___lodiv@divisor+7)^0,c
  6569  001D8A  EC38  F016         	call	___lodiv	;wreg free
  6570  001D8E  C013  F06C         	movff	?___lodiv,utoa@n
  6571  001D92  C014  F06D         	movff	?___lodiv+1,utoa@n+1
  6572  001D96  C015  F06E         	movff	?___lodiv+2,utoa@n+2
  6573  001D9A  C016  F06F         	movff	?___lodiv+3,utoa@n+3
  6574  001D9E  C017  F070         	movff	?___lodiv+4,utoa@n+4
  6575  001DA2  C018  F071         	movff	?___lodiv+5,utoa@n+5
  6576  001DA6  C019  F072         	movff	?___lodiv+6,utoa@n+6
  6577  001DAA  C01A  F073         	movff	?___lodiv+7,utoa@n+7
  6578  001DAE                     l5207:
  6579                           
  6580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6581  001DAE  0100               	movlb	0	; () banked
  6582  001DB0  5174               	movf	utoa@i& (0+255),w,b
  6583  001DB2  1175               	iorwf	(utoa@i+1)& (0+255),w,b
  6584  001DB4  B4D8               	btfsc	status,2,c
  6585  001DB6  EFDF  F00E         	goto	u5391
  6586  001DBA  EFE1  F00E         	goto	u5390
  6587  001DBE                     u5391:
  6588  001DBE  EF11  F00F         	goto	l5217
  6589  001DC2                     u5390:
  6590  001DC2                     
  6591                           ; BSR set to: 0
  6592  001DC2  516C               	movf	utoa@n& (0+255),w,b
  6593  001DC4  116D               	iorwf	(utoa@n+1)& (0+255),w,b
  6594  001DC6  116E               	iorwf	(utoa@n+2)& (0+255),w,b
  6595  001DC8  116F               	iorwf	(utoa@n+3)& (0+255),w,b
  6596  001DCA  1170               	iorwf	(utoa@n+4)& (0+255),w,b
  6597  001DCC  1171               	iorwf	(utoa@n+5)& (0+255),w,b
  6598  001DCE  1172               	iorwf	(utoa@n+6)& (0+255),w,b
  6599  001DD0  1173               	iorwf	(utoa@n+7)& (0+255),w,b
  6600  001DD2  A4D8               	btfss	status,2,c
  6601  001DD4  EFEE  F00E         	goto	u5401
  6602  001DD8  EFF0  F00E         	goto	u5400
  6603  001DDC                     u5401:
  6604  001DDC  EF60  F00E         	goto	l5197
  6605  001DE0                     u5400:
  6606  001DE0                     
  6607                           ; BSR set to: 0
  6608  001DE0  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
  6609  001DE2  EFFD  F00E         	goto	u5410
  6610  001DE6  5169               	movf	(utoa@p+1)& (0+255),w,b
  6611  001DE8  E106               	bnz	u5411
  6612  001DEA  0568               	decf	utoa@p& (0+255),w,b
  6613  001DEC  B0D8               	btfsc	status,0,c
  6614  001DEE  EFFB  F00E         	goto	u5411
  6615  001DF2  EFFD  F00E         	goto	u5410
  6616  001DF6                     u5411:
  6617  001DF6  EF60  F00E         	goto	l5197
  6618  001DFA                     u5410:
  6619  001DFA                     
  6620                           ; BSR set to: 0
  6621  001DFA  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
  6622  001DFC  EF08  F00F         	goto	u5421
  6623  001E00  516B               	movf	(utoa@w+1)& (0+255),w,b
  6624  001E02  E108               	bnz	u5420
  6625  001E04  056A               	decf	utoa@w& (0+255),w,b
  6626  001E06  A0D8               	btfss	status,0,c
  6627  001E08  EF08  F00F         	goto	u5421
  6628  001E0C  EF0A  F00F         	goto	u5420
  6629  001E10                     u5421:
  6630  001E10  EF11  F00F         	goto	l5217
  6631  001E14                     u5420:
  6632  001E14                     
  6633                           ; BSR set to: 0
  6634  001E14  B243               	btfsc	_flags^0,1,c
  6635  001E16  EF0F  F00F         	goto	u5431
  6636  001E1A  EF11  F00F         	goto	u5430
  6637  001E1E                     u5431:
  6638  001E1E  EF60  F00E         	goto	l5197
  6639  001E22                     u5430:
  6640  001E22                     l5217:
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6644  001E22  C02E  F023         	movff	utoa@fp,pad@fp
  6645  001E26  C02F  F024         	movff	utoa@fp+1,pad@fp+1
  6646  001E2A  0ECB               	movlw	low _dbuf
  6647  001E2C  2574               	addwf	utoa@i& (0+255),w,b
  6648  001E2E  6E25               	movwf	pad@buf^0,c
  6649  001E30  0E00               	movlw	high _dbuf
  6650  001E32  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  6651  001E34  6E26               	movwf	(pad@buf+1)^0,c
  6652  001E36  C06A  F027         	movff	utoa@w,pad@p
  6653  001E3A  C06B  F028         	movff	utoa@w+1,pad@p+1
  6654  001E3E  EC54  F018         	call	_pad	;wreg free
  6655  001E42  C023  F02E         	movff	?_pad,?_utoa
  6656  001E46  C024  F02F         	movff	?_pad+1,?_utoa+1
  6657  001E4A  0012               	return		;funcret
  6658  001E4C                     __end_of_utoa:
  6659                           	opt callstack 0
  6660                           
  6661 ;; *************** function ___lomod *****************
  6662 ;; Defined at:
  6663 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  dividend        8   18[COMRAM] unsigned long long 
  6666 ;;  divisor         8   26[COMRAM] unsigned long long 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  counter         1   34[COMRAM] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  8   18[COMRAM] unsigned long long 
  6671 ;; Registers used:
  6672 ;;		wreg, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6678 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6682 ;;Total ram usage:       17 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    5
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_utoa
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text11
  6693  002E4A                     __ptext11:
  6694                           	opt callstack 0
  6695  002E4A                     ___lomod:
  6696                           	opt callstack 20
  6697  002E4A  501B               	movf	___lomod@divisor^0,w,c
  6698  002E4C  101C               	iorwf	(___lomod@divisor+1)^0,w,c
  6699  002E4E  101D               	iorwf	(___lomod@divisor+2)^0,w,c
  6700  002E50  101E               	iorwf	(___lomod@divisor+3)^0,w,c
  6701  002E52  101F               	iorwf	(___lomod@divisor+4)^0,w,c
  6702  002E54  1020               	iorwf	(___lomod@divisor+5)^0,w,c
  6703  002E56  1021               	iorwf	(___lomod@divisor+6)^0,w,c
  6704  002E58  1022               	iorwf	(___lomod@divisor+7)^0,w,c
  6705  002E5A  B4D8               	btfsc	status,2,c
  6706  002E5C  EF32  F017         	goto	u4961
  6707  002E60  EF34  F017         	goto	u4960
  6708  002E64                     u4961:
  6709  002E64  EF7C  F017         	goto	l1107
  6710  002E68                     u4960:
  6711  002E68  0E01               	movlw	1
  6712  002E6A  6E23               	movwf	___lomod@counter^0,c
  6713  002E6C  EF42  F017         	goto	l4989
  6714  002E70                     l4987:
  6715  002E70  90D8               	bcf	status,0,c
  6716  002E72  361B               	rlcf	___lomod@divisor^0,f,c
  6717  002E74  361C               	rlcf	(___lomod@divisor+1)^0,f,c
  6718  002E76  361D               	rlcf	(___lomod@divisor+2)^0,f,c
  6719  002E78  361E               	rlcf	(___lomod@divisor+3)^0,f,c
  6720  002E7A  361F               	rlcf	(___lomod@divisor+4)^0,f,c
  6721  002E7C  3620               	rlcf	(___lomod@divisor+5)^0,f,c
  6722  002E7E  3621               	rlcf	(___lomod@divisor+6)^0,f,c
  6723  002E80  3622               	rlcf	(___lomod@divisor+7)^0,f,c
  6724  002E82  2A23               	incf	___lomod@counter^0,f,c
  6725  002E84                     l4989:
  6726  002E84  AE22               	btfss	(___lomod@divisor+7)^0,7,c
  6727  002E86  EF47  F017         	goto	u4971
  6728  002E8A  EF49  F017         	goto	u4970
  6729  002E8E                     u4971:
  6730  002E8E  EF38  F017         	goto	l4987
  6731  002E92                     u4970:
  6732  002E92                     l4991:
  6733  002E92  501B               	movf	___lomod@divisor^0,w,c
  6734  002E94  5C13               	subwf	___lomod@dividend^0,w,c
  6735  002E96  501C               	movf	(___lomod@divisor+1)^0,w,c
  6736  002E98  5814               	subwfb	(___lomod@dividend+1)^0,w,c
  6737  002E9A  501D               	movf	(___lomod@divisor+2)^0,w,c
  6738  002E9C  5815               	subwfb	(___lomod@dividend+2)^0,w,c
  6739  002E9E  501E               	movf	(___lomod@divisor+3)^0,w,c
  6740  002EA0  5816               	subwfb	(___lomod@dividend+3)^0,w,c
  6741  002EA2  501F               	movf	(___lomod@divisor+4)^0,w,c
  6742  002EA4  5817               	subwfb	(___lomod@dividend+4)^0,w,c
  6743  002EA6  5020               	movf	(___lomod@divisor+5)^0,w,c
  6744  002EA8  5818               	subwfb	(___lomod@dividend+5)^0,w,c
  6745  002EAA  5021               	movf	(___lomod@divisor+6)^0,w,c
  6746  002EAC  5819               	subwfb	(___lomod@dividend+6)^0,w,c
  6747  002EAE  5022               	movf	(___lomod@divisor+7)^0,w,c
  6748  002EB0  581A               	subwfb	(___lomod@dividend+7)^0,w,c
  6749  002EB2  A0D8               	btfss	status,0,c
  6750  002EB4  EF5E  F017         	goto	u4981
  6751  002EB8  EF60  F017         	goto	u4980
  6752  002EBC                     u4981:
  6753  002EBC  EF70  F017         	goto	l4995
  6754  002EC0                     u4980:
  6755  002EC0  501B               	movf	___lomod@divisor^0,w,c
  6756  002EC2  5E13               	subwf	___lomod@dividend^0,f,c
  6757  002EC4  501C               	movf	(___lomod@divisor+1)^0,w,c
  6758  002EC6  5A14               	subwfb	(___lomod@dividend+1)^0,f,c
  6759  002EC8  501D               	movf	(___lomod@divisor+2)^0,w,c
  6760  002ECA  5A15               	subwfb	(___lomod@dividend+2)^0,f,c
  6761  002ECC  501E               	movf	(___lomod@divisor+3)^0,w,c
  6762  002ECE  5A16               	subwfb	(___lomod@dividend+3)^0,f,c
  6763  002ED0  501F               	movf	(___lomod@divisor+4)^0,w,c
  6764  002ED2  5A17               	subwfb	(___lomod@dividend+4)^0,f,c
  6765  002ED4  5020               	movf	(___lomod@divisor+5)^0,w,c
  6766  002ED6  5A18               	subwfb	(___lomod@dividend+5)^0,f,c
  6767  002ED8  5021               	movf	(___lomod@divisor+6)^0,w,c
  6768  002EDA  5A19               	subwfb	(___lomod@dividend+6)^0,f,c
  6769  002EDC  5022               	movf	(___lomod@divisor+7)^0,w,c
  6770  002EDE  5A1A               	subwfb	(___lomod@dividend+7)^0,f,c
  6771  002EE0                     l4995:
  6772  002EE0  90D8               	bcf	status,0,c
  6773  002EE2  3222               	rrcf	(___lomod@divisor+7)^0,f,c
  6774  002EE4  3221               	rrcf	(___lomod@divisor+6)^0,f,c
  6775  002EE6  3220               	rrcf	(___lomod@divisor+5)^0,f,c
  6776  002EE8  321F               	rrcf	(___lomod@divisor+4)^0,f,c
  6777  002EEA  321E               	rrcf	(___lomod@divisor+3)^0,f,c
  6778  002EEC  321D               	rrcf	(___lomod@divisor+2)^0,f,c
  6779  002EEE  321C               	rrcf	(___lomod@divisor+1)^0,f,c
  6780  002EF0  321B               	rrcf	___lomod@divisor^0,f,c
  6781  002EF2  2E23               	decfsz	___lomod@counter^0,f,c
  6782  002EF4  EF49  F017         	goto	l4991
  6783  002EF8                     l1107:
  6784  002EF8  C013  F013         	movff	___lomod@dividend,?___lomod
  6785  002EFC  C014  F014         	movff	___lomod@dividend+1,?___lomod+1
  6786  002F00  C015  F015         	movff	___lomod@dividend+2,?___lomod+2
  6787  002F04  C016  F016         	movff	___lomod@dividend+3,?___lomod+3
  6788  002F08  C017  F017         	movff	___lomod@dividend+4,?___lomod+4
  6789  002F0C  C018  F018         	movff	___lomod@dividend+5,?___lomod+5
  6790  002F10  C019  F019         	movff	___lomod@dividend+6,?___lomod+6
  6791  002F14  C01A  F01A         	movff	___lomod@dividend+7,?___lomod+7
  6792  002F18  0012               	return		;funcret
  6793  002F1A                     __end_of___lomod:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function ___lodiv *****************
  6797 ;; Defined at:
  6798 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  dividend        8   18[COMRAM] unsigned long long 
  6801 ;;  divisor         8   26[COMRAM] unsigned long long 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  quotient        8   34[COMRAM] unsigned long long 
  6804 ;;  counter         1   42[COMRAM] unsigned char 
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  8   18[COMRAM] unsigned long long 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6814 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;Total ram usage:       25 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:    5
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_utoa
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text12
  6829  002C70                     __ptext12:
  6830                           	opt callstack 0
  6831  002C70                     ___lodiv:
  6832                           	opt callstack 20
  6833  002C70  EE20  F023         	lfsr	2,___lodiv@quotient
  6834  002C74  0E07               	movlw	7
  6835  002C76                     u4921:
  6836  002C76  6ADE               	clrf	postinc2,c
  6837  002C78  06E8               	decf	wreg,f,c
  6838  002C7A  E2FD               	bc	u4921
  6839  002C7C  501B               	movf	___lodiv@divisor^0,w,c
  6840  002C7E  101C               	iorwf	(___lodiv@divisor+1)^0,w,c
  6841  002C80  101D               	iorwf	(___lodiv@divisor+2)^0,w,c
  6842  002C82  101E               	iorwf	(___lodiv@divisor+3)^0,w,c
  6843  002C84  101F               	iorwf	(___lodiv@divisor+4)^0,w,c
  6844  002C86  1020               	iorwf	(___lodiv@divisor+5)^0,w,c
  6845  002C88  1021               	iorwf	(___lodiv@divisor+6)^0,w,c
  6846  002C8A  1022               	iorwf	(___lodiv@divisor+7)^0,w,c
  6847  002C8C  B4D8               	btfsc	status,2,c
  6848  002C8E  EF4B  F016         	goto	u4931
  6849  002C92  EF4D  F016         	goto	u4930
  6850  002C96                     u4931:
  6851  002C96  EF9F  F016         	goto	l1097
  6852  002C9A                     u4930:
  6853  002C9A  0E01               	movlw	1
  6854  002C9C  6E2B               	movwf	___lodiv@counter^0,c
  6855  002C9E  EF5B  F016         	goto	l4969
  6856  002CA2                     l4967:
  6857  002CA2  90D8               	bcf	status,0,c
  6858  002CA4  361B               	rlcf	___lodiv@divisor^0,f,c
  6859  002CA6  361C               	rlcf	(___lodiv@divisor+1)^0,f,c
  6860  002CA8  361D               	rlcf	(___lodiv@divisor+2)^0,f,c
  6861  002CAA  361E               	rlcf	(___lodiv@divisor+3)^0,f,c
  6862  002CAC  361F               	rlcf	(___lodiv@divisor+4)^0,f,c
  6863  002CAE  3620               	rlcf	(___lodiv@divisor+5)^0,f,c
  6864  002CB0  3621               	rlcf	(___lodiv@divisor+6)^0,f,c
  6865  002CB2  3622               	rlcf	(___lodiv@divisor+7)^0,f,c
  6866  002CB4  2A2B               	incf	___lodiv@counter^0,f,c
  6867  002CB6                     l4969:
  6868  002CB6  AE22               	btfss	(___lodiv@divisor+7)^0,7,c
  6869  002CB8  EF60  F016         	goto	u4941
  6870  002CBC  EF62  F016         	goto	u4940
  6871  002CC0                     u4941:
  6872  002CC0  EF51  F016         	goto	l4967
  6873  002CC4                     u4940:
  6874  002CC4                     l4971:
  6875  002CC4  90D8               	bcf	status,0,c
  6876  002CC6  3623               	rlcf	___lodiv@quotient^0,f,c
  6877  002CC8  3624               	rlcf	(___lodiv@quotient+1)^0,f,c
  6878  002CCA  3625               	rlcf	(___lodiv@quotient+2)^0,f,c
  6879  002CCC  3626               	rlcf	(___lodiv@quotient+3)^0,f,c
  6880  002CCE  3627               	rlcf	(___lodiv@quotient+4)^0,f,c
  6881  002CD0  3628               	rlcf	(___lodiv@quotient+5)^0,f,c
  6882  002CD2  3629               	rlcf	(___lodiv@quotient+6)^0,f,c
  6883  002CD4  362A               	rlcf	(___lodiv@quotient+7)^0,f,c
  6884  002CD6  501B               	movf	___lodiv@divisor^0,w,c
  6885  002CD8  5C13               	subwf	___lodiv@dividend^0,w,c
  6886  002CDA  501C               	movf	(___lodiv@divisor+1)^0,w,c
  6887  002CDC  5814               	subwfb	(___lodiv@dividend+1)^0,w,c
  6888  002CDE  501D               	movf	(___lodiv@divisor+2)^0,w,c
  6889  002CE0  5815               	subwfb	(___lodiv@dividend+2)^0,w,c
  6890  002CE2  501E               	movf	(___lodiv@divisor+3)^0,w,c
  6891  002CE4  5816               	subwfb	(___lodiv@dividend+3)^0,w,c
  6892  002CE6  501F               	movf	(___lodiv@divisor+4)^0,w,c
  6893  002CE8  5817               	subwfb	(___lodiv@dividend+4)^0,w,c
  6894  002CEA  5020               	movf	(___lodiv@divisor+5)^0,w,c
  6895  002CEC  5818               	subwfb	(___lodiv@dividend+5)^0,w,c
  6896  002CEE  5021               	movf	(___lodiv@divisor+6)^0,w,c
  6897  002CF0  5819               	subwfb	(___lodiv@dividend+6)^0,w,c
  6898  002CF2  5022               	movf	(___lodiv@divisor+7)^0,w,c
  6899  002CF4  581A               	subwfb	(___lodiv@dividend+7)^0,w,c
  6900  002CF6  A0D8               	btfss	status,0,c
  6901  002CF8  EF80  F016         	goto	u4951
  6902  002CFC  EF82  F016         	goto	u4950
  6903  002D00                     u4951:
  6904  002D00  EF93  F016         	goto	l4979
  6905  002D04                     u4950:
  6906  002D04  501B               	movf	___lodiv@divisor^0,w,c
  6907  002D06  5E13               	subwf	___lodiv@dividend^0,f,c
  6908  002D08  501C               	movf	(___lodiv@divisor+1)^0,w,c
  6909  002D0A  5A14               	subwfb	(___lodiv@dividend+1)^0,f,c
  6910  002D0C  501D               	movf	(___lodiv@divisor+2)^0,w,c
  6911  002D0E  5A15               	subwfb	(___lodiv@dividend+2)^0,f,c
  6912  002D10  501E               	movf	(___lodiv@divisor+3)^0,w,c
  6913  002D12  5A16               	subwfb	(___lodiv@dividend+3)^0,f,c
  6914  002D14  501F               	movf	(___lodiv@divisor+4)^0,w,c
  6915  002D16  5A17               	subwfb	(___lodiv@dividend+4)^0,f,c
  6916  002D18  5020               	movf	(___lodiv@divisor+5)^0,w,c
  6917  002D1A  5A18               	subwfb	(___lodiv@dividend+5)^0,f,c
  6918  002D1C  5021               	movf	(___lodiv@divisor+6)^0,w,c
  6919  002D1E  5A19               	subwfb	(___lodiv@dividend+6)^0,f,c
  6920  002D20  5022               	movf	(___lodiv@divisor+7)^0,w,c
  6921  002D22  5A1A               	subwfb	(___lodiv@dividend+7)^0,f,c
  6922  002D24  8023               	bsf	___lodiv@quotient^0,0,c
  6923  002D26                     l4979:
  6924  002D26  90D8               	bcf	status,0,c
  6925  002D28  3222               	rrcf	(___lodiv@divisor+7)^0,f,c
  6926  002D2A  3221               	rrcf	(___lodiv@divisor+6)^0,f,c
  6927  002D2C  3220               	rrcf	(___lodiv@divisor+5)^0,f,c
  6928  002D2E  321F               	rrcf	(___lodiv@divisor+4)^0,f,c
  6929  002D30  321E               	rrcf	(___lodiv@divisor+3)^0,f,c
  6930  002D32  321D               	rrcf	(___lodiv@divisor+2)^0,f,c
  6931  002D34  321C               	rrcf	(___lodiv@divisor+1)^0,f,c
  6932  002D36  321B               	rrcf	___lodiv@divisor^0,f,c
  6933  002D38  2E2B               	decfsz	___lodiv@counter^0,f,c
  6934  002D3A  EF62  F016         	goto	l4971
  6935  002D3E                     l1097:
  6936  002D3E  C023  F013         	movff	___lodiv@quotient,?___lodiv
  6937  002D42  C024  F014         	movff	___lodiv@quotient+1,?___lodiv+1
  6938  002D46  C025  F015         	movff	___lodiv@quotient+2,?___lodiv+2
  6939  002D4A  C026  F016         	movff	___lodiv@quotient+3,?___lodiv+3
  6940  002D4E  C027  F017         	movff	___lodiv@quotient+4,?___lodiv+4
  6941  002D52  C028  F018         	movff	___lodiv@quotient+5,?___lodiv+5
  6942  002D56  C029  F019         	movff	___lodiv@quotient+6,?___lodiv+6
  6943  002D5A  C02A  F01A         	movff	___lodiv@quotient+7,?___lodiv+7
  6944  002D5E  0012               	return		;funcret
  6945  002D60                     __end_of___lodiv:
  6946                           	opt callstack 0
  6947                           
  6948 ;; *************** function _strncmp *****************
  6949 ;; Defined at:
  6950 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  _l              2   18[COMRAM] PTR const unsigned char 
  6953 ;;		 -> STR_1(17), 
  6954 ;;  _r              2   20[COMRAM] PTR const unsigned char 
  6955 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  6956 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  6957 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  6958 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  6959 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  6960 ;;		 -> STR_6(4), 
  6961 ;;  n               2   22[COMRAM] unsigned int 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  r               2   27[COMRAM] PTR const unsigned char 
  6964 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  6965 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  6966 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  6967 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  6968 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  6969 ;;		 -> STR_6(4), 
  6970 ;;  l               2   25[COMRAM] PTR const unsigned char 
  6971 ;;		 -> STR_1(17), 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  2   18[COMRAM] int 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6981 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6982 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;Total ram usage:       11 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    5
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_vfpfcnvrt
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text13
  6996  002D60                     __ptext13:
  6997                           	opt callstack 0
  6998  002D60                     _strncmp:
  6999                           	opt callstack 21
  7000  002D60  C013  F01A         	movff	strncmp@_l,strncmp@l
  7001  002D64  C014  F01B         	movff	strncmp@_l+1,strncmp@l+1
  7002  002D68  C015  F01C         	movff	strncmp@_r,strncmp@r
  7003  002D6C  C016  F01D         	movff	strncmp@_r+1,strncmp@r+1
  7004  002D70  0617               	decf	strncmp@n^0,f,c
  7005  002D72  A0D8               	btfss	status,0,c
  7006  002D74  0618               	decf	(strncmp@n+1)^0,f,c
  7007  002D76  2817               	incf	strncmp@n^0,w,c
  7008  002D78  E106               	bnz	u5681
  7009  002D7A  2818               	incf	(strncmp@n+1)^0,w,c
  7010  002D7C  A4D8               	btfss	status,2,c
  7011  002D7E  EFC3  F016         	goto	u5681
  7012  002D82  EFC5  F016         	goto	u5680
  7013  002D86                     u5681:
  7014  002D86  EFD2  F016         	goto	l5337
  7015  002D8A                     u5680:
  7016  002D8A  0E00               	movlw	0
  7017  002D8C  6E14               	movwf	(?_strncmp+1)^0,c
  7018  002D8E  0E00               	movlw	0
  7019  002D90  6E13               	movwf	?_strncmp^0,c
  7020  002D92  EF24  F017         	goto	l1434
  7021  002D96                     l5335:
  7022  002D96  4A1A               	infsnz	strncmp@l^0,f,c
  7023  002D98  2A1B               	incf	(strncmp@l+1)^0,f,c
  7024  002D9A  4A1C               	infsnz	strncmp@r^0,f,c
  7025  002D9C  2A1D               	incf	(strncmp@r+1)^0,f,c
  7026  002D9E  0617               	decf	strncmp@n^0,f,c
  7027  002DA0  A0D8               	btfss	status,0,c
  7028  002DA2  0618               	decf	(strncmp@n+1)^0,f,c
  7029  002DA4                     l5337:
  7030  002DA4  C01A  FFF6         	movff	strncmp@l,tblptrl
  7031  002DA8  C01B  FFF7         	movff	strncmp@l+1,tblptrh
  7032  002DAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7033  002DAC  6AF8               	clrf	tblptru,c
  7034  002DAE                     	endif
  7035  002DAE                     	if	0	;tblptru may be non-zero
  7036  002DAE                     	endif
  7037  002DAE  0008               	tblrd		*
  7038  002DB0  50F5               	movf	tablat,w,c
  7039  002DB2  0900               	iorlw	0
  7040  002DB4  B4D8               	btfsc	status,2,c
  7041  002DB6  EFDF  F016         	goto	u5691
  7042  002DBA  EFE1  F016         	goto	u5690
  7043  002DBE                     u5691:
  7044  002DBE  EF10  F017         	goto	l5345
  7045  002DC2                     u5690:
  7046  002DC2  C01C  FFF6         	movff	strncmp@r,tblptrl
  7047  002DC6  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  7048  002DCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7049  002DCA  6AF8               	clrf	tblptru,c
  7050  002DCC                     	endif
  7051  002DCC                     	if	0	;tblptru may be non-zero
  7052  002DCC                     	endif
  7053  002DCC  0008               	tblrd		*
  7054  002DCE  50F5               	movf	tablat,w,c
  7055  002DD0  0900               	iorlw	0
  7056  002DD2  B4D8               	btfsc	status,2,c
  7057  002DD4  EFEE  F016         	goto	u5701
  7058  002DD8  EFF0  F016         	goto	u5700
  7059  002DDC                     u5701:
  7060  002DDC  EF10  F017         	goto	l5345
  7061  002DE0                     u5700:
  7062  002DE0  5017               	movf	strncmp@n^0,w,c
  7063  002DE2  1018               	iorwf	(strncmp@n+1)^0,w,c
  7064  002DE4  B4D8               	btfsc	status,2,c
  7065  002DE6  EFF7  F016         	goto	u5711
  7066  002DEA  EFF9  F016         	goto	u5710
  7067  002DEE                     u5711:
  7068  002DEE  EF10  F017         	goto	l5345
  7069  002DF2                     u5710:
  7070  002DF2  C01A  FFF6         	movff	strncmp@l,tblptrl
  7071  002DF6  C01B  FFF7         	movff	strncmp@l+1,tblptrh
  7072  002DFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7073  002DFA  6AF8               	clrf	tblptru,c
  7074  002DFC                     	endif
  7075  002DFC                     	if	0	;tblptru may be non-zero
  7076  002DFC                     	endif
  7077  002DFC  0008               	tblrd		*
  7078  002DFE  CFF5 F019          	movff	tablat,??_strncmp
  7079  002E02  C01C  FFF6         	movff	strncmp@r,tblptrl
  7080  002E06  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  7081  002E0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7082  002E0A  6AF8               	clrf	tblptru,c
  7083  002E0C                     	endif
  7084  002E0C                     	if	0	;tblptru may be non-zero
  7085  002E0C                     	endif
  7086  002E0C  0008               	tblrd		*
  7087  002E0E  50F5               	movf	tablat,w,c
  7088  002E10  1819               	xorwf	??_strncmp^0,w,c
  7089  002E12  B4D8               	btfsc	status,2,c
  7090  002E14  EF0E  F017         	goto	u5721
  7091  002E18  EF10  F017         	goto	u5720
  7092  002E1C                     u5721:
  7093  002E1C  EFCB  F016         	goto	l5335
  7094  002E20                     u5720:
  7095  002E20                     l5345:
  7096  002E20  C01A  FFF6         	movff	strncmp@l,tblptrl
  7097  002E24  C01B  FFF7         	movff	strncmp@l+1,tblptrh
  7098  002E28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7099  002E28  6AF8               	clrf	tblptru,c
  7100  002E2A                     	endif
  7101  002E2A                     	if	0	;tblptru may be non-zero
  7102  002E2A                     	endif
  7103  002E2A  0008               	tblrd		*
  7104  002E2C  CFF5 F019          	movff	tablat,??_strncmp
  7105  002E30  C01C  FFF6         	movff	strncmp@r,tblptrl
  7106  002E34  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  7107  002E38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7108  002E38  6AF8               	clrf	tblptru,c
  7109  002E3A                     	endif
  7110  002E3A                     	if	0	;tblptru may be non-zero
  7111  002E3A                     	endif
  7112  002E3A  0008               	tblrd		*
  7113  002E3C  50F5               	movf	tablat,w,c
  7114  002E3E  5C19               	subwf	??_strncmp^0,w,c
  7115  002E40  6E13               	movwf	?_strncmp^0,c
  7116  002E42  6A14               	clrf	(?_strncmp+1)^0,c
  7117  002E44  A0D8               	btfss	status,0,c
  7118  002E46  0614               	decf	(?_strncmp+1)^0,f,c
  7119  002E48                     l1434:
  7120  002E48  0012               	return		;funcret
  7121  002E4A                     __end_of_strncmp:
  7122                           	opt callstack 0
  7123                           
  7124 ;; *************** function _stoa *****************
  7125 ;; Defined at:
  7126 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7129 ;;		 -> vsnprintf@f(6), 
  7130 ;;  s               2   29[COMRAM] PTR unsigned char 
  7131 ;;		 -> ?_snprintf(2), codigo_digital(2), 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  nuls            7   32[COMRAM] unsigned char [7]
  7134 ;;  l               2   47[COMRAM] int 
  7135 ;;  p               2   45[COMRAM] int 
  7136 ;;  cp              2   43[COMRAM] PTR unsigned char 
  7137 ;;		 -> ?_snprintf(2), stoa@nuls(7), codigo_digital(2), 
  7138 ;;  w               2   41[COMRAM] int 
  7139 ;;  i               2   39[COMRAM] int 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  2   27[COMRAM] int 
  7142 ;; Registers used:
  7143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7150 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7152 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;Total ram usage:       22 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    7
  7156 ;; This function calls:
  7157 ;;		_fputc
  7158 ;;		_strlen
  7159 ;; This function is called by:
  7160 ;;		_vfpfcnvrt
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text14
  7165  00235A                     __ptext14:
  7166                           	opt callstack 0
  7167  00235A                     _stoa:
  7168                           	opt callstack 19
  7169  00235A                     
  7170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7171  00235A  EE20  F0EB         	lfsr	2,stoa@F1152
  7172  00235E  EE10  F021         	lfsr	1,stoa@nuls
  7173  002362  0E06               	movlw	6
  7174  002364                     u5281:
  7175  002364  CFDB FFE3          	movff	plusw2,plusw1
  7176  002368  06E8               	decf	wreg,f,c
  7177  00236A  E2FC               	bc	u5281
  7178  00236C                     
  7179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7180  00236C  C01E  F02C         	movff	stoa@s,stoa@cp
  7181  002370  C01F  F02D         	movff	stoa@s+1,stoa@cp+1
  7182  002374                     
  7183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7184  002374  502C               	movf	stoa@cp^0,w,c
  7185  002376  102D               	iorwf	(stoa@cp+1)^0,w,c
  7186  002378  A4D8               	btfss	status,2,c
  7187  00237A  EFC1  F011         	goto	u5291
  7188  00237E  EFC3  F011         	goto	u5290
  7189  002382                     u5291:
  7190  002382  EFC7  F011         	goto	l5151
  7191  002386                     u5290:
  7192  002386                     
  7193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7194  002386  0E21               	movlw	low stoa@nuls
  7195  002388  6E2C               	movwf	stoa@cp^0,c
  7196  00238A  0E00               	movlw	high stoa@nuls
  7197  00238C  6E2D               	movwf	(stoa@cp+1)^0,c
  7198  00238E                     l5151:
  7199                           
  7200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7201  00238E  C02C  F013         	movff	stoa@cp,strlen@s
  7202  002392  C02D  F014         	movff	stoa@cp+1,strlen@s+1
  7203  002396  ECAA  F01B         	call	_strlen	;wreg free
  7204  00239A  C013  F030         	movff	?_strlen,stoa@l
  7205  00239E  C014  F031         	movff	?_strlen+1,stoa@l+1
  7206  0023A2                     
  7207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7208  0023A2  C041  F02E         	movff	_prec,stoa@p
  7209  0023A6  C042  F02F         	movff	_prec+1,stoa@p+1
  7210  0023AA                     
  7211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7212  0023AA  BE2F               	btfsc	(stoa@p+1)^0,7,c
  7213  0023AC  EFDA  F011         	goto	u5301
  7214  0023B0  EFDC  F011         	goto	u5300
  7215  0023B4                     u5301:
  7216  0023B4  EFF1  F011         	goto	l515
  7217  0023B8                     u5300:
  7218  0023B8  5030               	movf	stoa@l^0,w,c
  7219  0023BA  5C2E               	subwf	stoa@p^0,w,c
  7220  0023BC  502F               	movf	(stoa@p+1)^0,w,c
  7221  0023BE  0A80               	xorlw	128
  7222  0023C0  6E20               	movwf	??_stoa^0,c
  7223  0023C2  5031               	movf	(stoa@l+1)^0,w,c
  7224  0023C4  0A80               	xorlw	128
  7225  0023C6  5820               	subwfb	??_stoa^0,w,c
  7226  0023C8  A0D8               	btfss	status,0,c
  7227  0023CA  EFE9  F011         	goto	u5311
  7228  0023CE  EFEB  F011         	goto	u5310
  7229  0023D2                     u5311:
  7230  0023D2  EFED  F011         	goto	l513
  7231  0023D6                     u5310:
  7232  0023D6  EFF1  F011         	goto	l515
  7233  0023DA                     l513:
  7234  0023DA  C02E  F030         	movff	stoa@p,stoa@l
  7235  0023DE  C02F  F031         	movff	stoa@p+1,stoa@l+1
  7236  0023E2                     l515:
  7237                           
  7238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7239  0023E2  C030  F02E         	movff	stoa@l,stoa@p
  7240  0023E6  C031  F02F         	movff	stoa@l+1,stoa@p+1
  7241                           
  7242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7243  0023EA  C03F  F02A         	movff	_width,stoa@w
  7244  0023EE  C040  F02B         	movff	_width+1,stoa@w+1
  7245                           
  7246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7247  0023F2  B043               	btfsc	_flags^0,0,c
  7248  0023F4  EFFE  F011         	goto	u5321
  7249  0023F8  EF00  F012         	goto	u5320
  7250  0023FC                     u5321:
  7251  0023FC  EF1D  F012         	goto	l5167
  7252  002400                     u5320:
  7253  002400  EF0E  F012         	goto	l5165
  7254  002404                     l5161:
  7255                           
  7256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7257  002404  0E00               	movlw	0
  7258  002406  6E14               	movwf	(fputc@c+1)^0,c
  7259  002408  0E20               	movlw	32
  7260  00240A  6E13               	movwf	fputc@c^0,c
  7261  00240C  C01C  F015         	movff	stoa@fp,fputc@fp
  7262  002410  C01D  F016         	movff	stoa@fp+1,fputc@fp+1
  7263  002414  EC8D  F017         	call	_fputc	;wreg free
  7264  002418                     
  7265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7266  002418  4A30               	infsnz	stoa@l^0,f,c
  7267  00241A  2A31               	incf	(stoa@l+1)^0,f,c
  7268  00241C                     l5165:
  7269                           
  7270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7271  00241C  502A               	movf	stoa@w^0,w,c
  7272  00241E  5C30               	subwf	stoa@l^0,w,c
  7273  002420  5031               	movf	(stoa@l+1)^0,w,c
  7274  002422  0A80               	xorlw	128
  7275  002424  6E20               	movwf	??_stoa^0,c
  7276  002426  502B               	movf	(stoa@w+1)^0,w,c
  7277  002428  0A80               	xorlw	128
  7278  00242A  5820               	subwfb	??_stoa^0,w,c
  7279  00242C  A0D8               	btfss	status,0,c
  7280  00242E  EF1B  F012         	goto	u5331
  7281  002432  EF1D  F012         	goto	u5330
  7282  002436                     u5331:
  7283  002436  EF02  F012         	goto	l5161
  7284  00243A                     u5330:
  7285  00243A                     l5167:
  7286                           
  7287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7288  00243A  0E00               	movlw	0
  7289  00243C  6E29               	movwf	(stoa@i+1)^0,c
  7290  00243E  0E00               	movlw	0
  7291  002440  6E28               	movwf	stoa@i^0,c
  7292                           
  7293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7294  002442  EF36  F012         	goto	l5175
  7295  002446                     l5169:
  7296                           
  7297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7298  002446  C02C  FFD9         	movff	stoa@cp,fsr2l
  7299  00244A  C02D  FFDA         	movff	stoa@cp+1,fsr2h
  7300  00244E  50DF               	movf	indf2,w,c
  7301  002450  6E20               	movwf	??_stoa^0,c
  7302  002452  5020               	movf	??_stoa^0,w,c
  7303  002454  6E13               	movwf	fputc@c^0,c
  7304  002456  6A14               	clrf	(fputc@c+1)^0,c
  7305  002458  C01C  F015         	movff	stoa@fp,fputc@fp
  7306  00245C  C01D  F016         	movff	stoa@fp+1,fputc@fp+1
  7307  002460  EC8D  F017         	call	_fputc	;wreg free
  7308  002464                     
  7309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7310  002464  4A2C               	infsnz	stoa@cp^0,f,c
  7311  002466  2A2D               	incf	(stoa@cp+1)^0,f,c
  7312  002468                     
  7313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7314  002468  4A28               	infsnz	stoa@i^0,f,c
  7315  00246A  2A29               	incf	(stoa@i+1)^0,f,c
  7316  00246C                     l5175:
  7317                           
  7318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7319  00246C  502E               	movf	stoa@p^0,w,c
  7320  00246E  5C28               	subwf	stoa@i^0,w,c
  7321  002470  5029               	movf	(stoa@i+1)^0,w,c
  7322  002472  0A80               	xorlw	128
  7323  002474  6E20               	movwf	??_stoa^0,c
  7324  002476  502F               	movf	(stoa@p+1)^0,w,c
  7325  002478  0A80               	xorlw	128
  7326  00247A  5820               	subwfb	??_stoa^0,w,c
  7327  00247C  A0D8               	btfss	status,0,c
  7328  00247E  EF43  F012         	goto	u5341
  7329  002482  EF45  F012         	goto	u5340
  7330  002486                     u5341:
  7331  002486  EF23  F012         	goto	l5169
  7332  00248A                     u5340:
  7333  00248A                     
  7334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7335  00248A  A043               	btfss	_flags^0,0,c
  7336  00248C  EF4A  F012         	goto	u5351
  7337  002490  EF4C  F012         	goto	u5350
  7338  002494                     u5351:
  7339  002494  EF69  F012         	goto	l525
  7340  002498                     u5350:
  7341  002498  EF5A  F012         	goto	l5183
  7342  00249C                     l5179:
  7343                           
  7344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7345  00249C  0E00               	movlw	0
  7346  00249E  6E14               	movwf	(fputc@c+1)^0,c
  7347  0024A0  0E20               	movlw	32
  7348  0024A2  6E13               	movwf	fputc@c^0,c
  7349  0024A4  C01C  F015         	movff	stoa@fp,fputc@fp
  7350  0024A8  C01D  F016         	movff	stoa@fp+1,fputc@fp+1
  7351  0024AC  EC8D  F017         	call	_fputc	;wreg free
  7352  0024B0                     
  7353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7354  0024B0  4A30               	infsnz	stoa@l^0,f,c
  7355  0024B2  2A31               	incf	(stoa@l+1)^0,f,c
  7356  0024B4                     l5183:
  7357                           
  7358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7359  0024B4  502A               	movf	stoa@w^0,w,c
  7360  0024B6  5C30               	subwf	stoa@l^0,w,c
  7361  0024B8  5031               	movf	(stoa@l+1)^0,w,c
  7362  0024BA  0A80               	xorlw	128
  7363  0024BC  6E20               	movwf	??_stoa^0,c
  7364  0024BE  502B               	movf	(stoa@w+1)^0,w,c
  7365  0024C0  0A80               	xorlw	128
  7366  0024C2  5820               	subwfb	??_stoa^0,w,c
  7367  0024C4  A0D8               	btfss	status,0,c
  7368  0024C6  EF67  F012         	goto	u5361
  7369  0024CA  EF69  F012         	goto	u5360
  7370  0024CE                     u5361:
  7371  0024CE  EF4E  F012         	goto	l5179
  7372  0024D2                     u5360:
  7373  0024D2                     l525:
  7374                           
  7375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7376  0024D2  C030  F01C         	movff	stoa@l,?_stoa
  7377  0024D6  C031  F01D         	movff	stoa@l+1,?_stoa+1
  7378  0024DA  0012               	return		;funcret
  7379  0024DC                     __end_of_stoa:
  7380                           	opt callstack 0
  7381                           
  7382 ;; *************** function _otoa *****************
  7383 ;; Defined at:
  7384 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  7387 ;;		 -> vsnprintf@f(6), 
  7388 ;;  d               8   47[COMRAM] unsigned long long 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  n               8   14[BANK0 ] unsigned long long 
  7391 ;;  i               2   22[BANK0 ] int 
  7392 ;;  w               2   12[BANK0 ] int 
  7393 ;;  t               2   10[BANK0 ] int 
  7394 ;;  p               2    8[BANK0 ] int 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  2   45[COMRAM] int 
  7397 ;; Registers used:
  7398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7404 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7405 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7406 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7407 ;;      Totals:        10      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;Total ram usage:       34 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    9
  7411 ;; This function calls:
  7412 ;;		_pad
  7413 ;; This function is called by:
  7414 ;;		_vfpfcnvrt
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text15
  7419  001E4C                     __ptext15:
  7420                           	opt callstack 0
  7421  001E4C                     _otoa:
  7422                           	opt callstack 17
  7423  001E4C                     
  7424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7425  001E4C  BE42               	btfsc	(_prec+1)^0,7,c
  7426  001E4E  EF2B  F00F         	goto	u5181
  7427  001E52  EF2D  F00F         	goto	u5180
  7428  001E56                     u5181:
  7429  001E56  EF2E  F00F         	goto	l5099
  7430  001E5A                     u5180:
  7431  001E5A                     
  7432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7433  001E5A  9243               	bcf	_flags^0,1,c
  7434  001E5C                     l5099:
  7435                           
  7436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7437  001E5C  BE42               	btfsc	(_prec+1)^0,7,c
  7438  001E5E  EF3B  F00F         	goto	u5190
  7439  001E62  5042               	movf	(_prec+1)^0,w,c
  7440  001E64  E106               	bnz	u5191
  7441  001E66  0441               	decf	_prec^0,w,c
  7442  001E68  B0D8               	btfsc	status,0,c
  7443  001E6A  EF39  F00F         	goto	u5191
  7444  001E6E  EF3B  F00F         	goto	u5190
  7445  001E72                     u5191:
  7446  001E72  EF42  F00F         	goto	l495
  7447  001E76                     u5190:
  7448  001E76  0E00               	movlw	0
  7449  001E78  0100               	movlb	0	; () banked
  7450  001E7A  6F69               	movwf	(otoa@p+1)& (0+255),b
  7451  001E7C  0E01               	movlw	1
  7452  001E7E  6F68               	movwf	otoa@p& (0+255),b
  7453  001E80  EF46  F00F         	goto	l497
  7454  001E84                     l495:
  7455  001E84  C041  F068         	movff	_prec,otoa@p
  7456  001E88  C042  F069         	movff	_prec+1,otoa@p+1
  7457  001E8C                     l497:
  7458                           
  7459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7460  001E8C  C03F  F06C         	movff	_width,otoa@w
  7461  001E90  C040  F06D         	movff	_width+1,otoa@w+1
  7462                           
  7463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7464  001E94  C030  F06E         	movff	otoa@d,otoa@n
  7465  001E98  C031  F06F         	movff	otoa@d+1,otoa@n+1
  7466  001E9C  C032  F070         	movff	otoa@d+2,otoa@n+2
  7467  001EA0  C033  F071         	movff	otoa@d+3,otoa@n+3
  7468  001EA4  C034  F072         	movff	otoa@d+4,otoa@n+4
  7469  001EA8  C035  F073         	movff	otoa@d+5,otoa@n+5
  7470  001EAC  C036  F074         	movff	otoa@d+6,otoa@n+6
  7471  001EB0  C037  F075         	movff	otoa@d+7,otoa@n+7
  7472  001EB4                     
  7473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7474  001EB4  0E00               	movlw	0
  7475  001EB6  0100               	movlb	0	; () banked
  7476  001EB8  6F77               	movwf	(otoa@i+1)& (0+255),b
  7477  001EBA  0E1F               	movlw	31
  7478  001EBC  6F76               	movwf	otoa@i& (0+255),b
  7479  001EBE                     
  7480                           ; BSR set to: 0
  7481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7482  001EBE  0E00               	movlw	0
  7483  001EC0  6FEA               	movwf	(_dbuf+31)& (0+255),b
  7484  001EC2                     
  7485                           ; BSR set to: 0
  7486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7487  001EC2  0E00               	movlw	0
  7488  001EC4  6F6B               	movwf	(otoa@t+1)& (0+255),b
  7489  001EC6  0E00               	movlw	0
  7490  001EC8  6F6A               	movwf	otoa@t& (0+255),b
  7491                           
  7492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7493  001ECA  EFAC  F00F         	goto	l5121
  7494  001ECE                     l5109:
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7498  001ECE  0776               	decf	otoa@i& (0+255),f,b
  7499  001ED0  A0D8               	btfss	status,0,c
  7500  001ED2  0777               	decf	(otoa@i+1)& (0+255),f,b
  7501  001ED4                     
  7502                           ; BSR set to: 0
  7503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7504  001ED4  0E07               	movlw	7
  7505  001ED6  156E               	andwf	otoa@n& (0+255),w,b
  7506  001ED8  6F6A               	movwf	otoa@t& (0+255),b
  7507  001EDA  6B6B               	clrf	(otoa@t+1)& (0+255),b
  7508  001EDC                     
  7509                           ; BSR set to: 0
  7510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7511  001EDC  0ECB               	movlw	low _dbuf
  7512  001EDE  2576               	addwf	otoa@i& (0+255),w,b
  7513  001EE0  6ED9               	movwf	fsr2l,c
  7514  001EE2  0E00               	movlw	high _dbuf
  7515  001EE4  2177               	addwfc	(otoa@i+1)& (0+255),w,b
  7516  001EE6  6EDA               	movwf	fsr2h,c
  7517  001EE8  516A               	movf	otoa@t& (0+255),w,b
  7518  001EEA  0F30               	addlw	48
  7519  001EEC  6EDF               	movwf	indf2,c
  7520  001EEE                     
  7521                           ; BSR set to: 0
  7522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7523  001EEE  0768               	decf	otoa@p& (0+255),f,b
  7524  001EF0  A0D8               	btfss	status,0,c
  7525  001EF2  0769               	decf	(otoa@p+1)& (0+255),f,b
  7526  001EF4                     
  7527                           ; BSR set to: 0
  7528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7529  001EF4  076C               	decf	otoa@w& (0+255),f,b
  7530  001EF6  A0D8               	btfss	status,0,c
  7531  001EF8  076D               	decf	(otoa@w+1)& (0+255),f,b
  7532  001EFA                     
  7533                           ; BSR set to: 0
  7534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7535  001EFA  C06E  F060         	movff	otoa@n,??_otoa
  7536  001EFE  C06F  F061         	movff	otoa@n+1,??_otoa+1
  7537  001F02  C070  F062         	movff	otoa@n+2,??_otoa+2
  7538  001F06  C071  F063         	movff	otoa@n+3,??_otoa+3
  7539  001F0A  C072  F064         	movff	otoa@n+4,??_otoa+4
  7540  001F0E  C073  F065         	movff	otoa@n+5,??_otoa+5
  7541  001F12  C074  F066         	movff	otoa@n+6,??_otoa+6
  7542  001F16  C075  F067         	movff	otoa@n+7,??_otoa+7
  7543  001F1A  0E04               	movlw	4
  7544  001F1C  EF99  F00F         	goto	u5200
  7545  001F20                     u5205:
  7546  001F20  90D8               	bcf	status,0,c
  7547  001F22  3367               	rrcf	(??_otoa+7)& (0+255),f,b
  7548  001F24  3366               	rrcf	(??_otoa+6)& (0+255),f,b
  7549  001F26  3365               	rrcf	(??_otoa+5)& (0+255),f,b
  7550  001F28  3364               	rrcf	(??_otoa+4)& (0+255),f,b
  7551  001F2A  3363               	rrcf	(??_otoa+3)& (0+255),f,b
  7552  001F2C  3362               	rrcf	(??_otoa+2)& (0+255),f,b
  7553  001F2E  3361               	rrcf	(??_otoa+1)& (0+255),f,b
  7554  001F30  3360               	rrcf	??_otoa& (0+255),f,b
  7555  001F32                     u5200:
  7556  001F32  2EE8               	decfsz	wreg,f,c
  7557  001F34  EF90  F00F         	goto	u5205
  7558  001F38  C060  F06E         	movff	??_otoa,otoa@n
  7559  001F3C  C061  F06F         	movff	??_otoa+1,otoa@n+1
  7560  001F40  C062  F070         	movff	??_otoa+2,otoa@n+2
  7561  001F44  C063  F071         	movff	??_otoa+3,otoa@n+3
  7562  001F48  C064  F072         	movff	??_otoa+4,otoa@n+4
  7563  001F4C  C065  F073         	movff	??_otoa+5,otoa@n+5
  7564  001F50  C066  F074         	movff	??_otoa+6,otoa@n+6
  7565  001F54  C067  F075         	movff	??_otoa+7,otoa@n+7
  7566  001F58                     l5121:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7570  001F58  BF77               	btfsc	(otoa@i+1)& (0+255),7,b
  7571  001F5A  EFB7  F00F         	goto	u5211
  7572  001F5E  5177               	movf	(otoa@i+1)& (0+255),w,b
  7573  001F60  E108               	bnz	u5210
  7574  001F62  0576               	decf	otoa@i& (0+255),w,b
  7575  001F64  A0D8               	btfss	status,0,c
  7576  001F66  EFB7  F00F         	goto	u5211
  7577  001F6A  EFB9  F00F         	goto	u5210
  7578  001F6E                     u5211:
  7579  001F6E  EFE9  F00F         	goto	l504
  7580  001F72                     u5210:
  7581  001F72                     
  7582                           ; BSR set to: 0
  7583  001F72  516E               	movf	otoa@n& (0+255),w,b
  7584  001F74  116F               	iorwf	(otoa@n+1)& (0+255),w,b
  7585  001F76  1170               	iorwf	(otoa@n+2)& (0+255),w,b
  7586  001F78  1171               	iorwf	(otoa@n+3)& (0+255),w,b
  7587  001F7A  1172               	iorwf	(otoa@n+4)& (0+255),w,b
  7588  001F7C  1173               	iorwf	(otoa@n+5)& (0+255),w,b
  7589  001F7E  1174               	iorwf	(otoa@n+6)& (0+255),w,b
  7590  001F80  1175               	iorwf	(otoa@n+7)& (0+255),w,b
  7591  001F82  A4D8               	btfss	status,2,c
  7592  001F84  EFC6  F00F         	goto	u5221
  7593  001F88  EFC8  F00F         	goto	u5220
  7594  001F8C                     u5221:
  7595  001F8C  EF67  F00F         	goto	l5109
  7596  001F90                     u5220:
  7597  001F90                     
  7598                           ; BSR set to: 0
  7599  001F90  BF69               	btfsc	(otoa@p+1)& (0+255),7,b
  7600  001F92  EFD5  F00F         	goto	u5230
  7601  001F96  5169               	movf	(otoa@p+1)& (0+255),w,b
  7602  001F98  E106               	bnz	u5231
  7603  001F9A  0568               	decf	otoa@p& (0+255),w,b
  7604  001F9C  B0D8               	btfsc	status,0,c
  7605  001F9E  EFD3  F00F         	goto	u5231
  7606  001FA2  EFD5  F00F         	goto	u5230
  7607  001FA6                     u5231:
  7608  001FA6  EF67  F00F         	goto	l5109
  7609  001FAA                     u5230:
  7610  001FAA                     
  7611                           ; BSR set to: 0
  7612  001FAA  BF6D               	btfsc	(otoa@w+1)& (0+255),7,b
  7613  001FAC  EFE0  F00F         	goto	u5241
  7614  001FB0  516D               	movf	(otoa@w+1)& (0+255),w,b
  7615  001FB2  E108               	bnz	u5240
  7616  001FB4  056C               	decf	otoa@w& (0+255),w,b
  7617  001FB6  A0D8               	btfss	status,0,c
  7618  001FB8  EFE0  F00F         	goto	u5241
  7619  001FBC  EFE2  F00F         	goto	u5240
  7620  001FC0                     u5241:
  7621  001FC0  EFE9  F00F         	goto	l504
  7622  001FC4                     u5240:
  7623  001FC4                     
  7624                           ; BSR set to: 0
  7625  001FC4  B243               	btfsc	_flags^0,1,c
  7626  001FC6  EFE7  F00F         	goto	u5251
  7627  001FCA  EFE9  F00F         	goto	u5250
  7628  001FCE                     u5251:
  7629  001FCE  EF67  F00F         	goto	l5109
  7630  001FD2                     u5250:
  7631  001FD2                     l504:
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7635  001FD2  A843               	btfss	_flags^0,4,c
  7636  001FD4  EFEE  F00F         	goto	u5261
  7637  001FD8  EFF0  F00F         	goto	u5260
  7638  001FDC                     u5261:
  7639  001FDC  EF07  F010         	goto	l5139
  7640  001FE0                     u5260:
  7641  001FE0                     
  7642                           ; BSR set to: 0
  7643  001FE0  516A               	movf	otoa@t& (0+255),w,b
  7644  001FE2  116B               	iorwf	(otoa@t+1)& (0+255),w,b
  7645  001FE4  B4D8               	btfsc	status,2,c
  7646  001FE6  EFF7  F00F         	goto	u5271
  7647  001FEA  EFF9  F00F         	goto	u5270
  7648  001FEE                     u5271:
  7649  001FEE  EF07  F010         	goto	l5139
  7650  001FF2                     u5270:
  7651  001FF2                     
  7652                           ; BSR set to: 0
  7653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7654  001FF2  0776               	decf	otoa@i& (0+255),f,b
  7655  001FF4  A0D8               	btfss	status,0,c
  7656  001FF6  0777               	decf	(otoa@i+1)& (0+255),f,b
  7657  001FF8                     
  7658                           ; BSR set to: 0
  7659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7660  001FF8  0ECB               	movlw	low _dbuf
  7661  001FFA  2576               	addwf	otoa@i& (0+255),w,b
  7662  001FFC  6ED9               	movwf	fsr2l,c
  7663  001FFE  0E00               	movlw	high _dbuf
  7664  002000  2177               	addwfc	(otoa@i+1)& (0+255),w,b
  7665  002002  6EDA               	movwf	fsr2h,c
  7666  002004  0E30               	movlw	48
  7667  002006  6EDF               	movwf	indf2,c
  7668  002008                     
  7669                           ; BSR set to: 0
  7670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  7671  002008  076C               	decf	otoa@w& (0+255),f,b
  7672  00200A  A0D8               	btfss	status,0,c
  7673  00200C  076D               	decf	(otoa@w+1)& (0+255),f,b
  7674  00200E                     l5139:
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  7678  00200E  C02E  F023         	movff	otoa@fp,pad@fp
  7679  002012  C02F  F024         	movff	otoa@fp+1,pad@fp+1
  7680  002016  0ECB               	movlw	low _dbuf
  7681  002018  2576               	addwf	otoa@i& (0+255),w,b
  7682  00201A  6E25               	movwf	pad@buf^0,c
  7683  00201C  0E00               	movlw	high _dbuf
  7684  00201E  2177               	addwfc	(otoa@i+1)& (0+255),w,b
  7685  002020  6E26               	movwf	(pad@buf+1)^0,c
  7686  002022  C06C  F027         	movff	otoa@w,pad@p
  7687  002026  C06D  F028         	movff	otoa@w+1,pad@p+1
  7688  00202A  EC54  F018         	call	_pad	;wreg free
  7689  00202E  C023  F02E         	movff	?_pad,?_otoa
  7690  002032  C024  F02F         	movff	?_pad+1,?_otoa+1
  7691  002036  0012               	return		;funcret
  7692  002038                     __end_of_otoa:
  7693                           	opt callstack 0
  7694                           
  7695 ;; *************** function _dtoa *****************
  7696 ;; Defined at:
  7697 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  7700 ;;		 -> vsnprintf@f(6), 
  7701 ;;  d               8   47[COMRAM] long long 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  n               8   16[BANK0 ] long long 
  7704 ;;  i               2   24[BANK0 ] int 
  7705 ;;  s               2   14[BANK0 ] int 
  7706 ;;  w               2   12[BANK0 ] int 
  7707 ;;  p               2   10[BANK0 ] int 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  2   45[COMRAM] int 
  7710 ;; Registers used:
  7711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7717 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7718 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7719 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7720 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;Total ram usage:       36 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    9
  7724 ;; This function calls:
  7725 ;;		___aodiv
  7726 ;;		___aomod
  7727 ;;		_abs
  7728 ;;		_pad
  7729 ;; This function is called by:
  7730 ;;		_vfpfcnvrt
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text16
  7735  00168A                     __ptext16:
  7736                           	opt callstack 0
  7737  00168A                     _dtoa:
  7738                           	opt callstack 17
  7739  00168A                     
  7740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7741  00168A  C030  F070         	movff	dtoa@d,dtoa@n
  7742  00168E  C031  F071         	movff	dtoa@d+1,dtoa@n+1
  7743  001692  C032  F072         	movff	dtoa@d+2,dtoa@n+2
  7744  001696  C033  F073         	movff	dtoa@d+3,dtoa@n+3
  7745  00169A  C034  F074         	movff	dtoa@d+4,dtoa@n+4
  7746  00169E  C035  F075         	movff	dtoa@d+5,dtoa@n+5
  7747  0016A2  C036  F076         	movff	dtoa@d+6,dtoa@n+6
  7748  0016A6  C037  F077         	movff	dtoa@d+7,dtoa@n+7
  7749  0016AA                     
  7750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7751  0016AA  0100               	movlb	0	; () banked
  7752  0016AC  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
  7753  0016AE  EF5B  F00B         	goto	u5031
  7754  0016B2  EF5E  F00B         	goto	u5030
  7755  0016B6                     u5031:
  7756  0016B6  0E01               	movlw	1
  7757  0016B8  EF5F  F00B         	goto	u5040
  7758  0016BC                     u5030:
  7759  0016BC  0E00               	movlw	0
  7760  0016BE                     u5040:
  7761  0016BE  6F6E               	movwf	dtoa@s& (0+255),b
  7762  0016C0  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  7763                           
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7765  0016C2  516E               	movf	dtoa@s& (0+255),w,b
  7766  0016C4  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  7767  0016C6  B4D8               	btfsc	status,2,c
  7768  0016C8  EF68  F00B         	goto	u5051
  7769  0016CC  EF6A  F00B         	goto	u5050
  7770  0016D0                     u5051:
  7771  0016D0  EF7A  F00B         	goto	l5039
  7772  0016D4                     u5050:
  7773  0016D4                     
  7774                           ; BSR set to: 0
  7775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7776  0016D4  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  7777  0016D6  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  7778  0016D8  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  7779  0016DA  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  7780  0016DC  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  7781  0016DE  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  7782  0016E0  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  7783  0016E2  6D70               	negf	dtoa@n& (0+255),b
  7784  0016E4  0E00               	movlw	0
  7785  0016E6  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  7786  0016E8  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  7787  0016EA  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  7788  0016EC  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  7789  0016EE  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  7790  0016F0  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  7791  0016F2  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  7792  0016F4                     l5039:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7796  0016F4  BE42               	btfsc	(_prec+1)^0,7,c
  7797  0016F6  EF7F  F00B         	goto	u5061
  7798  0016FA  EF81  F00B         	goto	u5060
  7799  0016FE                     u5061:
  7800  0016FE  EF82  F00B         	goto	l5043
  7801  001702                     u5060:
  7802  001702                     
  7803                           ; BSR set to: 0
  7804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7805  001702  9243               	bcf	_flags^0,1,c
  7806  001704                     l5043:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7810  001704  BE42               	btfsc	(_prec+1)^0,7,c
  7811  001706  EF8F  F00B         	goto	u5070
  7812  00170A  5042               	movf	(_prec+1)^0,w,c
  7813  00170C  E106               	bnz	u5071
  7814  00170E  0441               	decf	_prec^0,w,c
  7815  001710  B0D8               	btfsc	status,0,c
  7816  001712  EF8D  F00B         	goto	u5071
  7817  001716  EF8F  F00B         	goto	u5070
  7818  00171A                     u5071:
  7819  00171A  EF95  F00B         	goto	l470
  7820  00171E                     u5070:
  7821  00171E                     
  7822                           ; BSR set to: 0
  7823  00171E  0E00               	movlw	0
  7824  001720  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  7825  001722  0E01               	movlw	1
  7826  001724  6F6A               	movwf	dtoa@p& (0+255),b
  7827  001726  EF99  F00B         	goto	l472
  7828  00172A                     l470:
  7829                           
  7830                           ; BSR set to: 0
  7831  00172A  C041  F06A         	movff	_prec,dtoa@p
  7832  00172E  C042  F06B         	movff	_prec+1,dtoa@p+1
  7833  001732                     l472:
  7834                           
  7835                           ; BSR set to: 0
  7836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7837  001732  C03F  F06C         	movff	_width,dtoa@w
  7838  001736  C040  F06D         	movff	_width+1,dtoa@w+1
  7839  00173A                     
  7840                           ; BSR set to: 0
  7841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7842  00173A  516E               	movf	dtoa@s& (0+255),w,b
  7843  00173C  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  7844  00173E  A4D8               	btfss	status,2,c
  7845  001740  EFA4  F00B         	goto	u5081
  7846  001744  EFA6  F00B         	goto	u5080
  7847  001748                     u5081:
  7848  001748  EFAD  F00B         	goto	l5051
  7849  00174C                     u5080:
  7850  00174C                     
  7851                           ; BSR set to: 0
  7852  00174C  A443               	btfss	_flags^0,2,c
  7853  00174E  EFAB  F00B         	goto	u5091
  7854  001752  EFAD  F00B         	goto	u5090
  7855  001756                     u5091:
  7856  001756  EFB0  F00B         	goto	l5053
  7857  00175A                     u5090:
  7858  00175A                     l5051:
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7862  00175A  076C               	decf	dtoa@w& (0+255),f,b
  7863  00175C  A0D8               	btfss	status,0,c
  7864  00175E  076D               	decf	(dtoa@w+1)& (0+255),f,b
  7865  001760                     l5053:
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7869  001760  0E00               	movlw	0
  7870  001762  6F79               	movwf	(dtoa@i+1)& (0+255),b
  7871  001764  0E1F               	movlw	31
  7872  001766  6F78               	movwf	dtoa@i& (0+255),b
  7873  001768                     
  7874                           ; BSR set to: 0
  7875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7876  001768  0E00               	movlw	0
  7877  00176A  6FEA               	movwf	(_dbuf+31)& (0+255),b
  7878                           
  7879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7880  00176C  EF35  F00C         	goto	l5067
  7881  001770                     l5057:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7885  001770  0778               	decf	dtoa@i& (0+255),f,b
  7886  001772  A0D8               	btfss	status,0,c
  7887  001774  0779               	decf	(dtoa@i+1)& (0+255),f,b
  7888  001776                     
  7889                           ; BSR set to: 0
  7890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7891  001776  0ECB               	movlw	low _dbuf
  7892  001778  2578               	addwf	dtoa@i& (0+255),w,b
  7893  00177A  6ED9               	movwf	fsr2l,c
  7894  00177C  0E00               	movlw	high _dbuf
  7895  00177E  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  7896  001780  6EDA               	movwf	fsr2h,c
  7897  001782  C070  F013         	movff	dtoa@n,___aomod@dividend
  7898  001786  C071  F014         	movff	dtoa@n+1,___aomod@dividend+1
  7899  00178A  C072  F015         	movff	dtoa@n+2,___aomod@dividend+2
  7900  00178E  C073  F016         	movff	dtoa@n+3,___aomod@dividend+3
  7901  001792  C074  F017         	movff	dtoa@n+4,___aomod@dividend+4
  7902  001796  C075  F018         	movff	dtoa@n+5,___aomod@dividend+5
  7903  00179A  C076  F019         	movff	dtoa@n+6,___aomod@dividend+6
  7904  00179E  C077  F01A         	movff	dtoa@n+7,___aomod@dividend+7
  7905  0017A2  0E0A               	movlw	10
  7906  0017A4  6E1B               	movwf	___aomod@divisor^0,c
  7907  0017A6  0E00               	movlw	0
  7908  0017A8  6E1C               	movwf	(___aomod@divisor+1)^0,c
  7909  0017AA  0E00               	movlw	0
  7910  0017AC  6E1D               	movwf	(___aomod@divisor+2)^0,c
  7911  0017AE  0E00               	movlw	0
  7912  0017B0  6E1E               	movwf	(___aomod@divisor+3)^0,c
  7913  0017B2  0E00               	movlw	0
  7914  0017B4  6E1F               	movwf	(___aomod@divisor+4)^0,c
  7915  0017B6  0E00               	movlw	0
  7916  0017B8  6E20               	movwf	(___aomod@divisor+5)^0,c
  7917  0017BA  0E00               	movlw	0
  7918  0017BC  6E21               	movwf	(___aomod@divisor+6)^0,c
  7919  0017BE  0E00               	movlw	0
  7920  0017C0  6E22               	movwf	(___aomod@divisor+7)^0,c
  7921  0017C2  ECDF  F013         	call	___aomod	;wreg free
  7922  0017C6  C013  F060         	movff	?___aomod,??_dtoa
  7923  0017CA  C014  F061         	movff	?___aomod+1,??_dtoa+1
  7924  0017CE  C015  F062         	movff	?___aomod+2,??_dtoa+2
  7925  0017D2  C016  F063         	movff	?___aomod+3,??_dtoa+3
  7926  0017D6  C017  F064         	movff	?___aomod+4,??_dtoa+4
  7927  0017DA  C018  F065         	movff	?___aomod+5,??_dtoa+5
  7928  0017DE  C019  F066         	movff	?___aomod+6,??_dtoa+6
  7929  0017E2  C01A  F067         	movff	?___aomod+7,??_dtoa+7
  7930  0017E6  C060  F025         	movff	??_dtoa,abs@a
  7931  0017EA  C062  F026         	movff	??_dtoa+2,abs@a+1
  7932  0017EE  ECFB  F01A         	call	_abs	;wreg free
  7933  0017F2  5025               	movf	?_abs^0,w,c
  7934  0017F4  0F30               	addlw	48
  7935  0017F6  6EDF               	movwf	indf2,c
  7936  0017F8                     
  7937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7938  0017F8  0100               	movlb	0	; () banked
  7939  0017FA  076A               	decf	dtoa@p& (0+255),f,b
  7940  0017FC  A0D8               	btfss	status,0,c
  7941  0017FE  076B               	decf	(dtoa@p+1)& (0+255),f,b
  7942  001800                     
  7943                           ; BSR set to: 0
  7944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7945  001800  076C               	decf	dtoa@w& (0+255),f,b
  7946  001802  A0D8               	btfss	status,0,c
  7947  001804  076D               	decf	(dtoa@w+1)& (0+255),f,b
  7948  001806                     
  7949                           ; BSR set to: 0
  7950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7951  001806  C070  F013         	movff	dtoa@n,___aodiv@dividend
  7952  00180A  C071  F014         	movff	dtoa@n+1,___aodiv@dividend+1
  7953  00180E  C072  F015         	movff	dtoa@n+2,___aodiv@dividend+2
  7954  001812  C073  F016         	movff	dtoa@n+3,___aodiv@dividend+3
  7955  001816  C074  F017         	movff	dtoa@n+4,___aodiv@dividend+4
  7956  00181A  C075  F018         	movff	dtoa@n+5,___aodiv@dividend+5
  7957  00181E  C076  F019         	movff	dtoa@n+6,___aodiv@dividend+6
  7958  001822  C077  F01A         	movff	dtoa@n+7,___aodiv@dividend+7
  7959  001826  0E0A               	movlw	10
  7960  001828  6E1B               	movwf	___aodiv@divisor^0,c
  7961  00182A  0E00               	movlw	0
  7962  00182C  6E1C               	movwf	(___aodiv@divisor+1)^0,c
  7963  00182E  0E00               	movlw	0
  7964  001830  6E1D               	movwf	(___aodiv@divisor+2)^0,c
  7965  001832  0E00               	movlw	0
  7966  001834  6E1E               	movwf	(___aodiv@divisor+3)^0,c
  7967  001836  0E00               	movlw	0
  7968  001838  6E1F               	movwf	(___aodiv@divisor+4)^0,c
  7969  00183A  0E00               	movlw	0
  7970  00183C  6E20               	movwf	(___aodiv@divisor+5)^0,c
  7971  00183E  0E00               	movlw	0
  7972  001840  6E21               	movwf	(___aodiv@divisor+6)^0,c
  7973  001842  0E00               	movlw	0
  7974  001844  6E22               	movwf	(___aodiv@divisor+7)^0,c
  7975  001846  ECE9  F010         	call	___aodiv	;wreg free
  7976  00184A  C013  F070         	movff	?___aodiv,dtoa@n
  7977  00184E  C014  F071         	movff	?___aodiv+1,dtoa@n+1
  7978  001852  C015  F072         	movff	?___aodiv+2,dtoa@n+2
  7979  001856  C016  F073         	movff	?___aodiv+3,dtoa@n+3
  7980  00185A  C017  F074         	movff	?___aodiv+4,dtoa@n+4
  7981  00185E  C018  F075         	movff	?___aodiv+5,dtoa@n+5
  7982  001862  C019  F076         	movff	?___aodiv+6,dtoa@n+6
  7983  001866  C01A  F077         	movff	?___aodiv+7,dtoa@n+7
  7984  00186A                     l5067:
  7985                           
  7986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7987  00186A  0100               	movlb	0	; () banked
  7988  00186C  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  7989  00186E  EF41  F00C         	goto	u5101
  7990  001872  5179               	movf	(dtoa@i+1)& (0+255),w,b
  7991  001874  E108               	bnz	u5100
  7992  001876  0578               	decf	dtoa@i& (0+255),w,b
  7993  001878  A0D8               	btfss	status,0,c
  7994  00187A  EF41  F00C         	goto	u5101
  7995  00187E  EF43  F00C         	goto	u5100
  7996  001882                     u5101:
  7997  001882  EF73  F00C         	goto	l5077
  7998  001886                     u5100:
  7999  001886                     
  8000                           ; BSR set to: 0
  8001  001886  5170               	movf	dtoa@n& (0+255),w,b
  8002  001888  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  8003  00188A  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  8004  00188C  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  8005  00188E  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  8006  001890  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  8007  001892  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  8008  001894  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  8009  001896  A4D8               	btfss	status,2,c
  8010  001898  EF50  F00C         	goto	u5111
  8011  00189C  EF52  F00C         	goto	u5110
  8012  0018A0                     u5111:
  8013  0018A0  EFB8  F00B         	goto	l5057
  8014  0018A4                     u5110:
  8015  0018A4                     
  8016                           ; BSR set to: 0
  8017  0018A4  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  8018  0018A6  EF5F  F00C         	goto	u5120
  8019  0018AA  516B               	movf	(dtoa@p+1)& (0+255),w,b
  8020  0018AC  E106               	bnz	u5121
  8021  0018AE  056A               	decf	dtoa@p& (0+255),w,b
  8022  0018B0  B0D8               	btfsc	status,0,c
  8023  0018B2  EF5D  F00C         	goto	u5121
  8024  0018B6  EF5F  F00C         	goto	u5120
  8025  0018BA                     u5121:
  8026  0018BA  EFB8  F00B         	goto	l5057
  8027  0018BE                     u5120:
  8028  0018BE                     
  8029                           ; BSR set to: 0
  8030  0018BE  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  8031  0018C0  EF6A  F00C         	goto	u5131
  8032  0018C4  516D               	movf	(dtoa@w+1)& (0+255),w,b
  8033  0018C6  E108               	bnz	u5130
  8034  0018C8  056C               	decf	dtoa@w& (0+255),w,b
  8035  0018CA  A0D8               	btfss	status,0,c
  8036  0018CC  EF6A  F00C         	goto	u5131
  8037  0018D0  EF6C  F00C         	goto	u5130
  8038  0018D4                     u5131:
  8039  0018D4  EF73  F00C         	goto	l5077
  8040  0018D8                     u5130:
  8041  0018D8                     
  8042                           ; BSR set to: 0
  8043  0018D8  B243               	btfsc	_flags^0,1,c
  8044  0018DA  EF71  F00C         	goto	u5141
  8045  0018DE  EF73  F00C         	goto	u5140
  8046  0018E2                     u5141:
  8047  0018E2  EFB8  F00B         	goto	l5057
  8048  0018E6                     u5140:
  8049  0018E6                     l5077:
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8053  0018E6  516E               	movf	dtoa@s& (0+255),w,b
  8054  0018E8  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8055  0018EA  A4D8               	btfss	status,2,c
  8056  0018EC  EF7A  F00C         	goto	u5151
  8057  0018F0  EF7C  F00C         	goto	u5150
  8058  0018F4                     u5151:
  8059  0018F4  EF83  F00C         	goto	l5081
  8060  0018F8                     u5150:
  8061  0018F8                     
  8062                           ; BSR set to: 0
  8063  0018F8  A443               	btfss	_flags^0,2,c
  8064  0018FA  EF81  F00C         	goto	u5161
  8065  0018FE  EF83  F00C         	goto	u5160
  8066  001902                     u5161:
  8067  001902  EFA1  F00C         	goto	l5091
  8068  001906                     u5160:
  8069  001906                     l5081:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8073  001906  0778               	decf	dtoa@i& (0+255),f,b
  8074  001908  A0D8               	btfss	status,0,c
  8075  00190A  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8076  00190C                     
  8077                           ; BSR set to: 0
  8078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8079  00190C  516E               	movf	dtoa@s& (0+255),w,b
  8080  00190E  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8081  001910  A4D8               	btfss	status,2,c
  8082  001912  EF8D  F00C         	goto	u5171
  8083  001916  EF8F  F00C         	goto	u5170
  8084  00191A                     u5171:
  8085  00191A  EF95  F00C         	goto	l5087
  8086  00191E                     u5170:
  8087  00191E                     
  8088                           ; BSR set to: 0
  8089  00191E  0E00               	movlw	0
  8090  001920  6F69               	movwf	(_dtoa$1233+1)& (0+255),b
  8091  001922  0E2B               	movlw	43
  8092  001924  6F68               	movwf	_dtoa$1233& (0+255),b
  8093  001926  EF99  F00C         	goto	l5089
  8094  00192A                     l5087:
  8095                           
  8096                           ; BSR set to: 0
  8097  00192A  0E00               	movlw	0
  8098  00192C  6F69               	movwf	(_dtoa$1233+1)& (0+255),b
  8099  00192E  0E2D               	movlw	45
  8100  001930  6F68               	movwf	_dtoa$1233& (0+255),b
  8101  001932                     l5089:
  8102                           
  8103                           ; BSR set to: 0
  8104  001932  0ECB               	movlw	low _dbuf
  8105  001934  2578               	addwf	dtoa@i& (0+255),w,b
  8106  001936  6ED9               	movwf	fsr2l,c
  8107  001938  0E00               	movlw	high _dbuf
  8108  00193A  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8109  00193C  6EDA               	movwf	fsr2h,c
  8110  00193E  C068  FFDF         	movff	_dtoa$1233,indf2
  8111  001942                     l5091:
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8115  001942  C02E  F023         	movff	dtoa@fp,pad@fp
  8116  001946  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  8117  00194A  0ECB               	movlw	low _dbuf
  8118  00194C  2578               	addwf	dtoa@i& (0+255),w,b
  8119  00194E  6E25               	movwf	pad@buf^0,c
  8120  001950  0E00               	movlw	high _dbuf
  8121  001952  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8122  001954  6E26               	movwf	(pad@buf+1)^0,c
  8123  001956  C06C  F027         	movff	dtoa@w,pad@p
  8124  00195A  C06D  F028         	movff	dtoa@w+1,pad@p+1
  8125  00195E  EC54  F018         	call	_pad	;wreg free
  8126  001962  C023  F02E         	movff	?_pad,?_dtoa
  8127  001966  C024  F02F         	movff	?_pad+1,?_dtoa+1
  8128  00196A  0012               	return		;funcret
  8129  00196C                     __end_of_dtoa:
  8130                           	opt callstack 0
  8131                           
  8132 ;; *************** function _abs *****************
  8133 ;; Defined at:
  8134 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  a               2   36[COMRAM] int 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;		None
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  2   36[COMRAM] int 
  8141 ;; Registers used:
  8142 ;;		wreg, status,2, status,0
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;Total ram usage:        4 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:    5
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_dtoa
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text17
  8163  0035F6                     __ptext17:
  8164                           	opt callstack 0
  8165  0035F6                     _abs:
  8166                           	opt callstack 20
  8167  0035F6  BE26               	btfsc	(abs@a+1)^0,7,c
  8168  0035F8  EF08  F01B         	goto	u4690
  8169  0035FC  5026               	movf	(abs@a+1)^0,w,c
  8170  0035FE  E106               	bnz	u4691
  8171  003600  0425               	decf	abs@a^0,w,c
  8172  003602  B0D8               	btfsc	status,0,c
  8173  003604  EF06  F01B         	goto	u4691
  8174  003608  EF08  F01B         	goto	u4690
  8175  00360C                     u4691:
  8176  00360C  EF16  F01B         	goto	l1334
  8177  003610                     u4690:
  8178  003610  C025  F027         	movff	abs@a,??_abs
  8179  003614  C026  F028         	movff	abs@a+1,??_abs+1
  8180  003618  1E27               	comf	??_abs^0,f,c
  8181  00361A  1E28               	comf	(??_abs+1)^0,f,c
  8182  00361C  4A27               	infsnz	??_abs^0,f,c
  8183  00361E  2A28               	incf	(??_abs+1)^0,f,c
  8184  003620  C027  F025         	movff	??_abs,?_abs
  8185  003624  C028  F026         	movff	??_abs+1,?_abs+1
  8186  003628  EF1A  F01B         	goto	l1337
  8187  00362C                     l1334:
  8188  00362C  C025  F025         	movff	abs@a,?_abs
  8189  003630  C026  F026         	movff	abs@a+1,?_abs+1
  8190  003634                     l1337:
  8191  003634  0012               	return		;funcret
  8192  003636                     __end_of_abs:
  8193                           	opt callstack 0
  8194                           
  8195 ;; *************** function ___aomod *****************
  8196 ;; Defined at:
  8197 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  dividend        8   18[COMRAM] long long 
  8200 ;;  divisor         8   26[COMRAM] long long 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  sign            1   35[COMRAM] unsigned char 
  8203 ;;  counter         1   34[COMRAM] unsigned char 
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  8   18[COMRAM] long long 
  8206 ;; Registers used:
  8207 ;;		wreg, status,2, status,0
  8208 ;; Tracked objects:
  8209 ;;		On entry : 0/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8213 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8216 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8217 ;;Total ram usage:       18 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:    5
  8220 ;; This function calls:
  8221 ;;		Nothing
  8222 ;; This function is called by:
  8223 ;;		_dtoa
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text18
  8228  0027BE                     __ptext18:
  8229                           	opt callstack 0
  8230  0027BE                     ___aomod:
  8231                           	opt callstack 20
  8232  0027BE  0E00               	movlw	0
  8233  0027C0  6E24               	movwf	___aomod@sign^0,c
  8234  0027C2  BE1A               	btfsc	(___aomod@dividend+7)^0,7,c
  8235  0027C4  EFE8  F013         	goto	u4860
  8236  0027C8  EFE6  F013         	goto	u4861
  8237  0027CC                     u4861:
  8238  0027CC  EFFA  F013         	goto	l4933
  8239  0027D0                     u4860:
  8240  0027D0  1E1A               	comf	(___aomod@dividend+7)^0,f,c
  8241  0027D2  1E19               	comf	(___aomod@dividend+6)^0,f,c
  8242  0027D4  1E18               	comf	(___aomod@dividend+5)^0,f,c
  8243  0027D6  1E17               	comf	(___aomod@dividend+4)^0,f,c
  8244  0027D8  1E16               	comf	(___aomod@dividend+3)^0,f,c
  8245  0027DA  1E15               	comf	(___aomod@dividend+2)^0,f,c
  8246  0027DC  1E14               	comf	(___aomod@dividend+1)^0,f,c
  8247  0027DE  6C13               	negf	___aomod@dividend^0,c
  8248  0027E0  0E00               	movlw	0
  8249  0027E2  2214               	addwfc	(___aomod@dividend+1)^0,f,c
  8250  0027E4  2215               	addwfc	(___aomod@dividend+2)^0,f,c
  8251  0027E6  2216               	addwfc	(___aomod@dividend+3)^0,f,c
  8252  0027E8  2217               	addwfc	(___aomod@dividend+4)^0,f,c
  8253  0027EA  2218               	addwfc	(___aomod@dividend+5)^0,f,c
  8254  0027EC  2219               	addwfc	(___aomod@dividend+6)^0,f,c
  8255  0027EE  221A               	addwfc	(___aomod@dividend+7)^0,f,c
  8256  0027F0  0E01               	movlw	1
  8257  0027F2  6E24               	movwf	___aomod@sign^0,c
  8258  0027F4                     l4933:
  8259  0027F4  BE22               	btfsc	(___aomod@divisor+7)^0,7,c
  8260  0027F6  EF01  F014         	goto	u4870
  8261  0027FA  EFFF  F013         	goto	u4871
  8262  0027FE                     u4871:
  8263  0027FE  EF11  F014         	goto	l4937
  8264  002802                     u4870:
  8265  002802  1E22               	comf	(___aomod@divisor+7)^0,f,c
  8266  002804  1E21               	comf	(___aomod@divisor+6)^0,f,c
  8267  002806  1E20               	comf	(___aomod@divisor+5)^0,f,c
  8268  002808  1E1F               	comf	(___aomod@divisor+4)^0,f,c
  8269  00280A  1E1E               	comf	(___aomod@divisor+3)^0,f,c
  8270  00280C  1E1D               	comf	(___aomod@divisor+2)^0,f,c
  8271  00280E  1E1C               	comf	(___aomod@divisor+1)^0,f,c
  8272  002810  6C1B               	negf	___aomod@divisor^0,c
  8273  002812  0E00               	movlw	0
  8274  002814  221C               	addwfc	(___aomod@divisor+1)^0,f,c
  8275  002816  221D               	addwfc	(___aomod@divisor+2)^0,f,c
  8276  002818  221E               	addwfc	(___aomod@divisor+3)^0,f,c
  8277  00281A  221F               	addwfc	(___aomod@divisor+4)^0,f,c
  8278  00281C  2220               	addwfc	(___aomod@divisor+5)^0,f,c
  8279  00281E  2221               	addwfc	(___aomod@divisor+6)^0,f,c
  8280  002820  2222               	addwfc	(___aomod@divisor+7)^0,f,c
  8281  002822                     l4937:
  8282  002822  501B               	movf	___aomod@divisor^0,w,c
  8283  002824  101C               	iorwf	(___aomod@divisor+1)^0,w,c
  8284  002826  101D               	iorwf	(___aomod@divisor+2)^0,w,c
  8285  002828  101E               	iorwf	(___aomod@divisor+3)^0,w,c
  8286  00282A  101F               	iorwf	(___aomod@divisor+4)^0,w,c
  8287  00282C  1020               	iorwf	(___aomod@divisor+5)^0,w,c
  8288  00282E  1021               	iorwf	(___aomod@divisor+6)^0,w,c
  8289  002830  1022               	iorwf	(___aomod@divisor+7)^0,w,c
  8290  002832  B4D8               	btfsc	status,2,c
  8291  002834  EF1E  F014         	goto	u4881
  8292  002838  EF20  F014         	goto	u4880
  8293  00283C                     u4881:
  8294  00283C  EF68  F014         	goto	l4953
  8295  002840                     u4880:
  8296  002840  0E01               	movlw	1
  8297  002842  6E23               	movwf	___aomod@counter^0,c
  8298  002844  EF2E  F014         	goto	l4943
  8299  002848                     l4941:
  8300  002848  90D8               	bcf	status,0,c
  8301  00284A  361B               	rlcf	___aomod@divisor^0,f,c
  8302  00284C  361C               	rlcf	(___aomod@divisor+1)^0,f,c
  8303  00284E  361D               	rlcf	(___aomod@divisor+2)^0,f,c
  8304  002850  361E               	rlcf	(___aomod@divisor+3)^0,f,c
  8305  002852  361F               	rlcf	(___aomod@divisor+4)^0,f,c
  8306  002854  3620               	rlcf	(___aomod@divisor+5)^0,f,c
  8307  002856  3621               	rlcf	(___aomod@divisor+6)^0,f,c
  8308  002858  3622               	rlcf	(___aomod@divisor+7)^0,f,c
  8309  00285A  2A23               	incf	___aomod@counter^0,f,c
  8310  00285C                     l4943:
  8311  00285C  AE22               	btfss	(___aomod@divisor+7)^0,7,c
  8312  00285E  EF33  F014         	goto	u4891
  8313  002862  EF35  F014         	goto	u4890
  8314  002866                     u4891:
  8315  002866  EF24  F014         	goto	l4941
  8316  00286A                     u4890:
  8317  00286A                     l4945:
  8318  00286A  501B               	movf	___aomod@divisor^0,w,c
  8319  00286C  5C13               	subwf	___aomod@dividend^0,w,c
  8320  00286E  501C               	movf	(___aomod@divisor+1)^0,w,c
  8321  002870  5814               	subwfb	(___aomod@dividend+1)^0,w,c
  8322  002872  501D               	movf	(___aomod@divisor+2)^0,w,c
  8323  002874  5815               	subwfb	(___aomod@dividend+2)^0,w,c
  8324  002876  501E               	movf	(___aomod@divisor+3)^0,w,c
  8325  002878  5816               	subwfb	(___aomod@dividend+3)^0,w,c
  8326  00287A  501F               	movf	(___aomod@divisor+4)^0,w,c
  8327  00287C  5817               	subwfb	(___aomod@dividend+4)^0,w,c
  8328  00287E  5020               	movf	(___aomod@divisor+5)^0,w,c
  8329  002880  5818               	subwfb	(___aomod@dividend+5)^0,w,c
  8330  002882  5021               	movf	(___aomod@divisor+6)^0,w,c
  8331  002884  5819               	subwfb	(___aomod@dividend+6)^0,w,c
  8332  002886  5022               	movf	(___aomod@divisor+7)^0,w,c
  8333  002888  581A               	subwfb	(___aomod@dividend+7)^0,w,c
  8334  00288A  A0D8               	btfss	status,0,c
  8335  00288C  EF4A  F014         	goto	u4901
  8336  002890  EF4C  F014         	goto	u4900
  8337  002894                     u4901:
  8338  002894  EF5C  F014         	goto	l4949
  8339  002898                     u4900:
  8340  002898  501B               	movf	___aomod@divisor^0,w,c
  8341  00289A  5E13               	subwf	___aomod@dividend^0,f,c
  8342  00289C  501C               	movf	(___aomod@divisor+1)^0,w,c
  8343  00289E  5A14               	subwfb	(___aomod@dividend+1)^0,f,c
  8344  0028A0  501D               	movf	(___aomod@divisor+2)^0,w,c
  8345  0028A2  5A15               	subwfb	(___aomod@dividend+2)^0,f,c
  8346  0028A4  501E               	movf	(___aomod@divisor+3)^0,w,c
  8347  0028A6  5A16               	subwfb	(___aomod@dividend+3)^0,f,c
  8348  0028A8  501F               	movf	(___aomod@divisor+4)^0,w,c
  8349  0028AA  5A17               	subwfb	(___aomod@dividend+4)^0,f,c
  8350  0028AC  5020               	movf	(___aomod@divisor+5)^0,w,c
  8351  0028AE  5A18               	subwfb	(___aomod@dividend+5)^0,f,c
  8352  0028B0  5021               	movf	(___aomod@divisor+6)^0,w,c
  8353  0028B2  5A19               	subwfb	(___aomod@dividend+6)^0,f,c
  8354  0028B4  5022               	movf	(___aomod@divisor+7)^0,w,c
  8355  0028B6  5A1A               	subwfb	(___aomod@dividend+7)^0,f,c
  8356  0028B8                     l4949:
  8357  0028B8  90D8               	bcf	status,0,c
  8358  0028BA  3222               	rrcf	(___aomod@divisor+7)^0,f,c
  8359  0028BC  3221               	rrcf	(___aomod@divisor+6)^0,f,c
  8360  0028BE  3220               	rrcf	(___aomod@divisor+5)^0,f,c
  8361  0028C0  321F               	rrcf	(___aomod@divisor+4)^0,f,c
  8362  0028C2  321E               	rrcf	(___aomod@divisor+3)^0,f,c
  8363  0028C4  321D               	rrcf	(___aomod@divisor+2)^0,f,c
  8364  0028C6  321C               	rrcf	(___aomod@divisor+1)^0,f,c
  8365  0028C8  321B               	rrcf	___aomod@divisor^0,f,c
  8366  0028CA  2E23               	decfsz	___aomod@counter^0,f,c
  8367  0028CC  EF35  F014         	goto	l4945
  8368  0028D0                     l4953:
  8369  0028D0  5024               	movf	___aomod@sign^0,w,c
  8370  0028D2  B4D8               	btfsc	status,2,c
  8371  0028D4  EF6E  F014         	goto	u4911
  8372  0028D8  EF70  F014         	goto	u4910
  8373  0028DC                     u4911:
  8374  0028DC  EF80  F014         	goto	l4957
  8375  0028E0                     u4910:
  8376  0028E0  1E1A               	comf	(___aomod@dividend+7)^0,f,c
  8377  0028E2  1E19               	comf	(___aomod@dividend+6)^0,f,c
  8378  0028E4  1E18               	comf	(___aomod@dividend+5)^0,f,c
  8379  0028E6  1E17               	comf	(___aomod@dividend+4)^0,f,c
  8380  0028E8  1E16               	comf	(___aomod@dividend+3)^0,f,c
  8381  0028EA  1E15               	comf	(___aomod@dividend+2)^0,f,c
  8382  0028EC  1E14               	comf	(___aomod@dividend+1)^0,f,c
  8383  0028EE  6C13               	negf	___aomod@dividend^0,c
  8384  0028F0  0E00               	movlw	0
  8385  0028F2  2214               	addwfc	(___aomod@dividend+1)^0,f,c
  8386  0028F4  2215               	addwfc	(___aomod@dividend+2)^0,f,c
  8387  0028F6  2216               	addwfc	(___aomod@dividend+3)^0,f,c
  8388  0028F8  2217               	addwfc	(___aomod@dividend+4)^0,f,c
  8389  0028FA  2218               	addwfc	(___aomod@dividend+5)^0,f,c
  8390  0028FC  2219               	addwfc	(___aomod@dividend+6)^0,f,c
  8391  0028FE  221A               	addwfc	(___aomod@dividend+7)^0,f,c
  8392  002900                     l4957:
  8393  002900  C013  F013         	movff	___aomod@dividend,?___aomod
  8394  002904  C014  F014         	movff	___aomod@dividend+1,?___aomod+1
  8395  002908  C015  F015         	movff	___aomod@dividend+2,?___aomod+2
  8396  00290C  C016  F016         	movff	___aomod@dividend+3,?___aomod+3
  8397  002910  C017  F017         	movff	___aomod@dividend+4,?___aomod+4
  8398  002914  C018  F018         	movff	___aomod@dividend+5,?___aomod+5
  8399  002918  C019  F019         	movff	___aomod@dividend+6,?___aomod+6
  8400  00291C  C01A  F01A         	movff	___aomod@dividend+7,?___aomod+7
  8401  002920  0012               	return		;funcret
  8402  002922                     __end_of___aomod:
  8403                           	opt callstack 0
  8404                           
  8405 ;; *************** function ___aodiv *****************
  8406 ;; Defined at:
  8407 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  dividend        8   18[COMRAM] long long 
  8410 ;;  divisor         8   26[COMRAM] long long 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  quotient        8   36[COMRAM] long long 
  8413 ;;  sign            1   35[COMRAM] unsigned char 
  8414 ;;  counter         1   34[COMRAM] unsigned char 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  8   18[COMRAM] long long 
  8417 ;; Registers used:
  8418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8424 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;Total ram usage:       26 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    5
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_dtoa
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text19
  8439  0021D2                     __ptext19:
  8440                           	opt callstack 0
  8441  0021D2                     ___aodiv:
  8442                           	opt callstack 20
  8443  0021D2  0E00               	movlw	0
  8444  0021D4  6E24               	movwf	___aodiv@sign^0,c
  8445  0021D6  BE22               	btfsc	(___aodiv@divisor+7)^0,7,c
  8446  0021D8  EFF2  F010         	goto	u4790
  8447  0021DC  EFF0  F010         	goto	u4791
  8448  0021E0                     u4791:
  8449  0021E0  EF04  F011         	goto	l4889
  8450  0021E4                     u4790:
  8451  0021E4  1E22               	comf	(___aodiv@divisor+7)^0,f,c
  8452  0021E6  1E21               	comf	(___aodiv@divisor+6)^0,f,c
  8453  0021E8  1E20               	comf	(___aodiv@divisor+5)^0,f,c
  8454  0021EA  1E1F               	comf	(___aodiv@divisor+4)^0,f,c
  8455  0021EC  1E1E               	comf	(___aodiv@divisor+3)^0,f,c
  8456  0021EE  1E1D               	comf	(___aodiv@divisor+2)^0,f,c
  8457  0021F0  1E1C               	comf	(___aodiv@divisor+1)^0,f,c
  8458  0021F2  6C1B               	negf	___aodiv@divisor^0,c
  8459  0021F4  0E00               	movlw	0
  8460  0021F6  221C               	addwfc	(___aodiv@divisor+1)^0,f,c
  8461  0021F8  221D               	addwfc	(___aodiv@divisor+2)^0,f,c
  8462  0021FA  221E               	addwfc	(___aodiv@divisor+3)^0,f,c
  8463  0021FC  221F               	addwfc	(___aodiv@divisor+4)^0,f,c
  8464  0021FE  2220               	addwfc	(___aodiv@divisor+5)^0,f,c
  8465  002200  2221               	addwfc	(___aodiv@divisor+6)^0,f,c
  8466  002202  2222               	addwfc	(___aodiv@divisor+7)^0,f,c
  8467  002204  0E01               	movlw	1
  8468  002206  6E24               	movwf	___aodiv@sign^0,c
  8469  002208                     l4889:
  8470  002208  BE1A               	btfsc	(___aodiv@dividend+7)^0,7,c
  8471  00220A  EF0B  F011         	goto	u4800
  8472  00220E  EF09  F011         	goto	u4801
  8473  002212                     u4801:
  8474  002212  EF1D  F011         	goto	l4895
  8475  002216                     u4800:
  8476  002216  1E1A               	comf	(___aodiv@dividend+7)^0,f,c
  8477  002218  1E19               	comf	(___aodiv@dividend+6)^0,f,c
  8478  00221A  1E18               	comf	(___aodiv@dividend+5)^0,f,c
  8479  00221C  1E17               	comf	(___aodiv@dividend+4)^0,f,c
  8480  00221E  1E16               	comf	(___aodiv@dividend+3)^0,f,c
  8481  002220  1E15               	comf	(___aodiv@dividend+2)^0,f,c
  8482  002222  1E14               	comf	(___aodiv@dividend+1)^0,f,c
  8483  002224  6C13               	negf	___aodiv@dividend^0,c
  8484  002226  0E00               	movlw	0
  8485  002228  2214               	addwfc	(___aodiv@dividend+1)^0,f,c
  8486  00222A  2215               	addwfc	(___aodiv@dividend+2)^0,f,c
  8487  00222C  2216               	addwfc	(___aodiv@dividend+3)^0,f,c
  8488  00222E  2217               	addwfc	(___aodiv@dividend+4)^0,f,c
  8489  002230  2218               	addwfc	(___aodiv@dividend+5)^0,f,c
  8490  002232  2219               	addwfc	(___aodiv@dividend+6)^0,f,c
  8491  002234  221A               	addwfc	(___aodiv@dividend+7)^0,f,c
  8492  002236  0E01               	movlw	1
  8493  002238  1A24               	xorwf	___aodiv@sign^0,f,c
  8494  00223A                     l4895:
  8495  00223A  EE20  F025         	lfsr	2,___aodiv@quotient
  8496  00223E  0E07               	movlw	7
  8497  002240                     u4811:
  8498  002240  6ADE               	clrf	postinc2,c
  8499  002242  06E8               	decf	wreg,f,c
  8500  002244  E2FD               	bc	u4811
  8501  002246  501B               	movf	___aodiv@divisor^0,w,c
  8502  002248  101C               	iorwf	(___aodiv@divisor+1)^0,w,c
  8503  00224A  101D               	iorwf	(___aodiv@divisor+2)^0,w,c
  8504  00224C  101E               	iorwf	(___aodiv@divisor+3)^0,w,c
  8505  00224E  101F               	iorwf	(___aodiv@divisor+4)^0,w,c
  8506  002250  1020               	iorwf	(___aodiv@divisor+5)^0,w,c
  8507  002252  1021               	iorwf	(___aodiv@divisor+6)^0,w,c
  8508  002254  1022               	iorwf	(___aodiv@divisor+7)^0,w,c
  8509  002256  B4D8               	btfsc	status,2,c
  8510  002258  EF30  F011         	goto	u4821
  8511  00225C  EF32  F011         	goto	u4820
  8512  002260                     u4821:
  8513  002260  EF84  F011         	goto	l4917
  8514  002264                     u4820:
  8515  002264  0E01               	movlw	1
  8516  002266  6E23               	movwf	___aodiv@counter^0,c
  8517  002268  EF40  F011         	goto	l4903
  8518  00226C                     l4901:
  8519  00226C  90D8               	bcf	status,0,c
  8520  00226E  361B               	rlcf	___aodiv@divisor^0,f,c
  8521  002270  361C               	rlcf	(___aodiv@divisor+1)^0,f,c
  8522  002272  361D               	rlcf	(___aodiv@divisor+2)^0,f,c
  8523  002274  361E               	rlcf	(___aodiv@divisor+3)^0,f,c
  8524  002276  361F               	rlcf	(___aodiv@divisor+4)^0,f,c
  8525  002278  3620               	rlcf	(___aodiv@divisor+5)^0,f,c
  8526  00227A  3621               	rlcf	(___aodiv@divisor+6)^0,f,c
  8527  00227C  3622               	rlcf	(___aodiv@divisor+7)^0,f,c
  8528  00227E  2A23               	incf	___aodiv@counter^0,f,c
  8529  002280                     l4903:
  8530  002280  AE22               	btfss	(___aodiv@divisor+7)^0,7,c
  8531  002282  EF45  F011         	goto	u4831
  8532  002286  EF47  F011         	goto	u4830
  8533  00228A                     u4831:
  8534  00228A  EF36  F011         	goto	l4901
  8535  00228E                     u4830:
  8536  00228E                     l4905:
  8537  00228E  90D8               	bcf	status,0,c
  8538  002290  3625               	rlcf	___aodiv@quotient^0,f,c
  8539  002292  3626               	rlcf	(___aodiv@quotient+1)^0,f,c
  8540  002294  3627               	rlcf	(___aodiv@quotient+2)^0,f,c
  8541  002296  3628               	rlcf	(___aodiv@quotient+3)^0,f,c
  8542  002298  3629               	rlcf	(___aodiv@quotient+4)^0,f,c
  8543  00229A  362A               	rlcf	(___aodiv@quotient+5)^0,f,c
  8544  00229C  362B               	rlcf	(___aodiv@quotient+6)^0,f,c
  8545  00229E  362C               	rlcf	(___aodiv@quotient+7)^0,f,c
  8546  0022A0  501B               	movf	___aodiv@divisor^0,w,c
  8547  0022A2  5C13               	subwf	___aodiv@dividend^0,w,c
  8548  0022A4  501C               	movf	(___aodiv@divisor+1)^0,w,c
  8549  0022A6  5814               	subwfb	(___aodiv@dividend+1)^0,w,c
  8550  0022A8  501D               	movf	(___aodiv@divisor+2)^0,w,c
  8551  0022AA  5815               	subwfb	(___aodiv@dividend+2)^0,w,c
  8552  0022AC  501E               	movf	(___aodiv@divisor+3)^0,w,c
  8553  0022AE  5816               	subwfb	(___aodiv@dividend+3)^0,w,c
  8554  0022B0  501F               	movf	(___aodiv@divisor+4)^0,w,c
  8555  0022B2  5817               	subwfb	(___aodiv@dividend+4)^0,w,c
  8556  0022B4  5020               	movf	(___aodiv@divisor+5)^0,w,c
  8557  0022B6  5818               	subwfb	(___aodiv@dividend+5)^0,w,c
  8558  0022B8  5021               	movf	(___aodiv@divisor+6)^0,w,c
  8559  0022BA  5819               	subwfb	(___aodiv@dividend+6)^0,w,c
  8560  0022BC  5022               	movf	(___aodiv@divisor+7)^0,w,c
  8561  0022BE  581A               	subwfb	(___aodiv@dividend+7)^0,w,c
  8562  0022C0  A0D8               	btfss	status,0,c
  8563  0022C2  EF65  F011         	goto	u4841
  8564  0022C6  EF67  F011         	goto	u4840
  8565  0022CA                     u4841:
  8566  0022CA  EF78  F011         	goto	l4913
  8567  0022CE                     u4840:
  8568  0022CE  501B               	movf	___aodiv@divisor^0,w,c
  8569  0022D0  5E13               	subwf	___aodiv@dividend^0,f,c
  8570  0022D2  501C               	movf	(___aodiv@divisor+1)^0,w,c
  8571  0022D4  5A14               	subwfb	(___aodiv@dividend+1)^0,f,c
  8572  0022D6  501D               	movf	(___aodiv@divisor+2)^0,w,c
  8573  0022D8  5A15               	subwfb	(___aodiv@dividend+2)^0,f,c
  8574  0022DA  501E               	movf	(___aodiv@divisor+3)^0,w,c
  8575  0022DC  5A16               	subwfb	(___aodiv@dividend+3)^0,f,c
  8576  0022DE  501F               	movf	(___aodiv@divisor+4)^0,w,c
  8577  0022E0  5A17               	subwfb	(___aodiv@dividend+4)^0,f,c
  8578  0022E2  5020               	movf	(___aodiv@divisor+5)^0,w,c
  8579  0022E4  5A18               	subwfb	(___aodiv@dividend+5)^0,f,c
  8580  0022E6  5021               	movf	(___aodiv@divisor+6)^0,w,c
  8581  0022E8  5A19               	subwfb	(___aodiv@dividend+6)^0,f,c
  8582  0022EA  5022               	movf	(___aodiv@divisor+7)^0,w,c
  8583  0022EC  5A1A               	subwfb	(___aodiv@dividend+7)^0,f,c
  8584  0022EE  8025               	bsf	___aodiv@quotient^0,0,c
  8585  0022F0                     l4913:
  8586  0022F0  90D8               	bcf	status,0,c
  8587  0022F2  3222               	rrcf	(___aodiv@divisor+7)^0,f,c
  8588  0022F4  3221               	rrcf	(___aodiv@divisor+6)^0,f,c
  8589  0022F6  3220               	rrcf	(___aodiv@divisor+5)^0,f,c
  8590  0022F8  321F               	rrcf	(___aodiv@divisor+4)^0,f,c
  8591  0022FA  321E               	rrcf	(___aodiv@divisor+3)^0,f,c
  8592  0022FC  321D               	rrcf	(___aodiv@divisor+2)^0,f,c
  8593  0022FE  321C               	rrcf	(___aodiv@divisor+1)^0,f,c
  8594  002300  321B               	rrcf	___aodiv@divisor^0,f,c
  8595  002302  2E23               	decfsz	___aodiv@counter^0,f,c
  8596  002304  EF47  F011         	goto	l4905
  8597  002308                     l4917:
  8598  002308  5024               	movf	___aodiv@sign^0,w,c
  8599  00230A  B4D8               	btfsc	status,2,c
  8600  00230C  EF8A  F011         	goto	u4851
  8601  002310  EF8C  F011         	goto	u4850
  8602  002314                     u4851:
  8603  002314  EF9C  F011         	goto	l4921
  8604  002318                     u4850:
  8605  002318  1E2C               	comf	(___aodiv@quotient+7)^0,f,c
  8606  00231A  1E2B               	comf	(___aodiv@quotient+6)^0,f,c
  8607  00231C  1E2A               	comf	(___aodiv@quotient+5)^0,f,c
  8608  00231E  1E29               	comf	(___aodiv@quotient+4)^0,f,c
  8609  002320  1E28               	comf	(___aodiv@quotient+3)^0,f,c
  8610  002322  1E27               	comf	(___aodiv@quotient+2)^0,f,c
  8611  002324  1E26               	comf	(___aodiv@quotient+1)^0,f,c
  8612  002326  6C25               	negf	___aodiv@quotient^0,c
  8613  002328  0E00               	movlw	0
  8614  00232A  2226               	addwfc	(___aodiv@quotient+1)^0,f,c
  8615  00232C  2227               	addwfc	(___aodiv@quotient+2)^0,f,c
  8616  00232E  2228               	addwfc	(___aodiv@quotient+3)^0,f,c
  8617  002330  2229               	addwfc	(___aodiv@quotient+4)^0,f,c
  8618  002332  222A               	addwfc	(___aodiv@quotient+5)^0,f,c
  8619  002334  222B               	addwfc	(___aodiv@quotient+6)^0,f,c
  8620  002336  222C               	addwfc	(___aodiv@quotient+7)^0,f,c
  8621  002338                     l4921:
  8622  002338  C025  F013         	movff	___aodiv@quotient,?___aodiv
  8623  00233C  C026  F014         	movff	___aodiv@quotient+1,?___aodiv+1
  8624  002340  C027  F015         	movff	___aodiv@quotient+2,?___aodiv+2
  8625  002344  C028  F016         	movff	___aodiv@quotient+3,?___aodiv+3
  8626  002348  C029  F017         	movff	___aodiv@quotient+4,?___aodiv+4
  8627  00234C  C02A  F018         	movff	___aodiv@quotient+5,?___aodiv+5
  8628  002350  C02B  F019         	movff	___aodiv@quotient+6,?___aodiv+6
  8629  002354  C02C  F01A         	movff	___aodiv@quotient+7,?___aodiv+7
  8630  002358  0012               	return		;funcret
  8631  00235A                     __end_of___aodiv:
  8632                           	opt callstack 0
  8633                           
  8634 ;; *************** function _ctoa *****************
  8635 ;; Defined at:
  8636 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  8639 ;;		 -> vsnprintf@f(6), 
  8640 ;;  c               1   47[COMRAM] unsigned char 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  w               2   48[COMRAM] int 
  8643 ;;  l               2    0        int 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  2   45[COMRAM] int 
  8646 ;; Registers used:
  8647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8656 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8657 ;;Total ram usage:        5 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; Hardware stack levels required when called:    9
  8660 ;; This function calls:
  8661 ;;		_pad
  8662 ;; This function is called by:
  8663 ;;		_vfpfcnvrt
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text20
  8668  00335E                     __ptext20:
  8669                           	opt callstack 0
  8670  00335E                     _ctoa:
  8671                           	opt callstack 17
  8672  00335E                     
  8673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8674  00335E  503F               	movf	_width^0,w,c
  8675  003360  1040               	iorwf	(_width+1)^0,w,c
  8676  003362  A4D8               	btfss	status,2,c
  8677  003364  EFB6  F019         	goto	u5021
  8678  003368  EFB8  F019         	goto	u5020
  8679  00336C                     u5021:
  8680  00336C  EFBE  F019         	goto	l5023
  8681  003370                     u5020:
  8682  003370  C03F  F031         	movff	_width,ctoa@w
  8683  003374  C040  F032         	movff	_width+1,ctoa@w+1
  8684  003378  EFC4  F019         	goto	l5025
  8685  00337C                     l5023:
  8686  00337C  0EFF               	movlw	255
  8687  00337E  243F               	addwf	_width^0,w,c
  8688  003380  6E31               	movwf	ctoa@w^0,c
  8689  003382  0EFF               	movlw	255
  8690  003384  2040               	addwfc	(_width+1)^0,w,c
  8691  003386  6E32               	movwf	(ctoa@w+1)^0,c
  8692  003388                     l5025:
  8693                           
  8694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8695  003388  C030  F0CB         	movff	ctoa@c,_dbuf
  8696  00338C                     
  8697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8698  00338C  0E00               	movlw	0
  8699  00338E  0100               	movlb	0	; () banked
  8700  003390  6FCC               	movwf	(_dbuf+1)& (0+255),b
  8701  003392                     
  8702                           ; BSR set to: 0
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8704  003392  C02E  F023         	movff	ctoa@fp,pad@fp
  8705  003396  C02F  F024         	movff	ctoa@fp+1,pad@fp+1
  8706  00339A  0ECB               	movlw	low _dbuf
  8707  00339C  6E25               	movwf	pad@buf^0,c
  8708  00339E  0E00               	movlw	high _dbuf
  8709  0033A0  6E26               	movwf	(pad@buf+1)^0,c
  8710  0033A2  C031  F027         	movff	ctoa@w,pad@p
  8711  0033A6  C032  F028         	movff	ctoa@w+1,pad@p+1
  8712  0033AA  EC54  F018         	call	_pad	;wreg free
  8713  0033AE  C023  F02E         	movff	?_pad,?_ctoa
  8714  0033B2  C024  F02F         	movff	?_pad+1,?_ctoa+1
  8715  0033B6  0012               	return		;funcret
  8716  0033B8                     __end_of_ctoa:
  8717                           	opt callstack 0
  8718                           
  8719 ;; *************** function _pad *****************
  8720 ;; Defined at:
  8721 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  8724 ;;		 -> vsnprintf@f(6), 
  8725 ;;  buf             2   36[COMRAM] PTR unsigned char 
  8726 ;;		 -> dbuf(32), 
  8727 ;;  p               2   38[COMRAM] int 
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;  w               2   43[COMRAM] int 
  8730 ;;  i               2   41[COMRAM] int 
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  2   34[COMRAM] int 
  8733 ;; Registers used:
  8734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8740 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8741 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;Total ram usage:       11 bytes
  8745 ;; Hardware stack levels used:    1
  8746 ;; Hardware stack levels required when called:    8
  8747 ;; This function calls:
  8748 ;;		_fputc
  8749 ;;		_fputs
  8750 ;;		_strlen
  8751 ;; This function is called by:
  8752 ;;		_ctoa
  8753 ;;		_dtoa
  8754 ;;		_otoa
  8755 ;;		_utoa
  8756 ;;		_xtoa
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text21
  8761  0030A8                     __ptext21:
  8762                           	opt callstack 0
  8763  0030A8                     _pad:
  8764                           	opt callstack 17
  8765  0030A8                     
  8766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8767  0030A8  A043               	btfss	_flags^0,0,c
  8768  0030AA  EF59  F018         	goto	u4651
  8769  0030AE  EF5B  F018         	goto	u4650
  8770  0030B2                     u4651:
  8771  0030B2  EF65  F018         	goto	l4831
  8772  0030B6                     u4650:
  8773  0030B6                     
  8774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8775  0030B6  C025  F01C         	movff	pad@buf,fputs@s
  8776  0030BA  C026  F01D         	movff	pad@buf+1,fputs@s+1
  8777  0030BE  C023  F01E         	movff	pad@fp,fputs@fp
  8778  0030C2  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  8779  0030C6  EC97  F01A         	call	_fputs	;wreg free
  8780  0030CA                     l4831:
  8781                           
  8782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8783  0030CA  BE28               	btfsc	(pad@p+1)^0,7,c
  8784  0030CC  EF6A  F018         	goto	u4661
  8785  0030D0  EF6C  F018         	goto	u4660
  8786  0030D4                     u4661:
  8787  0030D4  EF72  F018         	goto	l4835
  8788  0030D8                     u4660:
  8789  0030D8  C027  F02C         	movff	pad@p,pad@w
  8790  0030DC  C028  F02D         	movff	pad@p+1,pad@w+1
  8791  0030E0  EF76  F018         	goto	l452
  8792  0030E4                     l4835:
  8793  0030E4  0E00               	movlw	0
  8794  0030E6  6E2D               	movwf	(pad@w+1)^0,c
  8795  0030E8  0E00               	movlw	0
  8796  0030EA  6E2C               	movwf	pad@w^0,c
  8797  0030EC                     l452:
  8798                           
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8800  0030EC  0E00               	movlw	0
  8801  0030EE  6E2B               	movwf	(pad@i+1)^0,c
  8802  0030F0  0E00               	movlw	0
  8803  0030F2  6E2A               	movwf	pad@i^0,c
  8804                           
  8805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8806  0030F4  EF88  F018         	goto	l4841
  8807  0030F8                     l4837:
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8810  0030F8  0E00               	movlw	0
  8811  0030FA  6E14               	movwf	(fputc@c+1)^0,c
  8812  0030FC  0E20               	movlw	32
  8813  0030FE  6E13               	movwf	fputc@c^0,c
  8814  003100  C023  F015         	movff	pad@fp,fputc@fp
  8815  003104  C024  F016         	movff	pad@fp+1,fputc@fp+1
  8816  003108  EC8D  F017         	call	_fputc	;wreg free
  8817  00310C                     
  8818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8819  00310C  4A2A               	infsnz	pad@i^0,f,c
  8820  00310E  2A2B               	incf	(pad@i+1)^0,f,c
  8821  003110                     l4841:
  8822                           
  8823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8824  003110  502C               	movf	pad@w^0,w,c
  8825  003112  5C2A               	subwf	pad@i^0,w,c
  8826  003114  502B               	movf	(pad@i+1)^0,w,c
  8827  003116  0A80               	xorlw	128
  8828  003118  6E29               	movwf	??_pad^0,c
  8829  00311A  502D               	movf	(pad@w+1)^0,w,c
  8830  00311C  0A80               	xorlw	128
  8831  00311E  5829               	subwfb	??_pad^0,w,c
  8832  003120  A0D8               	btfss	status,0,c
  8833  003122  EF95  F018         	goto	u4671
  8834  003126  EF97  F018         	goto	u4670
  8835  00312A                     u4671:
  8836  00312A  EF7C  F018         	goto	l4837
  8837  00312E                     u4670:
  8838  00312E                     
  8839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8840  00312E  B043               	btfsc	_flags^0,0,c
  8841  003130  EF9C  F018         	goto	u4681
  8842  003134  EF9E  F018         	goto	u4680
  8843  003138                     u4681:
  8844  003138  EFA8  F018         	goto	l4845
  8845  00313C                     u4680:
  8846  00313C                     
  8847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8848  00313C  C025  F01C         	movff	pad@buf,fputs@s
  8849  003140  C026  F01D         	movff	pad@buf+1,fputs@s+1
  8850  003144  C023  F01E         	movff	pad@fp,fputs@fp
  8851  003148  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  8852  00314C  EC97  F01A         	call	_fputs	;wreg free
  8853  003150                     l4845:
  8854                           
  8855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8856  003150  C025  F013         	movff	pad@buf,strlen@s
  8857  003154  C026  F014         	movff	pad@buf+1,strlen@s+1
  8858  003158  ECAA  F01B         	call	_strlen	;wreg free
  8859  00315C  502C               	movf	pad@w^0,w,c
  8860  00315E  2413               	addwf	?_strlen^0,w,c
  8861  003160  6E23               	movwf	?_pad^0,c
  8862  003162  502D               	movf	(pad@w+1)^0,w,c
  8863  003164  2014               	addwfc	(?_strlen+1)^0,w,c
  8864  003166  6E24               	movwf	(?_pad+1)^0,c
  8865  003168  0012               	return		;funcret
  8866  00316A                     __end_of_pad:
  8867                           	opt callstack 0
  8868                           
  8869 ;; *************** function _strlen *****************
  8870 ;; Defined at:
  8871 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  s               2   18[COMRAM] PTR const unsigned char 
  8874 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), codigo_digital(2), 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  a               2   20[COMRAM] PTR const unsigned char 
  8877 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), codigo_digital(2), 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  2   18[COMRAM] unsigned int 
  8880 ;; Registers used:
  8881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8891 ;;Total ram usage:        4 bytes
  8892 ;; Hardware stack levels used:    1
  8893 ;; Hardware stack levels required when called:    5
  8894 ;; This function calls:
  8895 ;;		Nothing
  8896 ;; This function is called by:
  8897 ;;		_pad
  8898 ;;		_stoa
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text22
  8903  003754                     __ptext22:
  8904                           	opt callstack 0
  8905  003754                     _strlen:
  8906                           	opt callstack 19
  8907  003754  C013  F015         	movff	strlen@s,strlen@a
  8908  003758  C014  F016         	movff	strlen@s+1,strlen@a+1
  8909  00375C  EFB2  F01B         	goto	l4815
  8910  003760                     l4813:
  8911  003760  4A13               	infsnz	strlen@s^0,f,c
  8912  003762  2A14               	incf	(strlen@s+1)^0,f,c
  8913  003764                     l4815:
  8914  003764  C013  FFD9         	movff	strlen@s,fsr2l
  8915  003768  C014  FFDA         	movff	strlen@s+1,fsr2h
  8916  00376C  50DF               	movf	indf2,w,c
  8917  00376E  A4D8               	btfss	status,2,c
  8918  003770  EFBC  F01B         	goto	u4611
  8919  003774  EFBE  F01B         	goto	u4610
  8920  003778                     u4611:
  8921  003778  EFB0  F01B         	goto	l4813
  8922  00377C                     u4610:
  8923  00377C  5015               	movf	strlen@a^0,w,c
  8924  00377E  5C13               	subwf	strlen@s^0,w,c
  8925  003780  6E13               	movwf	?_strlen^0,c
  8926  003782  5016               	movf	(strlen@a+1)^0,w,c
  8927  003784  5814               	subwfb	(strlen@s+1)^0,w,c
  8928  003786  6E14               	movwf	(?_strlen+1)^0,c
  8929  003788  0012               	return		;funcret
  8930  00378A                     __end_of_strlen:
  8931                           	opt callstack 0
  8932                           
  8933 ;; *************** function _fputs *****************
  8934 ;; Defined at:
  8935 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  s               2   27[COMRAM] PTR const unsigned char 
  8938 ;;		 -> dbuf(32), 
  8939 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8940 ;;		 -> vsnprintf@f(6), 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  i               2   32[COMRAM] int 
  8943 ;;  c               1   31[COMRAM] unsigned char 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  2   27[COMRAM] int 
  8946 ;; Registers used:
  8947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8954 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8956 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8957 ;;Total ram usage:        7 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    7
  8960 ;; This function calls:
  8961 ;;		_fputc
  8962 ;; This function is called by:
  8963 ;;		_pad
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text23
  8968  00352E                     __ptext23:
  8969                           	opt callstack 0
  8970  00352E                     _fputs:
  8971                           	opt callstack 17
  8972  00352E  0E00               	movlw	0
  8973  003530  6E22               	movwf	(fputs@i+1)^0,c
  8974  003532  0E00               	movlw	0
  8975  003534  6E21               	movwf	fputs@i^0,c
  8976  003536  EFA8  F01A         	goto	l4809
  8977  00353A                     l4805:
  8978  00353A  C020  F013         	movff	fputs@c,fputc@c
  8979  00353E  6A14               	clrf	(fputc@c+1)^0,c
  8980  003540  C01E  F015         	movff	fputs@fp,fputc@fp
  8981  003544  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  8982  003548  EC8D  F017         	call	_fputc	;wreg free
  8983  00354C  4A21               	infsnz	fputs@i^0,f,c
  8984  00354E  2A22               	incf	(fputs@i+1)^0,f,c
  8985  003550                     l4809:
  8986  003550  5021               	movf	fputs@i^0,w,c
  8987  003552  241C               	addwf	fputs@s^0,w,c
  8988  003554  6ED9               	movwf	fsr2l,c
  8989  003556  5022               	movf	(fputs@i+1)^0,w,c
  8990  003558  201D               	addwfc	(fputs@s+1)^0,w,c
  8991  00355A  6EDA               	movwf	fsr2h,c
  8992  00355C  50DF               	movf	indf2,w,c
  8993  00355E  6E20               	movwf	fputs@c^0,c
  8994  003560  5020               	movf	fputs@c^0,w,c
  8995  003562  A4D8               	btfss	status,2,c
  8996  003564  EFB6  F01A         	goto	u4601
  8997  003568  EFB8  F01A         	goto	u4600
  8998  00356C                     u4601:
  8999  00356C  EF9D  F01A         	goto	l4805
  9000  003570                     u4600:
  9001  003570  0012               	return		;funcret
  9002  003572                     __end_of_fputs:
  9003                           	opt callstack 0
  9004                           
  9005 ;; *************** function _fputc *****************
  9006 ;; Defined at:
  9007 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  c               2   18[COMRAM] int 
  9010 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  9011 ;;		 -> vsnprintf@f(6), 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;		None
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  2   18[COMRAM] int 
  9016 ;; Registers used:
  9017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;Total ram usage:        9 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    6
  9030 ;; This function calls:
  9031 ;;		_putch
  9032 ;; This function is called by:
  9033 ;;		_pad
  9034 ;;		_stoa
  9035 ;;		_vfpfcnvrt
  9036 ;;		_fputs
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text24
  9041  002F1A                     __ptext24:
  9042                           	opt callstack 0
  9043  002F1A                     _fputc:
  9044                           	opt callstack 17
  9045  002F1A  5015               	movf	fputc@fp^0,w,c
  9046  002F1C  1016               	iorwf	(fputc@fp+1)^0,w,c
  9047  002F1E  B4D8               	btfsc	status,2,c
  9048  002F20  EF94  F017         	goto	u4561
  9049  002F24  EF96  F017         	goto	u4560
  9050  002F28                     u4561:
  9051  002F28  EF9F  F017         	goto	l4793
  9052  002F2C                     u4560:
  9053  002F2C  5015               	movf	fputc@fp^0,w,c
  9054  002F2E  1016               	iorwf	(fputc@fp+1)^0,w,c
  9055  002F30  A4D8               	btfss	status,2,c
  9056  002F32  EF9D  F017         	goto	u4571
  9057  002F36  EF9F  F017         	goto	u4570
  9058  002F3A                     u4571:
  9059  002F3A  EFA4  F017         	goto	l4795
  9060  002F3E                     u4570:
  9061  002F3E                     l4793:
  9062  002F3E  5013               	movf	fputc@c^0,w,c
  9063  002F40  ECE7  F01C         	call	_putch
  9064  002F44  EFF1  F017         	goto	l1406
  9065  002F48                     l4795:
  9066  002F48  EE20 F004          	lfsr	2,4
  9067  002F4C  5015               	movf	fputc@fp^0,w,c
  9068  002F4E  26D9               	addwf	fsr2l,f,c
  9069  002F50  5016               	movf	(fputc@fp+1)^0,w,c
  9070  002F52  22DA               	addwfc	fsr2h,f,c
  9071  002F54  50DE               	movf	postinc2,w,c
  9072  002F56  10DE               	iorwf	postinc2,w,c
  9073  002F58  B4D8               	btfsc	status,2,c
  9074  002F5A  EFB1  F017         	goto	u4581
  9075  002F5E  EFB3  F017         	goto	u4580
  9076  002F62                     u4581:
  9077  002F62  EFCE  F017         	goto	l4799
  9078  002F66                     u4580:
  9079  002F66  EE20 F004          	lfsr	2,4
  9080  002F6A  5015               	movf	fputc@fp^0,w,c
  9081  002F6C  26D9               	addwf	fsr2l,f,c
  9082  002F6E  5016               	movf	(fputc@fp+1)^0,w,c
  9083  002F70  22DA               	addwfc	fsr2h,f,c
  9084  002F72  EE10 F002          	lfsr	1,2
  9085  002F76  5015               	movf	fputc@fp^0,w,c
  9086  002F78  26E1               	addwf	fsr1l,f,c
  9087  002F7A  5016               	movf	(fputc@fp+1)^0,w,c
  9088  002F7C  22E2               	addwfc	fsr1h,f,c
  9089  002F7E  50DE               	movf	postinc2,w,c
  9090  002F80  5CE6               	subwf	postinc1,w,c
  9091  002F82  50E6               	movf	postinc1,w,c
  9092  002F84  0A80               	xorlw	128
  9093  002F86  6E1B               	movwf	(??_fputc+4)^0,c
  9094  002F88  50DE               	movf	postinc2,w,c
  9095  002F8A  0A80               	xorlw	128
  9096  002F8C  581B               	subwfb	(??_fputc+4)^0,w,c
  9097  002F8E  B0D8               	btfsc	status,0,c
  9098  002F90  EFCC  F017         	goto	u4591
  9099  002F94  EFCE  F017         	goto	u4590
  9100  002F98                     u4591:
  9101  002F98  EFF1  F017         	goto	l1406
  9102  002F9C                     u4590:
  9103  002F9C                     l4799:
  9104  002F9C  EE20 F002          	lfsr	2,2
  9105  002FA0  5015               	movf	fputc@fp^0,w,c
  9106  002FA2  26D9               	addwf	fsr2l,f,c
  9107  002FA4  5016               	movf	(fputc@fp+1)^0,w,c
  9108  002FA6  22DA               	addwfc	fsr2h,f,c
  9109  002FA8  CFDE F017          	movff	postinc2,??_fputc
  9110  002FAC  CFDD F018          	movff	postdec2,??_fputc+1
  9111  002FB0  C015  FFD9         	movff	fputc@fp,fsr2l
  9112  002FB4  C016  FFDA         	movff	fputc@fp+1,fsr2h
  9113  002FB8  CFDE F019          	movff	postinc2,??_fputc+2
  9114  002FBC  CFDD F01A          	movff	postdec2,??_fputc+3
  9115  002FC0  5017               	movf	??_fputc^0,w,c
  9116  002FC2  2419               	addwf	(??_fputc+2)^0,w,c
  9117  002FC4  6ED9               	movwf	fsr2l,c
  9118  002FC6  5018               	movf	(??_fputc+1)^0,w,c
  9119  002FC8  201A               	addwfc	(??_fputc+3)^0,w,c
  9120  002FCA  6EDA               	movwf	fsr2h,c
  9121  002FCC  C013  FFDF         	movff	fputc@c,indf2
  9122  002FD0  EE20 F002          	lfsr	2,2
  9123  002FD4  5015               	movf	fputc@fp^0,w,c
  9124  002FD6  26D9               	addwf	fsr2l,f,c
  9125  002FD8  5016               	movf	(fputc@fp+1)^0,w,c
  9126  002FDA  22DA               	addwfc	fsr2h,f,c
  9127  002FDC  2ADE               	incf	postinc2,f,c
  9128  002FDE  0E00               	movlw	0
  9129  002FE0  22DD               	addwfc	postdec2,f,c
  9130  002FE2                     l1406:
  9131  002FE2  0012               	return		;funcret
  9132  002FE4                     __end_of_fputc:
  9133                           	opt callstack 0
  9134                           
  9135 ;; *************** function _putch *****************
  9136 ;; Defined at:
  9137 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  c               1    wreg     unsigned char 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  c               1    0[COMRAM] unsigned char 
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  1    wreg      void 
  9144 ;; Registers used:
  9145 ;;		wreg
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9155 ;;Total ram usage:        0 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; Hardware stack levels required when called:    5
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_fputc
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text25
  9166  0039CE                     __ptext25:
  9167                           	opt callstack 0
  9168  0039CE                     _putch:
  9169                           	opt callstack 17
  9170  0039CE  0012               	return		;funcret
  9171  0039D0                     __end_of_putch:
  9172                           	opt callstack 0
  9173                           
  9174 ;; *************** function _atoi *****************
  9175 ;; Defined at:
  9176 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  s               2   25[COMRAM] PTR const unsigned char 
  9179 ;;		 -> STR_1(17), 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  n               2   38[COMRAM] int 
  9182 ;;  neg             2   31[COMRAM] int 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  2   25[COMRAM] int 
  9185 ;; Registers used:
  9186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9195 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9196 ;;Total ram usage:       15 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    6
  9199 ;; This function calls:
  9200 ;;		___wmul
  9201 ;;		_isdigit
  9202 ;;		_isspace
  9203 ;; This function is called by:
  9204 ;;		_vfpfcnvrt
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text26
  9209  002038                     __ptext26:
  9210                           	opt callstack 0
  9211  002038                     _atoi:
  9212                           	opt callstack 20
  9213  002038  0E00               	movlw	0
  9214  00203A  6E28               	movwf	(atoi@n+1)^0,c
  9215  00203C  0E00               	movlw	0
  9216  00203E  6E27               	movwf	atoi@n^0,c
  9217  002040  0E00               	movlw	0
  9218  002042  6E21               	movwf	(atoi@neg+1)^0,c
  9219  002044  0E00               	movlw	0
  9220  002046  6E20               	movwf	atoi@neg^0,c
  9221  002048  EF28  F010         	goto	l5291
  9222  00204C                     l5289:
  9223  00204C  4A1A               	infsnz	atoi@s^0,f,c
  9224  00204E  2A1B               	incf	(atoi@s+1)^0,f,c
  9225  002050                     l5291:
  9226  002050  0E01               	movlw	1
  9227  002052  6E26               	movwf	_atoi$1847^0,c
  9228  002054  C01A  FFF6         	movff	atoi@s,tblptrl
  9229  002058  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9230  00205C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9231  00205C  6AF8               	clrf	tblptru,c
  9232  00205E                     	endif
  9233  00205E                     	if	0	;tblptru may be non-zero
  9234  00205E                     	endif
  9235  00205E  0008               	tblrd		*
  9236  002060  50F5               	movf	tablat,w,c
  9237  002062  0A20               	xorlw	32
  9238  002064  B4D8               	btfsc	status,2,c
  9239  002066  EF37  F010         	goto	u5611
  9240  00206A  EF39  F010         	goto	u5610
  9241  00206E                     u5611:
  9242  00206E  EF57  F010         	goto	l5299
  9243  002072                     u5610:
  9244  002072  0EF7               	movlw	247
  9245  002074  6E1C               	movwf	??_atoi^0,c
  9246  002076  0EFF               	movlw	255
  9247  002078  6E1D               	movwf	(??_atoi+1)^0,c
  9248  00207A  C01A  FFF6         	movff	atoi@s,tblptrl
  9249  00207E  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9250  002082                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9251  002082  6AF8               	clrf	tblptru,c
  9252  002084                     	endif
  9253  002084                     	if	0	;tblptru may be non-zero
  9254  002084                     	endif
  9255  002084  0008               	tblrd		*
  9256  002086  50F5               	movf	tablat,w,c
  9257  002088  6E1E               	movwf	(??_atoi+2)^0,c
  9258  00208A  6A1F               	clrf	(??_atoi+3)^0,c
  9259  00208C  501C               	movf	??_atoi^0,w,c
  9260  00208E  261E               	addwf	(??_atoi+2)^0,f,c
  9261  002090  501D               	movf	(??_atoi+1)^0,w,c
  9262  002092  221F               	addwfc	(??_atoi+3)^0,f,c
  9263  002094  501F               	movf	(??_atoi+3)^0,w,c
  9264  002096  E109               	bnz	u5620
  9265  002098  0E05               	movlw	5
  9266  00209A  5C1E               	subwf	(??_atoi+2)^0,w,c
  9267  00209C  A0D8               	btfss	status,0,c
  9268  00209E  EF53  F010         	goto	u5621
  9269  0020A2  EF55  F010         	goto	u5620
  9270  0020A6                     u5621:
  9271  0020A6  EF57  F010         	goto	l5299
  9272  0020AA                     u5620:
  9273  0020AA  0E00               	movlw	0
  9274  0020AC  6E26               	movwf	_atoi$1847^0,c
  9275  0020AE                     l5299:
  9276  0020AE  C026  F022         	movff	_atoi$1847,_atoi$1846
  9277  0020B2  6A23               	clrf	(_atoi$1846+1)^0,c
  9278  0020B4  5022               	movf	_atoi$1846^0,w,c
  9279  0020B6  1023               	iorwf	(_atoi$1846+1)^0,w,c
  9280  0020B8  A4D8               	btfss	status,2,c
  9281  0020BA  EF61  F010         	goto	u5631
  9282  0020BE  EF63  F010         	goto	u5630
  9283  0020C2                     u5631:
  9284  0020C2  EF26  F010         	goto	l5289
  9285  0020C6                     u5630:
  9286  0020C6  EF6D  F010         	goto	l5309
  9287  0020CA                     l5305:
  9288  0020CA  0E00               	movlw	0
  9289  0020CC  6E21               	movwf	(atoi@neg+1)^0,c
  9290  0020CE  0E01               	movlw	1
  9291  0020D0  6E20               	movwf	atoi@neg^0,c
  9292  0020D2                     l5307:
  9293  0020D2  4A1A               	infsnz	atoi@s^0,f,c
  9294  0020D4  2A1B               	incf	(atoi@s+1)^0,f,c
  9295  0020D6  EFA4  F010         	goto	l5315
  9296  0020DA                     l5309:
  9297  0020DA  C01A  FFF6         	movff	atoi@s,tblptrl
  9298  0020DE  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9299  0020E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9300  0020E2  6AF8               	clrf	tblptru,c
  9301  0020E4                     	endif
  9302  0020E4                     	if	0	;tblptru may be non-zero
  9303  0020E4                     	endif
  9304  0020E4  0008               	tblrd		*
  9305  0020E6  50F5               	movf	tablat,w,c
  9306  0020E8  6E1C               	movwf	??_atoi^0,c
  9307  0020EA  6A1D               	clrf	(??_atoi+1)^0,c
  9308                           
  9309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9310                           ; Switch size 1, requested type "simple"
  9311                           ; Number of cases is 1, Range of values is 0 to 0
  9312                           ; switch strategies available:
  9313                           ; Name         Instructions Cycles
  9314                           ; simple_byte            4     3 (average)
  9315                           ;	Chosen strategy is simple_byte
  9316  0020EC  501D               	movf	(??_atoi+1)^0,w,c
  9317  0020EE  0A00               	xorlw	0	; case 0
  9318  0020F0  B4D8               	btfsc	status,2,c
  9319  0020F2  EF7D  F010         	goto	l6269
  9320  0020F6  EFA4  F010         	goto	l5315
  9321  0020FA                     l6269:
  9322                           
  9323                           ; Switch size 1, requested type "simple"
  9324                           ; Number of cases is 2, Range of values is 43 to 45
  9325                           ; switch strategies available:
  9326                           ; Name         Instructions Cycles
  9327                           ; simple_byte            7     4 (average)
  9328                           ;	Chosen strategy is simple_byte
  9329  0020FA  501C               	movf	??_atoi^0,w,c
  9330  0020FC  0A2B               	xorlw	43	; case 43
  9331  0020FE  B4D8               	btfsc	status,2,c
  9332  002100  EF69  F010         	goto	l5307
  9333  002104  0A06               	xorlw	6	; case 45
  9334  002106  B4D8               	btfsc	status,2,c
  9335  002108  EF65  F010         	goto	l5305
  9336  00210C  EFA4  F010         	goto	l5315
  9337  002110                     l5311:
  9338  002110  C027  F013         	movff	atoi@n,___wmul@multiplier
  9339  002114  C028  F014         	movff	atoi@n+1,___wmul@multiplier+1
  9340  002118  0E00               	movlw	0
  9341  00211A  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  9342  00211C  0E0A               	movlw	10
  9343  00211E  6E15               	movwf	___wmul@multiplicand^0,c
  9344  002120  EC52  F01C         	call	___wmul	;wreg free
  9345  002124  C01A  FFF6         	movff	atoi@s,tblptrl
  9346  002128  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9347  00212C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9348  00212C  6AF8               	clrf	tblptru,c
  9349  00212E                     	endif
  9350  00212E                     	if	0	;tblptru may be non-zero
  9351  00212E                     	endif
  9352  00212E  0008               	tblrd		*
  9353  002130  50F5               	movf	tablat,w,c
  9354  002132  5E13               	subwf	?___wmul^0,f,c
  9355  002134  0E00               	movlw	0
  9356  002136  5A14               	subwfb	(?___wmul+1)^0,f,c
  9357  002138  0E30               	movlw	48
  9358  00213A  2413               	addwf	?___wmul^0,w,c
  9359  00213C  6E27               	movwf	atoi@n^0,c
  9360  00213E  0E00               	movlw	0
  9361  002140  2014               	addwfc	(?___wmul+1)^0,w,c
  9362  002142  6E28               	movwf	(atoi@n+1)^0,c
  9363  002144  EF69  F010         	goto	l5307
  9364  002148                     l5315:
  9365  002148  0ED0               	movlw	208
  9366  00214A  6E1C               	movwf	??_atoi^0,c
  9367  00214C  0EFF               	movlw	255
  9368  00214E  6E1D               	movwf	(??_atoi+1)^0,c
  9369  002150  C01A  FFF6         	movff	atoi@s,tblptrl
  9370  002154  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9371  002158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9372  002158  6AF8               	clrf	tblptru,c
  9373  00215A                     	endif
  9374  00215A                     	if	0	;tblptru may be non-zero
  9375  00215A                     	endif
  9376  00215A  0008               	tblrd		*
  9377  00215C  50F5               	movf	tablat,w,c
  9378  00215E  6E1E               	movwf	(??_atoi+2)^0,c
  9379  002160  6A1F               	clrf	(??_atoi+3)^0,c
  9380  002162  501C               	movf	??_atoi^0,w,c
  9381  002164  261E               	addwf	(??_atoi+2)^0,f,c
  9382  002166  501D               	movf	(??_atoi+1)^0,w,c
  9383  002168  221F               	addwfc	(??_atoi+3)^0,f,c
  9384  00216A  501F               	movf	(??_atoi+3)^0,w,c
  9385  00216C  E10A               	bnz	u5640
  9386  00216E  0E0A               	movlw	10
  9387  002170  5C1E               	subwf	(??_atoi+2)^0,w,c
  9388  002172  A0D8               	btfss	status,0,c
  9389  002174  EFBE  F010         	goto	u5641
  9390  002178  EFC1  F010         	goto	u5640
  9391  00217C                     u5641:
  9392  00217C  0E01               	movlw	1
  9393  00217E  EFC2  F010         	goto	u5650
  9394  002182                     u5640:
  9395  002182  0E00               	movlw	0
  9396  002184                     u5650:
  9397  002184  6E24               	movwf	_atoi$1848^0,c
  9398  002186  6A25               	clrf	(_atoi$1848+1)^0,c
  9399  002188  5024               	movf	_atoi$1848^0,w,c
  9400  00218A  1025               	iorwf	(_atoi$1848+1)^0,w,c
  9401  00218C  A4D8               	btfss	status,2,c
  9402  00218E  EFCB  F010         	goto	u5661
  9403  002192  EFCD  F010         	goto	u5660
  9404  002196                     u5661:
  9405  002196  EF88  F010         	goto	l5311
  9406  00219A                     u5660:
  9407  00219A  5020               	movf	atoi@neg^0,w,c
  9408  00219C  1021               	iorwf	(atoi@neg+1)^0,w,c
  9409  00219E  A4D8               	btfss	status,2,c
  9410  0021A0  EFD4  F010         	goto	u5671
  9411  0021A4  EFD6  F010         	goto	u5670
  9412  0021A8                     u5671:
  9413  0021A8  EFE4  F010         	goto	l1365
  9414  0021AC                     u5670:
  9415  0021AC  C027  F01C         	movff	atoi@n,??_atoi
  9416  0021B0  C028  F01D         	movff	atoi@n+1,??_atoi+1
  9417  0021B4  1E1C               	comf	??_atoi^0,f,c
  9418  0021B6  1E1D               	comf	(??_atoi+1)^0,f,c
  9419  0021B8  4A1C               	infsnz	??_atoi^0,f,c
  9420  0021BA  2A1D               	incf	(??_atoi+1)^0,f,c
  9421  0021BC  C01C  F01A         	movff	??_atoi,?_atoi
  9422  0021C0  C01D  F01B         	movff	??_atoi+1,?_atoi+1
  9423  0021C4  EFE8  F010         	goto	l1368
  9424  0021C8                     l1365:
  9425  0021C8  C027  F01A         	movff	atoi@n,?_atoi
  9426  0021CC  C028  F01B         	movff	atoi@n+1,?_atoi+1
  9427  0021D0                     l1368:
  9428  0021D0  0012               	return		;funcret
  9429  0021D2                     __end_of_atoi:
  9430                           	opt callstack 0
  9431                           
  9432 ;; *************** function _isspace *****************
  9433 ;; Defined at:
  9434 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  c               2   18[COMRAM] int 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  2   18[COMRAM] int 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9450 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;Total ram usage:        7 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    5
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		_atoi
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           	psect	text27
  9463  0033B8                     __ptext27:
  9464                           	opt callstack 0
  9465  0033B8                     _isspace:
  9466                           	opt callstack 20
  9467  0033B8  0E01               	movlw	1
  9468  0033BA  6E19               	movwf	_isspace$1873^0,c
  9469  0033BC  0E20               	movlw	32
  9470  0033BE  1813               	xorwf	isspace@c^0,w,c
  9471  0033C0  1014               	iorwf	(isspace@c+1)^0,w,c
  9472  0033C2  B4D8               	btfsc	status,2,c
  9473  0033C4  EFE6  F019         	goto	u4991
  9474  0033C8  EFE8  F019         	goto	u4990
  9475  0033CC                     u4991:
  9476  0033CC  EF01  F01A         	goto	l5007
  9477  0033D0                     u4990:
  9478  0033D0  0EF7               	movlw	247
  9479  0033D2  6E15               	movwf	??_isspace^0,c
  9480  0033D4  0EFF               	movlw	255
  9481  0033D6  6E16               	movwf	(??_isspace+1)^0,c
  9482  0033D8  C013  F017         	movff	isspace@c,??_isspace+2
  9483  0033DC  C014  F018         	movff	isspace@c+1,??_isspace+3
  9484  0033E0  5015               	movf	??_isspace^0,w,c
  9485  0033E2  2617               	addwf	(??_isspace+2)^0,f,c
  9486  0033E4  5016               	movf	(??_isspace+1)^0,w,c
  9487  0033E6  2218               	addwfc	(??_isspace+3)^0,f,c
  9488  0033E8  5018               	movf	(??_isspace+3)^0,w,c
  9489  0033EA  E109               	bnz	u5000
  9490  0033EC  0E05               	movlw	5
  9491  0033EE  5C17               	subwf	(??_isspace+2)^0,w,c
  9492  0033F0  A0D8               	btfss	status,0,c
  9493  0033F2  EFFD  F019         	goto	u5001
  9494  0033F6  EFFF  F019         	goto	u5000
  9495  0033FA                     u5001:
  9496  0033FA  EF01  F01A         	goto	l5007
  9497  0033FE                     u5000:
  9498  0033FE  0E00               	movlw	0
  9499  003400  6E19               	movwf	_isspace$1873^0,c
  9500  003402                     l5007:
  9501  003402  C019  F013         	movff	_isspace$1873,?_isspace
  9502  003406  6A14               	clrf	(?_isspace+1)^0,c
  9503  003408  0012               	return		;funcret
  9504  00340A                     __end_of_isspace:
  9505                           	opt callstack 0
  9506                           
  9507 ;; *************** function _isdigit *****************
  9508 ;; Defined at:
  9509 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  c               2   18[COMRAM] int 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  2   18[COMRAM] int 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;Total ram usage:        6 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    5
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_vfpfcnvrt
  9534 ;;		_atoi
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text28
  9539  00371C                     __ptext28:
  9540                           	opt callstack 0
  9541  00371C                     _isdigit:
  9542                           	opt callstack 21
  9543  00371C  0ED0               	movlw	208
  9544  00371E  6E15               	movwf	??_isdigit^0,c
  9545  003720  0EFF               	movlw	255
  9546  003722  6E16               	movwf	(??_isdigit+1)^0,c
  9547  003724  C013  F017         	movff	isdigit@c,??_isdigit+2
  9548  003728  C014  F018         	movff	isdigit@c+1,??_isdigit+3
  9549  00372C  5015               	movf	??_isdigit^0,w,c
  9550  00372E  2617               	addwf	(??_isdigit+2)^0,f,c
  9551  003730  5016               	movf	(??_isdigit+1)^0,w,c
  9552  003732  2218               	addwfc	(??_isdigit+3)^0,f,c
  9553  003734  5018               	movf	(??_isdigit+3)^0,w,c
  9554  003736  E10A               	bnz	u4770
  9555  003738  0E0A               	movlw	10
  9556  00373A  5C17               	subwf	(??_isdigit+2)^0,w,c
  9557  00373C  A0D8               	btfss	status,0,c
  9558  00373E  EFA3  F01B         	goto	u4771
  9559  003742  EFA6  F01B         	goto	u4770
  9560  003746                     u4771:
  9561  003746  0E01               	movlw	1
  9562  003748  EFA7  F01B         	goto	u4780
  9563  00374C                     u4770:
  9564  00374C  0E00               	movlw	0
  9565  00374E                     u4780:
  9566  00374E  6E13               	movwf	?_isdigit^0,c
  9567  003750  6A14               	clrf	(?_isdigit+1)^0,c
  9568  003752  0012               	return		;funcret
  9569  003754                     __end_of_isdigit:
  9570                           	opt callstack 0
  9571                           
  9572 ;; *************** function ___wmul *****************
  9573 ;; Defined at:
  9574 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  multiplier      2   18[COMRAM] unsigned int 
  9577 ;;  multiplicand    2   20[COMRAM] unsigned int 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  product         2   22[COMRAM] unsigned int 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  2   18[COMRAM] unsigned int 
  9582 ;; Registers used:
  9583 ;;		wreg, status,2, status,0, prodl, prodh
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9592 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;Total ram usage:        6 bytes
  9594 ;; Hardware stack levels used:    1
  9595 ;; Hardware stack levels required when called:    5
  9596 ;; This function calls:
  9597 ;;		Nothing
  9598 ;; This function is called by:
  9599 ;;		_atoi
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           	psect	text29
  9604  0038A4                     __ptext29:
  9605                           	opt callstack 0
  9606  0038A4                     ___wmul:
  9607                           	opt callstack 20
  9608  0038A4  5013               	movf	___wmul@multiplier^0,w,c
  9609  0038A6  0215               	mulwf	___wmul@multiplicand^0,c
  9610  0038A8  CFF3 F017          	movff	prodl,___wmul@product
  9611  0038AC  CFF4 F018          	movff	prodh,___wmul@product+1
  9612  0038B0  5013               	movf	___wmul@multiplier^0,w,c
  9613  0038B2  0216               	mulwf	(___wmul@multiplicand+1)^0,c
  9614  0038B4  50F3               	movf	243,w,c
  9615  0038B6  2618               	addwf	(___wmul@product+1)^0,f,c
  9616  0038B8  5014               	movf	(___wmul@multiplier+1)^0,w,c
  9617  0038BA  0215               	mulwf	___wmul@multiplicand^0,c
  9618  0038BC  50F3               	movf	243,w,c
  9619  0038BE  2618               	addwf	(___wmul@product+1)^0,f,c
  9620  0038C0  C017  F013         	movff	___wmul@product,?___wmul
  9621  0038C4  C018  F014         	movff	___wmul@product+1,?___wmul+1
  9622  0038C8  0012               	return		;funcret
  9623  0038CA                     __end_of___wmul:
  9624                           	opt callstack 0
  9625                           
  9626 ;; *************** function _lcd_init *****************
  9627 ;; Defined at:
  9628 ;;		line 32 in file "lib_ili9341.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;		None
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;		None
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		wreg, status,2, status,0, cstack
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9646 ;;Total ram usage:        0 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; Hardware stack levels required when called:   10
  9649 ;; This function calls:
  9650 ;;		_lcd_fill
  9651 ;;		_lcd_send
  9652 ;;		_msDelay
  9653 ;; This function is called by:
  9654 ;;		_main
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text30
  9659  001304                     __ptext30:
  9660                           	opt callstack 0
  9661  001304                     _lcd_init:
  9662                           	opt callstack 20
  9663  001304                     
  9664                           ;lib_ili9341.c: 35:     lcd_send(0, 0x01);
  9665  001304  0E01               	movlw	1
  9666  001306  6E14               	movwf	lcd_send@value^0,c
  9667  001308  0E00               	movlw	0
  9668  00130A  EC97  F01C         	call	_lcd_send
  9669  00130E                     
  9670                           ;lib_ili9341.c: 36:     msDelay(150);
  9671  00130E  0E96               	movlw	150
  9672  001310  EC0E  F01C         	call	_msDelay
  9673  001314                     
  9674                           ;lib_ili9341.c: 38:     lcd_send(0,0xEF);
  9675  001314  0EEF               	movlw	239
  9676  001316  6E14               	movwf	lcd_send@value^0,c
  9677  001318  0E00               	movlw	0
  9678  00131A  EC97  F01C         	call	_lcd_send
  9679  00131E                     
  9680                           ;lib_ili9341.c: 39:     lcd_send(1,0x03);
  9681  00131E  0E03               	movlw	3
  9682  001320  6E14               	movwf	lcd_send@value^0,c
  9683  001322  0E01               	movlw	1
  9684  001324  EC97  F01C         	call	_lcd_send
  9685  001328                     
  9686                           ;lib_ili9341.c: 40:     lcd_send(1,0x80);
  9687  001328  0E80               	movlw	128
  9688  00132A  6E14               	movwf	lcd_send@value^0,c
  9689  00132C  0E01               	movlw	1
  9690  00132E  EC97  F01C         	call	_lcd_send
  9691  001332                     
  9692                           ;lib_ili9341.c: 41:     lcd_send(1,0x02);
  9693  001332  0E02               	movlw	2
  9694  001334  6E14               	movwf	lcd_send@value^0,c
  9695  001336  0E01               	movlw	1
  9696  001338  EC97  F01C         	call	_lcd_send
  9697  00133C                     
  9698                           ;lib_ili9341.c: 42:     lcd_send(0,0xCF);
  9699  00133C  0ECF               	movlw	207
  9700  00133E  6E14               	movwf	lcd_send@value^0,c
  9701  001340  0E00               	movlw	0
  9702  001342  EC97  F01C         	call	_lcd_send
  9703  001346                     
  9704                           ;lib_ili9341.c: 43:     lcd_send(1,0x00);
  9705  001346  0E00               	movlw	0
  9706  001348  6E14               	movwf	lcd_send@value^0,c
  9707  00134A  0E01               	movlw	1
  9708  00134C  EC97  F01C         	call	_lcd_send
  9709  001350                     
  9710                           ;lib_ili9341.c: 44:     lcd_send(1,0XC1);
  9711  001350  0EC1               	movlw	193
  9712  001352  6E14               	movwf	lcd_send@value^0,c
  9713  001354  0E01               	movlw	1
  9714  001356  EC97  F01C         	call	_lcd_send
  9715  00135A                     
  9716                           ;lib_ili9341.c: 45:     lcd_send(1,0X30);
  9717  00135A  0E30               	movlw	48
  9718  00135C  6E14               	movwf	lcd_send@value^0,c
  9719  00135E  0E01               	movlw	1
  9720  001360  EC97  F01C         	call	_lcd_send
  9721  001364                     
  9722                           ;lib_ili9341.c: 46:     lcd_send(0,0xED);
  9723  001364  0EED               	movlw	237
  9724  001366  6E14               	movwf	lcd_send@value^0,c
  9725  001368  0E00               	movlw	0
  9726  00136A  EC97  F01C         	call	_lcd_send
  9727  00136E                     
  9728                           ;lib_ili9341.c: 47:     lcd_send(1,0x64);
  9729  00136E  0E64               	movlw	100
  9730  001370  6E14               	movwf	lcd_send@value^0,c
  9731  001372  0E01               	movlw	1
  9732  001374  EC97  F01C         	call	_lcd_send
  9733  001378                     
  9734                           ;lib_ili9341.c: 48:     lcd_send(1,0x03);
  9735  001378  0E03               	movlw	3
  9736  00137A  6E14               	movwf	lcd_send@value^0,c
  9737  00137C  0E01               	movlw	1
  9738  00137E  EC97  F01C         	call	_lcd_send
  9739  001382                     
  9740                           ;lib_ili9341.c: 49:     lcd_send(1,0X12);
  9741  001382  0E12               	movlw	18
  9742  001384  6E14               	movwf	lcd_send@value^0,c
  9743  001386  0E01               	movlw	1
  9744  001388  EC97  F01C         	call	_lcd_send
  9745  00138C                     
  9746                           ;lib_ili9341.c: 50:     lcd_send(1,0X81);
  9747  00138C  0E81               	movlw	129
  9748  00138E  6E14               	movwf	lcd_send@value^0,c
  9749  001390  0E01               	movlw	1
  9750  001392  EC97  F01C         	call	_lcd_send
  9751  001396                     
  9752                           ;lib_ili9341.c: 51:     lcd_send(0,0xE8);
  9753  001396  0EE8               	movlw	232
  9754  001398  6E14               	movwf	lcd_send@value^0,c
  9755  00139A  0E00               	movlw	0
  9756  00139C  EC97  F01C         	call	_lcd_send
  9757  0013A0                     
  9758                           ;lib_ili9341.c: 52:     lcd_send(1,0x85);
  9759  0013A0  0E85               	movlw	133
  9760  0013A2  6E14               	movwf	lcd_send@value^0,c
  9761  0013A4  0E01               	movlw	1
  9762  0013A6  EC97  F01C         	call	_lcd_send
  9763  0013AA                     
  9764                           ;lib_ili9341.c: 53:     lcd_send(1,0x00);
  9765  0013AA  0E00               	movlw	0
  9766  0013AC  6E14               	movwf	lcd_send@value^0,c
  9767  0013AE  0E01               	movlw	1
  9768  0013B0  EC97  F01C         	call	_lcd_send
  9769  0013B4                     
  9770                           ;lib_ili9341.c: 54:     lcd_send(1,0x78);
  9771  0013B4  0E78               	movlw	120
  9772  0013B6  6E14               	movwf	lcd_send@value^0,c
  9773  0013B8  0E01               	movlw	1
  9774  0013BA  EC97  F01C         	call	_lcd_send
  9775  0013BE                     
  9776                           ;lib_ili9341.c: 55:     lcd_send(0,0xCB);
  9777  0013BE  0ECB               	movlw	203
  9778  0013C0  6E14               	movwf	lcd_send@value^0,c
  9779  0013C2  0E00               	movlw	0
  9780  0013C4  EC97  F01C         	call	_lcd_send
  9781  0013C8                     
  9782                           ;lib_ili9341.c: 56:     lcd_send(1,0x39);
  9783  0013C8  0E39               	movlw	57
  9784  0013CA  6E14               	movwf	lcd_send@value^0,c
  9785  0013CC  0E01               	movlw	1
  9786  0013CE  EC97  F01C         	call	_lcd_send
  9787  0013D2                     
  9788                           ;lib_ili9341.c: 57:     lcd_send(1,0x2C);
  9789  0013D2  0E2C               	movlw	44
  9790  0013D4  6E14               	movwf	lcd_send@value^0,c
  9791  0013D6  0E01               	movlw	1
  9792  0013D8  EC97  F01C         	call	_lcd_send
  9793  0013DC                     
  9794                           ;lib_ili9341.c: 58:     lcd_send(1,0x00);
  9795  0013DC  0E00               	movlw	0
  9796  0013DE  6E14               	movwf	lcd_send@value^0,c
  9797  0013E0  0E01               	movlw	1
  9798  0013E2  EC97  F01C         	call	_lcd_send
  9799  0013E6                     
  9800                           ;lib_ili9341.c: 59:     lcd_send(1,0x34);
  9801  0013E6  0E34               	movlw	52
  9802  0013E8  6E14               	movwf	lcd_send@value^0,c
  9803  0013EA  0E01               	movlw	1
  9804  0013EC  EC97  F01C         	call	_lcd_send
  9805  0013F0                     
  9806                           ;lib_ili9341.c: 60:     lcd_send(1,0x02);
  9807  0013F0  0E02               	movlw	2
  9808  0013F2  6E14               	movwf	lcd_send@value^0,c
  9809  0013F4  0E01               	movlw	1
  9810  0013F6  EC97  F01C         	call	_lcd_send
  9811  0013FA                     
  9812                           ;lib_ili9341.c: 61:     lcd_send(0,0xF7);
  9813  0013FA  0EF7               	movlw	247
  9814  0013FC  6E14               	movwf	lcd_send@value^0,c
  9815  0013FE  0E00               	movlw	0
  9816  001400  EC97  F01C         	call	_lcd_send
  9817  001404                     
  9818                           ;lib_ili9341.c: 62:     lcd_send(1,0x20);
  9819  001404  0E20               	movlw	32
  9820  001406  6E14               	movwf	lcd_send@value^0,c
  9821  001408  0E01               	movlw	1
  9822  00140A  EC97  F01C         	call	_lcd_send
  9823  00140E                     
  9824                           ;lib_ili9341.c: 63:     lcd_send(0,0xEA);
  9825  00140E  0EEA               	movlw	234
  9826  001410  6E14               	movwf	lcd_send@value^0,c
  9827  001412  0E00               	movlw	0
  9828  001414  EC97  F01C         	call	_lcd_send
  9829  001418                     
  9830                           ;lib_ili9341.c: 64:     lcd_send(1,0x00);
  9831  001418  0E00               	movlw	0
  9832  00141A  6E14               	movwf	lcd_send@value^0,c
  9833  00141C  0E01               	movlw	1
  9834  00141E  EC97  F01C         	call	_lcd_send
  9835  001422                     
  9836                           ;lib_ili9341.c: 65:     lcd_send(1,0x00);
  9837  001422  0E00               	movlw	0
  9838  001424  6E14               	movwf	lcd_send@value^0,c
  9839  001426  0E01               	movlw	1
  9840  001428  EC97  F01C         	call	_lcd_send
  9841  00142C                     
  9842                           ;lib_ili9341.c: 66:     lcd_send(0,0xC0);
  9843  00142C  0EC0               	movlw	192
  9844  00142E  6E14               	movwf	lcd_send@value^0,c
  9845  001430  0E00               	movlw	0
  9846  001432  EC97  F01C         	call	_lcd_send
  9847  001436                     
  9848                           ;lib_ili9341.c: 67:     lcd_send(1,0x23);
  9849  001436  0E23               	movlw	35
  9850  001438  6E14               	movwf	lcd_send@value^0,c
  9851  00143A  0E01               	movlw	1
  9852  00143C  EC97  F01C         	call	_lcd_send
  9853  001440                     
  9854                           ;lib_ili9341.c: 68:     lcd_send(0,0xC1);
  9855  001440  0EC1               	movlw	193
  9856  001442  6E14               	movwf	lcd_send@value^0,c
  9857  001444  0E00               	movlw	0
  9858  001446  EC97  F01C         	call	_lcd_send
  9859  00144A                     
  9860                           ;lib_ili9341.c: 69:     lcd_send(1,0x10);
  9861  00144A  0E10               	movlw	16
  9862  00144C  6E14               	movwf	lcd_send@value^0,c
  9863  00144E  0E01               	movlw	1
  9864  001450  EC97  F01C         	call	_lcd_send
  9865  001454                     
  9866                           ;lib_ili9341.c: 70:     lcd_send(0,0xC5);
  9867  001454  0EC5               	movlw	197
  9868  001456  6E14               	movwf	lcd_send@value^0,c
  9869  001458  0E00               	movlw	0
  9870  00145A  EC97  F01C         	call	_lcd_send
  9871  00145E                     
  9872                           ;lib_ili9341.c: 71:     lcd_send(1,0x3e);
  9873  00145E  0E3E               	movlw	62
  9874  001460  6E14               	movwf	lcd_send@value^0,c
  9875  001462  0E01               	movlw	1
  9876  001464  EC97  F01C         	call	_lcd_send
  9877  001468                     
  9878                           ;lib_ili9341.c: 72:     lcd_send(1,0x28);
  9879  001468  0E28               	movlw	40
  9880  00146A  6E14               	movwf	lcd_send@value^0,c
  9881  00146C  0E01               	movlw	1
  9882  00146E  EC97  F01C         	call	_lcd_send
  9883  001472                     
  9884                           ;lib_ili9341.c: 73:     lcd_send(0,0xC7);
  9885  001472  0EC7               	movlw	199
  9886  001474  6E14               	movwf	lcd_send@value^0,c
  9887  001476  0E00               	movlw	0
  9888  001478  EC97  F01C         	call	_lcd_send
  9889  00147C                     
  9890                           ;lib_ili9341.c: 74:     lcd_send(1,0x86);
  9891  00147C  0E86               	movlw	134
  9892  00147E  6E14               	movwf	lcd_send@value^0,c
  9893  001480  0E01               	movlw	1
  9894  001482  EC97  F01C         	call	_lcd_send
  9895  001486                     
  9896                           ;lib_ili9341.c: 75:     lcd_send(0,0x36);
  9897  001486  0E36               	movlw	54
  9898  001488  6E14               	movwf	lcd_send@value^0,c
  9899  00148A  0E00               	movlw	0
  9900  00148C  EC97  F01C         	call	_lcd_send
  9901  001490                     
  9902                           ;lib_ili9341.c: 76:     lcd_send(1,0x48);
  9903  001490  0E48               	movlw	72
  9904  001492  6E14               	movwf	lcd_send@value^0,c
  9905  001494  0E01               	movlw	1
  9906  001496  EC97  F01C         	call	_lcd_send
  9907  00149A                     
  9908                           ;lib_ili9341.c: 77:     lcd_send(0,0x3A);
  9909  00149A  0E3A               	movlw	58
  9910  00149C  6E14               	movwf	lcd_send@value^0,c
  9911  00149E  0E00               	movlw	0
  9912  0014A0  EC97  F01C         	call	_lcd_send
  9913  0014A4                     
  9914                           ;lib_ili9341.c: 78:     lcd_send(1,0x55);
  9915  0014A4  0E55               	movlw	85
  9916  0014A6  6E14               	movwf	lcd_send@value^0,c
  9917  0014A8  0E01               	movlw	1
  9918  0014AA  EC97  F01C         	call	_lcd_send
  9919  0014AE                     
  9920                           ;lib_ili9341.c: 79:     lcd_send(0,0xB1);
  9921  0014AE  0EB1               	movlw	177
  9922  0014B0  6E14               	movwf	lcd_send@value^0,c
  9923  0014B2  0E00               	movlw	0
  9924  0014B4  EC97  F01C         	call	_lcd_send
  9925  0014B8                     
  9926                           ;lib_ili9341.c: 80:     lcd_send(1,0x00);
  9927  0014B8  0E00               	movlw	0
  9928  0014BA  6E14               	movwf	lcd_send@value^0,c
  9929  0014BC  0E01               	movlw	1
  9930  0014BE  EC97  F01C         	call	_lcd_send
  9931  0014C2                     
  9932                           ;lib_ili9341.c: 81:     lcd_send(1,0x18);
  9933  0014C2  0E18               	movlw	24
  9934  0014C4  6E14               	movwf	lcd_send@value^0,c
  9935  0014C6  0E01               	movlw	1
  9936  0014C8  EC97  F01C         	call	_lcd_send
  9937  0014CC                     
  9938                           ;lib_ili9341.c: 82:     lcd_send(0,0xB6);
  9939  0014CC  0EB6               	movlw	182
  9940  0014CE  6E14               	movwf	lcd_send@value^0,c
  9941  0014D0  0E00               	movlw	0
  9942  0014D2  EC97  F01C         	call	_lcd_send
  9943  0014D6                     
  9944                           ;lib_ili9341.c: 83:     lcd_send(1,0x08);
  9945  0014D6  0E08               	movlw	8
  9946  0014D8  6E14               	movwf	lcd_send@value^0,c
  9947  0014DA  0E01               	movlw	1
  9948  0014DC  EC97  F01C         	call	_lcd_send
  9949  0014E0                     
  9950                           ;lib_ili9341.c: 84:     lcd_send(1,0x82);
  9951  0014E0  0E82               	movlw	130
  9952  0014E2  6E14               	movwf	lcd_send@value^0,c
  9953  0014E4  0E01               	movlw	1
  9954  0014E6  EC97  F01C         	call	_lcd_send
  9955  0014EA                     
  9956                           ;lib_ili9341.c: 85:     lcd_send(1,0x27);
  9957  0014EA  0E27               	movlw	39
  9958  0014EC  6E14               	movwf	lcd_send@value^0,c
  9959  0014EE  0E01               	movlw	1
  9960  0014F0  EC97  F01C         	call	_lcd_send
  9961  0014F4                     
  9962                           ;lib_ili9341.c: 86:     lcd_send(0,0xF2);
  9963  0014F4  0EF2               	movlw	242
  9964  0014F6  6E14               	movwf	lcd_send@value^0,c
  9965  0014F8  0E00               	movlw	0
  9966  0014FA  EC97  F01C         	call	_lcd_send
  9967  0014FE                     
  9968                           ;lib_ili9341.c: 87:     lcd_send(1,0x00);
  9969  0014FE  0E00               	movlw	0
  9970  001500  6E14               	movwf	lcd_send@value^0,c
  9971  001502  0E01               	movlw	1
  9972  001504  EC97  F01C         	call	_lcd_send
  9973  001508                     
  9974                           ;lib_ili9341.c: 88:     lcd_send(0,0x26);
  9975  001508  0E26               	movlw	38
  9976  00150A  6E14               	movwf	lcd_send@value^0,c
  9977  00150C  0E00               	movlw	0
  9978  00150E  EC97  F01C         	call	_lcd_send
  9979  001512                     
  9980                           ;lib_ili9341.c: 89:     lcd_send(1,0x01);
  9981  001512  0E01               	movlw	1
  9982  001514  6E14               	movwf	lcd_send@value^0,c
  9983  001516  0E01               	movlw	1
  9984  001518  EC97  F01C         	call	_lcd_send
  9985  00151C                     
  9986                           ;lib_ili9341.c: 90:     lcd_send(0,0xE0);
  9987  00151C  0EE0               	movlw	224
  9988  00151E  6E14               	movwf	lcd_send@value^0,c
  9989  001520  0E00               	movlw	0
  9990  001522  EC97  F01C         	call	_lcd_send
  9991  001526                     
  9992                           ;lib_ili9341.c: 91:     lcd_send(1,0x0F);
  9993  001526  0E0F               	movlw	15
  9994  001528  6E14               	movwf	lcd_send@value^0,c
  9995  00152A  0E01               	movlw	1
  9996  00152C  EC97  F01C         	call	_lcd_send
  9997  001530                     
  9998                           ;lib_ili9341.c: 92:     lcd_send(1,0x31);
  9999  001530  0E31               	movlw	49
 10000  001532  6E14               	movwf	lcd_send@value^0,c
 10001  001534  0E01               	movlw	1
 10002  001536  EC97  F01C         	call	_lcd_send
 10003  00153A                     
 10004                           ;lib_ili9341.c: 93:     lcd_send(1,0x2B);
 10005  00153A  0E2B               	movlw	43
 10006  00153C  6E14               	movwf	lcd_send@value^0,c
 10007  00153E  0E01               	movlw	1
 10008  001540  EC97  F01C         	call	_lcd_send
 10009  001544                     
 10010                           ;lib_ili9341.c: 94:     lcd_send(1,0x0C);
 10011  001544  0E0C               	movlw	12
 10012  001546  6E14               	movwf	lcd_send@value^0,c
 10013  001548  0E01               	movlw	1
 10014  00154A  EC97  F01C         	call	_lcd_send
 10015  00154E                     
 10016                           ;lib_ili9341.c: 95:     lcd_send(1,0x0E);
 10017  00154E  0E0E               	movlw	14
 10018  001550  6E14               	movwf	lcd_send@value^0,c
 10019  001552  0E01               	movlw	1
 10020  001554  EC97  F01C         	call	_lcd_send
 10021  001558                     
 10022                           ;lib_ili9341.c: 96:     lcd_send(1,0x08);
 10023  001558  0E08               	movlw	8
 10024  00155A  6E14               	movwf	lcd_send@value^0,c
 10025  00155C  0E01               	movlw	1
 10026  00155E  EC97  F01C         	call	_lcd_send
 10027  001562                     
 10028                           ;lib_ili9341.c: 97:     lcd_send(1,0x4E);
 10029  001562  0E4E               	movlw	78
 10030  001564  6E14               	movwf	lcd_send@value^0,c
 10031  001566  0E01               	movlw	1
 10032  001568  EC97  F01C         	call	_lcd_send
 10033  00156C                     
 10034                           ;lib_ili9341.c: 98:     lcd_send(1,0xF1);
 10035  00156C  0EF1               	movlw	241
 10036  00156E  6E14               	movwf	lcd_send@value^0,c
 10037  001570  0E01               	movlw	1
 10038  001572  EC97  F01C         	call	_lcd_send
 10039  001576                     
 10040                           ;lib_ili9341.c: 99:     lcd_send(1,0x37);
 10041  001576  0E37               	movlw	55
 10042  001578  6E14               	movwf	lcd_send@value^0,c
 10043  00157A  0E01               	movlw	1
 10044  00157C  EC97  F01C         	call	_lcd_send
 10045  001580                     
 10046                           ;lib_ili9341.c: 100:     lcd_send(1,0x07);
 10047  001580  0E07               	movlw	7
 10048  001582  6E14               	movwf	lcd_send@value^0,c
 10049  001584  0E01               	movlw	1
 10050  001586  EC97  F01C         	call	_lcd_send
 10051  00158A                     
 10052                           ;lib_ili9341.c: 101:     lcd_send(1,0x10);
 10053  00158A  0E10               	movlw	16
 10054  00158C  6E14               	movwf	lcd_send@value^0,c
 10055  00158E  0E01               	movlw	1
 10056  001590  EC97  F01C         	call	_lcd_send
 10057  001594                     
 10058                           ;lib_ili9341.c: 102:     lcd_send(1,0x03);
 10059  001594  0E03               	movlw	3
 10060  001596  6E14               	movwf	lcd_send@value^0,c
 10061  001598  0E01               	movlw	1
 10062  00159A  EC97  F01C         	call	_lcd_send
 10063  00159E                     
 10064                           ;lib_ili9341.c: 103:     lcd_send(1,0x0E);
 10065  00159E  0E0E               	movlw	14
 10066  0015A0  6E14               	movwf	lcd_send@value^0,c
 10067  0015A2  0E01               	movlw	1
 10068  0015A4  EC97  F01C         	call	_lcd_send
 10069  0015A8                     
 10070                           ;lib_ili9341.c: 104:     lcd_send(1,0x09);
 10071  0015A8  0E09               	movlw	9
 10072  0015AA  6E14               	movwf	lcd_send@value^0,c
 10073  0015AC  0E01               	movlw	1
 10074  0015AE  EC97  F01C         	call	_lcd_send
 10075  0015B2                     
 10076                           ;lib_ili9341.c: 105:     lcd_send(1,0x00);
 10077  0015B2  0E00               	movlw	0
 10078  0015B4  6E14               	movwf	lcd_send@value^0,c
 10079  0015B6  0E01               	movlw	1
 10080  0015B8  EC97  F01C         	call	_lcd_send
 10081  0015BC                     
 10082                           ;lib_ili9341.c: 106:     lcd_send(0,0xE1);
 10083  0015BC  0EE1               	movlw	225
 10084  0015BE  6E14               	movwf	lcd_send@value^0,c
 10085  0015C0  0E00               	movlw	0
 10086  0015C2  EC97  F01C         	call	_lcd_send
 10087  0015C6                     
 10088                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 10089  0015C6  0E00               	movlw	0
 10090  0015C8  6E14               	movwf	lcd_send@value^0,c
 10091  0015CA  0E01               	movlw	1
 10092  0015CC  EC97  F01C         	call	_lcd_send
 10093  0015D0                     
 10094                           ;lib_ili9341.c: 108:     lcd_send(1,0x0E);
 10095  0015D0  0E0E               	movlw	14
 10096  0015D2  6E14               	movwf	lcd_send@value^0,c
 10097  0015D4  0E01               	movlw	1
 10098  0015D6  EC97  F01C         	call	_lcd_send
 10099  0015DA                     
 10100                           ;lib_ili9341.c: 109:     lcd_send(1,0x14);
 10101  0015DA  0E14               	movlw	20
 10102  0015DC  6E14               	movwf	lcd_send@value^0,c
 10103  0015DE  0E01               	movlw	1
 10104  0015E0  EC97  F01C         	call	_lcd_send
 10105  0015E4                     
 10106                           ;lib_ili9341.c: 110:     lcd_send(1,0x03);
 10107  0015E4  0E03               	movlw	3
 10108  0015E6  6E14               	movwf	lcd_send@value^0,c
 10109  0015E8  0E01               	movlw	1
 10110  0015EA  EC97  F01C         	call	_lcd_send
 10111  0015EE                     
 10112                           ;lib_ili9341.c: 111:     lcd_send(1,0x11);
 10113  0015EE  0E11               	movlw	17
 10114  0015F0  6E14               	movwf	lcd_send@value^0,c
 10115  0015F2  0E01               	movlw	1
 10116  0015F4  EC97  F01C         	call	_lcd_send
 10117  0015F8                     
 10118                           ;lib_ili9341.c: 112:     lcd_send(1,0x07);
 10119  0015F8  0E07               	movlw	7
 10120  0015FA  6E14               	movwf	lcd_send@value^0,c
 10121  0015FC  0E01               	movlw	1
 10122  0015FE  EC97  F01C         	call	_lcd_send
 10123  001602                     
 10124                           ;lib_ili9341.c: 113:     lcd_send(1,0x31);
 10125  001602  0E31               	movlw	49
 10126  001604  6E14               	movwf	lcd_send@value^0,c
 10127  001606  0E01               	movlw	1
 10128  001608  EC97  F01C         	call	_lcd_send
 10129  00160C                     
 10130                           ;lib_ili9341.c: 114:     lcd_send(1,0xC1);
 10131  00160C  0EC1               	movlw	193
 10132  00160E  6E14               	movwf	lcd_send@value^0,c
 10133  001610  0E01               	movlw	1
 10134  001612  EC97  F01C         	call	_lcd_send
 10135  001616                     
 10136                           ;lib_ili9341.c: 115:     lcd_send(1,0x48);
 10137  001616  0E48               	movlw	72
 10138  001618  6E14               	movwf	lcd_send@value^0,c
 10139  00161A  0E01               	movlw	1
 10140  00161C  EC97  F01C         	call	_lcd_send
 10141  001620                     
 10142                           ;lib_ili9341.c: 116:     lcd_send(1,0x08);
 10143  001620  0E08               	movlw	8
 10144  001622  6E14               	movwf	lcd_send@value^0,c
 10145  001624  0E01               	movlw	1
 10146  001626  EC97  F01C         	call	_lcd_send
 10147  00162A                     
 10148                           ;lib_ili9341.c: 117:     lcd_send(1,0x0F);
 10149  00162A  0E0F               	movlw	15
 10150  00162C  6E14               	movwf	lcd_send@value^0,c
 10151  00162E  0E01               	movlw	1
 10152  001630  EC97  F01C         	call	_lcd_send
 10153  001634                     
 10154                           ;lib_ili9341.c: 118:     lcd_send(1,0x0C);
 10155  001634  0E0C               	movlw	12
 10156  001636  6E14               	movwf	lcd_send@value^0,c
 10157  001638  0E01               	movlw	1
 10158  00163A  EC97  F01C         	call	_lcd_send
 10159  00163E                     
 10160                           ;lib_ili9341.c: 119:     lcd_send(1,0x31);
 10161  00163E  0E31               	movlw	49
 10162  001640  6E14               	movwf	lcd_send@value^0,c
 10163  001642  0E01               	movlw	1
 10164  001644  EC97  F01C         	call	_lcd_send
 10165  001648                     
 10166                           ;lib_ili9341.c: 120:     lcd_send(1,0x36);
 10167  001648  0E36               	movlw	54
 10168  00164A  6E14               	movwf	lcd_send@value^0,c
 10169  00164C  0E01               	movlw	1
 10170  00164E  EC97  F01C         	call	_lcd_send
 10171  001652                     
 10172                           ;lib_ili9341.c: 121:     lcd_send(1,0x0F);
 10173  001652  0E0F               	movlw	15
 10174  001654  6E14               	movwf	lcd_send@value^0,c
 10175  001656  0E01               	movlw	1
 10176  001658  EC97  F01C         	call	_lcd_send
 10177  00165C                     
 10178                           ;lib_ili9341.c: 122:     lcd_send(0,0x11);
 10179  00165C  0E11               	movlw	17
 10180  00165E  6E14               	movwf	lcd_send@value^0,c
 10181  001660  0E00               	movlw	0
 10182  001662  EC97  F01C         	call	_lcd_send
 10183                           
 10184                           ;lib_ili9341.c: 123:     msDelay(120);
 10185  001666  0E78               	movlw	120
 10186  001668  EC0E  F01C         	call	_msDelay
 10187  00166C                     
 10188                           ;lib_ili9341.c: 124:     lcd_send(0,0x29);
 10189  00166C  0E29               	movlw	41
 10190  00166E  6E14               	movwf	lcd_send@value^0,c
 10191  001670  0E00               	movlw	0
 10192  001672  EC97  F01C         	call	_lcd_send
 10193  001676                     
 10194                           ;lib_ili9341.c: 125:     msDelay(120);
 10195  001676  0E78               	movlw	120
 10196  001678  EC0E  F01C         	call	_msDelay
 10197  00167C                     
 10198                           ;lib_ili9341.c: 128:     lcd_fill(global_bg_color);
 10199  00167C  0E00               	movlw	0
 10200  00167E  6E1D               	movwf	(lcd_fill@bg_color+1)^0,c
 10201  001680  0E00               	movlw	0
 10202  001682  6E1C               	movwf	lcd_fill@bg_color^0,c
 10203  001684  EC0D  F019         	call	_lcd_fill	;wreg free
 10204  001688  0012               	return		;funcret
 10205  00168A                     __end_of_lcd_init:
 10206                           	opt callstack 0
 10207                           
 10208 ;; *************** function _msDelay *****************
 10209 ;; Defined at:
 10210 ;;		line 14 in file "lib_ili9341.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;  ms              1    wreg     unsigned char 
 10213 ;; Auto vars:     Size  Location     Type
 10214 ;;  ms              1   19[COMRAM] unsigned char 
 10215 ;;  k               1   20[COMRAM] unsigned char 
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  1    wreg      void 
 10218 ;; Registers used:
 10219 ;;		wreg, status,2, status,0
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10228 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10229 ;;Total ram usage:        3 bytes
 10230 ;; Hardware stack levels used:    1
 10231 ;; Hardware stack levels required when called:    5
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		_lcd_init
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239                           	psect	text31
 10240  00381C                     __ptext31:
 10241                           	opt callstack 0
 10242  00381C                     _msDelay:
 10243                           	opt callstack 24
 10244                           
 10245                           ;incstack = 0
 10246                           ;msDelay@ms stored from wreg
 10247  00381C  6E14               	movwf	msDelay@ms^0,c
 10248  00381E                     
 10249                           ;lib_ili9341.c: 14: void msDelay (uint8_t ms);lib_ili9341.c: 15: {;lib_ili9341.c: 16:   
      +                            uint8_t k;;lib_ili9341.c: 18:     for(k=0; k<ms; k++)
 10250  00381E  0E00               	movlw	0
 10251  003820  6E15               	movwf	msDelay@k^0,c
 10252  003822  EF1B  F01C         	goto	l4205
 10253  003826                     l4201:
 10254                           
 10255                           ;lib_ili9341.c: 19:     {;lib_ili9341.c: 20:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 10256  003826  0E03               	movlw	3
 10257  003828  6E13               	movwf	??_msDelay^0,c
 10258  00382A  0E98               	movlw	152
 10259  00382C                     u6617:
 10260  00382C  2EE8               	decfsz	wreg,f,c
 10261  00382E  D7FE               	bra	u6617
 10262  003830  2E13               	decfsz	??_msDelay^0,f,c
 10263  003832  D7FC               	bra	u6617
 10264  003834                     
 10265                           ;lib_ili9341.c: 21:     }
 10266  003834  2A15               	incf	msDelay@k^0,f,c
 10267  003836                     l4205:
 10268  003836  5014               	movf	msDelay@ms^0,w,c
 10269  003838  5C15               	subwf	msDelay@k^0,w,c
 10270  00383A  A0D8               	btfss	status,0,c
 10271  00383C  EF22  F01C         	goto	u4081
 10272  003840  EF24  F01C         	goto	u4080
 10273  003844                     u4081:
 10274  003844  EF13  F01C         	goto	l4201
 10275  003848                     u4080:
 10276  003848  0012               	return		;funcret
 10277  00384A                     __end_of_msDelay:
 10278                           	opt callstack 0
 10279                           
 10280 ;; *************** function _lcd_fill *****************
 10281 ;; Defined at:
 10282 ;;		line 191 in file "lib_ili9341.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;  bg_color        2   27[COMRAM] unsigned short 
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;  width           2   31[COMRAM] unsigned short 
 10287 ;;  height          2   29[COMRAM] unsigned short 
 10288 ;; Return value:  Size  Location     Type
 10289 ;;                  1    wreg      void 
 10290 ;; Registers used:
 10291 ;;		wreg, status,2, status,0, cstack
 10292 ;; Tracked objects:
 10293 ;;		On entry : 0/0
 10294 ;;		On exit  : 0/0
 10295 ;;		Unchanged: 0/0
 10296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10298 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10301 ;;Total ram usage:        6 bytes
 10302 ;; Hardware stack levels used:    1
 10303 ;; Hardware stack levels required when called:    9
 10304 ;; This function calls:
 10305 ;;		_lcd_draw_pixel
 10306 ;;		_lcd_set_cursor
 10307 ;; This function is called by:
 10308 ;;		_lcd_init
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           	psect	text32
 10313  00321A                     __ptext32:
 10314                           	opt callstack 0
 10315  00321A                     _lcd_fill:
 10316                           	opt callstack 20
 10317  00321A                     
 10318                           ;lib_ili9341.c: 191: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 192: {;lib_ili9341.
      +                          c: 193:     uint16_t width = 320, height = 240;
 10319  00321A  0E01               	movlw	1
 10320  00321C  6E21               	movwf	(lcd_fill@width+1)^0,c
 10321  00321E  0E40               	movlw	64
 10322  003220  6E20               	movwf	lcd_fill@width^0,c
 10323  003222  0E00               	movlw	0
 10324  003224  6E1F               	movwf	(lcd_fill@height+1)^0,c
 10325  003226  0EF0               	movlw	240
 10326  003228  6E1E               	movwf	lcd_fill@height^0,c
 10327  00322A                     
 10328                           ;lib_ili9341.c: 195:     if( lcd_set_cursor(0,0) )
 10329  00322A  0E00               	movlw	0
 10330  00322C  6E19               	movwf	(lcd_set_cursor@x+1)^0,c
 10331  00322E  0E00               	movlw	0
 10332  003230  6E18               	movwf	lcd_set_cursor@x^0,c
 10333  003232  0E00               	movlw	0
 10334  003234  6E1B               	movwf	(lcd_set_cursor@y+1)^0,c
 10335  003236  0E00               	movlw	0
 10336  003238  6E1A               	movwf	lcd_set_cursor@y^0,c
 10337  00323A  ECB9  F01A         	call	_lcd_set_cursor	;wreg free
 10338  00323E  0900               	iorlw	0
 10339  003240  B4D8               	btfsc	status,2,c
 10340  003242  EF25  F019         	goto	u6231
 10341  003246  EF27  F019         	goto	u6230
 10342  00324A                     u6231:
 10343  00324A  EF40  F019         	goto	l5745
 10344  00324E                     u6230:
 10345  00324E  EF4D  F019         	goto	l280
 10346  003252                     l5739:
 10347                           
 10348                           ;lib_ili9341.c: 203:         {;lib_ili9341.c: 204:             lcd_draw_pixel(bg_color);
 10349  003252  C01C  F016         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 10350  003256  C01D  F017         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 10351  00325A  ECAF  F01C         	call	_lcd_draw_pixel	;wreg free
 10352  00325E                     l5741:
 10353                           
 10354                           ;lib_ili9341.c: 202:         while(width--)
 10355  00325E  0620               	decf	lcd_fill@width^0,f,c
 10356  003260  A0D8               	btfss	status,0,c
 10357  003262  0621               	decf	(lcd_fill@width+1)^0,f,c
 10358  003264  2820               	incf	lcd_fill@width^0,w,c
 10359  003266  E106               	bnz	u6241
 10360  003268  2821               	incf	(lcd_fill@width+1)^0,w,c
 10361  00326A  A4D8               	btfss	status,2,c
 10362  00326C  EF3A  F019         	goto	u6241
 10363  003270  EF3C  F019         	goto	u6240
 10364  003274                     u6241:
 10365  003274  EF29  F019         	goto	l5739
 10366  003278                     u6240:
 10367  003278                     
 10368                           ;lib_ili9341.c: 206:         width = 320;
 10369  003278  0E01               	movlw	1
 10370  00327A  6E21               	movwf	(lcd_fill@width+1)^0,c
 10371  00327C  0E40               	movlw	64
 10372  00327E  6E20               	movwf	lcd_fill@width^0,c
 10373  003280                     l5745:
 10374                           
 10375                           ;lib_ili9341.c: 200:     while(height--)
 10376  003280  061E               	decf	lcd_fill@height^0,f,c
 10377  003282  A0D8               	btfss	status,0,c
 10378  003284  061F               	decf	(lcd_fill@height+1)^0,f,c
 10379  003286  281E               	incf	lcd_fill@height^0,w,c
 10380  003288  E106               	bnz	u6251
 10381  00328A  281F               	incf	(lcd_fill@height+1)^0,w,c
 10382  00328C  A4D8               	btfss	status,2,c
 10383  00328E  EF4B  F019         	goto	u6251
 10384  003292  EF4D  F019         	goto	u6250
 10385  003296                     u6251:
 10386  003296  EF2F  F019         	goto	l5741
 10387  00329A                     u6250:
 10388  00329A                     l280:
 10389  00329A  0012               	return		;funcret
 10390  00329C                     __end_of_lcd_fill:
 10391                           	opt callstack 0
 10392                           
 10393 ;; *************** function _lcd_draw_string *****************
 10394 ;; Defined at:
 10395 ;;		line 378 in file "lib_ili9341.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  x               2   49[COMRAM] unsigned short 
 10398 ;;  y               2   51[COMRAM] unsigned short 
 10399 ;;  pS              2   53[COMRAM] PTR const unsigned char 
 10400 ;;		 -> STR_3(11), STR_2(33), string(100), 
 10401 ;;  fg_color        2   55[COMRAM] unsigned short 
 10402 ;;  bg_color        2   57[COMRAM] unsigned short 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  lIndex          2    6[BANK0 ] unsigned short 
 10405 ;;  k               2    4[BANK0 ] unsigned short 
 10406 ;; Return value:  Size  Location     Type
 10407 ;;                  1    wreg      void 
 10408 ;; Registers used:
 10409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10415 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10416 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10417 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10418 ;;      Totals:        10       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10419 ;;Total ram usage:       18 bytes
 10420 ;; Hardware stack levels used:    1
 10421 ;; Hardware stack levels required when called:   10
 10422 ;; This function calls:
 10423 ;;		_lcd_draw_char
 10424 ;; This function is called by:
 10425 ;;		_main
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text33
 10430  002922                     __ptext33:
 10431                           	opt callstack 0
 10432  002922                     _lcd_draw_string:
 10433                           	opt callstack 20
 10434  002922                     
 10435                           ;lib_ili9341.c: 378: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 379: {;lib_ili9341.c: 380:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 382:     while(*pS)
 10436  002922  EF13  F015         	goto	l6057
 10437  002926                     l6043:
 10438                           
 10439                           ;lib_ili9341.c: 383:     {;lib_ili9341.c: 384:         lIndex = 0;
 10440  002926  0E00               	movlw	0
 10441  002928  0100               	movlb	0	; () banked
 10442  00292A  6F67               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 10443  00292C  0E00               	movlw	0
 10444  00292E  6F66               	movwf	lcd_draw_string@lIndex& (0+255),b
 10445                           
 10446                           ;lib_ili9341.c: 385:         for(k=0; k<(*pS - ' '); k++)
 10447  002930  0E00               	movlw	0
 10448  002932  6F65               	movwf	(lcd_draw_string@k+1)& (0+255),b
 10449  002934  0E00               	movlw	0
 10450  002936  6F64               	movwf	lcd_draw_string@k& (0+255),b
 10451  002938  EFBD  F014         	goto	l6049
 10452  00293C                     l6045:
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;lib_ili9341.c: 386:         {;lib_ili9341.c: 387:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 10456  00293C  90D8               	bcf	status,0,c
 10457  00293E  3566               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 10458  002940  6EF6               	movwf	tblptrl,c
 10459  002942  3567               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 10460  002944  6EF7               	movwf	tblptrh,c
 10461  002946  0EC1               	movlw	low _font
 10462  002948  26F6               	addwf	tblptrl,f,c
 10463  00294A  0EF1               	movlw	high _font
 10464  00294C  22F7               	addwfc	tblptrh,f,c
 10465  00294E                     	if	1	;There are 3 active tblptr bytes
 10466  00294E  6AF8               	clrf	tblptru,c
 10467  002950  0E00               	movlw	low (__mediumconst shr (0+16))
 10468  002952  22F8               	addwfc	tblptru,f,c
 10469  002954                     	endif
 10470  002954  0009               	tblrd		*+
 10471  002956  CFF5 F060          	movff	tablat,??_lcd_draw_string
 10472  00295A  0009               	tblrd		*+
 10473  00295C  CFF5 F061          	movff	tablat,??_lcd_draw_string+1
 10474  002960  90D8               	bcf	status,0,c
 10475  002962  3760               	rlcf	??_lcd_draw_string& (0+255),f,b
 10476  002964  3761               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 10477  002966  0E01               	movlw	1
 10478  002968  2760               	addwf	??_lcd_draw_string& (0+255),f,b
 10479  00296A  0E00               	movlw	0
 10480  00296C  2361               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 10481  00296E  5160               	movf	??_lcd_draw_string& (0+255),w,b
 10482  002970  2766               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 10483  002972  5161               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 10484  002974  2367               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 10485  002976                     
 10486                           ; BSR set to: 0
 10487                           ;lib_ili9341.c: 388:         }
 10488  002976  4B64               	infsnz	lcd_draw_string@k& (0+255),f,b
 10489  002978  2B65               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 10490  00297A                     l6049:
 10491                           
 10492                           ; BSR set to: 0
 10493  00297A  0EE0               	movlw	224
 10494  00297C  6F60               	movwf	??_lcd_draw_string& (0+255),b
 10495  00297E  0EFF               	movlw	255
 10496  002980  6F61               	movwf	(??_lcd_draw_string+1)& (0+255),b
 10497  002982  C036  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10498  002986  C037  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10499  00298A  0E00               	movlw	low (__mediumconst shr (0+16))
 10500  00298C  6EF8               	movwf	tblptru,c
 10501  00298E  0E0E               	movlw	(high __ramtop+-1)
 10502  002990  64F7               	cpfsgt	tblptrh,c
 10503  002992  D003               	bra	u6457
 10504  002994  0008               	tblrd		*
 10505  002996  50F5               	movf	tablat,w,c
 10506  002998  D005               	bra	u6450
 10507  00299A                     u6457:
 10508  00299A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10509  00299E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10510  0029A2  50E7               	movf	indf1,w,c
 10511  0029A4                     u6450:
 10512  0029A4  0100               	movlb	0	; () banked
 10513  0029A6  6F62               	movwf	(??_lcd_draw_string+2)& (0+255),b
 10514  0029A8  6B63               	clrf	(??_lcd_draw_string+3)& (0+255),b
 10515  0029AA  5160               	movf	??_lcd_draw_string& (0+255),w,b
 10516  0029AC  2762               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 10517  0029AE  5161               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 10518  0029B0  2363               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 10519  0029B2  5162               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 10520  0029B4  5D64               	subwf	lcd_draw_string@k& (0+255),w,b
 10521  0029B6  5163               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 10522  0029B8  5965               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 10523  0029BA  A0D8               	btfss	status,0,c
 10524  0029BC  EFE2  F014         	goto	u6461
 10525  0029C0  EFE4  F014         	goto	u6460
 10526  0029C4                     u6461:
 10527  0029C4  EF9E  F014         	goto	l6045
 10528  0029C8                     u6460:
 10529  0029C8                     
 10530                           ; BSR set to: 0
 10531                           ;lib_ili9341.c: 390:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 10532  0029C8  C032  F01C         	movff	lcd_draw_string@x,lcd_draw_char@x
 10533  0029CC  C033  F01D         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 10534  0029D0  C034  F01E         	movff	lcd_draw_string@y,lcd_draw_char@y
 10535  0029D4  C035  F01F         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 10536  0029D8  C066  F020         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 10537  0029DC  C067  F021         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 10538  0029E0  C038  F022         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 10539  0029E4  C039  F023         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 10540  0029E8  C03A  F024         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 10541  0029EC  C03B  F025         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 10542  0029F0  EC6E  F012         	call	_lcd_draw_char	;wreg free
 10543  0029F4                     
 10544                           ;lib_ili9341.c: 392:         x += font[lIndex];
 10545  0029F4  90D8               	bcf	status,0,c
 10546  0029F6  0100               	movlb	0	; () banked
 10547  0029F8  3566               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 10548  0029FA  6EF6               	movwf	tblptrl,c
 10549  0029FC  3567               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 10550  0029FE  6EF7               	movwf	tblptrh,c
 10551  002A00  0EC1               	movlw	low _font
 10552  002A02  26F6               	addwf	tblptrl,f,c
 10553  002A04  0EF1               	movlw	high _font
 10554  002A06  22F7               	addwfc	tblptrh,f,c
 10555  002A08                     	if	1	;There are 3 active tblptr bytes
 10556  002A08  6AF8               	clrf	tblptru,c
 10557  002A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 10558  002A0C  22F8               	addwfc	tblptru,f,c
 10559  002A0E                     	endif
 10560  002A0E  0009               	tblrd		*+
 10561  002A10  CFF5 F060          	movff	tablat,??_lcd_draw_string
 10562  002A14  0009               	tblrd		*+
 10563  002A16  CFF5 F061          	movff	tablat,??_lcd_draw_string+1
 10564  002A1A  5160               	movf	??_lcd_draw_string& (0+255),w,b
 10565  002A1C  2632               	addwf	lcd_draw_string@x^0,f,c
 10566  002A1E  5161               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 10567  002A20  2233               	addwfc	(lcd_draw_string@x+1)^0,f,c
 10568  002A22                     
 10569                           ; BSR set to: 0
 10570                           ;lib_ili9341.c: 394:         pS++;
 10571  002A22  4A36               	infsnz	lcd_draw_string@pS^0,f,c
 10572  002A24  2A37               	incf	(lcd_draw_string@pS+1)^0,f,c
 10573  002A26                     l6057:
 10574                           
 10575                           ;lib_ili9341.c: 382:     while(*pS)
 10576  002A26  C036  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10577  002A2A  C037  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10578  002A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 10579  002A30  6EF8               	movwf	tblptru,c
 10580  002A32  0E0E               	movlw	(high __ramtop+-1)
 10581  002A34  64F7               	cpfsgt	tblptrh,c
 10582  002A36  D003               	bra	u6477
 10583  002A38  0008               	tblrd		*
 10584  002A3A  50F5               	movf	tablat,w,c
 10585  002A3C  D005               	bra	u6470
 10586  002A3E                     u6477:
 10587  002A3E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10588  002A42  CFF7 FFE2          	movff	tblptrh,fsr1h
 10589  002A46  50E7               	movf	indf1,w,c
 10590  002A48                     u6470:
 10591  002A48  0900               	iorlw	0
 10592  002A4A  A4D8               	btfss	status,2,c
 10593  002A4C  EF2A  F015         	goto	u6481
 10594  002A50  EF2C  F015         	goto	u6480
 10595  002A54                     u6481:
 10596  002A54  EF93  F014         	goto	l6043
 10597  002A58                     u6480:
 10598  002A58  0012               	return		;funcret
 10599  002A5A                     __end_of_lcd_draw_string:
 10600                           	opt callstack 0
 10601                           
 10602 ;; *************** function _lcd_draw_char *****************
 10603 ;; Defined at:
 10604 ;;		line 353 in file "lib_ili9341.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  x               2   27[COMRAM] unsigned short 
 10607 ;;  y               2   29[COMRAM] unsigned short 
 10608 ;;  fIndex          2   31[COMRAM] unsigned short 
 10609 ;;  fg_color        2   33[COMRAM] unsigned short 
 10610 ;;  bg_color        2   35[COMRAM] unsigned short 
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  i               1   48[COMRAM] unsigned char 
 10613 ;;  k               1   47[COMRAM] unsigned char 
 10614 ;;  j               1   46[COMRAM] unsigned char 
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  1    wreg      void 
 10617 ;; Registers used:
 10618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10624 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10625 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10626 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;Total ram usage:       22 bytes
 10629 ;; Hardware stack levels used:    1
 10630 ;; Hardware stack levels required when called:    9
 10631 ;; This function calls:
 10632 ;;		_lcd_draw_pixel
 10633 ;;		_lcd_set_cursor
 10634 ;; This function is called by:
 10635 ;;		_lcd_draw_string
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text34
 10640  0024DC                     __ptext34:
 10641                           	opt callstack 0
 10642  0024DC                     _lcd_draw_char:
 10643                           	opt callstack 20
 10644  0024DC                     
 10645                           ;lib_ili9341.c: 353: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 354: {;lib_ili9341.c: 355:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 357:     for(j=0; j < font[fIndex]; j++)
 10646  0024DC  0E00               	movlw	0
 10647  0024DE  6E2F               	movwf	lcd_draw_char@j^0,c
 10648  0024E0  EF0E  F013         	goto	l5783
 10649  0024E4                     l5753:
 10650                           
 10651                           ;lib_ili9341.c: 358:     {;lib_ili9341.c: 359:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 10652  0024E4  90D8               	bcf	status,0,c
 10653  0024E6  3420               	rlcf	lcd_draw_char@fIndex^0,w,c
 10654  0024E8  6EF6               	movwf	tblptrl,c
 10655  0024EA  3421               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10656  0024EC  6EF7               	movwf	tblptrh,c
 10657  0024EE  0EC1               	movlw	low _font
 10658  0024F0  26F6               	addwf	tblptrl,f,c
 10659  0024F2  0EF1               	movlw	high _font
 10660  0024F4  22F7               	addwfc	tblptrh,f,c
 10661  0024F6                     	if	1	;There are 3 active tblptr bytes
 10662  0024F6  6AF8               	clrf	tblptru,c
 10663  0024F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10664  0024FA  22F8               	addwfc	tblptru,f,c
 10665  0024FC                     	endif
 10666  0024FC  0009               	tblrd		*+
 10667  0024FE  CFF5 F026          	movff	tablat,??_lcd_draw_char
 10668  002502  0009               	tblrd		*+
 10669  002504  CFF5 F027          	movff	tablat,??_lcd_draw_char+1
 10670  002508  502F               	movf	lcd_draw_char@j^0,w,c
 10671  00250A  5E26               	subwf	??_lcd_draw_char^0,f,c
 10672  00250C  0E00               	movlw	0
 10673  00250E  5A27               	subwfb	(??_lcd_draw_char+1)^0,f,c
 10674  002510  501C               	movf	lcd_draw_char@x^0,w,c
 10675  002512  2426               	addwf	??_lcd_draw_char^0,w,c
 10676  002514  6E18               	movwf	lcd_set_cursor@x^0,c
 10677  002516  501D               	movf	(lcd_draw_char@x+1)^0,w,c
 10678  002518  2027               	addwfc	(??_lcd_draw_char+1)^0,w,c
 10679  00251A  6E19               	movwf	(lcd_set_cursor@x+1)^0,c
 10680  00251C  C01E  F01A         	movff	lcd_draw_char@y,lcd_set_cursor@y
 10681  002520  C01F  F01B         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 10682  002524  ECB9  F01A         	call	_lcd_set_cursor	;wreg free
 10683  002528                     
 10684                           ;lib_ili9341.c: 361:         for(k=0; k<2; k++)
 10685  002528  0E00               	movlw	0
 10686  00252A  6E30               	movwf	lcd_draw_char@k^0,c
 10687  00252C                     l5761:
 10688                           
 10689                           ;lib_ili9341.c: 362:         {;lib_ili9341.c: 363:             for(i=0; i<8; i++)
 10690  00252C  0E00               	movlw	0
 10691  00252E  6E31               	movwf	lcd_draw_char@i^0,c
 10692  002530                     l5767:
 10693                           
 10694                           ;lib_ili9341.c: 364:             {;lib_ili9341.c: 365:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 10695  002530  502F               	movf	lcd_draw_char@j^0,w,c
 10696  002532  6E26               	movwf	??_lcd_draw_char^0,c
 10697  002534  6A27               	clrf	(??_lcd_draw_char+1)^0,c
 10698  002536  90D8               	bcf	status,0,c
 10699  002538  3626               	rlcf	??_lcd_draw_char^0,f,c
 10700  00253A  3627               	rlcf	(??_lcd_draw_char+1)^0,f,c
 10701  00253C  90D8               	bcf	status,0,c
 10702  00253E  3420               	rlcf	lcd_draw_char@fIndex^0,w,c
 10703  002540  6EF6               	movwf	tblptrl,c
 10704  002542  3421               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10705  002544  6EF7               	movwf	tblptrh,c
 10706  002546  0EC1               	movlw	low _font
 10707  002548  26F6               	addwf	tblptrl,f,c
 10708  00254A  0EF1               	movlw	high _font
 10709  00254C  22F7               	addwfc	tblptrh,f,c
 10710  00254E                     	if	1	;There are 3 active tblptr bytes
 10711  00254E  6AF8               	clrf	tblptru,c
 10712  002550  0E00               	movlw	low (__mediumconst shr (0+16))
 10713  002552  22F8               	addwfc	tblptru,f,c
 10714  002554                     	endif
 10715  002554  0009               	tblrd		*+
 10716  002556  CFF5 F028          	movff	tablat,??_lcd_draw_char+2
 10717  00255A  0009               	tblrd		*+
 10718  00255C  CFF5 F029          	movff	tablat,??_lcd_draw_char+3
 10719  002560  90D8               	bcf	status,0,c
 10720  002562  3628               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10721  002564  3629               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10722  002566  5026               	movf	??_lcd_draw_char^0,w,c
 10723  002568  5E28               	subwf	(??_lcd_draw_char+2)^0,f,c
 10724  00256A  5027               	movf	(??_lcd_draw_char+1)^0,w,c
 10725  00256C  5A29               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10726  00256E  5030               	movf	lcd_draw_char@k^0,w,c
 10727  002570  5E28               	subwf	(??_lcd_draw_char+2)^0,f,c
 10728  002572  0E00               	movlw	0
 10729  002574  5A29               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10730  002576  5020               	movf	lcd_draw_char@fIndex^0,w,c
 10731  002578  2628               	addwf	(??_lcd_draw_char+2)^0,f,c
 10732  00257A  5021               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 10733  00257C  2229               	addwfc	(??_lcd_draw_char+3)^0,f,c
 10734  00257E  90D8               	bcf	status,0,c
 10735  002580  3628               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10736  002582  3629               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10737  002584  0EC1               	movlw	low _font
 10738  002586  2428               	addwf	(??_lcd_draw_char+2)^0,w,c
 10739  002588  6EF6               	movwf	tblptrl,c
 10740  00258A  0EF1               	movlw	high _font
 10741  00258C  2029               	addwfc	(??_lcd_draw_char+3)^0,w,c
 10742  00258E  6EF7               	movwf	tblptrh,c
 10743  002590                     	if	1	;There are 3 active tblptr bytes
 10744  002590  6AF8               	clrf	tblptru,c
 10745  002592  0E00               	movlw	low (__mediumconst shr (0+16))
 10746  002594  22F8               	addwfc	tblptru,f,c
 10747  002596                     	endif
 10748  002596  0009               	tblrd		*+
 10749  002598  CFF5 F02A          	movff	tablat,??_lcd_draw_char+4
 10750  00259C  0009               	tblrd		*+
 10751  00259E  CFF5 F02B          	movff	tablat,??_lcd_draw_char+5
 10752  0025A2  C031  F02C         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 10753  0025A6  0E80               	movlw	128
 10754  0025A8  6E2D               	movwf	(??_lcd_draw_char+7)^0,c
 10755  0025AA  0E00               	movlw	0
 10756  0025AC  6E2E               	movwf	(??_lcd_draw_char+8)^0,c
 10757  0025AE  2A2C               	incf	(??_lcd_draw_char+6)^0,f,c
 10758  0025B0  EFDD  F012         	goto	u6274
 10759  0025B4                     u6275:
 10760  0025B4  342E               	rlcf	(??_lcd_draw_char+8)^0,w,c
 10761  0025B6  322E               	rrcf	(??_lcd_draw_char+8)^0,f,c
 10762  0025B8  322D               	rrcf	(??_lcd_draw_char+7)^0,f,c
 10763  0025BA                     u6274:
 10764  0025BA  2E2C               	decfsz	(??_lcd_draw_char+6)^0,f,c
 10765  0025BC  EFDA  F012         	goto	u6275
 10766  0025C0  502A               	movf	(??_lcd_draw_char+4)^0,w,c
 10767  0025C2  162D               	andwf	(??_lcd_draw_char+7)^0,f,c
 10768  0025C4  502B               	movf	(??_lcd_draw_char+5)^0,w,c
 10769  0025C6  162E               	andwf	(??_lcd_draw_char+8)^0,f,c
 10770  0025C8  502D               	movf	(??_lcd_draw_char+7)^0,w,c
 10771  0025CA  102E               	iorwf	(??_lcd_draw_char+8)^0,w,c
 10772  0025CC  B4D8               	btfsc	status,2,c
 10773  0025CE  EFEB  F012         	goto	u6281
 10774  0025D2  EFED  F012         	goto	u6280
 10775  0025D6                     u6281:
 10776  0025D6  EFF5  F012         	goto	l5771
 10777  0025DA                     u6280:
 10778  0025DA                     
 10779                           ;lib_ili9341.c: 366:                 {;lib_ili9341.c: 367:                     lcd_draw_
      +                          pixel(fg_color);
 10780  0025DA  C022  F016         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 10781  0025DE  C023  F017         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 10782  0025E2  ECAF  F01C         	call	_lcd_draw_pixel	;wreg free
 10783                           
 10784                           ;lib_ili9341.c: 368:                 }
 10785  0025E6  EFFB  F012         	goto	l5773
 10786  0025EA                     l5771:
 10787                           
 10788                           ;lib_ili9341.c: 370:                 {;lib_ili9341.c: 371:                     lcd_draw_
      +                          pixel(bg_color);
 10789  0025EA  C024  F016         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 10790  0025EE  C025  F017         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 10791  0025F2  ECAF  F01C         	call	_lcd_draw_pixel	;wreg free
 10792  0025F6                     l5773:
 10793                           
 10794                           ;lib_ili9341.c: 373:             }
 10795  0025F6  2A31               	incf	lcd_draw_char@i^0,f,c
 10796  0025F8  0E07               	movlw	7
 10797  0025FA  6431               	cpfsgt	lcd_draw_char@i^0,c
 10798  0025FC  EF02  F013         	goto	u6291
 10799  002600  EF04  F013         	goto	u6290
 10800  002604                     u6291:
 10801  002604  EF98  F012         	goto	l5767
 10802  002608                     u6290:
 10803  002608                     
 10804                           ;lib_ili9341.c: 374:         }
 10805  002608  2A30               	incf	lcd_draw_char@k^0,f,c
 10806  00260A  0E01               	movlw	1
 10807  00260C  6430               	cpfsgt	lcd_draw_char@k^0,c
 10808  00260E  EF0B  F013         	goto	u6301
 10809  002612  EF0D  F013         	goto	u6300
 10810  002616                     u6301:
 10811  002616  EF96  F012         	goto	l5761
 10812  00261A                     u6300:
 10813  00261A                     
 10814                           ;lib_ili9341.c: 375:     }
 10815  00261A  2A2F               	incf	lcd_draw_char@j^0,f,c
 10816  00261C                     l5783:
 10817  00261C  90D8               	bcf	status,0,c
 10818  00261E  3420               	rlcf	lcd_draw_char@fIndex^0,w,c
 10819  002620  6EF6               	movwf	tblptrl,c
 10820  002622  3421               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10821  002624  6EF7               	movwf	tblptrh,c
 10822  002626  0EC1               	movlw	low _font
 10823  002628  26F6               	addwf	tblptrl,f,c
 10824  00262A  0EF1               	movlw	high _font
 10825  00262C  22F7               	addwfc	tblptrh,f,c
 10826  00262E                     	if	1	;There are 3 active tblptr bytes
 10827  00262E  6AF8               	clrf	tblptru,c
 10828  002630  0E00               	movlw	low (__mediumconst shr (0+16))
 10829  002632  22F8               	addwfc	tblptru,f,c
 10830  002634                     	endif
 10831  002634  502F               	movf	lcd_draw_char@j^0,w,c
 10832  002636  6E26               	movwf	??_lcd_draw_char^0,c
 10833  002638  6A27               	clrf	(??_lcd_draw_char+1)^0,c
 10834  00263A  0009               	tblrd		*+
 10835  00263C  50F5               	movf	tablat,w,c
 10836  00263E  5C26               	subwf	??_lcd_draw_char^0,w,c
 10837  002640  0009               	tblrd		*+
 10838  002642  50F5               	movf	tablat,w,c
 10839  002644  5827               	subwfb	(??_lcd_draw_char+1)^0,w,c
 10840  002646  A0D8               	btfss	status,0,c
 10841  002648  EF28  F013         	goto	u6311
 10842  00264C  EF2A  F013         	goto	u6310
 10843  002650                     u6311:
 10844  002650  EF72  F012         	goto	l5753
 10845  002654                     u6310:
 10846  002654  0012               	return		;funcret
 10847  002656                     __end_of_lcd_draw_char:
 10848                           	opt callstack 0
 10849                           
 10850 ;; *************** function _lcd_draw_line *****************
 10851 ;; Defined at:
 10852 ;;		line 210 in file "lib_ili9341.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  x0              2   33[COMRAM] unsigned short 
 10855 ;;  y0              2   35[COMRAM] unsigned short 
 10856 ;;  x1              2   37[COMRAM] unsigned short 
 10857 ;;  y1              2   39[COMRAM] unsigned short 
 10858 ;;  color           2   41[COMRAM] unsigned short 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;  dy              2   54[COMRAM] short 
 10861 ;;  dx              2   52[COMRAM] short 
 10862 ;;  e2              2   50[COMRAM] short 
 10863 ;;  err             2   48[COMRAM] short 
 10864 ;;  sy              2   46[COMRAM] short 
 10865 ;;  sx              2   44[COMRAM] short 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10875 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10876 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;Total ram usage:       23 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:   10
 10882 ;; This function calls:
 10883 ;;		_lcd_draw_pixel_at
 10884 ;; This function is called by:
 10885 ;;		_main
 10886 ;;		_lcd_draw_filled_circle
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text35
 10891  002656                     __ptext35:
 10892                           	opt callstack 0
 10893  002656                     _lcd_draw_line:
 10894                           	opt callstack 20
 10895  002656                     
 10896                           ;lib_ili9341.c: 210: void lcd_draw_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 211: {;lib_ili9341.c: 212:     int16_t dx = x1 - x0, 
      +                          sx = x0 < x1 ? 1 : -1;
 10897  002656  5022               	movf	lcd_draw_line@x0^0,w,c
 10898  002658  5C26               	subwf	lcd_draw_line@x1^0,w,c
 10899  00265A  6E35               	movwf	lcd_draw_line@dx^0,c
 10900  00265C  5023               	movf	(lcd_draw_line@x0+1)^0,w,c
 10901  00265E  5827               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 10902  002660  6E36               	movwf	(lcd_draw_line@dx+1)^0,c
 10903  002662  5026               	movf	lcd_draw_line@x1^0,w,c
 10904  002664  5C22               	subwf	lcd_draw_line@x0^0,w,c
 10905  002666  5027               	movf	(lcd_draw_line@x1+1)^0,w,c
 10906  002668  5823               	subwfb	(lcd_draw_line@x0+1)^0,w,c
 10907  00266A  A0D8               	btfss	status,0,c
 10908  00266C  EF3A  F013         	goto	u6371
 10909  002670  EF3C  F013         	goto	u6370
 10910  002674                     u6371:
 10911  002674  EF40  F013         	goto	l6007
 10912  002678                     u6370:
 10913  002678  682D               	setf	lcd_draw_line@sx^0,c
 10914  00267A  682E               	setf	(lcd_draw_line@sx+1)^0,c
 10915  00267C  EF44  F013         	goto	l6009
 10916  002680                     l6007:
 10917  002680  0E00               	movlw	0
 10918  002682  6E2E               	movwf	(lcd_draw_line@sx+1)^0,c
 10919  002684  0E01               	movlw	1
 10920  002686  6E2D               	movwf	lcd_draw_line@sx^0,c
 10921  002688                     l6009:
 10922                           
 10923                           ;lib_ili9341.c: 213:     int16_t dy = y1 - y0, sy = y0 < y1 ? 1 : -1;
 10924  002688  5024               	movf	lcd_draw_line@y0^0,w,c
 10925  00268A  5C28               	subwf	lcd_draw_line@y1^0,w,c
 10926  00268C  6E37               	movwf	lcd_draw_line@dy^0,c
 10927  00268E  5025               	movf	(lcd_draw_line@y0+1)^0,w,c
 10928  002690  5829               	subwfb	(lcd_draw_line@y1+1)^0,w,c
 10929  002692  6E38               	movwf	(lcd_draw_line@dy+1)^0,c
 10930  002694  5028               	movf	lcd_draw_line@y1^0,w,c
 10931  002696  5C24               	subwf	lcd_draw_line@y0^0,w,c
 10932  002698  5029               	movf	(lcd_draw_line@y1+1)^0,w,c
 10933  00269A  5825               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 10934  00269C  A0D8               	btfss	status,0,c
 10935  00269E  EF53  F013         	goto	u6381
 10936  0026A2  EF55  F013         	goto	u6380
 10937  0026A6                     u6381:
 10938  0026A6  EF59  F013         	goto	l6015
 10939  0026AA                     u6380:
 10940  0026AA  682F               	setf	lcd_draw_line@sy^0,c
 10941  0026AC  6830               	setf	(lcd_draw_line@sy+1)^0,c
 10942  0026AE  EF5D  F013         	goto	l6017
 10943  0026B2                     l6015:
 10944  0026B2  0E00               	movlw	0
 10945  0026B4  6E30               	movwf	(lcd_draw_line@sy+1)^0,c
 10946  0026B6  0E01               	movlw	1
 10947  0026B8  6E2F               	movwf	lcd_draw_line@sy^0,c
 10948  0026BA                     l6017:
 10949                           
 10950                           ;lib_ili9341.c: 214:     int16_t err, e2;;lib_ili9341.c: 216:     if(x0 > x1)
 10951  0026BA  5022               	movf	lcd_draw_line@x0^0,w,c
 10952  0026BC  5C26               	subwf	lcd_draw_line@x1^0,w,c
 10953  0026BE  5023               	movf	(lcd_draw_line@x0+1)^0,w,c
 10954  0026C0  5827               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 10955  0026C2  B0D8               	btfsc	status,0,c
 10956  0026C4  EF66  F013         	goto	u6391
 10957  0026C8  EF68  F013         	goto	u6390
 10958  0026CC                     u6391:
 10959  0026CC  EF6C  F013         	goto	l6021
 10960  0026D0                     u6390:
 10961  0026D0                     
 10962                           ;lib_ili9341.c: 217:     {;lib_ili9341.c: 218:         dx = -dx;
 10963  0026D0  6C35               	negf	lcd_draw_line@dx^0,c
 10964  0026D2  1E36               	comf	(lcd_draw_line@dx+1)^0,f,c
 10965  0026D4  B0D8               	btfsc	status,0,c
 10966  0026D6  2A36               	incf	(lcd_draw_line@dx+1)^0,f,c
 10967  0026D8                     l6021:
 10968                           
 10969                           ;lib_ili9341.c: 221:     if(y1 > y0)
 10970  0026D8  5028               	movf	lcd_draw_line@y1^0,w,c
 10971  0026DA  5C24               	subwf	lcd_draw_line@y0^0,w,c
 10972  0026DC  5029               	movf	(lcd_draw_line@y1+1)^0,w,c
 10973  0026DE  5825               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 10974  0026E0  B0D8               	btfsc	status,0,c
 10975  0026E2  EF75  F013         	goto	u6401
 10976  0026E6  EF77  F013         	goto	u6400
 10977  0026EA                     u6401:
 10978  0026EA  EF7B  F013         	goto	l6025
 10979  0026EE                     u6400:
 10980  0026EE                     
 10981                           ;lib_ili9341.c: 222:     {;lib_ili9341.c: 223:         dy = -dy;
 10982  0026EE  6C37               	negf	lcd_draw_line@dy^0,c
 10983  0026F0  1E38               	comf	(lcd_draw_line@dy+1)^0,f,c
 10984  0026F2  B0D8               	btfsc	status,0,c
 10985  0026F4  2A38               	incf	(lcd_draw_line@dy+1)^0,f,c
 10986  0026F6                     l6025:
 10987                           
 10988                           ;lib_ili9341.c: 226:     err = dx + dy;
 10989  0026F6  5037               	movf	lcd_draw_line@dy^0,w,c
 10990  0026F8  2435               	addwf	lcd_draw_line@dx^0,w,c
 10991  0026FA  6E31               	movwf	lcd_draw_line@err^0,c
 10992  0026FC  5038               	movf	(lcd_draw_line@dy+1)^0,w,c
 10993  0026FE  2036               	addwfc	(lcd_draw_line@dx+1)^0,w,c
 10994  002700  6E32               	movwf	(lcd_draw_line@err+1)^0,c
 10995  002702                     l6027:
 10996                           
 10997                           ;lib_ili9341.c: 229:     {;lib_ili9341.c: 230:         lcd_draw_pixel_at( x0, y0, color)
      +                          ;
 10998  002702  C022  F01C         	movff	lcd_draw_line@x0,lcd_draw_pixel_at@x
 10999  002706  C023  F01D         	movff	lcd_draw_line@x0+1,lcd_draw_pixel_at@x+1
 11000  00270A  C024  F01E         	movff	lcd_draw_line@y0,lcd_draw_pixel_at@y
 11001  00270E  C025  F01F         	movff	lcd_draw_line@y0+1,lcd_draw_pixel_at@y+1
 11002  002712  C02A  F020         	movff	lcd_draw_line@color,lcd_draw_pixel_at@color
 11003  002716  C02B  F021         	movff	lcd_draw_line@color+1,lcd_draw_pixel_at@color+1
 11004  00271A  ECC5  F01B         	call	_lcd_draw_pixel_at	;wreg free
 11005  00271E                     
 11006                           ;lib_ili9341.c: 232:         if ( (x0 == x1) && (y0 == y1) )
 11007  00271E  5026               	movf	lcd_draw_line@x1^0,w,c
 11008  002720  1822               	xorwf	lcd_draw_line@x0^0,w,c
 11009  002722  E107               	bnz	u6411
 11010  002724  5027               	movf	(lcd_draw_line@x1+1)^0,w,c
 11011  002726  1823               	xorwf	(lcd_draw_line@x0+1)^0,w,c
 11012  002728  A4D8               	btfss	status,2,c
 11013  00272A  EF99  F013         	goto	u6411
 11014  00272E  EF9B  F013         	goto	u6410
 11015  002732                     u6411:
 11016  002732  EFA9  F013         	goto	l6035
 11017  002736                     u6410:
 11018  002736  5028               	movf	lcd_draw_line@y1^0,w,c
 11019  002738  1824               	xorwf	lcd_draw_line@y0^0,w,c
 11020  00273A  E107               	bnz	u6421
 11021  00273C  5029               	movf	(lcd_draw_line@y1+1)^0,w,c
 11022  00273E  1825               	xorwf	(lcd_draw_line@y0+1)^0,w,c
 11023  002740  A4D8               	btfss	status,2,c
 11024  002742  EFA5  F013         	goto	u6421
 11025  002746  EFA7  F013         	goto	u6420
 11026  00274A                     u6421:
 11027  00274A  EFA9  F013         	goto	l6035
 11028  00274E                     u6420:
 11029  00274E  EFDE  F013         	goto	l305
 11030  002752                     l6035:
 11031                           
 11032                           ;lib_ili9341.c: 237:         e2 = (err << 1);
 11033  002752  90D8               	bcf	status,0,c
 11034  002754  3431               	rlcf	lcd_draw_line@err^0,w,c
 11035  002756  6E33               	movwf	lcd_draw_line@e2^0,c
 11036  002758  3432               	rlcf	(lcd_draw_line@err+1)^0,w,c
 11037  00275A  6E34               	movwf	(lcd_draw_line@e2+1)^0,c
 11038                           
 11039                           ;lib_ili9341.c: 239:         if(e2 >= dy)
 11040  00275C  5037               	movf	lcd_draw_line@dy^0,w,c
 11041  00275E  5C33               	subwf	lcd_draw_line@e2^0,w,c
 11042  002760  5034               	movf	(lcd_draw_line@e2+1)^0,w,c
 11043  002762  0A80               	xorlw	128
 11044  002764  6E2C               	movwf	??_lcd_draw_line^0,c
 11045  002766  5038               	movf	(lcd_draw_line@dy+1)^0,w,c
 11046  002768  0A80               	xorlw	128
 11047  00276A  582C               	subwfb	??_lcd_draw_line^0,w,c
 11048  00276C  A0D8               	btfss	status,0,c
 11049  00276E  EFBB  F013         	goto	u6431
 11050  002772  EFBD  F013         	goto	u6430
 11051  002776                     u6431:
 11052  002776  EFC5  F013         	goto	l302
 11053  00277A                     u6430:
 11054  00277A                     
 11055                           ;lib_ili9341.c: 240:         {;lib_ili9341.c: 241:             err += dy;
 11056  00277A  5037               	movf	lcd_draw_line@dy^0,w,c
 11057  00277C  2631               	addwf	lcd_draw_line@err^0,f,c
 11058  00277E  5038               	movf	(lcd_draw_line@dy+1)^0,w,c
 11059  002780  2232               	addwfc	(lcd_draw_line@err+1)^0,f,c
 11060                           
 11061                           ;lib_ili9341.c: 242:             x0 += sx;
 11062  002782  502D               	movf	lcd_draw_line@sx^0,w,c
 11063  002784  2622               	addwf	lcd_draw_line@x0^0,f,c
 11064  002786  502E               	movf	(lcd_draw_line@sx+1)^0,w,c
 11065  002788  2223               	addwfc	(lcd_draw_line@x0+1)^0,f,c
 11066  00278A                     l302:
 11067                           
 11068                           ;lib_ili9341.c: 245:         if(e2 <= dx)
 11069  00278A  5033               	movf	lcd_draw_line@e2^0,w,c
 11070  00278C  5C35               	subwf	lcd_draw_line@dx^0,w,c
 11071  00278E  5036               	movf	(lcd_draw_line@dx+1)^0,w,c
 11072  002790  0A80               	xorlw	128
 11073  002792  6E2C               	movwf	??_lcd_draw_line^0,c
 11074  002794  5034               	movf	(lcd_draw_line@e2+1)^0,w,c
 11075  002796  0A80               	xorlw	128
 11076  002798  582C               	subwfb	??_lcd_draw_line^0,w,c
 11077  00279A  A0D8               	btfss	status,0,c
 11078  00279C  EFD2  F013         	goto	u6441
 11079  0027A0  EFD4  F013         	goto	u6440
 11080  0027A4                     u6441:
 11081  0027A4  EF81  F013         	goto	l6027
 11082  0027A8                     u6440:
 11083  0027A8                     
 11084                           ;lib_ili9341.c: 246:         {;lib_ili9341.c: 247:             err += dx;
 11085  0027A8  5035               	movf	lcd_draw_line@dx^0,w,c
 11086  0027AA  2631               	addwf	lcd_draw_line@err^0,f,c
 11087  0027AC  5036               	movf	(lcd_draw_line@dx+1)^0,w,c
 11088  0027AE  2232               	addwfc	(lcd_draw_line@err+1)^0,f,c
 11089                           
 11090                           ;lib_ili9341.c: 248:             y0 += sy;
 11091  0027B0  502F               	movf	lcd_draw_line@sy^0,w,c
 11092  0027B2  2624               	addwf	lcd_draw_line@y0^0,f,c
 11093  0027B4  5030               	movf	(lcd_draw_line@sy+1)^0,w,c
 11094  0027B6  2225               	addwfc	(lcd_draw_line@y0+1)^0,f,c
 11095  0027B8  EF81  F013         	goto	l6027
 11096  0027BC                     l305:
 11097  0027BC  0012               	return		;funcret
 11098  0027BE                     __end_of_lcd_draw_line:
 11099                           	opt callstack 0
 11100                           
 11101 ;; *************** function _lcd_draw_pixel_at *****************
 11102 ;; Defined at:
 11103 ;;		line 253 in file "lib_ili9341.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;  x               2   27[COMRAM] unsigned short 
 11106 ;;  y               2   29[COMRAM] unsigned short 
 11107 ;;  color           2   31[COMRAM] unsigned short 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11119 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11123 ;;Total ram usage:        6 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    9
 11126 ;; This function calls:
 11127 ;;		_lcd_draw_pixel
 11128 ;;		_lcd_set_cursor
 11129 ;; This function is called by:
 11130 ;;		_lcd_draw_line
 11131 ;;		_lcd_draw_circle
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text36
 11136  00378A                     __ptext36:
 11137                           	opt callstack 0
 11138  00378A                     _lcd_draw_pixel_at:
 11139                           	opt callstack 20
 11140  00378A                     
 11141                           ;lib_ili9341.c: 253: void lcd_draw_pixel_at(uint16_t x, uint16_t y, uint16_t color);lib_
      +                          ili9341.c: 254: {;lib_ili9341.c: 255:     if( !lcd_set_cursor(x,y) )
 11142  00378A  C01C  F018         	movff	lcd_draw_pixel_at@x,lcd_set_cursor@x
 11143  00378E  C01D  F019         	movff	lcd_draw_pixel_at@x+1,lcd_set_cursor@x+1
 11144  003792  C01E  F01A         	movff	lcd_draw_pixel_at@y,lcd_set_cursor@y
 11145  003796  C01F  F01B         	movff	lcd_draw_pixel_at@y+1,lcd_set_cursor@y+1
 11146  00379A  ECB9  F01A         	call	_lcd_set_cursor	;wreg free
 11147  00379E  0900               	iorlw	0
 11148  0037A0  A4D8               	btfss	status,2,c
 11149  0037A2  EFD5  F01B         	goto	u6261
 11150  0037A6  EFD7  F01B         	goto	u6260
 11151  0037AA                     u6261:
 11152  0037AA  EFDD  F01B         	goto	l309
 11153  0037AE                     u6260:
 11154  0037AE                     
 11155                           ;lib_ili9341.c: 256:     {;lib_ili9341.c: 257:         lcd_draw_pixel(color);
 11156  0037AE  C020  F016         	movff	lcd_draw_pixel_at@color,lcd_draw_pixel@color
 11157  0037B2  C021  F017         	movff	lcd_draw_pixel_at@color+1,lcd_draw_pixel@color+1
 11158  0037B6  ECAF  F01C         	call	_lcd_draw_pixel	;wreg free
 11159  0037BA                     l309:
 11160  0037BA  0012               	return		;funcret
 11161  0037BC                     __end_of_lcd_draw_pixel_at:
 11162                           	opt callstack 0
 11163                           
 11164 ;; *************** function _lcd_set_cursor *****************
 11165 ;; Defined at:
 11166 ;;		line 142 in file "lib_ili9341.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  x               2   23[COMRAM] unsigned short 
 11169 ;;  y               2   25[COMRAM] unsigned short 
 11170 ;; Auto vars:     Size  Location     Type
 11171 ;;		None
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  1    wreg      unsigned char 
 11174 ;; Registers used:
 11175 ;;		wreg, status,2, status,0, cstack
 11176 ;; Tracked objects:
 11177 ;;		On entry : 0/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11184 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11185 ;;Total ram usage:        4 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; Hardware stack levels required when called:    8
 11188 ;; This function calls:
 11189 ;;		_lcd_set_cursor_x
 11190 ;;		_lcd_set_cursor_y
 11191 ;; This function is called by:
 11192 ;;		_lcd_fill
 11193 ;;		_lcd_draw_pixel_at
 11194 ;;		_lcd_draw_char
 11195 ;;		_lcd_fill_rect
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           	psect	text37
 11200  003572                     __ptext37:
 11201                           	opt callstack 0
 11202  003572                     _lcd_set_cursor:
 11203                           	opt callstack 20
 11204  003572                     
 11205                           ;lib_ili9341.c: 142: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 143: 
      +                          {;lib_ili9341.c: 144:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 11206  003572  C018  F016         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 11207  003576  C019  F017         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 11208  00357A  EC50  F01A         	call	_lcd_set_cursor_x	;wreg free
 11209  00357E  0900               	iorlw	0
 11210  003580  A4D8               	btfss	status,2,c
 11211  003582  EFC5  F01A         	goto	u6201
 11212  003586  EFC7  F01A         	goto	u6200
 11213  00358A                     u6201:
 11214  00358A  EFD5  F01A         	goto	l5713
 11215  00358E                     u6200:
 11216  00358E  C01A  F016         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 11217  003592  C01B  F017         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 11218  003596  EC2C  F01A         	call	_lcd_set_cursor_y	;wreg free
 11219  00359A  0900               	iorlw	0
 11220  00359C  B4D8               	btfsc	status,2,c
 11221  00359E  EFD3  F01A         	goto	u6211
 11222  0035A2  EFD5  F01A         	goto	u6210
 11223  0035A6                     u6211:
 11224  0035A6  EFD8  F01A         	goto	l5717
 11225  0035AA                     u6210:
 11226  0035AA                     l5713:
 11227                           
 11228                           ;lib_ili9341.c: 145:     {;lib_ili9341.c: 146:         return 1;
 11229  0035AA  0E01               	movlw	1
 11230  0035AC  EFD9  F01A         	goto	l265
 11231  0035B0                     l5717:
 11232                           
 11233                           ;lib_ili9341.c: 149:     return 0;
 11234  0035B0  0E00               	movlw	0
 11235  0035B2                     l265:
 11236  0035B2  0012               	return		;funcret
 11237  0035B4                     __end_of_lcd_set_cursor:
 11238                           	opt callstack 0
 11239                           
 11240 ;; *************** function _lcd_set_cursor_y *****************
 11241 ;; Defined at:
 11242 ;;		line 168 in file "lib_ili9341.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;  y               2   21[COMRAM] unsigned short 
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;		None
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  1    wreg      unsigned char 
 11249 ;; Registers used:
 11250 ;;		wreg, status,2, status,0, cstack
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11260 ;;Total ram usage:        2 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:    7
 11263 ;; This function calls:
 11264 ;;		_lcd_send
 11265 ;; This function is called by:
 11266 ;;		_lcd_set_cursor
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text38
 11271  003458                     __ptext38:
 11272                           	opt callstack 0
 11273  003458                     _lcd_set_cursor_y:
 11274                           	opt callstack 20
 11275  003458                     
 11276                           ;lib_ili9341.c: 168: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 169: {;lib_ili9
      +                          341.c: 170:     if( y >= 240 )
 11277  003458  5017               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 11278  00345A  E109               	bnz	u5740
 11279  00345C  0EF0               	movlw	240
 11280  00345E  5C16               	subwf	lcd_set_cursor_y@y^0,w,c
 11281  003460  A0D8               	btfss	status,0,c
 11282  003462  EF35  F01A         	goto	u5741
 11283  003466  EF37  F01A         	goto	u5740
 11284  00346A                     u5741:
 11285  00346A  EF3A  F01A         	goto	l5367
 11286  00346E                     u5740:
 11287  00346E                     
 11288                           ;lib_ili9341.c: 171:     {;lib_ili9341.c: 172:         return 1;
 11289  00346E  0E01               	movlw	1
 11290  003470  EF4F  F01A         	goto	l273
 11291  003474                     l5367:
 11292                           
 11293                           ;lib_ili9341.c: 175:     lcd_send(0, 0x2A);
 11294  003474  0E2A               	movlw	42
 11295  003476  6E14               	movwf	lcd_send@value^0,c
 11296  003478  0E00               	movlw	0
 11297  00347A  EC97  F01C         	call	_lcd_send
 11298                           
 11299                           ;lib_ili9341.c: 176:     lcd_send(1, y >> 8);
 11300  00347E  5017               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 11301  003480  6E14               	movwf	lcd_send@value^0,c
 11302  003482  0E01               	movlw	1
 11303  003484  EC97  F01C         	call	_lcd_send
 11304                           
 11305                           ;lib_ili9341.c: 177:     lcd_send(1, y & 0xFF);
 11306  003488  C016  F014         	movff	lcd_set_cursor_y@y,lcd_send@value
 11307  00348C  0E01               	movlw	1
 11308  00348E  EC97  F01C         	call	_lcd_send
 11309                           
 11310                           ;lib_ili9341.c: 178:     lcd_send(0, 0x2c);
 11311  003492  0E2C               	movlw	44
 11312  003494  6E14               	movwf	lcd_send@value^0,c
 11313  003496  0E00               	movlw	0
 11314  003498  EC97  F01C         	call	_lcd_send
 11315  00349C                     
 11316                           ;lib_ili9341.c: 180:     return 0;
 11317  00349C  0E00               	movlw	0
 11318  00349E                     l273:
 11319  00349E  0012               	return		;funcret
 11320  0034A0                     __end_of_lcd_set_cursor_y:
 11321                           	opt callstack 0
 11322                           
 11323 ;; *************** function _lcd_set_cursor_x *****************
 11324 ;; Defined at:
 11325 ;;		line 153 in file "lib_ili9341.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  x               2   21[COMRAM] unsigned short 
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      unsigned char 
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11343 ;;Total ram usage:        2 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:    7
 11346 ;; This function calls:
 11347 ;;		_lcd_send
 11348 ;; This function is called by:
 11349 ;;		_lcd_set_cursor
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text39
 11354  0034A0                     __ptext39:
 11355                           	opt callstack 0
 11356  0034A0                     _lcd_set_cursor_x:
 11357                           	opt callstack 20
 11358  0034A0                     
 11359                           ;lib_ili9341.c: 153: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 154: {;lib_ili9
      +                          341.c: 155:     if( x >= 320 )
 11360  0034A0  0E40               	movlw	64
 11361  0034A2  5C16               	subwf	lcd_set_cursor_x@x^0,w,c
 11362  0034A4  0E01               	movlw	1
 11363  0034A6  5817               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 11364  0034A8  A0D8               	btfss	status,0,c
 11365  0034AA  EF59  F01A         	goto	u5731
 11366  0034AE  EF5B  F01A         	goto	u5730
 11367  0034B2                     u5731:
 11368  0034B2  EF5E  F01A         	goto	l5355
 11369  0034B6                     u5730:
 11370  0034B6                     
 11371                           ;lib_ili9341.c: 156:     {;lib_ili9341.c: 157:         return 1;
 11372  0034B6  0E01               	movlw	1
 11373  0034B8  EF73  F01A         	goto	l269
 11374  0034BC                     l5355:
 11375                           
 11376                           ;lib_ili9341.c: 160:     lcd_send(0, 0x2B);
 11377  0034BC  0E2B               	movlw	43
 11378  0034BE  6E14               	movwf	lcd_send@value^0,c
 11379  0034C0  0E00               	movlw	0
 11380  0034C2  EC97  F01C         	call	_lcd_send
 11381                           
 11382                           ;lib_ili9341.c: 161:     lcd_send(1, x >> 8);
 11383  0034C6  5017               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 11384  0034C8  6E14               	movwf	lcd_send@value^0,c
 11385  0034CA  0E01               	movlw	1
 11386  0034CC  EC97  F01C         	call	_lcd_send
 11387                           
 11388                           ;lib_ili9341.c: 162:     lcd_send(1, x & 0xFF);
 11389  0034D0  C016  F014         	movff	lcd_set_cursor_x@x,lcd_send@value
 11390  0034D4  0E01               	movlw	1
 11391  0034D6  EC97  F01C         	call	_lcd_send
 11392                           
 11393                           ;lib_ili9341.c: 163:     lcd_send(0, 0x2c);
 11394  0034DA  0E2C               	movlw	44
 11395  0034DC  6E14               	movwf	lcd_send@value^0,c
 11396  0034DE  0E00               	movlw	0
 11397  0034E0  EC97  F01C         	call	_lcd_send
 11398  0034E4                     
 11399                           ;lib_ili9341.c: 165:     return 0;
 11400  0034E4  0E00               	movlw	0
 11401  0034E6                     l269:
 11402  0034E6  0012               	return		;funcret
 11403  0034E8                     __end_of_lcd_set_cursor_x:
 11404                           	opt callstack 0
 11405                           
 11406 ;; *************** function _lcd_draw_pixel *****************
 11407 ;; Defined at:
 11408 ;;		line 183 in file "lib_ili9341.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  color           2   21[COMRAM] unsigned short 
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;		None
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  1    wreg      unsigned char 
 11415 ;; Registers used:
 11416 ;;		wreg, status,2, cstack
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11426 ;;Total ram usage:        2 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    7
 11429 ;; This function calls:
 11430 ;;		_lcd_send
 11431 ;; This function is called by:
 11432 ;;		_lcd_fill
 11433 ;;		_lcd_draw_pixel_at
 11434 ;;		_lcd_draw_char
 11435 ;;		_lcd_fill_rect
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text40
 11440  00395E                     __ptext40:
 11441                           	opt callstack 0
 11442  00395E                     _lcd_draw_pixel:
 11443                           	opt callstack 21
 11444  00395E                     
 11445                           ;lib_ili9341.c: 183: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 184: {;lib_il
      +                          i9341.c: 185:     lcd_send(1, color >> 8);
 11446  00395E  5017               	movf	(lcd_draw_pixel@color+1)^0,w,c
 11447  003960  6E14               	movwf	lcd_send@value^0,c
 11448  003962  0E01               	movlw	1
 11449  003964  EC97  F01C         	call	_lcd_send
 11450                           
 11451                           ;lib_ili9341.c: 186:     lcd_send(1, color & 0xFF);
 11452  003968  C016  F014         	movff	lcd_draw_pixel@color,lcd_send@value
 11453  00396C  0E01               	movlw	1
 11454  00396E  EC97  F01C         	call	_lcd_send
 11455  003972  0012               	return		;funcret
 11456  003974                     __end_of_lcd_draw_pixel:
 11457                           	opt callstack 0
 11458                           
 11459 ;; *************** function _lcd_send *****************
 11460 ;; Defined at:
 11461 ;;		line 132 in file "lib_ili9341.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;  dc              1    wreg     _Bool 
 11464 ;;  value           1   19[COMRAM] unsigned char 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;  dc              1   20[COMRAM] _Bool 
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      void 
 11469 ;; Registers used:
 11470 ;;		wreg, status,2, cstack
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11480 ;;Total ram usage:        2 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; Hardware stack levels required when called:    6
 11483 ;; This function calls:
 11484 ;;		_SPI_ExchangeByte
 11485 ;; This function is called by:
 11486 ;;		_lcd_init
 11487 ;;		_lcd_set_cursor_x
 11488 ;;		_lcd_set_cursor_y
 11489 ;;		_lcd_draw_pixel
 11490 ;; This function uses a non-reentrant model
 11491 ;;
 11492                           
 11493                           	psect	text41
 11494  00392E                     __ptext41:
 11495                           	opt callstack 0
 11496  00392E                     _lcd_send:
 11497                           	opt callstack 23
 11498                           
 11499                           ;incstack = 0
 11500                           ;lcd_send@dc stored from wreg
 11501  00392E  6E15               	movwf	lcd_send@dc^0,c
 11502  003930                     
 11503                           ;lib_ili9341.c: 132: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 133: {;lib_il
      +                          i9341.c: 134:     LATEbits.LE0 = dc;
 11504  003930  B015               	btfsc	lcd_send@dc^0,0,c
 11505  003932  D002               	bra	u5015
 11506  003934  908D               	bcf	141,0,c	;volatile
 11507  003936  D001               	bra	u5016
 11508  003938                     u5015:
 11509  003938  808D               	bsf	141,0,c	;volatile
 11510  00393A                     u5016:
 11511  00393A                     
 11512                           ;lib_ili9341.c: 136:     LATEbits.LE1 = 0;
 11513  00393A  928D               	bcf	141,1,c	;volatile
 11514  00393C                     
 11515                           ;lib_ili9341.c: 138:     SPI_ExchangeByte(value);
 11516  00393C  5014               	movf	lcd_send@value^0,w,c
 11517  00393E  EC8A  F01C         	call	_SPI_ExchangeByte
 11518  003942                     
 11519                           ;lib_ili9341.c: 139:     LATEbits.LE1 = 1;
 11520  003942  828D               	bsf	141,1,c	;volatile
 11521  003944  0012               	return		;funcret
 11522  003946                     __end_of_lcd_send:
 11523                           	opt callstack 0
 11524                           
 11525 ;; *************** function _SPI_ExchangeByte *****************
 11526 ;; Defined at:
 11527 ;;		line 92 in file "mcc_generated_files/spi.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;  data            1    wreg     unsigned char 
 11530 ;; Auto vars:     Size  Location     Type
 11531 ;;  data            1   18[COMRAM] unsigned char 
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  1    wreg      unsigned char 
 11534 ;; Registers used:
 11535 ;;		wreg, status,2
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11545 ;;Total ram usage:        1 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:    5
 11548 ;; This function calls:
 11549 ;;		Nothing
 11550 ;; This function is called by:
 11551 ;;		_lcd_send
 11552 ;;		_SPI_WriteBlock
 11553 ;;		_SPI_ReadBlock
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text42
 11558  003914                     __ptext42:
 11559                           	opt callstack 0
 11560  003914                     _SPI_ExchangeByte:
 11561                           	opt callstack 23
 11562                           
 11563                           ;incstack = 0
 11564                           ;SPI_ExchangeByte@data stored from wreg
 11565  003914  6E13               	movwf	SPI_ExchangeByte@data^0,c
 11566  003916                     
 11567                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 11568  003916  C013  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 11569  00391A                     l138:
 11570  00391A  A69E               	btfss	158,3,c	;volatile
 11571  00391C  EF92  F01C         	goto	u4641
 11572  003920  EF94  F01C         	goto	u4640
 11573  003924                     u4641:
 11574  003924  EF8D  F01C         	goto	l138
 11575  003928                     u4640:
 11576  003928                     
 11577                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 11578  003928  969E               	bcf	158,3,c	;volatile
 11579                           
 11580                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 11581  00392A  50C9               	movf	201,w,c	;volatile
 11582  00392C  0012               	return		;funcret
 11583  00392E                     __end_of_SPI_ExchangeByte:
 11584                           	opt callstack 0
 11585                           
 11586 ;; *************** function _SYSTEM_Initialize *****************
 11587 ;; Defined at:
 11588 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;		None
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, status,2, status,0, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;Total ram usage:        0 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:    7
 11609 ;; This function calls:
 11610 ;;		_ADC_Initialize
 11611 ;;		_INTERRUPT_Initialize
 11612 ;;		_OSCILLATOR_Initialize
 11613 ;;		_PIN_MANAGER_Initialize
 11614 ;;		_SPI_Initialize
 11615 ;; This function is called by:
 11616 ;;		_main
 11617 ;; This function uses a non-reentrant model
 11618 ;;
 11619                           
 11620                           	psect	text43
 11621  003974                     __ptext43:
 11622                           	opt callstack 0
 11623  003974                     _SYSTEM_Initialize:
 11624                           	opt callstack 23
 11625  003974                     
 11626                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 11627  003974  ECE5  F01C         	call	_INTERRUPT_Initialize	;wreg free
 11628  003978                     
 11629                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 11630  003978  ECC5  F01C         	call	_SPI_Initialize	;wreg free
 11631  00397C                     
 11632                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 11633  00397C  EC74  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
 11634  003980                     
 11635                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 11636  003980  ECCE  F01C         	call	_OSCILLATOR_Initialize	;wreg free
 11637  003984                     
 11638                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 11639  003984  EC78  F01C         	call	_ADC_Initialize	;wreg free
 11640  003988  0012               	return		;funcret
 11641  00398A                     __end_of_SYSTEM_Initialize:
 11642                           	opt callstack 0
 11643                           
 11644 ;; *************** function _SPI_Initialize *****************
 11645 ;; Defined at:
 11646 ;;		line 62 in file "mcc_generated_files/spi.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;		None
 11649 ;; Auto vars:     Size  Location     Type
 11650 ;;		None
 11651 ;; Return value:  Size  Location     Type
 11652 ;;                  1    wreg      void 
 11653 ;; Registers used:
 11654 ;;		wreg, status,2
 11655 ;; Tracked objects:
 11656 ;;		On entry : 0/0
 11657 ;;		On exit  : 0/0
 11658 ;;		Unchanged: 0/0
 11659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11664 ;;Total ram usage:        0 bytes
 11665 ;; Hardware stack levels used:    1
 11666 ;; Hardware stack levels required when called:    5
 11667 ;; This function calls:
 11668 ;;		Nothing
 11669 ;; This function is called by:
 11670 ;;		_SYSTEM_Initialize
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           	psect	text44
 11675  00398A                     __ptext44:
 11676                           	opt callstack 0
 11677  00398A                     _SPI_Initialize:
 11678                           	opt callstack 24
 11679  00398A                     
 11680                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 11681  00398A  0E40               	movlw	64
 11682  00398C  6EC7               	movwf	199,c	;volatile
 11683                           
 11684                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 11685  00398E  0E00               	movlw	0
 11686  003990  6EC6               	movwf	198,c	;volatile
 11687                           
 11688                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 11689  003992  0E01               	movlw	1
 11690  003994  6EC8               	movwf	200,c	;volatile
 11691  003996                     
 11692                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 11693  003996  9694               	bcf	148,3,c	;volatile
 11694  003998                     
 11695                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 11696  003998  9AC6               	bcf	198,5,c	;volatile
 11697  00399A  0012               	return		;funcret
 11698  00399C                     __end_of_SPI_Initialize:
 11699                           	opt callstack 0
 11700                           
 11701 ;; *************** function _PIN_MANAGER_Initialize *****************
 11702 ;; Defined at:
 11703 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;		None
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;		None
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  1    wreg      void 
 11710 ;; Registers used:
 11711 ;;		wreg, status,2, status,0, cstack
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11721 ;;Total ram usage:        0 bytes
 11722 ;; Hardware stack levels used:    1
 11723 ;; Hardware stack levels required when called:    6
 11724 ;; This function calls:
 11725 ;;		_IOCB4_SetInterruptHandler
 11726 ;; This function is called by:
 11727 ;;		_SYSTEM_Initialize
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text45
 11732  0034E8                     __ptext45:
 11733                           	opt callstack 0
 11734  0034E8                     _PIN_MANAGER_Initialize:
 11735                           	opt callstack 23
 11736  0034E8                     
 11737                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 11738  0034E8  0E00               	movlw	0
 11739  0034EA  6E8D               	movwf	141,c	;volatile
 11740                           
 11741                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11742  0034EC  0E00               	movlw	0
 11743  0034EE  6E8C               	movwf	140,c	;volatile
 11744                           
 11745                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11746  0034F0  0E00               	movlw	0
 11747  0034F2  6E89               	movwf	137,c	;volatile
 11748                           
 11749                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 11750  0034F4  0E00               	movlw	0
 11751  0034F6  6E8A               	movwf	138,c	;volatile
 11752                           
 11753                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 11754  0034F8  0E00               	movlw	0
 11755  0034FA  6E8B               	movwf	139,c	;volatile
 11756                           
 11757                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 11758  0034FC  0E04               	movlw	4
 11759  0034FE  6E96               	movwf	150,c	;volatile
 11760                           
 11761                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xCF;
 11762  003500  0ECF               	movlw	207
 11763  003502  6E92               	movwf	146,c	;volatile
 11764  003504                     
 11765                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 11766  003504  6893               	setf	147,c	;volatile
 11767                           
 11768                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 11769  003506  0ED7               	movlw	215
 11770  003508  6E94               	movwf	148,c	;volatile
 11771  00350A                     
 11772                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 11773  00350A  6895               	setf	149,c	;volatile
 11774                           
 11775                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x8E;
 11776  00350C  0E8E               	movlw	142
 11777  00350E  010F               	movlb	15	; () banked
 11778  003510  6F5D               	movwf	93,b	;volatile
 11779                           
 11780                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 11781  003512  0E7D               	movlw	125
 11782  003514  6F5C               	movwf	92,b	;volatile
 11783                           
 11784                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 11785  003516  0E00               	movlw	0
 11786  003518  6F5B               	movwf	91,b	;volatile
 11787  00351A                     
 11788                           ; BSR set to: 15
 11789                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 11790  00351A  8EF1               	bsf	241,7,c	;volatile
 11791  00351C                     
 11792                           ; BSR set to: 15
 11793                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 11794  00351C  895A               	bsf	90,4,b	;volatile
 11795  00351E                     
 11796                           ; BSR set to: 15
 11797                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 11798  00351E  0ED0               	movlw	low _IOCB4_DefaultInterruptHandler
 11799  003520  6E13               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 11800  003522  0E39               	movlw	high _IOCB4_DefaultInterruptHandler
 11801  003524  6E14               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 11802  003526  ECD7  F01C         	call	_IOCB4_SetInterruptHandler	;wreg free
 11803  00352A                     
 11804                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 11805  00352A  86F2               	bsf	242,3,c	;volatile
 11806  00352C  0012               	return		;funcret
 11807  00352E                     __end_of_PIN_MANAGER_Initialize:
 11808                           	opt callstack 0
 11809                           
 11810 ;; *************** function _IOCB4_SetInterruptHandler *****************
 11811 ;; Defined at:
 11812 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
 11815 ;;		 -> acende_led(1), IOCB4_DefaultInterruptHandler(1), 
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;		None
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      void 
 11820 ;; Registers used:
 11821 ;;		wreg, status,2, status,0
 11822 ;; Tracked objects:
 11823 ;;		On entry : 0/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11831 ;;Total ram usage:        2 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; Hardware stack levels required when called:    5
 11834 ;; This function calls:
 11835 ;;		Nothing
 11836 ;; This function is called by:
 11837 ;;		_PIN_MANAGER_Initialize
 11838 ;;		_main
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text46
 11843  0039AE                     __ptext46:
 11844                           	opt callstack 0
 11845  0039AE                     _IOCB4_SetInterruptHandler:
 11846                           	opt callstack 23
 11847  0039AE                     
 11848                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 11849  0039AE  C013  F04B         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 11850  0039B2  C014  F04C         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 11851  0039B6  0012               	return		;funcret
 11852  0039B8                     __end_of_IOCB4_SetInterruptHandler:
 11853                           	opt callstack 0
 11854                           
 11855 ;; *************** function _OSCILLATOR_Initialize *****************
 11856 ;; Defined at:
 11857 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;		None
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;		None
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  1    wreg      void 
 11864 ;; Registers used:
 11865 ;;		wreg, status,2
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11875 ;;Total ram usage:        0 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; Hardware stack levels required when called:    5
 11878 ;; This function calls:
 11879 ;;		Nothing
 11880 ;; This function is called by:
 11881 ;;		_SYSTEM_Initialize
 11882 ;; This function uses a non-reentrant model
 11883 ;;
 11884                           
 11885                           	psect	text47
 11886  00399C                     __ptext47:
 11887                           	opt callstack 0
 11888  00399C                     _OSCILLATOR_Initialize:
 11889                           	opt callstack 24
 11890  00399C                     
 11891                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x62;
 11892  00399C  0E62               	movlw	98
 11893  00399E  6ED3               	movwf	211,c	;volatile
 11894                           
 11895                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
 11896  0039A0  0E00               	movlw	0
 11897  0039A2  6ED2               	movwf	210,c	;volatile
 11898                           
 11899                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
 11900  0039A4  0E00               	movlw	0
 11901  0039A6  6E9B               	movwf	155,c	;volatile
 11902                           
 11903                           ;mcc_generated_files/mcc.c: 69:     REFOCON = 0x00;
 11904  0039A8  0E00               	movlw	0
 11905  0039AA  6E9A               	movwf	154,c	;volatile
 11906  0039AC  0012               	return		;funcret
 11907  0039AE                     __end_of_OSCILLATOR_Initialize:
 11908                           	opt callstack 0
 11909                           
 11910 ;; *************** function _INTERRUPT_Initialize *****************
 11911 ;; Defined at:
 11912 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;		None
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;		None
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		None
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11930 ;;Total ram usage:        0 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:    5
 11933 ;; This function calls:
 11934 ;;		Nothing
 11935 ;; This function is called by:
 11936 ;;		_SYSTEM_Initialize
 11937 ;; This function uses a non-reentrant model
 11938 ;;
 11939                           
 11940                           	psect	text48
 11941  0039CA                     __ptext48:
 11942                           	opt callstack 0
 11943  0039CA                     _INTERRUPT_Initialize:
 11944                           	opt callstack 24
 11945  0039CA                     
 11946                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 11947  0039CA  9ED0               	bcf	208,7,c	;volatile
 11948  0039CC  0012               	return		;funcret
 11949  0039CE                     __end_of_INTERRUPT_Initialize:
 11950                           	opt callstack 0
 11951                           
 11952 ;; *************** function _ADC_Initialize *****************
 11953 ;; Defined at:
 11954 ;;		line 62 in file "mcc_generated_files/adc.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;		None
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;		None
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2, status,0, cstack
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11972 ;;Total ram usage:        0 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    6
 11975 ;; This function calls:
 11976 ;;		_ADC_SetInterruptHandler
 11977 ;; This function is called by:
 11978 ;;		_SYSTEM_Initialize
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text49
 11983  0038F0                     __ptext49:
 11984                           	opt callstack 0
 11985  0038F0                     _ADC_Initialize:
 11986                           	opt callstack 23
 11987  0038F0                     
 11988                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 11989  0038F0  0E01               	movlw	1
 11990  0038F2  6EC2               	movwf	194,c	;volatile
 11991                           
 11992                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
 11993  0038F4  0E00               	movlw	0
 11994  0038F6  6EC1               	movwf	193,c	;volatile
 11995                           
 11996                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xA1;
 11997  0038F8  0EA1               	movlw	161
 11998  0038FA  6EC0               	movwf	192,c	;volatile
 11999                           
 12000                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 12001  0038FC  0E00               	movlw	0
 12002  0038FE  6EC4               	movwf	196,c	;volatile
 12003                           
 12004                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 12005  003900  0E00               	movlw	0
 12006  003902  6EC3               	movwf	195,c	;volatile
 12007  003904                     
 12008                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
 12009  003904  8C9D               	bsf	157,6,c	;volatile
 12010  003906                     
 12011                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 12012  003906  0ED2               	movlw	low _ADC_DefaultInterruptHandler
 12013  003908  6E13               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
 12014  00390A  0E39               	movlw	high _ADC_DefaultInterruptHandler
 12015  00390C  6E14               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
 12016  00390E  ECDC  F01C         	call	_ADC_SetInterruptHandler	;wreg free
 12017  003912  0012               	return		;funcret
 12018  003914                     __end_of_ADC_Initialize:
 12019                           	opt callstack 0
 12020                           
 12021 ;; *************** function _ADC_SetInterruptHandler *****************
 12022 ;; Defined at:
 12023 ;;		line 150 in file "mcc_generated_files/adc.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
 12026 ;;		 -> ADC_DefaultInterruptHandler(1), ADC_POT(1), 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12042 ;;Total ram usage:        2 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    5
 12045 ;; This function calls:
 12046 ;;		Nothing
 12047 ;; This function is called by:
 12048 ;;		_main
 12049 ;;		_ADC_Initialize
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text50
 12054  0039B8                     __ptext50:
 12055                           	opt callstack 0
 12056  0039B8                     _ADC_SetInterruptHandler:
 12057                           	opt callstack 23
 12058  0039B8                     
 12059                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
 12060  0039B8  C013  F049         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
 12061  0039BC  C014  F04A         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
 12062  0039C0  0012               	return		;funcret
 12063  0039C2                     __end_of_ADC_SetInterruptHandler:
 12064                           	opt callstack 0
 12065                           
 12066 ;; *************** function _SPI_Open *****************
 12067 ;; Defined at:
 12068 ;;		line 72 in file "mcc_generated_files/spi.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;  spiUniqueCon    1    wreg     enum E353
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;  spiUniqueCon    1   19[COMRAM] enum E353
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  1    wreg      _Bool 
 12075 ;; Registers used:
 12076 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 12077 ;; Tracked objects:
 12078 ;;		On entry : 0/0
 12079 ;;		On exit  : 0/0
 12080 ;;		Unchanged: 0/0
 12081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12086 ;;Total ram usage:        2 bytes
 12087 ;; Hardware stack levels used:    1
 12088 ;; Hardware stack levels required when called:    5
 12089 ;; This function calls:
 12090 ;;		Nothing
 12091 ;; This function is called by:
 12092 ;;		_main
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text51
 12097  00316A                     __ptext51:
 12098                           	opt callstack 0
 12099  00316A                     _SPI_Open:
 12100                           	opt callstack 25
 12101                           
 12102                           ;incstack = 0
 12103                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 12104  00316A  6E14               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 12105  00316C                     
 12106                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 12107  00316C  BAC6               	btfsc	198,5,c	;volatile
 12108  00316E  EFBB  F018         	goto	u4261
 12109  003172  EFBD  F018         	goto	u4260
 12110  003176                     u4261:
 12111  003176  EF0C  F019         	goto	l132
 12112  00317A                     u4260:
 12113  00317A                     
 12114                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 12115  00317A  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12116  00317C  0D04               	mullw	4
 12117  00317E  0E01               	movlw	1
 12118  003180  26F3               	addwf	243,f,c
 12119  003182  0E00               	movlw	0
 12120  003184  22F4               	addwfc	244,f,c
 12121  003186  0E8D               	movlw	low _spi_configuration
 12122  003188  24F3               	addwf	243,w,c
 12123  00318A  6EF6               	movwf	tblptrl,c
 12124  00318C  0EFF               	movlw	high _spi_configuration
 12125  00318E  20F4               	addwfc	244,w,c
 12126  003190  6EF7               	movwf	tblptrh,c
 12127  003192                     	if	1	;There are 3 active tblptr bytes
 12128  003192  6AF8               	clrf	tblptru,c
 12129  003194  0E00               	movlw	low (__mediumconst shr (0+16))
 12130  003196  22F8               	addwfc	tblptru,f,c
 12131  003198                     	endif
 12132  003198  0008               	tblrd		*
 12133  00319A  CFF5 FFC7          	movff	tablat,4039	;volatile
 12134                           
 12135                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 12136  00319E  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12137  0031A0  0D04               	mullw	4
 12138  0031A2  0E8D               	movlw	low _spi_configuration
 12139  0031A4  24F3               	addwf	243,w,c
 12140  0031A6  6EF6               	movwf	tblptrl,c
 12141  0031A8  0EFF               	movlw	high _spi_configuration
 12142  0031AA  20F4               	addwfc	244,w,c
 12143  0031AC  6EF7               	movwf	tblptrh,c
 12144  0031AE                     	if	1	;There are 3 active tblptr bytes
 12145  0031AE  6AF8               	clrf	tblptru,c
 12146  0031B0  0E00               	movlw	low (__mediumconst shr (0+16))
 12147  0031B2  22F8               	addwfc	tblptru,f,c
 12148  0031B4                     	endif
 12149  0031B4  0008               	tblrd		*
 12150  0031B6  CFF5 FFC6          	movff	tablat,4038	;volatile
 12151  0031BA                     
 12152                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 12153  0031BA  0E00               	movlw	0
 12154  0031BC  6EC5               	movwf	197,c	;volatile
 12155  0031BE                     
 12156                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 12157  0031BE  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12158  0031C0  0D04               	mullw	4
 12159  0031C2  0E02               	movlw	2
 12160  0031C4  26F3               	addwf	243,f,c
 12161  0031C6  0E00               	movlw	0
 12162  0031C8  22F4               	addwfc	244,f,c
 12163  0031CA  0E8D               	movlw	low _spi_configuration
 12164  0031CC  24F3               	addwf	243,w,c
 12165  0031CE  6EF6               	movwf	tblptrl,c
 12166  0031D0  0EFF               	movlw	high _spi_configuration
 12167  0031D2  20F4               	addwfc	244,w,c
 12168  0031D4  6EF7               	movwf	tblptrh,c
 12169  0031D6                     	if	1	;There are 3 active tblptr bytes
 12170  0031D6  6AF8               	clrf	tblptru,c
 12171  0031D8  0E00               	movlw	low (__mediumconst shr (0+16))
 12172  0031DA  22F8               	addwfc	tblptru,f,c
 12173  0031DC                     	endif
 12174  0031DC  0008               	tblrd		*
 12175  0031DE  CFF5 FFC8          	movff	tablat,4040	;volatile
 12176  0031E2                     
 12177                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 12178  0031E2  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12179  0031E4  0D04               	mullw	4
 12180  0031E6  0E03               	movlw	3
 12181  0031E8  26F3               	addwf	243,f,c
 12182  0031EA  0E00               	movlw	0
 12183  0031EC  22F4               	addwfc	244,f,c
 12184  0031EE  0E8D               	movlw	low _spi_configuration
 12185  0031F0  24F3               	addwf	243,w,c
 12186  0031F2  6EF6               	movwf	tblptrl,c
 12187  0031F4  0EFF               	movlw	high _spi_configuration
 12188  0031F6  20F4               	addwfc	244,w,c
 12189  0031F8  6EF7               	movwf	tblptrh,c
 12190  0031FA                     	if	1	;There are 3 active tblptr bytes
 12191  0031FA  6AF8               	clrf	tblptru,c
 12192  0031FC  0E00               	movlw	low (__mediumconst shr (0+16))
 12193  0031FE  22F8               	addwfc	tblptru,f,c
 12194  003200                     	endif
 12195  003200  0008               	tblrd		*
 12196  003202  CFF5 F013          	movff	tablat,??_SPI_Open
 12197  003206  4613               	rlncf	??_SPI_Open^0,f,c
 12198  003208  4613               	rlncf	??_SPI_Open^0,f,c
 12199  00320A  4613               	rlncf	??_SPI_Open^0,f,c
 12200  00320C  5094               	movf	148,w,c	;volatile
 12201  00320E  1813               	xorwf	??_SPI_Open^0,w,c
 12202  003210  0BF7               	andlw	-9
 12203  003212  1813               	xorwf	??_SPI_Open^0,w,c
 12204  003214  6E94               	movwf	148,c	;volatile
 12205  003216                     
 12206                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 12207  003216  8AC6               	bsf	198,5,c	;volatile
 12208  003218                     l132:
 12209  003218  0012               	return		;funcret
 12210  00321A                     __end_of_SPI_Open:
 12211                           	opt callstack 0
 12212                           
 12213 ;; *************** function _INTERRUPT_InterruptManager *****************
 12214 ;; Defined at:
 12215 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;		None
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;		None
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1    wreg      void 
 12222 ;; Registers used:
 12223 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12233 ;;Total ram usage:        4 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:    4
 12236 ;; This function calls:
 12237 ;;		_ADC_ISR
 12238 ;;		_PIN_MANAGER_IOC
 12239 ;; This function is called by:
 12240 ;;		Interrupt level 2
 12241 ;; This function uses a non-reentrant model
 12242 ;;
 12243                           
 12244                           	psect	intcode
 12245  000008                     __pintcode:
 12246                           	opt callstack 0
 12247  000008                     _INTERRUPT_InterruptManager:
 12248                           	opt callstack 17
 12249                           
 12250                           ;incstack = 0
 12251  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12252  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
 12253  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12254  000012  CFF3 F011          	movff	prodl,??_INTERRUPT_InterruptManager+2
 12255  000016  CFF4 F012          	movff	prodh,??_INTERRUPT_InterruptManager+3
 12256  00001A                     
 12257                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 12258  00001A  A6F2               	btfss	242,3,c	;volatile
 12259  00001C  EF12  F000         	goto	i2u439_41
 12260  000020  EF14  F000         	goto	i2u439_40
 12261  000024                     i2u439_41:
 12262  000024  EF1F  F000         	goto	i2l101
 12263  000028                     i2u439_40:
 12264  000028  A0F2               	btfss	242,0,c	;volatile
 12265  00002A  EF19  F000         	goto	i2u440_41
 12266  00002E  EF1B  F000         	goto	i2u440_40
 12267  000032                     i2u440_41:
 12268  000032  EF1F  F000         	goto	i2l101
 12269  000036                     i2u440_40:
 12270  000036                     
 12271                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 12272  000036  ECA3  F01C         	call	_PIN_MANAGER_IOC	;wreg free
 12273                           
 12274                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 12275  00003A  EF38  F000         	goto	i2l107
 12276  00003E                     i2l101:
 12277  00003E  ACF2               	btfss	242,6,c	;volatile
 12278  000040  EF24  F000         	goto	i2u441_41
 12279  000044  EF26  F000         	goto	i2u441_40
 12280  000048                     i2u441_41:
 12281  000048  EF38  F000         	goto	i2l107
 12282  00004C                     i2u441_40:
 12283  00004C                     
 12284                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12285  00004C  AC9D               	btfss	157,6,c	;volatile
 12286  00004E  EF2B  F000         	goto	i2u442_41
 12287  000052  EF2D  F000         	goto	i2u442_40
 12288  000056                     i2u442_41:
 12289  000056  EF38  F000         	goto	i2l106
 12290  00005A                     i2u442_40:
 12291  00005A  AC9E               	btfss	158,6,c	;volatile
 12292  00005C  EF32  F000         	goto	i2u443_41
 12293  000060  EF34  F000         	goto	i2u443_40
 12294  000064                     i2u443_41:
 12295  000064  EF38  F000         	goto	i2l106
 12296  000068                     i2u443_40:
 12297  000068                     
 12298                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             ADC_ISR();
 12299  000068  EC25  F01C         	call	_ADC_ISR	;wreg free
 12300                           
 12301                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 12302  00006C  EF38  F000         	goto	i2l107
 12303  000070                     i2l106:
 12304  000070                     i2l107:
 12305  000070  C012  FFF4         	movff	??_INTERRUPT_InterruptManager+3,prodh
 12306  000074  C011  FFF3         	movff	??_INTERRUPT_InterruptManager+2,prodl
 12307  000078  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12308  00007C  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12309  000080  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12310  000082  0011               	retfie		f
 12311  000084                     __end_of_INTERRUPT_InterruptManager:
 12312                           	opt callstack 0
 12313                           
 12314 ;; *************** function _PIN_MANAGER_IOC *****************
 12315 ;; Defined at:
 12316 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12334 ;;Total ram usage:        0 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; Hardware stack levels required when called:    3
 12337 ;; This function calls:
 12338 ;;		_IOCB4_ISR
 12339 ;; This function is called by:
 12340 ;;		_INTERRUPT_InterruptManager
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text53
 12345  003946                     __ptext53:
 12346                           	opt callstack 0
 12347  003946                     _PIN_MANAGER_IOC:
 12348                           	opt callstack 17
 12349  003946                     
 12350                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 12351  003946  010F               	movlb	15	; () banked
 12352  003948  A95A               	btfss	90,4,b	;volatile
 12353  00394A  EFA9  F01C         	goto	i2u423_41
 12354  00394E  EFAB  F01C         	goto	i2u423_40
 12355  003952                     i2u423_41:
 12356  003952  EFAD  F01C         	goto	i2l4295
 12357  003956                     i2u423_40:
 12358  003956                     
 12359                           ; BSR set to: 15
 12360                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 12361  003956  EC3C  F01C         	call	_IOCB4_ISR	;wreg free
 12362  00395A                     i2l4295:
 12363                           
 12364                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 12365  00395A  90F2               	bcf	242,0,c	;volatile
 12366  00395C  0012               	return		;funcret
 12367  00395E                     __end_of_PIN_MANAGER_IOC:
 12368                           	opt callstack 0
 12369                           
 12370 ;; *************** function _IOCB4_ISR *****************
 12371 ;; Defined at:
 12372 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;		None
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      void 
 12379 ;; Registers used:
 12380 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12390 ;;Total ram usage:        0 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:    2
 12393 ;; This function calls:
 12394 ;;		Absolute function
 12395 ;;		_IOCB4_DefaultInterruptHandler
 12396 ;;		_acende_led
 12397 ;; This function is called by:
 12398 ;;		_PIN_MANAGER_IOC
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text54
 12403  003878                     __ptext54:
 12404                           	opt callstack 0
 12405  003878                     _IOCB4_ISR:
 12406                           	opt callstack 17
 12407  003878                     
 12408                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 12409  003878  504B               	movf	_IOCB4_InterruptHandler^0,w,c
 12410  00387A  104C               	iorwf	(_IOCB4_InterruptHandler+1)^0,w,c
 12411  00387C  B4D8               	btfsc	status,2,c
 12412  00387E  EF43  F01C         	goto	i2u406_41
 12413  003882  EF45  F01C         	goto	i2u406_40
 12414  003886                     i2u406_41:
 12415  003886  EF51  F01C         	goto	i2l51
 12416  00388A                     i2u406_40:
 12417  00388A                     
 12418                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 12419  00388A  D802               	call	i2u407_48
 12420  00388C  EF51  F01C         	goto	i2u407_49
 12421  003890                     i2u407_48:
 12422  003890  0005               	push	
 12423  003892  6EFA               	movwf	pclath,c
 12424  003894  504B               	movf	_IOCB4_InterruptHandler^0,w,c
 12425  003896  6EFD               	movwf	tosl,c
 12426  003898  504C               	movf	(_IOCB4_InterruptHandler+1)^0,w,c
 12427  00389A  6EFE               	movwf	tosh,c
 12428  00389C  6AFF               	clrf	tosu,c
 12429  00389E  50FA               	movf	pclath,w,c
 12430  0038A0  0012               	return		;indir
 12431  0038A2                     i2u407_49:
 12432  0038A2                     i2l51:
 12433  0038A2  0012               	return		;funcret
 12434  0038A4                     __end_of_IOCB4_ISR:
 12435                           	opt callstack 0
 12436                           
 12437 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 12438 ;; Defined at:
 12439 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;		None
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;		None
 12444 ;; Return value:  Size  Location     Type
 12445 ;;                  1    wreg      void 
 12446 ;; Registers used:
 12447 ;;		None
 12448 ;; Tracked objects:
 12449 ;;		On entry : 0/0
 12450 ;;		On exit  : 0/0
 12451 ;;		Unchanged: 0/0
 12452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12457 ;;Total ram usage:        0 bytes
 12458 ;; Hardware stack levels used:    1
 12459 ;; This function calls:
 12460 ;;		Nothing
 12461 ;; This function is called by:
 12462 ;;		_PIN_MANAGER_Initialize
 12463 ;;		_IOCB4_ISR
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text55
 12468  0039D0                     __ptext55:
 12469                           	opt callstack 0
 12470  0039D0                     _IOCB4_DefaultInterruptHandler:
 12471                           	opt callstack 18
 12472  0039D0  0012               	return		;funcret
 12473  0039D2                     __end_of_IOCB4_DefaultInterruptHandler:
 12474                           	opt callstack 0
 12475                           
 12476 ;; *************** function _acende_led *****************
 12477 ;; Defined at:
 12478 ;;		line 21 in file "main.c"
 12479 ;; Parameters:    Size  Location     Type
 12480 ;;		None
 12481 ;; Auto vars:     Size  Location     Type
 12482 ;;		None
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      void 
 12485 ;; Registers used:
 12486 ;;		wreg, status,2, status,0, cstack
 12487 ;; Tracked objects:
 12488 ;;		On entry : 0/0
 12489 ;;		On exit  : 0/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12496 ;;Total ram usage:        1 bytes
 12497 ;; Hardware stack levels used:    1
 12498 ;; Hardware stack levels required when called:    1
 12499 ;; This function calls:
 12500 ;;		_ADC_GetConversion
 12501 ;; This function is called by:
 12502 ;;		_main
 12503 ;;		_IOCB4_ISR
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           	psect	text56
 12508  0035B4                     __ptext56:
 12509                           	opt callstack 0
 12510  0035B4                     _acende_led:
 12511                           	opt callstack 17
 12512  0035B4                     
 12513                           ;main.c: 22:     if (PORTBbits.RB4 == 0){
 12514  0035B4  B881               	btfsc	129,4,c	;volatile
 12515  0035B6  EFDF  F01A         	goto	i2u395_41
 12516  0035BA  EFE1  F01A         	goto	i2u395_40
 12517  0035BE                     i2u395_41:
 12518  0035BE  EFFA  F01A         	goto	i2l206
 12519  0035C2                     i2u395_40:
 12520  0035C2  BA89               	btfsc	137,5,c	;volatile
 12521  0035C4  EFE6  F01A         	goto	i2u396_41
 12522  0035C8  EFE9  F01A         	goto	i2u396_40
 12523  0035CC                     i2u396_41:
 12524  0035CC  0E01               	movlw	1
 12525  0035CE  EFEA  F01A         	goto	i2u396_46
 12526  0035D2                     i2u396_40:
 12527  0035D2  0E00               	movlw	0
 12528  0035D4                     i2u396_46:
 12529  0035D4  0AFF               	xorlw	255
 12530  0035D6  6E06               	movwf	??_acende_led^0,c
 12531  0035D8  3A06               	swapf	??_acende_led^0,f,c
 12532  0035DA  4606               	rlncf	??_acende_led^0,f,c
 12533  0035DC  5089               	movf	137,w,c	;volatile
 12534  0035DE  1806               	xorwf	??_acende_led^0,w,c
 12535  0035E0  0BDF               	andlw	-33
 12536  0035E2  1806               	xorwf	??_acende_led^0,w,c
 12537  0035E4  6E89               	movwf	137,c	;volatile
 12538  0035E6                     
 12539                           ;main.c: 24:         codigo_digital = ADC_GetConversion(POT);
 12540  0035E6  0E00               	movlw	0
 12541  0035E8  EC39  F01B         	call	_ADC_GetConversion
 12542  0035EC  C001  F047         	movff	?_ADC_GetConversion,_codigo_digital
 12543  0035F0  C002  F048         	movff	?_ADC_GetConversion+1,_codigo_digital+1
 12544  0035F4                     i2l206:
 12545  0035F4  0012               	return		;funcret
 12546  0035F6                     __end_of_acende_led:
 12547                           	opt callstack 0
 12548                           
 12549 ;; *************** function _ADC_GetConversion *****************
 12550 ;; Defined at:
 12551 ;;		line 113 in file "mcc_generated_files/adc.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  channel         1    wreg     enum E12385
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  channel         1    4[COMRAM] enum E12385
 12556 ;; Return value:  Size  Location     Type
 12557 ;;                  2    0[COMRAM] unsigned short 
 12558 ;; Registers used:
 12559 ;;		wreg, status,2, status,0
 12560 ;; Tracked objects:
 12561 ;;		On entry : 0/0
 12562 ;;		On exit  : 0/0
 12563 ;;		Unchanged: 0/0
 12564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12568 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12569 ;;Total ram usage:        5 bytes
 12570 ;; Hardware stack levels used:    1
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_acende_led
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           	psect	text57
 12579  003672                     __ptext57:
 12580                           	opt callstack 0
 12581  003672                     _ADC_GetConversion:
 12582                           	opt callstack 17
 12583                           
 12584                           ;incstack = 0
 12585                           ;ADC_GetConversion@channel stored from wreg
 12586  003672  6E05               	movwf	ADC_GetConversion@channel^0,c
 12587  003674                     
 12588                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 12589  003674  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 12590  003678  4603               	rlncf	??_ADC_GetConversion^0,f,c
 12591  00367A  4603               	rlncf	??_ADC_GetConversion^0,f,c
 12592  00367C  50C2               	movf	194,w,c	;volatile
 12593  00367E  1803               	xorwf	??_ADC_GetConversion^0,w,c
 12594  003680  0B83               	andlw	-125
 12595  003682  1803               	xorwf	??_ADC_GetConversion^0,w,c
 12596  003684  6EC2               	movwf	194,c	;volatile
 12597  003686                     
 12598                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 12599  003686  80C2               	bsf	194,0,c	;volatile
 12600  003688                     
 12601                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 12602  003688  82C2               	bsf	194,1,c	;volatile
 12603  00368A                     i2l397:
 12604                           
 12605                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 12606  00368A  B2C2               	btfsc	194,1,c	;volatile
 12607  00368C  EF4A  F01B         	goto	i2u347_41
 12608  003690  EF4C  F01B         	goto	i2u347_40
 12609  003694                     i2u347_41:
 12610  003694  EF45  F01B         	goto	i2l397
 12611  003698                     i2u347_40:
 12612  003698                     
 12613                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12614  003698  50C4               	movf	196,w,c	;volatile
 12615  00369A  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
 12616  00369C  6A03               	clrf	??_ADC_GetConversion^0,c
 12617  00369E  50C3               	movf	195,w,c	;volatile
 12618  0036A0  2403               	addwf	??_ADC_GetConversion^0,w,c
 12619  0036A2  6E01               	movwf	?_ADC_GetConversion^0,c
 12620  0036A4  0E00               	movlw	0
 12621  0036A6  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 12622  0036A8  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
 12623  0036AA  0012               	return		;funcret
 12624  0036AC                     __end_of_ADC_GetConversion:
 12625                           	opt callstack 0
 12626                           
 12627 ;; *************** function _ADC_ISR *****************
 12628 ;; Defined at:
 12629 ;;		line 139 in file "mcc_generated_files/adc.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;		None
 12632 ;; Auto vars:     Size  Location     Type
 12633 ;;		None
 12634 ;; Return value:  Size  Location     Type
 12635 ;;                  1    wreg      void 
 12636 ;; Registers used:
 12637 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12638 ;; Tracked objects:
 12639 ;;		On entry : 0/0
 12640 ;;		On exit  : 0/0
 12641 ;;		Unchanged: 0/0
 12642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12647 ;;Total ram usage:        0 bytes
 12648 ;; Hardware stack levels used:    1
 12649 ;; Hardware stack levels required when called:    2
 12650 ;; This function calls:
 12651 ;;		Absolute function
 12652 ;;		_ADC_DefaultInterruptHandler
 12653 ;;		_ADC_POT
 12654 ;; This function is called by:
 12655 ;;		_INTERRUPT_InterruptManager
 12656 ;; This function uses a non-reentrant model
 12657 ;;
 12658                           
 12659                           	psect	text58
 12660  00384A                     __ptext58:
 12661                           	opt callstack 0
 12662  00384A                     _ADC_ISR:
 12663                           	opt callstack 18
 12664  00384A                     
 12665                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
 12666  00384A  9C9E               	bcf	158,6,c	;volatile
 12667  00384C                     
 12668                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
 12669  00384C  5049               	movf	_ADC_InterruptHandler^0,w,c
 12670  00384E  104A               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
 12671  003850  B4D8               	btfsc	status,2,c
 12672  003852  EF2D  F01C         	goto	i2u424_41
 12673  003856  EF2F  F01C         	goto	i2u424_40
 12674  00385A                     i2u424_41:
 12675  00385A  EF3B  F01C         	goto	i2l407
 12676  00385E                     i2u424_40:
 12677  00385E                     
 12678                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
 12679  00385E  D802               	call	i2u425_48
 12680  003860  EF3B  F01C         	goto	i2u425_49
 12681  003864                     i2u425_48:
 12682  003864  0005               	push	
 12683  003866  6EFA               	movwf	pclath,c
 12684  003868  5049               	movf	_ADC_InterruptHandler^0,w,c
 12685  00386A  6EFD               	movwf	tosl,c
 12686  00386C  504A               	movf	(_ADC_InterruptHandler+1)^0,w,c
 12687  00386E  6EFE               	movwf	tosh,c
 12688  003870  6AFF               	clrf	tosu,c
 12689  003872  50FA               	movf	pclath,w,c
 12690  003874  0012               	return		;indir
 12691  003876                     i2u425_49:
 12692  003876                     i2l407:
 12693  003876  0012               	return		;funcret
 12694  003878                     __end_of_ADC_ISR:
 12695                           	opt callstack 0
 12696                           
 12697 ;; *************** function _ADC_DefaultInterruptHandler *****************
 12698 ;; Defined at:
 12699 ;;		line 154 in file "mcc_generated_files/adc.c"
 12700 ;; Parameters:    Size  Location     Type
 12701 ;;		None
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;		None
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      void 
 12706 ;; Registers used:
 12707 ;;		None
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12717 ;;Total ram usage:        0 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; This function calls:
 12720 ;;		Nothing
 12721 ;; This function is called by:
 12722 ;;		_ADC_Initialize
 12723 ;;		_ADC_ISR
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           	psect	text59
 12728  0039D2                     __ptext59:
 12729                           	opt callstack 0
 12730  0039D2                     _ADC_DefaultInterruptHandler:
 12731                           	opt callstack 19
 12732  0039D2  0012               	return		;funcret
 12733  0039D4                     __end_of_ADC_DefaultInterruptHandler:
 12734                           	opt callstack 0
 12735                           
 12736 ;; *************** function _ADC_POT *****************
 12737 ;; Defined at:
 12738 ;;		line 28 in file "main.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;		None
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;		None
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  1    wreg      void 
 12745 ;; Registers used:
 12746 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12756 ;;Total ram usage:        0 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:    1
 12759 ;; This function calls:
 12760 ;;		___awdiv
 12761 ;;		i2___wmul
 12762 ;; This function is called by:
 12763 ;;		_main
 12764 ;;		_ADC_ISR
 12765 ;; This function uses a non-reentrant model
 12766 ;;
 12767                           
 12768                           	psect	text60
 12769  0037EC                     __ptext60:
 12770                           	opt callstack 0
 12771  0037EC                     _ADC_POT:
 12772                           	opt callstack 18
 12773  0037EC                     
 12774                           ;main.c: 30:     percentagem = (4095/codigo_digital)*100 ;
 12775  0037EC  C047  F003         	movff	_codigo_digital,___awdiv@divisor
 12776  0037F0  C048  F004         	movff	_codigo_digital+1,___awdiv@divisor+1
 12777  0037F4  0E0F               	movlw	15
 12778  0037F6  6E02               	movwf	(___awdiv@dividend+1)^0,c
 12779  0037F8  6801               	setf	___awdiv@dividend^0,c
 12780  0037FA  ECF2  F017         	call	___awdiv	;wreg free
 12781  0037FE  C001  F009         	movff	?___awdiv,i2___wmul@multiplier
 12782  003802  C002  F00A         	movff	?___awdiv+1,i2___wmul@multiplier+1
 12783  003806  0E00               	movlw	0
 12784  003808  6E0C               	movwf	(i2___wmul@multiplicand+1)^0,c
 12785  00380A  0E64               	movlw	100
 12786  00380C  6E0B               	movwf	i2___wmul@multiplicand^0,c
 12787  00380E  EC65  F01C         	call	i2___wmul	;wreg free
 12788  003812  C009  F0C9         	movff	?i2___wmul,_percentagem
 12789  003816  C00A  F0CA         	movff	?i2___wmul+1,_percentagem+1
 12790  00381A  0012               	return		;funcret
 12791  00381C                     __end_of_ADC_POT:
 12792                           	opt callstack 0
 12793                           
 12794 ;; *************** function i2___wmul *****************
 12795 ;; Defined at:
 12796 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;  multiplier      2    8[COMRAM] unsigned int 
 12799 ;;  multiplicand    2   10[COMRAM] unsigned int 
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;  __wmul          2   12[COMRAM] unsigned int 
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  2    8[COMRAM] unsigned int 
 12804 ;; Registers used:
 12805 ;;		wreg, status,2, status,0, prodl, prodh
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12815 ;;Total ram usage:        6 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; This function calls:
 12818 ;;		Nothing
 12819 ;; This function is called by:
 12820 ;;		_ADC_POT
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           	psect	text61
 12825  0038CA                     __ptext61:
 12826                           	opt callstack 0
 12827  0038CA                     i2___wmul:
 12828                           	opt callstack 18
 12829  0038CA  5009               	movf	i2___wmul@multiplier^0,w,c
 12830  0038CC  020B               	mulwf	i2___wmul@multiplicand^0,c
 12831  0038CE  CFF3 F00D          	movff	prodl,i2___wmul@product
 12832  0038D2  CFF4 F00E          	movff	prodh,i2___wmul@product+1
 12833  0038D6  5009               	movf	i2___wmul@multiplier^0,w,c
 12834  0038D8  020C               	mulwf	(i2___wmul@multiplicand+1)^0,c
 12835  0038DA  50F3               	movf	243,w,c
 12836  0038DC  260E               	addwf	(i2___wmul@product+1)^0,f,c
 12837  0038DE  500A               	movf	(i2___wmul@multiplier+1)^0,w,c
 12838  0038E0  020B               	mulwf	i2___wmul@multiplicand^0,c
 12839  0038E2  50F3               	movf	243,w,c
 12840  0038E4  260E               	addwf	(i2___wmul@product+1)^0,f,c
 12841  0038E6  C00D  F009         	movff	i2___wmul@product,?i2___wmul
 12842  0038EA  C00E  F00A         	movff	i2___wmul@product+1,?i2___wmul+1
 12843  0038EE  0012               	return		;funcret
 12844  0038F0                     __end_ofi2___wmul:
 12845                           	opt callstack 0
 12846                           
 12847 ;; *************** function ___awdiv *****************
 12848 ;; Defined at:
 12849 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 12850 ;; Parameters:    Size  Location     Type
 12851 ;;  dividend        2    0[COMRAM] int 
 12852 ;;  divisor         2    2[COMRAM] int 
 12853 ;; Auto vars:     Size  Location     Type
 12854 ;;  quotient        2    6[COMRAM] int 
 12855 ;;  sign            1    5[COMRAM] unsigned char 
 12856 ;;  counter         1    4[COMRAM] unsigned char 
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  2    0[COMRAM] int 
 12859 ;; Registers used:
 12860 ;;		wreg, status,2, status,0
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12867 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12869 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12870 ;;Total ram usage:        8 bytes
 12871 ;; Hardware stack levels used:    1
 12872 ;; This function calls:
 12873 ;;		Nothing
 12874 ;; This function is called by:
 12875 ;;		_ADC_POT
 12876 ;; This function uses a non-reentrant model
 12877 ;;
 12878                           
 12879                           	psect	text62
 12880  002FE4                     __ptext62:
 12881                           	opt callstack 0
 12882  002FE4                     ___awdiv:
 12883                           	opt callstack 18
 12884  002FE4  0E00               	movlw	0
 12885  002FE6  6E06               	movwf	___awdiv@sign^0,c
 12886  002FE8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12887  002FEA  EFFB  F017         	goto	i2u400_40
 12888  002FEE  EFF9  F017         	goto	i2u400_41
 12889  002FF2                     i2u400_41:
 12890  002FF2  EF01  F018         	goto	i2l4121
 12891  002FF6                     i2u400_40:
 12892  002FF6  6C03               	negf	___awdiv@divisor^0,c
 12893  002FF8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12894  002FFA  B0D8               	btfsc	status,0,c
 12895  002FFC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12896  002FFE  0E01               	movlw	1
 12897  003000  6E06               	movwf	___awdiv@sign^0,c
 12898  003002                     i2l4121:
 12899  003002  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12900  003004  EF08  F018         	goto	i2u401_40
 12901  003008  EF06  F018         	goto	i2u401_41
 12902  00300C                     i2u401_41:
 12903  00300C  EF0E  F018         	goto	i2l4127
 12904  003010                     i2u401_40:
 12905  003010  6C01               	negf	___awdiv@dividend^0,c
 12906  003012  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12907  003014  B0D8               	btfsc	status,0,c
 12908  003016  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12909  003018  0E01               	movlw	1
 12910  00301A  1A06               	xorwf	___awdiv@sign^0,f,c
 12911  00301C                     i2l4127:
 12912  00301C  0E00               	movlw	0
 12913  00301E  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12914  003020  0E00               	movlw	0
 12915  003022  6E07               	movwf	___awdiv@quotient^0,c
 12916  003024  5003               	movf	___awdiv@divisor^0,w,c
 12917  003026  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12918  003028  B4D8               	btfsc	status,2,c
 12919  00302A  EF19  F018         	goto	i2u402_41
 12920  00302E  EF1B  F018         	goto	i2u402_40
 12921  003032                     i2u402_41:
 12922  003032  EF43  F018         	goto	i2l4149
 12923  003036                     i2u402_40:
 12924  003036  0E01               	movlw	1
 12925  003038  6E05               	movwf	___awdiv@counter^0,c
 12926  00303A  EF23  F018         	goto	i2l4135
 12927  00303E                     i2l4133:
 12928  00303E  90D8               	bcf	status,0,c
 12929  003040  3603               	rlcf	___awdiv@divisor^0,f,c
 12930  003042  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12931  003044  2A05               	incf	___awdiv@counter^0,f,c
 12932  003046                     i2l4135:
 12933  003046  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12934  003048  EF28  F018         	goto	i2u403_41
 12935  00304C  EF2A  F018         	goto	i2u403_40
 12936  003050                     i2u403_41:
 12937  003050  EF1F  F018         	goto	i2l4133
 12938  003054                     i2u403_40:
 12939  003054                     i2l4137:
 12940  003054  90D8               	bcf	status,0,c
 12941  003056  3607               	rlcf	___awdiv@quotient^0,f,c
 12942  003058  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12943  00305A  5003               	movf	___awdiv@divisor^0,w,c
 12944  00305C  5C01               	subwf	___awdiv@dividend^0,w,c
 12945  00305E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12946  003060  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12947  003062  A0D8               	btfss	status,0,c
 12948  003064  EF36  F018         	goto	i2u404_41
 12949  003068  EF38  F018         	goto	i2u404_40
 12950  00306C                     i2u404_41:
 12951  00306C  EF3D  F018         	goto	i2l4145
 12952  003070                     i2u404_40:
 12953  003070  5003               	movf	___awdiv@divisor^0,w,c
 12954  003072  5E01               	subwf	___awdiv@dividend^0,f,c
 12955  003074  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12956  003076  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12957  003078  8007               	bsf	___awdiv@quotient^0,0,c
 12958  00307A                     i2l4145:
 12959  00307A  90D8               	bcf	status,0,c
 12960  00307C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12961  00307E  3203               	rrcf	___awdiv@divisor^0,f,c
 12962  003080  2E05               	decfsz	___awdiv@counter^0,f,c
 12963  003082  EF2A  F018         	goto	i2l4137
 12964  003086                     i2l4149:
 12965  003086  5006               	movf	___awdiv@sign^0,w,c
 12966  003088  B4D8               	btfsc	status,2,c
 12967  00308A  EF49  F018         	goto	i2u405_41
 12968  00308E  EF4B  F018         	goto	i2u405_40
 12969  003092                     i2u405_41:
 12970  003092  EF4F  F018         	goto	i2l4153
 12971  003096                     i2u405_40:
 12972  003096  6C07               	negf	___awdiv@quotient^0,c
 12973  003098  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12974  00309A  B0D8               	btfsc	status,0,c
 12975  00309C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12976  00309E                     i2l4153:
 12977  00309E  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12978  0030A2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12979  0030A6  0012               	return		;funcret
 12980  0030A8                     __end_of___awdiv:
 12981                           	opt callstack 0
 12982                           
 12983                           	psect	text63
 12984  000000                     __ptext63:
 12985                           	opt callstack 0
 12986  000000                     
 12987                           	psect	rparam
 12988  0000                     
 12989                           	psect	temp
 12990  00004D                     btemp:
 12991                           	opt callstack 0
 12992  00004D                     	ds	1
 12993  0000                     int$flags	set	btemp
 12994  0000                     wtemp8	set	btemp+1
 12995  0000                     ttemp5	set	btemp+1
 12996  0000                     ttemp6	set	btemp+4
 12997  0000                     ttemp7	set	btemp+8
 12998                           tosu	equ	0xFFF
 12999                           tosh	equ	0xFFE
 13000                           tosl	equ	0xFFD
 13001                           stkptr	equ	0xFFC
 13002                           pclatu	equ	0xFFB
 13003                           pclath	equ	0xFFA
 13004                           pcl	equ	0xFF9
 13005                           tblptru	equ	0xFF8
 13006                           tblptrh	equ	0xFF7
 13007                           tblptrl	equ	0xFF6
 13008                           tablat	equ	0xFF5
 13009                           prodh	equ	0xFF4
 13010                           prodl	equ	0xFF3
 13011                           indf0	equ	0xFEF
 13012                           postinc0	equ	0xFEE
 13013                           postdec0	equ	0xFED
 13014                           preinc0	equ	0xFEC
 13015                           plusw0	equ	0xFEB
 13016                           fsr0h	equ	0xFEA
 13017                           fsr0l	equ	0xFE9
 13018                           wreg	equ	0xFE8
 13019                           indf1	equ	0xFE7
 13020                           postinc1	equ	0xFE6
 13021                           postdec1	equ	0xFE5
 13022                           preinc1	equ	0xFE4
 13023                           plusw1	equ	0xFE3
 13024                           fsr1h	equ	0xFE2
 13025                           fsr1l	equ	0xFE1
 13026                           bsr	equ	0xFE0
 13027                           indf2	equ	0xFDF
 13028                           postinc2	equ	0xFDE
 13029                           postdec2	equ	0xFDD
 13030                           preinc2	equ	0xFDC
 13031                           plusw2	equ	0xFDB
 13032                           fsr2h	equ	0xFDA
 13033                           fsr2l	equ	0xFD9
 13034                           status	equ	0xFD8


Data Sizes:
    Strings     110
    Constant    3536
    Data        7
    BSS         148
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      76
    BANK0           160    103     146
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), codigo_digital(COMRAM[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), codigo_digital(COMRAM[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S1886_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), codigo_digital(COMRAM[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), codigo_digital(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), codigo_digital(COMRAM[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), codigo_digital(COMRAM[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), ADC_POT(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), ADC_POT(), Absolute function(), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_3(CODE[11]), STR_2(CODE[33]), string(BANK1[100]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_draw_line->_lcd_draw_pixel_at
    _lcd_draw_pixel_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_acende_led
    _acende_led->_ADC_GetConversion
    _ADC_POT->i2___wmul
    i2___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  162676
            _ADC_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                      _lcd_draw_line
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   58434
                                             91 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   57877
                                             69 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   56840
                                             61 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   56046
                                             56 COMRAM     4     4      0
                                             28 BANK0     33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8777
                                             45 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             24 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7619
                                             45 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             18 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             18 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5995
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             27 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    6891
                                             45 COMRAM    10     0     10
                                              0 BANK0     24    24      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8473
                                             45 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             36 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             18 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             18 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    5946
                                             45 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5667
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2305
                                             25 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1022
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37190
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                             27 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   30802
                                             49 COMRAM    10     0     10
                                              0 BANK0      8     8      0
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                             27 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_line                                       23    13     10   35466
                                             33 COMRAM    23    13     10
                  _lcd_draw_pixel_at
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_pixel_at                                    6     0      6   31732
                                             27 COMRAM     6     0      6
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                             23 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                             21 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                             21 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                             21 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                             19 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     685
                                             14 COMRAM     4     4      0
                            _ADC_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0      22
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0      22
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                         _acende_led *
 ---------------------------------------------------------------------------------
 (13) _acende_led                                          1     1      0      22
                                              5 COMRAM     1     1      0
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     663
                   Absolute function *
        _ADC_DefaultInterruptHandler *
                            _ADC_POT *
 ---------------------------------------------------------------------------------
 (12) _ADC_POT                                             0     0      0     663
                            ___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (13) i2___wmul                                            6     2      4     211
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (13) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
   _lcd_draw_line
     _lcd_draw_pixel_at
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_POT *
       ___awdiv
       i2___wmul
         ___awdiv (ARG)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _acende_led *
         _ADC_GetConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      92       5       91.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      4C       1       80.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     142       6        0.0%
DATA                 0      0     142       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 14 13:41:04 2020

                           _SPI_Initialize 398A                                _SSPSTATbits 000FC7  
                                       l43 352C                                         l54 39B6  
                                       l81 39AC                                         l78 3988  
                                       l96 39CC                               ___awdiv@sign 0006  
                      ___wmul@multiplicand 0015         __size_of_IOCB4_SetInterruptHandler 000A  
                              __CFG_BORV$3 000000                 ?_IOCB4_SetInterruptHandler 0013  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l132 3218                                        l140 3928  
                                      l141 392C                                        l302 278A  
                                      l214 2C68                                        l215 2C68  
                                      l128 399A                                        l305 27BC  
                                      l410 39C0                                        l138 391A  
                                      l309 37BA                                        l247 3848  
                                      l280 329A                                        l256 1688  
                                      l504 1FD2                                        l273 349E  
                                      l265 35B2                                        l513 23DA  
                                      l506 2036                                        l259 3944  
                                      l515 23E2                                        l611 1302  
                                      l276 3972                                        l452 30EC  
                                      l524 248A                                        l269 34E6  
                                      l349 2654                                        l525 24D2  
                                      l358 2A58                                        l470 172A  
                                      l534 1C7E                                        l455 312E  
                                      l551 19AC                                        l464 33B6  
                                      l472 1732                                        l544 1E4A  
                                      l536 1C86                                        l385 3912  
                                      l457 3168                                        l529 24DA  
                                      l490 196A                                        l572 1BE2  
                                      l549 19A4                                        l574 1C44  
                                      l558 1A44                                        l495 1E84  
                                      l655 32F6                                        l656 32FE  
                                      l497 1E8C                                        l659 38C8  
                                      l588 017E                                        l773 2358  
                                      l786 2920                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _abs 35F6  
                                      _pad 30A8                            __end_of_ADC_ISR 3878  
                          __end_of_ADC_POT 381C            __end_of_ADC_SetInterruptHandler 39C2  
                                      tosl 000FFD                                        wreg 000FE8  
             ?_ADC_DefaultInterruptHandler 0001                            ?_lcd_set_cursor 0018  
                       __size_of_IOCB4_ISR 002C                                       l1104 2D5E  
                                     l1114 2F18                                       l1107 2EF8  
                                     ?_abs 0025                                       l1406 2FE2  
                                     l1414 3570                                       l1430 3788  
                                     l1334 362C                                       l1424 37EA  
                                     l1417 39CE                                       l1337 3634  
                                     l1097 2D3E                                       l1434 2E48  
                                     l1371 3670                                       l1444 3354  
                                     l1365 21C8                                       l1391 371A  
                                     l1455 36E2                                       l1471 2B48  
                                     l1368 21D0                                       l4201 3826  
                                     l1377 3752                                       l1385 3408  
                                     l5001 33BC                                       l1449 335C  
                                     l1466 2B68                                       l5011 3930  
                                     l4203 3834                                       l5003 33D0  
                                     l4301 397C                                       l5013 393A  
                                     l4205 3836                                       l5005 33FE  
                                     l5021 3370                                       l5101 1E76  
                                     l4303 3980                                       l5015 393C  
                                     l5007 3402                                       l5023 337C  
                                     l5111 1ED4                                       l5103 1EB4  
                                     l4321 31E2                                       l4313 316C  
                                     l4305 3984                                       l5017 3942  
                                     l5025 3388                                       l5041 1702  
                                     l5033 168A                                       l5113 1EDC  
                                     l5121 1F58                                       l5105 1EBE  
                                     l5201 1D3E                                       l4323 3216  
                                     l4315 317A                                       l4171 351C  
                                     l4163 34E8                                       l6011 2694  
                                     l6003 2656                                       l5027 338C  
                                     l5019 335E                                       l5051 175A  
                                     l5043 1704                                       l5035 16AA  
                                     l5131 1FE0                                       l5123 1F72  
                                     l5115 1EEE                                       l5107 1EC2  
                                     l5211 1DE0                                       l5203 1D44  
                                     l4317 31BA                                       l4181 39CA  
                                     l4173 351E                                       l4165 3504  
                                     l6021 26D8                                       l6013 26AA  
                                     l6005 2678                                       l5029 3392  
                                     l5061 17F8                                       l5053 1760  
                                     l5045 171E                                       l5037 16D4  
                                     l5133 1FF2                                       l5125 1F90  
                                     l5117 1EF4                                       l5109 1ECE  
                                     l5213 1DFA                                       l5205 1D4A  
                                     l5221 196C                                       l4319 31BE  
                                     l4087 39B8                                       l4191 38F0  
                                     l4079 39AE                                       l4175 352A  
                                     l4167 350A                                       l4183 398A  
                                     l6031 2736                                       l6023 26EE  
                                     l6015 26B2                                       l6007 2680  
                                     l5311 2110                                       l5303 20B4  
                                     l5071 18A4                                       l5063 1800  
                                     l5055 1768                                       l5047 173A  
                                     l5039 16F4                                       l5135 1FF8  
                                     l5127 1FAA                                       l5119 1EFA  
                                     l5151 238E                                       l5143 235A  
                                     l5215 1E14                                       l5207 1DAE  
                                     l5231 19CC                                       l5223 197A  
                                     l4193 3904                                       l4169 351A  
                                     l4185 3996                                       l6025 26F6  
                                     l6017 26BA                                       l6009 2688  
                                     l6041 2922                                       l5321 219A  
                                     l5305 20CA                                       l5081 1906  
                                     l5073 18BE                                       l5065 1806  
                                     l5057 1770                                       l5049 174C  
                                     l5137 2008                                       l5129 1FC4  
                                     l5161 2404                                       l5153 23A2  
                                     l5145 236C                                       l5209 1DC2  
                                     l5217 1E22                                       l5241 1A0C  
                                     l5233 19EC                                       l5225 197C  
                                     l4195 3906                                       l4187 3998  
                                     l6035 2752                                       l6027 2702  
                                     l6019 26D0                                       l6051 29C8  
                                     l6043 2926                                       l5323 21AC  
                                     l5315 2148                                       l5307 20D2  
                                     l5083 190C                                       l5091 1942  
                                     l5075 18D8                                       l5059 1776  
                                     l5067 186A                                       l5139 200E  
                                     l5171 2464                                       l5163 2418  
                                     l5155 23AA                                       l5147 2374  
                                     l5331 2D8A                                       l5251 1A8A  
                                     l5243 1A28                                       l5235 19F6  
                                     l5227 1996                                       l5411 018C  
                                     l5403 010A                                       l4189 399C  
                                     l6037 277A                                       l6029 271E  
                                     l6053 29F4                                       l6045 293C  
                                     l5309 20DA                                       l5085 191E  
                                     l5069 1886                                       l5077 18E6  
                                     l5181 24B0                                       l5173 2468  
                                     l5165 241C                                       l5157 23B8  
                                     l5149 2386                                       l5341 2DE0  
                                     l5261 1AFC                                       l5245 1A38  
                                     l5237 19FE                                       l5229 19C2  
                                     l5501 0762                                       l5421 0206  
                                     l5413 018E                                       ?_pad 0023  
                                     l5351 34B6                                       l6039 27A8  
                                     l6055 2A22                                       l6047 2976  
                                     l4199 381E                                       l5319 2188  
                                     l5087 192A                                       l5079 18F8  
                                     l5095 1E4C                                       l5183 24B4  
                                     l5175 246C                                       l5167 243A  
                                     l5343 2DF2                                       l5335 2D96  
                                     l5191 1C70                                       l5271 1BA0  
                                     l5263 1B02                                       l5255 1AC4  
                                     l5239 1A04                                       l5503 07AA  
                                     l5423 0226                                       l5431 0290  
                                     l5415 01B4                                       l5407 0116  
                                     l4297 3974                                       l5361 3458  
                                     l6049 297A                                       l6057 2A26  
                                     l5089 1932                                       l5097 1E5A  
                                     l5169 2446                                       l5345 2E20  
                                     l5337 2DA4                                       l5329 2D60  
                                     l5193 1CAE                                       l5185 1C46  
                                     l5281 1C06                                       l5273 1BBA  
                                     l5265 1B08                                       l5257 1AD6  
                                     l5249 1A78                                       l5441 032C  
                                     l5433 02B6                                       l5425 0234  
                                     l5417 01EA                                       l5409 016C  
                                     l6081 2B90                                       l4299 3978  
                                     l5355 34BC                                       l5363 346E  
                                     l5291 2050                                       l4803 352E  
                                     l4811 3754                                       l5099 1E5C  
                                     l5179 249C                                       l5339 2DC2  
                                     l5195 1CB8                                       l5187 1C54  
                                     l5283 1C1C                                       l5275 1BD4  
                                     l5259 1AEA                                       l5267 1B66  
                                     l5611 0E42                                       l5603 0DCC  
                                     l5531 0968                                       l5523 08E0  
                                     l5515 086A                                       l5507 07E2  
                                     l5443 034C                                       l5435 02BE  
                                     l5451 03B6                                       l5419 01F8  
                                     l6091 2C66                                       l6083 2BB6  
                                     l6075 2B6A                                       l5357 34E4  
                                     l5349 34A0                                       l5293 2054  
                                     l4805 353A                                       l4813 3760  
                                     l4901 226C                                       l5197 1CC0  
                                     l5189 1C56                                       l4821 36AC  
                                     l5277 1BF0                                       l5269 1B82  
                                     l5621 0F00                                       l5613 0E78  
                                     l5605 0DF2                                       l5533 099E  
                                     l5541 09F0                                       l5525 0916  
                                     l5517 0890                                       l5509 0818  
                                     l5461 0460                                       l5453 03DC  
                                     l5445 035A                                       l5437 02CC  
                                     l5429 027E                                       l5381 00D0  
                                     l5373 0088                                       l6085 2BE2  
                                     l6077 2B86                                       l5367 3474  
                                     l5711 358E                                       l5295 2072  
                                     l5287 2038                                       l4807 354C  
                                     l4815 3764                                       l4831 30CA  
                                     l4911 22EE                                       l4903 2280  
                                     l5199 1CC6                                       l5279 1BF6  
                                     l5623 0F36                                       l5543 0A26  
                                     l5551 0A72                                       l5535 09D6  
                                     l5471 054E                                       l5463 0496  
                                     l5455 040E                                       l5439 02F2  
                                     l5391 00F8                                       l5383 00DE  
                                     l5375 00AE                                       l6087 2C0E  
                                     l6079 2B8C                                       l4825 3916  
                                     l5721 395E                                       l5369 349C  
                                     l5713 35AA                                       l5297 20AA  
                                     l5289 204C                                       l4809 3550  
                                     l4817 377C                                       l4841 3110  
                                     l4833 30D8                                       l4921 2338  
                                     l4913 22F0                                       l4905 228E  
                                     l5641 1086                                       l5625 0F5E  
                                     l5633 0FE2                                       l5553 0A98  
                                     l5561 0AE2                                       l5545 0A5E  
                                     l5537 09E2                                       l5481 05FA  
                                     l5473 0584                                       l5465 04E0  
                                     l5449 03A4                                       l5385 00E0  
                                     l5377 00BC                                       l5801 2AC4  
                                     l6089 2C3A                                       l5299 20AE  
                                     l4843 313C                                       l4835 30E4  
                                     l4827 30A8                                       l4915 2302  
                                     l4907 22A0                                       l4931 27F0  
                                     l4851 3610                                       l5651 1114  
                                     l5635 1018                                       l5627 0F6E  
                                     l5619 0ECA                                       l5563 0B18  
                                     l5571 0B64                                       l5555 0ACE  
                                     l5491 06A4                                       l5483 0620  
                                     l5459 042A                                       l6267 013E  
                                     l5395 00FE                                       l5387 00F2  
                                     l5379 00CC                                       l5731 32D8  
                                     l5811 2B50                                       l5803 2AE8  
                                     l5717 35B0                                       l5709 3572  
                                     l5741 325E                                       l5733 321A  
                                     l5901 14A4                                       l5821 1314  
                                     l6269 20FA                                       l4845 3150  
                                     l4837 30F8                                       l4829 30B6  
                                     l4909 22CE                                       l4917 2308  
                                     l4941 2848                                       l4933 27F4  
                                     l4925 27BE                                       l4853 36E4  
                                     l4861 3300                                       l5653 112C  
                                     l5661 117C                                       l5637 104E  
                                     l5629 0FA6                                       l5581 0C38  
                                     l5573 0B8A                                       l5565 0B50  
                                     l5493 06DA                                       l5469 0518  
                                     l5725 329C                                       l5805 2AFC  
                                     l5813 2B60                                       l5751 24DC  
                                     l5743 3278                                       l5735 322A  
                                     l5911 14D6                                       l5903 14AE  
                                     l5831 1346                                       l5823 131E  
                                     l4871 371C                                       l4791 2F2C  
                                     l4839 310C                                       l4919 2318  
                                     l4951 28CA                                       l4943 285C  
                                     l4935 2802                                       l4927 27C2  
                                     l5663 11B2                                       l5655 113A  
                                     l5639 1076                                       l5647 10C8  
                                     l5591 0D0C                                       l5583 0C6E  
                                     l5575 0BD6                                       l5479 05D4  
                                     l5399 0104                                       l5727 32A4  
                                     l5807 2B0A                                       l5761 252C  
                                     l5753 24E4                                       l5745 3280  
                                     l5921 1508                                       l5913 14E0  
                                     l5905 14B8                                       l5841 1378  
                                     l5833 1350                                       l5825 1328  
                                     l5817 1304                                       l4793 2F3E  
                                     l4881 21D2                                       l4945 286A  
                                     l4953 28D0                                       l4937 2822  
                                     l4929 27D0                                       l4849 35F6  
                                     l4961 2C70                                       l4857 3636  
                                     l4865 3336                                       l5681 12AA  
                                     l5665 11E8                                       l5649 10EE  
                                     l5489 066E                                       l5729 32B0  
                                     l5809 2B38                                       l5747 378A  
                                     l5771 25EA                                       l5755 2528  
                                     l5739 3252                                       l5931 153A  
                                     l5923 1512                                       l5915 14EA  
                                     l5907 14C2                                       l5851 13AA  
                                     l5843 1382                                       l5835 135A  
                                     l5827 1332                                       l5819 130E  
                                     l4875 38A4                                       l4795 2F48  
                                     l4891 2216                                       l4883 21D6  
                                     l4955 28E0                                       l4947 2898  
                                     l4939 2840                                       l4971 2CC4  
                                     l4963 2C7C                                       l4867 3348  
                                     l5667 1210                                       l5675 1262  
                                     l5595 0D44                                       l5587 0C8E  
                                     l5579 0C12                                       l5499 072C  
                                     l5691 12CA                                       l5749 37AE  
                                     l5781 261A                                       l5773 25F6  
                                     l5941 156C                                       l5933 1544  
                                     l5925 151C                                       l5917 14F4  
                                     l5909 14CC                                       l5861 13DC  
                                     l5853 13B4                                       l5845 138C  
                                     l5837 1364                                       l5829 133C  
                                     l4877 38C0                                       l4797 2F66  
                                     l4789 2F1A                                       l4893 2236  
                                     l4885 21E4                                       l4957 2900  
                                     l4949 28B8                                       l4981 2D38  
                                     l4973 2CD6                                       l4965 2C9A  
                                     l5693 12F0                                       l5677 1288  
                                     l5685 12B8                                       l5669 1220  
                                     l5597 0D7A                                       l5589 0CC4  
                                     l5775 25F8                                       l5767 2530  
                                     l5783 261C                                       l5951 159E  
                                     l5943 1576                                       l5935 154E  
                                     l5927 1526                                       l5919 14FE  
                                     l5871 140E                                       l5863 13E6  
                                     l5855 13BE                                       l5847 1396  
                                     l5839 136E                                       l4799 2F9C  
                                     l4895 223A                                       l4887 2204  
                                     l4975 2D04                                       l4967 2CA2  
                                     l4991 2E92                                       l4983 2E4A  
                                     l5679 1296                                       l5777 2608  
                                     l5769 25DA                                       l5961 15D0  
                                     l5953 15A8                                       l5945 1580  
                                     l5937 1558                                       l5929 1530  
                                     l5881 1440                                       l5873 1418  
                                     l5865 13F0                                       l5857 13C8  
                                     l5849 13A0                                       l4897 2246  
                                     l4889 2208                                       l4977 2D24  
                                     l4969 2CB6                                       l4993 2EC0  
                                     l4985 2E68                                       l5793 2A7E  
                                     l5785 2A5A                                       l5779 260A  
                                     l5971 1602                                       l5963 15DA  
                                     l5955 15B2                                       l5947 158A  
                                     l5939 1562                                       l5891 1472  
                                     l5883 144A                                       l5875 1422  
                                     l5867 13FA                                       l5859 13D2  
                                     l4899 2264                                       l4979 2D26  
                                     l4995 2EE0                                       l4987 2E70  
                                     l5795 2A9C                                       l5787 2A6E  
                                     l5981 1634                                       l5973 160C  
                                     l5965 15E4                                       l5957 15BC  
                                     l5949 1594                                       l5893 147C  
                                     l5885 1454                                       l5877 142C  
                                     l5869 1404                                       l4997 2EF2  
                                     l4989 2E84                                       l5797 2AA8  
                                     l5789 2A76                                       l5991 166C  
                                     l5983 163E                                       l5975 1616  
                                     l5967 15EE                                       l5959 15C6  
                                     l5895 1486                                       l5887 145E  
                                     l5879 1436                                       l4999 33B8  
                                     l5799 2AB4                                       l5993 1676  
                                     l5985 1648                                       l5977 1620  
                                     l5969 15F8                                       l5897 1490  
                                     l5889 1468                                       l5995 167C  
                                     l5987 1652                                       l5979 162A  
                                     l5899 149A                                       l5989 165C  
                                     l5997 37BC                                       l5999 37C6  
                                     STR_1 FFB2                                       STR_2 FF91  
                                     STR_3 FFC3                                       STR_4 FFD2  
                                     STR_6 FFD2                                       STR_8 FFD6  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u5000 33FE  
                                     u5001 33FA                                       u5020 3370  
                                     u5100 1886                                       u5021 336C  
                                     u5101 1882                                       u5110 18A4  
                                     u5030 16BC                                       u5015 3938  
                                     u5111 18A0                                       u5031 16B6  
                                     u5016 393A                                       u4080 3848  
                                     u5120 18BE                                       u5040 16BE  
                                     u5200 1F32                                       u6000 0916  
                                     u4081 3844                                       u5121 18BA  
                                     u6001 0912                                       u5130 18D8  
                                     u5050 16D4                                       u5210 1F72  
                                     u6010 099E                                       u5131 18D4  
                                     u5051 16D0                                       u5211 1F6E  
                                     u6011 099A                                       u4260 317A  
                                     u5140 18E6                                       u5060 1702  
                                     u5220 1F90                                       u5300 23B8  
                                     u6100 0E78                                       u6020 0A26  
                                     u4261 3176                                       u5141 18E2  
                                     u5061 16FE                                       u5221 1F8C  
                                     u5205 1F20                                       u5301 23B4  
                                     u6101 0E74                                       u6021 0A22  
                                     u5150 18F8                                       u5070 171E  
                                     u5230 1FAA                                       u5310 23D6  
                                     u6110 0F00                                       u6030 0A98  
                                     u5151 18F4                                       u5071 171A  
                                     u5231 1FA6                                       u5311 23D2  
                                     u6111 0EFC                                       u6031 0A94  
                                     u6200 358E                                       u4600 3570  
                                     u5160 1906                                       u5080 174C  
                                     u5240 1FC4                                       u5320 2400  
                                     u5400 1DE0                                       u6120 0F36  
                                     u6040 0B18                                       u6201 358A  
                                     u4601 356C                                       u5161 1902  
                                     u5081 1748                                       u5241 1FC0  
                                     u5321 23FC                                       u5401 1DDC  
                                     u6121 0F32                                       u6041 0B14  
                                     u6210 35AA                                       u4610 377C  
                                     u5170 191E                                       u5090 175A  
                                     u5250 1FD2                                       u5330 243A  
                                     u5410 1DFA                                       u6130 1018  
                                     u6050 0B8A                                       u6211 35A6  
                                     u4611 3778                                       u5171 191A  
                                     u5091 1756                                       u5251 1FCE  
                                     u5331 2436                                       u5411 1DF6  
                                     u6131 1014                                       u6051 0B86  
                                     u6300 261A                                       u5260 1FE0  
                                     u5180 1E5A                                       u5340 248A  
                                     u5420 1E14                                       u4700 3714  
                                     u4620 36DC                                       u5500 1A8A  
                                     u6140 104E                                       u6060 0C38  
                                     u6220 32F6                                       u6301 2616  
                                     u5261 1FDC                                       u5181 1E56  
                                     u5341 2486                                       u5421 1E10  
                                     u4701 370E                                       u4621 36D6  
                                     u5501 1A86                                       u6141 104A  
                                     u6061 0C34                                       u6221 32F2  
                                     u6310 2654                                       u6230 324E  
                                     u5270 1FF2                                       u5190 1E76  
                                     u5350 2498                                       u5430 1E22  
                                     u4710 3716                                       u4630 36DE  
                                     u5510 1ABE                                       u6150 10EE  
                                     u6070 0CC4                                       u6311 2650  
                                     u6231 324A                                       u5271 1FEE  
                                     u5191 1E72                                       u5351 2494  
                                     u5431 1E1E                                       u5511 1AB8  
                                     u6151 10EA                                       u6071 0CC0  
                                     u4640 3928                                       u6400 26EE  
                                     u6240 3278                                       u4560 2F2C  
                                     u4800 2216                                       u5360 24D2  
                                     u4720 366A                                       u5600 1BF0  
                                     u5520 1AC0                                       u5440 197A  
                                     u6160 1114                                       u6080 0D7A  
                                     u6320 2A6E                                       u4641 3924  
                                     u6401 26EA                                       u6241 3274  
                                     u4561 2F28                                       u4801 2212  
                                     u5361 24CE                                       u5281 2364  
                                     u4721 3664                                       u5601 1BEC  
                                     u5441 1976                                       u6161 1110  
                                     u6081 0D76                                       u6321 2A6A  
                                     u6410 2736                                       u6250 329A  
                                     u5610 2072                                       u4570 2F3E  
                                     u4650 30B6                                       u5290 2386  
                                     u5370 1C54                                       u4730 366C  
                                     u5530 1AD6                                       u5450 1996  
                                     u6170 11B2                                       u6090 0DF2  
                                     u6330 2A9C                                       u6411 2732  
                                     u6251 3296                                       u5611 206E  
                                     u4571 2F3A                                       u4651 30B2  
                                     u4811 2240                                       u5291 2382  
                                     u5371 1C50                                       u5531 1AD2  
                                     u5451 1992                                       u6171 11AE  
                                     u6091 0DEE                                       u6331 2A98  
                                     u6260 37AE                                       u6420 274E  
                                     u5620 20AA                                       u4580 2F66  
                                     u4660 30D8                                       u4820 2264  
                                     u4900 2898                                       u5700 2DE0  
                                     u5380 1C70                                       u4740 3330  
                                     u5540 1B40                                       u5460 19C2  
                                     u6180 11E8                                       u6340 2AFC  
                                     u6261 37AA                                       u6421 274A  
                                     u5621 20A6                                       u4581 2F62  
                                     u4661 30D4                                       u4821 2260  
                                     u4901 2894                                       u5701 2DDC  
                                     u5381 1C6C                                       u4741 332A  
                                     u5461 19BE                                       u6181 11E4  
                                     u6341 2AF8                                       u6430 277A  
                                     u5630 20C6                                       u4590 2F9C  
                                     u4670 312E                                       u4830 228E  
                                     u4910 28E0                                       u5710 2DF2  
                                     u5390 1DC2                                       u4750 3332  
                                     u5550 1B82                                       u5470 1A28  
                                     u6190 1288                                       u6350 2B0A  
                                     u6431 2776                                       u5631 20C2  
                                     u4591 2F98                                       u4671 312A  
                                     u4831 228A                                       u4911 28DC  
                                     u5711 2DEE                                       u5391 1DBE  
                                     u5551 1B7E                                       u5471 1A24  
                                     u6191 1284                                       u6351 2B06  
                                     u6440 27A8                                       u6280 25DA  
                                     u5640 2182                                       u4680 313C  
                                     u4840 22CE                                       u5720 2E20  
                                     u4760 3348                                       u5560 1BA0  
                                     u5480 1A72                                       u5800 0276  
                                     u6360 2B38                                       u6441 27A4  
                                     u6281 25D6                                       u5641 217C  
                                     u4681 3138                                       u4841 22CA  
                                     u5721 2E1C                                       u4921 2C76  
                                     u4761 3344                                       u5561 1B9C  
                                     u5545 1B2E                                       u5481 1A6C  
                                     u5801 0270                                       u6361 2B34  
                                     u5730 34B6                                       u6370 2678  
                                     u6290 2608                                       u6274 25BA  
                                     u6450 29A4                                       u4770 374C  
                                     u5650 2184                                       u4850 2318  
                                     u4690 3610                                       u4930 2C9A  
                                     u5570 1BBA                                       u5490 1A74  
                                     u5810 0278                                       i2l51 38A2  
                                     u5731 34B2                                       u6371 2674  
                                     u6291 2604                                       u6275 25B4  
                                     u4771 3746                                       u4851 2314  
                                     u4691 360C                                       u4931 2C96  
                                     u5571 1BB6                                       u5740 346E  
                                     u6380 26AA                                       u6460 29C8  
                                     u4780 374E                                       u5660 219A  
                                     u4860 27D0                                       u4940 2CC4  
                                     u5580 1BD4                                       u5900 0496  
                                     u5820 0290                                       u5741 346A  
                                     u6381 26A6                                       u6461 29C4  
                                     u5661 2196                                       u4861 27CC  
                                     u4941 2CC0                                       u5581 1BD0  
                                     u5901 0492                                       u5821 028C  
                                     u6390 26D0                                       u6470 2A48  
                                     u5670 21AC                                       u4790 21E4  
                                     u4870 2802                                       u4950 2D04  
                                     u5590 1BE2                                       u5910 054E  
                                     u5830 02B6                                       u5750 00AE  
                                     i2l47 395C                                       u6391 26CC  
                                     u5671 21A8                                       u4791 21E0  
                                     u4871 27FE                                       u4951 2D00  
                                     u5591 1BDE                                       u5911 054A  
                                     u5831 02B2                                       u5751 00AA  
                                     u6480 2A58                                       u4880 2840  
                                     u5680 2D8A                                       u4960 2E68  
                                     u5920 0584                                       u5840 02F2  
                                     u5760 017E                                       i2l57 39D0  
                                     u6481 2A54                                       u6457 299A  
                                     u6617 382C                                       u4881 283C  
                                     u5681 2D86                                       u4961 2E64  
                                     u5921 0580                                       u5841 02EE  
                                     u5761 017A                                       u4890 286A  
                                     u5690 2DC2                                       u4970 2E92  
                                     u5930 05FA                                       u5850 039C  
                                     u5770 018C                                       u4891 2866  
                                     u5691 2DBE                                       u4971 2E8E  
                                     u5931 05F6                                       u5851 0396  
                                     u5771 0188                                       u4980 2EC0  
                                     u5940 0620                                       u5860 039E  
                                     u5780 01B4                                       u6477 2A3E  
                                     u4981 2EBC                                       u5941 061C  
                                     u5781 01B0                                       u4990 33D0  
                                     u5950 06A4                                       u5870 03B6  
                                     u5790 01F8                                       u4991 33CC  
                                     u5951 06A0                                       u5871 03B2  
                                     u5791 01F4                                       u5960 06DA  
                                     u5880 03DC                                       u5961 06D6  
                                     u5881 03D8                                       u5970 0762  
                                     u5890 0460                                       u5971 075E  
                                     u5891 045C                                       u5980 0818  
                                     u5981 0814                                       u5990 0890  
                                     u5991 088C                                       _WPUB 000F5B  
                                     abs@a 0025                                       _dbuf 00CB  
                                     _atoi 2038                                       _ctoa 335E  
                                     _main 2B6A                                       _dtoa 168A  
                                     _font F1C1                                       _prec 0041  
                                     _otoa 1E4C                                       _nout 003D  
                                     pad@i 002A                                       pad@p 0027  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 002C  
                                     fsr2l 000FD9                                       _stoa 235A  
                                     btemp 004D                                       _utoa 1C46  
                                     _xtoa 196C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0084  
                            __CFG_IESO$OFF 000000                     __end_of_SPI_Initialize 399C  
                            lcd_fill@width 0020                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                      ??_abs 0027  
                                    ??_pad 0029             __size_of_OSCILLATOR_Initialize 0012  
            __end_of_OSCILLATOR_Initialize 39AE                            __end_of___aodiv 235A  
                                    ?_atoi 001A                                      ?_ctoa 002E  
                                    ?_main 0001                                      ?_dtoa 002E  
                          __end_of___aomod 2922                            __end_of___awdiv 30A8  
                                    STR_10 FFD6                                      STR_22 FFED  
                                    STR_15 FFD3                                      STR_31 FFDE  
                                    STR_24 FFED                                      STR_33 FFDE  
                                    STR_41 FFF6                                      STR_26 FFF0  
                                    STR_19 FFD7                                      STR_43 FFF6  
                                    STR_28 FFF0                                      STR_53 FFDB  
                                    STR_61 FFE2                                      STR_38 FFDF  
                                    STR_46 FFDA                                      STR_63 FFE2  
                                    STR_71 FFF9                                      STR_48 FFDA  
                                    STR_56 FFF3                                      STR_80 FFCE  
                                    STR_73 FFF9                                      STR_82 FFCE  
                                    STR_58 FFF3                                      STR_91 FFCF  
                                    STR_68 FFE3                                      STR_76 FFE6  
                                    STR_78 FFE6                                      STR_94 FFFC  
                                    STR_87 FFE7                                      STR_96 FFFC  
                                    STR_98 FFEA                                      ?_otoa 002E  
        __end_of_IOCB4_SetInterruptHandler 39B8                                      ?_stoa 001C  
                                    ?_utoa 002E                            __end_of___lodiv 2D60  
                          ___awdiv@divisor 0003                                      ?_xtoa 002E  
                          __end_of___lomod 2F1A                                      i2l101 003E  
                                    i2l106 0070                                      i2l107 0070  
                                    i2l206 35F4                                      i2l400 36AA  
                                    i2l209 381A                                      i2l413 39D2  
                                    i2l407 3876                                      i2l397 368A  
                                    i2l659 38EE                                      i2l890 30A6  
                          ___awdiv@counter 0005                               vfpfcnvrt@fmt 007E  
                             vfpfcnvrt@llu 0095                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0026  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                            ??_lcd_draw_line 002C  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 384A                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 395E                                      _flags 0043  
                                    _errno 00C7                                      _fputc 2F1A  
                          __end_of_isalpha 3672                                      _fputs 352E  
                          __end_of_isdigit 3754                                      atoi@n 0027  
                                    pad@fp 0023                                      atoi@s 001A  
                                    _width 003F                                      ctoa@c 0030  
                                    _putch 39CE                                      ctoa@w 0031  
                                    dtoa@d 0030                                      dtoa@i 0078  
                                    dtoa@n 0070                                      dtoa@p 006A  
                                    dtoa@s 006E                                      dtoa@w 006C  
                         __end_of_SPI_Open 321A                            __end_of_islower 36E4  
                          __end_of_isspace 340A                            __end_of_isupper 371C  
                                    pclath 000FFA                                      tablat 000FF5  
                                    otoa@d 0030                                      otoa@i 0076  
                                    otoa@n 006E                                      otoa@p 0068  
                                    otoa@t 006A                                      otoa@w 006C  
                         __end_ofi2___wmul 38F0                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0028  
                                    stoa@l 0030                                      stoa@p 002E  
                                    stoa@s 001E                                      stoa@w 002A  
                                    ttemp5 004E                                      ttemp6 0051  
                                    ttemp7 0055                                      utoa@d 0030  
                                    utoa@i 0074                                      utoa@n 006C  
                                    utoa@p 0068                                      utoa@w 006A  
                                    status 000FD8                                      wtemp8 004E  
                                    xtoa@c 007A                                      xtoa@d 0030  
                                    xtoa@i 0078                                      xtoa@n 0070  
                                    xtoa@p 006C                                      xtoa@w 006E  
                                    xtoa@x 0038                            __end_of_strncmp 2E4A  
                          __end_of_toupper 335E                             lcd_fill@height 001E  
                         ___lodiv@dividend 0013                            ?_SPI_Initialize 0001  
          ??_IOCB4_DefaultInterruptHandler 0001                               _toupper$1953 001F  
                          __initialization 340A                               __end_of_atoi 21D2  
                             __end_of_ctoa 33B8                               __end_of_main 2C70  
                             __end_of_dtoa 196C                               __end_of_font FF8D  
                             __end_of_otoa 2038                               __end_of_stoa 24DC  
                             __end_of_utoa 1E4C                               __end_of_xtoa 1C46  
                        __end_of_IOCB4_ISR 38A4                                  ??_ADC_ISR 000F  
                                ??_ADC_POT 000F                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 001C                                     ??_ctoa 0031  
                                   ??_main 003D                                     ??_dtoa 0060  
                        ?_lcd_set_cursor_x 0016                          ?_lcd_set_cursor_y 0016  
                            lcd_send@value 0014                                     ??_otoa 0060  
                                   ??_stoa 0020                                     ??_utoa 0060  
                                   ??_xtoa 0060                              __activetblptr 000003  
                       ??_lcd_set_cursor_x 0018                         ??_lcd_set_cursor_y 0018  
                           __CFG_RETEN$OFF 000000                           ___lodiv@quotient 0023  
                           lcd_draw_char@i 0031                             lcd_draw_char@j 002F  
                           lcd_draw_char@k 0030                   __end_of_SPI_ExchangeByte 392E  
                           lcd_draw_char@x 001C                             lcd_draw_char@y 001E  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_fputc 0013  
                                   STR_100 FFEA                                     ?_fputs 001C  
                                   _ADRESH 000FC4                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 0001                                     ?_putch 0001  
                          __CFG_BBSIZ$BB2K 000000                                     i2l4121 3002  
                                   i2l4113 2FE4                                     i2l4131 3036  
                                   i2l4123 3010                                     i2l4115 2FE8  
                                   i2l4141 3070                                     i2l4133 303E  
                                   i2l4125 3018                                     i2l4117 2FF6  
                           __CFG_WDTEN$OFF 000000                                     i2l4151 3096  
                                   i2l4143 3078                                     i2l4135 3046  
                                   i2l4127 301C                                     i2l4119 2FFE  
                                   i2l4311 385E                                     i2l4153 309E  
                                   i2l4145 307A                                     i2l4137 3054  
                                   i2l4129 3024                                     i2l4081 35B4  
                                   i2l4147 3080                                     i2l4139 305A  
                                   i2l4307 384A                                     i2l4083 35C2  
                                   i2l4149 3086                                     i2l4157 38CA  
                                   i2l4309 384C                                     i2l4085 35E6  
                                   i2l4159 38E6                                     i2l3711 3686  
                                   i2l3713 3688                                     i2l4177 3878  
                                   i2l3715 3698                                     i2l4179 388A  
                                   i2l4291 3946                                     i2l4197 37EC  
                                   i2l3709 3674                                     i2l4293 3956  
                                   i2l4295 395A                                     i2l4571 0028  
                                   i2l4573 0036                                     i2l4575 004C  
                                   i2l4577 005A                                     i2l4569 001A  
                                   i2l4579 0068                                     _OSCCON 000FD3  
                            vfpfcnvrt@done 0084                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                            _global_bg_color 0045  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0018  
                         __end_of_lcd_fill 329C                               vfprintf@cfmt 00A3  
                         __end_of_lcd_init 168A       __size_of_ADC_DefaultInterruptHandler 0002  
         __size_of_ADC_SetInterruptHandler 000A                           __end_of_lcd_send 3946  
                                ??___aodiv 0023                                  ??___aomod 0023  
                                   ___wmul 38A4                                  ??___awdiv 0005  
                           __CFG_STVREN$ON 000000                                  ??___lodiv 0023  
                                ??___lomod 0023                                     clear_0 3430  
                                   clear_1 343C                                     clear_2 3448  
                         ___awdiv@quotient 0007                                     pad@buf 0025  
                                   ctoa@fp 002E                                     dtoa@fp 002E  
                                   _string 0100                                     _strlen 3754  
                                ??_msDelay 0013                                     fputc@c 0013  
                                   fputs@c 0020                                     fputs@i 0021  
                                   fputs@s 001C                                  ??_isalpha 0015  
                                ??_isdigit 0015                                  ??_islower 0015  
                             __mediumconst F1C0                                  ??_isspace 0015  
                                   otoa@fp 002E                                     tblptrh 000FF7  
                                ??_isupper 0015                                     tblptrl 000FF6  
                                   tblptru 000FF8                   ADC_GetConversion@channel 0005  
                                   stoa@cp 002C                                     stoa@fp 001C  
                                   putch@c 0001                           __end_of_vfprintf 3300  
                                   utoa@fp 002E    ADC_SetInterruptHandler@InterruptHandler 0013  
IOCB4_SetInterruptHandler@InterruptHandler 0013                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 37EC                                     xtoa@fp 002E  
                                ??_strncmp 0019                                  ??_toupper 001B  
            __size_of_INTERRUPT_Initialize 0004                          _SYSTEM_Initialize 3974  
                               __accesstop 0060                   __size_of_lcd_draw_string 0138  
                  __end_of__initialization 344E                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                             __pcstackCOMRAM 0001  
                             __pidataBANK0 39C2                        ??_SYSTEM_Initialize 0015  
                            __end_of_fputc 2FE4                              __end_of_fputs 3572  
    __end_of_IOCB4_DefaultInterruptHandler 39D2     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 39D0                              __end_of_putch 39D0  
                                ?_SPI_Open 0001                                 _acende_led 35B4  
              ??_IOCB4_SetInterruptHandler 0015                                  ?i2___wmul 0009  
                         ??_lcd_set_cursor 001C                                    ??_fputc 0017  
                __end_of_SYSTEM_Initialize 398A                                    ??_fputs 0020  
                                  ??_putch 0013                                 __pbssBANK0 00C7  
                               __pbssBANK1 0100                            __CFG_PLLCFG$OFF 000000  
                               __pnvCOMRAM 0049                                    ?___wmul 0013  
                                  _ADC_ISR 384A                                    _ADC_POT 37EC  
                               ??_SPI_Open 0013                            lcd_draw_line@e2 0033  
                          lcd_draw_line@x0 0022                            lcd_draw_line@x1 0026  
                          lcd_draw_line@y0 0024                            lcd_draw_line@y1 0028  
                  __size_of_ADC_Initialize 0024                            lcd_draw_line@dx 0035  
                          lcd_draw_line@dy 0037                            lcd_draw_line@sx 002D  
                          lcd_draw_line@sy 002F                                    ?_strlen 0013  
                               ??i2___wmul 000D                           __CFG_CANMX$PORTB 000000  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 127C                                    _OSCTUNE 000F9B  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 001C                                  ?_lcd_init 0001  
                                ?_lcd_send 0014                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0013                           ??_SPI_Initialize 0013  
                _IOCB4_SetInterruptHandler 39AE                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 0049                                    __Hparam 0000  
                  _ADC_SetInterruptHandler 39B8                                    __Lparam 0000  
                       __size_of_vsnprintf 0110                          ??_lcd_draw_string 0060  
                                  ___aodiv 21D2                                    ___aomod 27BE  
                                  ___awdiv 2FE4                            __size_of___wmul 0026  
                                  ___lodiv 2C70                                    ___lomod 2E4A  
                                ?_vfprintf 009D                                  ?_snprintf 00BB  
                                  __pcinit 340A                                    __ramtop 0F00  
                              ?_acende_led 0001                                    __ptext0 2B6A  
                                  __ptext1 37BC                                    __ptext2 2A5A  
                                  __ptext3 329C                                    __ptext4 0088  
                                  __ptext5 196C                                    __ptext6 3300  
                                  __ptext7 36AC                                    __ptext8 36E4  
                                  __ptext9 3636                                    _msDelay 381C  
                                _IOCB4_ISR 3878                            __size_of_strlen 0036  
                               fp__ADC_POT 0000                      _OSCILLATOR_Initialize 399C  
                             __size_of_abs 0040                               __size_of_pad 00C2  
                                  _isalpha 3636                                    _isdigit 371C  
                                  _islower 36AC                   ??_PIN_MANAGER_Initialize 0015  
                                  _isspace 33B8                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 36E4                                    atoi@neg 0020  
                    __end_of_lcd_draw_char 2656                      __end_of_lcd_draw_line 27BE  
               __size_of_SYSTEM_Initialize 0016                                 ??_lcd_fill 001E  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 0022  
                               ??_lcd_send 0015                                    _strncmp 2D60  
                                  _toupper 3300                       end_of_initialization 344E  
                       ??_SPI_ExchangeByte 0013                  __size_of_lcd_set_cursor_x 0048  
                __size_of_lcd_set_cursor_y 0048                                    fputc@fp 0015  
                                  fputs@fp 001E                        i2___wmul@multiplier 0009  
                      lcd_draw_char@fIndex 0020                          __end_of_vfpfcnvrt 1304  
                                  postdec1 000FE5                                    postdec2 000FDD  
                   lcd_draw_pixel_at@color 0020                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 001C                                 ??_vfprintf 003D  
                               ??_snprintf 003D                                    strlen@a 0015  
                                  strlen@s 0013                          lcd_draw_string@pS 0036  
                                _PORTBbits 000F81                          _spi_configuration FF8D  
                               ?_IOCB4_ISR 0001                           __CFG_FOSC$INTIO2 000000  
      __end_of_ADC_DefaultInterruptHandler 39D4                _ADC_DefaultInterruptHandler 39D2  
                                _TRISCbits 000F94                          __end_of_vsnprintf 2B6A  
            ??_ADC_DefaultInterruptHandler 0001                                 lcd_send@dc 0015  
                ??_ADC_SetInterruptHandler 0015                        __size_of_acende_led 0042  
             __end_of_INTERRUPT_Initialize 39CE                       SPI_ExchangeByte@data 0013  
                __end_of_spi_configuration FF91                                vfpfcnvrt@ap 0080  
                              vfpfcnvrt@cp 0082                                vfpfcnvrt@fp 007C  
                              vfpfcnvrt@ll 008A                             __end_of___wmul 38CA  
                              vfpfcnvrt@vp 0092                             _ADC_Initialize 38F0  
                   ?_OSCILLATOR_Initialize 0001                           i2___wmul@product 000D  
                        __size_of_SPI_Open 00B0                             __end_of_strlen 378A  
                      start_initialization 340A                            ___lodiv@divisor 001B  
                          ___lodiv@counter 002B                          __size_ofi2___wmul 0026  
                        _lcd_draw_pixel_at 378A            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 3636                                __end_of_pad 316A  
                       ?_lcd_draw_pixel_at 001C                             _codigo_digital 0047  
                      ??_lcd_draw_pixel_at 0022                   __size_of_PIN_MANAGER_IOC 0018  
           SPI_Open@spiUniqueConfiguration 0014                                vfprintf@fmt 009F  
                                 ??___wmul 0017                     __end_of_ADC_Initialize 3914  
                              __pdataBANK0 00EB                                   ?_ADC_ISR 0001  
                                 ?_ADC_POT 0001                                   ??_strlen 0015  
                              ??_IOCB4_ISR 0007                    __size_of_lcd_draw_pixel 0016  
                __end_of_lcd_draw_pixel_at 37BC                               vsnprintf@cnt 00B3  
                             vsnprintf@fmt 00A9                                __pbssCOMRAM 003D  
                            __pcstackBANK0 0060                           ___aodiv@dividend 0013  
                              snprintf@fmt 00BF                            _lcd_draw_string 2922  
                         _lcd_set_cursor_x 34A0                           _lcd_set_cursor_y 3458  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$1846 0022  
                                _atoi$1847 0026                                  _atoi$1848 0024  
                   _PIN_MANAGER_Initialize 34E8                                  _dtoa$1233 0068  
                                __pintcode 0008                              __pmediumconst F1C0  
                                 ?___aodiv 0013                                   ?___aomod 0013  
                                 ?___awdiv 0001                           ___aodiv@quotient 0025  
                                 ?___lodiv 0013                                   ?___lomod 0013  
                          ?_ADC_Initialize 0001                               ??_acende_led 0006  
             ??_INTERRUPT_InterruptManager 000F                          __size_of_vfprintf 0064  
                        __size_of_snprintf 0030                                   ?_msDelay 0001  
                          ___lomod@divisor 001B                            ___lomod@counter 0023  
                                 ?_isalpha 0013                                   ?_isdigit 0013  
                                 ?_islower 0013                                   ?_isspace 0013  
                                 ?_isupper 0013                           lcd_draw_line@err 0031  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0013                                   ?_toupper 0019  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 39CA  
                  __size_of_lcd_set_cursor 0042                             ___wmul@product 0017  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                         __end_of_acende_led 35F6  
                                 _PIE1bits 000F9D                            lcd_set_cursor@x 0018  
                          lcd_set_cursor@y 001A        __size_of_INTERRUPT_InterruptManager 007C  
                                 i2u400_40 2FF6                                   i2u400_41 2FF2  
                                 i2u401_40 3010                                   i2u401_41 300C  
                                 i2u402_40 3036                                   i2u402_41 3032  
                                 i2u403_40 3054                                   i2u403_41 3050  
                                 i2u404_40 3070                                   i2u404_41 306C  
                                 i2u405_40 3096                                   i2u405_41 3092  
                                 i2u406_40 388A                                   i2u406_41 3886  
                                 i2u423_40 3956                                   i2u423_41 3952  
                                 i2u424_40 385E                                   i2u407_48 3890  
                                 i2u440_40 0036                                   i2u424_41 385A  
                                 i2u407_49 38A2                                   i2u440_41 0032  
                                 i2u441_40 004C                                   i2u441_41 0048  
                                 _PIR1bits 000F9E                                   i2u425_48 3864  
                                 i2u442_40 005A                                   i2u425_49 3876  
                                 i2u442_41 0056                                   i2u347_40 3698  
                                 i2u443_40 0068                                   i2u347_41 3694  
                                 i2u443_41 0064                                   i2u439_40 0028  
                                 i2u439_41 0024                      lcd_draw_string@lIndex 0066  
                                 i2u395_40 35C2                                   i2u395_41 35BE  
                                 i2u396_40 35D2                                   i2u396_41 35CC  
                                 i2u396_46 35D4                                   _RCONbits 000FD0  
                __size_of_SPI_ExchangeByte 001A             fp__ADC_DefaultInterruptHandler 0000  
                         lcd_draw_string@k 0064                           lcd_draw_string@x 0032  
                         lcd_draw_string@y 0034                          ??_PIN_MANAGER_IOC 0007  
                                _vfpfcnvrt 0088                                  _xtoa$1270 006A  
                                _xtoa$1269 0068                                   _SPI_Open 316A  
                         __size_of_ADC_ISR 002E                           __size_of_ADC_POT 0030  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0013  
                         __CFG_SOSCSEL$DIG 000000                                   i2___wmul 38CA  
               __size_of_lcd_draw_pixel_at 0032                    __end_of_lcd_draw_string 2A5A  
                             _isspace$1873 0019                                  msDelay@ms 0014  
                               vfpfcnvrt@c 0094                                _INTCON2bits 000FF1  
                                copy_data0 341E                      ?_INTERRUPT_Initialize 0001  
                                _vsnprintf 2A5A                        lcd_draw_pixel@color 0016  
                                 __Hrparam 0000                                 vfprintf@ap 00A1  
                                 __Lrparam 0000                                 vfprintf@fp 009D  
                        _ADC_GetConversion 3672                         __CFG_BOREN$SBORDIS 000000  
                  __size_of_SPI_Initialize 0012                    ??_OSCILLATOR_Initialize 0013  
                   __size_of_lcd_draw_char 017A                         ?_ADC_GetConversion 0001  
                         __size_of___aodiv 0188                     __size_of_lcd_draw_line 0168  
                         __size_of___aomod 0164                           __size_of___awdiv 00C4  
                              vsnprintf@ap 00AB                      i2___wmul@multiplicand 000B  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 007C                                 snprintf@ap 00C5  
                          ___aodiv@divisor 001B                            ___aodiv@counter 0023  
                   _IOCB4_InterruptHandler 004B                             _lcd_draw_pixel 395E  
                      ??_ADC_GetConversion 0003                           __size_of_msDelay 002E  
                       lcd_draw_line@color 002A                           __size_of_isalpha 003C  
                         __size_of_isdigit 0038           fp__IOCB4_DefaultInterruptHandler 0000  
           ?_IOCB4_DefaultInterruptHandler 0001                           __size_of_islower 0038  
                         __size_of_isspace 0052                                   __ptext10 1C46  
                                 __ptext11 2E4A                                   __ptext20 335E  
                                 __ptext12 2C70                                   __ptext21 30A8  
                                 __ptext13 2D60                                   __ptext30 1304  
                                 __ptext22 3754                                   __ptext14 235A  
                                 __ptext31 381C                                   __ptext23 352E  
                                 __ptext15 1E4C                                   __ptext40 395E  
                                 __ptext32 321A                                   __ptext24 2F1A  
                                 __ptext16 168A                                   __ptext41 392E  
                                 __ptext33 2922                                   __ptext25 39CE  
                                 __ptext17 35F6                                   __ptext50 39B8  
                                 __ptext42 3914                                   __ptext34 24DC  
                                 __ptext26 2038                                   __ptext18 27BE  
                                 __ptext51 316A                                   __ptext43 3974  
                                 __ptext35 2656                                   __ptext27 33B8  
                                 __ptext19 21D2                                   __ptext60 37EC  
                                 __ptext44 398A                                   __ptext36 378A  
                                 __ptext28 371C                                   __ptext61 38CA  
                                 __ptext53 3946                                   __ptext45 34E8  
                                 __ptext37 3572                                   __ptext29 38A4  
                                 __ptext62 2FE4                                   __ptext54 3878  
                                 __ptext46 39AE                                   __ptext38 3458  
                                 __ptext63 0000                                   __ptext55 39D0  
                                 __ptext47 399C                                   __ptext39 34A0  
                                 __ptext56 35B4                                   __ptext48 39CA  
                                 __ptext57 3672                                   __ptext49 38F0  
                                 __ptext58 384A                                   __ptext59 39D2  
                         __size_of_isupper 0038                                   _lcd_fill 321A  
                                 _lcd_init 1304                                   _lcd_send 392E  
                         __size_of_strncmp 00EA                           __size_of_toupper 005E  
                               ?_vsnprintf 00A5                              __size_of_atoi 019A  
                            __size_of_ctoa 005A                              __size_of_main 0106  
                            __size_of_dtoa 02E2                              __size_of_otoa 01EC  
                            __size_of_stoa 0182                              __size_of_utoa 0206  
                            __size_of_xtoa 02DA                  __end_of_ADC_GetConversion 36AC  
                                stoa@F1152 00EB                      lcd_draw_char@bg_color 0024  
                                 int$flags 004D                                   _vfprintf 329C  
                    lcd_draw_char@fg_color 0022         __end_of_INTERRUPT_InterruptManager 0084  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 3974  
                                 _snprintf 37BC                                _percentagem 00C9  
                 __end_of_lcd_set_cursor_x 34E8                   __end_of_lcd_set_cursor_y 34A0  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0015  
                         ___aomod@dividend 0013                             _vfpfcnvrt$1284 0086  
                           _vfpfcnvrt$1285 0088                                 _INTCONbits 000FF2  
                            fp__acende_led 0000                           ?_lcd_draw_string 0032  
                                 isalpha@c 0013                                   isdigit@c 0013  
                   ??_INTERRUPT_Initialize 0013                         lcd_draw_pixel_at@x 001C  
                       lcd_draw_pixel_at@y 001E                                 vsnprintf@f 00B5  
                               vsnprintf@n 00A7                                 vsnprintf@s 00A5  
                 ?_ADC_SetInterruptHandler 0013                              _lcd_draw_char 24DC  
                                snprintf@n 00BD                                  snprintf@s 00BB  
                            _lcd_draw_line 2656                                   intlevel2 0000  
                           _lcd_set_cursor 3572                          lcd_set_cursor_x@x 0016  
                        lcd_set_cursor_y@y 0016                                   islower@c 0013  
                                 isspace@c 0013                    ?_PIN_MANAGER_Initialize 0001  
                                 isupper@c 0013                                  strncmp@_l 0013  
                                strncmp@_r 0015                           ??_ADC_Initialize 0015  
                         _SPI_ExchangeByte 3914                    lcd_draw_string@bg_color 003A  
                       __CFG_WDTPS$1048576 000000                            ___aomod@divisor 001B  
                  lcd_draw_string@fg_color 0038                            ?_lcd_draw_pixel 0016  
                              ??_vfpfcnvrt 0039                                   stoa@nuls 0021  
                          ___aomod@counter 0023                             _vsnprintf$1985 00B1  
                                 strncmp@l 001A                                   strncmp@n 0017  
                                 strncmp@r 001C                                   toupper@c 0019  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 35B4  
                           ?_lcd_draw_char 001C                             ?_lcd_draw_line 0022  
                             ___aodiv@sign 0024             __end_of_PIN_MANAGER_Initialize 352E  
                              ??_vsnprintf 00AD                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 3946                 __size_of_ADC_GetConversion 003A  
                             ___aomod@sign 0024  
