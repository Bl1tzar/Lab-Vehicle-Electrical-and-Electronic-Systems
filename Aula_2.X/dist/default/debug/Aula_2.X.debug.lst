

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 14 13:49:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.10
    85                           ; Generated 31/07/2019 GMT
    86                           ; 
    87                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K80 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataBANK0
   120  0039CC                     __pidataBANK0:
   121                           	opt callstack 0
   122                           
   123                           ;initializer for stoa@F1152
   124  0039CC  28                 	db	40
   125  0039CD  6E                 	db	110
   126  0039CE  75                 	db	117
   127  0039CF  6C                 	db	108
   128  0039D0  6C                 	db	108
   129  0039D1  29                 	db	41
   130  0039D2  00                 	db	0
   131                           
   132                           	psect	mediumconst
   133  00F1C0                     __pmediumconst:
   134                           	opt callstack 0
   135  00F1C0  00                 	db	0
   136  00F1C1                     _font:
   137                           	opt callstack 0
   138  00F1C1  0004               	dw	4
   139  00F1C3  0000               	dw	0
   140  00F1C5  0000               	dw	0
   141  00F1C7  0000               	dw	0
   142  00F1C9  0000               	dw	0
   143  00F1CB  0000               	dw	0
   144  00F1CD  0000               	dw	0
   145  00F1CF  0000               	dw	0
   146  00F1D1  0000               	dw	0
   147  00F1D3  0003               	dw	3
   148  00F1D5  0000               	dw	0
   149  00F1D7  0000               	dw	0
   150  00F1D9  00FE               	dw	254
   151  00F1DB  001B               	dw	27
   152  00F1DD  0000               	dw	0
   153  00F1DF  0000               	dw	0
   154  00F1E1  0005               	dw	5
   155  00F1E3  001E               	dw	30
   156  00F1E5  0000               	dw	0
   157  00F1E7  0000               	dw	0
   158  00F1E9  0000               	dw	0
   159  00F1EB  0000               	dw	0
   160  00F1ED  0000               	dw	0
   161  00F1EF  001E               	dw	30
   162  00F1F1  0000               	dw	0
   163  00F1F3  0000               	dw	0
   164  00F1F5  0000               	dw	0
   165  00F1F7  000B               	dw	11
   166  00F1F9  0000               	dw	0
   167  00F1FB  0000               	dw	0
   168  00F1FD  0010               	dw	16
   169  00F1FF  0001               	dw	1
   170  00F201  0010               	dw	16
   171  00F203  001D               	dw	29
   172  00F205  00F0               	dw	240
   173  00F207  0003               	dw	3
   174  00F209  001E               	dw	30
   175  00F20B  0001               	dw	1
   176  00F20D  0010               	dw	16
   177  00F20F  0001               	dw	1
   178  00F211  0010               	dw	16
   179  00F213  001D               	dw	29
   180  00F215  00F0               	dw	240
   181  00F217  0003               	dw	3
   182  00F219  001E               	dw	30
   183  00F21B  0001               	dw	1
   184  00F21D  0010               	dw	16
   185  00F21F  0001               	dw	1
   186  00F221  0000               	dw	0
   187  00F223  0000               	dw	0
   188  00F225  0009               	dw	9
   189  00F227  0000               	dw	0
   190  00F229  0004               	dw	4
   191  00F22B  001C               	dw	28
   192  00F22D  0008               	dw	8
   193  00F22F  0022               	dw	34
   194  00F231  0010               	dw	16
   195  00F233  0042               	dw	66
   196  00F235  0010               	dw	16
   197  00F237  00FF               	dw	255
   198  00F239  007F               	dw	127
   199  00F23B  0042               	dw	66
   200  00F23D  0010               	dw	16
   201  00F23F  0084               	dw	132
   202  00F241  0010               	dw	16
   203  00F243  0000               	dw	0
   204  00F245  000F               	dw	15
   205  00F247  0000               	dw	0
   206  00F249  0000               	dw	0
   207  00F24B  000C               	dw	12
   208  00F24D  001C               	dw	28
   209  00F24F  0000               	dw	0
   210  00F251  0022               	dw	34
   211  00F253  0010               	dw	16
   212  00F255  0022               	dw	34
   213  00F257  0008               	dw	8
   214  00F259  0022               	dw	34
   215  00F25B  0006               	dw	6
   216  00F25D  001C               	dw	28
   217  00F25F  0001               	dw	1
   218  00F261  00C0               	dw	192
   219  00F263  0000               	dw	0
   220  00F265  0020               	dw	32
   221  00F267  000E               	dw	14
   222  00F269  0018               	dw	24
   223  00F26B  0011               	dw	17
   224  00F26D  0004               	dw	4
   225  00F26F  0011               	dw	17
   226  00F271  0002               	dw	2
   227  00F273  0011               	dw	17
   228  00F275  0000               	dw	0
   229  00F277  000E               	dw	14
   230  00F279  0000               	dw	0
   231  00F27B  0000               	dw	0
   232  00F27D  000B               	dw	11
   233  00F27F  0000               	dw	0
   234  00F281  0000               	dw	0
   235  00F283  0000               	dw	0
   236  00F285  000E               	dw	14
   237  00F287  001C               	dw	28
   238  00F289  0011               	dw	17
   239  00F28B  00A2               	dw	162
   240  00F28D  0010               	dw	16
   241  00F28F  00C2               	dw	194
   242  00F291  0010               	dw	16
   243  00F293  0022               	dw	34
   244  00F295  0011               	dw	17
   245  00F297  001C               	dw	28
   246  00F299  000A               	dw	10
   247  00F29B  0000               	dw	0
   248  00F29D  000C               	dw	12
   249  00F29F  0000               	dw	0
   250  00F2A1  000C               	dw	12
   251  00F2A3  0000               	dw	0
   252  00F2A5  0012               	dw	18
   253  00F2A7  0000               	dw	0
   254  00F2A9  0000               	dw	0
   255  00F2AB  0003               	dw	3
   256  00F2AD  0000               	dw	0
   257  00F2AF  0000               	dw	0
   258  00F2B1  001E               	dw	30
   259  00F2B3  0000               	dw	0
   260  00F2B5  0000               	dw	0
   261  00F2B7  0000               	dw	0
   262  00F2B9  0006               	dw	6
   263  00F2BB  0000               	dw	0
   264  00F2BD  0000               	dw	0
   265  00F2BF  0000               	dw	0
   266  00F2C1  0000               	dw	0
   267  00F2C3  00E0               	dw	224
   268  00F2C5  001F               	dw	31
   269  00F2C7  001C               	dw	28
   270  00F2C9  0060               	dw	96
   271  00F2CB  0002               	dw	2
   272  00F2CD  0080               	dw	128
   273  00F2CF  0000               	dw	0
   274  00F2D1  0000               	dw	0
   275  00F2D3  0004               	dw	4
   276  00F2D5  0000               	dw	0
   277  00F2D7  0000               	dw	0
   278  00F2D9  0006               	dw	6
   279  00F2DB  00C0               	dw	192
   280  00F2DD  00F8               	dw	248
   281  00F2DF  003F               	dw	63
   282  00F2E1  0000               	dw	0
   283  00F2E3  0000               	dw	0
   284  00F2E5  0006               	dw	6
   285  00F2E7  0024               	dw	36
   286  00F2E9  0000               	dw	0
   287  00F2EB  0018               	dw	24
   288  00F2ED  0000               	dw	0
   289  00F2EF  007E               	dw	126
   290  00F2F1  0000               	dw	0
   291  00F2F3  0018               	dw	24
   292  00F2F5  0000               	dw	0
   293  00F2F7  0024               	dw	36
   294  00F2F9  0000               	dw	0
   295  00F2FB  0000               	dw	0
   296  00F2FD  0000               	dw	0
   297  00F2FF  0009               	dw	9
   298  00F301  0000               	dw	0
   299  00F303  0000               	dw	0
   300  00F305  0080               	dw	128
   301  00F307  0000               	dw	0
   302  00F309  0080               	dw	128
   303  00F30B  0000               	dw	0
   304  00F30D  0080               	dw	128
   305  00F30F  0000               	dw	0
   306  00F311  00F0               	dw	240
   307  00F313  0007               	dw	7
   308  00F315  0080               	dw	128
   309  00F317  0000               	dw	0
   310  00F319  0080               	dw	128
   311  00F31B  0000               	dw	0
   312  00F31D  0080               	dw	128
   313  00F31F  0000               	dw	0
   314  00F321  0000               	dw	0
   315  00F323  0000               	dw	0
   316  00F325  0004               	dw	4
   317  00F327  0000               	dw	0
   318  00F329  0000               	dw	0
   319  00F32B  0000               	dw	0
   320  00F32D  0060               	dw	96
   321  00F32F  0000               	dw	0
   322  00F331  0018               	dw	24
   323  00F333  0000               	dw	0
   324  00F335  0000               	dw	0
   325  00F337  0005               	dw	5
   326  00F339  0000               	dw	0
   327  00F33B  0001               	dw	1
   328  00F33D  0000               	dw	0
   329  00F33F  0001               	dw	1
   330  00F341  0000               	dw	0
   331  00F343  0001               	dw	1
   332  00F345  0000               	dw	0
   333  00F347  0001               	dw	1
   334  00F349  0000               	dw	0
   335  00F34B  0000               	dw	0
   336  00F34D  0004               	dw	4
   337  00F34F  0000               	dw	0
   338  00F351  0000               	dw	0
   339  00F353  0000               	dw	0
   340  00F355  0018               	dw	24
   341  00F357  0000               	dw	0
   342  00F359  0018               	dw	24
   343  00F35B  0000               	dw	0
   344  00F35D  0000               	dw	0
   345  00F35F  0008               	dw	8
   346  00F361  0000               	dw	0
   347  00F363  0000               	dw	0
   348  00F365  0000               	dw	0
   349  00F367  0040               	dw	64
   350  00F369  0000               	dw	0
   351  00F36B  0038               	dw	56
   352  00F36D  0000               	dw	0
   353  00F36F  0007               	dw	7
   354  00F371  00E0               	dw	224
   355  00F373  0000               	dw	0
   356  00F375  001C               	dw	28
   357  00F377  0000               	dw	0
   358  00F379  0002               	dw	2
   359  00F37B  0000               	dw	0
   360  00F37D  0000               	dw	0
   361  00F37F  0000               	dw	0
   362  00F381  0009               	dw	9
   363  00F383  00F8               	dw	248
   364  00F385  0007               	dw	7
   365  00F387  0004               	dw	4
   366  00F389  0008               	dw	8
   367  00F38B  0002               	dw	2
   368  00F38D  0010               	dw	16
   369  00F38F  0002               	dw	2
   370  00F391  0010               	dw	16
   371  00F393  0002               	dw	2
   372  00F395  0010               	dw	16
   373  00F397  0002               	dw	2
   374  00F399  0010               	dw	16
   375  00F39B  0004               	dw	4
   376  00F39D  0008               	dw	8
   377  00F39F  00F8               	dw	248
   378  00F3A1  0007               	dw	7
   379  00F3A3  0000               	dw	0
   380  00F3A5  0000               	dw	0
   381  00F3A7  0006               	dw	6
   382  00F3A9  0000               	dw	0
   383  00F3AB  0000               	dw	0
   384  00F3AD  0000               	dw	0
   385  00F3AF  0000               	dw	0
   386  00F3B1  0002               	dw	2
   387  00F3B3  0000               	dw	0
   388  00F3B5  0002               	dw	2
   389  00F3B7  0000               	dw	0
   390  00F3B9  00FE               	dw	254
   391  00F3BB  001F               	dw	31
   392  00F3BD  0000               	dw	0
   393  00F3BF  0000               	dw	0
   394  00F3C1  0009               	dw	9
   395  00F3C3  0018               	dw	24
   396  00F3C5  0010               	dw	16
   397  00F3C7  0004               	dw	4
   398  00F3C9  0018               	dw	24
   399  00F3CB  0002               	dw	2
   400  00F3CD  0014               	dw	20
   401  00F3CF  0002               	dw	2
   402  00F3D1  0012               	dw	18
   403  00F3D3  0002               	dw	2
   404  00F3D5  0011               	dw	17
   405  00F3D7  0082               	dw	130
   406  00F3D9  0010               	dw	16
   407  00F3DB  0044               	dw	68
   408  00F3DD  0010               	dw	16
   409  00F3DF  0038               	dw	56
   410  00F3E1  0010               	dw	16
   411  00F3E3  0000               	dw	0
   412  00F3E5  0000               	dw	0
   413  00F3E7  0009               	dw	9
   414  00F3E9  0008               	dw	8
   415  00F3EB  000C               	dw	12
   416  00F3ED  0004               	dw	4
   417  00F3EF  0010               	dw	16
   418  00F3F1  0002               	dw	2
   419  00F3F3  0010               	dw	16
   420  00F3F5  0042               	dw	66
   421  00F3F7  0010               	dw	16
   422  00F3F9  0042               	dw	66
   423  00F3FB  0010               	dw	16
   424  00F3FD  0044               	dw	68
   425  00F3FF  0010               	dw	16
   426  00F401  00B8               	dw	184
   427  00F403  0008               	dw	8
   428  00F405  0000               	dw	0
   429  00F407  0007               	dw	7
   430  00F409  0000               	dw	0
   431  00F40B  0000               	dw	0
   432  00F40D  0009               	dw	9
   433  00F40F  0000               	dw	0
   434  00F411  0002               	dw	2
   435  00F413  0000               	dw	0
   436  00F415  0003               	dw	3
   437  00F417  0080               	dw	128
   438  00F419  0002               	dw	2
   439  00F41B  0060               	dw	96
   440  00F41D  0002               	dw	2
   441  00F41F  0010               	dw	16
   442  00F421  0002               	dw	2
   443  00F423  0008               	dw	8
   444  00F425  0002               	dw	2
   445  00F427  00FE               	dw	254
   446  00F429  001F               	dw	31
   447  00F42B  0000               	dw	0
   448  00F42D  0002               	dw	2
   449  00F42F  0000               	dw	0
   450  00F431  0000               	dw	0
   451  00F433  0009               	dw	9
   452  00F435  0000               	dw	0
   453  00F437  0004               	dw	4
   454  00F439  0070               	dw	112
   455  00F43B  0008               	dw	8
   456  00F43D  002E               	dw	46
   457  00F43F  0010               	dw	16
   458  00F441  0022               	dw	34
   459  00F443  0010               	dw	16
   460  00F445  0022               	dw	34
   461  00F447  0010               	dw	16
   462  00F449  0022               	dw	34
   463  00F44B  0010               	dw	16
   464  00F44D  0042               	dw	66
   465  00F44F  0008               	dw	8
   466  00F451  0082               	dw	130
   467  00F453  0007               	dw	7
   468  00F455  0000               	dw	0
   469  00F457  0000               	dw	0
   470  00F459  0009               	dw	9
   471  00F45B  0000               	dw	0
   472  00F45D  0000               	dw	0
   473  00F45F  0000               	dw	0
   474  00F461  0007               	dw	7
   475  00F463  00C0               	dw	192
   476  00F465  0008               	dw	8
   477  00F467  0060               	dw	96
   478  00F469  0010               	dw	16
   479  00F46B  0058               	dw	88
   480  00F46D  0010               	dw	16
   481  00F46F  0044               	dw	68
   482  00F471  0010               	dw	16
   483  00F473  0082               	dw	130
   484  00F475  0008               	dw	8
   485  00F477  0000               	dw	0
   486  00F479  0007               	dw	7
   487  00F47B  0000               	dw	0
   488  00F47D  0000               	dw	0
   489  00F47F  0009               	dw	9
   490  00F481  0000               	dw	0
   491  00F483  0000               	dw	0
   492  00F485  0002               	dw	2
   493  00F487  0010               	dw	16
   494  00F489  0002               	dw	2
   495  00F48B  000C               	dw	12
   496  00F48D  0002               	dw	2
   497  00F48F  0003               	dw	3
   498  00F491  00C2               	dw	194
   499  00F493  0000               	dw	0
   500  00F495  0032               	dw	50
   501  00F497  0000               	dw	0
   502  00F499  000E               	dw	14
   503  00F49B  0000               	dw	0
   504  00F49D  0002               	dw	2
   505  00F49F  0000               	dw	0
   506  00F4A1  0000               	dw	0
   507  00F4A3  0000               	dw	0
   508  00F4A5  0009               	dw	9
   509  00F4A7  0000               	dw	0
   510  00F4A9  0007               	dw	7
   511  00F4AB  0098               	dw	152
   512  00F4AD  0008               	dw	8
   513  00F4AF  0064               	dw	100
   514  00F4B1  0010               	dw	16
   515  00F4B3  0042               	dw	66
   516  00F4B5  0010               	dw	16
   517  00F4B7  0042               	dw	66
   518  00F4B9  0010               	dw	16
   519  00F4BB  0064               	dw	100
   520  00F4BD  0010               	dw	16
   521  00F4BF  0098               	dw	152
   522  00F4C1  0008               	dw	8
   523  00F4C3  0000               	dw	0
   524  00F4C5  0007               	dw	7
   525  00F4C7  0000               	dw	0
   526  00F4C9  0000               	dw	0
   527  00F4CB  0009               	dw	9
   528  00F4CD  0000               	dw	0
   529  00F4CF  0000               	dw	0
   530  00F4D1  0038               	dw	56
   531  00F4D3  0000               	dw	0
   532  00F4D5  0044               	dw	68
   533  00F4D7  0010               	dw	16
   534  00F4D9  0082               	dw	130
   535  00F4DB  0008               	dw	8
   536  00F4DD  0082               	dw	130
   537  00F4DF  0004               	dw	4
   538  00F4E1  0082               	dw	130
   539  00F4E3  0003               	dw	3
   540  00F4E5  0084               	dw	132
   541  00F4E7  0000               	dw	0
   542  00F4E9  0078               	dw	120
   543  00F4EB  0000               	dw	0
   544  00F4ED  0000               	dw	0
   545  00F4EF  0000               	dw	0
   546  00F4F1  0004               	dw	4
   547  00F4F3  0000               	dw	0
   548  00F4F5  0000               	dw	0
   549  00F4F7  0030               	dw	48
   550  00F4F9  0018               	dw	24
   551  00F4FB  0030               	dw	48
   552  00F4FD  0018               	dw	24
   553  00F4FF  0000               	dw	0
   554  00F501  0000               	dw	0
   555  00F503  0004               	dw	4
   556  00F505  0000               	dw	0
   557  00F507  0000               	dw	0
   558  00F509  0030               	dw	48
   559  00F50B  0060               	dw	96
   560  00F50D  0030               	dw	48
   561  00F50F  0018               	dw	24
   562  00F511  0000               	dw	0
   563  00F513  0000               	dw	0
   564  00F515  000A               	dw	10
   565  00F517  0000               	dw	0
   566  00F519  0000               	dw	0
   567  00F51B  0080               	dw	128
   568  00F51D  0000               	dw	0
   569  00F51F  0080               	dw	128
   570  00F521  0000               	dw	0
   571  00F523  0040               	dw	64
   572  00F525  0001               	dw	1
   573  00F527  0020               	dw	32
   574  00F529  0002               	dw	2
   575  00F52B  0020               	dw	32
   576  00F52D  0002               	dw	2
   577  00F52F  0010               	dw	16
   578  00F531  0004               	dw	4
   579  00F533  0010               	dw	16
   580  00F535  0004               	dw	4
   581  00F537  0008               	dw	8
   582  00F539  0008               	dw	8
   583  00F53B  0000               	dw	0
   584  00F53D  0000               	dw	0
   585  00F53F  000A               	dw	10
   586  00F541  0000               	dw	0
   587  00F543  0000               	dw	0
   588  00F545  0020               	dw	32
   589  00F547  0001               	dw	1
   590  00F549  0020               	dw	32
   591  00F54B  0001               	dw	1
   592  00F54D  0020               	dw	32
   593  00F54F  0001               	dw	1
   594  00F551  0020               	dw	32
   595  00F553  0001               	dw	1
   596  00F555  0020               	dw	32
   597  00F557  0001               	dw	1
   598  00F559  0020               	dw	32
   599  00F55B  0001               	dw	1
   600  00F55D  0020               	dw	32
   601  00F55F  0001               	dw	1
   602  00F561  0020               	dw	32
   603  00F563  0001               	dw	1
   604  00F565  0000               	dw	0
   605  00F567  0000               	dw	0
   606  00F569  000A               	dw	10
   607  00F56B  0000               	dw	0
   608  00F56D  0000               	dw	0
   609  00F56F  0008               	dw	8
   610  00F571  0008               	dw	8
   611  00F573  0010               	dw	16
   612  00F575  0004               	dw	4
   613  00F577  0010               	dw	16
   614  00F579  0004               	dw	4
   615  00F57B  0020               	dw	32
   616  00F57D  0002               	dw	2
   617  00F57F  0020               	dw	32
   618  00F581  0002               	dw	2
   619  00F583  0040               	dw	64
   620  00F585  0001               	dw	1
   621  00F587  0080               	dw	128
   622  00F589  0000               	dw	0
   623  00F58B  0080               	dw	128
   624  00F58D  0000               	dw	0
   625  00F58F  0000               	dw	0
   626  00F591  0000               	dw	0
   627  00F593  0008               	dw	8
   628  00F595  0000               	dw	0
   629  00F597  0000               	dw	0
   630  00F599  000C               	dw	12
   631  00F59B  0000               	dw	0
   632  00F59D  0082               	dw	130
   633  00F59F  0001               	dw	1
   634  00F5A1  0042               	dw	66
   635  00F5A3  0002               	dw	2
   636  00F5A5  0022               	dw	34
   637  00F5A7  001A               	dw	26
   638  00F5A9  0022               	dw	34
   639  00F5AB  001A               	dw	26
   640  00F5AD  009C               	dw	156
   641  00F5AF  0001               	dw	1
   642  00F5B1  0000               	dw	0
   643  00F5B3  0000               	dw	0
   644  00F5B5  000E               	dw	14
   645  00F5B7  0000               	dw	0
   646  00F5B9  0000               	dw	0
   647  00F5BB  00F0               	dw	240
   648  00F5BD  0003               	dw	3
   649  00F5BF  0008               	dw	8
   650  00F5C1  0004               	dw	4
   651  00F5C3  0004               	dw	4
   652  00F5C5  0008               	dw	8
   653  00F5C7  00C2               	dw	194
   654  00F5C9  0011               	dw	17
   655  00F5CB  0022               	dw	34
   656  00F5CD  0012               	dw	18
   657  00F5CF  0012               	dw	18
   658  00F5D1  0012               	dw	18
   659  00F5D3  0012               	dw	18
   660  00F5D5  0012               	dw	18
   661  00F5D7  00E2               	dw	226
   662  00F5D9  0011               	dw	17
   663  00F5DB  0012               	dw	18
   664  00F5DD  0012               	dw	18
   665  00F5DF  0004               	dw	4
   666  00F5E1  0012               	dw	18
   667  00F5E3  0008               	dw	8
   668  00F5E5  0009               	dw	9
   669  00F5E7  00F0               	dw	240
   670  00F5E9  0004               	dw	4
   671  00F5EB  0000               	dw	0
   672  00F5ED  0000               	dw	0
   673  00F5EF  000D               	dw	13
   674  00F5F1  0000               	dw	0
   675  00F5F3  0000               	dw	0
   676  00F5F5  0000               	dw	0
   677  00F5F7  0010               	dw	16
   678  00F5F9  0000               	dw	0
   679  00F5FB  000E               	dw	14
   680  00F5FD  0080               	dw	128
   681  00F5FF  0001               	dw	1
   682  00F601  0060               	dw	96
   683  00F603  0001               	dw	1
   684  00F605  001C               	dw	28
   685  00F607  0001               	dw	1
   686  00F609  0002               	dw	2
   687  00F60B  0001               	dw	1
   688  00F60D  001C               	dw	28
   689  00F60F  0001               	dw	1
   690  00F611  0060               	dw	96
   691  00F613  0001               	dw	1
   692  00F615  0080               	dw	128
   693  00F617  0001               	dw	1
   694  00F619  0000               	dw	0
   695  00F61B  000E               	dw	14
   696  00F61D  0000               	dw	0
   697  00F61F  0010               	dw	16
   698  00F621  0000               	dw	0
   699  00F623  0000               	dw	0
   700  00F625  0009               	dw	9
   701  00F627  0000               	dw	0
   702  00F629  0000               	dw	0
   703  00F62B  0000               	dw	0
   704  00F62D  0000               	dw	0
   705  00F62F  00FE               	dw	254
   706  00F631  001F               	dw	31
   707  00F633  0042               	dw	66
   708  00F635  0010               	dw	16
   709  00F637  0042               	dw	66
   710  00F639  0010               	dw	16
   711  00F63B  0064               	dw	100
   712  00F63D  0010               	dw	16
   713  00F63F  0098               	dw	152
   714  00F641  0008               	dw	8
   715  00F643  0000               	dw	0
   716  00F645  0007               	dw	7
   717  00F647  0000               	dw	0
   718  00F649  0000               	dw	0
   719  00F64B  000D               	dw	13
   720  00F64D  0000               	dw	0
   721  00F64F  0000               	dw	0
   722  00F651  00F0               	dw	240
   723  00F653  0003               	dw	3
   724  00F655  0008               	dw	8
   725  00F657  0004               	dw	4
   726  00F659  0004               	dw	4
   727  00F65B  0008               	dw	8
   728  00F65D  0002               	dw	2
   729  00F65F  0010               	dw	16
   730  00F661  0002               	dw	2
   731  00F663  0010               	dw	16
   732  00F665  0002               	dw	2
   733  00F667  0010               	dw	16
   734  00F669  0002               	dw	2
   735  00F66B  0010               	dw	16
   736  00F66D  0002               	dw	2
   737  00F66F  0010               	dw	16
   738  00F671  0004               	dw	4
   739  00F673  0008               	dw	8
   740  00F675  0004               	dw	4
   741  00F677  0008               	dw	8
   742  00F679  0008               	dw	8
   743  00F67B  0004               	dw	4
   744  00F67D  0000               	dw	0
   745  00F67F  0000               	dw	0
   746  00F681  000C               	dw	12
   747  00F683  0000               	dw	0
   748  00F685  0000               	dw	0
   749  00F687  0000               	dw	0
   750  00F689  0000               	dw	0
   751  00F68B  00FE               	dw	254
   752  00F68D  001F               	dw	31
   753  00F68F  0002               	dw	2
   754  00F691  0010               	dw	16
   755  00F693  0002               	dw	2
   756  00F695  0010               	dw	16
   757  00F697  0002               	dw	2
   758  00F699  0010               	dw	16
   759  00F69B  0002               	dw	2
   760  00F69D  0010               	dw	16
   761  00F69F  0002               	dw	2
   762  00F6A1  0010               	dw	16
   763  00F6A3  0004               	dw	4
   764  00F6A5  0008               	dw	8
   765  00F6A7  0008               	dw	8
   766  00F6A9  0004               	dw	4
   767  00F6AB  00F0               	dw	240
   768  00F6AD  0003               	dw	3
   769  00F6AF  0000               	dw	0
   770  00F6B1  0000               	dw	0
   771  00F6B3  0009               	dw	9
   772  00F6B5  0000               	dw	0
   773  00F6B7  0000               	dw	0
   774  00F6B9  0000               	dw	0
   775  00F6BB  0000               	dw	0
   776  00F6BD  00FE               	dw	254
   777  00F6BF  001F               	dw	31
   778  00F6C1  0042               	dw	66
   779  00F6C3  0010               	dw	16
   780  00F6C5  0042               	dw	66
   781  00F6C7  0010               	dw	16
   782  00F6C9  0042               	dw	66
   783  00F6CB  0010               	dw	16
   784  00F6CD  0042               	dw	66
   785  00F6CF  0010               	dw	16
   786  00F6D1  0042               	dw	66
   787  00F6D3  0010               	dw	16
   788  00F6D5  0000               	dw	0
   789  00F6D7  0000               	dw	0
   790  00F6D9  0008               	dw	8
   791  00F6DB  0000               	dw	0
   792  00F6DD  0000               	dw	0
   793  00F6DF  0000               	dw	0
   794  00F6E1  0000               	dw	0
   795  00F6E3  00FE               	dw	254
   796  00F6E5  001F               	dw	31
   797  00F6E7  0042               	dw	66
   798  00F6E9  0000               	dw	0
   799  00F6EB  0042               	dw	66
   800  00F6ED  0000               	dw	0
   801  00F6EF  0042               	dw	66
   802  00F6F1  0000               	dw	0
   803  00F6F3  0042               	dw	66
   804  00F6F5  0000               	dw	0
   805  00F6F7  0000               	dw	0
   806  00F6F9  0000               	dw	0
   807  00F6FB  000E               	dw	14
   808  00F6FD  0000               	dw	0
   809  00F6FF  0000               	dw	0
   810  00F701  00F0               	dw	240
   811  00F703  0003               	dw	3
   812  00F705  0008               	dw	8
   813  00F707  0004               	dw	4
   814  00F709  0004               	dw	4
   815  00F70B  0008               	dw	8
   816  00F70D  0002               	dw	2
   817  00F70F  0010               	dw	16
   818  00F711  0002               	dw	2
   819  00F713  0010               	dw	16
   820  00F715  0002               	dw	2
   821  00F717  0010               	dw	16
   822  00F719  0002               	dw	2
   823  00F71B  0010               	dw	16
   824  00F71D  0082               	dw	130
   825  00F71F  0010               	dw	16
   826  00F721  0084               	dw	132
   827  00F723  0010               	dw	16
   828  00F725  0084               	dw	132
   829  00F727  0008               	dw	8
   830  00F729  0088               	dw	136
   831  00F72B  0004               	dw	4
   832  00F72D  0080               	dw	128
   833  00F72F  0003               	dw	3
   834  00F731  0000               	dw	0
   835  00F733  0000               	dw	0
   836  00F735  000A               	dw	10
   837  00F737  0000               	dw	0
   838  00F739  0000               	dw	0
   839  00F73B  0000               	dw	0
   840  00F73D  0000               	dw	0
   841  00F73F  00FE               	dw	254
   842  00F741  001F               	dw	31
   843  00F743  0040               	dw	64
   844  00F745  0000               	dw	0
   845  00F747  0040               	dw	64
   846  00F749  0000               	dw	0
   847  00F74B  0040               	dw	64
   848  00F74D  0000               	dw	0
   849  00F74F  0040               	dw	64
   850  00F751  0000               	dw	0
   851  00F753  0040               	dw	64
   852  00F755  0000               	dw	0
   853  00F757  00FE               	dw	254
   854  00F759  001F               	dw	31
   855  00F75B  0000               	dw	0
   856  00F75D  0000               	dw	0
   857  00F75F  0004               	dw	4
   858  00F761  0000               	dw	0
   859  00F763  0000               	dw	0
   860  00F765  0000               	dw	0
   861  00F767  0000               	dw	0
   862  00F769  00FE               	dw	254
   863  00F76B  001F               	dw	31
   864  00F76D  0000               	dw	0
   865  00F76F  0000               	dw	0
   866  00F771  0007               	dw	7
   867  00F773  0000               	dw	0
   868  00F775  0000               	dw	0
   869  00F777  0000               	dw	0
   870  00F779  0008               	dw	8
   871  00F77B  0000               	dw	0
   872  00F77D  0010               	dw	16
   873  00F77F  0000               	dw	0
   874  00F781  0010               	dw	16
   875  00F783  0000               	dw	0
   876  00F785  0008               	dw	8
   877  00F787  00FE               	dw	254
   878  00F789  0007               	dw	7
   879  00F78B  0000               	dw	0
   880  00F78D  0000               	dw	0
   881  00F78F  0009               	dw	9
   882  00F791  0000               	dw	0
   883  00F793  0000               	dw	0
   884  00F795  0000               	dw	0
   885  00F797  0000               	dw	0
   886  00F799  00FE               	dw	254
   887  00F79B  001F               	dw	31
   888  00F79D  0060               	dw	96
   889  00F79F  0000               	dw	0
   890  00F7A1  0090               	dw	144
   891  00F7A3  0001               	dw	1
   892  00F7A5  0008               	dw	8
   893  00F7A7  0002               	dw	2
   894  00F7A9  0004               	dw	4
   895  00F7AB  000C               	dw	12
   896  00F7AD  0002               	dw	2
   897  00F7AF  0010               	dw	16
   898  00F7B1  0000               	dw	0
   899  00F7B3  0000               	dw	0
   900  00F7B5  0008               	dw	8
   901  00F7B7  0000               	dw	0
   902  00F7B9  0000               	dw	0
   903  00F7BB  0000               	dw	0
   904  00F7BD  0000               	dw	0
   905  00F7BF  00FE               	dw	254
   906  00F7C1  001F               	dw	31
   907  00F7C3  0000               	dw	0
   908  00F7C5  0010               	dw	16
   909  00F7C7  0000               	dw	0
   910  00F7C9  0010               	dw	16
   911  00F7CB  0000               	dw	0
   912  00F7CD  0010               	dw	16
   913  00F7CF  0000               	dw	0
   914  00F7D1  0010               	dw	16
   915  00F7D3  0000               	dw	0
   916  00F7D5  0000               	dw	0
   917  00F7D7  000F               	dw	15
   918  00F7D9  0000               	dw	0
   919  00F7DB  0000               	dw	0
   920  00F7DD  0000               	dw	0
   921  00F7DF  001C               	dw	28
   922  00F7E1  00F8               	dw	248
   923  00F7E3  0003               	dw	3
   924  00F7E5  0006               	dw	6
   925  00F7E7  0000               	dw	0
   926  00F7E9  0038               	dw	56
   927  00F7EB  0000               	dw	0
   928  00F7ED  00C0               	dw	192
   929  00F7EF  0001               	dw	1
   930  00F7F1  0000               	dw	0
   931  00F7F3  000E               	dw	14
   932  00F7F5  0000               	dw	0
   933  00F7F7  0010               	dw	16
   934  00F7F9  0000               	dw	0
   935  00F7FB  000E               	dw	14
   936  00F7FD  00C0               	dw	192
   937  00F7FF  0001               	dw	1
   938  00F801  0038               	dw	56
   939  00F803  0000               	dw	0
   940  00F805  0006               	dw	6
   941  00F807  0000               	dw	0
   942  00F809  00F8               	dw	248
   943  00F80B  0003               	dw	3
   944  00F80D  0000               	dw	0
   945  00F80F  001C               	dw	28
   946  00F811  0000               	dw	0
   947  00F813  0000               	dw	0
   948  00F815  000B               	dw	11
   949  00F817  0000               	dw	0
   950  00F819  0000               	dw	0
   951  00F81B  0000               	dw	0
   952  00F81D  0000               	dw	0
   953  00F81F  00FE               	dw	254
   954  00F821  001F               	dw	31
   955  00F823  0008               	dw	8
   956  00F825  0000               	dw	0
   957  00F827  0030               	dw	48
   958  00F829  0000               	dw	0
   959  00F82B  0040               	dw	64
   960  00F82D  0000               	dw	0
   961  00F82F  0080               	dw	128
   962  00F831  0000               	dw	0
   963  00F833  0000               	dw	0
   964  00F835  0003               	dw	3
   965  00F837  0000               	dw	0
   966  00F839  0004               	dw	4
   967  00F83B  00FE               	dw	254
   968  00F83D  001F               	dw	31
   969  00F83F  0000               	dw	0
   970  00F841  0000               	dw	0
   971  00F843  000E               	dw	14
   972  00F845  0000               	dw	0
   973  00F847  0000               	dw	0
   974  00F849  00F0               	dw	240
   975  00F84B  0003               	dw	3
   976  00F84D  0008               	dw	8
   977  00F84F  0004               	dw	4
   978  00F851  0004               	dw	4
   979  00F853  0008               	dw	8
   980  00F855  0002               	dw	2
   981  00F857  0010               	dw	16
   982  00F859  0002               	dw	2
   983  00F85B  0010               	dw	16
   984  00F85D  0002               	dw	2
   985  00F85F  0010               	dw	16
   986  00F861  0002               	dw	2
   987  00F863  0010               	dw	16
   988  00F865  0002               	dw	2
   989  00F867  0010               	dw	16
   990  00F869  0002               	dw	2
   991  00F86B  0010               	dw	16
   992  00F86D  0004               	dw	4
   993  00F86F  0008               	dw	8
   994  00F871  0008               	dw	8
   995  00F873  0004               	dw	4
   996  00F875  00F0               	dw	240
   997  00F877  0003               	dw	3
   998  00F879  0000               	dw	0
   999  00F87B  0000               	dw	0
  1000  00F87D  0009               	dw	9
  1001  00F87F  0000               	dw	0
  1002  00F881  0000               	dw	0
  1003  00F883  0000               	dw	0
  1004  00F885  0000               	dw	0
  1005  00F887  00FE               	dw	254
  1006  00F889  001F               	dw	31
  1007  00F88B  0042               	dw	66
  1008  00F88D  0000               	dw	0
  1009  00F88F  0042               	dw	66
  1010  00F891  0000               	dw	0
  1011  00F893  0042               	dw	66
  1012  00F895  0000               	dw	0
  1013  00F897  0024               	dw	36
  1014  00F899  0000               	dw	0
  1015  00F89B  0018               	dw	24
  1016  00F89D  0000               	dw	0
  1017  00F89F  0000               	dw	0
  1018  00F8A1  0000               	dw	0
  1019  00F8A3  000E               	dw	14
  1020  00F8A5  0000               	dw	0
  1021  00F8A7  0000               	dw	0
  1022  00F8A9  00F0               	dw	240
  1023  00F8AB  0003               	dw	3
  1024  00F8AD  0008               	dw	8
  1025  00F8AF  0004               	dw	4
  1026  00F8B1  0004               	dw	4
  1027  00F8B3  0008               	dw	8
  1028  00F8B5  0002               	dw	2
  1029  00F8B7  0010               	dw	16
  1030  00F8B9  0002               	dw	2
  1031  00F8BB  0010               	dw	16
  1032  00F8BD  0002               	dw	2
  1033  00F8BF  0010               	dw	16
  1034  00F8C1  0002               	dw	2
  1035  00F8C3  0011               	dw	17
  1036  00F8C5  0002               	dw	2
  1037  00F8C7  0012               	dw	18
  1038  00F8C9  0002               	dw	2
  1039  00F8CB  000C               	dw	12
  1040  00F8CD  0004               	dw	4
  1041  00F8CF  0008               	dw	8
  1042  00F8D1  0008               	dw	8
  1043  00F8D3  0016               	dw	22
  1044  00F8D5  00F0               	dw	240
  1045  00F8D7  0021               	dw	33
  1046  00F8D9  0000               	dw	0
  1047  00F8DB  0000               	dw	0
  1048  00F8DD  000A               	dw	10
  1049  00F8DF  0000               	dw	0
  1050  00F8E1  0000               	dw	0
  1051  00F8E3  0000               	dw	0
  1052  00F8E5  0000               	dw	0
  1053  00F8E7  00FE               	dw	254
  1054  00F8E9  001F               	dw	31
  1055  00F8EB  0042               	dw	66
  1056  00F8ED  0000               	dw	0
  1057  00F8EF  00C2               	dw	194
  1058  00F8F1  0000               	dw	0
  1059  00F8F3  0042               	dw	66
  1060  00F8F5  0001               	dw	1
  1061  00F8F7  0042               	dw	66
  1062  00F8F9  0006               	dw	6
  1063  00F8FB  0024               	dw	36
  1064  00F8FD  0008               	dw	8
  1065  00F8FF  0018               	dw	24
  1066  00F901  0010               	dw	16
  1067  00F903  0000               	dw	0
  1068  00F905  0000               	dw	0
  1069  00F907  0008               	dw	8
  1070  00F909  0000               	dw	0
  1071  00F90B  0004               	dw	4
  1072  00F90D  0018               	dw	24
  1073  00F90F  0008               	dw	8
  1074  00F911  0024               	dw	36
  1075  00F913  0010               	dw	16
  1076  00F915  0042               	dw	66
  1077  00F917  0010               	dw	16
  1078  00F919  0042               	dw	66
  1079  00F91B  0010               	dw	16
  1080  00F91D  0084               	dw	132
  1081  00F91F  0008               	dw	8
  1082  00F921  0008               	dw	8
  1083  00F923  0007               	dw	7
  1084  00F925  0000               	dw	0
  1085  00F927  0000               	dw	0
  1086  00F929  0008               	dw	8
  1087  00F92B  0002               	dw	2
  1088  00F92D  0000               	dw	0
  1089  00F92F  0002               	dw	2
  1090  00F931  0000               	dw	0
  1091  00F933  0002               	dw	2
  1092  00F935  0000               	dw	0
  1093  00F937  00FE               	dw	254
  1094  00F939  001F               	dw	31
  1095  00F93B  0002               	dw	2
  1096  00F93D  0000               	dw	0
  1097  00F93F  0002               	dw	2
  1098  00F941  0000               	dw	0
  1099  00F943  0002               	dw	2
  1100  00F945  0000               	dw	0
  1101  00F947  0000               	dw	0
  1102  00F949  0000               	dw	0
  1103  00F94B  000A               	dw	10
  1104  00F94D  0000               	dw	0
  1105  00F94F  0000               	dw	0
  1106  00F951  0000               	dw	0
  1107  00F953  0000               	dw	0
  1108  00F955  00FE               	dw	254
  1109  00F957  0007               	dw	7
  1110  00F959  0000               	dw	0
  1111  00F95B  0008               	dw	8
  1112  00F95D  0000               	dw	0
  1113  00F95F  0010               	dw	16
  1114  00F961  0000               	dw	0
  1115  00F963  0010               	dw	16
  1116  00F965  0000               	dw	0
  1117  00F967  0010               	dw	16
  1118  00F969  0000               	dw	0
  1119  00F96B  0008               	dw	8
  1120  00F96D  00FE               	dw	254
  1121  00F96F  0007               	dw	7
  1122  00F971  0000               	dw	0
  1123  00F973  0000               	dw	0
  1124  00F975  000C               	dw	12
  1125  00F977  0002               	dw	2
  1126  00F979  0000               	dw	0
  1127  00F97B  001C               	dw	28
  1128  00F97D  0000               	dw	0
  1129  00F97F  0060               	dw	96
  1130  00F981  0000               	dw	0
  1131  00F983  0080               	dw	128
  1132  00F985  0001               	dw	1
  1133  00F987  0000               	dw	0
  1134  00F989  000E               	dw	14
  1135  00F98B  0000               	dw	0
  1136  00F98D  0010               	dw	16
  1137  00F98F  0000               	dw	0
  1138  00F991  000E               	dw	14
  1139  00F993  0080               	dw	128
  1140  00F995  0001               	dw	1
  1141  00F997  0060               	dw	96
  1142  00F999  0000               	dw	0
  1143  00F99B  001C               	dw	28
  1144  00F99D  0000               	dw	0
  1145  00F99F  0002               	dw	2
  1146  00F9A1  0000               	dw	0
  1147  00F9A3  0000               	dw	0
  1148  00F9A5  0000               	dw	0
  1149  00F9A7  000F               	dw	15
  1150  00F9A9  0000               	dw	0
  1151  00F9AB  0000               	dw	0
  1152  00F9AD  0006               	dw	6
  1153  00F9AF  0000               	dw	0
  1154  00F9B1  0078               	dw	120
  1155  00F9B3  0000               	dw	0
  1156  00F9B5  0080               	dw	128
  1157  00F9B7  0007               	dw	7
  1158  00F9B9  0000               	dw	0
  1159  00F9BB  0018               	dw	24
  1160  00F9BD  0080               	dw	128
  1161  00F9BF  0007               	dw	7
  1162  00F9C1  0078               	dw	120
  1163  00F9C3  0000               	dw	0
  1164  00F9C5  0006               	dw	6
  1165  00F9C7  0000               	dw	0
  1166  00F9C9  0078               	dw	120
  1167  00F9CB  0000               	dw	0
  1168  00F9CD  0080               	dw	128
  1169  00F9CF  0007               	dw	7
  1170  00F9D1  0000               	dw	0
  1171  00F9D3  0018               	dw	24
  1172  00F9D5  0080               	dw	128
  1173  00F9D7  0007               	dw	7
  1174  00F9D9  0078               	dw	120
  1175  00F9DB  0000               	dw	0
  1176  00F9DD  0006               	dw	6
  1177  00F9DF  0000               	dw	0
  1178  00F9E1  0000               	dw	0
  1179  00F9E3  0000               	dw	0
  1180  00F9E5  0009               	dw	9
  1181  00F9E7  0000               	dw	0
  1182  00F9E9  0000               	dw	0
  1183  00F9EB  0006               	dw	6
  1184  00F9ED  0018               	dw	24
  1185  00F9EF  0008               	dw	8
  1186  00F9F1  0004               	dw	4
  1187  00F9F3  0030               	dw	48
  1188  00F9F5  0003               	dw	3
  1189  00F9F7  00C0               	dw	192
  1190  00F9F9  0000               	dw	0
  1191  00F9FB  0030               	dw	48
  1192  00F9FD  0003               	dw	3
  1193  00F9FF  0008               	dw	8
  1194  00FA01  0004               	dw	4
  1195  00FA03  0006               	dw	6
  1196  00FA05  0018               	dw	24
  1197  00FA07  0000               	dw	0
  1198  00FA09  0000               	dw	0
  1199  00FA0B  000B               	dw	11
  1200  00FA0D  0000               	dw	0
  1201  00FA0F  0000               	dw	0
  1202  00FA11  0002               	dw	2
  1203  00FA13  0000               	dw	0
  1204  00FA15  0004               	dw	4
  1205  00FA17  0000               	dw	0
  1206  00FA19  0018               	dw	24
  1207  00FA1B  0000               	dw	0
  1208  00FA1D  0060               	dw	96
  1209  00FA1F  0000               	dw	0
  1210  00FA21  0080               	dw	128
  1211  00FA23  001F               	dw	31
  1212  00FA25  0060               	dw	96
  1213  00FA27  0000               	dw	0
  1214  00FA29  0018               	dw	24
  1215  00FA2B  0000               	dw	0
  1216  00FA2D  0004               	dw	4
  1217  00FA2F  0000               	dw	0
  1218  00FA31  0002               	dw	2
  1219  00FA33  0000               	dw	0
  1220  00FA35  0000               	dw	0
  1221  00FA37  0000               	dw	0
  1222  00FA39  0008               	dw	8
  1223  00FA3B  0002               	dw	2
  1224  00FA3D  0010               	dw	16
  1225  00FA3F  0002               	dw	2
  1226  00FA41  001C               	dw	28
  1227  00FA43  0002               	dw	2
  1228  00FA45  0013               	dw	19
  1229  00FA47  00C2               	dw	194
  1230  00FA49  0010               	dw	16
  1231  00FA4B  0032               	dw	50
  1232  00FA4D  0010               	dw	16
  1233  00FA4F  000E               	dw	14
  1234  00FA51  0010               	dw	16
  1235  00FA53  0002               	dw	2
  1236  00FA55  0010               	dw	16
  1237  00FA57  0000               	dw	0
  1238  00FA59  0000               	dw	0
  1239  00FA5B  0006               	dw	6
  1240  00FA5D  0000               	dw	0
  1241  00FA5F  0000               	dw	0
  1242  00FA61  0000               	dw	0
  1243  00FA63  0000               	dw	0
  1244  00FA65  00FE               	dw	254
  1245  00FA67  00FF               	dw	255
  1246  00FA69  0002               	dw	2
  1247  00FA6B  0080               	dw	128
  1248  00FA6D  0002               	dw	2
  1249  00FA6F  0080               	dw	128
  1250  00FA71  0000               	dw	0
  1251  00FA73  0000               	dw	0
  1252  00FA75  000A               	dw	10
  1253  00FA77  0002               	dw	2
  1254  00FA79  0000               	dw	0
  1255  00FA7B  000C               	dw	12
  1256  00FA7D  0000               	dw	0
  1257  00FA7F  0010               	dw	16
  1258  00FA81  0000               	dw	0
  1259  00FA83  0060               	dw	96
  1260  00FA85  0000               	dw	0
  1261  00FA87  0080               	dw	128
  1262  00FA89  0001               	dw	1
  1263  00FA8B  0000               	dw	0
  1264  00FA8D  0006               	dw	6
  1265  00FA8F  0000               	dw	0
  1266  00FA91  0008               	dw	8
  1267  00FA93  0000               	dw	0
  1268  00FA95  0030               	dw	48
  1269  00FA97  0000               	dw	0
  1270  00FA99  0040               	dw	64
  1271  00FA9B  0000               	dw	0
  1272  00FA9D  0000               	dw	0
  1273  00FA9F  0005               	dw	5
  1274  00FAA1  0000               	dw	0
  1275  00FAA3  0000               	dw	0
  1276  00FAA5  0002               	dw	2
  1277  00FAA7  0080               	dw	128
  1278  00FAA9  0002               	dw	2
  1279  00FAAB  0080               	dw	128
  1280  00FAAD  00FE               	dw	254
  1281  00FAAF  00FF               	dw	255
  1282  00FAB1  0000               	dw	0
  1283  00FAB3  0000               	dw	0
  1284  00FAB5  000B               	dw	11
  1285  00FAB7  0000               	dw	0
  1286  00FAB9  0000               	dw	0
  1287  00FABB  0000               	dw	0
  1288  00FABD  0002               	dw	2
  1289  00FABF  0080               	dw	128
  1290  00FAC1  0001               	dw	1
  1291  00FAC3  0070               	dw	112
  1292  00FAC5  0000               	dw	0
  1293  00FAC7  000C               	dw	12
  1294  00FAC9  0000               	dw	0
  1295  00FACB  0002               	dw	2
  1296  00FACD  0000               	dw	0
  1297  00FACF  000C               	dw	12
  1298  00FAD1  0000               	dw	0
  1299  00FAD3  0070               	dw	112
  1300  00FAD5  0000               	dw	0
  1301  00FAD7  0080               	dw	128
  1302  00FAD9  0001               	dw	1
  1303  00FADB  0000               	dw	0
  1304  00FADD  0002               	dw	2
  1305  00FADF  0000               	dw	0
  1306  00FAE1  0000               	dw	0
  1307  00FAE3  0009               	dw	9
  1308  00FAE5  0000               	dw	0
  1309  00FAE7  0040               	dw	64
  1310  00FAE9  0000               	dw	0
  1311  00FAEB  0040               	dw	64
  1312  00FAED  0000               	dw	0
  1313  00FAEF  0040               	dw	64
  1314  00FAF1  0000               	dw	0
  1315  00FAF3  0040               	dw	64
  1316  00FAF5  0000               	dw	0
  1317  00FAF7  0040               	dw	64
  1318  00FAF9  0000               	dw	0
  1319  00FAFB  0040               	dw	64
  1320  00FAFD  0000               	dw	0
  1321  00FAFF  0040               	dw	64
  1322  00FB01  0000               	dw	0
  1323  00FB03  0040               	dw	64
  1324  00FB05  0000               	dw	0
  1325  00FB07  0000               	dw	0
  1326  00FB09  0005               	dw	5
  1327  00FB0B  0000               	dw	0
  1328  00FB0D  0000               	dw	0
  1329  00FB0F  0000               	dw	0
  1330  00FB11  0000               	dw	0
  1331  00FB13  0002               	dw	2
  1332  00FB15  0000               	dw	0
  1333  00FB17  0004               	dw	4
  1334  00FB19  0000               	dw	0
  1335  00FB1B  0000               	dw	0
  1336  00FB1D  0000               	dw	0
  1337  00FB1F  000B               	dw	11
  1338  00FB21  0000               	dw	0
  1339  00FB23  0000               	dw	0
  1340  00FB25  00C0               	dw	192
  1341  00FB27  0007               	dw	7
  1342  00FB29  0020               	dw	32
  1343  00FB2B  0008               	dw	8
  1344  00FB2D  0010               	dw	16
  1345  00FB2F  0010               	dw	16
  1346  00FB31  0010               	dw	16
  1347  00FB33  0010               	dw	16
  1348  00FB35  0010               	dw	16
  1349  00FB37  0010               	dw	16
  1350  00FB39  0010               	dw	16
  1351  00FB3B  0010               	dw	16
  1352  00FB3D  0010               	dw	16
  1353  00FB3F  0010               	dw	16
  1354  00FB41  0020               	dw	32
  1355  00FB43  0008               	dw	8
  1356  00FB45  00F0               	dw	240
  1357  00FB47  001F               	dw	31
  1358  00FB49  0000               	dw	0
  1359  00FB4B  0000               	dw	0
  1360  00FB4D  000B               	dw	11
  1361  00FB4F  0000               	dw	0
  1362  00FB51  0000               	dw	0
  1363  00FB53  00FE               	dw	254
  1364  00FB55  001F               	dw	31
  1365  00FB57  0020               	dw	32
  1366  00FB59  0008               	dw	8
  1367  00FB5B  0010               	dw	16
  1368  00FB5D  0010               	dw	16
  1369  00FB5F  0010               	dw	16
  1370  00FB61  0010               	dw	16
  1371  00FB63  0010               	dw	16
  1372  00FB65  0010               	dw	16
  1373  00FB67  0010               	dw	16
  1374  00FB69  0010               	dw	16
  1375  00FB6B  0010               	dw	16
  1376  00FB6D  0010               	dw	16
  1377  00FB6F  0020               	dw	32
  1378  00FB71  0008               	dw	8
  1379  00FB73  00C0               	dw	192
  1380  00FB75  0007               	dw	7
  1381  00FB77  0000               	dw	0
  1382  00FB79  0000               	dw	0
  1383  00FB7B  000A               	dw	10
  1384  00FB7D  0000               	dw	0
  1385  00FB7F  0000               	dw	0
  1386  00FB81  00C0               	dw	192
  1387  00FB83  0007               	dw	7
  1388  00FB85  0020               	dw	32
  1389  00FB87  0008               	dw	8
  1390  00FB89  0010               	dw	16
  1391  00FB8B  0010               	dw	16
  1392  00FB8D  0010               	dw	16
  1393  00FB8F  0010               	dw	16
  1394  00FB91  0010               	dw	16
  1395  00FB93  0010               	dw	16
  1396  00FB95  0010               	dw	16
  1397  00FB97  0010               	dw	16
  1398  00FB99  0020               	dw	32
  1399  00FB9B  0008               	dw	8
  1400  00FB9D  0040               	dw	64
  1401  00FB9F  0004               	dw	4
  1402  00FBA1  0000               	dw	0
  1403  00FBA3  0000               	dw	0
  1404  00FBA5  000B               	dw	11
  1405  00FBA7  0000               	dw	0
  1406  00FBA9  0000               	dw	0
  1407  00FBAB  00C0               	dw	192
  1408  00FBAD  0007               	dw	7
  1409  00FBAF  0020               	dw	32
  1410  00FBB1  0008               	dw	8
  1411  00FBB3  0010               	dw	16
  1412  00FBB5  0010               	dw	16
  1413  00FBB7  0010               	dw	16
  1414  00FBB9  0010               	dw	16
  1415  00FBBB  0010               	dw	16
  1416  00FBBD  0010               	dw	16
  1417  00FBBF  0010               	dw	16
  1418  00FBC1  0010               	dw	16
  1419  00FBC3  0010               	dw	16
  1420  00FBC5  0010               	dw	16
  1421  00FBC7  0020               	dw	32
  1422  00FBC9  0008               	dw	8
  1423  00FBCB  00FE               	dw	254
  1424  00FBCD  001F               	dw	31
  1425  00FBCF  0000               	dw	0
  1426  00FBD1  0000               	dw	0
  1427  00FBD3  000A               	dw	10
  1428  00FBD5  0000               	dw	0
  1429  00FBD7  0000               	dw	0
  1430  00FBD9  00C0               	dw	192
  1431  00FBDB  0007               	dw	7
  1432  00FBDD  0020               	dw	32
  1433  00FBDF  0009               	dw	9
  1434  00FBE1  0010               	dw	16
  1435  00FBE3  0011               	dw	17
  1436  00FBE5  0010               	dw	16
  1437  00FBE7  0011               	dw	17
  1438  00FBE9  0010               	dw	16
  1439  00FBEB  0011               	dw	17
  1440  00FBED  0010               	dw	16
  1441  00FBEF  0011               	dw	17
  1442  00FBF1  0020               	dw	32
  1443  00FBF3  0009               	dw	9
  1444  00FBF5  00C0               	dw	192
  1445  00FBF7  0005               	dw	5
  1446  00FBF9  0000               	dw	0
  1447  00FBFB  0000               	dw	0
  1448  00FBFD  0006               	dw	6
  1449  00FBFF  0000               	dw	0
  1450  00FC01  0000               	dw	0
  1451  00FC03  0010               	dw	16
  1452  00FC05  0000               	dw	0
  1453  00FC07  00FC               	dw	252
  1454  00FC09  001F               	dw	31
  1455  00FC0B  0012               	dw	18
  1456  00FC0D  0000               	dw	0
  1457  00FC0F  0012               	dw	18
  1458  00FC11  0000               	dw	0
  1459  00FC13  0000               	dw	0
  1460  00FC15  0000               	dw	0
  1461  00FC17  000B               	dw	11
  1462  00FC19  0000               	dw	0
  1463  00FC1B  0000               	dw	0
  1464  00FC1D  00C0               	dw	192
  1465  00FC1F  0027               	dw	39
  1466  00FC21  0020               	dw	32
  1467  00FC23  0048               	dw	72
  1468  00FC25  0010               	dw	16
  1469  00FC27  0090               	dw	144
  1470  00FC29  0010               	dw	16
  1471  00FC2B  0090               	dw	144
  1472  00FC2D  0010               	dw	16
  1473  00FC2F  0090               	dw	144
  1474  00FC31  0010               	dw	16
  1475  00FC33  0090               	dw	144
  1476  00FC35  0010               	dw	16
  1477  00FC37  0090               	dw	144
  1478  00FC39  0020               	dw	32
  1479  00FC3B  0048               	dw	72
  1480  00FC3D  00F0               	dw	240
  1481  00FC3F  003F               	dw	63
  1482  00FC41  0000               	dw	0
  1483  00FC43  0000               	dw	0
  1484  00FC45  000A               	dw	10
  1485  00FC47  0000               	dw	0
  1486  00FC49  0000               	dw	0
  1487  00FC4B  00FE               	dw	254
  1488  00FC4D  001F               	dw	31
  1489  00FC4F  0020               	dw	32
  1490  00FC51  0000               	dw	0
  1491  00FC53  0010               	dw	16
  1492  00FC55  0000               	dw	0
  1493  00FC57  0010               	dw	16
  1494  00FC59  0000               	dw	0
  1495  00FC5B  0010               	dw	16
  1496  00FC5D  0000               	dw	0
  1497  00FC5F  0010               	dw	16
  1498  00FC61  0000               	dw	0
  1499  00FC63  0020               	dw	32
  1500  00FC65  0000               	dw	0
  1501  00FC67  00C0               	dw	192
  1502  00FC69  001F               	dw	31
  1503  00FC6B  0000               	dw	0
  1504  00FC6D  0000               	dw	0
  1505  00FC6F  0003               	dw	3
  1506  00FC71  0000               	dw	0
  1507  00FC73  0000               	dw	0
  1508  00FC75  00F6               	dw	246
  1509  00FC77  001F               	dw	31
  1510  00FC79  0000               	dw	0
  1511  00FC7B  0000               	dw	0
  1512  00FC7D  0003               	dw	3
  1513  00FC7F  0000               	dw	0
  1514  00FC81  0080               	dw	128
  1515  00FC83  00F6               	dw	246
  1516  00FC85  007F               	dw	127
  1517  00FC87  0000               	dw	0
  1518  00FC89  0000               	dw	0
  1519  00FC8B  0008               	dw	8
  1520  00FC8D  0000               	dw	0
  1521  00FC8F  0000               	dw	0
  1522  00FC91  00FE               	dw	254
  1523  00FC93  001F               	dw	31
  1524  00FC95  0000               	dw	0
  1525  00FC97  0001               	dw	1
  1526  00FC99  0080               	dw	128
  1527  00FC9B  0002               	dw	2
  1528  00FC9D  0040               	dw	64
  1529  00FC9F  0004               	dw	4
  1530  00FCA1  0020               	dw	32
  1531  00FCA3  0008               	dw	8
  1532  00FCA5  0010               	dw	16
  1533  00FCA7  0010               	dw	16
  1534  00FCA9  0000               	dw	0
  1535  00FCAB  0000               	dw	0
  1536  00FCAD  0003               	dw	3
  1537  00FCAF  0000               	dw	0
  1538  00FCB1  0000               	dw	0
  1539  00FCB3  00FE               	dw	254
  1540  00FCB5  001F               	dw	31
  1541  00FCB7  0000               	dw	0
  1542  00FCB9  0000               	dw	0
  1543  00FCBB  000F               	dw	15
  1544  00FCBD  0000               	dw	0
  1545  00FCBF  0000               	dw	0
  1546  00FCC1  00F0               	dw	240
  1547  00FCC3  001F               	dw	31
  1548  00FCC5  0020               	dw	32
  1549  00FCC7  0000               	dw	0
  1550  00FCC9  0010               	dw	16
  1551  00FCCB  0000               	dw	0
  1552  00FCCD  0010               	dw	16
  1553  00FCCF  0000               	dw	0
  1554  00FCD1  0010               	dw	16
  1555  00FCD3  0000               	dw	0
  1556  00FCD5  0020               	dw	32
  1557  00FCD7  0000               	dw	0
  1558  00FCD9  00C0               	dw	192
  1559  00FCDB  001F               	dw	31
  1560  00FCDD  0020               	dw	32
  1561  00FCDF  0000               	dw	0
  1562  00FCE1  0010               	dw	16
  1563  00FCE3  0000               	dw	0
  1564  00FCE5  0010               	dw	16
  1565  00FCE7  0000               	dw	0
  1566  00FCE9  0010               	dw	16
  1567  00FCEB  0000               	dw	0
  1568  00FCED  0020               	dw	32
  1569  00FCEF  0000               	dw	0
  1570  00FCF1  00C0               	dw	192
  1571  00FCF3  001F               	dw	31
  1572  00FCF5  0000               	dw	0
  1573  00FCF7  0000               	dw	0
  1574  00FCF9  000A               	dw	10
  1575  00FCFB  0000               	dw	0
  1576  00FCFD  0000               	dw	0
  1577  00FCFF  00F0               	dw	240
  1578  00FD01  001F               	dw	31
  1579  00FD03  0020               	dw	32
  1580  00FD05  0000               	dw	0
  1581  00FD07  0010               	dw	16
  1582  00FD09  0000               	dw	0
  1583  00FD0B  0010               	dw	16
  1584  00FD0D  0000               	dw	0
  1585  00FD0F  0010               	dw	16
  1586  00FD11  0000               	dw	0
  1587  00FD13  0010               	dw	16
  1588  00FD15  0000               	dw	0
  1589  00FD17  0020               	dw	32
  1590  00FD19  0000               	dw	0
  1591  00FD1B  00C0               	dw	192
  1592  00FD1D  001F               	dw	31
  1593  00FD1F  0000               	dw	0
  1594  00FD21  0000               	dw	0
  1595  00FD23  000A               	dw	10
  1596  00FD25  0000               	dw	0
  1597  00FD27  0000               	dw	0
  1598  00FD29  00C0               	dw	192
  1599  00FD2B  0007               	dw	7
  1600  00FD2D  0020               	dw	32
  1601  00FD2F  0008               	dw	8
  1602  00FD31  0010               	dw	16
  1603  00FD33  0010               	dw	16
  1604  00FD35  0010               	dw	16
  1605  00FD37  0010               	dw	16
  1606  00FD39  0010               	dw	16
  1607  00FD3B  0010               	dw	16
  1608  00FD3D  0010               	dw	16
  1609  00FD3F  0010               	dw	16
  1610  00FD41  0020               	dw	32
  1611  00FD43  0008               	dw	8
  1612  00FD45  00C0               	dw	192
  1613  00FD47  0007               	dw	7
  1614  00FD49  0000               	dw	0
  1615  00FD4B  0000               	dw	0
  1616  00FD4D  000B               	dw	11
  1617  00FD4F  0000               	dw	0
  1618  00FD51  0000               	dw	0
  1619  00FD53  00F0               	dw	240
  1620  00FD55  00FF               	dw	255
  1621  00FD57  0020               	dw	32
  1622  00FD59  0008               	dw	8
  1623  00FD5B  0010               	dw	16
  1624  00FD5D  0010               	dw	16
  1625  00FD5F  0010               	dw	16
  1626  00FD61  0010               	dw	16
  1627  00FD63  0010               	dw	16
  1628  00FD65  0010               	dw	16
  1629  00FD67  0010               	dw	16
  1630  00FD69  0010               	dw	16
  1631  00FD6B  0010               	dw	16
  1632  00FD6D  0010               	dw	16
  1633  00FD6F  0020               	dw	32
  1634  00FD71  0008               	dw	8
  1635  00FD73  00C0               	dw	192
  1636  00FD75  0007               	dw	7
  1637  00FD77  0000               	dw	0
  1638  00FD79  0000               	dw	0
  1639  00FD7B  000B               	dw	11
  1640  00FD7D  0000               	dw	0
  1641  00FD7F  0000               	dw	0
  1642  00FD81  00C0               	dw	192
  1643  00FD83  0007               	dw	7
  1644  00FD85  0020               	dw	32
  1645  00FD87  0008               	dw	8
  1646  00FD89  0010               	dw	16
  1647  00FD8B  0010               	dw	16
  1648  00FD8D  0010               	dw	16
  1649  00FD8F  0010               	dw	16
  1650  00FD91  0010               	dw	16
  1651  00FD93  0010               	dw	16
  1652  00FD95  0010               	dw	16
  1653  00FD97  0010               	dw	16
  1654  00FD99  0010               	dw	16
  1655  00FD9B  0010               	dw	16
  1656  00FD9D  0020               	dw	32
  1657  00FD9F  0008               	dw	8
  1658  00FDA1  00F0               	dw	240
  1659  00FDA3  00FF               	dw	255
  1660  00FDA5  0000               	dw	0
  1661  00FDA7  0000               	dw	0
  1662  00FDA9  0006               	dw	6
  1663  00FDAB  0000               	dw	0
  1664  00FDAD  0000               	dw	0
  1665  00FDAF  00F0               	dw	240
  1666  00FDB1  001F               	dw	31
  1667  00FDB3  0020               	dw	32
  1668  00FDB5  0000               	dw	0
  1669  00FDB7  0010               	dw	16
  1670  00FDB9  0000               	dw	0
  1671  00FDBB  0010               	dw	16
  1672  00FDBD  0000               	dw	0
  1673  00FDBF  0000               	dw	0
  1674  00FDC1  0000               	dw	0
  1675  00FDC3  0006               	dw	6
  1676  00FDC5  0060               	dw	96
  1677  00FDC7  0008               	dw	8
  1678  00FDC9  0090               	dw	144
  1679  00FDCB  0010               	dw	16
  1680  00FDCD  0010               	dw	16
  1681  00FDCF  0011               	dw	17
  1682  00FDD1  0010               	dw	16
  1683  00FDD3  0011               	dw	17
  1684  00FDD5  0020               	dw	32
  1685  00FDD7  000E               	dw	14
  1686  00FDD9  0000               	dw	0
  1687  00FDDB  0000               	dw	0
  1688  00FDDD  0007               	dw	7
  1689  00FDDF  0000               	dw	0
  1690  00FDE1  0000               	dw	0
  1691  00FDE3  0010               	dw	16
  1692  00FDE5  0000               	dw	0
  1693  00FDE7  0010               	dw	16
  1694  00FDE9  0000               	dw	0
  1695  00FDEB  00FE               	dw	254
  1696  00FDED  001F               	dw	31
  1697  00FDEF  0010               	dw	16
  1698  00FDF1  0000               	dw	0
  1699  00FDF3  0010               	dw	16
  1700  00FDF5  0000               	dw	0
  1701  00FDF7  0000               	dw	0
  1702  00FDF9  0000               	dw	0
  1703  00FDFB  000A               	dw	10
  1704  00FDFD  0000               	dw	0
  1705  00FDFF  0000               	dw	0
  1706  00FE01  00F0               	dw	240
  1707  00FE03  0007               	dw	7
  1708  00FE05  0000               	dw	0
  1709  00FE07  0008               	dw	8
  1710  00FE09  0000               	dw	0
  1711  00FE0B  0010               	dw	16
  1712  00FE0D  0000               	dw	0
  1713  00FE0F  0010               	dw	16
  1714  00FE11  0000               	dw	0
  1715  00FE13  0010               	dw	16
  1716  00FE15  0000               	dw	0
  1717  00FE17  0010               	dw	16
  1718  00FE19  0000               	dw	0
  1719  00FE1B  0008               	dw	8
  1720  00FE1D  00F0               	dw	240
  1721  00FE1F  0007               	dw	7
  1722  00FE21  0000               	dw	0
  1723  00FE23  0000               	dw	0
  1724  00FE25  000A               	dw	10
  1725  00FE27  0010               	dw	16
  1726  00FE29  0000               	dw	0
  1727  00FE2B  0060               	dw	96
  1728  00FE2D  0000               	dw	0
  1729  00FE2F  0080               	dw	128
  1730  00FE31  0003               	dw	3
  1731  00FE33  0000               	dw	0
  1732  00FE35  000C               	dw	12
  1733  00FE37  0000               	dw	0
  1734  00FE39  0010               	dw	16
  1735  00FE3B  0000               	dw	0
  1736  00FE3D  000C               	dw	12
  1737  00FE3F  0080               	dw	128
  1738  00FE41  0003               	dw	3
  1739  00FE43  0060               	dw	96
  1740  00FE45  0000               	dw	0
  1741  00FE47  0010               	dw	16
  1742  00FE49  0000               	dw	0
  1743  00FE4B  0000               	dw	0
  1744  00FE4D  0000               	dw	0
  1745  00FE4F  000E               	dw	14
  1746  00FE51  0010               	dw	16
  1747  00FE53  0000               	dw	0
  1748  00FE55  00E0               	dw	224
  1749  00FE57  0000               	dw	0
  1750  00FE59  0000               	dw	0
  1751  00FE5B  0007               	dw	7
  1752  00FE5D  0000               	dw	0
  1753  00FE5F  0018               	dw	24
  1754  00FE61  0000               	dw	0
  1755  00FE63  0007               	dw	7
  1756  00FE65  00E0               	dw	224
  1757  00FE67  0000               	dw	0
  1758  00FE69  0010               	dw	16
  1759  00FE6B  0000               	dw	0
  1760  00FE6D  00E0               	dw	224
  1761  00FE6F  0000               	dw	0
  1762  00FE71  0000               	dw	0
  1763  00FE73  0007               	dw	7
  1764  00FE75  0000               	dw	0
  1765  00FE77  0018               	dw	24
  1766  00FE79  0000               	dw	0
  1767  00FE7B  0007               	dw	7
  1768  00FE7D  00E0               	dw	224
  1769  00FE7F  0000               	dw	0
  1770  00FE81  0010               	dw	16
  1771  00FE83  0000               	dw	0
  1772  00FE85  0000               	dw	0
  1773  00FE87  0000               	dw	0
  1774  00FE89  0009               	dw	9
  1775  00FE8B  0010               	dw	16
  1776  00FE8D  0010               	dw	16
  1777  00FE8F  0020               	dw	32
  1778  00FE91  0008               	dw	8
  1779  00FE93  0040               	dw	64
  1780  00FE95  0004               	dw	4
  1781  00FE97  0080               	dw	128
  1782  00FE99  0003               	dw	3
  1783  00FE9B  0080               	dw	128
  1784  00FE9D  0003               	dw	3
  1785  00FE9F  0040               	dw	64
  1786  00FEA1  0004               	dw	4
  1787  00FEA3  0020               	dw	32
  1788  00FEA5  0008               	dw	8
  1789  00FEA7  0010               	dw	16
  1790  00FEA9  0010               	dw	16
  1791  00FEAB  0000               	dw	0
  1792  00FEAD  0000               	dw	0
  1793  00FEAF  0009               	dw	9
  1794  00FEB1  0010               	dw	16
  1795  00FEB3  0000               	dw	0
  1796  00FEB5  00E0               	dw	224
  1797  00FEB7  0000               	dw	0
  1798  00FEB9  0000               	dw	0
  1799  00FEBB  0083               	dw	131
  1800  00FEBD  0000               	dw	0
  1801  00FEBF  007C               	dw	124
  1802  00FEC1  0000               	dw	0
  1803  00FEC3  000C               	dw	12
  1804  00FEC5  0000               	dw	0
  1805  00FEC7  0003               	dw	3
  1806  00FEC9  00E0               	dw	224
  1807  00FECB  0000               	dw	0
  1808  00FECD  0010               	dw	16
  1809  00FECF  0000               	dw	0
  1810  00FED1  0000               	dw	0
  1811  00FED3  0000               	dw	0
  1812  00FED5  0008               	dw	8
  1813  00FED7  0010               	dw	16
  1814  00FED9  0010               	dw	16
  1815  00FEDB  0010               	dw	16
  1816  00FEDD  0018               	dw	24
  1817  00FEDF  0010               	dw	16
  1818  00FEE1  0016               	dw	22
  1819  00FEE3  0010               	dw	16
  1820  00FEE5  0011               	dw	17
  1821  00FEE7  00D0               	dw	208
  1822  00FEE9  0010               	dw	16
  1823  00FEEB  0030               	dw	48
  1824  00FEED  0010               	dw	16
  1825  00FEEF  0010               	dw	16
  1826  00FEF1  0010               	dw	16
  1827  00FEF3  0000               	dw	0
  1828  00FEF5  0000               	dw	0
  1829  00FEF7  0007               	dw	7
  1830  00FEF9  0000               	dw	0
  1831  00FEFB  0000               	dw	0
  1832  00FEFD  0000               	dw	0
  1833  00FEFF  0001               	dw	1
  1834  00FF01  0080               	dw	128
  1835  00FF03  0002               	dw	2
  1836  00FF05  00FC               	dw	252
  1837  00FF07  007E               	dw	126
  1838  00FF09  0002               	dw	2
  1839  00FF0B  0080               	dw	128
  1840  00FF0D  0002               	dw	2
  1841  00FF0F  0080               	dw	128
  1842  00FF11  0000               	dw	0
  1843  00FF13  0000               	dw	0
  1844  00FF15  0007               	dw	7
  1845  00FF17  0000               	dw	0
  1846  00FF19  0000               	dw	0
  1847  00FF1B  0000               	dw	0
  1848  00FF1D  0000               	dw	0
  1849  00FF1F  0000               	dw	0
  1850  00FF21  0000               	dw	0
  1851  00FF23  0000               	dw	0
  1852  00FF25  0000               	dw	0
  1853  00FF27  0000               	dw	0
  1854  00FF29  0000               	dw	0
  1855  00FF2B  00FE               	dw	254
  1856  00FF2D  00FF               	dw	255
  1857  00FF2F  0000               	dw	0
  1858  00FF31  0000               	dw	0
  1859  00FF33  0006               	dw	6
  1860  00FF35  0002               	dw	2
  1861  00FF37  0080               	dw	128
  1862  00FF39  0002               	dw	2
  1863  00FF3B  0080               	dw	128
  1864  00FF3D  00FC               	dw	252
  1865  00FF3F  007E               	dw	126
  1866  00FF41  0080               	dw	128
  1867  00FF43  0002               	dw	2
  1868  00FF45  0000               	dw	0
  1869  00FF47  0001               	dw	1
  1870  00FF49  0000               	dw	0
  1871  00FF4B  0000               	dw	0
  1872  00FF4D  000A               	dw	10
  1873  00FF4F  0000               	dw	0
  1874  00FF51  0000               	dw	0
  1875  00FF53  0080               	dw	128
  1876  00FF55  0000               	dw	0
  1877  00FF57  0040               	dw	64
  1878  00FF59  0000               	dw	0
  1879  00FF5B  0040               	dw	64
  1880  00FF5D  0000               	dw	0
  1881  00FF5F  0040               	dw	64
  1882  00FF61  0000               	dw	0
  1883  00FF63  0080               	dw	128
  1884  00FF65  0000               	dw	0
  1885  00FF67  0080               	dw	128
  1886  00FF69  0000               	dw	0
  1887  00FF6B  0080               	dw	128
  1888  00FF6D  0000               	dw	0
  1889  00FF6F  0040               	dw	64
  1890  00FF71  0000               	dw	0
  1891  00FF73  0000               	dw	0
  1892  00FF75  0000               	dw	0
  1893  00FF77  0005               	dw	5
  1894  00FF79  00FF               	dw	255
  1895  00FF7B  000F               	dw	15
  1896  00FF7D  0001               	dw	1
  1897  00FF7F  0008               	dw	8
  1898  00FF81  0001               	dw	1
  1899  00FF83  0008               	dw	8
  1900  00FF85  00FF               	dw	255
  1901  00FF87  000F               	dw	15
  1902  00FF89  0000               	dw	0
  1903  00FF8B  0000               	dw	0
  1904  00FF8D                     __end_of_font:
  1905                           	opt callstack 0
  1906  00FF8D                     _spi_configuration:
  1907                           	opt callstack 0
  1908  00FF8D  00                 	db	0
  1909  00FF8E  40                 	db	64
  1910  00FF8F  01                 	db	1
  1911  00FF90  00                 	db	0
  1912  00FF91                     __end_of_spi_configuration:
  1913                           	opt callstack 0
  1914  00FF91                     STR_1:
  1915  00FF91  58                 	db	88	;'X'
  1916  00FF92  43                 	db	67	;'C'
  1917  00FF93  38                 	db	56	;'8'
  1918  00FF94  20                 	db	32
  1919  00FF95  2D                 	db	45
  1920  00FF96  20                 	db	32
  1921  00FF97  42                 	db	66	;'B'
  1922  00FF98  69                 	db	105	;'i'
  1923  00FF99  62                 	db	98	;'b'
  1924  00FF9A  6C                 	db	108	;'l'
  1925  00FF9B  69                 	db	105	;'i'
  1926  00FF9C  6F                 	db	111	;'o'
  1927  00FF9D  74                 	db	116	;'t'
  1928  00FF9E  65                 	db	101	;'e'
  1929  00FF9F  63                 	db	99	;'c'
  1930  00FFA0  61                 	db	97	;'a'
  1931  00FFA1  20                 	db	32
  1932  00FFA2  2D                 	db	45
  1933  00FFA3  20                 	db	32
  1934  00FFA4  4C                 	db	76	;'L'
  1935  00FFA5  43                 	db	67	;'C'
  1936  00FFA6  44                 	db	68	;'D'
  1937  00FFA7  20                 	db	32
  1938  00FFA8  2D                 	db	45
  1939  00FFA9  20                 	db	32
  1940  00FFAA  49                 	db	73	;'I'
  1941  00FFAB  4C                 	db	76	;'L'
  1942  00FFAC  49                 	db	73	;'I'
  1943  00FFAD  39                 	db	57	;'9'
  1944  00FFAE  33                 	db	51	;'3'
  1945  00FFAF  34                 	db	52	;'4'
  1946  00FFB0  31                 	db	49	;'1'
  1947  00FFB1  00                 	db	0
  1948  00FFB2                     STR_3:
  1949  00FFB2  70                 	db	112	;'p'
  1950  00FFB3  65                 	db	101	;'e'
  1951  00FFB4  72                 	db	114	;'r'
  1952  00FFB5  63                 	db	99	;'c'
  1953  00FFB6  65                 	db	101	;'e'
  1954  00FFB7  6E                 	db	110	;'n'
  1955  00FFB8  74                 	db	116	;'t'
  1956  00FFB9  61                 	db	97	;'a'
  1957  00FFBA  67                 	db	103	;'g'
  1958  00FFBB  65                 	db	101	;'e'
  1959  00FFBC  6D                 	db	109	;'m'
  1960  00FFBD  20                 	db	32
  1961  00FFBE  3D                 	db	61	;'='
  1962  00FFBF  20                 	db	32
  1963  00FFC0  25                 	db	37
  1964  00FFC1  64                 	db	100	;'d'
  1965  00FFC2  00                 	db	0
  1966  00FFC3                     STR_2:
  1967  00FFC3  50                 	db	80	;'P'
  1968  00FFC4  49                 	db	73	;'I'
  1969  00FFC5  43                 	db	67	;'C'
  1970  00FFC6  20                 	db	32
  1971  00FFC7  2D                 	db	45
  1972  00FFC8  20                 	db	32
  1973  00FFC9  53                 	db	83	;'S'
  1974  00FFCA  45                 	db	69	;'E'
  1975  00FFCB  45                 	db	69	;'E'
  1976  00FFCC  56                 	db	86	;'V'
  1977  00FFCD  00                 	db	0
  1978  00FFCE                     STR_80:
  1979  00FFCE  68                 	db	104	;'h'
  1980  00FFCF  68                 	db	104	;'h'
  1981  00FFD0  58                 	db	88	;'X'
  1982  00FFD1  00                 	db	0
  1983  00FFD2                     STR_4:
  1984  00FFD2  68                 	db	104	;'h'
  1985  00FFD3  68                 	db	104	;'h'
  1986  00FFD4  64                 	db	100	;'d'
  1987  00FFD5  00                 	db	0
  1988  00FFD6                     STR_8:
  1989  00FFD6  68                 	db	104	;'h'
  1990  00FFD7  68                 	db	104	;'h'
  1991  00FFD8  69                 	db	105	;'i'
  1992  00FFD9  00                 	db	0
  1993  00FFDA                     STR_46:
  1994  00FFDA  68                 	db	104	;'h'
  1995  00FFDB  68                 	db	104	;'h'
  1996  00FFDC  6E                 	db	110	;'n'
  1997  00FFDD  00                 	db	0
  1998  00FFDE                     STR_31:
  1999  00FFDE  68                 	db	104	;'h'
  2000  00FFDF  68                 	db	104	;'h'
  2001  00FFE0  6F                 	db	111	;'o'
  2002  00FFE1  00                 	db	0
  2003  00FFE2                     STR_61:
  2004  00FFE2  68                 	db	104	;'h'
  2005  00FFE3  68                 	db	104	;'h'
  2006  00FFE4  75                 	db	117	;'u'
  2007  00FFE5  00                 	db	0
  2008  00FFE6                     STR_76:
  2009  00FFE6  68                 	db	104	;'h'
  2010  00FFE7  68                 	db	104	;'h'
  2011  00FFE8  78                 	db	120	;'x'
  2012  00FFE9  00                 	db	0
  2013  00FFEA                     STR_98:
  2014  00FFEA  7A                 	db	122	;'z'
  2015  00FFEB  58                 	db	88	;'X'
  2016  00FFEC  00                 	db	0
  2017  00FFED                     STR_22:
  2018  00FFED  7A                 	db	122	;'z'
  2019  00FFEE  64                 	db	100	;'d'
  2020  00FFEF  00                 	db	0
  2021  00FFF0                     STR_26:
  2022  00FFF0  7A                 	db	122	;'z'
  2023  00FFF1  69                 	db	105	;'i'
  2024  00FFF2  00                 	db	0
  2025  00FFF3                     STR_56:
  2026  00FFF3  7A                 	db	122	;'z'
  2027  00FFF4  6E                 	db	110	;'n'
  2028  00FFF5  00                 	db	0
  2029  00FFF6                     STR_41:
  2030  00FFF6  7A                 	db	122	;'z'
  2031  00FFF7  6F                 	db	111	;'o'
  2032  00FFF8  00                 	db	0
  2033  00FFF9                     STR_71:
  2034  00FFF9  7A                 	db	122	;'z'
  2035  00FFFA  75                 	db	117	;'u'
  2036  00FFFB  00                 	db	0
  2037  00FFFC                     STR_94:
  2038  00FFFC  7A                 	db	122	;'z'
  2039  00FFFD  78                 	db	120	;'x'
  2040  00FFFE  00                 	db	0
  2041  0000                     
  2042                           ; #config settings
  2043  00FFFF  00                 	db	0	; dummy byte at the end
  2044  0000                     
  2045                           	psect	nvCOMRAM
  2046  000049                     __pnvCOMRAM:
  2047                           	opt callstack 0
  2048  000049                     _ADC_InterruptHandler:
  2049                           	opt callstack 0
  2050  000049                     	ds	2
  2051  00004B                     _IOCB4_InterruptHandler:
  2052                           	opt callstack 0
  2053  00004B                     	ds	2
  2054  0000                     _IOCBbits	set	3930
  2055  0000                     _WPUB	set	3931
  2056  0000                     _ANCON1	set	3932
  2057  0000                     _ANCON0	set	3933
  2058  0000                     _ADCON0bits	set	4034
  2059  0000                     _ADRESL	set	4035
  2060  0000                     _ADRESH	set	4036
  2061  0000                     _ADCON2	set	4032
  2062  0000                     _ADCON1	set	4033
  2063  0000                     _ADCON0	set	4034
  2064  0000                     _LATEbits	set	3981
  2065  0000                     _SSPSTATbits	set	4039
  2066  0000                     _LATAbits	set	3977
  2067  0000                     _PORTBbits	set	3969
  2068  0000                     _SSPBUF	set	4041
  2069  0000                     _SSPCON2	set	4037
  2070  0000                     _SSPCON1bits	set	4038
  2071  0000                     _TRISCbits	set	3988
  2072  0000                     _SSPADD	set	4040
  2073  0000                     _SSPCON1	set	4038
  2074  0000                     _SSPSTAT	set	4039
  2075  0000                     _PIR1bits	set	3998
  2076  0000                     _PIE1bits	set	3997
  2077  0000                     _RCONbits	set	4048
  2078  0000                     _REFOCON	set	3994
  2079  0000                     _OSCTUNE	set	3995
  2080  0000                     _OSCCON2	set	4050
  2081  0000                     _OSCCON	set	4051
  2082  0000                     _INTCONbits	set	4082
  2083  0000                     _INTCON2bits	set	4081
  2084  0000                     _TRISD	set	3989
  2085  0000                     _TRISC	set	3988
  2086  0000                     _TRISB	set	3987
  2087  0000                     _TRISA	set	3986
  2088  0000                     _TRISE	set	3990
  2089  0000                     _LATC	set	3979
  2090  0000                     _LATB	set	3978
  2091  0000                     _LATA	set	3977
  2092  0000                     _LATD	set	3980
  2093  0000                     _LATE	set	3981
  2094                           
  2095                           	psect	cinit
  2096  00340A                     __pcinit:
  2097                           	opt callstack 0
  2098  00340A                     start_initialization:
  2099                           	opt callstack 0
  2100  00340A                     __initialization:
  2101                           	opt callstack 0
  2102                           
  2103                           ; Initialize objects allocated to BANK0 (7 bytes)
  2104                           ; load TBLPTR registers with __pidataBANK0
  2105  00340A  0ECC               	movlw	low __pidataBANK0
  2106  00340C  6EF6               	movwf	tblptrl,c
  2107  00340E  0E39               	movlw	high __pidataBANK0
  2108  003410  6EF7               	movwf	tblptrh,c
  2109  003412  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2110  003414  6EF8               	movwf	tblptru,c
  2111  003416  EE00  F0EB         	lfsr	0,__pdataBANK0
  2112  00341A  EE10 F007          	lfsr	1,7
  2113  00341E                     copy_data0:
  2114  00341E  0009               	tblrd		*+
  2115  003420  CFF5 FFEE          	movff	tablat,postinc0
  2116  003424  50E5               	movf	postdec1,w,c
  2117  003426  50E1               	movf	fsr1l,w,c
  2118  003428  E1FA               	bnz	copy_data0
  2119                           
  2120                           ; Clear objects allocated to BANK1 (100 bytes)
  2121  00342A  EE01  F000         	lfsr	0,__pbssBANK1
  2122  00342E  0E64               	movlw	100
  2123  003430                     clear_0:
  2124  003430  6AEE               	clrf	postinc0,c
  2125  003432  06E8               	decf	wreg,f,c
  2126  003434  E1FD               	bnz	clear_0
  2127                           
  2128                           ; Clear objects allocated to BANK0 (36 bytes)
  2129  003436  EE00  F0C7         	lfsr	0,__pbssBANK0
  2130  00343A  0E24               	movlw	36
  2131  00343C                     clear_1:
  2132  00343C  6AEE               	clrf	postinc0,c
  2133  00343E  06E8               	decf	wreg,f,c
  2134  003440  E1FD               	bnz	clear_1
  2135                           
  2136                           ; Clear objects allocated to COMRAM (12 bytes)
  2137  003442  EE00  F03D         	lfsr	0,__pbssCOMRAM
  2138  003446  0E0C               	movlw	12
  2139  003448                     clear_2:
  2140  003448  6AEE               	clrf	postinc0,c
  2141  00344A  06E8               	decf	wreg,f,c
  2142  00344C  E1FD               	bnz	clear_2
  2143  00344E                     end_of_initialization:
  2144                           	opt callstack 0
  2145  00344E                     __end_of__initialization:
  2146                           	opt callstack 0
  2147  00344E  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2148  003450  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2149  003452  0100               	movlb	0
  2150  003454  EFB5  F015         	goto	_main	;jump to C main() function
  2151                           
  2152                           	psect	bssCOMRAM
  2153  00003D                     __pbssCOMRAM:
  2154                           	opt callstack 0
  2155  00003D                     _nout:
  2156                           	opt callstack 0
  2157  00003D                     	ds	2
  2158  00003F                     _width:
  2159                           	opt callstack 0
  2160  00003F                     	ds	2
  2161  000041                     _prec:
  2162                           	opt callstack 0
  2163  000041                     	ds	2
  2164  000043                     _flags:
  2165                           	opt callstack 0
  2166  000043                     	ds	2
  2167  000045                     _global_bg_color:
  2168                           	opt callstack 0
  2169  000045                     	ds	2
  2170  000047                     _codigo_digital:
  2171                           	opt callstack 0
  2172  000047                     	ds	2
  2173                           
  2174                           	psect	bssBANK0
  2175  0000C7                     __pbssBANK0:
  2176                           	opt callstack 0
  2177  0000C7                     _errno:
  2178                           	opt callstack 0
  2179  0000C7                     	ds	2
  2180  0000C9                     _percentagem:
  2181                           	opt callstack 0
  2182  0000C9                     	ds	2
  2183  0000CB                     _dbuf:
  2184                           	opt callstack 0
  2185  0000CB                     	ds	32
  2186                           
  2187                           	psect	dataBANK0
  2188  0000EB                     __pdataBANK0:
  2189                           	opt callstack 0
  2190  0000EB                     stoa@F1152:
  2191                           	opt callstack 0
  2192  0000EB                     	ds	7
  2193                           
  2194                           	psect	bssBANK1
  2195  000100                     __pbssBANK1:
  2196                           	opt callstack 0
  2197  000100                     _string:
  2198                           	opt callstack 0
  2199  000100                     	ds	100
  2200                           
  2201                           	psect	cstackBANK0
  2202  000060                     __pcstackBANK0:
  2203                           	opt callstack 0
  2204  000060                     ??_lcd_draw_string:
  2205  000060                     ??_dtoa:
  2206  000060                     ??_otoa:
  2207  000060                     ??_utoa:
  2208  000060                     ??_xtoa:
  2209                           
  2210                           ; 1 bytes @ 0x0
  2211  000060                     	ds	4
  2212  000064                     lcd_draw_string@k:
  2213                           	opt callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x4
  2216  000064                     	ds	2
  2217  000066                     lcd_draw_string@lIndex:
  2218                           	opt callstack 0
  2219                           
  2220                           ; 2 bytes @ 0x6
  2221  000066                     	ds	2
  2222  000068                     _dtoa$1237:
  2223                           	opt callstack 0
  2224  000068                     otoa@p:
  2225                           	opt callstack 0
  2226  000068                     utoa@p:
  2227                           	opt callstack 0
  2228  000068                     _xtoa$1273:
  2229                           	opt callstack 0
  2230                           
  2231                           ; 2 bytes @ 0x8
  2232  000068                     	ds	2
  2233  00006A                     dtoa@p:
  2234                           	opt callstack 0
  2235  00006A                     otoa@t:
  2236                           	opt callstack 0
  2237  00006A                     utoa@w:
  2238                           	opt callstack 0
  2239  00006A                     _xtoa$1274:
  2240                           	opt callstack 0
  2241                           
  2242                           ; 2 bytes @ 0xA
  2243  00006A                     	ds	2
  2244  00006C                     dtoa@w:
  2245                           	opt callstack 0
  2246  00006C                     otoa@w:
  2247                           	opt callstack 0
  2248  00006C                     xtoa@p:
  2249                           	opt callstack 0
  2250  00006C                     utoa@n:
  2251                           	opt callstack 0
  2252                           
  2253                           ; 8 bytes @ 0xC
  2254  00006C                     	ds	2
  2255  00006E                     dtoa@s:
  2256                           	opt callstack 0
  2257  00006E                     xtoa@w:
  2258                           	opt callstack 0
  2259  00006E                     otoa@n:
  2260                           	opt callstack 0
  2261                           
  2262                           ; 8 bytes @ 0xE
  2263  00006E                     	ds	2
  2264  000070                     dtoa@n:
  2265                           	opt callstack 0
  2266  000070                     xtoa@n:
  2267                           	opt callstack 0
  2268                           
  2269                           ; 8 bytes @ 0x10
  2270  000070                     	ds	4
  2271  000074                     utoa@i:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 2 bytes @ 0x14
  2275  000074                     	ds	2
  2276  000076                     otoa@i:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 2 bytes @ 0x16
  2280  000076                     	ds	2
  2281  000078                     dtoa@i:
  2282                           	opt callstack 0
  2283  000078                     xtoa@i:
  2284                           	opt callstack 0
  2285                           
  2286                           ; 2 bytes @ 0x18
  2287  000078                     	ds	2
  2288  00007A                     xtoa@c:
  2289                           	opt callstack 0
  2290                           
  2291                           ; 2 bytes @ 0x1A
  2292  00007A                     	ds	2
  2293  00007C                     ?_vfpfcnvrt:
  2294                           	opt callstack 0
  2295  00007C                     vfpfcnvrt@fp:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 2 bytes @ 0x1C
  2299  00007C                     	ds	2
  2300  00007E                     vfpfcnvrt@fmt:
  2301                           	opt callstack 0
  2302                           
  2303                           ; 2 bytes @ 0x1E
  2304  00007E                     	ds	2
  2305  000080                     vfpfcnvrt@ap:
  2306                           	opt callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x20
  2309  000080                     	ds	2
  2310  000082                     vfpfcnvrt@cp:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x22
  2314  000082                     	ds	2
  2315  000084                     vfpfcnvrt@done:
  2316                           	opt callstack 0
  2317                           
  2318                           ; 2 bytes @ 0x24
  2319  000084                     	ds	2
  2320  000086                     _vfpfcnvrt$1288:
  2321                           	opt callstack 0
  2322                           
  2323                           ; 2 bytes @ 0x26
  2324  000086                     	ds	2
  2325  000088                     _vfpfcnvrt$1289:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x28
  2329  000088                     	ds	2
  2330  00008A                     vfpfcnvrt@ll:
  2331                           	opt callstack 0
  2332                           
  2333                           ; 8 bytes @ 0x2A
  2334  00008A                     	ds	8
  2335  000092                     vfpfcnvrt@vp:
  2336                           	opt callstack 0
  2337                           
  2338                           ; 2 bytes @ 0x32
  2339  000092                     	ds	2
  2340  000094                     vfpfcnvrt@c:
  2341                           	opt callstack 0
  2342                           
  2343                           ; 1 bytes @ 0x34
  2344  000094                     	ds	1
  2345  000095                     vfpfcnvrt@llu:
  2346                           	opt callstack 0
  2347                           
  2348                           ; 8 bytes @ 0x35
  2349  000095                     	ds	8
  2350  00009D                     ?_vfprintf:
  2351                           	opt callstack 0
  2352  00009D                     vfprintf@fp:
  2353                           	opt callstack 0
  2354                           
  2355                           ; 2 bytes @ 0x3D
  2356  00009D                     	ds	2
  2357  00009F                     vfprintf@fmt:
  2358                           	opt callstack 0
  2359                           
  2360                           ; 2 bytes @ 0x3F
  2361  00009F                     	ds	2
  2362  0000A1                     vfprintf@ap:
  2363                           	opt callstack 0
  2364                           
  2365                           ; 2 bytes @ 0x41
  2366  0000A1                     	ds	2
  2367  0000A3                     vfprintf@cfmt:
  2368                           	opt callstack 0
  2369                           
  2370                           ; 2 bytes @ 0x43
  2371  0000A3                     	ds	2
  2372  0000A5                     ?_vsnprintf:
  2373                           	opt callstack 0
  2374  0000A5                     vsnprintf@s:
  2375                           	opt callstack 0
  2376                           
  2377                           ; 2 bytes @ 0x45
  2378  0000A5                     	ds	2
  2379  0000A7                     vsnprintf@n:
  2380                           	opt callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x47
  2383  0000A7                     	ds	2
  2384  0000A9                     vsnprintf@fmt:
  2385                           	opt callstack 0
  2386                           
  2387                           ; 2 bytes @ 0x49
  2388  0000A9                     	ds	2
  2389  0000AB                     vsnprintf@ap:
  2390                           	opt callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x4B
  2393  0000AB                     	ds	2
  2394  0000AD                     ??_vsnprintf:
  2395                           
  2396                           ; 1 bytes @ 0x4D
  2397  0000AD                     	ds	4
  2398  0000B1                     _vsnprintf$1989:
  2399                           	opt callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x51
  2402  0000B1                     	ds	2
  2403  0000B3                     vsnprintf@cnt:
  2404                           	opt callstack 0
  2405                           
  2406                           ; 2 bytes @ 0x53
  2407  0000B3                     	ds	2
  2408  0000B5                     vsnprintf@f:
  2409                           	opt callstack 0
  2410                           
  2411                           ; 6 bytes @ 0x55
  2412  0000B5                     	ds	6
  2413  0000BB                     ?_snprintf:
  2414                           	opt callstack 0
  2415  0000BB                     snprintf@s:
  2416                           	opt callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x5B
  2419  0000BB                     	ds	2
  2420  0000BD                     snprintf@n:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x5D
  2424  0000BD                     	ds	2
  2425  0000BF                     snprintf@fmt:
  2426                           	opt callstack 0
  2427                           
  2428                           ; 2 bytes @ 0x5F
  2429  0000BF                     	ds	6
  2430  0000C5                     snprintf@ap:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x65
  2434  0000C5                     	ds	2
  2435                           
  2436                           	psect	cstackCOMRAM
  2437  000001                     __pcstackCOMRAM:
  2438                           	opt callstack 0
  2439  000001                     ??_ADC_GetConversion:
  2440  000001                     ?_ADC_GetConversionResult:
  2441                           	opt callstack 0
  2442  000001                     ?___awdiv:
  2443                           	opt callstack 0
  2444  000001                     ___awdiv@dividend:
  2445                           	opt callstack 0
  2446                           
  2447                           ; 2 bytes @ 0x0
  2448  000001                     	ds	1
  2449  000002                     ADC_GetConversion@channel:
  2450                           	opt callstack 0
  2451                           
  2452                           ; 1 bytes @ 0x1
  2453  000002                     	ds	1
  2454  000003                     ??_ADC_GetConversionResult:
  2455  000003                     ___awdiv@divisor:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x2
  2459  000003                     	ds	2
  2460  000005                     ??_acende_led:
  2461  000005                     ___awdiv@counter:
  2462                           	opt callstack 0
  2463                           
  2464                           ; 1 bytes @ 0x4
  2465  000005                     	ds	1
  2466  000006                     ___awdiv@sign:
  2467                           	opt callstack 0
  2468                           
  2469                           ; 1 bytes @ 0x5
  2470  000006                     	ds	1
  2471  000007                     ___awdiv@quotient:
  2472                           	opt callstack 0
  2473                           
  2474                           ; 2 bytes @ 0x6
  2475  000007                     	ds	2
  2476  000009                     ?i2___wmul:
  2477                           	opt callstack 0
  2478  000009                     i2___wmul@multiplier:
  2479                           	opt callstack 0
  2480                           
  2481                           ; 2 bytes @ 0x8
  2482  000009                     	ds	2
  2483  00000B                     i2___wmul@multiplicand:
  2484                           	opt callstack 0
  2485                           
  2486                           ; 2 bytes @ 0xA
  2487  00000B                     	ds	2
  2488  00000D                     i2___wmul@product:
  2489                           	opt callstack 0
  2490                           
  2491                           ; 2 bytes @ 0xC
  2492  00000D                     	ds	2
  2493  00000F                     ??_INTERRUPT_InterruptManager:
  2494  00000F                     
  2495                           ; 1 bytes @ 0xE
  2496  00000F                     	ds	4
  2497  000013                     ??_SPI_Open:
  2498  000013                     ??_msDelay:
  2499  000013                     ?_strlen:
  2500                           	opt callstack 0
  2501  000013                     ?_isupper:
  2502                           	opt callstack 0
  2503  000013                     ?_isalpha:
  2504                           	opt callstack 0
  2505  000013                     ?_isdigit:
  2506                           	opt callstack 0
  2507  000013                     ?_strncmp:
  2508                           	opt callstack 0
  2509  000013                     ?_isspace:
  2510                           	opt callstack 0
  2511  000013                     ?_islower:
  2512                           	opt callstack 0
  2513  000013                     ?___wmul:
  2514                           	opt callstack 0
  2515  000013                     ?___aodiv:
  2516                           	opt callstack 0
  2517  000013                     ?___aomod:
  2518                           	opt callstack 0
  2519  000013                     ?___lodiv:
  2520                           	opt callstack 0
  2521  000013                     ?___lomod:
  2522                           	opt callstack 0
  2523  000013                     SPI_ExchangeByte@data:
  2524                           	opt callstack 0
  2525  000013                     IOCB4_SetInterruptHandler@InterruptHandler:
  2526                           	opt callstack 0
  2527  000013                     ADC_SetInterruptHandler@InterruptHandler:
  2528                           	opt callstack 0
  2529  000013                     ___wmul@multiplier:
  2530                           	opt callstack 0
  2531  000013                     isalpha@c:
  2532                           	opt callstack 0
  2533  000013                     isdigit@c:
  2534                           	opt callstack 0
  2535  000013                     isspace@c:
  2536                           	opt callstack 0
  2537  000013                     isupper@c:
  2538                           	opt callstack 0
  2539  000013                     fputc@c:
  2540                           	opt callstack 0
  2541  000013                     strlen@s:
  2542                           	opt callstack 0
  2543  000013                     strncmp@_l:
  2544                           	opt callstack 0
  2545  000013                     islower@c:
  2546                           	opt callstack 0
  2547  000013                     ___aodiv@dividend:
  2548                           	opt callstack 0
  2549  000013                     ___aomod@dividend:
  2550                           	opt callstack 0
  2551  000013                     ___lodiv@dividend:
  2552                           	opt callstack 0
  2553  000013                     ___lomod@dividend:
  2554                           	opt callstack 0
  2555                           
  2556                           ; 8 bytes @ 0x12
  2557  000013                     	ds	1
  2558  000014                     SPI_Open@spiUniqueConfiguration:
  2559                           	opt callstack 0
  2560  000014                     msDelay@ms:
  2561                           	opt callstack 0
  2562  000014                     lcd_send@value:
  2563                           	opt callstack 0
  2564                           
  2565                           ; 1 bytes @ 0x13
  2566  000014                     	ds	1
  2567  000015                     ??_isupper:
  2568  000015                     ??_isalpha:
  2569  000015                     ??_isdigit:
  2570  000015                     ??_isspace:
  2571  000015                     ??_islower:
  2572  000015                     msDelay@k:
  2573                           	opt callstack 0
  2574  000015                     lcd_send@dc:
  2575                           	opt callstack 0
  2576  000015                     ___wmul@multiplicand:
  2577                           	opt callstack 0
  2578  000015                     fputc@fp:
  2579                           	opt callstack 0
  2580  000015                     strlen@a:
  2581                           	opt callstack 0
  2582  000015                     strncmp@_r:
  2583                           	opt callstack 0
  2584                           
  2585                           ; 2 bytes @ 0x14
  2586  000015                     	ds	1
  2587  000016                     lcd_set_cursor_x@x:
  2588                           	opt callstack 0
  2589  000016                     lcd_set_cursor_y@y:
  2590                           	opt callstack 0
  2591  000016                     lcd_draw_pixel@color:
  2592                           	opt callstack 0
  2593                           
  2594                           ; 2 bytes @ 0x15
  2595  000016                     	ds	1
  2596  000017                     ??_fputc:
  2597  000017                     ___wmul@product:
  2598                           	opt callstack 0
  2599  000017                     strncmp@n:
  2600                           	opt callstack 0
  2601                           
  2602                           ; 2 bytes @ 0x16
  2603  000017                     	ds	1
  2604  000018                     lcd_set_cursor@x:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x17
  2608  000018                     	ds	1
  2609  000019                     ??_strncmp:
  2610  000019                     ?_toupper:
  2611                           	opt callstack 0
  2612  000019                     _isspace$1877:
  2613                           	opt callstack 0
  2614  000019                     toupper@c:
  2615                           	opt callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x18
  2618  000019                     	ds	1
  2619  00001A                     ?_atoi:
  2620                           	opt callstack 0
  2621  00001A                     lcd_set_cursor@y:
  2622                           	opt callstack 0
  2623  00001A                     atoi@s:
  2624                           	opt callstack 0
  2625  00001A                     strncmp@l:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 2 bytes @ 0x19
  2629  00001A                     	ds	1
  2630  00001B                     ??_toupper:
  2631  00001B                     ___aodiv@divisor:
  2632                           	opt callstack 0
  2633  00001B                     ___aomod@divisor:
  2634                           	opt callstack 0
  2635  00001B                     ___lodiv@divisor:
  2636                           	opt callstack 0
  2637  00001B                     ___lomod@divisor:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 8 bytes @ 0x1A
  2641  00001B                     	ds	1
  2642  00001C                     ??_atoi:
  2643  00001C                     ?_stoa:
  2644                           	opt callstack 0
  2645  00001C                     lcd_fill@bg_color:
  2646                           	opt callstack 0
  2647  00001C                     lcd_draw_pixel_at@x:
  2648                           	opt callstack 0
  2649  00001C                     lcd_draw_char@x:
  2650                           	opt callstack 0
  2651  00001C                     stoa@fp:
  2652                           	opt callstack 0
  2653  00001C                     fputs@s:
  2654                           	opt callstack 0
  2655  00001C                     strncmp@r:
  2656                           	opt callstack 0
  2657                           
  2658                           ; 2 bytes @ 0x1B
  2659  00001C                     	ds	2
  2660  00001E                     lcd_fill@height:
  2661                           	opt callstack 0
  2662  00001E                     lcd_draw_pixel_at@y:
  2663                           	opt callstack 0
  2664  00001E                     lcd_draw_char@y:
  2665                           	opt callstack 0
  2666  00001E                     stoa@s:
  2667                           	opt callstack 0
  2668  00001E                     fputs@fp:
  2669                           	opt callstack 0
  2670                           
  2671                           ; 2 bytes @ 0x1D
  2672  00001E                     	ds	1
  2673  00001F                     _toupper$1957:
  2674                           	opt callstack 0
  2675                           
  2676                           ; 2 bytes @ 0x1E
  2677  00001F                     	ds	1
  2678  000020                     ??_stoa:
  2679  000020                     fputs@c:
  2680                           	opt callstack 0
  2681  000020                     lcd_fill@width:
  2682                           	opt callstack 0
  2683  000020                     lcd_draw_pixel_at@color:
  2684                           	opt callstack 0
  2685  000020                     lcd_draw_char@fIndex:
  2686                           	opt callstack 0
  2687  000020                     atoi@neg:
  2688                           	opt callstack 0
  2689                           
  2690                           ; 2 bytes @ 0x1F
  2691  000020                     	ds	1
  2692  000021                     fputs@i:
  2693                           	opt callstack 0
  2694  000021                     stoa@nuls:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 7 bytes @ 0x20
  2698  000021                     	ds	1
  2699  000022                     lcd_draw_line@x0:
  2700                           	opt callstack 0
  2701  000022                     lcd_draw_char@fg_color:
  2702                           	opt callstack 0
  2703  000022                     _atoi$1850:
  2704                           	opt callstack 0
  2705                           
  2706                           ; 2 bytes @ 0x21
  2707  000022                     	ds	1
  2708  000023                     ?_pad:
  2709                           	opt callstack 0
  2710  000023                     ___aodiv@counter:
  2711                           	opt callstack 0
  2712  000023                     ___aomod@counter:
  2713                           	opt callstack 0
  2714  000023                     ___lomod@counter:
  2715                           	opt callstack 0
  2716  000023                     pad@fp:
  2717                           	opt callstack 0
  2718  000023                     ___lodiv@quotient:
  2719                           	opt callstack 0
  2720                           
  2721                           ; 8 bytes @ 0x22
  2722  000023                     	ds	1
  2723  000024                     ___aodiv@sign:
  2724                           	opt callstack 0
  2725  000024                     ___aomod@sign:
  2726                           	opt callstack 0
  2727  000024                     lcd_draw_line@y0:
  2728                           	opt callstack 0
  2729  000024                     lcd_draw_char@bg_color:
  2730                           	opt callstack 0
  2731  000024                     _atoi$1852:
  2732                           	opt callstack 0
  2733                           
  2734                           ; 2 bytes @ 0x23
  2735  000024                     	ds	1
  2736  000025                     ?_abs:
  2737                           	opt callstack 0
  2738  000025                     pad@buf:
  2739                           	opt callstack 0
  2740  000025                     abs@a:
  2741                           	opt callstack 0
  2742  000025                     ___aodiv@quotient:
  2743                           	opt callstack 0
  2744                           
  2745                           ; 8 bytes @ 0x24
  2746  000025                     	ds	1
  2747  000026                     ??_lcd_draw_char:
  2748  000026                     _atoi$1851:
  2749                           	opt callstack 0
  2750  000026                     lcd_draw_line@x1:
  2751                           	opt callstack 0
  2752                           
  2753                           ; 2 bytes @ 0x25
  2754  000026                     	ds	1
  2755  000027                     ??_abs:
  2756  000027                     pad@p:
  2757                           	opt callstack 0
  2758  000027                     atoi@n:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x26
  2762  000027                     	ds	1
  2763  000028                     lcd_draw_line@y1:
  2764                           	opt callstack 0
  2765  000028                     stoa@i:
  2766                           	opt callstack 0
  2767                           
  2768                           ; 2 bytes @ 0x27
  2769  000028                     	ds	1
  2770  000029                     ??_pad:
  2771                           
  2772                           ; 1 bytes @ 0x28
  2773  000029                     	ds	1
  2774  00002A                     lcd_draw_line@color:
  2775                           	opt callstack 0
  2776  00002A                     pad@i:
  2777                           	opt callstack 0
  2778  00002A                     stoa@w:
  2779                           	opt callstack 0
  2780                           
  2781                           ; 2 bytes @ 0x29
  2782  00002A                     	ds	1
  2783  00002B                     ___lodiv@counter:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 1 bytes @ 0x2A
  2787  00002B                     	ds	1
  2788  00002C                     ??_lcd_draw_line:
  2789  00002C                     pad@w:
  2790                           	opt callstack 0
  2791  00002C                     stoa@cp:
  2792                           	opt callstack 0
  2793                           
  2794                           ; 2 bytes @ 0x2B
  2795  00002C                     	ds	1
  2796  00002D                     lcd_draw_line@sx:
  2797                           	opt callstack 0
  2798                           
  2799                           ; 2 bytes @ 0x2C
  2800  00002D                     	ds	1
  2801  00002E                     ?_ctoa:
  2802                           	opt callstack 0
  2803  00002E                     ?_dtoa:
  2804                           	opt callstack 0
  2805  00002E                     ?_otoa:
  2806                           	opt callstack 0
  2807  00002E                     ?_utoa:
  2808                           	opt callstack 0
  2809  00002E                     ?_xtoa:
  2810                           	opt callstack 0
  2811  00002E                     ctoa@fp:
  2812                           	opt callstack 0
  2813  00002E                     dtoa@fp:
  2814                           	opt callstack 0
  2815  00002E                     otoa@fp:
  2816                           	opt callstack 0
  2817  00002E                     stoa@p:
  2818                           	opt callstack 0
  2819  00002E                     utoa@fp:
  2820                           	opt callstack 0
  2821  00002E                     xtoa@fp:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 2 bytes @ 0x2D
  2825  00002E                     	ds	1
  2826  00002F                     lcd_draw_char@j:
  2827                           	opt callstack 0
  2828  00002F                     lcd_draw_line@sy:
  2829                           	opt callstack 0
  2830                           
  2831                           ; 2 bytes @ 0x2E
  2832  00002F                     	ds	1
  2833  000030                     lcd_draw_char@k:
  2834                           	opt callstack 0
  2835  000030                     ctoa@c:
  2836                           	opt callstack 0
  2837  000030                     stoa@l:
  2838                           	opt callstack 0
  2839  000030                     dtoa@d:
  2840                           	opt callstack 0
  2841  000030                     otoa@d:
  2842                           	opt callstack 0
  2843  000030                     utoa@d:
  2844                           	opt callstack 0
  2845  000030                     xtoa@d:
  2846                           	opt callstack 0
  2847                           
  2848                           ; 8 bytes @ 0x2F
  2849  000030                     	ds	1
  2850  000031                     lcd_draw_char@i:
  2851                           	opt callstack 0
  2852  000031                     lcd_draw_line@err:
  2853                           	opt callstack 0
  2854  000031                     ctoa@w:
  2855                           	opt callstack 0
  2856                           
  2857                           ; 2 bytes @ 0x30
  2858  000031                     	ds	1
  2859  000032                     lcd_draw_string@x:
  2860                           	opt callstack 0
  2861                           
  2862                           ; 2 bytes @ 0x31
  2863  000032                     	ds	1
  2864  000033                     lcd_draw_line@e2:
  2865                           	opt callstack 0
  2866                           
  2867                           ; 2 bytes @ 0x32
  2868  000033                     	ds	1
  2869  000034                     lcd_draw_string@y:
  2870                           	opt callstack 0
  2871                           
  2872                           ; 2 bytes @ 0x33
  2873  000034                     	ds	1
  2874  000035                     lcd_draw_line@dx:
  2875                           	opt callstack 0
  2876                           
  2877                           ; 2 bytes @ 0x34
  2878  000035                     	ds	1
  2879  000036                     lcd_draw_string@pS:
  2880                           	opt callstack 0
  2881                           
  2882                           ; 2 bytes @ 0x35
  2883  000036                     	ds	1
  2884  000037                     lcd_draw_line@dy:
  2885                           	opt callstack 0
  2886                           
  2887                           ; 2 bytes @ 0x36
  2888  000037                     	ds	1
  2889  000038                     xtoa@x:
  2890                           	opt callstack 0
  2891  000038                     lcd_draw_string@fg_color:
  2892                           	opt callstack 0
  2893                           
  2894                           ; 2 bytes @ 0x37
  2895  000038                     	ds	1
  2896  000039                     ??_vfpfcnvrt:
  2897                           
  2898                           ; 1 bytes @ 0x38
  2899  000039                     	ds	1
  2900  00003A                     lcd_draw_string@bg_color:
  2901                           	opt callstack 0
  2902                           
  2903                           ; 2 bytes @ 0x39
  2904  00003A                     	ds	3
  2905  00003D                     
  2906                           ; 1 bytes @ 0x3C
  2907 ;;
  2908 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2909 ;;
  2910 ;; *************** function _main *****************
  2911 ;; Defined at:
  2912 ;;		line 38 in file "main.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels required when called:   14
  2932 ;; This function calls:
  2933 ;;		_ADC_SetInterruptHandler
  2934 ;;		_IOCB4_SetInterruptHandler
  2935 ;;		_SPI_Open
  2936 ;;		_SYSTEM_Initialize
  2937 ;;		_lcd_draw_line
  2938 ;;		_lcd_draw_string
  2939 ;;		_lcd_init
  2940 ;;		_snprintf
  2941 ;; This function is called by:
  2942 ;;		Startup code after reset
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text0
  2947  002B6A                     __ptext0:
  2948                           	opt callstack 0
  2949  002B6A                     _main:
  2950                           	opt callstack 17
  2951  002B6A                     
  2952                           ;main.c: 41:     SYSTEM_Initialize();
  2953  002B6A  ECB5  F01C         	call	_SYSTEM_Initialize	;wreg free
  2954                           
  2955                           ;main.c: 47:     IOCB4_SetInterruptHandler(acende_led);
  2956  002B6E  0E2E               	movlw	low _acende_led
  2957  002B70  6E13               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  2958  002B72  0E35               	movlw	high _acende_led
  2959  002B74  6E14               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  2960  002B76  ECDC  F01C         	call	_IOCB4_SetInterruptHandler	;wreg free
  2961                           
  2962                           ;main.c: 49:     ADC_SetInterruptHandler(ADC_POT);
  2963  002B7A  0EB6               	movlw	low _ADC_POT
  2964  002B7C  6E13               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  2965  002B7E  0E37               	movlw	high _ADC_POT
  2966  002B80  6E14               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  2967  002B82  ECE1  F01C         	call	_ADC_SetInterruptHandler	;wreg free
  2968  002B86                     
  2969                           ;main.c: 51:     SPI_Open(SPI_DEFAULT);
  2970  002B86  0E00               	movlw	0
  2971  002B88  ECB5  F018         	call	_SPI_Open
  2972  002B8C                     
  2973                           ;main.c: 53:     lcd_init ();
  2974  002B8C  EC82  F009         	call	_lcd_init	;wreg free
  2975  002B90                     
  2976                           ;main.c: 57:     lcd_draw_line(40,150,280,150,0xFFE0);
  2977  002B90  0E00               	movlw	0
  2978  002B92  6E23               	movwf	(lcd_draw_line@x0+1)^0,c
  2979  002B94  0E28               	movlw	40
  2980  002B96  6E22               	movwf	lcd_draw_line@x0^0,c
  2981  002B98  0E00               	movlw	0
  2982  002B9A  6E25               	movwf	(lcd_draw_line@y0+1)^0,c
  2983  002B9C  0E96               	movlw	150
  2984  002B9E  6E24               	movwf	lcd_draw_line@y0^0,c
  2985  002BA0  0E01               	movlw	1
  2986  002BA2  6E27               	movwf	(lcd_draw_line@x1+1)^0,c
  2987  002BA4  0E18               	movlw	24
  2988  002BA6  6E26               	movwf	lcd_draw_line@x1^0,c
  2989  002BA8  0E00               	movlw	0
  2990  002BAA  6E29               	movwf	(lcd_draw_line@y1+1)^0,c
  2991  002BAC  0E96               	movlw	150
  2992  002BAE  6E28               	movwf	lcd_draw_line@y1^0,c
  2993  002BB0  0EFF               	movlw	255
  2994  002BB2  6E2B               	movwf	(lcd_draw_line@color+1)^0,c
  2995  002BB4  0EE0               	movlw	224
  2996  002BB6  6E2A               	movwf	lcd_draw_line@color^0,c
  2997  002BB8  EC2B  F013         	call	_lcd_draw_line	;wreg free
  2998  002BBC                     
  2999                           ;main.c: 59:     lcd_draw_string (45,155,"XC8 - Biblioteca - LCD - ILI9341",0x001F,0x000
      +                          0);
  3000  002BBC  0E00               	movlw	0
  3001  002BBE  6E33               	movwf	(lcd_draw_string@x+1)^0,c
  3002  002BC0  0E2D               	movlw	45
  3003  002BC2  6E32               	movwf	lcd_draw_string@x^0,c
  3004  002BC4  0E00               	movlw	0
  3005  002BC6  6E35               	movwf	(lcd_draw_string@y+1)^0,c
  3006  002BC8  0E9B               	movlw	155
  3007  002BCA  6E34               	movwf	lcd_draw_string@y^0,c
  3008  002BCC  0E91               	movlw	low STR_1
  3009  002BCE  6E36               	movwf	lcd_draw_string@pS^0,c
  3010  002BD0  0EFF               	movlw	high STR_1
  3011  002BD2  6E37               	movwf	(lcd_draw_string@pS+1)^0,c
  3012  002BD4  0E00               	movlw	0
  3013  002BD6  6E39               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3014  002BD8  0E1F               	movlw	31
  3015  002BDA  6E38               	movwf	lcd_draw_string@fg_color^0,c
  3016  002BDC  0E00               	movlw	0
  3017  002BDE  6E3B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3018  002BE0  0E00               	movlw	0
  3019  002BE2  6E3A               	movwf	lcd_draw_string@bg_color^0,c
  3020  002BE4  EC91  F014         	call	_lcd_draw_string	;wreg free
  3021  002BE8                     
  3022                           ;main.c: 61:     lcd_draw_string (120,120,"PIC - SEEV",0x0400,0x0000);
  3023  002BE8  0E00               	movlw	0
  3024  002BEA  6E33               	movwf	(lcd_draw_string@x+1)^0,c
  3025  002BEC  0E78               	movlw	120
  3026  002BEE  6E32               	movwf	lcd_draw_string@x^0,c
  3027  002BF0  0E00               	movlw	0
  3028  002BF2  6E35               	movwf	(lcd_draw_string@y+1)^0,c
  3029  002BF4  0E78               	movlw	120
  3030  002BF6  6E34               	movwf	lcd_draw_string@y^0,c
  3031  002BF8  0EC3               	movlw	low STR_2
  3032  002BFA  6E36               	movwf	lcd_draw_string@pS^0,c
  3033  002BFC  0EFF               	movlw	high STR_2
  3034  002BFE  6E37               	movwf	(lcd_draw_string@pS+1)^0,c
  3035  002C00  0E04               	movlw	4
  3036  002C02  6E39               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3037  002C04  0E00               	movlw	0
  3038  002C06  6E38               	movwf	lcd_draw_string@fg_color^0,c
  3039  002C08  0E00               	movlw	0
  3040  002C0A  6E3B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3041  002C0C  0E00               	movlw	0
  3042  002C0E  6E3A               	movwf	lcd_draw_string@bg_color^0,c
  3043  002C10  EC91  F014         	call	_lcd_draw_string	;wreg free
  3044  002C14                     
  3045                           ;main.c: 65:     (INTCONbits.GIE = 1);
  3046  002C14  8EF2               	bsf	242,7,c	;volatile
  3047  002C16                     l6089:
  3048                           
  3049                           ;main.c: 77:     {;main.c: 78:         snprintf(string,sizeof(string),"percentagem = %d"
      +                          ,percentagem);
  3050  002C16  0E00               	movlw	low _string
  3051  002C18  0100               	movlb	0	; () banked
  3052  002C1A  6FBB               	movwf	snprintf@s& (0+255),b
  3053  002C1C  0E01               	movlw	high _string
  3054  002C1E  6FBC               	movwf	(snprintf@s+1)& (0+255),b
  3055  002C20  0E00               	movlw	0
  3056  002C22  6FBE               	movwf	(snprintf@n+1)& (0+255),b
  3057  002C24  0E64               	movlw	100
  3058  002C26  6FBD               	movwf	snprintf@n& (0+255),b
  3059  002C28  0EB2               	movlw	low STR_3
  3060  002C2A  6FBF               	movwf	snprintf@fmt& (0+255),b
  3061  002C2C  0EFF               	movlw	high STR_3
  3062  002C2E  6FC0               	movwf	(snprintf@fmt+1)& (0+255),b
  3063  002C30  C0C9  F0C1         	movff	_percentagem,?_snprintf+6
  3064  002C34  C0CA  F0C2         	movff	_percentagem+1,?_snprintf+7
  3065  002C38  ECC3  F01B         	call	_snprintf	;wreg free
  3066  002C3C                     
  3067                           ;main.c: 79:         lcd_draw_string (120,80,string,0x0400,0x0000);
  3068  002C3C  0E00               	movlw	0
  3069  002C3E  6E33               	movwf	(lcd_draw_string@x+1)^0,c
  3070  002C40  0E78               	movlw	120
  3071  002C42  6E32               	movwf	lcd_draw_string@x^0,c
  3072  002C44  0E00               	movlw	0
  3073  002C46  6E35               	movwf	(lcd_draw_string@y+1)^0,c
  3074  002C48  0E50               	movlw	80
  3075  002C4A  6E34               	movwf	lcd_draw_string@y^0,c
  3076  002C4C  0E00               	movlw	low _string
  3077  002C4E  6E36               	movwf	lcd_draw_string@pS^0,c
  3078  002C50  0E01               	movlw	high _string
  3079  002C52  6E37               	movwf	(lcd_draw_string@pS+1)^0,c
  3080  002C54  0E04               	movlw	4
  3081  002C56  6E39               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3082  002C58  0E00               	movlw	0
  3083  002C5A  6E38               	movwf	lcd_draw_string@fg_color^0,c
  3084  002C5C  0E00               	movlw	0
  3085  002C5E  6E3B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3086  002C60  0E00               	movlw	0
  3087  002C62  6E3A               	movwf	lcd_draw_string@bg_color^0,c
  3088  002C64  EC91  F014         	call	_lcd_draw_string	;wreg free
  3089  002C68  EF0B  F016         	goto	l6089
  3090  002C6C  EF42  F000         	goto	start
  3091  002C70                     __end_of_main:
  3092                           	opt callstack 0
  3093                           
  3094 ;; *************** function _snprintf *****************
  3095 ;; Defined at:
  3096 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  s               2   91[BANK0 ] PTR unsigned char 
  3099 ;;		 -> string(100), 
  3100 ;;  n               2   93[BANK0 ] unsigned int 
  3101 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
  3102 ;;		 -> STR_3(17), 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  ap              2  101[BANK0 ] PTR void [1]
  3105 ;;		 -> ?_snprintf(2), 
  3106 ;;  ret             2    0        int 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  2   91[BANK0 ] int 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3116 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3117 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3119 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;Total ram usage:       12 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:   13
  3123 ;; This function calls:
  3124 ;;		_vsnprintf
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text1
  3131  003786                     __ptext1:
  3132                           	opt callstack 0
  3133  003786                     _snprintf:
  3134                           	opt callstack 17
  3135  003786  0EC1               	movlw	low (?_snprintf+6)
  3136  003788  0100               	movlb	0	; () banked
  3137  00378A  6FC5               	movwf	snprintf@ap& (0+255),b
  3138  00378C  0E00               	movlw	high (?_snprintf+6)
  3139  00378E  6FC6               	movwf	(snprintf@ap+1)& (0+255),b
  3140  003790                     
  3141                           ; BSR set to: 0
  3142  003790  C0BB  F0A5         	movff	snprintf@s,vsnprintf@s
  3143  003794  C0BC  F0A6         	movff	snprintf@s+1,vsnprintf@s+1
  3144  003798  C0BD  F0A7         	movff	snprintf@n,vsnprintf@n
  3145  00379C  C0BE  F0A8         	movff	snprintf@n+1,vsnprintf@n+1
  3146  0037A0  C0BF  F0A9         	movff	snprintf@fmt,vsnprintf@fmt
  3147  0037A4  C0C0  F0AA         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3148  0037A8  0EC5               	movlw	low snprintf@ap
  3149  0037AA  6FAB               	movwf	vsnprintf@ap& (0+255),b
  3150  0037AC  0E00               	movlw	high snprintf@ap
  3151  0037AE  6FAC               	movwf	(vsnprintf@ap+1)& (0+255),b
  3152  0037B0  EC2D  F015         	call	_vsnprintf	;wreg free
  3153  0037B4  0012               	return		;funcret
  3154  0037B6                     __end_of_snprintf:
  3155                           	opt callstack 0
  3156                           
  3157 ;; *************** function _vsnprintf *****************
  3158 ;; Defined at:
  3159 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  s               2   69[BANK0 ] PTR unsigned char 
  3162 ;;		 -> string(100), 
  3163 ;;  n               2   71[BANK0 ] unsigned int 
  3164 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
  3165 ;;		 -> STR_3(17), 
  3166 ;;  ap              2   75[BANK0 ] PTR PTR void 
  3167 ;;		 -> snprintf@ap(2), 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  f               6   85[BANK0 ] struct _IO_FILE
  3170 ;;  cnt             2   83[BANK0 ] int 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  2   69[BANK0 ] int 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3180 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;Total ram usage:       22 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:   12
  3187 ;; This function calls:
  3188 ;;		_vfprintf
  3189 ;; This function is called by:
  3190 ;;		_snprintf
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text2
  3195  002A5A                     __ptext2:
  3196                           	opt callstack 0
  3197  002A5A                     _vsnprintf:
  3198                           	opt callstack 17
  3199  002A5A  0E80               	movlw	128
  3200  002A5C  0100               	movlb	0	; () banked
  3201  002A5E  5DA8               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3202  002A60  A0D8               	btfss	status,0,c
  3203  002A62  EF35  F015         	goto	u6311
  3204  002A66  EF37  F015         	goto	u6310
  3205  002A6A                     u6311:
  3206  002A6A  EF3F  F015         	goto	l5793
  3207  002A6E                     u6310:
  3208  002A6E                     
  3209                           ; BSR set to: 0
  3210  002A6E  0E00               	movlw	0
  3211  002A70  6FC8               	movwf	(_errno+1)& (0+255),b
  3212  002A72  0E4B               	movlw	75
  3213  002A74  6FC7               	movwf	_errno& (0+255),b
  3214  002A76                     
  3215                           ; BSR set to: 0
  3216  002A76  69A5               	setf	?_vsnprintf& (0+255),b
  3217  002A78  69A6               	setf	(?_vsnprintf+1)& (0+255),b
  3218  002A7A  EFB4  F015         	goto	l1468
  3219  002A7E                     l5793:
  3220                           
  3221                           ; BSR set to: 0
  3222  002A7E  C0A5  F0B5         	movff	vsnprintf@s,vsnprintf@f
  3223  002A82  C0A6  F0B6         	movff	vsnprintf@s+1,vsnprintf@f+1
  3224  002A86  51A8               	movf	(vsnprintf@n+1)& (0+255),w,b
  3225  002A88  E109               	bnz	u6320
  3226  002A8A  0E02               	movlw	2
  3227  002A8C  5DA7               	subwf	vsnprintf@n& (0+255),w,b
  3228  002A8E  A0D8               	btfss	status,0,c
  3229  002A90  EF4C  F015         	goto	u6321
  3230  002A94  EF4E  F015         	goto	u6320
  3231  002A98                     u6321:
  3232  002A98  EF5A  F015         	goto	l5799
  3233  002A9C                     u6320:
  3234  002A9C                     
  3235                           ; BSR set to: 0
  3236  002A9C  0EFF               	movlw	255
  3237  002A9E  25A7               	addwf	vsnprintf@n& (0+255),w,b
  3238  002AA0  6FB9               	movwf	(vsnprintf@f+4)& (0+255),b
  3239  002AA2  0EFF               	movlw	255
  3240  002AA4  21A8               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3241  002AA6  6FBA               	movwf	(vsnprintf@f+5)& (0+255),b
  3242  002AA8                     
  3243                           ; BSR set to: 0
  3244  002AA8  0E00               	movlw	0
  3245  002AAA  6FB8               	movwf	(vsnprintf@f+3)& (0+255),b
  3246  002AAC  0E00               	movlw	0
  3247  002AAE  6FB7               	movwf	(vsnprintf@f+2)& (0+255),b
  3248  002AB0  EF62  F015         	goto	l5801
  3249  002AB4                     l5799:
  3250                           
  3251                           ; BSR set to: 0
  3252  002AB4  0E00               	movlw	0
  3253  002AB6  6FBA               	movwf	(vsnprintf@f+5)& (0+255),b
  3254  002AB8  0E01               	movlw	1
  3255  002ABA  6FB9               	movwf	(vsnprintf@f+4)& (0+255),b
  3256  002ABC  0E00               	movlw	0
  3257  002ABE  6FB8               	movwf	(vsnprintf@f+3)& (0+255),b
  3258  002AC0  0E01               	movlw	1
  3259  002AC2  6FB7               	movwf	(vsnprintf@f+2)& (0+255),b
  3260  002AC4                     l5801:
  3261                           
  3262                           ; BSR set to: 0
  3263  002AC4  0EB5               	movlw	low vsnprintf@f
  3264  002AC6  6F9D               	movwf	vfprintf@fp& (0+255),b
  3265  002AC8  0E00               	movlw	high vsnprintf@f
  3266  002ACA  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  3267  002ACC  C0A9  F09F         	movff	vsnprintf@fmt,vfprintf@fmt
  3268  002AD0  C0AA  F0A0         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3269  002AD4  C0AB  F0A1         	movff	vsnprintf@ap,vfprintf@ap
  3270  002AD8  C0AC  F0A2         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3271  002ADC  EC4E  F019         	call	_vfprintf	;wreg free
  3272  002AE0  C09D  F0B3         	movff	?_vfprintf,vsnprintf@cnt
  3273  002AE4  C09E  F0B4         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3274  002AE8  0100               	movlb	0	; () banked
  3275  002AEA  51A7               	movf	vsnprintf@n& (0+255),w,b
  3276  002AEC  11A8               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3277  002AEE  B4D8               	btfsc	status,2,c
  3278  002AF0  EF7C  F015         	goto	u6331
  3279  002AF4  EF7E  F015         	goto	u6330
  3280  002AF8                     u6331:
  3281  002AF8  EFB0  F015         	goto	l5813
  3282  002AFC                     u6330:
  3283  002AFC                     
  3284                           ; BSR set to: 0
  3285  002AFC  BFB4               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3286  002AFE  EF83  F015         	goto	u6341
  3287  002B02  EF85  F015         	goto	u6340
  3288  002B06                     u6341:
  3289  002B06  EFB0  F015         	goto	l5813
  3290  002B0A                     u6340:
  3291  002B0A                     
  3292                           ; BSR set to: 0
  3293  002B0A  0EFF               	movlw	255
  3294  002B0C  6FAD               	movwf	??_vsnprintf& (0+255),b
  3295  002B0E  0EFF               	movlw	255
  3296  002B10  6FAE               	movwf	(??_vsnprintf+1)& (0+255),b
  3297  002B12  C0A7  F0AF         	movff	vsnprintf@n,??_vsnprintf+2
  3298  002B16  C0A8  F0B0         	movff	vsnprintf@n+1,??_vsnprintf+3
  3299  002B1A  51AD               	movf	??_vsnprintf& (0+255),w,b
  3300  002B1C  27AF               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3301  002B1E  51AE               	movf	(??_vsnprintf+1)& (0+255),w,b
  3302  002B20  23B0               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3303  002B22  51AF               	movf	(??_vsnprintf+2)& (0+255),w,b
  3304  002B24  5DB3               	subwf	vsnprintf@cnt& (0+255),w,b
  3305  002B26  51B0               	movf	(??_vsnprintf+3)& (0+255),w,b
  3306  002B28  59B4               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3307  002B2A  A0D8               	btfss	status,0,c
  3308  002B2C  EF9A  F015         	goto	u6351
  3309  002B30  EF9C  F015         	goto	u6350
  3310  002B34                     u6351:
  3311  002B34  EFA4  F015         	goto	l1473
  3312  002B38                     u6350:
  3313  002B38                     
  3314                           ; BSR set to: 0
  3315  002B38  0EFF               	movlw	255
  3316  002B3A  25A7               	addwf	vsnprintf@n& (0+255),w,b
  3317  002B3C  6FB1               	movwf	_vsnprintf$1989& (0+255),b
  3318  002B3E  0EFF               	movlw	255
  3319  002B40  21A8               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3320  002B42  6FB2               	movwf	(_vsnprintf$1989+1)& (0+255),b
  3321  002B44  EFA8  F015         	goto	l5811
  3322  002B48                     l1473:
  3323                           
  3324                           ; BSR set to: 0
  3325  002B48  C0B3  F0B1         	movff	vsnprintf@cnt,_vsnprintf$1989
  3326  002B4C  C0B4  F0B2         	movff	vsnprintf@cnt+1,_vsnprintf$1989+1
  3327  002B50                     l5811:
  3328                           
  3329                           ; BSR set to: 0
  3330  002B50  51B1               	movf	_vsnprintf$1989& (0+255),w,b
  3331  002B52  25A5               	addwf	vsnprintf@s& (0+255),w,b
  3332  002B54  6ED9               	movwf	fsr2l,c
  3333  002B56  51B2               	movf	(_vsnprintf$1989+1)& (0+255),w,b
  3334  002B58  21A6               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3335  002B5A  6EDA               	movwf	fsr2h,c
  3336  002B5C  0E00               	movlw	0
  3337  002B5E  6EDF               	movwf	indf2,c
  3338  002B60                     l5813:
  3339                           
  3340                           ; BSR set to: 0
  3341  002B60  C0B3  F0A5         	movff	vsnprintf@cnt,?_vsnprintf
  3342  002B64  C0B4  F0A6         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3343  002B68                     l1468:
  3344                           
  3345                           ; BSR set to: 0
  3346  002B68  0012               	return		;funcret
  3347  002B6A                     __end_of_vsnprintf:
  3348                           	opt callstack 0
  3349                           
  3350 ;; *************** function _vfprintf *****************
  3351 ;; Defined at:
  3352 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  3355 ;;		 -> vsnprintf@f(6), 
  3356 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  3357 ;;		 -> STR_3(17), 
  3358 ;;  ap              2   65[BANK0 ] PTR PTR void 
  3359 ;;		 -> snprintf@ap(2), 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  cfmt            2   67[BANK0 ] PTR unsigned char 
  3362 ;;		 -> STR_3(17), 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2   61[BANK0 ] int 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3372 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;Total ram usage:        8 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:   11
  3379 ;; This function calls:
  3380 ;;		_vfpfcnvrt
  3381 ;; This function is called by:
  3382 ;;		_vsnprintf
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text3
  3387  00329C                     __ptext3:
  3388                           	opt callstack 0
  3389  00329C                     _vfprintf:
  3390                           	opt callstack 17
  3391  00329C                     
  3392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3393  00329C  C09F  F0A3         	movff	vfprintf@fmt,vfprintf@cfmt
  3394  0032A0  C0A0  F0A4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3395  0032A4                     
  3396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3397  0032A4  0E00               	movlw	0
  3398  0032A6  6E3E               	movwf	(_nout+1)^0,c
  3399  0032A8  0E00               	movlw	0
  3400  0032AA  6E3D               	movwf	_nout^0,c
  3401                           
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3403  0032AC  EF6C  F019         	goto	l5731
  3404  0032B0                     l5729:
  3405                           
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3407  0032B0  C09D  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3408  0032B4  C09E  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3409  0032B8  0EA3               	movlw	low vfprintf@cfmt
  3410  0032BA  0100               	movlb	0	; () banked
  3411  0032BC  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  3412  0032BE  0E00               	movlw	high vfprintf@cfmt
  3413  0032C0  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3414  0032C2  C0A1  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  3415  0032C6  C0A2  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3416  0032CA  EC44  F000         	call	_vfpfcnvrt	;wreg free
  3417  0032CE  0100               	movlb	0	; () banked
  3418  0032D0  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  3419  0032D2  263D               	addwf	_nout^0,f,c
  3420  0032D4  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3421  0032D6  223E               	addwfc	(_nout+1)^0,f,c
  3422  0032D8                     l5731:
  3423                           
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3425  0032D8  C0A3  FFF6         	movff	vfprintf@cfmt,tblptrl
  3426  0032DC  C0A4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3427  0032E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3428  0032E0  6AF8               	clrf	tblptru,c
  3429  0032E2                     	endif
  3430  0032E2                     	if	0	;tblptru may be non-zero
  3431  0032E2                     	endif
  3432  0032E2  0008               	tblrd		*
  3433  0032E4  50F5               	movf	tablat,w,c
  3434  0032E6  0900               	iorlw	0
  3435  0032E8  A4D8               	btfss	status,2,c
  3436  0032EA  EF79  F019         	goto	u6211
  3437  0032EE  EF7B  F019         	goto	u6210
  3438  0032F2                     u6211:
  3439  0032F2  EF58  F019         	goto	l5729
  3440  0032F6                     u6210:
  3441  0032F6                     
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3443  0032F6  C03D  F09D         	movff	_nout,?_vfprintf
  3444  0032FA  C03E  F09E         	movff	_nout+1,?_vfprintf+1
  3445  0032FE  0012               	return		;funcret
  3446  003300                     __end_of_vfprintf:
  3447                           	opt callstack 0
  3448                           
  3449 ;; *************** function _vfpfcnvrt *****************
  3450 ;; Defined at:
  3451 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  3454 ;;		 -> vsnprintf@f(6), 
  3455 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  3456 ;;		 -> vfprintf@cfmt(2), 
  3457 ;;  ap              2   32[BANK0 ] PTR PTR void 
  3458 ;;		 -> snprintf@ap(2), 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  llu             8   53[BANK0 ] unsigned long long 
  3461 ;;  ll              8   42[BANK0 ] long long 
  3462 ;;  f               4    0        long long 
  3463 ;;  ct              3    0        unsigned char [3]
  3464 ;;  vp              2   50[BANK0 ] PTR void 
  3465 ;;		 -> ?_snprintf(2), codigo_digital(2), 
  3466 ;;  done            2   36[BANK0 ] int 
  3467 ;;  cp              2   34[BANK0 ] PTR unsigned char 
  3468 ;;		 -> ?_snprintf(2), codigo_digital(2), 
  3469 ;;  i               2    0        int 
  3470 ;;  c               1   52[BANK0 ] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2   28[BANK0 ] int 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3480 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3483 ;;      Totals:         4      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3484 ;;Total ram usage:       37 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:   10
  3487 ;; This function calls:
  3488 ;;		_atoi
  3489 ;;		_ctoa
  3490 ;;		_dtoa
  3491 ;;		_fputc
  3492 ;;		_isdigit
  3493 ;;		_otoa
  3494 ;;		_stoa
  3495 ;;		_strncmp
  3496 ;;		_utoa
  3497 ;;		_xtoa
  3498 ;; This function is called by:
  3499 ;;		_vfprintf
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text4
  3504  000088                     __ptext4:
  3505                           	opt callstack 0
  3506  000088                     _vfpfcnvrt:
  3507                           	opt callstack 17
  3508  000088                     
  3509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3510  000088  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3511  00008C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3512  000090  CFDE FFF6          	movff	postinc2,tblptrl
  3513  000094  CFDD FFF7          	movff	postdec2,tblptrh
  3514  000098                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3515  000098  6AF8               	clrf	tblptru,c
  3516  00009A                     	endif
  3517  00009A                     	if	0	;tblptru may be non-zero
  3518  00009A                     	endif
  3519  00009A  0008               	tblrd		*
  3520  00009C  50F5               	movf	tablat,w,c
  3521  00009E  0A25               	xorlw	37
  3522  0000A0  A4D8               	btfss	status,2,c
  3523  0000A2  EF55  F000         	goto	u5741
  3524  0000A6  EF57  F000         	goto	u5740
  3525  0000AA                     u5741:
  3526  0000AA  EF65  F009         	goto	l5691
  3527  0000AE                     u5740:
  3528  0000AE                     
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3530  0000AE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3531  0000B2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3532  0000B6  2ADE               	incf	postinc2,f,c
  3533  0000B8  0E00               	movlw	0
  3534  0000BA  22DD               	addwfc	postdec2,f,c
  3535  0000BC                     
  3536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3537  0000BC  0E00               	movlw	0
  3538  0000BE  6E40               	movwf	(_width+1)^0,c
  3539  0000C0  0E00               	movlw	0
  3540  0000C2  6E3F               	movwf	_width^0,c
  3541  0000C4  C03F  F043         	movff	_width,_flags
  3542  0000C8  C040  F044         	movff	_width+1,_flags+1
  3543  0000CC                     
  3544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3545  0000CC  6841               	setf	_prec^0,c
  3546  0000CE  6842               	setf	(_prec+1)^0,c
  3547  0000D0                     
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3549  0000D0  0E00               	movlw	0
  3550  0000D2  0100               	movlb	0	; () banked
  3551  0000D4  6F85               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3552  0000D6  0E00               	movlw	0
  3553  0000D8  6F84               	movwf	vfpfcnvrt@done& (0+255),b
  3554                           
  3555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3556  0000DA  EFB6  F000         	goto	l5409
  3557  0000DE                     l5383:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3561  0000DE  8043               	bsf	_flags^0,0,c
  3562  0000E0                     l5385:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3566  0000E0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3567  0000E4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3568  0000E8  2ADE               	incf	postinc2,f,c
  3569  0000EA  0E00               	movlw	0
  3570  0000EC  22DD               	addwfc	postdec2,f,c
  3571                           
  3572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3573  0000EE  EFB6  F000         	goto	l5409
  3574  0000F2                     l5387:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3578  0000F2  8243               	bsf	_flags^0,1,c
  3579  0000F4  EF70  F000         	goto	l5385
  3580  0000F8                     l5391:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3584  0000F8  8443               	bsf	_flags^0,2,c
  3585  0000FA  EF70  F000         	goto	l5385
  3586  0000FE                     l5395:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3590  0000FE  8643               	bsf	_flags^0,3,c
  3591  000100  EF70  F000         	goto	l5385
  3592  000104                     l5399:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3596  000104  8843               	bsf	_flags^0,4,c
  3597  000106  EF70  F000         	goto	l5385
  3598  00010A                     l5403:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3602  00010A  0E00               	movlw	0
  3603  00010C  6F85               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3604  00010E  0E01               	movlw	1
  3605  000110  6F84               	movwf	vfpfcnvrt@done& (0+255),b
  3606                           
  3607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3608  000112  EFB6  F000         	goto	l5409
  3609  000116                     l5407:
  3610                           
  3611                           ; BSR set to: 0
  3612  000116  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3613  00011A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3614  00011E  CFDE FFF6          	movff	postinc2,tblptrl
  3615  000122  CFDD FFF7          	movff	postdec2,tblptrh
  3616  000126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3617  000126  6AF8               	clrf	tblptru,c
  3618  000128                     	endif
  3619  000128                     	if	0	;tblptru may be non-zero
  3620  000128                     	endif
  3621  000128  0008               	tblrd		*
  3622  00012A  50F5               	movf	tablat,w,c
  3623  00012C  6E39               	movwf	??_vfpfcnvrt^0,c
  3624  00012E  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  3625                           
  3626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3627                           ; Switch size 1, requested type "simple"
  3628                           ; Number of cases is 1, Range of values is 0 to 0
  3629                           ; switch strategies available:
  3630                           ; Name         Instructions Cycles
  3631                           ; simple_byte            4     3 (average)
  3632                           ;	Chosen strategy is simple_byte
  3633  000130  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3634  000132  0A00               	xorlw	0	; case 0
  3635  000134  B4D8               	btfsc	status,2,c
  3636  000136  EF9F  F000         	goto	l6267
  3637  00013A  EF85  F000         	goto	l5403
  3638  00013E                     l6267:
  3639                           
  3640                           ; BSR set to: 0
  3641                           ; Switch size 1, requested type "simple"
  3642                           ; Number of cases is 5, Range of values is 32 to 48
  3643                           ; switch strategies available:
  3644                           ; Name         Instructions Cycles
  3645                           ; simple_byte           16     9 (average)
  3646                           ;	Chosen strategy is simple_byte
  3647  00013E  5039               	movf	??_vfpfcnvrt^0,w,c
  3648  000140  0A20               	xorlw	32	; case 32
  3649  000142  B4D8               	btfsc	status,2,c
  3650  000144  EF7F  F000         	goto	l5395
  3651  000148  0A03               	xorlw	3	; case 35
  3652  00014A  B4D8               	btfsc	status,2,c
  3653  00014C  EF82  F000         	goto	l5399
  3654  000150  0A08               	xorlw	8	; case 43
  3655  000152  B4D8               	btfsc	status,2,c
  3656  000154  EF7C  F000         	goto	l5391
  3657  000158  0A06               	xorlw	6	; case 45
  3658  00015A  B4D8               	btfsc	status,2,c
  3659  00015C  EF6F  F000         	goto	l5383
  3660  000160  0A1D               	xorlw	29	; case 48
  3661  000162  B4D8               	btfsc	status,2,c
  3662  000164  EF79  F000         	goto	l5387
  3663  000168  EF85  F000         	goto	l5403
  3664  00016C                     l5409:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3668  00016C  5184               	movf	vfpfcnvrt@done& (0+255),w,b
  3669  00016E  1185               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3670  000170  B4D8               	btfsc	status,2,c
  3671  000172  EFBD  F000         	goto	u5751
  3672  000176  EFBF  F000         	goto	u5750
  3673  00017A                     u5751:
  3674  00017A  EF8B  F000         	goto	l5407
  3675  00017E                     u5750:
  3676  00017E                     
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3679  00017E  A043               	btfss	_flags^0,0,c
  3680  000180  EFC4  F000         	goto	u5761
  3681  000184  EFC6  F000         	goto	u5760
  3682  000188                     u5761:
  3683  000188  EFC7  F000         	goto	l5413
  3684  00018C                     u5760:
  3685  00018C                     
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3688  00018C  9243               	bcf	_flags^0,1,c
  3689  00018E                     l5413:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3693  00018E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3694  000192  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3695  000196  CFDE FFF6          	movff	postinc2,tblptrl
  3696  00019A  CFDD FFF7          	movff	postdec2,tblptrh
  3697  00019E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3698  00019E  6AF8               	clrf	tblptru,c
  3699  0001A0                     	endif
  3700  0001A0                     	if	0	;tblptru may be non-zero
  3701  0001A0                     	endif
  3702  0001A0  0008               	tblrd		*
  3703  0001A2  50F5               	movf	tablat,w,c
  3704  0001A4  0A2A               	xorlw	42
  3705  0001A6  A4D8               	btfss	status,2,c
  3706  0001A8  EFD8  F000         	goto	u5771
  3707  0001AC  EFDA  F000         	goto	u5770
  3708  0001B0                     u5771:
  3709  0001B0  EF03  F001         	goto	l5421
  3710  0001B4                     u5770:
  3711  0001B4                     
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3714  0001B4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3715  0001B8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3716  0001BC  2ADE               	incf	postinc2,f,c
  3717  0001BE  0E00               	movlw	0
  3718  0001C0  22DD               	addwfc	postdec2,f,c
  3719                           
  3720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3721  0001C2  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3722  0001C6  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3723  0001CA  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3724  0001CE  0E02               	movlw	2
  3725  0001D0  26DE               	addwf	postinc2,f,c
  3726  0001D2  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  3727  0001D6  0E00               	movlw	0
  3728  0001D8  22DD               	addwfc	postdec2,f,c
  3729  0001DA  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3730  0001DE  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3731  0001E2  CFDE F03F          	movff	postinc2,_width
  3732  0001E6  CFDD F040          	movff	postdec2,_width+1
  3733  0001EA                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3736  0001EA  BE40               	btfsc	(_width+1)^0,7,c
  3737  0001EC  EFFC  F000         	goto	u5780
  3738  0001F0  EFFA  F000         	goto	u5781
  3739  0001F4                     u5781:
  3740  0001F4  EF48  F001         	goto	l5431
  3741  0001F8                     u5780:
  3742  0001F8                     
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3745  0001F8  8043               	bsf	_flags^0,0,c
  3746                           
  3747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3748  0001FA  6C3F               	negf	_width^0,c
  3749  0001FC  1E40               	comf	(_width+1)^0,f,c
  3750  0001FE  B0D8               	btfsc	status,0,c
  3751  000200  2A40               	incf	(_width+1)^0,f,c
  3752  000202  EF48  F001         	goto	l5431
  3753  000206                     l5421:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3757  000206  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3758  00020A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3759  00020E  CFDE F01A          	movff	postinc2,atoi@s
  3760  000212  CFDD F01B          	movff	postdec2,atoi@s+1
  3761  000216  EC1C  F010         	call	_atoi	;wreg free
  3762  00021A  C01A  F03F         	movff	?_atoi,_width
  3763  00021E  C01B  F040         	movff	?_atoi+1,_width+1
  3764                           
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3766  000222  EF1A  F001         	goto	l5425
  3767  000226                     l5423:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3771  000226  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3772  00022A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3773  00022E  2ADE               	incf	postinc2,f,c
  3774  000230  0E00               	movlw	0
  3775  000232  22DD               	addwfc	postdec2,f,c
  3776  000234                     l5425:
  3777  000234  0ED0               	movlw	208
  3778  000236  6E39               	movwf	??_vfpfcnvrt^0,c
  3779  000238  0EFF               	movlw	255
  3780  00023A  6E3A               	movwf	(??_vfpfcnvrt+1)^0,c
  3781  00023C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3782  000240  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3783  000244  CFDE FFF6          	movff	postinc2,tblptrl
  3784  000248  CFDD FFF7          	movff	postdec2,tblptrh
  3785  00024C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3786  00024C  6AF8               	clrf	tblptru,c
  3787  00024E                     	endif
  3788  00024E                     	if	0	;tblptru may be non-zero
  3789  00024E                     	endif
  3790  00024E  0008               	tblrd		*
  3791  000250  50F5               	movf	tablat,w,c
  3792  000252  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  3793  000254  6A3C               	clrf	(??_vfpfcnvrt+3)^0,c
  3794  000256  5039               	movf	??_vfpfcnvrt^0,w,c
  3795  000258  263B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3796  00025A  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3797  00025C  223C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3798  00025E  503C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3799  000260  E10A               	bnz	u5790
  3800  000262  0E0A               	movlw	10
  3801  000264  5C3B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3802  000266  A0D8               	btfss	status,0,c
  3803  000268  EF38  F001         	goto	u5791
  3804  00026C  EF3B  F001         	goto	u5790
  3805  000270                     u5791:
  3806  000270  0E01               	movlw	1
  3807  000272  EF3C  F001         	goto	u5800
  3808  000276                     u5790:
  3809  000276  0E00               	movlw	0
  3810  000278                     u5800:
  3811  000278  0100               	movlb	0	; () banked
  3812  00027A  6F86               	movwf	_vfpfcnvrt$1288& (0+255),b
  3813  00027C  6B87               	clrf	(_vfpfcnvrt$1288+1)& (0+255),b
  3814  00027E                     
  3815                           ; BSR set to: 0
  3816  00027E  5186               	movf	_vfpfcnvrt$1288& (0+255),w,b
  3817  000280  1187               	iorwf	(_vfpfcnvrt$1288+1)& (0+255),w,b
  3818  000282  A4D8               	btfss	status,2,c
  3819  000284  EF46  F001         	goto	u5811
  3820  000288  EF48  F001         	goto	u5810
  3821  00028C                     u5811:
  3822  00028C  EF13  F001         	goto	l5423
  3823  000290                     u5810:
  3824  000290                     l5431:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3828  000290  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3829  000294  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3830  000298  CFDE FFF6          	movff	postinc2,tblptrl
  3831  00029C  CFDD FFF7          	movff	postdec2,tblptrh
  3832  0002A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3833  0002A0  6AF8               	clrf	tblptru,c
  3834  0002A2                     	endif
  3835  0002A2                     	if	0	;tblptru may be non-zero
  3836  0002A2                     	endif
  3837  0002A2  0008               	tblrd		*
  3838  0002A4  50F5               	movf	tablat,w,c
  3839  0002A6  0A2E               	xorlw	46
  3840  0002A8  A4D8               	btfss	status,2,c
  3841  0002AA  EF59  F001         	goto	u5821
  3842  0002AE  EF5B  F001         	goto	u5820
  3843  0002B2                     u5821:
  3844  0002B2  EFDB  F001         	goto	l5451
  3845  0002B6                     u5820:
  3846  0002B6                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3849  0002B6  0E00               	movlw	0
  3850  0002B8  6E42               	movwf	(_prec+1)^0,c
  3851  0002BA  0E00               	movlw	0
  3852  0002BC  6E41               	movwf	_prec^0,c
  3853  0002BE                     
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3856  0002BE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3857  0002C2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3858  0002C6  2ADE               	incf	postinc2,f,c
  3859  0002C8  0E00               	movlw	0
  3860  0002CA  22DD               	addwfc	postdec2,f,c
  3861  0002CC                     
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3864  0002CC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3865  0002D0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3866  0002D4  CFDE FFF6          	movff	postinc2,tblptrl
  3867  0002D8  CFDD FFF7          	movff	postdec2,tblptrh
  3868  0002DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3869  0002DC  6AF8               	clrf	tblptru,c
  3870  0002DE                     	endif
  3871  0002DE                     	if	0	;tblptru may be non-zero
  3872  0002DE                     	endif
  3873  0002DE  0008               	tblrd		*
  3874  0002E0  50F5               	movf	tablat,w,c
  3875  0002E2  0A2A               	xorlw	42
  3876  0002E4  A4D8               	btfss	status,2,c
  3877  0002E6  EF77  F001         	goto	u5831
  3878  0002EA  EF79  F001         	goto	u5830
  3879  0002EE                     u5831:
  3880  0002EE  EF96  F001         	goto	l5441
  3881  0002F2                     u5830:
  3882  0002F2                     
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3885  0002F2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3886  0002F6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3887  0002FA  2ADE               	incf	postinc2,f,c
  3888  0002FC  0E00               	movlw	0
  3889  0002FE  22DD               	addwfc	postdec2,f,c
  3890                           
  3891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3892  000300  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3893  000304  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3894  000308  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3895  00030C  0E02               	movlw	2
  3896  00030E  26DE               	addwf	postinc2,f,c
  3897  000310  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  3898  000314  0E00               	movlw	0
  3899  000316  22DD               	addwfc	postdec2,f,c
  3900  000318  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3901  00031C  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3902  000320  CFDE F041          	movff	postinc2,_prec
  3903  000324  CFDD F042          	movff	postdec2,_prec+1
  3904                           
  3905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3906  000328  EFDB  F001         	goto	l5451
  3907  00032C                     l5441:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3911  00032C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3912  000330  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3913  000334  CFDE F01A          	movff	postinc2,atoi@s
  3914  000338  CFDD F01B          	movff	postdec2,atoi@s+1
  3915  00033C  EC1C  F010         	call	_atoi	;wreg free
  3916  000340  C01A  F041         	movff	?_atoi,_prec
  3917  000344  C01B  F042         	movff	?_atoi+1,_prec+1
  3918                           
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3920  000348  EFAD  F001         	goto	l5445
  3921  00034C                     l5443:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3925  00034C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3926  000350  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3927  000354  2ADE               	incf	postinc2,f,c
  3928  000356  0E00               	movlw	0
  3929  000358  22DD               	addwfc	postdec2,f,c
  3930  00035A                     l5445:
  3931  00035A  0ED0               	movlw	208
  3932  00035C  6E39               	movwf	??_vfpfcnvrt^0,c
  3933  00035E  0EFF               	movlw	255
  3934  000360  6E3A               	movwf	(??_vfpfcnvrt+1)^0,c
  3935  000362  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3936  000366  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3937  00036A  CFDE FFF6          	movff	postinc2,tblptrl
  3938  00036E  CFDD FFF7          	movff	postdec2,tblptrh
  3939  000372                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3940  000372  6AF8               	clrf	tblptru,c
  3941  000374                     	endif
  3942  000374                     	if	0	;tblptru may be non-zero
  3943  000374                     	endif
  3944  000374  0008               	tblrd		*
  3945  000376  50F5               	movf	tablat,w,c
  3946  000378  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  3947  00037A  6A3C               	clrf	(??_vfpfcnvrt+3)^0,c
  3948  00037C  5039               	movf	??_vfpfcnvrt^0,w,c
  3949  00037E  263B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3950  000380  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3951  000382  223C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3952  000384  503C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3953  000386  E10A               	bnz	u5840
  3954  000388  0E0A               	movlw	10
  3955  00038A  5C3B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3956  00038C  A0D8               	btfss	status,0,c
  3957  00038E  EFCB  F001         	goto	u5841
  3958  000392  EFCE  F001         	goto	u5840
  3959  000396                     u5841:
  3960  000396  0E01               	movlw	1
  3961  000398  EFCF  F001         	goto	u5850
  3962  00039C                     u5840:
  3963  00039C  0E00               	movlw	0
  3964  00039E                     u5850:
  3965  00039E  0100               	movlb	0	; () banked
  3966  0003A0  6F88               	movwf	_vfpfcnvrt$1289& (0+255),b
  3967  0003A2  6B89               	clrf	(_vfpfcnvrt$1289+1)& (0+255),b
  3968  0003A4                     
  3969                           ; BSR set to: 0
  3970  0003A4  5188               	movf	_vfpfcnvrt$1289& (0+255),w,b
  3971  0003A6  1189               	iorwf	(_vfpfcnvrt$1289+1)& (0+255),w,b
  3972  0003A8  A4D8               	btfss	status,2,c
  3973  0003AA  EFD9  F001         	goto	u5861
  3974  0003AE  EFDB  F001         	goto	u5860
  3975  0003B2                     u5861:
  3976  0003B2  EFA6  F001         	goto	l5443
  3977  0003B6                     u5860:
  3978  0003B6                     l5451:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3982  0003B6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3983  0003BA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3984  0003BE  CFDE FFF6          	movff	postinc2,tblptrl
  3985  0003C2  CFDD FFF7          	movff	postdec2,tblptrh
  3986  0003C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3987  0003C6  6AF8               	clrf	tblptru,c
  3988  0003C8                     	endif
  3989  0003C8                     	if	0	;tblptru may be non-zero
  3990  0003C8                     	endif
  3991  0003C8  0008               	tblrd		*
  3992  0003CA  50F5               	movf	tablat,w,c
  3993  0003CC  0A63               	xorlw	99
  3994  0003CE  A4D8               	btfss	status,2,c
  3995  0003D0  EFEC  F001         	goto	u5871
  3996  0003D4  EFEE  F001         	goto	u5870
  3997  0003D8                     u5871:
  3998  0003D8  EF15  F002         	goto	l5459
  3999  0003DC                     u5870:
  4000  0003DC                     
  4001                           ; BSR set to: 0
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4003  0003DC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4004  0003E0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4005  0003E4  2ADE               	incf	postinc2,f,c
  4006  0003E6  0E00               	movlw	0
  4007  0003E8  22DD               	addwfc	postdec2,f,c
  4008                           
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4010  0003EA  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4011  0003EE  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4012  0003F2  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4013  0003F6  0E02               	movlw	2
  4014  0003F8  26DE               	addwf	postinc2,f,c
  4015  0003FA  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4016  0003FE  0E00               	movlw	0
  4017  000400  22DD               	addwfc	postdec2,f,c
  4018  000402  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4019  000406  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4020  00040A  50DF               	movf	indf2,w,c
  4021  00040C  6F94               	movwf	vfpfcnvrt@c& (0+255),b
  4022  00040E                     
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4025  00040E  C07C  F02E         	movff	vfpfcnvrt@fp,ctoa@fp
  4026  000412  C07D  F02F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4027  000416  C094  F030         	movff	vfpfcnvrt@c,ctoa@c
  4028  00041A  ECAF  F019         	call	_ctoa	;wreg free
  4029  00041E  C02E  F07C         	movff	?_ctoa,?_vfpfcnvrt
  4030  000422  C02F  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4031  000426  EF81  F009         	goto	l613
  4032  00042A                     l5459:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4036  00042A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4037  00042E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4038  000432  CFDE F013          	movff	postinc2,strncmp@_l
  4039  000436  CFDD F014          	movff	postdec2,strncmp@_l+1
  4040  00043A  0ED2               	movlw	low STR_4
  4041  00043C  6E15               	movwf	strncmp@_r^0,c
  4042  00043E  0EFF               	movlw	high STR_4
  4043  000440  6E16               	movwf	(strncmp@_r+1)^0,c
  4044  000442  0E00               	movlw	0
  4045  000444  6E18               	movwf	(strncmp@n+1)^0,c
  4046  000446  0E03               	movlw	3
  4047  000448  6E17               	movwf	strncmp@n^0,c
  4048  00044A  ECB0  F016         	call	_strncmp	;wreg free
  4049  00044E  5013               	movf	?_strncmp^0,w,c
  4050  000450  1014               	iorwf	(?_strncmp+1)^0,w,c
  4051  000452  B4D8               	btfsc	status,2,c
  4052  000454  EF2E  F002         	goto	u5881
  4053  000458  EF30  F002         	goto	u5880
  4054  00045C                     u5881:
  4055  00045C  EF4B  F002         	goto	l5463
  4056  000460                     u5880:
  4057  000460  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4058  000464  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4059  000468  CFDE F013          	movff	postinc2,strncmp@_l
  4060  00046C  CFDD F014          	movff	postdec2,strncmp@_l+1
  4061  000470  0ED6               	movlw	low STR_8
  4062  000472  6E15               	movwf	strncmp@_r^0,c
  4063  000474  0EFF               	movlw	high STR_8
  4064  000476  6E16               	movwf	(strncmp@_r+1)^0,c
  4065  000478  0E00               	movlw	0
  4066  00047A  6E18               	movwf	(strncmp@n+1)^0,c
  4067  00047C  0E03               	movlw	3
  4068  00047E  6E17               	movwf	strncmp@n^0,c
  4069  000480  ECB0  F016         	call	_strncmp	;wreg free
  4070  000484  5013               	movf	?_strncmp^0,w,c
  4071  000486  1014               	iorwf	(?_strncmp+1)^0,w,c
  4072  000488  A4D8               	btfss	status,2,c
  4073  00048A  EF49  F002         	goto	u5891
  4074  00048E  EF4B  F002         	goto	u5890
  4075  000492                     u5891:
  4076  000492  EF8C  F002         	goto	l5469
  4077  000496                     u5890:
  4078  000496                     l5463:
  4079                           
  4080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4081  000496  0E03               	movlw	3
  4082  000498  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4083  00049C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4084  0004A0  26DE               	addwf	postinc2,f,c
  4085  0004A2  0E00               	movlw	0
  4086  0004A4  22DD               	addwfc	postdec2,f,c
  4087                           
  4088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4089  0004A6  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4090  0004AA  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4091  0004AE  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4092  0004B2  0E02               	movlw	2
  4093  0004B4  26DE               	addwf	postinc2,f,c
  4094  0004B6  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4095  0004BA  0E00               	movlw	0
  4096  0004BC  22DD               	addwfc	postdec2,f,c
  4097  0004BE  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4098  0004C2  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4099  0004C6  50DF               	movf	indf2,w,c
  4100  0004C8  0100               	movlb	0	; () banked
  4101  0004CA  6F8A               	movwf	vfpfcnvrt@ll& (0+255),b
  4102  0004CC  0E00               	movlw	0
  4103  0004CE  BF8A               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4104  0004D0  0EFF               	movlw	-1
  4105  0004D2  6F8B               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4106  0004D4  6F8C               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4107  0004D6  6F8D               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4108  0004D8  6F8E               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4109  0004DA  6F8F               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4110  0004DC  6F90               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4111  0004DE  6F91               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4112  0004E0                     l5465:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4116  0004E0  C07C  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  4117  0004E4  C07D  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4118  0004E8  C08A  F030         	movff	vfpfcnvrt@ll,dtoa@d
  4119  0004EC  C08B  F031         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4120  0004F0  C08C  F032         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4121  0004F4  C08D  F033         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4122  0004F8  C08E  F034         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4123  0004FC  C08F  F035         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4124  000500  C090  F036         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4125  000504  C091  F037         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4126  000508  EC45  F00B         	call	_dtoa	;wreg free
  4127  00050C  C02E  F07C         	movff	?_dtoa,?_vfpfcnvrt
  4128  000510  C02F  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4129  000514  EF81  F009         	goto	l613
  4130  000518                     l5469:
  4131                           
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4133  000518  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4134  00051C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4135  000520  CFDE F013          	movff	postinc2,strncmp@_l
  4136  000524  CFDD F014          	movff	postdec2,strncmp@_l+1
  4137  000528  0ED3               	movlw	low (STR_4+1)
  4138  00052A  6E15               	movwf	strncmp@_r^0,c
  4139  00052C  0EFF               	movlw	high (STR_4+1)
  4140  00052E  6E16               	movwf	(strncmp@_r+1)^0,c
  4141  000530  0E00               	movlw	0
  4142  000532  6E18               	movwf	(strncmp@n+1)^0,c
  4143  000534  0E02               	movlw	2
  4144  000536  6E17               	movwf	strncmp@n^0,c
  4145  000538  ECB0  F016         	call	_strncmp	;wreg free
  4146  00053C  5013               	movf	?_strncmp^0,w,c
  4147  00053E  1014               	iorwf	(?_strncmp+1)^0,w,c
  4148  000540  B4D8               	btfsc	status,2,c
  4149  000542  EFA5  F002         	goto	u5901
  4150  000546  EFA7  F002         	goto	u5900
  4151  00054A                     u5901:
  4152  00054A  EFC2  F002         	goto	l5473
  4153  00054E                     u5900:
  4154  00054E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4155  000552  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4156  000556  CFDE F013          	movff	postinc2,strncmp@_l
  4157  00055A  CFDD F014          	movff	postdec2,strncmp@_l+1
  4158  00055E  0ED7               	movlw	low (STR_8+1)
  4159  000560  6E15               	movwf	strncmp@_r^0,c
  4160  000562  0EFF               	movlw	high (STR_8+1)
  4161  000564  6E16               	movwf	(strncmp@_r+1)^0,c
  4162  000566  0E00               	movlw	0
  4163  000568  6E18               	movwf	(strncmp@n+1)^0,c
  4164  00056A  0E02               	movlw	2
  4165  00056C  6E17               	movwf	strncmp@n^0,c
  4166  00056E  ECB0  F016         	call	_strncmp	;wreg free
  4167  000572  5013               	movf	?_strncmp^0,w,c
  4168  000574  1014               	iorwf	(?_strncmp+1)^0,w,c
  4169  000576  A4D8               	btfss	status,2,c
  4170  000578  EFC0  F002         	goto	u5911
  4171  00057C  EFC2  F002         	goto	u5910
  4172  000580                     u5911:
  4173  000580  EFEA  F002         	goto	l5479
  4174  000584                     u5910:
  4175  000584                     l5473:
  4176                           
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4178  000584  0E02               	movlw	2
  4179  000586  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4180  00058A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4181  00058E  26DE               	addwf	postinc2,f,c
  4182  000590  0E00               	movlw	0
  4183  000592  22DD               	addwfc	postdec2,f,c
  4184                           
  4185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4186  000594  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4187  000598  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4188  00059C  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4189  0005A0  0E02               	movlw	2
  4190  0005A2  26DE               	addwf	postinc2,f,c
  4191  0005A4  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4192  0005A8  0E00               	movlw	0
  4193  0005AA  22DD               	addwfc	postdec2,f,c
  4194  0005AC  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4195  0005B0  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4196  0005B4  CFDE F08A          	movff	postinc2,vfpfcnvrt@ll
  4197  0005B8  CFDD F08B          	movff	postdec2,vfpfcnvrt@ll+1
  4198  0005BC  0100               	movlb	0	; () banked
  4199  0005BE  0E00               	movlw	0
  4200  0005C0  BF8B               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4201  0005C2  0EFF               	movlw	-1
  4202  0005C4  6F8C               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4203  0005C6  6F8D               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4204  0005C8  6F8E               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4205  0005CA  6F8F               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4206  0005CC  6F90               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4207  0005CE  6F91               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4208  0005D0  EF70  F002         	goto	l5465
  4209  0005D4                     l5479:
  4210                           
  4211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4212  0005D4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4213  0005D8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4214  0005DC  CFDE FFF6          	movff	postinc2,tblptrl
  4215  0005E0  CFDD FFF7          	movff	postdec2,tblptrh
  4216  0005E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4217  0005E4  6AF8               	clrf	tblptru,c
  4218  0005E6                     	endif
  4219  0005E6                     	if	0	;tblptru may be non-zero
  4220  0005E6                     	endif
  4221  0005E6  0008               	tblrd		*
  4222  0005E8  50F5               	movf	tablat,w,c
  4223  0005EA  0A64               	xorlw	100
  4224  0005EC  B4D8               	btfsc	status,2,c
  4225  0005EE  EFFB  F002         	goto	u5921
  4226  0005F2  EFFD  F002         	goto	u5920
  4227  0005F6                     u5921:
  4228  0005F6  EF10  F003         	goto	l5483
  4229  0005FA                     u5920:
  4230  0005FA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4231  0005FE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4232  000602  CFDE FFF6          	movff	postinc2,tblptrl
  4233  000606  CFDD FFF7          	movff	postdec2,tblptrh
  4234  00060A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4235  00060A  6AF8               	clrf	tblptru,c
  4236  00060C                     	endif
  4237  00060C                     	if	0	;tblptru may be non-zero
  4238  00060C                     	endif
  4239  00060C  0008               	tblrd		*
  4240  00060E  50F5               	movf	tablat,w,c
  4241  000610  0A69               	xorlw	105
  4242  000612  A4D8               	btfss	status,2,c
  4243  000614  EF0E  F003         	goto	u5931
  4244  000618  EF10  F003         	goto	u5930
  4245  00061C                     u5931:
  4246  00061C  EF37  F003         	goto	l5489
  4247  000620                     u5930:
  4248  000620                     l5483:
  4249                           
  4250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4251  000620  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4252  000624  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4253  000628  2ADE               	incf	postinc2,f,c
  4254  00062A  0E00               	movlw	0
  4255  00062C  22DD               	addwfc	postdec2,f,c
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4258  00062E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4259  000632  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4260  000636  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4261  00063A  0E02               	movlw	2
  4262  00063C  26DE               	addwf	postinc2,f,c
  4263  00063E  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4264  000642  0E00               	movlw	0
  4265  000644  22DD               	addwfc	postdec2,f,c
  4266  000646  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4267  00064A  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4268  00064E  CFDE F08A          	movff	postinc2,vfpfcnvrt@ll
  4269  000652  CFDD F08B          	movff	postdec2,vfpfcnvrt@ll+1
  4270  000656  0100               	movlb	0	; () banked
  4271  000658  0E00               	movlw	0
  4272  00065A  BF8B               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4273  00065C  0EFF               	movlw	-1
  4274  00065E  6F8C               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4275  000660  6F8D               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4276  000662  6F8E               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4277  000664  6F8F               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4278  000666  6F90               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4279  000668  6F91               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4280  00066A  EF70  F002         	goto	l5465
  4281  00066E                     l5489:
  4282                           
  4283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4284  00066E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4285  000672  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4286  000676  CFDE F013          	movff	postinc2,strncmp@_l
  4287  00067A  CFDD F014          	movff	postdec2,strncmp@_l+1
  4288  00067E  0EED               	movlw	low STR_22
  4289  000680  6E15               	movwf	strncmp@_r^0,c
  4290  000682  0EFF               	movlw	high STR_22
  4291  000684  6E16               	movwf	(strncmp@_r+1)^0,c
  4292  000686  0E00               	movlw	0
  4293  000688  6E18               	movwf	(strncmp@n+1)^0,c
  4294  00068A  0E02               	movlw	2
  4295  00068C  6E17               	movwf	strncmp@n^0,c
  4296  00068E  ECB0  F016         	call	_strncmp	;wreg free
  4297  000692  5013               	movf	?_strncmp^0,w,c
  4298  000694  1014               	iorwf	(?_strncmp+1)^0,w,c
  4299  000696  B4D8               	btfsc	status,2,c
  4300  000698  EF50  F003         	goto	u5941
  4301  00069C  EF52  F003         	goto	u5940
  4302  0006A0                     u5941:
  4303  0006A0  EF6D  F003         	goto	l5493
  4304  0006A4                     u5940:
  4305  0006A4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4306  0006A8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4307  0006AC  CFDE F013          	movff	postinc2,strncmp@_l
  4308  0006B0  CFDD F014          	movff	postdec2,strncmp@_l+1
  4309  0006B4  0EF0               	movlw	low STR_26
  4310  0006B6  6E15               	movwf	strncmp@_r^0,c
  4311  0006B8  0EFF               	movlw	high STR_26
  4312  0006BA  6E16               	movwf	(strncmp@_r+1)^0,c
  4313  0006BC  0E00               	movlw	0
  4314  0006BE  6E18               	movwf	(strncmp@n+1)^0,c
  4315  0006C0  0E02               	movlw	2
  4316  0006C2  6E17               	movwf	strncmp@n^0,c
  4317  0006C4  ECB0  F016         	call	_strncmp	;wreg free
  4318  0006C8  5013               	movf	?_strncmp^0,w,c
  4319  0006CA  1014               	iorwf	(?_strncmp+1)^0,w,c
  4320  0006CC  A4D8               	btfss	status,2,c
  4321  0006CE  EF6B  F003         	goto	u5951
  4322  0006D2  EF6D  F003         	goto	u5950
  4323  0006D6                     u5951:
  4324  0006D6  EF96  F003         	goto	l5499
  4325  0006DA                     u5950:
  4326  0006DA                     l5493:
  4327                           
  4328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4329  0006DA  0E02               	movlw	2
  4330  0006DC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4331  0006E0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4332  0006E4  26DE               	addwf	postinc2,f,c
  4333  0006E6  0E00               	movlw	0
  4334  0006E8  22DD               	addwfc	postdec2,f,c
  4335                           
  4336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4337  0006EA  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4338  0006EE  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4339  0006F2  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4340  0006F6  0E02               	movlw	2
  4341  0006F8  26DE               	addwf	postinc2,f,c
  4342  0006FA  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4343  0006FE  0E00               	movlw	0
  4344  000700  22DD               	addwfc	postdec2,f,c
  4345  000702  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4346  000706  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4347  00070A  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4348  00070E  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4349  000712  C03B  F08A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4350  000716  C03C  F08B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4351  00071A  0100               	movlb	0	; () banked
  4352  00071C  6B8C               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4353  00071E  6B8D               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4354  000720  6B8E               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4355  000722  6B8F               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4356  000724  6B90               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4357  000726  6B91               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4358  000728  EF70  F002         	goto	l5465
  4359  00072C                     l5499:
  4360                           
  4361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4362  00072C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4363  000730  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4364  000734  CFDE F013          	movff	postinc2,strncmp@_l
  4365  000738  CFDD F014          	movff	postdec2,strncmp@_l+1
  4366  00073C  0EDE               	movlw	low STR_31
  4367  00073E  6E15               	movwf	strncmp@_r^0,c
  4368  000740  0EFF               	movlw	high STR_31
  4369  000742  6E16               	movwf	(strncmp@_r+1)^0,c
  4370  000744  0E00               	movlw	0
  4371  000746  6E18               	movwf	(strncmp@n+1)^0,c
  4372  000748  0E03               	movlw	3
  4373  00074A  6E17               	movwf	strncmp@n^0,c
  4374  00074C  ECB0  F016         	call	_strncmp	;wreg free
  4375  000750  5013               	movf	?_strncmp^0,w,c
  4376  000752  1014               	iorwf	(?_strncmp+1)^0,w,c
  4377  000754  A4D8               	btfss	status,2,c
  4378  000756  EFAF  F003         	goto	u5961
  4379  00075A  EFB1  F003         	goto	u5960
  4380  00075E                     u5961:
  4381  00075E  EFF1  F003         	goto	l5507
  4382  000762                     u5960:
  4383  000762                     
  4384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4385  000762  0E03               	movlw	3
  4386  000764  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4387  000768  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4388  00076C  26DE               	addwf	postinc2,f,c
  4389  00076E  0E00               	movlw	0
  4390  000770  22DD               	addwfc	postdec2,f,c
  4391                           
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4393  000772  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4394  000776  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4395  00077A  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4396  00077E  0E02               	movlw	2
  4397  000780  26DE               	addwf	postinc2,f,c
  4398  000782  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4399  000786  0E00               	movlw	0
  4400  000788  22DD               	addwfc	postdec2,f,c
  4401  00078A  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4402  00078E  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4403  000792  50DF               	movf	indf2,w,c
  4404  000794  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  4405  000796  503B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4406  000798  0100               	movlb	0	; () banked
  4407  00079A  6F95               	movwf	vfpfcnvrt@llu& (0+255),b
  4408  00079C  6B96               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4409  00079E  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4410  0007A0  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4411  0007A2  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4412  0007A4  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4413  0007A6  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4414  0007A8  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4415  0007AA                     l5503:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  4419  0007AA  C07C  F02E         	movff	vfpfcnvrt@fp,otoa@fp
  4420  0007AE  C07D  F02F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4421  0007B2  C095  F030         	movff	vfpfcnvrt@llu,otoa@d
  4422  0007B6  C096  F031         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4423  0007BA  C097  F032         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4424  0007BE  C098  F033         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4425  0007C2  C099  F034         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4426  0007C6  C09A  F035         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4427  0007CA  C09B  F036         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4428  0007CE  C09C  F037         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4429  0007D2  EC26  F00F         	call	_otoa	;wreg free
  4430  0007D6  C02E  F07C         	movff	?_otoa,?_vfpfcnvrt
  4431  0007DA  C02F  F07D         	movff	?_otoa+1,?_vfpfcnvrt+1
  4432  0007DE  EF81  F009         	goto	l613
  4433  0007E2                     l5507:
  4434                           
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4436  0007E2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4437  0007E6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4438  0007EA  CFDE F013          	movff	postinc2,strncmp@_l
  4439  0007EE  CFDD F014          	movff	postdec2,strncmp@_l+1
  4440  0007F2  0EDF               	movlw	low (STR_31+1)
  4441  0007F4  6E15               	movwf	strncmp@_r^0,c
  4442  0007F6  0EFF               	movlw	high (STR_31+1)
  4443  0007F8  6E16               	movwf	(strncmp@_r+1)^0,c
  4444  0007FA  0E00               	movlw	0
  4445  0007FC  6E18               	movwf	(strncmp@n+1)^0,c
  4446  0007FE  0E02               	movlw	2
  4447  000800  6E17               	movwf	strncmp@n^0,c
  4448  000802  ECB0  F016         	call	_strncmp	;wreg free
  4449  000806  5013               	movf	?_strncmp^0,w,c
  4450  000808  1014               	iorwf	(?_strncmp+1)^0,w,c
  4451  00080A  A4D8               	btfss	status,2,c
  4452  00080C  EF0A  F004         	goto	u5971
  4453  000810  EF0C  F004         	goto	u5970
  4454  000814                     u5971:
  4455  000814  EF35  F004         	goto	l5515
  4456  000818                     u5970:
  4457  000818                     
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4459  000818  0E02               	movlw	2
  4460  00081A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4461  00081E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4462  000822  26DE               	addwf	postinc2,f,c
  4463  000824  0E00               	movlw	0
  4464  000826  22DD               	addwfc	postdec2,f,c
  4465                           
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4467  000828  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4468  00082C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4469  000830  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4470  000834  0E02               	movlw	2
  4471  000836  26DE               	addwf	postinc2,f,c
  4472  000838  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4473  00083C  0E00               	movlw	0
  4474  00083E  22DD               	addwfc	postdec2,f,c
  4475  000840  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4476  000844  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4477  000848  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4478  00084C  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4479  000850  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4480  000854  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4481  000858  0100               	movlb	0	; () banked
  4482  00085A  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4483  00085C  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4484  00085E  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4485  000860  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4486  000862  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4487  000864  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4488  000866  EFD5  F003         	goto	l5503
  4489  00086A                     l5515:
  4490                           
  4491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  4492  00086A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4493  00086E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4494  000872  CFDE FFF6          	movff	postinc2,tblptrl
  4495  000876  CFDD FFF7          	movff	postdec2,tblptrh
  4496  00087A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4497  00087A  6AF8               	clrf	tblptru,c
  4498  00087C                     	endif
  4499  00087C                     	if	0	;tblptru may be non-zero
  4500  00087C                     	endif
  4501  00087C  0008               	tblrd		*
  4502  00087E  50F5               	movf	tablat,w,c
  4503  000880  0A6F               	xorlw	111
  4504  000882  A4D8               	btfss	status,2,c
  4505  000884  EF46  F004         	goto	u5981
  4506  000888  EF48  F004         	goto	u5980
  4507  00088C                     u5981:
  4508  00088C  EF70  F004         	goto	l5523
  4509  000890                     u5980:
  4510  000890                     
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  4512  000890  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4513  000894  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4514  000898  2ADE               	incf	postinc2,f,c
  4515  00089A  0E00               	movlw	0
  4516  00089C  22DD               	addwfc	postdec2,f,c
  4517                           
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  4519  00089E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4520  0008A2  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4521  0008A6  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4522  0008AA  0E02               	movlw	2
  4523  0008AC  26DE               	addwf	postinc2,f,c
  4524  0008AE  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4525  0008B2  0E00               	movlw	0
  4526  0008B4  22DD               	addwfc	postdec2,f,c
  4527  0008B6  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4528  0008BA  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4529  0008BE  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4530  0008C2  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4531  0008C6  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4532  0008CA  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4533  0008CE  0100               	movlb	0	; () banked
  4534  0008D0  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4535  0008D2  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4536  0008D4  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4537  0008D6  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4538  0008D8  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4539  0008DA  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4540  0008DC  EFD5  F003         	goto	l5503
  4541  0008E0                     l5523:
  4542                           
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4544  0008E0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4545  0008E4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4546  0008E8  CFDE F013          	movff	postinc2,strncmp@_l
  4547  0008EC  CFDD F014          	movff	postdec2,strncmp@_l+1
  4548  0008F0  0EF6               	movlw	low STR_41
  4549  0008F2  6E15               	movwf	strncmp@_r^0,c
  4550  0008F4  0EFF               	movlw	high STR_41
  4551  0008F6  6E16               	movwf	(strncmp@_r+1)^0,c
  4552  0008F8  0E00               	movlw	0
  4553  0008FA  6E18               	movwf	(strncmp@n+1)^0,c
  4554  0008FC  0E02               	movlw	2
  4555  0008FE  6E17               	movwf	strncmp@n^0,c
  4556  000900  ECB0  F016         	call	_strncmp	;wreg free
  4557  000904  5013               	movf	?_strncmp^0,w,c
  4558  000906  1014               	iorwf	(?_strncmp+1)^0,w,c
  4559  000908  A4D8               	btfss	status,2,c
  4560  00090A  EF89  F004         	goto	u5991
  4561  00090E  EF8B  F004         	goto	u5990
  4562  000912                     u5991:
  4563  000912  EFB4  F004         	goto	l5531
  4564  000916                     u5990:
  4565  000916                     
  4566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4567  000916  0E02               	movlw	2
  4568  000918  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4569  00091C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4570  000920  26DE               	addwf	postinc2,f,c
  4571  000922  0E00               	movlw	0
  4572  000924  22DD               	addwfc	postdec2,f,c
  4573                           
  4574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4575  000926  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4576  00092A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4577  00092E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4578  000932  0E02               	movlw	2
  4579  000934  26DE               	addwf	postinc2,f,c
  4580  000936  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4581  00093A  0E00               	movlw	0
  4582  00093C  22DD               	addwfc	postdec2,f,c
  4583  00093E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4584  000942  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4585  000946  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4586  00094A  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4587  00094E  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4588  000952  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4589  000956  0100               	movlb	0	; () banked
  4590  000958  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4591  00095A  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4592  00095C  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4593  00095E  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4594  000960  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4595  000962  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4596  000964  EFD5  F003         	goto	l5503
  4597  000968                     l5531:
  4598                           
  4599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4600  000968  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4601  00096C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4602  000970  CFDE F013          	movff	postinc2,strncmp@_l
  4603  000974  CFDD F014          	movff	postdec2,strncmp@_l+1
  4604  000978  0EDA               	movlw	low STR_46
  4605  00097A  6E15               	movwf	strncmp@_r^0,c
  4606  00097C  0EFF               	movlw	high STR_46
  4607  00097E  6E16               	movwf	(strncmp@_r+1)^0,c
  4608  000980  0E00               	movlw	0
  4609  000982  6E18               	movwf	(strncmp@n+1)^0,c
  4610  000984  0E03               	movlw	3
  4611  000986  6E17               	movwf	strncmp@n^0,c
  4612  000988  ECB0  F016         	call	_strncmp	;wreg free
  4613  00098C  5013               	movf	?_strncmp^0,w,c
  4614  00098E  1014               	iorwf	(?_strncmp+1)^0,w,c
  4615  000990  A4D8               	btfss	status,2,c
  4616  000992  EFCD  F004         	goto	u6001
  4617  000996  EFCF  F004         	goto	u6000
  4618  00099A                     u6001:
  4619  00099A  EFF8  F004         	goto	l5541
  4620  00099E                     u6000:
  4621  00099E                     
  4622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4623  00099E  0E03               	movlw	3
  4624  0009A0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4625  0009A4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4626  0009A8  26DE               	addwf	postinc2,f,c
  4627  0009AA  0E00               	movlw	0
  4628  0009AC  22DD               	addwfc	postdec2,f,c
  4629                           
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4631  0009AE  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4632  0009B2  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4633  0009B6  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4634  0009BA  0E02               	movlw	2
  4635  0009BC  26DE               	addwf	postinc2,f,c
  4636  0009BE  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4637  0009C2  0E00               	movlw	0
  4638  0009C4  22DD               	addwfc	postdec2,f,c
  4639  0009C6  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4640  0009CA  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4641  0009CE  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4642  0009D2  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4643  0009D6                     
  4644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  4645  0009D6  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4646  0009DA  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4647  0009DE  C03D  FFDF         	movff	_nout,indf2
  4648  0009E2                     l5537:
  4649                           
  4650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  4651  0009E2  0E00               	movlw	0
  4652  0009E4  0100               	movlb	0	; () banked
  4653  0009E6  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4654  0009E8  0E00               	movlw	0
  4655  0009EA  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  4656  0009EC  EF81  F009         	goto	l613
  4657  0009F0                     l5541:
  4658                           
  4659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4660  0009F0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4661  0009F4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4662  0009F8  CFDE F013          	movff	postinc2,strncmp@_l
  4663  0009FC  CFDD F014          	movff	postdec2,strncmp@_l+1
  4664  000A00  0EDB               	movlw	low (STR_46+1)
  4665  000A02  6E15               	movwf	strncmp@_r^0,c
  4666  000A04  0EFF               	movlw	high (STR_46+1)
  4667  000A06  6E16               	movwf	(strncmp@_r+1)^0,c
  4668  000A08  0E00               	movlw	0
  4669  000A0A  6E18               	movwf	(strncmp@n+1)^0,c
  4670  000A0C  0E02               	movlw	2
  4671  000A0E  6E17               	movwf	strncmp@n^0,c
  4672  000A10  ECB0  F016         	call	_strncmp	;wreg free
  4673  000A14  5013               	movf	?_strncmp^0,w,c
  4674  000A16  1014               	iorwf	(?_strncmp+1)^0,w,c
  4675  000A18  A4D8               	btfss	status,2,c
  4676  000A1A  EF11  F005         	goto	u6011
  4677  000A1E  EF13  F005         	goto	u6010
  4678  000A22                     u6011:
  4679  000A22  EF39  F005         	goto	l5551
  4680  000A26                     u6010:
  4681  000A26                     
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4683  000A26  0E02               	movlw	2
  4684  000A28  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4685  000A2C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4686  000A30  26DE               	addwf	postinc2,f,c
  4687  000A32  0E00               	movlw	0
  4688  000A34  22DD               	addwfc	postdec2,f,c
  4689                           
  4690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4691  000A36  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4692  000A3A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4693  000A3E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4694  000A42  0E02               	movlw	2
  4695  000A44  26DE               	addwf	postinc2,f,c
  4696  000A46  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4697  000A4A  0E00               	movlw	0
  4698  000A4C  22DD               	addwfc	postdec2,f,c
  4699  000A4E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4700  000A52  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4701  000A56  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4702  000A5A  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4703  000A5E                     
  4704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  4705  000A5E  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4706  000A62  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4707  000A66  C03D  FFDE         	movff	_nout,postinc2
  4708  000A6A  C03E  FFDD         	movff	_nout+1,postdec2
  4709  000A6E  EFF1  F004         	goto	l5537
  4710  000A72                     l5551:
  4711                           
  4712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4713  000A72  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4714  000A76  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4715  000A7A  CFDE FFF6          	movff	postinc2,tblptrl
  4716  000A7E  CFDD FFF7          	movff	postdec2,tblptrh
  4717  000A82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4718  000A82  6AF8               	clrf	tblptru,c
  4719  000A84                     	endif
  4720  000A84                     	if	0	;tblptru may be non-zero
  4721  000A84                     	endif
  4722  000A84  0008               	tblrd		*
  4723  000A86  50F5               	movf	tablat,w,c
  4724  000A88  0A6E               	xorlw	110
  4725  000A8A  A4D8               	btfss	status,2,c
  4726  000A8C  EF4A  F005         	goto	u6021
  4727  000A90  EF4C  F005         	goto	u6020
  4728  000A94                     u6021:
  4729  000A94  EF71  F005         	goto	l5561
  4730  000A98                     u6020:
  4731  000A98                     
  4732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4733  000A98  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4734  000A9C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4735  000AA0  2ADE               	incf	postinc2,f,c
  4736  000AA2  0E00               	movlw	0
  4737  000AA4  22DD               	addwfc	postdec2,f,c
  4738                           
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4740  000AA6  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4741  000AAA  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4742  000AAE  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4743  000AB2  0E02               	movlw	2
  4744  000AB4  26DE               	addwf	postinc2,f,c
  4745  000AB6  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4746  000ABA  0E00               	movlw	0
  4747  000ABC  22DD               	addwfc	postdec2,f,c
  4748  000ABE  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4749  000AC2  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4750  000AC6  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4751  000ACA  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4752  000ACE                     
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  4754  000ACE  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4755  000AD2  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4756  000AD6  C03D  FFDE         	movff	_nout,postinc2
  4757  000ADA  C03E  FFDD         	movff	_nout+1,postdec2
  4758  000ADE  EFF1  F004         	goto	l5537
  4759  000AE2                     l5561:
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4762  000AE2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4763  000AE6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4764  000AEA  CFDE F013          	movff	postinc2,strncmp@_l
  4765  000AEE  CFDD F014          	movff	postdec2,strncmp@_l+1
  4766  000AF2  0EF3               	movlw	low STR_56
  4767  000AF4  6E15               	movwf	strncmp@_r^0,c
  4768  000AF6  0EFF               	movlw	high STR_56
  4769  000AF8  6E16               	movwf	(strncmp@_r+1)^0,c
  4770  000AFA  0E00               	movlw	0
  4771  000AFC  6E18               	movwf	(strncmp@n+1)^0,c
  4772  000AFE  0E02               	movlw	2
  4773  000B00  6E17               	movwf	strncmp@n^0,c
  4774  000B02  ECB0  F016         	call	_strncmp	;wreg free
  4775  000B06  5013               	movf	?_strncmp^0,w,c
  4776  000B08  1014               	iorwf	(?_strncmp+1)^0,w,c
  4777  000B0A  A4D8               	btfss	status,2,c
  4778  000B0C  EF8A  F005         	goto	u6031
  4779  000B10  EF8C  F005         	goto	u6030
  4780  000B14                     u6031:
  4781  000B14  EFB2  F005         	goto	l5571
  4782  000B18                     u6030:
  4783  000B18                     
  4784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4785  000B18  0E02               	movlw	2
  4786  000B1A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4787  000B1E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4788  000B22  26DE               	addwf	postinc2,f,c
  4789  000B24  0E00               	movlw	0
  4790  000B26  22DD               	addwfc	postdec2,f,c
  4791                           
  4792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4793  000B28  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4794  000B2C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4795  000B30  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4796  000B34  0E02               	movlw	2
  4797  000B36  26DE               	addwf	postinc2,f,c
  4798  000B38  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4799  000B3C  0E00               	movlw	0
  4800  000B3E  22DD               	addwfc	postdec2,f,c
  4801  000B40  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4802  000B44  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4803  000B48  CFDE F092          	movff	postinc2,vfpfcnvrt@vp
  4804  000B4C  CFDD F093          	movff	postdec2,vfpfcnvrt@vp+1
  4805  000B50                     
  4806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  4807  000B50  C092  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4808  000B54  C093  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4809  000B58  C03D  FFDE         	movff	_nout,postinc2
  4810  000B5C  C03E  FFDD         	movff	_nout+1,postdec2
  4811  000B60  EFF1  F004         	goto	l5537
  4812  000B64                     l5571:
  4813                           
  4814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  4815  000B64  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4816  000B68  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4817  000B6C  CFDE FFF6          	movff	postinc2,tblptrl
  4818  000B70  CFDD FFF7          	movff	postdec2,tblptrh
  4819  000B74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4820  000B74  6AF8               	clrf	tblptru,c
  4821  000B76                     	endif
  4822  000B76                     	if	0	;tblptru may be non-zero
  4823  000B76                     	endif
  4824  000B76  0008               	tblrd		*
  4825  000B78  50F5               	movf	tablat,w,c
  4826  000B7A  0A70               	xorlw	112
  4827  000B7C  A4D8               	btfss	status,2,c
  4828  000B7E  EFC3  F005         	goto	u6041
  4829  000B82  EFC5  F005         	goto	u6040
  4830  000B86                     u6041:
  4831  000B86  EF09  F006         	goto	l5579
  4832  000B8A                     u6040:
  4833  000B8A                     
  4834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  4835  000B8A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4836  000B8E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4837  000B92  2ADE               	incf	postinc2,f,c
  4838  000B94  0E00               	movlw	0
  4839  000B96  22DD               	addwfc	postdec2,f,c
  4840                           
  4841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  4842  000B98  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4843  000B9C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4844  000BA0  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4845  000BA4  0E02               	movlw	2
  4846  000BA6  26DE               	addwf	postinc2,f,c
  4847  000BA8  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4848  000BAC  0E00               	movlw	0
  4849  000BAE  22DD               	addwfc	postdec2,f,c
  4850  000BB0  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4851  000BB4  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4852  000BB8  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  4853  000BBC  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  4854  000BC0  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4855  000BC4  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4856  000BC8  0100               	movlb	0	; () banked
  4857  000BCA  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4858  000BCC  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4859  000BCE  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4860  000BD0  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4861  000BD2  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4862  000BD4  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4863  000BD6                     
  4864                           ; BSR set to: 0
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  4866  000BD6  C07C  F02E         	movff	vfpfcnvrt@fp,xtoa@fp
  4867  000BDA  C07D  F02F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4868  000BDE  C095  F030         	movff	vfpfcnvrt@llu,xtoa@d
  4869  000BE2  C096  F031         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4870  000BE6  C097  F032         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4871  000BEA  C098  F033         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4872  000BEE  C099  F034         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4873  000BF2  C09A  F035         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4874  000BF6  C09B  F036         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4875  000BFA  C09C  F037         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4876  000BFE  0E78               	movlw	120
  4877  000C00  6E38               	movwf	xtoa@x^0,c
  4878  000C02  ECB6  F00C         	call	_xtoa	;wreg free
  4879  000C06  C02E  F07C         	movff	?_xtoa,?_vfpfcnvrt
  4880  000C0A  C02F  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4881  000C0E  EF81  F009         	goto	l613
  4882  000C12                     l5579:
  4883                           
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4885  000C12  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4886  000C16  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4887  000C1A  CFDE FFF6          	movff	postinc2,tblptrl
  4888  000C1E  CFDD FFF7          	movff	postdec2,tblptrh
  4889  000C22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4890  000C22  6AF8               	clrf	tblptru,c
  4891  000C24                     	endif
  4892  000C24                     	if	0	;tblptru may be non-zero
  4893  000C24                     	endif
  4894  000C24  0008               	tblrd		*
  4895  000C26  50F5               	movf	tablat,w,c
  4896  000C28  0A73               	xorlw	115
  4897  000C2A  A4D8               	btfss	status,2,c
  4898  000C2C  EF1A  F006         	goto	u6051
  4899  000C30  EF1C  F006         	goto	u6050
  4900  000C34                     u6051:
  4901  000C34  EF47  F006         	goto	l5587
  4902  000C38                     u6050:
  4903  000C38                     
  4904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4905  000C38  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4906  000C3C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4907  000C40  2ADE               	incf	postinc2,f,c
  4908  000C42  0E00               	movlw	0
  4909  000C44  22DD               	addwfc	postdec2,f,c
  4910                           
  4911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4912  000C46  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4913  000C4A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4914  000C4E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4915  000C52  0E02               	movlw	2
  4916  000C54  26DE               	addwf	postinc2,f,c
  4917  000C56  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4918  000C5A  0E00               	movlw	0
  4919  000C5C  22DD               	addwfc	postdec2,f,c
  4920  000C5E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4921  000C62  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4922  000C66  CFDE F082          	movff	postinc2,vfpfcnvrt@cp
  4923  000C6A  CFDD F083          	movff	postdec2,vfpfcnvrt@cp+1
  4924  000C6E                     
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4926  000C6E  C07C  F01C         	movff	vfpfcnvrt@fp,stoa@fp
  4927  000C72  C07D  F01D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4928  000C76  C082  F01E         	movff	vfpfcnvrt@cp,stoa@s
  4929  000C7A  C083  F01F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4930  000C7E  ECAD  F011         	call	_stoa	;wreg free
  4931  000C82  C01C  F07C         	movff	?_stoa,?_vfpfcnvrt
  4932  000C86  C01D  F07D         	movff	?_stoa+1,?_vfpfcnvrt+1
  4933  000C8A  EF81  F009         	goto	l613
  4934  000C8E                     l5587:
  4935                           
  4936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  4937  000C8E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4938  000C92  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4939  000C96  CFDE F013          	movff	postinc2,strncmp@_l
  4940  000C9A  CFDD F014          	movff	postdec2,strncmp@_l+1
  4941  000C9E  0EE2               	movlw	low STR_61
  4942  000CA0  6E15               	movwf	strncmp@_r^0,c
  4943  000CA2  0EFF               	movlw	high STR_61
  4944  000CA4  6E16               	movwf	(strncmp@_r+1)^0,c
  4945  000CA6  0E00               	movlw	0
  4946  000CA8  6E18               	movwf	(strncmp@n+1)^0,c
  4947  000CAA  0E03               	movlw	3
  4948  000CAC  6E17               	movwf	strncmp@n^0,c
  4949  000CAE  ECB0  F016         	call	_strncmp	;wreg free
  4950  000CB2  5013               	movf	?_strncmp^0,w,c
  4951  000CB4  1014               	iorwf	(?_strncmp+1)^0,w,c
  4952  000CB6  A4D8               	btfss	status,2,c
  4953  000CB8  EF60  F006         	goto	u6061
  4954  000CBC  EF62  F006         	goto	u6060
  4955  000CC0                     u6061:
  4956  000CC0  EFA2  F006         	goto	l5595
  4957  000CC4                     u6060:
  4958  000CC4                     
  4959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  4960  000CC4  0E03               	movlw	3
  4961  000CC6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4962  000CCA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4963  000CCE  26DE               	addwf	postinc2,f,c
  4964  000CD0  0E00               	movlw	0
  4965  000CD2  22DD               	addwfc	postdec2,f,c
  4966                           
  4967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4968  000CD4  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4969  000CD8  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4970  000CDC  CFDF F039          	movff	indf2,??_vfpfcnvrt
  4971  000CE0  0E02               	movlw	2
  4972  000CE2  26DE               	addwf	postinc2,f,c
  4973  000CE4  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  4974  000CE8  0E00               	movlw	0
  4975  000CEA  22DD               	addwfc	postdec2,f,c
  4976  000CEC  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4977  000CF0  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4978  000CF4  50DF               	movf	indf2,w,c
  4979  000CF6  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  4980  000CF8  503B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4981  000CFA  0100               	movlb	0	; () banked
  4982  000CFC  6F95               	movwf	vfpfcnvrt@llu& (0+255),b
  4983  000CFE  6B96               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4984  000D00  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4985  000D02  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4986  000D04  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4987  000D06  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4988  000D08  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4989  000D0A  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4990  000D0C                     l5591:
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  4994  000D0C  C07C  F02E         	movff	vfpfcnvrt@fp,utoa@fp
  4995  000D10  C07D  F02F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4996  000D14  C095  F030         	movff	vfpfcnvrt@llu,utoa@d
  4997  000D18  C096  F031         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4998  000D1C  C097  F032         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4999  000D20  C098  F033         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5000  000D24  C099  F034         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5001  000D28  C09A  F035         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5002  000D2C  C09B  F036         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5003  000D30  C09C  F037         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5004  000D34  EC23  F00E         	call	_utoa	;wreg free
  5005  000D38  C02E  F07C         	movff	?_utoa,?_vfpfcnvrt
  5006  000D3C  C02F  F07D         	movff	?_utoa+1,?_vfpfcnvrt+1
  5007  000D40  EF81  F009         	goto	l613
  5008  000D44                     l5595:
  5009                           
  5010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5011  000D44  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5012  000D48  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5013  000D4C  CFDE F013          	movff	postinc2,strncmp@_l
  5014  000D50  CFDD F014          	movff	postdec2,strncmp@_l+1
  5015  000D54  0EE3               	movlw	low (STR_61+1)
  5016  000D56  6E15               	movwf	strncmp@_r^0,c
  5017  000D58  0EFF               	movlw	high (STR_61+1)
  5018  000D5A  6E16               	movwf	(strncmp@_r+1)^0,c
  5019  000D5C  0E00               	movlw	0
  5020  000D5E  6E18               	movwf	(strncmp@n+1)^0,c
  5021  000D60  0E02               	movlw	2
  5022  000D62  6E17               	movwf	strncmp@n^0,c
  5023  000D64  ECB0  F016         	call	_strncmp	;wreg free
  5024  000D68  5013               	movf	?_strncmp^0,w,c
  5025  000D6A  1014               	iorwf	(?_strncmp+1)^0,w,c
  5026  000D6C  A4D8               	btfss	status,2,c
  5027  000D6E  EFBB  F006         	goto	u6071
  5028  000D72  EFBD  F006         	goto	u6070
  5029  000D76                     u6071:
  5030  000D76  EFE6  F006         	goto	l5603
  5031  000D7A                     u6070:
  5032  000D7A                     
  5033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5034  000D7A  0E02               	movlw	2
  5035  000D7C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5036  000D80  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5037  000D84  26DE               	addwf	postinc2,f,c
  5038  000D86  0E00               	movlw	0
  5039  000D88  22DD               	addwfc	postdec2,f,c
  5040                           
  5041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5042  000D8A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5043  000D8E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5044  000D92  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5045  000D96  0E02               	movlw	2
  5046  000D98  26DE               	addwf	postinc2,f,c
  5047  000D9A  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5048  000D9E  0E00               	movlw	0
  5049  000DA0  22DD               	addwfc	postdec2,f,c
  5050  000DA2  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5051  000DA6  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5052  000DAA  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5053  000DAE  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5054  000DB2  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5055  000DB6  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5056  000DBA  0100               	movlb	0	; () banked
  5057  000DBC  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5058  000DBE  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5059  000DC0  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5060  000DC2  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5061  000DC4  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5062  000DC6  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5063  000DC8  EF86  F006         	goto	l5591
  5064  000DCC                     l5603:
  5065                           
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5067  000DCC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5068  000DD0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5069  000DD4  CFDE FFF6          	movff	postinc2,tblptrl
  5070  000DD8  CFDD FFF7          	movff	postdec2,tblptrh
  5071  000DDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5072  000DDC  6AF8               	clrf	tblptru,c
  5073  000DDE                     	endif
  5074  000DDE                     	if	0	;tblptru may be non-zero
  5075  000DDE                     	endif
  5076  000DDE  0008               	tblrd		*
  5077  000DE0  50F5               	movf	tablat,w,c
  5078  000DE2  0A75               	xorlw	117
  5079  000DE4  A4D8               	btfss	status,2,c
  5080  000DE6  EFF7  F006         	goto	u6081
  5081  000DEA  EFF9  F006         	goto	u6080
  5082  000DEE                     u6081:
  5083  000DEE  EF21  F007         	goto	l5611
  5084  000DF2                     u6080:
  5085  000DF2                     
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5087  000DF2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5088  000DF6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5089  000DFA  2ADE               	incf	postinc2,f,c
  5090  000DFC  0E00               	movlw	0
  5091  000DFE  22DD               	addwfc	postdec2,f,c
  5092                           
  5093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5094  000E00  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5095  000E04  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5096  000E08  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5097  000E0C  0E02               	movlw	2
  5098  000E0E  26DE               	addwf	postinc2,f,c
  5099  000E10  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5100  000E14  0E00               	movlw	0
  5101  000E16  22DD               	addwfc	postdec2,f,c
  5102  000E18  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5103  000E1C  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5104  000E20  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5105  000E24  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5106  000E28  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5107  000E2C  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5108  000E30  0100               	movlb	0	; () banked
  5109  000E32  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5110  000E34  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5111  000E36  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5112  000E38  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5113  000E3A  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5114  000E3C  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5115  000E3E  EF86  F006         	goto	l5591
  5116  000E42                     l5611:
  5117                           
  5118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5119  000E42  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5120  000E46  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5121  000E4A  CFDE F013          	movff	postinc2,strncmp@_l
  5122  000E4E  CFDD F014          	movff	postdec2,strncmp@_l+1
  5123  000E52  0EF9               	movlw	low STR_71
  5124  000E54  6E15               	movwf	strncmp@_r^0,c
  5125  000E56  0EFF               	movlw	high STR_71
  5126  000E58  6E16               	movwf	(strncmp@_r+1)^0,c
  5127  000E5A  0E00               	movlw	0
  5128  000E5C  6E18               	movwf	(strncmp@n+1)^0,c
  5129  000E5E  0E02               	movlw	2
  5130  000E60  6E17               	movwf	strncmp@n^0,c
  5131  000E62  ECB0  F016         	call	_strncmp	;wreg free
  5132  000E66  5013               	movf	?_strncmp^0,w,c
  5133  000E68  1014               	iorwf	(?_strncmp+1)^0,w,c
  5134  000E6A  A4D8               	btfss	status,2,c
  5135  000E6C  EF3A  F007         	goto	u6091
  5136  000E70  EF3C  F007         	goto	u6090
  5137  000E74                     u6091:
  5138  000E74  EF65  F007         	goto	l5619
  5139  000E78                     u6090:
  5140  000E78                     
  5141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5142  000E78  0E02               	movlw	2
  5143  000E7A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5144  000E7E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5145  000E82  26DE               	addwf	postinc2,f,c
  5146  000E84  0E00               	movlw	0
  5147  000E86  22DD               	addwfc	postdec2,f,c
  5148                           
  5149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5150  000E88  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5151  000E8C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5152  000E90  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5153  000E94  0E02               	movlw	2
  5154  000E96  26DE               	addwf	postinc2,f,c
  5155  000E98  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5156  000E9C  0E00               	movlw	0
  5157  000E9E  22DD               	addwfc	postdec2,f,c
  5158  000EA0  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5159  000EA4  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5160  000EA8  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5161  000EAC  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5162  000EB0  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5163  000EB4  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5164  000EB8  0100               	movlb	0	; () banked
  5165  000EBA  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5166  000EBC  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5167  000EBE  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5168  000EC0  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5169  000EC2  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5170  000EC4  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5171  000EC6  EF86  F006         	goto	l5591
  5172  000ECA                     l5619:
  5173                           
  5174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5175  000ECA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5176  000ECE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5177  000ED2  CFDE F013          	movff	postinc2,strncmp@_l
  5178  000ED6  CFDD F014          	movff	postdec2,strncmp@_l+1
  5179  000EDA  0EE6               	movlw	low STR_76
  5180  000EDC  6E15               	movwf	strncmp@_r^0,c
  5181  000EDE  0EFF               	movlw	high STR_76
  5182  000EE0  6E16               	movwf	(strncmp@_r+1)^0,c
  5183  000EE2  0E00               	movlw	0
  5184  000EE4  6E18               	movwf	(strncmp@n+1)^0,c
  5185  000EE6  0E03               	movlw	3
  5186  000EE8  6E17               	movwf	strncmp@n^0,c
  5187  000EEA  ECB0  F016         	call	_strncmp	;wreg free
  5188  000EEE  5013               	movf	?_strncmp^0,w,c
  5189  000EF0  1014               	iorwf	(?_strncmp+1)^0,w,c
  5190  000EF2  B4D8               	btfsc	status,2,c
  5191  000EF4  EF7E  F007         	goto	u6101
  5192  000EF8  EF80  F007         	goto	u6100
  5193  000EFC                     u6101:
  5194  000EFC  EF9B  F007         	goto	l5623
  5195  000F00                     u6100:
  5196  000F00  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5197  000F04  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5198  000F08  CFDE F013          	movff	postinc2,strncmp@_l
  5199  000F0C  CFDD F014          	movff	postdec2,strncmp@_l+1
  5200  000F10  0ECE               	movlw	low STR_80
  5201  000F12  6E15               	movwf	strncmp@_r^0,c
  5202  000F14  0EFF               	movlw	high STR_80
  5203  000F16  6E16               	movwf	(strncmp@_r+1)^0,c
  5204  000F18  0E00               	movlw	0
  5205  000F1A  6E18               	movwf	(strncmp@n+1)^0,c
  5206  000F1C  0E03               	movlw	3
  5207  000F1E  6E17               	movwf	strncmp@n^0,c
  5208  000F20  ECB0  F016         	call	_strncmp	;wreg free
  5209  000F24  5013               	movf	?_strncmp^0,w,c
  5210  000F26  1014               	iorwf	(?_strncmp+1)^0,w,c
  5211  000F28  A4D8               	btfss	status,2,c
  5212  000F2A  EF99  F007         	goto	u6111
  5213  000F2E  EF9B  F007         	goto	u6110
  5214  000F32                     u6111:
  5215  000F32  EFF1  F007         	goto	l5633
  5216  000F36                     u6110:
  5217  000F36                     l5623:
  5218                           
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5220  000F36  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5221  000F3A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5222  000F3E  CFDE F039          	movff	postinc2,??_vfpfcnvrt
  5223  000F42  CFDD F03A          	movff	postdec2,??_vfpfcnvrt+1
  5224  000F46  0E02               	movlw	2
  5225  000F48  2639               	addwf	??_vfpfcnvrt^0,f,c
  5226  000F4A  0E00               	movlw	0
  5227  000F4C  223A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5228  000F4E  C039  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5229  000F52  C03A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5230  000F56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5231  000F56  6AF8               	clrf	tblptru,c
  5232  000F58                     	endif
  5233  000F58                     	if	0	;tblptru may be non-zero
  5234  000F58                     	endif
  5235  000F58  0008               	tblrd		*
  5236  000F5A  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5237  000F5E                     
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5239  000F5E  0E03               	movlw	3
  5240  000F60  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5241  000F64  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5242  000F68  26DE               	addwf	postinc2,f,c
  5243  000F6A  0E00               	movlw	0
  5244  000F6C  22DD               	addwfc	postdec2,f,c
  5245  000F6E                     
  5246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5247  000F6E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5248  000F72  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5249  000F76  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5250  000F7A  0E02               	movlw	2
  5251  000F7C  26DE               	addwf	postinc2,f,c
  5252  000F7E  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5253  000F82  0E00               	movlw	0
  5254  000F84  22DD               	addwfc	postdec2,f,c
  5255  000F86  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5256  000F8A  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5257  000F8E  50DF               	movf	indf2,w,c
  5258  000F90  6E3B               	movwf	(??_vfpfcnvrt+2)^0,c
  5259  000F92  503B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5260  000F94  0100               	movlb	0	; () banked
  5261  000F96  6F95               	movwf	vfpfcnvrt@llu& (0+255),b
  5262  000F98  6B96               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5263  000F9A  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5264  000F9C  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5265  000F9E  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5266  000FA0  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5267  000FA2  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5268  000FA4  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5269  000FA6                     l5629:
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  5273  000FA6  C07C  F02E         	movff	vfpfcnvrt@fp,xtoa@fp
  5274  000FAA  C07D  F02F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5275  000FAE  C095  F030         	movff	vfpfcnvrt@llu,xtoa@d
  5276  000FB2  C096  F031         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5277  000FB6  C097  F032         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5278  000FBA  C098  F033         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5279  000FBE  C099  F034         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5280  000FC2  C09A  F035         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5281  000FC6  C09B  F036         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5282  000FCA  C09C  F037         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5283  000FCE  C094  F038         	movff	vfpfcnvrt@c,xtoa@x
  5284  000FD2  ECB6  F00C         	call	_xtoa	;wreg free
  5285  000FD6  C02E  F07C         	movff	?_xtoa,?_vfpfcnvrt
  5286  000FDA  C02F  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5287  000FDE  EF81  F009         	goto	l613
  5288  000FE2                     l5633:
  5289                           
  5290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  5291  000FE2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5292  000FE6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5293  000FEA  CFDE F013          	movff	postinc2,strncmp@_l
  5294  000FEE  CFDD F014          	movff	postdec2,strncmp@_l+1
  5295  000FF2  0EE7               	movlw	low (STR_76+1)
  5296  000FF4  6E15               	movwf	strncmp@_r^0,c
  5297  000FF6  0EFF               	movlw	high (STR_76+1)
  5298  000FF8  6E16               	movwf	(strncmp@_r+1)^0,c
  5299  000FFA  0E00               	movlw	0
  5300  000FFC  6E18               	movwf	(strncmp@n+1)^0,c
  5301  000FFE  0E02               	movlw	2
  5302  001000  6E17               	movwf	strncmp@n^0,c
  5303  001002  ECB0  F016         	call	_strncmp	;wreg free
  5304  001006  5013               	movf	?_strncmp^0,w,c
  5305  001008  1014               	iorwf	(?_strncmp+1)^0,w,c
  5306  00100A  B4D8               	btfsc	status,2,c
  5307  00100C  EF0A  F008         	goto	u6121
  5308  001010  EF0C  F008         	goto	u6120
  5309  001014                     u6121:
  5310  001014  EF27  F008         	goto	l5637
  5311  001018                     u6120:
  5312  001018  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5313  00101C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5314  001020  CFDE F013          	movff	postinc2,strncmp@_l
  5315  001024  CFDD F014          	movff	postdec2,strncmp@_l+1
  5316  001028  0ECF               	movlw	low (STR_80+1)
  5317  00102A  6E15               	movwf	strncmp@_r^0,c
  5318  00102C  0EFF               	movlw	high (STR_80+1)
  5319  00102E  6E16               	movwf	(strncmp@_r+1)^0,c
  5320  001030  0E00               	movlw	0
  5321  001032  6E18               	movwf	(strncmp@n+1)^0,c
  5322  001034  0E02               	movlw	2
  5323  001036  6E17               	movwf	strncmp@n^0,c
  5324  001038  ECB0  F016         	call	_strncmp	;wreg free
  5325  00103C  5013               	movf	?_strncmp^0,w,c
  5326  00103E  1014               	iorwf	(?_strncmp+1)^0,w,c
  5327  001040  A4D8               	btfss	status,2,c
  5328  001042  EF25  F008         	goto	u6131
  5329  001046  EF27  F008         	goto	u6130
  5330  00104A                     u6131:
  5331  00104A  EF64  F008         	goto	l5647
  5332  00104E                     u6130:
  5333  00104E                     l5637:
  5334                           
  5335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  5336  00104E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5337  001052  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5338  001056  CFDE F039          	movff	postinc2,??_vfpfcnvrt
  5339  00105A  CFDD F03A          	movff	postdec2,??_vfpfcnvrt+1
  5340  00105E  0E01               	movlw	1
  5341  001060  2639               	addwf	??_vfpfcnvrt^0,f,c
  5342  001062  0E00               	movlw	0
  5343  001064  223A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5344  001066  C039  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5345  00106A  C03A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5346  00106E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5347  00106E  6AF8               	clrf	tblptru,c
  5348  001070                     	endif
  5349  001070                     	if	0	;tblptru may be non-zero
  5350  001070                     	endif
  5351  001070  0008               	tblrd		*
  5352  001072  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5353  001076                     
  5354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5355  001076  0E02               	movlw	2
  5356  001078  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5357  00107C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5358  001080  26DE               	addwf	postinc2,f,c
  5359  001082  0E00               	movlw	0
  5360  001084  22DD               	addwfc	postdec2,f,c
  5361  001086                     
  5362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5363  001086  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5364  00108A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5365  00108E  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5366  001092  0E02               	movlw	2
  5367  001094  26DE               	addwf	postinc2,f,c
  5368  001096  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5369  00109A  0E00               	movlw	0
  5370  00109C  22DD               	addwfc	postdec2,f,c
  5371  00109E  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5372  0010A2  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5373  0010A6  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5374  0010AA  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5375  0010AE  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5376  0010B2  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5377  0010B6  0100               	movlb	0	; () banked
  5378  0010B8  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5379  0010BA  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5380  0010BC  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5381  0010BE  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5382  0010C0  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5383  0010C2  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5384  0010C4  EFD3  F007         	goto	l5629
  5385  0010C8                     l5647:
  5386                           
  5387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5388  0010C8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5389  0010CC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5390  0010D0  CFDE FFF6          	movff	postinc2,tblptrl
  5391  0010D4  CFDD FFF7          	movff	postdec2,tblptrh
  5392  0010D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5393  0010D8  6AF8               	clrf	tblptru,c
  5394  0010DA                     	endif
  5395  0010DA                     	if	0	;tblptru may be non-zero
  5396  0010DA                     	endif
  5397  0010DA  0008               	tblrd		*
  5398  0010DC  50F5               	movf	tablat,w,c
  5399  0010DE  0A78               	xorlw	120
  5400  0010E0  B4D8               	btfsc	status,2,c
  5401  0010E2  EF75  F008         	goto	u6141
  5402  0010E6  EF77  F008         	goto	u6140
  5403  0010EA                     u6141:
  5404  0010EA  EF8A  F008         	goto	l5651
  5405  0010EE                     u6140:
  5406  0010EE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5407  0010F2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5408  0010F6  CFDE FFF6          	movff	postinc2,tblptrl
  5409  0010FA  CFDD FFF7          	movff	postdec2,tblptrh
  5410  0010FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5411  0010FE  6AF8               	clrf	tblptru,c
  5412  001100                     	endif
  5413  001100                     	if	0	;tblptru may be non-zero
  5414  001100                     	endif
  5415  001100  0008               	tblrd		*
  5416  001102  50F5               	movf	tablat,w,c
  5417  001104  0A58               	xorlw	88
  5418  001106  A4D8               	btfss	status,2,c
  5419  001108  EF88  F008         	goto	u6151
  5420  00110C  EF8A  F008         	goto	u6150
  5421  001110                     u6151:
  5422  001110  EFBE  F008         	goto	l5661
  5423  001114                     u6150:
  5424  001114                     l5651:
  5425                           
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5427  001114  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5428  001118  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5429  00111C  CFDE FFF6          	movff	postinc2,tblptrl
  5430  001120  CFDD FFF7          	movff	postdec2,tblptrh
  5431  001124                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5432  001124  6AF8               	clrf	tblptru,c
  5433  001126                     	endif
  5434  001126                     	if	0	;tblptru may be non-zero
  5435  001126                     	endif
  5436  001126  0008               	tblrd		*
  5437  001128  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5438  00112C                     
  5439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5440  00112C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5441  001130  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5442  001134  2ADE               	incf	postinc2,f,c
  5443  001136  0E00               	movlw	0
  5444  001138  22DD               	addwfc	postdec2,f,c
  5445  00113A                     
  5446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5447  00113A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5448  00113E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5449  001142  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5450  001146  0E02               	movlw	2
  5451  001148  26DE               	addwf	postinc2,f,c
  5452  00114A  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5453  00114E  0E00               	movlw	0
  5454  001150  22DD               	addwfc	postdec2,f,c
  5455  001152  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5456  001156  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5457  00115A  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5458  00115E  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5459  001162  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5460  001166  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5461  00116A  0100               	movlb	0	; () banked
  5462  00116C  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5463  00116E  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5464  001170  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5465  001172  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5466  001174  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5467  001176  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5468  001178  EFD3  F007         	goto	l5629
  5469  00117C                     l5661:
  5470                           
  5471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  5472  00117C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5473  001180  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5474  001184  CFDE F013          	movff	postinc2,strncmp@_l
  5475  001188  CFDD F014          	movff	postdec2,strncmp@_l+1
  5476  00118C  0EFC               	movlw	low STR_94
  5477  00118E  6E15               	movwf	strncmp@_r^0,c
  5478  001190  0EFF               	movlw	high STR_94
  5479  001192  6E16               	movwf	(strncmp@_r+1)^0,c
  5480  001194  0E00               	movlw	0
  5481  001196  6E18               	movwf	(strncmp@n+1)^0,c
  5482  001198  0E02               	movlw	2
  5483  00119A  6E17               	movwf	strncmp@n^0,c
  5484  00119C  ECB0  F016         	call	_strncmp	;wreg free
  5485  0011A0  5013               	movf	?_strncmp^0,w,c
  5486  0011A2  1014               	iorwf	(?_strncmp+1)^0,w,c
  5487  0011A4  B4D8               	btfsc	status,2,c
  5488  0011A6  EFD7  F008         	goto	u6161
  5489  0011AA  EFD9  F008         	goto	u6160
  5490  0011AE                     u6161:
  5491  0011AE  EFF4  F008         	goto	l5665
  5492  0011B2                     u6160:
  5493  0011B2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5494  0011B6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5495  0011BA  CFDE F013          	movff	postinc2,strncmp@_l
  5496  0011BE  CFDD F014          	movff	postdec2,strncmp@_l+1
  5497  0011C2  0EEA               	movlw	low STR_98
  5498  0011C4  6E15               	movwf	strncmp@_r^0,c
  5499  0011C6  0EFF               	movlw	high STR_98
  5500  0011C8  6E16               	movwf	(strncmp@_r+1)^0,c
  5501  0011CA  0E00               	movlw	0
  5502  0011CC  6E18               	movwf	(strncmp@n+1)^0,c
  5503  0011CE  0E02               	movlw	2
  5504  0011D0  6E17               	movwf	strncmp@n^0,c
  5505  0011D2  ECB0  F016         	call	_strncmp	;wreg free
  5506  0011D6  5013               	movf	?_strncmp^0,w,c
  5507  0011D8  1014               	iorwf	(?_strncmp+1)^0,w,c
  5508  0011DA  A4D8               	btfss	status,2,c
  5509  0011DC  EFF2  F008         	goto	u6171
  5510  0011E0  EFF4  F008         	goto	u6170
  5511  0011E4                     u6171:
  5512  0011E4  EF31  F009         	goto	l5675
  5513  0011E8                     u6170:
  5514  0011E8                     l5665:
  5515                           
  5516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  5517  0011E8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5518  0011EC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5519  0011F0  CFDE F039          	movff	postinc2,??_vfpfcnvrt
  5520  0011F4  CFDD F03A          	movff	postdec2,??_vfpfcnvrt+1
  5521  0011F8  0E01               	movlw	1
  5522  0011FA  2639               	addwf	??_vfpfcnvrt^0,f,c
  5523  0011FC  0E00               	movlw	0
  5524  0011FE  223A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5525  001200  C039  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5526  001204  C03A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5527  001208                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5528  001208  6AF8               	clrf	tblptru,c
  5529  00120A                     	endif
  5530  00120A                     	if	0	;tblptru may be non-zero
  5531  00120A                     	endif
  5532  00120A  0008               	tblrd		*
  5533  00120C  CFF5 F094          	movff	tablat,vfpfcnvrt@c
  5534  001210                     
  5535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5536  001210  0E02               	movlw	2
  5537  001212  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5538  001216  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5539  00121A  26DE               	addwf	postinc2,f,c
  5540  00121C  0E00               	movlw	0
  5541  00121E  22DD               	addwfc	postdec2,f,c
  5542  001220                     
  5543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5544  001220  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5545  001224  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5546  001228  CFDF F039          	movff	indf2,??_vfpfcnvrt
  5547  00122C  0E02               	movlw	2
  5548  00122E  26DE               	addwf	postinc2,f,c
  5549  001230  CFDF F03A          	movff	indf2,??_vfpfcnvrt+1
  5550  001234  0E00               	movlw	0
  5551  001236  22DD               	addwfc	postdec2,f,c
  5552  001238  C039  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5553  00123C  C03A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5554  001240  CFDE F03B          	movff	postinc2,??_vfpfcnvrt+2
  5555  001244  CFDD F03C          	movff	postdec2,??_vfpfcnvrt+3
  5556  001248  C03B  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5557  00124C  C03C  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5558  001250  0100               	movlb	0	; () banked
  5559  001252  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5560  001254  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5561  001256  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5562  001258  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5563  00125A  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5564  00125C  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5565  00125E  EFD3  F007         	goto	l5629
  5566  001262                     l5675:
  5567                           
  5568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5569  001262  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5570  001266  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5571  00126A  CFDE FFF6          	movff	postinc2,tblptrl
  5572  00126E  CFDD FFF7          	movff	postdec2,tblptrh
  5573  001272                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5574  001272  6AF8               	clrf	tblptru,c
  5575  001274                     	endif
  5576  001274                     	if	0	;tblptru may be non-zero
  5577  001274                     	endif
  5578  001274  0008               	tblrd		*
  5579  001276  50F5               	movf	tablat,w,c
  5580  001278  0A25               	xorlw	37
  5581  00127A  A4D8               	btfss	status,2,c
  5582  00127C  EF42  F009         	goto	u6181
  5583  001280  EF44  F009         	goto	u6180
  5584  001284                     u6181:
  5585  001284  EF5C  F009         	goto	l5685
  5586  001288                     u6180:
  5587  001288                     
  5588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5589  001288  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5590  00128C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5591  001290  2ADE               	incf	postinc2,f,c
  5592  001292  0E00               	movlw	0
  5593  001294  22DD               	addwfc	postdec2,f,c
  5594  001296                     
  5595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5596  001296  0E00               	movlw	0
  5597  001298  6E14               	movwf	(fputc@c+1)^0,c
  5598  00129A  0E25               	movlw	37
  5599  00129C  6E13               	movwf	fputc@c^0,c
  5600  00129E  C07C  F015         	movff	vfpfcnvrt@fp,fputc@fp
  5601  0012A2  C07D  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5602  0012A6  EC8D  F017         	call	_fputc	;wreg free
  5603  0012AA                     l5681:
  5604                           
  5605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5606  0012AA  0E00               	movlw	0
  5607  0012AC  0100               	movlb	0	; () banked
  5608  0012AE  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5609  0012B0  0E01               	movlw	1
  5610  0012B2  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  5611  0012B4  EF81  F009         	goto	l613
  5612  0012B8                     l5685:
  5613                           
  5614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5615  0012B8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5616  0012BC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5617  0012C0  2ADE               	incf	postinc2,f,c
  5618  0012C2  0E00               	movlw	0
  5619  0012C4  22DD               	addwfc	postdec2,f,c
  5620  0012C6  EFF1  F004         	goto	l5537
  5621  0012CA                     l5691:
  5622                           
  5623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5624  0012CA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5625  0012CE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5626  0012D2  CFDE FFF6          	movff	postinc2,tblptrl
  5627  0012D6  CFDD FFF7          	movff	postdec2,tblptrh
  5628  0012DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5629  0012DA  6AF8               	clrf	tblptru,c
  5630  0012DC                     	endif
  5631  0012DC                     	if	0	;tblptru may be non-zero
  5632  0012DC                     	endif
  5633  0012DC  0008               	tblrd		*
  5634  0012DE  50F5               	movf	tablat,w,c
  5635  0012E0  6E13               	movwf	fputc@c^0,c
  5636  0012E2  6A14               	clrf	(fputc@c+1)^0,c
  5637  0012E4  C07C  F015         	movff	vfpfcnvrt@fp,fputc@fp
  5638  0012E8  C07D  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5639  0012EC  EC8D  F017         	call	_fputc	;wreg free
  5640  0012F0                     
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5642  0012F0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5643  0012F4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5644  0012F8  2ADE               	incf	postinc2,f,c
  5645  0012FA  0E00               	movlw	0
  5646  0012FC  22DD               	addwfc	postdec2,f,c
  5647  0012FE  EF55  F009         	goto	l5681
  5648  001302                     l613:
  5649  001302  0012               	return		;funcret
  5650  001304                     __end_of_vfpfcnvrt:
  5651                           	opt callstack 0
  5652                           
  5653 ;; *************** function _xtoa *****************
  5654 ;; Defined at:
  5655 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  5658 ;;		 -> vsnprintf@f(6), 
  5659 ;;  d               8   47[COMRAM] unsigned long long 
  5660 ;;  x               1   55[COMRAM] unsigned char 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  n               8   16[BANK0 ] unsigned long long 
  5663 ;;  c               2   26[BANK0 ] int 
  5664 ;;  i               2   24[BANK0 ] int 
  5665 ;;  w               2   14[BANK0 ] int 
  5666 ;;  p               2   12[BANK0 ] int 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  2   45[COMRAM] int 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5676 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;Total ram usage:       39 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    9
  5683 ;; This function calls:
  5684 ;;		_isalpha
  5685 ;;		_isupper
  5686 ;;		_pad
  5687 ;;		_toupper
  5688 ;; This function is called by:
  5689 ;;		_vfpfcnvrt
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text5
  5694  00196C                     __ptext5:
  5695                           	opt callstack 0
  5696  00196C                     _xtoa:
  5697                           	opt callstack 17
  5698  00196C                     
  5699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5700  00196C  BE42               	btfsc	(_prec+1)^0,7,c
  5701  00196E  EFBB  F00C         	goto	u5431
  5702  001972  EFBD  F00C         	goto	u5430
  5703  001976                     u5431:
  5704  001976  EFBE  F00C         	goto	l5225
  5705  00197A                     u5430:
  5706  00197A                     
  5707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5708  00197A  9243               	bcf	_flags^0,1,c
  5709  00197C                     l5225:
  5710                           
  5711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5712  00197C  BE42               	btfsc	(_prec+1)^0,7,c
  5713  00197E  EFCB  F00C         	goto	u5440
  5714  001982  5042               	movf	(_prec+1)^0,w,c
  5715  001984  E106               	bnz	u5441
  5716  001986  0441               	decf	_prec^0,w,c
  5717  001988  B0D8               	btfsc	status,0,c
  5718  00198A  EFC9  F00C         	goto	u5441
  5719  00198E  EFCB  F00C         	goto	u5440
  5720  001992                     u5441:
  5721  001992  EFD2  F00C         	goto	l551
  5722  001996                     u5440:
  5723  001996  0E00               	movlw	0
  5724  001998  0100               	movlb	0	; () banked
  5725  00199A  6F6D               	movwf	(xtoa@p+1)& (0+255),b
  5726  00199C  0E01               	movlw	1
  5727  00199E  6F6C               	movwf	xtoa@p& (0+255),b
  5728  0019A0  EFD6  F00C         	goto	l553
  5729  0019A4                     l551:
  5730  0019A4  C041  F06C         	movff	_prec,xtoa@p
  5731  0019A8  C042  F06D         	movff	_prec+1,xtoa@p+1
  5732  0019AC                     l553:
  5733                           
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5735  0019AC  C03F  F06E         	movff	_width,xtoa@w
  5736  0019B0  C040  F06F         	movff	_width+1,xtoa@w+1
  5737                           
  5738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5739  0019B4  A843               	btfss	_flags^0,4,c
  5740  0019B6  EFDF  F00C         	goto	u5451
  5741  0019BA  EFE1  F00C         	goto	u5450
  5742  0019BE                     u5451:
  5743  0019BE  EFE6  F00C         	goto	l5231
  5744  0019C2                     u5450:
  5745  0019C2                     
  5746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5747  0019C2  0100               	movlb	0	; () banked
  5748  0019C4  0EFE               	movlw	254
  5749  0019C6  276E               	addwf	xtoa@w& (0+255),f,b
  5750  0019C8  0EFF               	movlw	255
  5751  0019CA  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
  5752  0019CC                     l5231:
  5753                           
  5754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5755  0019CC  C030  F070         	movff	xtoa@d,xtoa@n
  5756  0019D0  C031  F071         	movff	xtoa@d+1,xtoa@n+1
  5757  0019D4  C032  F072         	movff	xtoa@d+2,xtoa@n+2
  5758  0019D8  C033  F073         	movff	xtoa@d+3,xtoa@n+3
  5759  0019DC  C034  F074         	movff	xtoa@d+4,xtoa@n+4
  5760  0019E0  C035  F075         	movff	xtoa@d+5,xtoa@n+5
  5761  0019E4  C036  F076         	movff	xtoa@d+6,xtoa@n+6
  5762  0019E8  C037  F077         	movff	xtoa@d+7,xtoa@n+7
  5763  0019EC                     
  5764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5765  0019EC  0E00               	movlw	0
  5766  0019EE  0100               	movlb	0	; () banked
  5767  0019F0  6F79               	movwf	(xtoa@i+1)& (0+255),b
  5768  0019F2  0E1F               	movlw	31
  5769  0019F4  6F78               	movwf	xtoa@i& (0+255),b
  5770  0019F6                     
  5771                           ; BSR set to: 0
  5772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5773  0019F6  0E00               	movlw	0
  5774  0019F8  6FEA               	movwf	(_dbuf+31)& (0+255),b
  5775                           
  5776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5777  0019FA  EFB3  F00D         	goto	l5267
  5778  0019FE                     l5237:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5782  0019FE  0778               	decf	xtoa@i& (0+255),f,b
  5783  001A00  A0D8               	btfss	status,0,c
  5784  001A02  0779               	decf	(xtoa@i+1)& (0+255),f,b
  5785  001A04                     
  5786                           ; BSR set to: 0
  5787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5788  001A04  0E0F               	movlw	15
  5789  001A06  1570               	andwf	xtoa@n& (0+255),w,b
  5790  001A08  6F7A               	movwf	xtoa@c& (0+255),b
  5791  001A0A  6B7B               	clrf	(xtoa@c+1)& (0+255),b
  5792  001A0C                     
  5793                           ; BSR set to: 0
  5794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5795  001A0C  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
  5796  001A0E  EF12  F00D         	goto	u5461
  5797  001A12  517B               	movf	(xtoa@c+1)& (0+255),w,b
  5798  001A14  E109               	bnz	u5460
  5799  001A16  0E0A               	movlw	10
  5800  001A18  5D7A               	subwf	xtoa@c& (0+255),w,b
  5801  001A1A  A0D8               	btfss	status,0,c
  5802  001A1C  EF12  F00D         	goto	u5461
  5803  001A20  EF14  F00D         	goto	u5460
  5804  001A24                     u5461:
  5805  001A24  EF1C  F00D         	goto	l5245
  5806  001A28                     u5460:
  5807  001A28                     
  5808                           ; BSR set to: 0
  5809  001A28  0E57               	movlw	87
  5810  001A2A  257A               	addwf	xtoa@c& (0+255),w,b
  5811  001A2C  6F7A               	movwf	xtoa@c& (0+255),b
  5812  001A2E  0E00               	movlw	0
  5813  001A30  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  5814  001A32  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  5815  001A34  EF22  F00D         	goto	l560
  5816  001A38                     l5245:
  5817                           
  5818                           ; BSR set to: 0
  5819  001A38  0E30               	movlw	48
  5820  001A3A  257A               	addwf	xtoa@c& (0+255),w,b
  5821  001A3C  6F7A               	movwf	xtoa@c& (0+255),b
  5822  001A3E  0E00               	movlw	0
  5823  001A40  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  5824  001A42  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  5825  001A44                     l560:
  5826                           
  5827                           ; BSR set to: 0
  5828  001A44  0EBF               	movlw	191
  5829  001A46  6F60               	movwf	??_xtoa& (0+255),b
  5830  001A48  0EFF               	movlw	255
  5831  001A4A  6F61               	movwf	(??_xtoa+1)& (0+255),b
  5832  001A4C  5038               	movf	xtoa@x^0,w,c
  5833  001A4E  6F62               	movwf	(??_xtoa+2)& (0+255),b
  5834  001A50  6B63               	clrf	(??_xtoa+3)& (0+255),b
  5835  001A52  5160               	movf	??_xtoa& (0+255),w,b
  5836  001A54  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  5837  001A56  5161               	movf	(??_xtoa+1)& (0+255),w,b
  5838  001A58  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  5839  001A5A  5163               	movf	(??_xtoa+3)& (0+255),w,b
  5840  001A5C  E10A               	bnz	u5470
  5841  001A5E  0E1A               	movlw	26
  5842  001A60  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  5843  001A62  A0D8               	btfss	status,0,c
  5844  001A64  EF36  F00D         	goto	u5471
  5845  001A68  EF39  F00D         	goto	u5470
  5846  001A6C                     u5471:
  5847  001A6C  0E01               	movlw	1
  5848  001A6E  EF3A  F00D         	goto	u5480
  5849  001A72                     u5470:
  5850  001A72  0E00               	movlw	0
  5851  001A74                     u5480:
  5852  001A74  6F68               	movwf	_xtoa$1273& (0+255),b
  5853  001A76  6B69               	clrf	(_xtoa$1273+1)& (0+255),b
  5854  001A78                     
  5855                           ; BSR set to: 0
  5856  001A78  5168               	movf	_xtoa$1273& (0+255),w,b
  5857  001A7A  1169               	iorwf	(_xtoa$1273+1)& (0+255),w,b
  5858  001A7C  B4D8               	btfsc	status,2,c
  5859  001A7E  EF43  F00D         	goto	u5491
  5860  001A82  EF45  F00D         	goto	u5490
  5861  001A86                     u5491:
  5862  001A86  EF75  F00D         	goto	l5259
  5863  001A8A                     u5490:
  5864  001A8A                     
  5865                           ; BSR set to: 0
  5866  001A8A  0E9F               	movlw	159
  5867  001A8C  6F60               	movwf	??_xtoa& (0+255),b
  5868  001A8E  0EFF               	movlw	255
  5869  001A90  6F61               	movwf	(??_xtoa+1)& (0+255),b
  5870  001A92  0E20               	movlw	32
  5871  001A94  117A               	iorwf	xtoa@c& (0+255),w,b
  5872  001A96  6F62               	movwf	(??_xtoa+2)& (0+255),b
  5873  001A98  0E00               	movlw	0
  5874  001A9A  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
  5875  001A9C  6F63               	movwf	(??_xtoa+3)& (0+255),b
  5876  001A9E  5160               	movf	??_xtoa& (0+255),w,b
  5877  001AA0  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  5878  001AA2  5161               	movf	(??_xtoa+1)& (0+255),w,b
  5879  001AA4  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  5880  001AA6  5163               	movf	(??_xtoa+3)& (0+255),w,b
  5881  001AA8  E10A               	bnz	u5500
  5882  001AAA  0E1A               	movlw	26
  5883  001AAC  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  5884  001AAE  A0D8               	btfss	status,0,c
  5885  001AB0  EF5C  F00D         	goto	u5501
  5886  001AB4  EF5F  F00D         	goto	u5500
  5887  001AB8                     u5501:
  5888  001AB8  0E01               	movlw	1
  5889  001ABA  EF60  F00D         	goto	u5510
  5890  001ABE                     u5500:
  5891  001ABE  0E00               	movlw	0
  5892  001AC0                     u5510:
  5893  001AC0  6F6A               	movwf	_xtoa$1274& (0+255),b
  5894  001AC2  6B6B               	clrf	(_xtoa$1274+1)& (0+255),b
  5895  001AC4                     
  5896                           ; BSR set to: 0
  5897  001AC4  516A               	movf	_xtoa$1274& (0+255),w,b
  5898  001AC6  116B               	iorwf	(_xtoa$1274+1)& (0+255),w,b
  5899  001AC8  B4D8               	btfsc	status,2,c
  5900  001ACA  EF69  F00D         	goto	u5521
  5901  001ACE  EF6B  F00D         	goto	u5520
  5902  001AD2                     u5521:
  5903  001AD2  EF75  F00D         	goto	l5259
  5904  001AD6                     u5520:
  5905  001AD6                     
  5906                           ; BSR set to: 0
  5907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5908  001AD6  C07A  F019         	movff	xtoa@c,toupper@c
  5909  001ADA  C07B  F01A         	movff	xtoa@c+1,toupper@c+1
  5910  001ADE  EC80  F019         	call	_toupper	;wreg free
  5911  001AE2  C019  F07A         	movff	?_toupper,xtoa@c
  5912  001AE6  C01A  F07B         	movff	?_toupper+1,xtoa@c+1
  5913  001AEA                     l5259:
  5914                           
  5915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5916  001AEA  0ECB               	movlw	low _dbuf
  5917  001AEC  0100               	movlb	0	; () banked
  5918  001AEE  2578               	addwf	xtoa@i& (0+255),w,b
  5919  001AF0  6ED9               	movwf	fsr2l,c
  5920  001AF2  0E00               	movlw	high _dbuf
  5921  001AF4  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  5922  001AF6  6EDA               	movwf	fsr2h,c
  5923  001AF8  C07A  FFDF         	movff	xtoa@c,indf2
  5924  001AFC                     
  5925                           ; BSR set to: 0
  5926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5927  001AFC  076C               	decf	xtoa@p& (0+255),f,b
  5928  001AFE  A0D8               	btfss	status,0,c
  5929  001B00  076D               	decf	(xtoa@p+1)& (0+255),f,b
  5930  001B02                     
  5931                           ; BSR set to: 0
  5932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  5933  001B02  076E               	decf	xtoa@w& (0+255),f,b
  5934  001B04  A0D8               	btfss	status,0,c
  5935  001B06  076F               	decf	(xtoa@w+1)& (0+255),f,b
  5936  001B08                     
  5937                           ; BSR set to: 0
  5938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  5939  001B08  C070  F060         	movff	xtoa@n,??_xtoa
  5940  001B0C  C071  F061         	movff	xtoa@n+1,??_xtoa+1
  5941  001B10  C072  F062         	movff	xtoa@n+2,??_xtoa+2
  5942  001B14  C073  F063         	movff	xtoa@n+3,??_xtoa+3
  5943  001B18  C074  F064         	movff	xtoa@n+4,??_xtoa+4
  5944  001B1C  C075  F065         	movff	xtoa@n+5,??_xtoa+5
  5945  001B20  C076  F066         	movff	xtoa@n+6,??_xtoa+6
  5946  001B24  C077  F067         	movff	xtoa@n+7,??_xtoa+7
  5947  001B28  0E05               	movlw	5
  5948  001B2A  EFA0  F00D         	goto	u5530
  5949  001B2E                     u5535:
  5950  001B2E  90D8               	bcf	status,0,c
  5951  001B30  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
  5952  001B32  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
  5953  001B34  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
  5954  001B36  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
  5955  001B38  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
  5956  001B3A  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
  5957  001B3C  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
  5958  001B3E  3360               	rrcf	??_xtoa& (0+255),f,b
  5959  001B40                     u5530:
  5960  001B40  2EE8               	decfsz	wreg,f,c
  5961  001B42  EF97  F00D         	goto	u5535
  5962  001B46  C060  F070         	movff	??_xtoa,xtoa@n
  5963  001B4A  C061  F071         	movff	??_xtoa+1,xtoa@n+1
  5964  001B4E  C062  F072         	movff	??_xtoa+2,xtoa@n+2
  5965  001B52  C063  F073         	movff	??_xtoa+3,xtoa@n+3
  5966  001B56  C064  F074         	movff	??_xtoa+4,xtoa@n+4
  5967  001B5A  C065  F075         	movff	??_xtoa+5,xtoa@n+5
  5968  001B5E  C066  F076         	movff	??_xtoa+6,xtoa@n+6
  5969  001B62  C067  F077         	movff	??_xtoa+7,xtoa@n+7
  5970  001B66                     l5267:
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5974  001B66  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
  5975  001B68  EFBF  F00D         	goto	u5541
  5976  001B6C  5179               	movf	(xtoa@i+1)& (0+255),w,b
  5977  001B6E  E109               	bnz	u5540
  5978  001B70  0E02               	movlw	2
  5979  001B72  5D78               	subwf	xtoa@i& (0+255),w,b
  5980  001B74  A0D8               	btfss	status,0,c
  5981  001B76  EFBF  F00D         	goto	u5541
  5982  001B7A  EFC1  F00D         	goto	u5540
  5983  001B7E                     u5541:
  5984  001B7E  EFF1  F00D         	goto	l574
  5985  001B82                     u5540:
  5986  001B82                     
  5987                           ; BSR set to: 0
  5988  001B82  5170               	movf	xtoa@n& (0+255),w,b
  5989  001B84  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
  5990  001B86  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
  5991  001B88  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
  5992  001B8A  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
  5993  001B8C  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
  5994  001B8E  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
  5995  001B90  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
  5996  001B92  A4D8               	btfss	status,2,c
  5997  001B94  EFCE  F00D         	goto	u5551
  5998  001B98  EFD0  F00D         	goto	u5550
  5999  001B9C                     u5551:
  6000  001B9C  EFFF  F00C         	goto	l5237
  6001  001BA0                     u5550:
  6002  001BA0                     
  6003                           ; BSR set to: 0
  6004  001BA0  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
  6005  001BA2  EFDD  F00D         	goto	u5560
  6006  001BA6  516D               	movf	(xtoa@p+1)& (0+255),w,b
  6007  001BA8  E106               	bnz	u5561
  6008  001BAA  056C               	decf	xtoa@p& (0+255),w,b
  6009  001BAC  B0D8               	btfsc	status,0,c
  6010  001BAE  EFDB  F00D         	goto	u5561
  6011  001BB2  EFDD  F00D         	goto	u5560
  6012  001BB6                     u5561:
  6013  001BB6  EFFF  F00C         	goto	l5237
  6014  001BBA                     u5560:
  6015  001BBA                     
  6016                           ; BSR set to: 0
  6017  001BBA  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
  6018  001BBC  EFE8  F00D         	goto	u5571
  6019  001BC0  516F               	movf	(xtoa@w+1)& (0+255),w,b
  6020  001BC2  E108               	bnz	u5570
  6021  001BC4  056E               	decf	xtoa@w& (0+255),w,b
  6022  001BC6  A0D8               	btfss	status,0,c
  6023  001BC8  EFE8  F00D         	goto	u5571
  6024  001BCC  EFEA  F00D         	goto	u5570
  6025  001BD0                     u5571:
  6026  001BD0  EFF1  F00D         	goto	l574
  6027  001BD4                     u5570:
  6028  001BD4                     
  6029                           ; BSR set to: 0
  6030  001BD4  B243               	btfsc	_flags^0,1,c
  6031  001BD6  EFEF  F00D         	goto	u5581
  6032  001BDA  EFF1  F00D         	goto	u5580
  6033  001BDE                     u5581:
  6034  001BDE  EFFF  F00C         	goto	l5237
  6035  001BE2                     u5580:
  6036  001BE2                     l574:
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6040  001BE2  A843               	btfss	_flags^0,4,c
  6041  001BE4  EFF6  F00D         	goto	u5591
  6042  001BE8  EFF8  F00D         	goto	u5590
  6043  001BEC                     u5591:
  6044  001BEC  EF0E  F00E         	goto	l5283
  6045  001BF0                     u5590:
  6046  001BF0                     
  6047                           ; BSR set to: 0
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6049  001BF0  0778               	decf	xtoa@i& (0+255),f,b
  6050  001BF2  A0D8               	btfss	status,0,c
  6051  001BF4  0779               	decf	(xtoa@i+1)& (0+255),f,b
  6052  001BF6                     
  6053                           ; BSR set to: 0
  6054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6055  001BF6  0ECB               	movlw	low _dbuf
  6056  001BF8  2578               	addwf	xtoa@i& (0+255),w,b
  6057  001BFA  6ED9               	movwf	fsr2l,c
  6058  001BFC  0E00               	movlw	high _dbuf
  6059  001BFE  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  6060  001C00  6EDA               	movwf	fsr2h,c
  6061  001C02  C038  FFDF         	movff	xtoa@x,indf2
  6062  001C06                     
  6063                           ; BSR set to: 0
  6064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6065  001C06  0778               	decf	xtoa@i& (0+255),f,b
  6066  001C08  A0D8               	btfss	status,0,c
  6067  001C0A  0779               	decf	(xtoa@i+1)& (0+255),f,b
  6068                           
  6069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6070  001C0C  0ECB               	movlw	low _dbuf
  6071  001C0E  2578               	addwf	xtoa@i& (0+255),w,b
  6072  001C10  6ED9               	movwf	fsr2l,c
  6073  001C12  0E00               	movlw	high _dbuf
  6074  001C14  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  6075  001C16  6EDA               	movwf	fsr2h,c
  6076  001C18  0E30               	movlw	48
  6077  001C1A  6EDF               	movwf	indf2,c
  6078  001C1C                     l5283:
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6082  001C1C  C02E  F023         	movff	xtoa@fp,pad@fp
  6083  001C20  C02F  F024         	movff	xtoa@fp+1,pad@fp+1
  6084  001C24  0ECB               	movlw	low _dbuf
  6085  001C26  2578               	addwf	xtoa@i& (0+255),w,b
  6086  001C28  6E25               	movwf	pad@buf^0,c
  6087  001C2A  0E00               	movlw	high _dbuf
  6088  001C2C  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  6089  001C2E  6E26               	movwf	(pad@buf+1)^0,c
  6090  001C30  C06E  F027         	movff	xtoa@w,pad@p
  6091  001C34  C06F  F028         	movff	xtoa@w+1,pad@p+1
  6092  001C38  EC54  F018         	call	_pad	;wreg free
  6093  001C3C  C023  F02E         	movff	?_pad,?_xtoa
  6094  001C40  C024  F02F         	movff	?_pad+1,?_xtoa+1
  6095  001C44  0012               	return		;funcret
  6096  001C46                     __end_of_xtoa:
  6097                           	opt callstack 0
  6098                           
  6099 ;; *************** function _toupper *****************
  6100 ;; Defined at:
  6101 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  c               2   24[COMRAM] int 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  2   24[COMRAM] int 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;Total ram usage:        8 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    6
  6122 ;; This function calls:
  6123 ;;		_islower
  6124 ;; This function is called by:
  6125 ;;		_xtoa
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text6
  6130  003300                     __ptext6:
  6131                           	opt callstack 0
  6132  003300                     _toupper:
  6133                           	opt callstack 19
  6134  003300  0E9F               	movlw	159
  6135  003302  6E1B               	movwf	??_toupper^0,c
  6136  003304  0EFF               	movlw	255
  6137  003306  6E1C               	movwf	(??_toupper+1)^0,c
  6138  003308  C019  F01D         	movff	toupper@c,??_toupper+2
  6139  00330C  C01A  F01E         	movff	toupper@c+1,??_toupper+3
  6140  003310  501B               	movf	??_toupper^0,w,c
  6141  003312  261D               	addwf	(??_toupper+2)^0,f,c
  6142  003314  501C               	movf	(??_toupper+1)^0,w,c
  6143  003316  221E               	addwfc	(??_toupper+3)^0,f,c
  6144  003318  501E               	movf	(??_toupper+3)^0,w,c
  6145  00331A  E10A               	bnz	u4730
  6146  00331C  0E1A               	movlw	26
  6147  00331E  5C1D               	subwf	(??_toupper+2)^0,w,c
  6148  003320  A0D8               	btfss	status,0,c
  6149  003322  EF95  F019         	goto	u4731
  6150  003326  EF98  F019         	goto	u4730
  6151  00332A                     u4731:
  6152  00332A  0E01               	movlw	1
  6153  00332C  EF99  F019         	goto	u4740
  6154  003330                     u4730:
  6155  003330  0E00               	movlw	0
  6156  003332                     u4740:
  6157  003332  6E1F               	movwf	_toupper$1957^0,c
  6158  003334  6A20               	clrf	(_toupper$1957+1)^0,c
  6159  003336  501F               	movf	_toupper$1957^0,w,c
  6160  003338  1020               	iorwf	(_toupper$1957+1)^0,w,c
  6161  00333A  B4D8               	btfsc	status,2,c
  6162  00333C  EFA2  F019         	goto	u4751
  6163  003340  EFA4  F019         	goto	u4750
  6164  003344                     u4751:
  6165  003344  EFAA  F019         	goto	l1446
  6166  003348                     u4750:
  6167  003348  0E5F               	movlw	95
  6168  00334A  1419               	andwf	toupper@c^0,w,c
  6169  00334C  6E19               	movwf	?_toupper^0,c
  6170  00334E  6A1A               	clrf	(?_toupper+1)^0,c
  6171  003350  EFAE  F019         	goto	l1451
  6172  003354                     l1446:
  6173  003354  C019  F019         	movff	toupper@c,?_toupper
  6174  003358  C01A  F01A         	movff	toupper@c+1,?_toupper+1
  6175  00335C                     l1451:
  6176  00335C  0012               	return		;funcret
  6177  00335E                     __end_of_toupper:
  6178                           	opt callstack 0
  6179                           
  6180 ;; *************** function _islower *****************
  6181 ;; Defined at:
  6182 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  c               2   18[COMRAM] int 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  2   18[COMRAM] int 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;Total ram usage:        6 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    5
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_toupper
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text7
  6211  003676                     __ptext7:
  6212                           	opt callstack 0
  6213  003676                     _islower:
  6214                           	opt callstack 19
  6215  003676  0E9F               	movlw	159
  6216  003678  6E15               	movwf	??_islower^0,c
  6217  00367A  0EFF               	movlw	255
  6218  00367C  6E16               	movwf	(??_islower+1)^0,c
  6219  00367E  C013  F017         	movff	islower@c,??_islower+2
  6220  003682  C014  F018         	movff	islower@c+1,??_islower+3
  6221  003686  5015               	movf	??_islower^0,w,c
  6222  003688  2617               	addwf	(??_islower+2)^0,f,c
  6223  00368A  5016               	movf	(??_islower+1)^0,w,c
  6224  00368C  2218               	addwfc	(??_islower+3)^0,f,c
  6225  00368E  5018               	movf	(??_islower+3)^0,w,c
  6226  003690  E10A               	bnz	u4610
  6227  003692  0E1A               	movlw	26
  6228  003694  5C17               	subwf	(??_islower+2)^0,w,c
  6229  003696  A0D8               	btfss	status,0,c
  6230  003698  EF50  F01B         	goto	u4611
  6231  00369C  EF53  F01B         	goto	u4610
  6232  0036A0                     u4611:
  6233  0036A0  0E01               	movlw	1
  6234  0036A2  EF54  F01B         	goto	u4620
  6235  0036A6                     u4610:
  6236  0036A6  0E00               	movlw	0
  6237  0036A8                     u4620:
  6238  0036A8  6E13               	movwf	?_islower^0,c
  6239  0036AA  6A14               	clrf	(?_islower+1)^0,c
  6240  0036AC  0012               	return		;funcret
  6241  0036AE                     __end_of_islower:
  6242                           	opt callstack 0
  6243                           
  6244 ;; *************** function _isupper *****************
  6245 ;; Defined at:
  6246 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  c               2   18[COMRAM] int 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  2   18[COMRAM] int 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;Total ram usage:        6 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    5
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_xtoa
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text8
  6275  0036AE                     __ptext8:
  6276                           	opt callstack 0
  6277  0036AE                     _isupper:
  6278                           	opt callstack 20
  6279  0036AE  0EBF               	movlw	191
  6280  0036B0  6E15               	movwf	??_isupper^0,c
  6281  0036B2  0EFF               	movlw	255
  6282  0036B4  6E16               	movwf	(??_isupper+1)^0,c
  6283  0036B6  C013  F017         	movff	isupper@c,??_isupper+2
  6284  0036BA  C014  F018         	movff	isupper@c+1,??_isupper+3
  6285  0036BE  5015               	movf	??_isupper^0,w,c
  6286  0036C0  2617               	addwf	(??_isupper+2)^0,f,c
  6287  0036C2  5016               	movf	(??_isupper+1)^0,w,c
  6288  0036C4  2218               	addwfc	(??_isupper+3)^0,f,c
  6289  0036C6  5018               	movf	(??_isupper+3)^0,w,c
  6290  0036C8  E10A               	bnz	u4690
  6291  0036CA  0E1A               	movlw	26
  6292  0036CC  5C17               	subwf	(??_isupper+2)^0,w,c
  6293  0036CE  A0D8               	btfss	status,0,c
  6294  0036D0  EF6C  F01B         	goto	u4691
  6295  0036D4  EF6F  F01B         	goto	u4690
  6296  0036D8                     u4691:
  6297  0036D8  0E01               	movlw	1
  6298  0036DA  EF70  F01B         	goto	u4700
  6299  0036DE                     u4690:
  6300  0036DE  0E00               	movlw	0
  6301  0036E0                     u4700:
  6302  0036E0  6E13               	movwf	?_isupper^0,c
  6303  0036E2  6A14               	clrf	(?_isupper+1)^0,c
  6304  0036E4  0012               	return		;funcret
  6305  0036E6                     __end_of_isupper:
  6306                           	opt callstack 0
  6307                           
  6308 ;; *************** function _isalpha *****************
  6309 ;; Defined at:
  6310 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  c               2   18[COMRAM] int 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  2   18[COMRAM] int 
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6328 ;;Total ram usage:        6 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    5
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_xtoa
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text9
  6339  00363A                     __ptext9:
  6340                           	opt callstack 0
  6341  00363A                     _isalpha:
  6342                           	opt callstack 20
  6343  00363A  0E9F               	movlw	159
  6344  00363C  6E15               	movwf	??_isalpha^0,c
  6345  00363E  0EFF               	movlw	255
  6346  003640  6E16               	movwf	(??_isalpha+1)^0,c
  6347  003642  0E20               	movlw	32
  6348  003644  1013               	iorwf	isalpha@c^0,w,c
  6349  003646  6E17               	movwf	(??_isalpha+2)^0,c
  6350  003648  0E00               	movlw	0
  6351  00364A  1014               	iorwf	(isalpha@c+1)^0,w,c
  6352  00364C  6E18               	movwf	(??_isalpha+3)^0,c
  6353  00364E  5015               	movf	??_isalpha^0,w,c
  6354  003650  2617               	addwf	(??_isalpha+2)^0,f,c
  6355  003652  5016               	movf	(??_isalpha+1)^0,w,c
  6356  003654  2218               	addwfc	(??_isalpha+3)^0,f,c
  6357  003656  5018               	movf	(??_isalpha+3)^0,w,c
  6358  003658  E10A               	bnz	u4710
  6359  00365A  0E1A               	movlw	26
  6360  00365C  5C17               	subwf	(??_isalpha+2)^0,w,c
  6361  00365E  A0D8               	btfss	status,0,c
  6362  003660  EF34  F01B         	goto	u4711
  6363  003664  EF37  F01B         	goto	u4710
  6364  003668                     u4711:
  6365  003668  0E01               	movlw	1
  6366  00366A  EF38  F01B         	goto	u4720
  6367  00366E                     u4710:
  6368  00366E  0E00               	movlw	0
  6369  003670                     u4720:
  6370  003670  6E13               	movwf	?_isalpha^0,c
  6371  003672  6A14               	clrf	(?_isalpha+1)^0,c
  6372  003674  0012               	return		;funcret
  6373  003676                     __end_of_isalpha:
  6374                           	opt callstack 0
  6375                           
  6376 ;; *************** function _utoa *****************
  6377 ;; Defined at:
  6378 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  6381 ;;		 -> vsnprintf@f(6), 
  6382 ;;  d               8   47[COMRAM] unsigned long long 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  n               8   12[BANK0 ] unsigned long long 
  6385 ;;  i               2   20[BANK0 ] int 
  6386 ;;  w               2   10[BANK0 ] int 
  6387 ;;  p               2    8[BANK0 ] int 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  2   45[COMRAM] int 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6397 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6398 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6400 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;Total ram usage:       32 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    9
  6404 ;; This function calls:
  6405 ;;		___lodiv
  6406 ;;		___lomod
  6407 ;;		_pad
  6408 ;; This function is called by:
  6409 ;;		_vfpfcnvrt
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text10
  6414  001C46                     __ptext10:
  6415                           	opt callstack 0
  6416  001C46                     _utoa:
  6417                           	opt callstack 17
  6418  001C46                     
  6419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6420  001C46  BE42               	btfsc	(_prec+1)^0,7,c
  6421  001C48  EF28  F00E         	goto	u5361
  6422  001C4C  EF2A  F00E         	goto	u5360
  6423  001C50                     u5361:
  6424  001C50  EF2B  F00E         	goto	l5189
  6425  001C54                     u5360:
  6426  001C54                     
  6427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6428  001C54  9243               	bcf	_flags^0,1,c
  6429  001C56                     l5189:
  6430                           
  6431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6432  001C56  BE42               	btfsc	(_prec+1)^0,7,c
  6433  001C58  EF38  F00E         	goto	u5370
  6434  001C5C  5042               	movf	(_prec+1)^0,w,c
  6435  001C5E  E106               	bnz	u5371
  6436  001C60  0441               	decf	_prec^0,w,c
  6437  001C62  B0D8               	btfsc	status,0,c
  6438  001C64  EF36  F00E         	goto	u5371
  6439  001C68  EF38  F00E         	goto	u5370
  6440  001C6C                     u5371:
  6441  001C6C  EF3F  F00E         	goto	l536
  6442  001C70                     u5370:
  6443  001C70  0E00               	movlw	0
  6444  001C72  0100               	movlb	0	; () banked
  6445  001C74  6F69               	movwf	(utoa@p+1)& (0+255),b
  6446  001C76  0E01               	movlw	1
  6447  001C78  6F68               	movwf	utoa@p& (0+255),b
  6448  001C7A  EF43  F00E         	goto	l538
  6449  001C7E                     l536:
  6450  001C7E  C041  F068         	movff	_prec,utoa@p
  6451  001C82  C042  F069         	movff	_prec+1,utoa@p+1
  6452  001C86                     l538:
  6453                           
  6454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6455  001C86  C03F  F06A         	movff	_width,utoa@w
  6456  001C8A  C040  F06B         	movff	_width+1,utoa@w+1
  6457                           
  6458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6459  001C8E  C030  F06C         	movff	utoa@d,utoa@n
  6460  001C92  C031  F06D         	movff	utoa@d+1,utoa@n+1
  6461  001C96  C032  F06E         	movff	utoa@d+2,utoa@n+2
  6462  001C9A  C033  F06F         	movff	utoa@d+3,utoa@n+3
  6463  001C9E  C034  F070         	movff	utoa@d+4,utoa@n+4
  6464  001CA2  C035  F071         	movff	utoa@d+5,utoa@n+5
  6465  001CA6  C036  F072         	movff	utoa@d+6,utoa@n+6
  6466  001CAA  C037  F073         	movff	utoa@d+7,utoa@n+7
  6467  001CAE                     
  6468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6469  001CAE  0E00               	movlw	0
  6470  001CB0  0100               	movlb	0	; () banked
  6471  001CB2  6F75               	movwf	(utoa@i+1)& (0+255),b
  6472  001CB4  0E1F               	movlw	31
  6473  001CB6  6F74               	movwf	utoa@i& (0+255),b
  6474  001CB8                     
  6475                           ; BSR set to: 0
  6476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6477  001CB8  0E00               	movlw	0
  6478  001CBA  6FEA               	movwf	(_dbuf+31)& (0+255),b
  6479                           
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6481  001CBC  EFD7  F00E         	goto	l5207
  6482  001CC0                     l5197:
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6486  001CC0  0774               	decf	utoa@i& (0+255),f,b
  6487  001CC2  A0D8               	btfss	status,0,c
  6488  001CC4  0775               	decf	(utoa@i+1)& (0+255),f,b
  6489  001CC6                     
  6490                           ; BSR set to: 0
  6491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6492  001CC6  0ECB               	movlw	low _dbuf
  6493  001CC8  2574               	addwf	utoa@i& (0+255),w,b
  6494  001CCA  6ED9               	movwf	fsr2l,c
  6495  001CCC  0E00               	movlw	high _dbuf
  6496  001CCE  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  6497  001CD0  6EDA               	movwf	fsr2h,c
  6498  001CD2  C06C  F013         	movff	utoa@n,___lomod@dividend
  6499  001CD6  C06D  F014         	movff	utoa@n+1,___lomod@dividend+1
  6500  001CDA  C06E  F015         	movff	utoa@n+2,___lomod@dividend+2
  6501  001CDE  C06F  F016         	movff	utoa@n+3,___lomod@dividend+3
  6502  001CE2  C070  F017         	movff	utoa@n+4,___lomod@dividend+4
  6503  001CE6  C071  F018         	movff	utoa@n+5,___lomod@dividend+5
  6504  001CEA  C072  F019         	movff	utoa@n+6,___lomod@dividend+6
  6505  001CEE  C073  F01A         	movff	utoa@n+7,___lomod@dividend+7
  6506  001CF2  0E0A               	movlw	10
  6507  001CF4  6E1B               	movwf	___lomod@divisor^0,c
  6508  001CF6  0E00               	movlw	0
  6509  001CF8  6E1C               	movwf	(___lomod@divisor+1)^0,c
  6510  001CFA  0E00               	movlw	0
  6511  001CFC  6E1D               	movwf	(___lomod@divisor+2)^0,c
  6512  001CFE  0E00               	movlw	0
  6513  001D00  6E1E               	movwf	(___lomod@divisor+3)^0,c
  6514  001D02  0E00               	movlw	0
  6515  001D04  6E1F               	movwf	(___lomod@divisor+4)^0,c
  6516  001D06  0E00               	movlw	0
  6517  001D08  6E20               	movwf	(___lomod@divisor+5)^0,c
  6518  001D0A  0E00               	movlw	0
  6519  001D0C  6E21               	movwf	(___lomod@divisor+6)^0,c
  6520  001D0E  0E00               	movlw	0
  6521  001D10  6E22               	movwf	(___lomod@divisor+7)^0,c
  6522  001D12  EC25  F017         	call	___lomod	;wreg free
  6523  001D16  C013  F060         	movff	?___lomod,??_utoa
  6524  001D1A  C014  F061         	movff	?___lomod+1,??_utoa+1
  6525  001D1E  C015  F062         	movff	?___lomod+2,??_utoa+2
  6526  001D22  C016  F063         	movff	?___lomod+3,??_utoa+3
  6527  001D26  C017  F064         	movff	?___lomod+4,??_utoa+4
  6528  001D2A  C018  F065         	movff	?___lomod+5,??_utoa+5
  6529  001D2E  C019  F066         	movff	?___lomod+6,??_utoa+6
  6530  001D32  C01A  F067         	movff	?___lomod+7,??_utoa+7
  6531  001D36  0100               	movlb	0	; () banked
  6532  001D38  5160               	movf	??_utoa& (0+255),w,b
  6533  001D3A  0F30               	addlw	48
  6534  001D3C  6EDF               	movwf	indf2,c
  6535  001D3E                     
  6536                           ; BSR set to: 0
  6537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6538  001D3E  0768               	decf	utoa@p& (0+255),f,b
  6539  001D40  A0D8               	btfss	status,0,c
  6540  001D42  0769               	decf	(utoa@p+1)& (0+255),f,b
  6541  001D44                     
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6544  001D44  076A               	decf	utoa@w& (0+255),f,b
  6545  001D46  A0D8               	btfss	status,0,c
  6546  001D48  076B               	decf	(utoa@w+1)& (0+255),f,b
  6547  001D4A                     
  6548                           ; BSR set to: 0
  6549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6550  001D4A  C06C  F013         	movff	utoa@n,___lodiv@dividend
  6551  001D4E  C06D  F014         	movff	utoa@n+1,___lodiv@dividend+1
  6552  001D52  C06E  F015         	movff	utoa@n+2,___lodiv@dividend+2
  6553  001D56  C06F  F016         	movff	utoa@n+3,___lodiv@dividend+3
  6554  001D5A  C070  F017         	movff	utoa@n+4,___lodiv@dividend+4
  6555  001D5E  C071  F018         	movff	utoa@n+5,___lodiv@dividend+5
  6556  001D62  C072  F019         	movff	utoa@n+6,___lodiv@dividend+6
  6557  001D66  C073  F01A         	movff	utoa@n+7,___lodiv@dividend+7
  6558  001D6A  0E0A               	movlw	10
  6559  001D6C  6E1B               	movwf	___lodiv@divisor^0,c
  6560  001D6E  0E00               	movlw	0
  6561  001D70  6E1C               	movwf	(___lodiv@divisor+1)^0,c
  6562  001D72  0E00               	movlw	0
  6563  001D74  6E1D               	movwf	(___lodiv@divisor+2)^0,c
  6564  001D76  0E00               	movlw	0
  6565  001D78  6E1E               	movwf	(___lodiv@divisor+3)^0,c
  6566  001D7A  0E00               	movlw	0
  6567  001D7C  6E1F               	movwf	(___lodiv@divisor+4)^0,c
  6568  001D7E  0E00               	movlw	0
  6569  001D80  6E20               	movwf	(___lodiv@divisor+5)^0,c
  6570  001D82  0E00               	movlw	0
  6571  001D84  6E21               	movwf	(___lodiv@divisor+6)^0,c
  6572  001D86  0E00               	movlw	0
  6573  001D88  6E22               	movwf	(___lodiv@divisor+7)^0,c
  6574  001D8A  EC38  F016         	call	___lodiv	;wreg free
  6575  001D8E  C013  F06C         	movff	?___lodiv,utoa@n
  6576  001D92  C014  F06D         	movff	?___lodiv+1,utoa@n+1
  6577  001D96  C015  F06E         	movff	?___lodiv+2,utoa@n+2
  6578  001D9A  C016  F06F         	movff	?___lodiv+3,utoa@n+3
  6579  001D9E  C017  F070         	movff	?___lodiv+4,utoa@n+4
  6580  001DA2  C018  F071         	movff	?___lodiv+5,utoa@n+5
  6581  001DA6  C019  F072         	movff	?___lodiv+6,utoa@n+6
  6582  001DAA  C01A  F073         	movff	?___lodiv+7,utoa@n+7
  6583  001DAE                     l5207:
  6584                           
  6585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6586  001DAE  0100               	movlb	0	; () banked
  6587  001DB0  5174               	movf	utoa@i& (0+255),w,b
  6588  001DB2  1175               	iorwf	(utoa@i+1)& (0+255),w,b
  6589  001DB4  B4D8               	btfsc	status,2,c
  6590  001DB6  EFDF  F00E         	goto	u5381
  6591  001DBA  EFE1  F00E         	goto	u5380
  6592  001DBE                     u5381:
  6593  001DBE  EF11  F00F         	goto	l5217
  6594  001DC2                     u5380:
  6595  001DC2                     
  6596                           ; BSR set to: 0
  6597  001DC2  516C               	movf	utoa@n& (0+255),w,b
  6598  001DC4  116D               	iorwf	(utoa@n+1)& (0+255),w,b
  6599  001DC6  116E               	iorwf	(utoa@n+2)& (0+255),w,b
  6600  001DC8  116F               	iorwf	(utoa@n+3)& (0+255),w,b
  6601  001DCA  1170               	iorwf	(utoa@n+4)& (0+255),w,b
  6602  001DCC  1171               	iorwf	(utoa@n+5)& (0+255),w,b
  6603  001DCE  1172               	iorwf	(utoa@n+6)& (0+255),w,b
  6604  001DD0  1173               	iorwf	(utoa@n+7)& (0+255),w,b
  6605  001DD2  A4D8               	btfss	status,2,c
  6606  001DD4  EFEE  F00E         	goto	u5391
  6607  001DD8  EFF0  F00E         	goto	u5390
  6608  001DDC                     u5391:
  6609  001DDC  EF60  F00E         	goto	l5197
  6610  001DE0                     u5390:
  6611  001DE0                     
  6612                           ; BSR set to: 0
  6613  001DE0  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
  6614  001DE2  EFFD  F00E         	goto	u5400
  6615  001DE6  5169               	movf	(utoa@p+1)& (0+255),w,b
  6616  001DE8  E106               	bnz	u5401
  6617  001DEA  0568               	decf	utoa@p& (0+255),w,b
  6618  001DEC  B0D8               	btfsc	status,0,c
  6619  001DEE  EFFB  F00E         	goto	u5401
  6620  001DF2  EFFD  F00E         	goto	u5400
  6621  001DF6                     u5401:
  6622  001DF6  EF60  F00E         	goto	l5197
  6623  001DFA                     u5400:
  6624  001DFA                     
  6625                           ; BSR set to: 0
  6626  001DFA  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
  6627  001DFC  EF08  F00F         	goto	u5411
  6628  001E00  516B               	movf	(utoa@w+1)& (0+255),w,b
  6629  001E02  E108               	bnz	u5410
  6630  001E04  056A               	decf	utoa@w& (0+255),w,b
  6631  001E06  A0D8               	btfss	status,0,c
  6632  001E08  EF08  F00F         	goto	u5411
  6633  001E0C  EF0A  F00F         	goto	u5410
  6634  001E10                     u5411:
  6635  001E10  EF11  F00F         	goto	l5217
  6636  001E14                     u5410:
  6637  001E14                     
  6638                           ; BSR set to: 0
  6639  001E14  B243               	btfsc	_flags^0,1,c
  6640  001E16  EF0F  F00F         	goto	u5421
  6641  001E1A  EF11  F00F         	goto	u5420
  6642  001E1E                     u5421:
  6643  001E1E  EF60  F00E         	goto	l5197
  6644  001E22                     u5420:
  6645  001E22                     l5217:
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6649  001E22  C02E  F023         	movff	utoa@fp,pad@fp
  6650  001E26  C02F  F024         	movff	utoa@fp+1,pad@fp+1
  6651  001E2A  0ECB               	movlw	low _dbuf
  6652  001E2C  2574               	addwf	utoa@i& (0+255),w,b
  6653  001E2E  6E25               	movwf	pad@buf^0,c
  6654  001E30  0E00               	movlw	high _dbuf
  6655  001E32  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  6656  001E34  6E26               	movwf	(pad@buf+1)^0,c
  6657  001E36  C06A  F027         	movff	utoa@w,pad@p
  6658  001E3A  C06B  F028         	movff	utoa@w+1,pad@p+1
  6659  001E3E  EC54  F018         	call	_pad	;wreg free
  6660  001E42  C023  F02E         	movff	?_pad,?_utoa
  6661  001E46  C024  F02F         	movff	?_pad+1,?_utoa+1
  6662  001E4A  0012               	return		;funcret
  6663  001E4C                     __end_of_utoa:
  6664                           	opt callstack 0
  6665                           
  6666 ;; *************** function ___lomod *****************
  6667 ;; Defined at:
  6668 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  dividend        8   18[COMRAM] unsigned long long 
  6671 ;;  divisor         8   26[COMRAM] unsigned long long 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  counter         1   34[COMRAM] unsigned char 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  8   18[COMRAM] unsigned long long 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6683 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6686 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6687 ;;Total ram usage:       17 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    5
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_utoa
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text11
  6698  002E4A                     __ptext11:
  6699                           	opt callstack 0
  6700  002E4A                     ___lomod:
  6701                           	opt callstack 20
  6702  002E4A  501B               	movf	___lomod@divisor^0,w,c
  6703  002E4C  101C               	iorwf	(___lomod@divisor+1)^0,w,c
  6704  002E4E  101D               	iorwf	(___lomod@divisor+2)^0,w,c
  6705  002E50  101E               	iorwf	(___lomod@divisor+3)^0,w,c
  6706  002E52  101F               	iorwf	(___lomod@divisor+4)^0,w,c
  6707  002E54  1020               	iorwf	(___lomod@divisor+5)^0,w,c
  6708  002E56  1021               	iorwf	(___lomod@divisor+6)^0,w,c
  6709  002E58  1022               	iorwf	(___lomod@divisor+7)^0,w,c
  6710  002E5A  B4D8               	btfsc	status,2,c
  6711  002E5C  EF32  F017         	goto	u4951
  6712  002E60  EF34  F017         	goto	u4950
  6713  002E64                     u4951:
  6714  002E64  EF7C  F017         	goto	l1109
  6715  002E68                     u4950:
  6716  002E68  0E01               	movlw	1
  6717  002E6A  6E23               	movwf	___lomod@counter^0,c
  6718  002E6C  EF42  F017         	goto	l4989
  6719  002E70                     l4987:
  6720  002E70  90D8               	bcf	status,0,c
  6721  002E72  361B               	rlcf	___lomod@divisor^0,f,c
  6722  002E74  361C               	rlcf	(___lomod@divisor+1)^0,f,c
  6723  002E76  361D               	rlcf	(___lomod@divisor+2)^0,f,c
  6724  002E78  361E               	rlcf	(___lomod@divisor+3)^0,f,c
  6725  002E7A  361F               	rlcf	(___lomod@divisor+4)^0,f,c
  6726  002E7C  3620               	rlcf	(___lomod@divisor+5)^0,f,c
  6727  002E7E  3621               	rlcf	(___lomod@divisor+6)^0,f,c
  6728  002E80  3622               	rlcf	(___lomod@divisor+7)^0,f,c
  6729  002E82  2A23               	incf	___lomod@counter^0,f,c
  6730  002E84                     l4989:
  6731  002E84  AE22               	btfss	(___lomod@divisor+7)^0,7,c
  6732  002E86  EF47  F017         	goto	u4961
  6733  002E8A  EF49  F017         	goto	u4960
  6734  002E8E                     u4961:
  6735  002E8E  EF38  F017         	goto	l4987
  6736  002E92                     u4960:
  6737  002E92                     l4991:
  6738  002E92  501B               	movf	___lomod@divisor^0,w,c
  6739  002E94  5C13               	subwf	___lomod@dividend^0,w,c
  6740  002E96  501C               	movf	(___lomod@divisor+1)^0,w,c
  6741  002E98  5814               	subwfb	(___lomod@dividend+1)^0,w,c
  6742  002E9A  501D               	movf	(___lomod@divisor+2)^0,w,c
  6743  002E9C  5815               	subwfb	(___lomod@dividend+2)^0,w,c
  6744  002E9E  501E               	movf	(___lomod@divisor+3)^0,w,c
  6745  002EA0  5816               	subwfb	(___lomod@dividend+3)^0,w,c
  6746  002EA2  501F               	movf	(___lomod@divisor+4)^0,w,c
  6747  002EA4  5817               	subwfb	(___lomod@dividend+4)^0,w,c
  6748  002EA6  5020               	movf	(___lomod@divisor+5)^0,w,c
  6749  002EA8  5818               	subwfb	(___lomod@dividend+5)^0,w,c
  6750  002EAA  5021               	movf	(___lomod@divisor+6)^0,w,c
  6751  002EAC  5819               	subwfb	(___lomod@dividend+6)^0,w,c
  6752  002EAE  5022               	movf	(___lomod@divisor+7)^0,w,c
  6753  002EB0  581A               	subwfb	(___lomod@dividend+7)^0,w,c
  6754  002EB2  A0D8               	btfss	status,0,c
  6755  002EB4  EF5E  F017         	goto	u4971
  6756  002EB8  EF60  F017         	goto	u4970
  6757  002EBC                     u4971:
  6758  002EBC  EF70  F017         	goto	l4995
  6759  002EC0                     u4970:
  6760  002EC0  501B               	movf	___lomod@divisor^0,w,c
  6761  002EC2  5E13               	subwf	___lomod@dividend^0,f,c
  6762  002EC4  501C               	movf	(___lomod@divisor+1)^0,w,c
  6763  002EC6  5A14               	subwfb	(___lomod@dividend+1)^0,f,c
  6764  002EC8  501D               	movf	(___lomod@divisor+2)^0,w,c
  6765  002ECA  5A15               	subwfb	(___lomod@dividend+2)^0,f,c
  6766  002ECC  501E               	movf	(___lomod@divisor+3)^0,w,c
  6767  002ECE  5A16               	subwfb	(___lomod@dividend+3)^0,f,c
  6768  002ED0  501F               	movf	(___lomod@divisor+4)^0,w,c
  6769  002ED2  5A17               	subwfb	(___lomod@dividend+4)^0,f,c
  6770  002ED4  5020               	movf	(___lomod@divisor+5)^0,w,c
  6771  002ED6  5A18               	subwfb	(___lomod@dividend+5)^0,f,c
  6772  002ED8  5021               	movf	(___lomod@divisor+6)^0,w,c
  6773  002EDA  5A19               	subwfb	(___lomod@dividend+6)^0,f,c
  6774  002EDC  5022               	movf	(___lomod@divisor+7)^0,w,c
  6775  002EDE  5A1A               	subwfb	(___lomod@dividend+7)^0,f,c
  6776  002EE0                     l4995:
  6777  002EE0  90D8               	bcf	status,0,c
  6778  002EE2  3222               	rrcf	(___lomod@divisor+7)^0,f,c
  6779  002EE4  3221               	rrcf	(___lomod@divisor+6)^0,f,c
  6780  002EE6  3220               	rrcf	(___lomod@divisor+5)^0,f,c
  6781  002EE8  321F               	rrcf	(___lomod@divisor+4)^0,f,c
  6782  002EEA  321E               	rrcf	(___lomod@divisor+3)^0,f,c
  6783  002EEC  321D               	rrcf	(___lomod@divisor+2)^0,f,c
  6784  002EEE  321C               	rrcf	(___lomod@divisor+1)^0,f,c
  6785  002EF0  321B               	rrcf	___lomod@divisor^0,f,c
  6786  002EF2  2E23               	decfsz	___lomod@counter^0,f,c
  6787  002EF4  EF49  F017         	goto	l4991
  6788  002EF8                     l1109:
  6789  002EF8  C013  F013         	movff	___lomod@dividend,?___lomod
  6790  002EFC  C014  F014         	movff	___lomod@dividend+1,?___lomod+1
  6791  002F00  C015  F015         	movff	___lomod@dividend+2,?___lomod+2
  6792  002F04  C016  F016         	movff	___lomod@dividend+3,?___lomod+3
  6793  002F08  C017  F017         	movff	___lomod@dividend+4,?___lomod+4
  6794  002F0C  C018  F018         	movff	___lomod@dividend+5,?___lomod+5
  6795  002F10  C019  F019         	movff	___lomod@dividend+6,?___lomod+6
  6796  002F14  C01A  F01A         	movff	___lomod@dividend+7,?___lomod+7
  6797  002F18  0012               	return		;funcret
  6798  002F1A                     __end_of___lomod:
  6799                           	opt callstack 0
  6800                           
  6801 ;; *************** function ___lodiv *****************
  6802 ;; Defined at:
  6803 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  dividend        8   18[COMRAM] unsigned long long 
  6806 ;;  divisor         8   26[COMRAM] unsigned long long 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  quotient        8   34[COMRAM] unsigned long long 
  6809 ;;  counter         1   42[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  8   18[COMRAM] unsigned long long 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6819 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;Total ram usage:       25 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    5
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_utoa
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text12
  6834  002C70                     __ptext12:
  6835                           	opt callstack 0
  6836  002C70                     ___lodiv:
  6837                           	opt callstack 20
  6838  002C70  EE20  F023         	lfsr	2,___lodiv@quotient
  6839  002C74  0E07               	movlw	7
  6840  002C76                     u4911:
  6841  002C76  6ADE               	clrf	postinc2,c
  6842  002C78  06E8               	decf	wreg,f,c
  6843  002C7A  E2FD               	bc	u4911
  6844  002C7C  501B               	movf	___lodiv@divisor^0,w,c
  6845  002C7E  101C               	iorwf	(___lodiv@divisor+1)^0,w,c
  6846  002C80  101D               	iorwf	(___lodiv@divisor+2)^0,w,c
  6847  002C82  101E               	iorwf	(___lodiv@divisor+3)^0,w,c
  6848  002C84  101F               	iorwf	(___lodiv@divisor+4)^0,w,c
  6849  002C86  1020               	iorwf	(___lodiv@divisor+5)^0,w,c
  6850  002C88  1021               	iorwf	(___lodiv@divisor+6)^0,w,c
  6851  002C8A  1022               	iorwf	(___lodiv@divisor+7)^0,w,c
  6852  002C8C  B4D8               	btfsc	status,2,c
  6853  002C8E  EF4B  F016         	goto	u4921
  6854  002C92  EF4D  F016         	goto	u4920
  6855  002C96                     u4921:
  6856  002C96  EF9F  F016         	goto	l1099
  6857  002C9A                     u4920:
  6858  002C9A  0E01               	movlw	1
  6859  002C9C  6E2B               	movwf	___lodiv@counter^0,c
  6860  002C9E  EF5B  F016         	goto	l4969
  6861  002CA2                     l4967:
  6862  002CA2  90D8               	bcf	status,0,c
  6863  002CA4  361B               	rlcf	___lodiv@divisor^0,f,c
  6864  002CA6  361C               	rlcf	(___lodiv@divisor+1)^0,f,c
  6865  002CA8  361D               	rlcf	(___lodiv@divisor+2)^0,f,c
  6866  002CAA  361E               	rlcf	(___lodiv@divisor+3)^0,f,c
  6867  002CAC  361F               	rlcf	(___lodiv@divisor+4)^0,f,c
  6868  002CAE  3620               	rlcf	(___lodiv@divisor+5)^0,f,c
  6869  002CB0  3621               	rlcf	(___lodiv@divisor+6)^0,f,c
  6870  002CB2  3622               	rlcf	(___lodiv@divisor+7)^0,f,c
  6871  002CB4  2A2B               	incf	___lodiv@counter^0,f,c
  6872  002CB6                     l4969:
  6873  002CB6  AE22               	btfss	(___lodiv@divisor+7)^0,7,c
  6874  002CB8  EF60  F016         	goto	u4931
  6875  002CBC  EF62  F016         	goto	u4930
  6876  002CC0                     u4931:
  6877  002CC0  EF51  F016         	goto	l4967
  6878  002CC4                     u4930:
  6879  002CC4                     l4971:
  6880  002CC4  90D8               	bcf	status,0,c
  6881  002CC6  3623               	rlcf	___lodiv@quotient^0,f,c
  6882  002CC8  3624               	rlcf	(___lodiv@quotient+1)^0,f,c
  6883  002CCA  3625               	rlcf	(___lodiv@quotient+2)^0,f,c
  6884  002CCC  3626               	rlcf	(___lodiv@quotient+3)^0,f,c
  6885  002CCE  3627               	rlcf	(___lodiv@quotient+4)^0,f,c
  6886  002CD0  3628               	rlcf	(___lodiv@quotient+5)^0,f,c
  6887  002CD2  3629               	rlcf	(___lodiv@quotient+6)^0,f,c
  6888  002CD4  362A               	rlcf	(___lodiv@quotient+7)^0,f,c
  6889  002CD6  501B               	movf	___lodiv@divisor^0,w,c
  6890  002CD8  5C13               	subwf	___lodiv@dividend^0,w,c
  6891  002CDA  501C               	movf	(___lodiv@divisor+1)^0,w,c
  6892  002CDC  5814               	subwfb	(___lodiv@dividend+1)^0,w,c
  6893  002CDE  501D               	movf	(___lodiv@divisor+2)^0,w,c
  6894  002CE0  5815               	subwfb	(___lodiv@dividend+2)^0,w,c
  6895  002CE2  501E               	movf	(___lodiv@divisor+3)^0,w,c
  6896  002CE4  5816               	subwfb	(___lodiv@dividend+3)^0,w,c
  6897  002CE6  501F               	movf	(___lodiv@divisor+4)^0,w,c
  6898  002CE8  5817               	subwfb	(___lodiv@dividend+4)^0,w,c
  6899  002CEA  5020               	movf	(___lodiv@divisor+5)^0,w,c
  6900  002CEC  5818               	subwfb	(___lodiv@dividend+5)^0,w,c
  6901  002CEE  5021               	movf	(___lodiv@divisor+6)^0,w,c
  6902  002CF0  5819               	subwfb	(___lodiv@dividend+6)^0,w,c
  6903  002CF2  5022               	movf	(___lodiv@divisor+7)^0,w,c
  6904  002CF4  581A               	subwfb	(___lodiv@dividend+7)^0,w,c
  6905  002CF6  A0D8               	btfss	status,0,c
  6906  002CF8  EF80  F016         	goto	u4941
  6907  002CFC  EF82  F016         	goto	u4940
  6908  002D00                     u4941:
  6909  002D00  EF93  F016         	goto	l4979
  6910  002D04                     u4940:
  6911  002D04  501B               	movf	___lodiv@divisor^0,w,c
  6912  002D06  5E13               	subwf	___lodiv@dividend^0,f,c
  6913  002D08  501C               	movf	(___lodiv@divisor+1)^0,w,c
  6914  002D0A  5A14               	subwfb	(___lodiv@dividend+1)^0,f,c
  6915  002D0C  501D               	movf	(___lodiv@divisor+2)^0,w,c
  6916  002D0E  5A15               	subwfb	(___lodiv@dividend+2)^0,f,c
  6917  002D10  501E               	movf	(___lodiv@divisor+3)^0,w,c
  6918  002D12  5A16               	subwfb	(___lodiv@dividend+3)^0,f,c
  6919  002D14  501F               	movf	(___lodiv@divisor+4)^0,w,c
  6920  002D16  5A17               	subwfb	(___lodiv@dividend+4)^0,f,c
  6921  002D18  5020               	movf	(___lodiv@divisor+5)^0,w,c
  6922  002D1A  5A18               	subwfb	(___lodiv@dividend+5)^0,f,c
  6923  002D1C  5021               	movf	(___lodiv@divisor+6)^0,w,c
  6924  002D1E  5A19               	subwfb	(___lodiv@dividend+6)^0,f,c
  6925  002D20  5022               	movf	(___lodiv@divisor+7)^0,w,c
  6926  002D22  5A1A               	subwfb	(___lodiv@dividend+7)^0,f,c
  6927  002D24  8023               	bsf	___lodiv@quotient^0,0,c
  6928  002D26                     l4979:
  6929  002D26  90D8               	bcf	status,0,c
  6930  002D28  3222               	rrcf	(___lodiv@divisor+7)^0,f,c
  6931  002D2A  3221               	rrcf	(___lodiv@divisor+6)^0,f,c
  6932  002D2C  3220               	rrcf	(___lodiv@divisor+5)^0,f,c
  6933  002D2E  321F               	rrcf	(___lodiv@divisor+4)^0,f,c
  6934  002D30  321E               	rrcf	(___lodiv@divisor+3)^0,f,c
  6935  002D32  321D               	rrcf	(___lodiv@divisor+2)^0,f,c
  6936  002D34  321C               	rrcf	(___lodiv@divisor+1)^0,f,c
  6937  002D36  321B               	rrcf	___lodiv@divisor^0,f,c
  6938  002D38  2E2B               	decfsz	___lodiv@counter^0,f,c
  6939  002D3A  EF62  F016         	goto	l4971
  6940  002D3E                     l1099:
  6941  002D3E  C023  F013         	movff	___lodiv@quotient,?___lodiv
  6942  002D42  C024  F014         	movff	___lodiv@quotient+1,?___lodiv+1
  6943  002D46  C025  F015         	movff	___lodiv@quotient+2,?___lodiv+2
  6944  002D4A  C026  F016         	movff	___lodiv@quotient+3,?___lodiv+3
  6945  002D4E  C027  F017         	movff	___lodiv@quotient+4,?___lodiv+4
  6946  002D52  C028  F018         	movff	___lodiv@quotient+5,?___lodiv+5
  6947  002D56  C029  F019         	movff	___lodiv@quotient+6,?___lodiv+6
  6948  002D5A  C02A  F01A         	movff	___lodiv@quotient+7,?___lodiv+7
  6949  002D5E  0012               	return		;funcret
  6950  002D60                     __end_of___lodiv:
  6951                           	opt callstack 0
  6952                           
  6953 ;; *************** function _strncmp *****************
  6954 ;; Defined at:
  6955 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  _l              2   18[COMRAM] PTR const unsigned char 
  6958 ;;		 -> STR_3(17), 
  6959 ;;  _r              2   20[COMRAM] PTR const unsigned char 
  6960 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  6961 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  6962 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  6963 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  6964 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  6965 ;;		 -> STR_6(4), 
  6966 ;;  n               2   22[COMRAM] unsigned int 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  r               2   27[COMRAM] PTR const unsigned char 
  6969 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  6970 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  6971 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  6972 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  6973 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  6974 ;;		 -> STR_6(4), 
  6975 ;;  l               2   25[COMRAM] PTR const unsigned char 
  6976 ;;		 -> STR_3(17), 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  2   18[COMRAM] int 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6986 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6990 ;;Total ram usage:       11 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    5
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_vfpfcnvrt
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text13
  7001  002D60                     __ptext13:
  7002                           	opt callstack 0
  7003  002D60                     _strncmp:
  7004                           	opt callstack 21
  7005  002D60  C013  F01A         	movff	strncmp@_l,strncmp@l
  7006  002D64  C014  F01B         	movff	strncmp@_l+1,strncmp@l+1
  7007  002D68  C015  F01C         	movff	strncmp@_r,strncmp@r
  7008  002D6C  C016  F01D         	movff	strncmp@_r+1,strncmp@r+1
  7009  002D70  0617               	decf	strncmp@n^0,f,c
  7010  002D72  A0D8               	btfss	status,0,c
  7011  002D74  0618               	decf	(strncmp@n+1)^0,f,c
  7012  002D76  2817               	incf	strncmp@n^0,w,c
  7013  002D78  E106               	bnz	u5671
  7014  002D7A  2818               	incf	(strncmp@n+1)^0,w,c
  7015  002D7C  A4D8               	btfss	status,2,c
  7016  002D7E  EFC3  F016         	goto	u5671
  7017  002D82  EFC5  F016         	goto	u5670
  7018  002D86                     u5671:
  7019  002D86  EFD2  F016         	goto	l5337
  7020  002D8A                     u5670:
  7021  002D8A  0E00               	movlw	0
  7022  002D8C  6E14               	movwf	(?_strncmp+1)^0,c
  7023  002D8E  0E00               	movlw	0
  7024  002D90  6E13               	movwf	?_strncmp^0,c
  7025  002D92  EF24  F017         	goto	l1436
  7026  002D96                     l5335:
  7027  002D96  4A1A               	infsnz	strncmp@l^0,f,c
  7028  002D98  2A1B               	incf	(strncmp@l+1)^0,f,c
  7029  002D9A  4A1C               	infsnz	strncmp@r^0,f,c
  7030  002D9C  2A1D               	incf	(strncmp@r+1)^0,f,c
  7031  002D9E  0617               	decf	strncmp@n^0,f,c
  7032  002DA0  A0D8               	btfss	status,0,c
  7033  002DA2  0618               	decf	(strncmp@n+1)^0,f,c
  7034  002DA4                     l5337:
  7035  002DA4  C01A  FFF6         	movff	strncmp@l,tblptrl
  7036  002DA8  C01B  FFF7         	movff	strncmp@l+1,tblptrh
  7037  002DAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7038  002DAC  6AF8               	clrf	tblptru,c
  7039  002DAE                     	endif
  7040  002DAE                     	if	0	;tblptru may be non-zero
  7041  002DAE                     	endif
  7042  002DAE  0008               	tblrd		*
  7043  002DB0  50F5               	movf	tablat,w,c
  7044  002DB2  0900               	iorlw	0
  7045  002DB4  B4D8               	btfsc	status,2,c
  7046  002DB6  EFDF  F016         	goto	u5681
  7047  002DBA  EFE1  F016         	goto	u5680
  7048  002DBE                     u5681:
  7049  002DBE  EF10  F017         	goto	l5345
  7050  002DC2                     u5680:
  7051  002DC2  C01C  FFF6         	movff	strncmp@r,tblptrl
  7052  002DC6  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  7053  002DCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7054  002DCA  6AF8               	clrf	tblptru,c
  7055  002DCC                     	endif
  7056  002DCC                     	if	0	;tblptru may be non-zero
  7057  002DCC                     	endif
  7058  002DCC  0008               	tblrd		*
  7059  002DCE  50F5               	movf	tablat,w,c
  7060  002DD0  0900               	iorlw	0
  7061  002DD2  B4D8               	btfsc	status,2,c
  7062  002DD4  EFEE  F016         	goto	u5691
  7063  002DD8  EFF0  F016         	goto	u5690
  7064  002DDC                     u5691:
  7065  002DDC  EF10  F017         	goto	l5345
  7066  002DE0                     u5690:
  7067  002DE0  5017               	movf	strncmp@n^0,w,c
  7068  002DE2  1018               	iorwf	(strncmp@n+1)^0,w,c
  7069  002DE4  B4D8               	btfsc	status,2,c
  7070  002DE6  EFF7  F016         	goto	u5701
  7071  002DEA  EFF9  F016         	goto	u5700
  7072  002DEE                     u5701:
  7073  002DEE  EF10  F017         	goto	l5345
  7074  002DF2                     u5700:
  7075  002DF2  C01A  FFF6         	movff	strncmp@l,tblptrl
  7076  002DF6  C01B  FFF7         	movff	strncmp@l+1,tblptrh
  7077  002DFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7078  002DFA  6AF8               	clrf	tblptru,c
  7079  002DFC                     	endif
  7080  002DFC                     	if	0	;tblptru may be non-zero
  7081  002DFC                     	endif
  7082  002DFC  0008               	tblrd		*
  7083  002DFE  CFF5 F019          	movff	tablat,??_strncmp
  7084  002E02  C01C  FFF6         	movff	strncmp@r,tblptrl
  7085  002E06  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  7086  002E0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7087  002E0A  6AF8               	clrf	tblptru,c
  7088  002E0C                     	endif
  7089  002E0C                     	if	0	;tblptru may be non-zero
  7090  002E0C                     	endif
  7091  002E0C  0008               	tblrd		*
  7092  002E0E  50F5               	movf	tablat,w,c
  7093  002E10  1819               	xorwf	??_strncmp^0,w,c
  7094  002E12  B4D8               	btfsc	status,2,c
  7095  002E14  EF0E  F017         	goto	u5711
  7096  002E18  EF10  F017         	goto	u5710
  7097  002E1C                     u5711:
  7098  002E1C  EFCB  F016         	goto	l5335
  7099  002E20                     u5710:
  7100  002E20                     l5345:
  7101  002E20  C01A  FFF6         	movff	strncmp@l,tblptrl
  7102  002E24  C01B  FFF7         	movff	strncmp@l+1,tblptrh
  7103  002E28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7104  002E28  6AF8               	clrf	tblptru,c
  7105  002E2A                     	endif
  7106  002E2A                     	if	0	;tblptru may be non-zero
  7107  002E2A                     	endif
  7108  002E2A  0008               	tblrd		*
  7109  002E2C  CFF5 F019          	movff	tablat,??_strncmp
  7110  002E30  C01C  FFF6         	movff	strncmp@r,tblptrl
  7111  002E34  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  7112  002E38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7113  002E38  6AF8               	clrf	tblptru,c
  7114  002E3A                     	endif
  7115  002E3A                     	if	0	;tblptru may be non-zero
  7116  002E3A                     	endif
  7117  002E3A  0008               	tblrd		*
  7118  002E3C  50F5               	movf	tablat,w,c
  7119  002E3E  5C19               	subwf	??_strncmp^0,w,c
  7120  002E40  6E13               	movwf	?_strncmp^0,c
  7121  002E42  6A14               	clrf	(?_strncmp+1)^0,c
  7122  002E44  A0D8               	btfss	status,0,c
  7123  002E46  0614               	decf	(?_strncmp+1)^0,f,c
  7124  002E48                     l1436:
  7125  002E48  0012               	return		;funcret
  7126  002E4A                     __end_of_strncmp:
  7127                           	opt callstack 0
  7128                           
  7129 ;; *************** function _stoa *****************
  7130 ;; Defined at:
  7131 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7134 ;;		 -> vsnprintf@f(6), 
  7135 ;;  s               2   29[COMRAM] PTR unsigned char 
  7136 ;;		 -> ?_snprintf(2), codigo_digital(2), 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  nuls            7   32[COMRAM] unsigned char [7]
  7139 ;;  l               2   47[COMRAM] int 
  7140 ;;  p               2   45[COMRAM] int 
  7141 ;;  cp              2   43[COMRAM] PTR unsigned char 
  7142 ;;		 -> ?_snprintf(2), stoa@nuls(7), codigo_digital(2), 
  7143 ;;  w               2   41[COMRAM] int 
  7144 ;;  i               2   39[COMRAM] int 
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  2   27[COMRAM] int 
  7147 ;; Registers used:
  7148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;Total ram usage:       22 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    7
  7161 ;; This function calls:
  7162 ;;		_fputc
  7163 ;;		_strlen
  7164 ;; This function is called by:
  7165 ;;		_vfpfcnvrt
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text14
  7170  00235A                     __ptext14:
  7171                           	opt callstack 0
  7172  00235A                     _stoa:
  7173                           	opt callstack 19
  7174  00235A                     
  7175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7176  00235A  EE20  F0EB         	lfsr	2,stoa@F1152
  7177  00235E  EE10  F021         	lfsr	1,stoa@nuls
  7178  002362  0E06               	movlw	6
  7179  002364                     u5271:
  7180  002364  CFDB FFE3          	movff	plusw2,plusw1
  7181  002368  06E8               	decf	wreg,f,c
  7182  00236A  E2FC               	bc	u5271
  7183  00236C                     
  7184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7185  00236C  C01E  F02C         	movff	stoa@s,stoa@cp
  7186  002370  C01F  F02D         	movff	stoa@s+1,stoa@cp+1
  7187  002374                     
  7188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7189  002374  502C               	movf	stoa@cp^0,w,c
  7190  002376  102D               	iorwf	(stoa@cp+1)^0,w,c
  7191  002378  A4D8               	btfss	status,2,c
  7192  00237A  EFC1  F011         	goto	u5281
  7193  00237E  EFC3  F011         	goto	u5280
  7194  002382                     u5281:
  7195  002382  EFC7  F011         	goto	l5151
  7196  002386                     u5280:
  7197  002386                     
  7198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7199  002386  0E21               	movlw	low stoa@nuls
  7200  002388  6E2C               	movwf	stoa@cp^0,c
  7201  00238A  0E00               	movlw	high stoa@nuls
  7202  00238C  6E2D               	movwf	(stoa@cp+1)^0,c
  7203  00238E                     l5151:
  7204                           
  7205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7206  00238E  C02C  F013         	movff	stoa@cp,strlen@s
  7207  002392  C02D  F014         	movff	stoa@cp+1,strlen@s+1
  7208  002396  EC8F  F01B         	call	_strlen	;wreg free
  7209  00239A  C013  F030         	movff	?_strlen,stoa@l
  7210  00239E  C014  F031         	movff	?_strlen+1,stoa@l+1
  7211  0023A2                     
  7212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7213  0023A2  C041  F02E         	movff	_prec,stoa@p
  7214  0023A6  C042  F02F         	movff	_prec+1,stoa@p+1
  7215  0023AA                     
  7216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7217  0023AA  BE2F               	btfsc	(stoa@p+1)^0,7,c
  7218  0023AC  EFDA  F011         	goto	u5291
  7219  0023B0  EFDC  F011         	goto	u5290
  7220  0023B4                     u5291:
  7221  0023B4  EFF1  F011         	goto	l517
  7222  0023B8                     u5290:
  7223  0023B8  5030               	movf	stoa@l^0,w,c
  7224  0023BA  5C2E               	subwf	stoa@p^0,w,c
  7225  0023BC  502F               	movf	(stoa@p+1)^0,w,c
  7226  0023BE  0A80               	xorlw	128
  7227  0023C0  6E20               	movwf	??_stoa^0,c
  7228  0023C2  5031               	movf	(stoa@l+1)^0,w,c
  7229  0023C4  0A80               	xorlw	128
  7230  0023C6  5820               	subwfb	??_stoa^0,w,c
  7231  0023C8  A0D8               	btfss	status,0,c
  7232  0023CA  EFE9  F011         	goto	u5301
  7233  0023CE  EFEB  F011         	goto	u5300
  7234  0023D2                     u5301:
  7235  0023D2  EFED  F011         	goto	l515
  7236  0023D6                     u5300:
  7237  0023D6  EFF1  F011         	goto	l517
  7238  0023DA                     l515:
  7239  0023DA  C02E  F030         	movff	stoa@p,stoa@l
  7240  0023DE  C02F  F031         	movff	stoa@p+1,stoa@l+1
  7241  0023E2                     l517:
  7242                           
  7243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7244  0023E2  C030  F02E         	movff	stoa@l,stoa@p
  7245  0023E6  C031  F02F         	movff	stoa@l+1,stoa@p+1
  7246                           
  7247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7248  0023EA  C03F  F02A         	movff	_width,stoa@w
  7249  0023EE  C040  F02B         	movff	_width+1,stoa@w+1
  7250                           
  7251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7252  0023F2  B043               	btfsc	_flags^0,0,c
  7253  0023F4  EFFE  F011         	goto	u5311
  7254  0023F8  EF00  F012         	goto	u5310
  7255  0023FC                     u5311:
  7256  0023FC  EF1D  F012         	goto	l5167
  7257  002400                     u5310:
  7258  002400  EF0E  F012         	goto	l5165
  7259  002404                     l5161:
  7260                           
  7261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7262  002404  0E00               	movlw	0
  7263  002406  6E14               	movwf	(fputc@c+1)^0,c
  7264  002408  0E20               	movlw	32
  7265  00240A  6E13               	movwf	fputc@c^0,c
  7266  00240C  C01C  F015         	movff	stoa@fp,fputc@fp
  7267  002410  C01D  F016         	movff	stoa@fp+1,fputc@fp+1
  7268  002414  EC8D  F017         	call	_fputc	;wreg free
  7269  002418                     
  7270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7271  002418  4A30               	infsnz	stoa@l^0,f,c
  7272  00241A  2A31               	incf	(stoa@l+1)^0,f,c
  7273  00241C                     l5165:
  7274                           
  7275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7276  00241C  502A               	movf	stoa@w^0,w,c
  7277  00241E  5C30               	subwf	stoa@l^0,w,c
  7278  002420  5031               	movf	(stoa@l+1)^0,w,c
  7279  002422  0A80               	xorlw	128
  7280  002424  6E20               	movwf	??_stoa^0,c
  7281  002426  502B               	movf	(stoa@w+1)^0,w,c
  7282  002428  0A80               	xorlw	128
  7283  00242A  5820               	subwfb	??_stoa^0,w,c
  7284  00242C  A0D8               	btfss	status,0,c
  7285  00242E  EF1B  F012         	goto	u5321
  7286  002432  EF1D  F012         	goto	u5320
  7287  002436                     u5321:
  7288  002436  EF02  F012         	goto	l5161
  7289  00243A                     u5320:
  7290  00243A                     l5167:
  7291                           
  7292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7293  00243A  0E00               	movlw	0
  7294  00243C  6E29               	movwf	(stoa@i+1)^0,c
  7295  00243E  0E00               	movlw	0
  7296  002440  6E28               	movwf	stoa@i^0,c
  7297                           
  7298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7299  002442  EF36  F012         	goto	l5175
  7300  002446                     l5169:
  7301                           
  7302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7303  002446  C02C  FFD9         	movff	stoa@cp,fsr2l
  7304  00244A  C02D  FFDA         	movff	stoa@cp+1,fsr2h
  7305  00244E  50DF               	movf	indf2,w,c
  7306  002450  6E20               	movwf	??_stoa^0,c
  7307  002452  5020               	movf	??_stoa^0,w,c
  7308  002454  6E13               	movwf	fputc@c^0,c
  7309  002456  6A14               	clrf	(fputc@c+1)^0,c
  7310  002458  C01C  F015         	movff	stoa@fp,fputc@fp
  7311  00245C  C01D  F016         	movff	stoa@fp+1,fputc@fp+1
  7312  002460  EC8D  F017         	call	_fputc	;wreg free
  7313  002464                     
  7314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7315  002464  4A2C               	infsnz	stoa@cp^0,f,c
  7316  002466  2A2D               	incf	(stoa@cp+1)^0,f,c
  7317  002468                     
  7318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7319  002468  4A28               	infsnz	stoa@i^0,f,c
  7320  00246A  2A29               	incf	(stoa@i+1)^0,f,c
  7321  00246C                     l5175:
  7322                           
  7323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7324  00246C  502E               	movf	stoa@p^0,w,c
  7325  00246E  5C28               	subwf	stoa@i^0,w,c
  7326  002470  5029               	movf	(stoa@i+1)^0,w,c
  7327  002472  0A80               	xorlw	128
  7328  002474  6E20               	movwf	??_stoa^0,c
  7329  002476  502F               	movf	(stoa@p+1)^0,w,c
  7330  002478  0A80               	xorlw	128
  7331  00247A  5820               	subwfb	??_stoa^0,w,c
  7332  00247C  A0D8               	btfss	status,0,c
  7333  00247E  EF43  F012         	goto	u5331
  7334  002482  EF45  F012         	goto	u5330
  7335  002486                     u5331:
  7336  002486  EF23  F012         	goto	l5169
  7337  00248A                     u5330:
  7338  00248A                     
  7339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7340  00248A  A043               	btfss	_flags^0,0,c
  7341  00248C  EF4A  F012         	goto	u5341
  7342  002490  EF4C  F012         	goto	u5340
  7343  002494                     u5341:
  7344  002494  EF69  F012         	goto	l527
  7345  002498                     u5340:
  7346  002498  EF5A  F012         	goto	l5183
  7347  00249C                     l5179:
  7348                           
  7349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7350  00249C  0E00               	movlw	0
  7351  00249E  6E14               	movwf	(fputc@c+1)^0,c
  7352  0024A0  0E20               	movlw	32
  7353  0024A2  6E13               	movwf	fputc@c^0,c
  7354  0024A4  C01C  F015         	movff	stoa@fp,fputc@fp
  7355  0024A8  C01D  F016         	movff	stoa@fp+1,fputc@fp+1
  7356  0024AC  EC8D  F017         	call	_fputc	;wreg free
  7357  0024B0                     
  7358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7359  0024B0  4A30               	infsnz	stoa@l^0,f,c
  7360  0024B2  2A31               	incf	(stoa@l+1)^0,f,c
  7361  0024B4                     l5183:
  7362                           
  7363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7364  0024B4  502A               	movf	stoa@w^0,w,c
  7365  0024B6  5C30               	subwf	stoa@l^0,w,c
  7366  0024B8  5031               	movf	(stoa@l+1)^0,w,c
  7367  0024BA  0A80               	xorlw	128
  7368  0024BC  6E20               	movwf	??_stoa^0,c
  7369  0024BE  502B               	movf	(stoa@w+1)^0,w,c
  7370  0024C0  0A80               	xorlw	128
  7371  0024C2  5820               	subwfb	??_stoa^0,w,c
  7372  0024C4  A0D8               	btfss	status,0,c
  7373  0024C6  EF67  F012         	goto	u5351
  7374  0024CA  EF69  F012         	goto	u5350
  7375  0024CE                     u5351:
  7376  0024CE  EF4E  F012         	goto	l5179
  7377  0024D2                     u5350:
  7378  0024D2                     l527:
  7379                           
  7380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7381  0024D2  C030  F01C         	movff	stoa@l,?_stoa
  7382  0024D6  C031  F01D         	movff	stoa@l+1,?_stoa+1
  7383  0024DA  0012               	return		;funcret
  7384  0024DC                     __end_of_stoa:
  7385                           	opt callstack 0
  7386                           
  7387 ;; *************** function _otoa *****************
  7388 ;; Defined at:
  7389 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  7392 ;;		 -> vsnprintf@f(6), 
  7393 ;;  d               8   47[COMRAM] unsigned long long 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  n               8   14[BANK0 ] unsigned long long 
  7396 ;;  i               2   22[BANK0 ] int 
  7397 ;;  w               2   12[BANK0 ] int 
  7398 ;;  t               2   10[BANK0 ] int 
  7399 ;;  p               2    8[BANK0 ] int 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  2   45[COMRAM] int 
  7402 ;; Registers used:
  7403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7409 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7411 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7412 ;;      Totals:        10      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7413 ;;Total ram usage:       34 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    9
  7416 ;; This function calls:
  7417 ;;		_pad
  7418 ;; This function is called by:
  7419 ;;		_vfpfcnvrt
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text15
  7424  001E4C                     __ptext15:
  7425                           	opt callstack 0
  7426  001E4C                     _otoa:
  7427                           	opt callstack 17
  7428  001E4C                     
  7429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7430  001E4C  BE42               	btfsc	(_prec+1)^0,7,c
  7431  001E4E  EF2B  F00F         	goto	u5171
  7432  001E52  EF2D  F00F         	goto	u5170
  7433  001E56                     u5171:
  7434  001E56  EF2E  F00F         	goto	l5099
  7435  001E5A                     u5170:
  7436  001E5A                     
  7437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7438  001E5A  9243               	bcf	_flags^0,1,c
  7439  001E5C                     l5099:
  7440                           
  7441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7442  001E5C  BE42               	btfsc	(_prec+1)^0,7,c
  7443  001E5E  EF3B  F00F         	goto	u5180
  7444  001E62  5042               	movf	(_prec+1)^0,w,c
  7445  001E64  E106               	bnz	u5181
  7446  001E66  0441               	decf	_prec^0,w,c
  7447  001E68  B0D8               	btfsc	status,0,c
  7448  001E6A  EF39  F00F         	goto	u5181
  7449  001E6E  EF3B  F00F         	goto	u5180
  7450  001E72                     u5181:
  7451  001E72  EF42  F00F         	goto	l497
  7452  001E76                     u5180:
  7453  001E76  0E00               	movlw	0
  7454  001E78  0100               	movlb	0	; () banked
  7455  001E7A  6F69               	movwf	(otoa@p+1)& (0+255),b
  7456  001E7C  0E01               	movlw	1
  7457  001E7E  6F68               	movwf	otoa@p& (0+255),b
  7458  001E80  EF46  F00F         	goto	l499
  7459  001E84                     l497:
  7460  001E84  C041  F068         	movff	_prec,otoa@p
  7461  001E88  C042  F069         	movff	_prec+1,otoa@p+1
  7462  001E8C                     l499:
  7463                           
  7464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7465  001E8C  C03F  F06C         	movff	_width,otoa@w
  7466  001E90  C040  F06D         	movff	_width+1,otoa@w+1
  7467                           
  7468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7469  001E94  C030  F06E         	movff	otoa@d,otoa@n
  7470  001E98  C031  F06F         	movff	otoa@d+1,otoa@n+1
  7471  001E9C  C032  F070         	movff	otoa@d+2,otoa@n+2
  7472  001EA0  C033  F071         	movff	otoa@d+3,otoa@n+3
  7473  001EA4  C034  F072         	movff	otoa@d+4,otoa@n+4
  7474  001EA8  C035  F073         	movff	otoa@d+5,otoa@n+5
  7475  001EAC  C036  F074         	movff	otoa@d+6,otoa@n+6
  7476  001EB0  C037  F075         	movff	otoa@d+7,otoa@n+7
  7477  001EB4                     
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7479  001EB4  0E00               	movlw	0
  7480  001EB6  0100               	movlb	0	; () banked
  7481  001EB8  6F77               	movwf	(otoa@i+1)& (0+255),b
  7482  001EBA  0E1F               	movlw	31
  7483  001EBC  6F76               	movwf	otoa@i& (0+255),b
  7484  001EBE                     
  7485                           ; BSR set to: 0
  7486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7487  001EBE  0E00               	movlw	0
  7488  001EC0  6FEA               	movwf	(_dbuf+31)& (0+255),b
  7489  001EC2                     
  7490                           ; BSR set to: 0
  7491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7492  001EC2  0E00               	movlw	0
  7493  001EC4  6F6B               	movwf	(otoa@t+1)& (0+255),b
  7494  001EC6  0E00               	movlw	0
  7495  001EC8  6F6A               	movwf	otoa@t& (0+255),b
  7496                           
  7497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7498  001ECA  EFAC  F00F         	goto	l5121
  7499  001ECE                     l5109:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7503  001ECE  0776               	decf	otoa@i& (0+255),f,b
  7504  001ED0  A0D8               	btfss	status,0,c
  7505  001ED2  0777               	decf	(otoa@i+1)& (0+255),f,b
  7506  001ED4                     
  7507                           ; BSR set to: 0
  7508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7509  001ED4  0E07               	movlw	7
  7510  001ED6  156E               	andwf	otoa@n& (0+255),w,b
  7511  001ED8  6F6A               	movwf	otoa@t& (0+255),b
  7512  001EDA  6B6B               	clrf	(otoa@t+1)& (0+255),b
  7513  001EDC                     
  7514                           ; BSR set to: 0
  7515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7516  001EDC  0ECB               	movlw	low _dbuf
  7517  001EDE  2576               	addwf	otoa@i& (0+255),w,b
  7518  001EE0  6ED9               	movwf	fsr2l,c
  7519  001EE2  0E00               	movlw	high _dbuf
  7520  001EE4  2177               	addwfc	(otoa@i+1)& (0+255),w,b
  7521  001EE6  6EDA               	movwf	fsr2h,c
  7522  001EE8  516A               	movf	otoa@t& (0+255),w,b
  7523  001EEA  0F30               	addlw	48
  7524  001EEC  6EDF               	movwf	indf2,c
  7525  001EEE                     
  7526                           ; BSR set to: 0
  7527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7528  001EEE  0768               	decf	otoa@p& (0+255),f,b
  7529  001EF0  A0D8               	btfss	status,0,c
  7530  001EF2  0769               	decf	(otoa@p+1)& (0+255),f,b
  7531  001EF4                     
  7532                           ; BSR set to: 0
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7534  001EF4  076C               	decf	otoa@w& (0+255),f,b
  7535  001EF6  A0D8               	btfss	status,0,c
  7536  001EF8  076D               	decf	(otoa@w+1)& (0+255),f,b
  7537  001EFA                     
  7538                           ; BSR set to: 0
  7539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7540  001EFA  C06E  F060         	movff	otoa@n,??_otoa
  7541  001EFE  C06F  F061         	movff	otoa@n+1,??_otoa+1
  7542  001F02  C070  F062         	movff	otoa@n+2,??_otoa+2
  7543  001F06  C071  F063         	movff	otoa@n+3,??_otoa+3
  7544  001F0A  C072  F064         	movff	otoa@n+4,??_otoa+4
  7545  001F0E  C073  F065         	movff	otoa@n+5,??_otoa+5
  7546  001F12  C074  F066         	movff	otoa@n+6,??_otoa+6
  7547  001F16  C075  F067         	movff	otoa@n+7,??_otoa+7
  7548  001F1A  0E04               	movlw	4
  7549  001F1C  EF99  F00F         	goto	u5190
  7550  001F20                     u5195:
  7551  001F20  90D8               	bcf	status,0,c
  7552  001F22  3367               	rrcf	(??_otoa+7)& (0+255),f,b
  7553  001F24  3366               	rrcf	(??_otoa+6)& (0+255),f,b
  7554  001F26  3365               	rrcf	(??_otoa+5)& (0+255),f,b
  7555  001F28  3364               	rrcf	(??_otoa+4)& (0+255),f,b
  7556  001F2A  3363               	rrcf	(??_otoa+3)& (0+255),f,b
  7557  001F2C  3362               	rrcf	(??_otoa+2)& (0+255),f,b
  7558  001F2E  3361               	rrcf	(??_otoa+1)& (0+255),f,b
  7559  001F30  3360               	rrcf	??_otoa& (0+255),f,b
  7560  001F32                     u5190:
  7561  001F32  2EE8               	decfsz	wreg,f,c
  7562  001F34  EF90  F00F         	goto	u5195
  7563  001F38  C060  F06E         	movff	??_otoa,otoa@n
  7564  001F3C  C061  F06F         	movff	??_otoa+1,otoa@n+1
  7565  001F40  C062  F070         	movff	??_otoa+2,otoa@n+2
  7566  001F44  C063  F071         	movff	??_otoa+3,otoa@n+3
  7567  001F48  C064  F072         	movff	??_otoa+4,otoa@n+4
  7568  001F4C  C065  F073         	movff	??_otoa+5,otoa@n+5
  7569  001F50  C066  F074         	movff	??_otoa+6,otoa@n+6
  7570  001F54  C067  F075         	movff	??_otoa+7,otoa@n+7
  7571  001F58                     l5121:
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7575  001F58  BF77               	btfsc	(otoa@i+1)& (0+255),7,b
  7576  001F5A  EFB7  F00F         	goto	u5201
  7577  001F5E  5177               	movf	(otoa@i+1)& (0+255),w,b
  7578  001F60  E108               	bnz	u5200
  7579  001F62  0576               	decf	otoa@i& (0+255),w,b
  7580  001F64  A0D8               	btfss	status,0,c
  7581  001F66  EFB7  F00F         	goto	u5201
  7582  001F6A  EFB9  F00F         	goto	u5200
  7583  001F6E                     u5201:
  7584  001F6E  EFE9  F00F         	goto	l506
  7585  001F72                     u5200:
  7586  001F72                     
  7587                           ; BSR set to: 0
  7588  001F72  516E               	movf	otoa@n& (0+255),w,b
  7589  001F74  116F               	iorwf	(otoa@n+1)& (0+255),w,b
  7590  001F76  1170               	iorwf	(otoa@n+2)& (0+255),w,b
  7591  001F78  1171               	iorwf	(otoa@n+3)& (0+255),w,b
  7592  001F7A  1172               	iorwf	(otoa@n+4)& (0+255),w,b
  7593  001F7C  1173               	iorwf	(otoa@n+5)& (0+255),w,b
  7594  001F7E  1174               	iorwf	(otoa@n+6)& (0+255),w,b
  7595  001F80  1175               	iorwf	(otoa@n+7)& (0+255),w,b
  7596  001F82  A4D8               	btfss	status,2,c
  7597  001F84  EFC6  F00F         	goto	u5211
  7598  001F88  EFC8  F00F         	goto	u5210
  7599  001F8C                     u5211:
  7600  001F8C  EF67  F00F         	goto	l5109
  7601  001F90                     u5210:
  7602  001F90                     
  7603                           ; BSR set to: 0
  7604  001F90  BF69               	btfsc	(otoa@p+1)& (0+255),7,b
  7605  001F92  EFD5  F00F         	goto	u5220
  7606  001F96  5169               	movf	(otoa@p+1)& (0+255),w,b
  7607  001F98  E106               	bnz	u5221
  7608  001F9A  0568               	decf	otoa@p& (0+255),w,b
  7609  001F9C  B0D8               	btfsc	status,0,c
  7610  001F9E  EFD3  F00F         	goto	u5221
  7611  001FA2  EFD5  F00F         	goto	u5220
  7612  001FA6                     u5221:
  7613  001FA6  EF67  F00F         	goto	l5109
  7614  001FAA                     u5220:
  7615  001FAA                     
  7616                           ; BSR set to: 0
  7617  001FAA  BF6D               	btfsc	(otoa@w+1)& (0+255),7,b
  7618  001FAC  EFE0  F00F         	goto	u5231
  7619  001FB0  516D               	movf	(otoa@w+1)& (0+255),w,b
  7620  001FB2  E108               	bnz	u5230
  7621  001FB4  056C               	decf	otoa@w& (0+255),w,b
  7622  001FB6  A0D8               	btfss	status,0,c
  7623  001FB8  EFE0  F00F         	goto	u5231
  7624  001FBC  EFE2  F00F         	goto	u5230
  7625  001FC0                     u5231:
  7626  001FC0  EFE9  F00F         	goto	l506
  7627  001FC4                     u5230:
  7628  001FC4                     
  7629                           ; BSR set to: 0
  7630  001FC4  B243               	btfsc	_flags^0,1,c
  7631  001FC6  EFE7  F00F         	goto	u5241
  7632  001FCA  EFE9  F00F         	goto	u5240
  7633  001FCE                     u5241:
  7634  001FCE  EF67  F00F         	goto	l5109
  7635  001FD2                     u5240:
  7636  001FD2                     l506:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7640  001FD2  A843               	btfss	_flags^0,4,c
  7641  001FD4  EFEE  F00F         	goto	u5251
  7642  001FD8  EFF0  F00F         	goto	u5250
  7643  001FDC                     u5251:
  7644  001FDC  EF07  F010         	goto	l5139
  7645  001FE0                     u5250:
  7646  001FE0                     
  7647                           ; BSR set to: 0
  7648  001FE0  516A               	movf	otoa@t& (0+255),w,b
  7649  001FE2  116B               	iorwf	(otoa@t+1)& (0+255),w,b
  7650  001FE4  B4D8               	btfsc	status,2,c
  7651  001FE6  EFF7  F00F         	goto	u5261
  7652  001FEA  EFF9  F00F         	goto	u5260
  7653  001FEE                     u5261:
  7654  001FEE  EF07  F010         	goto	l5139
  7655  001FF2                     u5260:
  7656  001FF2                     
  7657                           ; BSR set to: 0
  7658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7659  001FF2  0776               	decf	otoa@i& (0+255),f,b
  7660  001FF4  A0D8               	btfss	status,0,c
  7661  001FF6  0777               	decf	(otoa@i+1)& (0+255),f,b
  7662  001FF8                     
  7663                           ; BSR set to: 0
  7664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7665  001FF8  0ECB               	movlw	low _dbuf
  7666  001FFA  2576               	addwf	otoa@i& (0+255),w,b
  7667  001FFC  6ED9               	movwf	fsr2l,c
  7668  001FFE  0E00               	movlw	high _dbuf
  7669  002000  2177               	addwfc	(otoa@i+1)& (0+255),w,b
  7670  002002  6EDA               	movwf	fsr2h,c
  7671  002004  0E30               	movlw	48
  7672  002006  6EDF               	movwf	indf2,c
  7673  002008                     
  7674                           ; BSR set to: 0
  7675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  7676  002008  076C               	decf	otoa@w& (0+255),f,b
  7677  00200A  A0D8               	btfss	status,0,c
  7678  00200C  076D               	decf	(otoa@w+1)& (0+255),f,b
  7679  00200E                     l5139:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  7683  00200E  C02E  F023         	movff	otoa@fp,pad@fp
  7684  002012  C02F  F024         	movff	otoa@fp+1,pad@fp+1
  7685  002016  0ECB               	movlw	low _dbuf
  7686  002018  2576               	addwf	otoa@i& (0+255),w,b
  7687  00201A  6E25               	movwf	pad@buf^0,c
  7688  00201C  0E00               	movlw	high _dbuf
  7689  00201E  2177               	addwfc	(otoa@i+1)& (0+255),w,b
  7690  002020  6E26               	movwf	(pad@buf+1)^0,c
  7691  002022  C06C  F027         	movff	otoa@w,pad@p
  7692  002026  C06D  F028         	movff	otoa@w+1,pad@p+1
  7693  00202A  EC54  F018         	call	_pad	;wreg free
  7694  00202E  C023  F02E         	movff	?_pad,?_otoa
  7695  002032  C024  F02F         	movff	?_pad+1,?_otoa+1
  7696  002036  0012               	return		;funcret
  7697  002038                     __end_of_otoa:
  7698                           	opt callstack 0
  7699                           
  7700 ;; *************** function _dtoa *****************
  7701 ;; Defined at:
  7702 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  7705 ;;		 -> vsnprintf@f(6), 
  7706 ;;  d               8   47[COMRAM] long long 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  n               8   16[BANK0 ] long long 
  7709 ;;  i               2   24[BANK0 ] int 
  7710 ;;  s               2   14[BANK0 ] int 
  7711 ;;  w               2   12[BANK0 ] int 
  7712 ;;  p               2   10[BANK0 ] int 
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  2   45[COMRAM] int 
  7715 ;; Registers used:
  7716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7722 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7725 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;Total ram usage:       36 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:    9
  7729 ;; This function calls:
  7730 ;;		___aodiv
  7731 ;;		___aomod
  7732 ;;		_abs
  7733 ;;		_pad
  7734 ;; This function is called by:
  7735 ;;		_vfpfcnvrt
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text16
  7740  00168A                     __ptext16:
  7741                           	opt callstack 0
  7742  00168A                     _dtoa:
  7743                           	opt callstack 17
  7744  00168A                     
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7746  00168A  C030  F070         	movff	dtoa@d,dtoa@n
  7747  00168E  C031  F071         	movff	dtoa@d+1,dtoa@n+1
  7748  001692  C032  F072         	movff	dtoa@d+2,dtoa@n+2
  7749  001696  C033  F073         	movff	dtoa@d+3,dtoa@n+3
  7750  00169A  C034  F074         	movff	dtoa@d+4,dtoa@n+4
  7751  00169E  C035  F075         	movff	dtoa@d+5,dtoa@n+5
  7752  0016A2  C036  F076         	movff	dtoa@d+6,dtoa@n+6
  7753  0016A6  C037  F077         	movff	dtoa@d+7,dtoa@n+7
  7754  0016AA                     
  7755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7756  0016AA  0100               	movlb	0	; () banked
  7757  0016AC  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
  7758  0016AE  EF5B  F00B         	goto	u5021
  7759  0016B2  EF5E  F00B         	goto	u5020
  7760  0016B6                     u5021:
  7761  0016B6  0E01               	movlw	1
  7762  0016B8  EF5F  F00B         	goto	u5030
  7763  0016BC                     u5020:
  7764  0016BC  0E00               	movlw	0
  7765  0016BE                     u5030:
  7766  0016BE  6F6E               	movwf	dtoa@s& (0+255),b
  7767  0016C0  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  7768                           
  7769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7770  0016C2  516E               	movf	dtoa@s& (0+255),w,b
  7771  0016C4  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  7772  0016C6  B4D8               	btfsc	status,2,c
  7773  0016C8  EF68  F00B         	goto	u5041
  7774  0016CC  EF6A  F00B         	goto	u5040
  7775  0016D0                     u5041:
  7776  0016D0  EF7A  F00B         	goto	l5039
  7777  0016D4                     u5040:
  7778  0016D4                     
  7779                           ; BSR set to: 0
  7780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7781  0016D4  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  7782  0016D6  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  7783  0016D8  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  7784  0016DA  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  7785  0016DC  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  7786  0016DE  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  7787  0016E0  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  7788  0016E2  6D70               	negf	dtoa@n& (0+255),b
  7789  0016E4  0E00               	movlw	0
  7790  0016E6  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  7791  0016E8  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  7792  0016EA  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  7793  0016EC  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  7794  0016EE  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  7795  0016F0  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  7796  0016F2  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  7797  0016F4                     l5039:
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7801  0016F4  BE42               	btfsc	(_prec+1)^0,7,c
  7802  0016F6  EF7F  F00B         	goto	u5051
  7803  0016FA  EF81  F00B         	goto	u5050
  7804  0016FE                     u5051:
  7805  0016FE  EF82  F00B         	goto	l5043
  7806  001702                     u5050:
  7807  001702                     
  7808                           ; BSR set to: 0
  7809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7810  001702  9243               	bcf	_flags^0,1,c
  7811  001704                     l5043:
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7815  001704  BE42               	btfsc	(_prec+1)^0,7,c
  7816  001706  EF8F  F00B         	goto	u5060
  7817  00170A  5042               	movf	(_prec+1)^0,w,c
  7818  00170C  E106               	bnz	u5061
  7819  00170E  0441               	decf	_prec^0,w,c
  7820  001710  B0D8               	btfsc	status,0,c
  7821  001712  EF8D  F00B         	goto	u5061
  7822  001716  EF8F  F00B         	goto	u5060
  7823  00171A                     u5061:
  7824  00171A  EF95  F00B         	goto	l472
  7825  00171E                     u5060:
  7826  00171E                     
  7827                           ; BSR set to: 0
  7828  00171E  0E00               	movlw	0
  7829  001720  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  7830  001722  0E01               	movlw	1
  7831  001724  6F6A               	movwf	dtoa@p& (0+255),b
  7832  001726  EF99  F00B         	goto	l474
  7833  00172A                     l472:
  7834                           
  7835                           ; BSR set to: 0
  7836  00172A  C041  F06A         	movff	_prec,dtoa@p
  7837  00172E  C042  F06B         	movff	_prec+1,dtoa@p+1
  7838  001732                     l474:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7842  001732  C03F  F06C         	movff	_width,dtoa@w
  7843  001736  C040  F06D         	movff	_width+1,dtoa@w+1
  7844  00173A                     
  7845                           ; BSR set to: 0
  7846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7847  00173A  516E               	movf	dtoa@s& (0+255),w,b
  7848  00173C  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  7849  00173E  A4D8               	btfss	status,2,c
  7850  001740  EFA4  F00B         	goto	u5071
  7851  001744  EFA6  F00B         	goto	u5070
  7852  001748                     u5071:
  7853  001748  EFAD  F00B         	goto	l5051
  7854  00174C                     u5070:
  7855  00174C                     
  7856                           ; BSR set to: 0
  7857  00174C  A443               	btfss	_flags^0,2,c
  7858  00174E  EFAB  F00B         	goto	u5081
  7859  001752  EFAD  F00B         	goto	u5080
  7860  001756                     u5081:
  7861  001756  EFB0  F00B         	goto	l5053
  7862  00175A                     u5080:
  7863  00175A                     l5051:
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7867  00175A  076C               	decf	dtoa@w& (0+255),f,b
  7868  00175C  A0D8               	btfss	status,0,c
  7869  00175E  076D               	decf	(dtoa@w+1)& (0+255),f,b
  7870  001760                     l5053:
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7874  001760  0E00               	movlw	0
  7875  001762  6F79               	movwf	(dtoa@i+1)& (0+255),b
  7876  001764  0E1F               	movlw	31
  7877  001766  6F78               	movwf	dtoa@i& (0+255),b
  7878  001768                     
  7879                           ; BSR set to: 0
  7880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7881  001768  0E00               	movlw	0
  7882  00176A  6FEA               	movwf	(_dbuf+31)& (0+255),b
  7883                           
  7884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7885  00176C  EF35  F00C         	goto	l5067
  7886  001770                     l5057:
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7890  001770  0778               	decf	dtoa@i& (0+255),f,b
  7891  001772  A0D8               	btfss	status,0,c
  7892  001774  0779               	decf	(dtoa@i+1)& (0+255),f,b
  7893  001776                     
  7894                           ; BSR set to: 0
  7895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7896  001776  0ECB               	movlw	low _dbuf
  7897  001778  2578               	addwf	dtoa@i& (0+255),w,b
  7898  00177A  6ED9               	movwf	fsr2l,c
  7899  00177C  0E00               	movlw	high _dbuf
  7900  00177E  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  7901  001780  6EDA               	movwf	fsr2h,c
  7902  001782  C070  F013         	movff	dtoa@n,___aomod@dividend
  7903  001786  C071  F014         	movff	dtoa@n+1,___aomod@dividend+1
  7904  00178A  C072  F015         	movff	dtoa@n+2,___aomod@dividend+2
  7905  00178E  C073  F016         	movff	dtoa@n+3,___aomod@dividend+3
  7906  001792  C074  F017         	movff	dtoa@n+4,___aomod@dividend+4
  7907  001796  C075  F018         	movff	dtoa@n+5,___aomod@dividend+5
  7908  00179A  C076  F019         	movff	dtoa@n+6,___aomod@dividend+6
  7909  00179E  C077  F01A         	movff	dtoa@n+7,___aomod@dividend+7
  7910  0017A2  0E0A               	movlw	10
  7911  0017A4  6E1B               	movwf	___aomod@divisor^0,c
  7912  0017A6  0E00               	movlw	0
  7913  0017A8  6E1C               	movwf	(___aomod@divisor+1)^0,c
  7914  0017AA  0E00               	movlw	0
  7915  0017AC  6E1D               	movwf	(___aomod@divisor+2)^0,c
  7916  0017AE  0E00               	movlw	0
  7917  0017B0  6E1E               	movwf	(___aomod@divisor+3)^0,c
  7918  0017B2  0E00               	movlw	0
  7919  0017B4  6E1F               	movwf	(___aomod@divisor+4)^0,c
  7920  0017B6  0E00               	movlw	0
  7921  0017B8  6E20               	movwf	(___aomod@divisor+5)^0,c
  7922  0017BA  0E00               	movlw	0
  7923  0017BC  6E21               	movwf	(___aomod@divisor+6)^0,c
  7924  0017BE  0E00               	movlw	0
  7925  0017C0  6E22               	movwf	(___aomod@divisor+7)^0,c
  7926  0017C2  ECDF  F013         	call	___aomod	;wreg free
  7927  0017C6  C013  F060         	movff	?___aomod,??_dtoa
  7928  0017CA  C014  F061         	movff	?___aomod+1,??_dtoa+1
  7929  0017CE  C015  F062         	movff	?___aomod+2,??_dtoa+2
  7930  0017D2  C016  F063         	movff	?___aomod+3,??_dtoa+3
  7931  0017D6  C017  F064         	movff	?___aomod+4,??_dtoa+4
  7932  0017DA  C018  F065         	movff	?___aomod+5,??_dtoa+5
  7933  0017DE  C019  F066         	movff	?___aomod+6,??_dtoa+6
  7934  0017E2  C01A  F067         	movff	?___aomod+7,??_dtoa+7
  7935  0017E6  C060  F025         	movff	??_dtoa,abs@a
  7936  0017EA  C062  F026         	movff	??_dtoa+2,abs@a+1
  7937  0017EE  ECFD  F01A         	call	_abs	;wreg free
  7938  0017F2  5025               	movf	?_abs^0,w,c
  7939  0017F4  0F30               	addlw	48
  7940  0017F6  6EDF               	movwf	indf2,c
  7941  0017F8                     
  7942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7943  0017F8  0100               	movlb	0	; () banked
  7944  0017FA  076A               	decf	dtoa@p& (0+255),f,b
  7945  0017FC  A0D8               	btfss	status,0,c
  7946  0017FE  076B               	decf	(dtoa@p+1)& (0+255),f,b
  7947  001800                     
  7948                           ; BSR set to: 0
  7949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7950  001800  076C               	decf	dtoa@w& (0+255),f,b
  7951  001802  A0D8               	btfss	status,0,c
  7952  001804  076D               	decf	(dtoa@w+1)& (0+255),f,b
  7953  001806                     
  7954                           ; BSR set to: 0
  7955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7956  001806  C070  F013         	movff	dtoa@n,___aodiv@dividend
  7957  00180A  C071  F014         	movff	dtoa@n+1,___aodiv@dividend+1
  7958  00180E  C072  F015         	movff	dtoa@n+2,___aodiv@dividend+2
  7959  001812  C073  F016         	movff	dtoa@n+3,___aodiv@dividend+3
  7960  001816  C074  F017         	movff	dtoa@n+4,___aodiv@dividend+4
  7961  00181A  C075  F018         	movff	dtoa@n+5,___aodiv@dividend+5
  7962  00181E  C076  F019         	movff	dtoa@n+6,___aodiv@dividend+6
  7963  001822  C077  F01A         	movff	dtoa@n+7,___aodiv@dividend+7
  7964  001826  0E0A               	movlw	10
  7965  001828  6E1B               	movwf	___aodiv@divisor^0,c
  7966  00182A  0E00               	movlw	0
  7967  00182C  6E1C               	movwf	(___aodiv@divisor+1)^0,c
  7968  00182E  0E00               	movlw	0
  7969  001830  6E1D               	movwf	(___aodiv@divisor+2)^0,c
  7970  001832  0E00               	movlw	0
  7971  001834  6E1E               	movwf	(___aodiv@divisor+3)^0,c
  7972  001836  0E00               	movlw	0
  7973  001838  6E1F               	movwf	(___aodiv@divisor+4)^0,c
  7974  00183A  0E00               	movlw	0
  7975  00183C  6E20               	movwf	(___aodiv@divisor+5)^0,c
  7976  00183E  0E00               	movlw	0
  7977  001840  6E21               	movwf	(___aodiv@divisor+6)^0,c
  7978  001842  0E00               	movlw	0
  7979  001844  6E22               	movwf	(___aodiv@divisor+7)^0,c
  7980  001846  ECE9  F010         	call	___aodiv	;wreg free
  7981  00184A  C013  F070         	movff	?___aodiv,dtoa@n
  7982  00184E  C014  F071         	movff	?___aodiv+1,dtoa@n+1
  7983  001852  C015  F072         	movff	?___aodiv+2,dtoa@n+2
  7984  001856  C016  F073         	movff	?___aodiv+3,dtoa@n+3
  7985  00185A  C017  F074         	movff	?___aodiv+4,dtoa@n+4
  7986  00185E  C018  F075         	movff	?___aodiv+5,dtoa@n+5
  7987  001862  C019  F076         	movff	?___aodiv+6,dtoa@n+6
  7988  001866  C01A  F077         	movff	?___aodiv+7,dtoa@n+7
  7989  00186A                     l5067:
  7990                           
  7991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7992  00186A  0100               	movlb	0	; () banked
  7993  00186C  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  7994  00186E  EF41  F00C         	goto	u5091
  7995  001872  5179               	movf	(dtoa@i+1)& (0+255),w,b
  7996  001874  E108               	bnz	u5090
  7997  001876  0578               	decf	dtoa@i& (0+255),w,b
  7998  001878  A0D8               	btfss	status,0,c
  7999  00187A  EF41  F00C         	goto	u5091
  8000  00187E  EF43  F00C         	goto	u5090
  8001  001882                     u5091:
  8002  001882  EF73  F00C         	goto	l5077
  8003  001886                     u5090:
  8004  001886                     
  8005                           ; BSR set to: 0
  8006  001886  5170               	movf	dtoa@n& (0+255),w,b
  8007  001888  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  8008  00188A  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  8009  00188C  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  8010  00188E  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  8011  001890  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  8012  001892  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  8013  001894  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  8014  001896  A4D8               	btfss	status,2,c
  8015  001898  EF50  F00C         	goto	u5101
  8016  00189C  EF52  F00C         	goto	u5100
  8017  0018A0                     u5101:
  8018  0018A0  EFB8  F00B         	goto	l5057
  8019  0018A4                     u5100:
  8020  0018A4                     
  8021                           ; BSR set to: 0
  8022  0018A4  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  8023  0018A6  EF5F  F00C         	goto	u5110
  8024  0018AA  516B               	movf	(dtoa@p+1)& (0+255),w,b
  8025  0018AC  E106               	bnz	u5111
  8026  0018AE  056A               	decf	dtoa@p& (0+255),w,b
  8027  0018B0  B0D8               	btfsc	status,0,c
  8028  0018B2  EF5D  F00C         	goto	u5111
  8029  0018B6  EF5F  F00C         	goto	u5110
  8030  0018BA                     u5111:
  8031  0018BA  EFB8  F00B         	goto	l5057
  8032  0018BE                     u5110:
  8033  0018BE                     
  8034                           ; BSR set to: 0
  8035  0018BE  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  8036  0018C0  EF6A  F00C         	goto	u5121
  8037  0018C4  516D               	movf	(dtoa@w+1)& (0+255),w,b
  8038  0018C6  E108               	bnz	u5120
  8039  0018C8  056C               	decf	dtoa@w& (0+255),w,b
  8040  0018CA  A0D8               	btfss	status,0,c
  8041  0018CC  EF6A  F00C         	goto	u5121
  8042  0018D0  EF6C  F00C         	goto	u5120
  8043  0018D4                     u5121:
  8044  0018D4  EF73  F00C         	goto	l5077
  8045  0018D8                     u5120:
  8046  0018D8                     
  8047                           ; BSR set to: 0
  8048  0018D8  B243               	btfsc	_flags^0,1,c
  8049  0018DA  EF71  F00C         	goto	u5131
  8050  0018DE  EF73  F00C         	goto	u5130
  8051  0018E2                     u5131:
  8052  0018E2  EFB8  F00B         	goto	l5057
  8053  0018E6                     u5130:
  8054  0018E6                     l5077:
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8058  0018E6  516E               	movf	dtoa@s& (0+255),w,b
  8059  0018E8  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8060  0018EA  A4D8               	btfss	status,2,c
  8061  0018EC  EF7A  F00C         	goto	u5141
  8062  0018F0  EF7C  F00C         	goto	u5140
  8063  0018F4                     u5141:
  8064  0018F4  EF83  F00C         	goto	l5081
  8065  0018F8                     u5140:
  8066  0018F8                     
  8067                           ; BSR set to: 0
  8068  0018F8  A443               	btfss	_flags^0,2,c
  8069  0018FA  EF81  F00C         	goto	u5151
  8070  0018FE  EF83  F00C         	goto	u5150
  8071  001902                     u5151:
  8072  001902  EFA1  F00C         	goto	l5091
  8073  001906                     u5150:
  8074  001906                     l5081:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8078  001906  0778               	decf	dtoa@i& (0+255),f,b
  8079  001908  A0D8               	btfss	status,0,c
  8080  00190A  0779               	decf	(dtoa@i+1)& (0+255),f,b
  8081  00190C                     
  8082                           ; BSR set to: 0
  8083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8084  00190C  516E               	movf	dtoa@s& (0+255),w,b
  8085  00190E  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  8086  001910  A4D8               	btfss	status,2,c
  8087  001912  EF8D  F00C         	goto	u5161
  8088  001916  EF8F  F00C         	goto	u5160
  8089  00191A                     u5161:
  8090  00191A  EF95  F00C         	goto	l5087
  8091  00191E                     u5160:
  8092  00191E                     
  8093                           ; BSR set to: 0
  8094  00191E  0E00               	movlw	0
  8095  001920  6F69               	movwf	(_dtoa$1237+1)& (0+255),b
  8096  001922  0E2B               	movlw	43
  8097  001924  6F68               	movwf	_dtoa$1237& (0+255),b
  8098  001926  EF99  F00C         	goto	l5089
  8099  00192A                     l5087:
  8100                           
  8101                           ; BSR set to: 0
  8102  00192A  0E00               	movlw	0
  8103  00192C  6F69               	movwf	(_dtoa$1237+1)& (0+255),b
  8104  00192E  0E2D               	movlw	45
  8105  001930  6F68               	movwf	_dtoa$1237& (0+255),b
  8106  001932                     l5089:
  8107                           
  8108                           ; BSR set to: 0
  8109  001932  0ECB               	movlw	low _dbuf
  8110  001934  2578               	addwf	dtoa@i& (0+255),w,b
  8111  001936  6ED9               	movwf	fsr2l,c
  8112  001938  0E00               	movlw	high _dbuf
  8113  00193A  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8114  00193C  6EDA               	movwf	fsr2h,c
  8115  00193E  C068  FFDF         	movff	_dtoa$1237,indf2
  8116  001942                     l5091:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8120  001942  C02E  F023         	movff	dtoa@fp,pad@fp
  8121  001946  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  8122  00194A  0ECB               	movlw	low _dbuf
  8123  00194C  2578               	addwf	dtoa@i& (0+255),w,b
  8124  00194E  6E25               	movwf	pad@buf^0,c
  8125  001950  0E00               	movlw	high _dbuf
  8126  001952  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  8127  001954  6E26               	movwf	(pad@buf+1)^0,c
  8128  001956  C06C  F027         	movff	dtoa@w,pad@p
  8129  00195A  C06D  F028         	movff	dtoa@w+1,pad@p+1
  8130  00195E  EC54  F018         	call	_pad	;wreg free
  8131  001962  C023  F02E         	movff	?_pad,?_dtoa
  8132  001966  C024  F02F         	movff	?_pad+1,?_dtoa+1
  8133  00196A  0012               	return		;funcret
  8134  00196C                     __end_of_dtoa:
  8135                           	opt callstack 0
  8136                           
  8137 ;; *************** function _abs *****************
  8138 ;; Defined at:
  8139 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  a               2   36[COMRAM] int 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  2   36[COMRAM] int 
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;Total ram usage:        4 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:    5
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_dtoa
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           	psect	text17
  8168  0035FA                     __ptext17:
  8169                           	opt callstack 0
  8170  0035FA                     _abs:
  8171                           	opt callstack 20
  8172  0035FA  BE26               	btfsc	(abs@a+1)^0,7,c
  8173  0035FC  EF0A  F01B         	goto	u4680
  8174  003600  5026               	movf	(abs@a+1)^0,w,c
  8175  003602  E106               	bnz	u4681
  8176  003604  0425               	decf	abs@a^0,w,c
  8177  003606  B0D8               	btfsc	status,0,c
  8178  003608  EF08  F01B         	goto	u4681
  8179  00360C  EF0A  F01B         	goto	u4680
  8180  003610                     u4681:
  8181  003610  EF18  F01B         	goto	l1336
  8182  003614                     u4680:
  8183  003614  C025  F027         	movff	abs@a,??_abs
  8184  003618  C026  F028         	movff	abs@a+1,??_abs+1
  8185  00361C  1E27               	comf	??_abs^0,f,c
  8186  00361E  1E28               	comf	(??_abs+1)^0,f,c
  8187  003620  4A27               	infsnz	??_abs^0,f,c
  8188  003622  2A28               	incf	(??_abs+1)^0,f,c
  8189  003624  C027  F025         	movff	??_abs,?_abs
  8190  003628  C028  F026         	movff	??_abs+1,?_abs+1
  8191  00362C  EF1C  F01B         	goto	l1339
  8192  003630                     l1336:
  8193  003630  C025  F025         	movff	abs@a,?_abs
  8194  003634  C026  F026         	movff	abs@a+1,?_abs+1
  8195  003638                     l1339:
  8196  003638  0012               	return		;funcret
  8197  00363A                     __end_of_abs:
  8198                           	opt callstack 0
  8199                           
  8200 ;; *************** function ___aomod *****************
  8201 ;; Defined at:
  8202 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  dividend        8   18[COMRAM] long long 
  8205 ;;  divisor         8   26[COMRAM] long long 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  sign            1   35[COMRAM] unsigned char 
  8208 ;;  counter         1   34[COMRAM] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  8   18[COMRAM] long long 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8218 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8221 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8222 ;;Total ram usage:       18 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    5
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_dtoa
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           	psect	text18
  8233  0027BE                     __ptext18:
  8234                           	opt callstack 0
  8235  0027BE                     ___aomod:
  8236                           	opt callstack 20
  8237  0027BE  0E00               	movlw	0
  8238  0027C0  6E24               	movwf	___aomod@sign^0,c
  8239  0027C2  BE1A               	btfsc	(___aomod@dividend+7)^0,7,c
  8240  0027C4  EFE8  F013         	goto	u4850
  8241  0027C8  EFE6  F013         	goto	u4851
  8242  0027CC                     u4851:
  8243  0027CC  EFFA  F013         	goto	l4933
  8244  0027D0                     u4850:
  8245  0027D0  1E1A               	comf	(___aomod@dividend+7)^0,f,c
  8246  0027D2  1E19               	comf	(___aomod@dividend+6)^0,f,c
  8247  0027D4  1E18               	comf	(___aomod@dividend+5)^0,f,c
  8248  0027D6  1E17               	comf	(___aomod@dividend+4)^0,f,c
  8249  0027D8  1E16               	comf	(___aomod@dividend+3)^0,f,c
  8250  0027DA  1E15               	comf	(___aomod@dividend+2)^0,f,c
  8251  0027DC  1E14               	comf	(___aomod@dividend+1)^0,f,c
  8252  0027DE  6C13               	negf	___aomod@dividend^0,c
  8253  0027E0  0E00               	movlw	0
  8254  0027E2  2214               	addwfc	(___aomod@dividend+1)^0,f,c
  8255  0027E4  2215               	addwfc	(___aomod@dividend+2)^0,f,c
  8256  0027E6  2216               	addwfc	(___aomod@dividend+3)^0,f,c
  8257  0027E8  2217               	addwfc	(___aomod@dividend+4)^0,f,c
  8258  0027EA  2218               	addwfc	(___aomod@dividend+5)^0,f,c
  8259  0027EC  2219               	addwfc	(___aomod@dividend+6)^0,f,c
  8260  0027EE  221A               	addwfc	(___aomod@dividend+7)^0,f,c
  8261  0027F0  0E01               	movlw	1
  8262  0027F2  6E24               	movwf	___aomod@sign^0,c
  8263  0027F4                     l4933:
  8264  0027F4  BE22               	btfsc	(___aomod@divisor+7)^0,7,c
  8265  0027F6  EF01  F014         	goto	u4860
  8266  0027FA  EFFF  F013         	goto	u4861
  8267  0027FE                     u4861:
  8268  0027FE  EF11  F014         	goto	l4937
  8269  002802                     u4860:
  8270  002802  1E22               	comf	(___aomod@divisor+7)^0,f,c
  8271  002804  1E21               	comf	(___aomod@divisor+6)^0,f,c
  8272  002806  1E20               	comf	(___aomod@divisor+5)^0,f,c
  8273  002808  1E1F               	comf	(___aomod@divisor+4)^0,f,c
  8274  00280A  1E1E               	comf	(___aomod@divisor+3)^0,f,c
  8275  00280C  1E1D               	comf	(___aomod@divisor+2)^0,f,c
  8276  00280E  1E1C               	comf	(___aomod@divisor+1)^0,f,c
  8277  002810  6C1B               	negf	___aomod@divisor^0,c
  8278  002812  0E00               	movlw	0
  8279  002814  221C               	addwfc	(___aomod@divisor+1)^0,f,c
  8280  002816  221D               	addwfc	(___aomod@divisor+2)^0,f,c
  8281  002818  221E               	addwfc	(___aomod@divisor+3)^0,f,c
  8282  00281A  221F               	addwfc	(___aomod@divisor+4)^0,f,c
  8283  00281C  2220               	addwfc	(___aomod@divisor+5)^0,f,c
  8284  00281E  2221               	addwfc	(___aomod@divisor+6)^0,f,c
  8285  002820  2222               	addwfc	(___aomod@divisor+7)^0,f,c
  8286  002822                     l4937:
  8287  002822  501B               	movf	___aomod@divisor^0,w,c
  8288  002824  101C               	iorwf	(___aomod@divisor+1)^0,w,c
  8289  002826  101D               	iorwf	(___aomod@divisor+2)^0,w,c
  8290  002828  101E               	iorwf	(___aomod@divisor+3)^0,w,c
  8291  00282A  101F               	iorwf	(___aomod@divisor+4)^0,w,c
  8292  00282C  1020               	iorwf	(___aomod@divisor+5)^0,w,c
  8293  00282E  1021               	iorwf	(___aomod@divisor+6)^0,w,c
  8294  002830  1022               	iorwf	(___aomod@divisor+7)^0,w,c
  8295  002832  B4D8               	btfsc	status,2,c
  8296  002834  EF1E  F014         	goto	u4871
  8297  002838  EF20  F014         	goto	u4870
  8298  00283C                     u4871:
  8299  00283C  EF68  F014         	goto	l4953
  8300  002840                     u4870:
  8301  002840  0E01               	movlw	1
  8302  002842  6E23               	movwf	___aomod@counter^0,c
  8303  002844  EF2E  F014         	goto	l4943
  8304  002848                     l4941:
  8305  002848  90D8               	bcf	status,0,c
  8306  00284A  361B               	rlcf	___aomod@divisor^0,f,c
  8307  00284C  361C               	rlcf	(___aomod@divisor+1)^0,f,c
  8308  00284E  361D               	rlcf	(___aomod@divisor+2)^0,f,c
  8309  002850  361E               	rlcf	(___aomod@divisor+3)^0,f,c
  8310  002852  361F               	rlcf	(___aomod@divisor+4)^0,f,c
  8311  002854  3620               	rlcf	(___aomod@divisor+5)^0,f,c
  8312  002856  3621               	rlcf	(___aomod@divisor+6)^0,f,c
  8313  002858  3622               	rlcf	(___aomod@divisor+7)^0,f,c
  8314  00285A  2A23               	incf	___aomod@counter^0,f,c
  8315  00285C                     l4943:
  8316  00285C  AE22               	btfss	(___aomod@divisor+7)^0,7,c
  8317  00285E  EF33  F014         	goto	u4881
  8318  002862  EF35  F014         	goto	u4880
  8319  002866                     u4881:
  8320  002866  EF24  F014         	goto	l4941
  8321  00286A                     u4880:
  8322  00286A                     l4945:
  8323  00286A  501B               	movf	___aomod@divisor^0,w,c
  8324  00286C  5C13               	subwf	___aomod@dividend^0,w,c
  8325  00286E  501C               	movf	(___aomod@divisor+1)^0,w,c
  8326  002870  5814               	subwfb	(___aomod@dividend+1)^0,w,c
  8327  002872  501D               	movf	(___aomod@divisor+2)^0,w,c
  8328  002874  5815               	subwfb	(___aomod@dividend+2)^0,w,c
  8329  002876  501E               	movf	(___aomod@divisor+3)^0,w,c
  8330  002878  5816               	subwfb	(___aomod@dividend+3)^0,w,c
  8331  00287A  501F               	movf	(___aomod@divisor+4)^0,w,c
  8332  00287C  5817               	subwfb	(___aomod@dividend+4)^0,w,c
  8333  00287E  5020               	movf	(___aomod@divisor+5)^0,w,c
  8334  002880  5818               	subwfb	(___aomod@dividend+5)^0,w,c
  8335  002882  5021               	movf	(___aomod@divisor+6)^0,w,c
  8336  002884  5819               	subwfb	(___aomod@dividend+6)^0,w,c
  8337  002886  5022               	movf	(___aomod@divisor+7)^0,w,c
  8338  002888  581A               	subwfb	(___aomod@dividend+7)^0,w,c
  8339  00288A  A0D8               	btfss	status,0,c
  8340  00288C  EF4A  F014         	goto	u4891
  8341  002890  EF4C  F014         	goto	u4890
  8342  002894                     u4891:
  8343  002894  EF5C  F014         	goto	l4949
  8344  002898                     u4890:
  8345  002898  501B               	movf	___aomod@divisor^0,w,c
  8346  00289A  5E13               	subwf	___aomod@dividend^0,f,c
  8347  00289C  501C               	movf	(___aomod@divisor+1)^0,w,c
  8348  00289E  5A14               	subwfb	(___aomod@dividend+1)^0,f,c
  8349  0028A0  501D               	movf	(___aomod@divisor+2)^0,w,c
  8350  0028A2  5A15               	subwfb	(___aomod@dividend+2)^0,f,c
  8351  0028A4  501E               	movf	(___aomod@divisor+3)^0,w,c
  8352  0028A6  5A16               	subwfb	(___aomod@dividend+3)^0,f,c
  8353  0028A8  501F               	movf	(___aomod@divisor+4)^0,w,c
  8354  0028AA  5A17               	subwfb	(___aomod@dividend+4)^0,f,c
  8355  0028AC  5020               	movf	(___aomod@divisor+5)^0,w,c
  8356  0028AE  5A18               	subwfb	(___aomod@dividend+5)^0,f,c
  8357  0028B0  5021               	movf	(___aomod@divisor+6)^0,w,c
  8358  0028B2  5A19               	subwfb	(___aomod@dividend+6)^0,f,c
  8359  0028B4  5022               	movf	(___aomod@divisor+7)^0,w,c
  8360  0028B6  5A1A               	subwfb	(___aomod@dividend+7)^0,f,c
  8361  0028B8                     l4949:
  8362  0028B8  90D8               	bcf	status,0,c
  8363  0028BA  3222               	rrcf	(___aomod@divisor+7)^0,f,c
  8364  0028BC  3221               	rrcf	(___aomod@divisor+6)^0,f,c
  8365  0028BE  3220               	rrcf	(___aomod@divisor+5)^0,f,c
  8366  0028C0  321F               	rrcf	(___aomod@divisor+4)^0,f,c
  8367  0028C2  321E               	rrcf	(___aomod@divisor+3)^0,f,c
  8368  0028C4  321D               	rrcf	(___aomod@divisor+2)^0,f,c
  8369  0028C6  321C               	rrcf	(___aomod@divisor+1)^0,f,c
  8370  0028C8  321B               	rrcf	___aomod@divisor^0,f,c
  8371  0028CA  2E23               	decfsz	___aomod@counter^0,f,c
  8372  0028CC  EF35  F014         	goto	l4945
  8373  0028D0                     l4953:
  8374  0028D0  5024               	movf	___aomod@sign^0,w,c
  8375  0028D2  B4D8               	btfsc	status,2,c
  8376  0028D4  EF6E  F014         	goto	u4901
  8377  0028D8  EF70  F014         	goto	u4900
  8378  0028DC                     u4901:
  8379  0028DC  EF80  F014         	goto	l4957
  8380  0028E0                     u4900:
  8381  0028E0  1E1A               	comf	(___aomod@dividend+7)^0,f,c
  8382  0028E2  1E19               	comf	(___aomod@dividend+6)^0,f,c
  8383  0028E4  1E18               	comf	(___aomod@dividend+5)^0,f,c
  8384  0028E6  1E17               	comf	(___aomod@dividend+4)^0,f,c
  8385  0028E8  1E16               	comf	(___aomod@dividend+3)^0,f,c
  8386  0028EA  1E15               	comf	(___aomod@dividend+2)^0,f,c
  8387  0028EC  1E14               	comf	(___aomod@dividend+1)^0,f,c
  8388  0028EE  6C13               	negf	___aomod@dividend^0,c
  8389  0028F0  0E00               	movlw	0
  8390  0028F2  2214               	addwfc	(___aomod@dividend+1)^0,f,c
  8391  0028F4  2215               	addwfc	(___aomod@dividend+2)^0,f,c
  8392  0028F6  2216               	addwfc	(___aomod@dividend+3)^0,f,c
  8393  0028F8  2217               	addwfc	(___aomod@dividend+4)^0,f,c
  8394  0028FA  2218               	addwfc	(___aomod@dividend+5)^0,f,c
  8395  0028FC  2219               	addwfc	(___aomod@dividend+6)^0,f,c
  8396  0028FE  221A               	addwfc	(___aomod@dividend+7)^0,f,c
  8397  002900                     l4957:
  8398  002900  C013  F013         	movff	___aomod@dividend,?___aomod
  8399  002904  C014  F014         	movff	___aomod@dividend+1,?___aomod+1
  8400  002908  C015  F015         	movff	___aomod@dividend+2,?___aomod+2
  8401  00290C  C016  F016         	movff	___aomod@dividend+3,?___aomod+3
  8402  002910  C017  F017         	movff	___aomod@dividend+4,?___aomod+4
  8403  002914  C018  F018         	movff	___aomod@dividend+5,?___aomod+5
  8404  002918  C019  F019         	movff	___aomod@dividend+6,?___aomod+6
  8405  00291C  C01A  F01A         	movff	___aomod@dividend+7,?___aomod+7
  8406  002920  0012               	return		;funcret
  8407  002922                     __end_of___aomod:
  8408                           	opt callstack 0
  8409                           
  8410 ;; *************** function ___aodiv *****************
  8411 ;; Defined at:
  8412 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  dividend        8   18[COMRAM] long long 
  8415 ;;  divisor         8   26[COMRAM] long long 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  quotient        8   36[COMRAM] long long 
  8418 ;;  sign            1   35[COMRAM] unsigned char 
  8419 ;;  counter         1   34[COMRAM] unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  8   18[COMRAM] long long 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8429 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8430 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8432 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8433 ;;Total ram usage:       26 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    5
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_dtoa
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text19
  8444  0021D2                     __ptext19:
  8445                           	opt callstack 0
  8446  0021D2                     ___aodiv:
  8447                           	opt callstack 20
  8448  0021D2  0E00               	movlw	0
  8449  0021D4  6E24               	movwf	___aodiv@sign^0,c
  8450  0021D6  BE22               	btfsc	(___aodiv@divisor+7)^0,7,c
  8451  0021D8  EFF2  F010         	goto	u4780
  8452  0021DC  EFF0  F010         	goto	u4781
  8453  0021E0                     u4781:
  8454  0021E0  EF04  F011         	goto	l4889
  8455  0021E4                     u4780:
  8456  0021E4  1E22               	comf	(___aodiv@divisor+7)^0,f,c
  8457  0021E6  1E21               	comf	(___aodiv@divisor+6)^0,f,c
  8458  0021E8  1E20               	comf	(___aodiv@divisor+5)^0,f,c
  8459  0021EA  1E1F               	comf	(___aodiv@divisor+4)^0,f,c
  8460  0021EC  1E1E               	comf	(___aodiv@divisor+3)^0,f,c
  8461  0021EE  1E1D               	comf	(___aodiv@divisor+2)^0,f,c
  8462  0021F0  1E1C               	comf	(___aodiv@divisor+1)^0,f,c
  8463  0021F2  6C1B               	negf	___aodiv@divisor^0,c
  8464  0021F4  0E00               	movlw	0
  8465  0021F6  221C               	addwfc	(___aodiv@divisor+1)^0,f,c
  8466  0021F8  221D               	addwfc	(___aodiv@divisor+2)^0,f,c
  8467  0021FA  221E               	addwfc	(___aodiv@divisor+3)^0,f,c
  8468  0021FC  221F               	addwfc	(___aodiv@divisor+4)^0,f,c
  8469  0021FE  2220               	addwfc	(___aodiv@divisor+5)^0,f,c
  8470  002200  2221               	addwfc	(___aodiv@divisor+6)^0,f,c
  8471  002202  2222               	addwfc	(___aodiv@divisor+7)^0,f,c
  8472  002204  0E01               	movlw	1
  8473  002206  6E24               	movwf	___aodiv@sign^0,c
  8474  002208                     l4889:
  8475  002208  BE1A               	btfsc	(___aodiv@dividend+7)^0,7,c
  8476  00220A  EF0B  F011         	goto	u4790
  8477  00220E  EF09  F011         	goto	u4791
  8478  002212                     u4791:
  8479  002212  EF1D  F011         	goto	l4895
  8480  002216                     u4790:
  8481  002216  1E1A               	comf	(___aodiv@dividend+7)^0,f,c
  8482  002218  1E19               	comf	(___aodiv@dividend+6)^0,f,c
  8483  00221A  1E18               	comf	(___aodiv@dividend+5)^0,f,c
  8484  00221C  1E17               	comf	(___aodiv@dividend+4)^0,f,c
  8485  00221E  1E16               	comf	(___aodiv@dividend+3)^0,f,c
  8486  002220  1E15               	comf	(___aodiv@dividend+2)^0,f,c
  8487  002222  1E14               	comf	(___aodiv@dividend+1)^0,f,c
  8488  002224  6C13               	negf	___aodiv@dividend^0,c
  8489  002226  0E00               	movlw	0
  8490  002228  2214               	addwfc	(___aodiv@dividend+1)^0,f,c
  8491  00222A  2215               	addwfc	(___aodiv@dividend+2)^0,f,c
  8492  00222C  2216               	addwfc	(___aodiv@dividend+3)^0,f,c
  8493  00222E  2217               	addwfc	(___aodiv@dividend+4)^0,f,c
  8494  002230  2218               	addwfc	(___aodiv@dividend+5)^0,f,c
  8495  002232  2219               	addwfc	(___aodiv@dividend+6)^0,f,c
  8496  002234  221A               	addwfc	(___aodiv@dividend+7)^0,f,c
  8497  002236  0E01               	movlw	1
  8498  002238  1A24               	xorwf	___aodiv@sign^0,f,c
  8499  00223A                     l4895:
  8500  00223A  EE20  F025         	lfsr	2,___aodiv@quotient
  8501  00223E  0E07               	movlw	7
  8502  002240                     u4801:
  8503  002240  6ADE               	clrf	postinc2,c
  8504  002242  06E8               	decf	wreg,f,c
  8505  002244  E2FD               	bc	u4801
  8506  002246  501B               	movf	___aodiv@divisor^0,w,c
  8507  002248  101C               	iorwf	(___aodiv@divisor+1)^0,w,c
  8508  00224A  101D               	iorwf	(___aodiv@divisor+2)^0,w,c
  8509  00224C  101E               	iorwf	(___aodiv@divisor+3)^0,w,c
  8510  00224E  101F               	iorwf	(___aodiv@divisor+4)^0,w,c
  8511  002250  1020               	iorwf	(___aodiv@divisor+5)^0,w,c
  8512  002252  1021               	iorwf	(___aodiv@divisor+6)^0,w,c
  8513  002254  1022               	iorwf	(___aodiv@divisor+7)^0,w,c
  8514  002256  B4D8               	btfsc	status,2,c
  8515  002258  EF30  F011         	goto	u4811
  8516  00225C  EF32  F011         	goto	u4810
  8517  002260                     u4811:
  8518  002260  EF84  F011         	goto	l4917
  8519  002264                     u4810:
  8520  002264  0E01               	movlw	1
  8521  002266  6E23               	movwf	___aodiv@counter^0,c
  8522  002268  EF40  F011         	goto	l4903
  8523  00226C                     l4901:
  8524  00226C  90D8               	bcf	status,0,c
  8525  00226E  361B               	rlcf	___aodiv@divisor^0,f,c
  8526  002270  361C               	rlcf	(___aodiv@divisor+1)^0,f,c
  8527  002272  361D               	rlcf	(___aodiv@divisor+2)^0,f,c
  8528  002274  361E               	rlcf	(___aodiv@divisor+3)^0,f,c
  8529  002276  361F               	rlcf	(___aodiv@divisor+4)^0,f,c
  8530  002278  3620               	rlcf	(___aodiv@divisor+5)^0,f,c
  8531  00227A  3621               	rlcf	(___aodiv@divisor+6)^0,f,c
  8532  00227C  3622               	rlcf	(___aodiv@divisor+7)^0,f,c
  8533  00227E  2A23               	incf	___aodiv@counter^0,f,c
  8534  002280                     l4903:
  8535  002280  AE22               	btfss	(___aodiv@divisor+7)^0,7,c
  8536  002282  EF45  F011         	goto	u4821
  8537  002286  EF47  F011         	goto	u4820
  8538  00228A                     u4821:
  8539  00228A  EF36  F011         	goto	l4901
  8540  00228E                     u4820:
  8541  00228E                     l4905:
  8542  00228E  90D8               	bcf	status,0,c
  8543  002290  3625               	rlcf	___aodiv@quotient^0,f,c
  8544  002292  3626               	rlcf	(___aodiv@quotient+1)^0,f,c
  8545  002294  3627               	rlcf	(___aodiv@quotient+2)^0,f,c
  8546  002296  3628               	rlcf	(___aodiv@quotient+3)^0,f,c
  8547  002298  3629               	rlcf	(___aodiv@quotient+4)^0,f,c
  8548  00229A  362A               	rlcf	(___aodiv@quotient+5)^0,f,c
  8549  00229C  362B               	rlcf	(___aodiv@quotient+6)^0,f,c
  8550  00229E  362C               	rlcf	(___aodiv@quotient+7)^0,f,c
  8551  0022A0  501B               	movf	___aodiv@divisor^0,w,c
  8552  0022A2  5C13               	subwf	___aodiv@dividend^0,w,c
  8553  0022A4  501C               	movf	(___aodiv@divisor+1)^0,w,c
  8554  0022A6  5814               	subwfb	(___aodiv@dividend+1)^0,w,c
  8555  0022A8  501D               	movf	(___aodiv@divisor+2)^0,w,c
  8556  0022AA  5815               	subwfb	(___aodiv@dividend+2)^0,w,c
  8557  0022AC  501E               	movf	(___aodiv@divisor+3)^0,w,c
  8558  0022AE  5816               	subwfb	(___aodiv@dividend+3)^0,w,c
  8559  0022B0  501F               	movf	(___aodiv@divisor+4)^0,w,c
  8560  0022B2  5817               	subwfb	(___aodiv@dividend+4)^0,w,c
  8561  0022B4  5020               	movf	(___aodiv@divisor+5)^0,w,c
  8562  0022B6  5818               	subwfb	(___aodiv@dividend+5)^0,w,c
  8563  0022B8  5021               	movf	(___aodiv@divisor+6)^0,w,c
  8564  0022BA  5819               	subwfb	(___aodiv@dividend+6)^0,w,c
  8565  0022BC  5022               	movf	(___aodiv@divisor+7)^0,w,c
  8566  0022BE  581A               	subwfb	(___aodiv@dividend+7)^0,w,c
  8567  0022C0  A0D8               	btfss	status,0,c
  8568  0022C2  EF65  F011         	goto	u4831
  8569  0022C6  EF67  F011         	goto	u4830
  8570  0022CA                     u4831:
  8571  0022CA  EF78  F011         	goto	l4913
  8572  0022CE                     u4830:
  8573  0022CE  501B               	movf	___aodiv@divisor^0,w,c
  8574  0022D0  5E13               	subwf	___aodiv@dividend^0,f,c
  8575  0022D2  501C               	movf	(___aodiv@divisor+1)^0,w,c
  8576  0022D4  5A14               	subwfb	(___aodiv@dividend+1)^0,f,c
  8577  0022D6  501D               	movf	(___aodiv@divisor+2)^0,w,c
  8578  0022D8  5A15               	subwfb	(___aodiv@dividend+2)^0,f,c
  8579  0022DA  501E               	movf	(___aodiv@divisor+3)^0,w,c
  8580  0022DC  5A16               	subwfb	(___aodiv@dividend+3)^0,f,c
  8581  0022DE  501F               	movf	(___aodiv@divisor+4)^0,w,c
  8582  0022E0  5A17               	subwfb	(___aodiv@dividend+4)^0,f,c
  8583  0022E2  5020               	movf	(___aodiv@divisor+5)^0,w,c
  8584  0022E4  5A18               	subwfb	(___aodiv@dividend+5)^0,f,c
  8585  0022E6  5021               	movf	(___aodiv@divisor+6)^0,w,c
  8586  0022E8  5A19               	subwfb	(___aodiv@dividend+6)^0,f,c
  8587  0022EA  5022               	movf	(___aodiv@divisor+7)^0,w,c
  8588  0022EC  5A1A               	subwfb	(___aodiv@dividend+7)^0,f,c
  8589  0022EE  8025               	bsf	___aodiv@quotient^0,0,c
  8590  0022F0                     l4913:
  8591  0022F0  90D8               	bcf	status,0,c
  8592  0022F2  3222               	rrcf	(___aodiv@divisor+7)^0,f,c
  8593  0022F4  3221               	rrcf	(___aodiv@divisor+6)^0,f,c
  8594  0022F6  3220               	rrcf	(___aodiv@divisor+5)^0,f,c
  8595  0022F8  321F               	rrcf	(___aodiv@divisor+4)^0,f,c
  8596  0022FA  321E               	rrcf	(___aodiv@divisor+3)^0,f,c
  8597  0022FC  321D               	rrcf	(___aodiv@divisor+2)^0,f,c
  8598  0022FE  321C               	rrcf	(___aodiv@divisor+1)^0,f,c
  8599  002300  321B               	rrcf	___aodiv@divisor^0,f,c
  8600  002302  2E23               	decfsz	___aodiv@counter^0,f,c
  8601  002304  EF47  F011         	goto	l4905
  8602  002308                     l4917:
  8603  002308  5024               	movf	___aodiv@sign^0,w,c
  8604  00230A  B4D8               	btfsc	status,2,c
  8605  00230C  EF8A  F011         	goto	u4841
  8606  002310  EF8C  F011         	goto	u4840
  8607  002314                     u4841:
  8608  002314  EF9C  F011         	goto	l4921
  8609  002318                     u4840:
  8610  002318  1E2C               	comf	(___aodiv@quotient+7)^0,f,c
  8611  00231A  1E2B               	comf	(___aodiv@quotient+6)^0,f,c
  8612  00231C  1E2A               	comf	(___aodiv@quotient+5)^0,f,c
  8613  00231E  1E29               	comf	(___aodiv@quotient+4)^0,f,c
  8614  002320  1E28               	comf	(___aodiv@quotient+3)^0,f,c
  8615  002322  1E27               	comf	(___aodiv@quotient+2)^0,f,c
  8616  002324  1E26               	comf	(___aodiv@quotient+1)^0,f,c
  8617  002326  6C25               	negf	___aodiv@quotient^0,c
  8618  002328  0E00               	movlw	0
  8619  00232A  2226               	addwfc	(___aodiv@quotient+1)^0,f,c
  8620  00232C  2227               	addwfc	(___aodiv@quotient+2)^0,f,c
  8621  00232E  2228               	addwfc	(___aodiv@quotient+3)^0,f,c
  8622  002330  2229               	addwfc	(___aodiv@quotient+4)^0,f,c
  8623  002332  222A               	addwfc	(___aodiv@quotient+5)^0,f,c
  8624  002334  222B               	addwfc	(___aodiv@quotient+6)^0,f,c
  8625  002336  222C               	addwfc	(___aodiv@quotient+7)^0,f,c
  8626  002338                     l4921:
  8627  002338  C025  F013         	movff	___aodiv@quotient,?___aodiv
  8628  00233C  C026  F014         	movff	___aodiv@quotient+1,?___aodiv+1
  8629  002340  C027  F015         	movff	___aodiv@quotient+2,?___aodiv+2
  8630  002344  C028  F016         	movff	___aodiv@quotient+3,?___aodiv+3
  8631  002348  C029  F017         	movff	___aodiv@quotient+4,?___aodiv+4
  8632  00234C  C02A  F018         	movff	___aodiv@quotient+5,?___aodiv+5
  8633  002350  C02B  F019         	movff	___aodiv@quotient+6,?___aodiv+6
  8634  002354  C02C  F01A         	movff	___aodiv@quotient+7,?___aodiv+7
  8635  002358  0012               	return		;funcret
  8636  00235A                     __end_of___aodiv:
  8637                           	opt callstack 0
  8638                           
  8639 ;; *************** function _ctoa *****************
  8640 ;; Defined at:
  8641 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  8644 ;;		 -> vsnprintf@f(6), 
  8645 ;;  c               1   47[COMRAM] unsigned char 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  w               2   48[COMRAM] int 
  8648 ;;  l               2    0        int 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  2   45[COMRAM] int 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8658 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;Total ram usage:        5 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    9
  8665 ;; This function calls:
  8666 ;;		_pad
  8667 ;; This function is called by:
  8668 ;;		_vfpfcnvrt
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           	psect	text20
  8673  00335E                     __ptext20:
  8674                           	opt callstack 0
  8675  00335E                     _ctoa:
  8676                           	opt callstack 17
  8677  00335E                     
  8678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8679  00335E  503F               	movf	_width^0,w,c
  8680  003360  1040               	iorwf	(_width+1)^0,w,c
  8681  003362  A4D8               	btfss	status,2,c
  8682  003364  EFB6  F019         	goto	u5011
  8683  003368  EFB8  F019         	goto	u5010
  8684  00336C                     u5011:
  8685  00336C  EFBE  F019         	goto	l5023
  8686  003370                     u5010:
  8687  003370  C03F  F031         	movff	_width,ctoa@w
  8688  003374  C040  F032         	movff	_width+1,ctoa@w+1
  8689  003378  EFC4  F019         	goto	l5025
  8690  00337C                     l5023:
  8691  00337C  0EFF               	movlw	255
  8692  00337E  243F               	addwf	_width^0,w,c
  8693  003380  6E31               	movwf	ctoa@w^0,c
  8694  003382  0EFF               	movlw	255
  8695  003384  2040               	addwfc	(_width+1)^0,w,c
  8696  003386  6E32               	movwf	(ctoa@w+1)^0,c
  8697  003388                     l5025:
  8698                           
  8699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8700  003388  C030  F0CB         	movff	ctoa@c,_dbuf
  8701  00338C                     
  8702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8703  00338C  0E00               	movlw	0
  8704  00338E  0100               	movlb	0	; () banked
  8705  003390  6FCC               	movwf	(_dbuf+1)& (0+255),b
  8706  003392                     
  8707                           ; BSR set to: 0
  8708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8709  003392  C02E  F023         	movff	ctoa@fp,pad@fp
  8710  003396  C02F  F024         	movff	ctoa@fp+1,pad@fp+1
  8711  00339A  0ECB               	movlw	low _dbuf
  8712  00339C  6E25               	movwf	pad@buf^0,c
  8713  00339E  0E00               	movlw	high _dbuf
  8714  0033A0  6E26               	movwf	(pad@buf+1)^0,c
  8715  0033A2  C031  F027         	movff	ctoa@w,pad@p
  8716  0033A6  C032  F028         	movff	ctoa@w+1,pad@p+1
  8717  0033AA  EC54  F018         	call	_pad	;wreg free
  8718  0033AE  C023  F02E         	movff	?_pad,?_ctoa
  8719  0033B2  C024  F02F         	movff	?_pad+1,?_ctoa+1
  8720  0033B6  0012               	return		;funcret
  8721  0033B8                     __end_of_ctoa:
  8722                           	opt callstack 0
  8723                           
  8724 ;; *************** function _pad *****************
  8725 ;; Defined at:
  8726 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  8729 ;;		 -> vsnprintf@f(6), 
  8730 ;;  buf             2   36[COMRAM] PTR unsigned char 
  8731 ;;		 -> dbuf(32), 
  8732 ;;  p               2   38[COMRAM] int 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  w               2   43[COMRAM] int 
  8735 ;;  i               2   41[COMRAM] int 
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  2   34[COMRAM] int 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8745 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8746 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8748 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8749 ;;Total ram usage:       11 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    8
  8752 ;; This function calls:
  8753 ;;		_fputc
  8754 ;;		_fputs
  8755 ;;		_strlen
  8756 ;; This function is called by:
  8757 ;;		_ctoa
  8758 ;;		_dtoa
  8759 ;;		_otoa
  8760 ;;		_utoa
  8761 ;;		_xtoa
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text21
  8766  0030A8                     __ptext21:
  8767                           	opt callstack 0
  8768  0030A8                     _pad:
  8769                           	opt callstack 17
  8770  0030A8                     
  8771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8772  0030A8  A043               	btfss	_flags^0,0,c
  8773  0030AA  EF59  F018         	goto	u4641
  8774  0030AE  EF5B  F018         	goto	u4640
  8775  0030B2                     u4641:
  8776  0030B2  EF65  F018         	goto	l4831
  8777  0030B6                     u4640:
  8778  0030B6                     
  8779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8780  0030B6  C025  F01C         	movff	pad@buf,fputs@s
  8781  0030BA  C026  F01D         	movff	pad@buf+1,fputs@s+1
  8782  0030BE  C023  F01E         	movff	pad@fp,fputs@fp
  8783  0030C2  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  8784  0030C6  ECBA  F01A         	call	_fputs	;wreg free
  8785  0030CA                     l4831:
  8786                           
  8787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8788  0030CA  BE28               	btfsc	(pad@p+1)^0,7,c
  8789  0030CC  EF6A  F018         	goto	u4651
  8790  0030D0  EF6C  F018         	goto	u4650
  8791  0030D4                     u4651:
  8792  0030D4  EF72  F018         	goto	l4835
  8793  0030D8                     u4650:
  8794  0030D8  C027  F02C         	movff	pad@p,pad@w
  8795  0030DC  C028  F02D         	movff	pad@p+1,pad@w+1
  8796  0030E0  EF76  F018         	goto	l454
  8797  0030E4                     l4835:
  8798  0030E4  0E00               	movlw	0
  8799  0030E6  6E2D               	movwf	(pad@w+1)^0,c
  8800  0030E8  0E00               	movlw	0
  8801  0030EA  6E2C               	movwf	pad@w^0,c
  8802  0030EC                     l454:
  8803                           
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8805  0030EC  0E00               	movlw	0
  8806  0030EE  6E2B               	movwf	(pad@i+1)^0,c
  8807  0030F0  0E00               	movlw	0
  8808  0030F2  6E2A               	movwf	pad@i^0,c
  8809                           
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8811  0030F4  EF88  F018         	goto	l4841
  8812  0030F8                     l4837:
  8813                           
  8814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8815  0030F8  0E00               	movlw	0
  8816  0030FA  6E14               	movwf	(fputc@c+1)^0,c
  8817  0030FC  0E20               	movlw	32
  8818  0030FE  6E13               	movwf	fputc@c^0,c
  8819  003100  C023  F015         	movff	pad@fp,fputc@fp
  8820  003104  C024  F016         	movff	pad@fp+1,fputc@fp+1
  8821  003108  EC8D  F017         	call	_fputc	;wreg free
  8822  00310C                     
  8823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8824  00310C  4A2A               	infsnz	pad@i^0,f,c
  8825  00310E  2A2B               	incf	(pad@i+1)^0,f,c
  8826  003110                     l4841:
  8827                           
  8828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8829  003110  502C               	movf	pad@w^0,w,c
  8830  003112  5C2A               	subwf	pad@i^0,w,c
  8831  003114  502B               	movf	(pad@i+1)^0,w,c
  8832  003116  0A80               	xorlw	128
  8833  003118  6E29               	movwf	??_pad^0,c
  8834  00311A  502D               	movf	(pad@w+1)^0,w,c
  8835  00311C  0A80               	xorlw	128
  8836  00311E  5829               	subwfb	??_pad^0,w,c
  8837  003120  A0D8               	btfss	status,0,c
  8838  003122  EF95  F018         	goto	u4661
  8839  003126  EF97  F018         	goto	u4660
  8840  00312A                     u4661:
  8841  00312A  EF7C  F018         	goto	l4837
  8842  00312E                     u4660:
  8843  00312E                     
  8844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8845  00312E  B043               	btfsc	_flags^0,0,c
  8846  003130  EF9C  F018         	goto	u4671
  8847  003134  EF9E  F018         	goto	u4670
  8848  003138                     u4671:
  8849  003138  EFA8  F018         	goto	l4845
  8850  00313C                     u4670:
  8851  00313C                     
  8852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8853  00313C  C025  F01C         	movff	pad@buf,fputs@s
  8854  003140  C026  F01D         	movff	pad@buf+1,fputs@s+1
  8855  003144  C023  F01E         	movff	pad@fp,fputs@fp
  8856  003148  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  8857  00314C  ECBA  F01A         	call	_fputs	;wreg free
  8858  003150                     l4845:
  8859                           
  8860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8861  003150  C025  F013         	movff	pad@buf,strlen@s
  8862  003154  C026  F014         	movff	pad@buf+1,strlen@s+1
  8863  003158  EC8F  F01B         	call	_strlen	;wreg free
  8864  00315C  502C               	movf	pad@w^0,w,c
  8865  00315E  2413               	addwf	?_strlen^0,w,c
  8866  003160  6E23               	movwf	?_pad^0,c
  8867  003162  502D               	movf	(pad@w+1)^0,w,c
  8868  003164  2014               	addwfc	(?_strlen+1)^0,w,c
  8869  003166  6E24               	movwf	(?_pad+1)^0,c
  8870  003168  0012               	return		;funcret
  8871  00316A                     __end_of_pad:
  8872                           	opt callstack 0
  8873                           
  8874 ;; *************** function _strlen *****************
  8875 ;; Defined at:
  8876 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  s               2   18[COMRAM] PTR const unsigned char 
  8879 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), codigo_digital(2), 
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  a               2   20[COMRAM] PTR const unsigned char 
  8882 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), codigo_digital(2), 
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  2   18[COMRAM] unsigned int 
  8885 ;; Registers used:
  8886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8887 ;; Tracked objects:
  8888 ;;		On entry : 0/0
  8889 ;;		On exit  : 0/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8896 ;;Total ram usage:        4 bytes
  8897 ;; Hardware stack levels used:    1
  8898 ;; Hardware stack levels required when called:    5
  8899 ;; This function calls:
  8900 ;;		Nothing
  8901 ;; This function is called by:
  8902 ;;		_pad
  8903 ;;		_stoa
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           	psect	text22
  8908  00371E                     __ptext22:
  8909                           	opt callstack 0
  8910  00371E                     _strlen:
  8911                           	opt callstack 19
  8912  00371E  C013  F015         	movff	strlen@s,strlen@a
  8913  003722  C014  F016         	movff	strlen@s+1,strlen@a+1
  8914  003726  EF97  F01B         	goto	l4815
  8915  00372A                     l4813:
  8916  00372A  4A13               	infsnz	strlen@s^0,f,c
  8917  00372C  2A14               	incf	(strlen@s+1)^0,f,c
  8918  00372E                     l4815:
  8919  00372E  C013  FFD9         	movff	strlen@s,fsr2l
  8920  003732  C014  FFDA         	movff	strlen@s+1,fsr2h
  8921  003736  50DF               	movf	indf2,w,c
  8922  003738  A4D8               	btfss	status,2,c
  8923  00373A  EFA1  F01B         	goto	u4601
  8924  00373E  EFA3  F01B         	goto	u4600
  8925  003742                     u4601:
  8926  003742  EF95  F01B         	goto	l4813
  8927  003746                     u4600:
  8928  003746  5015               	movf	strlen@a^0,w,c
  8929  003748  5C13               	subwf	strlen@s^0,w,c
  8930  00374A  6E13               	movwf	?_strlen^0,c
  8931  00374C  5016               	movf	(strlen@a+1)^0,w,c
  8932  00374E  5814               	subwfb	(strlen@s+1)^0,w,c
  8933  003750  6E14               	movwf	(?_strlen+1)^0,c
  8934  003752  0012               	return		;funcret
  8935  003754                     __end_of_strlen:
  8936                           	opt callstack 0
  8937                           
  8938 ;; *************** function _fputs *****************
  8939 ;; Defined at:
  8940 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  s               2   27[COMRAM] PTR const unsigned char 
  8943 ;;		 -> dbuf(32), 
  8944 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8945 ;;		 -> vsnprintf@f(6), 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  i               2   32[COMRAM] int 
  8948 ;;  c               1   31[COMRAM] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  2   27[COMRAM] int 
  8951 ;; Registers used:
  8952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8959 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8961 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8962 ;;Total ram usage:        7 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    7
  8965 ;; This function calls:
  8966 ;;		_fputc
  8967 ;; This function is called by:
  8968 ;;		_pad
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text23
  8973  003574                     __ptext23:
  8974                           	opt callstack 0
  8975  003574                     _fputs:
  8976                           	opt callstack 17
  8977  003574  0E00               	movlw	0
  8978  003576  6E22               	movwf	(fputs@i+1)^0,c
  8979  003578  0E00               	movlw	0
  8980  00357A  6E21               	movwf	fputs@i^0,c
  8981  00357C  EFCB  F01A         	goto	l4809
  8982  003580                     l4805:
  8983  003580  C020  F013         	movff	fputs@c,fputc@c
  8984  003584  6A14               	clrf	(fputc@c+1)^0,c
  8985  003586  C01E  F015         	movff	fputs@fp,fputc@fp
  8986  00358A  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  8987  00358E  EC8D  F017         	call	_fputc	;wreg free
  8988  003592  4A21               	infsnz	fputs@i^0,f,c
  8989  003594  2A22               	incf	(fputs@i+1)^0,f,c
  8990  003596                     l4809:
  8991  003596  5021               	movf	fputs@i^0,w,c
  8992  003598  241C               	addwf	fputs@s^0,w,c
  8993  00359A  6ED9               	movwf	fsr2l,c
  8994  00359C  5022               	movf	(fputs@i+1)^0,w,c
  8995  00359E  201D               	addwfc	(fputs@s+1)^0,w,c
  8996  0035A0  6EDA               	movwf	fsr2h,c
  8997  0035A2  50DF               	movf	indf2,w,c
  8998  0035A4  6E20               	movwf	fputs@c^0,c
  8999  0035A6  5020               	movf	fputs@c^0,w,c
  9000  0035A8  A4D8               	btfss	status,2,c
  9001  0035AA  EFD9  F01A         	goto	u4591
  9002  0035AE  EFDB  F01A         	goto	u4590
  9003  0035B2                     u4591:
  9004  0035B2  EFC0  F01A         	goto	l4805
  9005  0035B6                     u4590:
  9006  0035B6  0012               	return		;funcret
  9007  0035B8                     __end_of_fputs:
  9008                           	opt callstack 0
  9009                           
  9010 ;; *************** function _fputc *****************
  9011 ;; Defined at:
  9012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  c               2   18[COMRAM] int 
  9015 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  9016 ;;		 -> vsnprintf@f(6), 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  2   18[COMRAM] int 
  9021 ;; Registers used:
  9022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;Total ram usage:        9 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; Hardware stack levels required when called:    6
  9035 ;; This function calls:
  9036 ;;		_putch
  9037 ;; This function is called by:
  9038 ;;		_pad
  9039 ;;		_stoa
  9040 ;;		_vfpfcnvrt
  9041 ;;		_fputs
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text24
  9046  002F1A                     __ptext24:
  9047                           	opt callstack 0
  9048  002F1A                     _fputc:
  9049                           	opt callstack 17
  9050  002F1A  5015               	movf	fputc@fp^0,w,c
  9051  002F1C  1016               	iorwf	(fputc@fp+1)^0,w,c
  9052  002F1E  B4D8               	btfsc	status,2,c
  9053  002F20  EF94  F017         	goto	u4551
  9054  002F24  EF96  F017         	goto	u4550
  9055  002F28                     u4551:
  9056  002F28  EF9F  F017         	goto	l4793
  9057  002F2C                     u4550:
  9058  002F2C  5015               	movf	fputc@fp^0,w,c
  9059  002F2E  1016               	iorwf	(fputc@fp+1)^0,w,c
  9060  002F30  A4D8               	btfss	status,2,c
  9061  002F32  EF9D  F017         	goto	u4561
  9062  002F36  EF9F  F017         	goto	u4560
  9063  002F3A                     u4561:
  9064  002F3A  EFA4  F017         	goto	l4795
  9065  002F3E                     u4560:
  9066  002F3E                     l4793:
  9067  002F3E  5013               	movf	fputc@c^0,w,c
  9068  002F40  ECEC  F01C         	call	_putch
  9069  002F44  EFF1  F017         	goto	l1408
  9070  002F48                     l4795:
  9071  002F48  EE20 F004          	lfsr	2,4
  9072  002F4C  5015               	movf	fputc@fp^0,w,c
  9073  002F4E  26D9               	addwf	fsr2l,f,c
  9074  002F50  5016               	movf	(fputc@fp+1)^0,w,c
  9075  002F52  22DA               	addwfc	fsr2h,f,c
  9076  002F54  50DE               	movf	postinc2,w,c
  9077  002F56  10DE               	iorwf	postinc2,w,c
  9078  002F58  B4D8               	btfsc	status,2,c
  9079  002F5A  EFB1  F017         	goto	u4571
  9080  002F5E  EFB3  F017         	goto	u4570
  9081  002F62                     u4571:
  9082  002F62  EFCE  F017         	goto	l4799
  9083  002F66                     u4570:
  9084  002F66  EE20 F004          	lfsr	2,4
  9085  002F6A  5015               	movf	fputc@fp^0,w,c
  9086  002F6C  26D9               	addwf	fsr2l,f,c
  9087  002F6E  5016               	movf	(fputc@fp+1)^0,w,c
  9088  002F70  22DA               	addwfc	fsr2h,f,c
  9089  002F72  EE10 F002          	lfsr	1,2
  9090  002F76  5015               	movf	fputc@fp^0,w,c
  9091  002F78  26E1               	addwf	fsr1l,f,c
  9092  002F7A  5016               	movf	(fputc@fp+1)^0,w,c
  9093  002F7C  22E2               	addwfc	fsr1h,f,c
  9094  002F7E  50DE               	movf	postinc2,w,c
  9095  002F80  5CE6               	subwf	postinc1,w,c
  9096  002F82  50E6               	movf	postinc1,w,c
  9097  002F84  0A80               	xorlw	128
  9098  002F86  6E1B               	movwf	(??_fputc+4)^0,c
  9099  002F88  50DE               	movf	postinc2,w,c
  9100  002F8A  0A80               	xorlw	128
  9101  002F8C  581B               	subwfb	(??_fputc+4)^0,w,c
  9102  002F8E  B0D8               	btfsc	status,0,c
  9103  002F90  EFCC  F017         	goto	u4581
  9104  002F94  EFCE  F017         	goto	u4580
  9105  002F98                     u4581:
  9106  002F98  EFF1  F017         	goto	l1408
  9107  002F9C                     u4580:
  9108  002F9C                     l4799:
  9109  002F9C  EE20 F002          	lfsr	2,2
  9110  002FA0  5015               	movf	fputc@fp^0,w,c
  9111  002FA2  26D9               	addwf	fsr2l,f,c
  9112  002FA4  5016               	movf	(fputc@fp+1)^0,w,c
  9113  002FA6  22DA               	addwfc	fsr2h,f,c
  9114  002FA8  CFDE F017          	movff	postinc2,??_fputc
  9115  002FAC  CFDD F018          	movff	postdec2,??_fputc+1
  9116  002FB0  C015  FFD9         	movff	fputc@fp,fsr2l
  9117  002FB4  C016  FFDA         	movff	fputc@fp+1,fsr2h
  9118  002FB8  CFDE F019          	movff	postinc2,??_fputc+2
  9119  002FBC  CFDD F01A          	movff	postdec2,??_fputc+3
  9120  002FC0  5017               	movf	??_fputc^0,w,c
  9121  002FC2  2419               	addwf	(??_fputc+2)^0,w,c
  9122  002FC4  6ED9               	movwf	fsr2l,c
  9123  002FC6  5018               	movf	(??_fputc+1)^0,w,c
  9124  002FC8  201A               	addwfc	(??_fputc+3)^0,w,c
  9125  002FCA  6EDA               	movwf	fsr2h,c
  9126  002FCC  C013  FFDF         	movff	fputc@c,indf2
  9127  002FD0  EE20 F002          	lfsr	2,2
  9128  002FD4  5015               	movf	fputc@fp^0,w,c
  9129  002FD6  26D9               	addwf	fsr2l,f,c
  9130  002FD8  5016               	movf	(fputc@fp+1)^0,w,c
  9131  002FDA  22DA               	addwfc	fsr2h,f,c
  9132  002FDC  2ADE               	incf	postinc2,f,c
  9133  002FDE  0E00               	movlw	0
  9134  002FE0  22DD               	addwfc	postdec2,f,c
  9135  002FE2                     l1408:
  9136  002FE2  0012               	return		;funcret
  9137  002FE4                     __end_of_fputc:
  9138                           	opt callstack 0
  9139                           
  9140 ;; *************** function _putch *****************
  9141 ;; Defined at:
  9142 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  c               1    wreg     unsigned char 
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;  c               1    0[COMRAM] unsigned char 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      void 
  9149 ;; Registers used:
  9150 ;;		wreg
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;Total ram usage:        0 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:    5
  9163 ;; This function calls:
  9164 ;;		Nothing
  9165 ;; This function is called by:
  9166 ;;		_fputc
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           	psect	text25
  9171  0039D8                     __ptext25:
  9172                           	opt callstack 0
  9173  0039D8                     _putch:
  9174                           	opt callstack 17
  9175  0039D8  0012               	return		;funcret
  9176  0039DA                     __end_of_putch:
  9177                           	opt callstack 0
  9178                           
  9179 ;; *************** function _atoi *****************
  9180 ;; Defined at:
  9181 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  s               2   25[COMRAM] PTR const unsigned char 
  9184 ;;		 -> STR_3(17), 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  n               2   38[COMRAM] int 
  9187 ;;  neg             2   31[COMRAM] int 
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  2   25[COMRAM] int 
  9190 ;; Registers used:
  9191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9192 ;; Tracked objects:
  9193 ;;		On entry : 0/0
  9194 ;;		On exit  : 0/0
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9198 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9200 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9201 ;;Total ram usage:       15 bytes
  9202 ;; Hardware stack levels used:    1
  9203 ;; Hardware stack levels required when called:    6
  9204 ;; This function calls:
  9205 ;;		___wmul
  9206 ;;		_isdigit
  9207 ;;		_isspace
  9208 ;; This function is called by:
  9209 ;;		_vfpfcnvrt
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text26
  9214  002038                     __ptext26:
  9215                           	opt callstack 0
  9216  002038                     _atoi:
  9217                           	opt callstack 20
  9218  002038  0E00               	movlw	0
  9219  00203A  6E28               	movwf	(atoi@n+1)^0,c
  9220  00203C  0E00               	movlw	0
  9221  00203E  6E27               	movwf	atoi@n^0,c
  9222  002040  0E00               	movlw	0
  9223  002042  6E21               	movwf	(atoi@neg+1)^0,c
  9224  002044  0E00               	movlw	0
  9225  002046  6E20               	movwf	atoi@neg^0,c
  9226  002048  EF28  F010         	goto	l5291
  9227  00204C                     l5289:
  9228  00204C  4A1A               	infsnz	atoi@s^0,f,c
  9229  00204E  2A1B               	incf	(atoi@s+1)^0,f,c
  9230  002050                     l5291:
  9231  002050  0E01               	movlw	1
  9232  002052  6E26               	movwf	_atoi$1851^0,c
  9233  002054  C01A  FFF6         	movff	atoi@s,tblptrl
  9234  002058  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9235  00205C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9236  00205C  6AF8               	clrf	tblptru,c
  9237  00205E                     	endif
  9238  00205E                     	if	0	;tblptru may be non-zero
  9239  00205E                     	endif
  9240  00205E  0008               	tblrd		*
  9241  002060  50F5               	movf	tablat,w,c
  9242  002062  0A20               	xorlw	32
  9243  002064  B4D8               	btfsc	status,2,c
  9244  002066  EF37  F010         	goto	u5601
  9245  00206A  EF39  F010         	goto	u5600
  9246  00206E                     u5601:
  9247  00206E  EF57  F010         	goto	l5299
  9248  002072                     u5600:
  9249  002072  0EF7               	movlw	247
  9250  002074  6E1C               	movwf	??_atoi^0,c
  9251  002076  0EFF               	movlw	255
  9252  002078  6E1D               	movwf	(??_atoi+1)^0,c
  9253  00207A  C01A  FFF6         	movff	atoi@s,tblptrl
  9254  00207E  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9255  002082                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9256  002082  6AF8               	clrf	tblptru,c
  9257  002084                     	endif
  9258  002084                     	if	0	;tblptru may be non-zero
  9259  002084                     	endif
  9260  002084  0008               	tblrd		*
  9261  002086  50F5               	movf	tablat,w,c
  9262  002088  6E1E               	movwf	(??_atoi+2)^0,c
  9263  00208A  6A1F               	clrf	(??_atoi+3)^0,c
  9264  00208C  501C               	movf	??_atoi^0,w,c
  9265  00208E  261E               	addwf	(??_atoi+2)^0,f,c
  9266  002090  501D               	movf	(??_atoi+1)^0,w,c
  9267  002092  221F               	addwfc	(??_atoi+3)^0,f,c
  9268  002094  501F               	movf	(??_atoi+3)^0,w,c
  9269  002096  E109               	bnz	u5610
  9270  002098  0E05               	movlw	5
  9271  00209A  5C1E               	subwf	(??_atoi+2)^0,w,c
  9272  00209C  A0D8               	btfss	status,0,c
  9273  00209E  EF53  F010         	goto	u5611
  9274  0020A2  EF55  F010         	goto	u5610
  9275  0020A6                     u5611:
  9276  0020A6  EF57  F010         	goto	l5299
  9277  0020AA                     u5610:
  9278  0020AA  0E00               	movlw	0
  9279  0020AC  6E26               	movwf	_atoi$1851^0,c
  9280  0020AE                     l5299:
  9281  0020AE  C026  F022         	movff	_atoi$1851,_atoi$1850
  9282  0020B2  6A23               	clrf	(_atoi$1850+1)^0,c
  9283  0020B4  5022               	movf	_atoi$1850^0,w,c
  9284  0020B6  1023               	iorwf	(_atoi$1850+1)^0,w,c
  9285  0020B8  A4D8               	btfss	status,2,c
  9286  0020BA  EF61  F010         	goto	u5621
  9287  0020BE  EF63  F010         	goto	u5620
  9288  0020C2                     u5621:
  9289  0020C2  EF26  F010         	goto	l5289
  9290  0020C6                     u5620:
  9291  0020C6  EF6D  F010         	goto	l5309
  9292  0020CA                     l5305:
  9293  0020CA  0E00               	movlw	0
  9294  0020CC  6E21               	movwf	(atoi@neg+1)^0,c
  9295  0020CE  0E01               	movlw	1
  9296  0020D0  6E20               	movwf	atoi@neg^0,c
  9297  0020D2                     l5307:
  9298  0020D2  4A1A               	infsnz	atoi@s^0,f,c
  9299  0020D4  2A1B               	incf	(atoi@s+1)^0,f,c
  9300  0020D6  EFA4  F010         	goto	l5315
  9301  0020DA                     l5309:
  9302  0020DA  C01A  FFF6         	movff	atoi@s,tblptrl
  9303  0020DE  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9304  0020E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9305  0020E2  6AF8               	clrf	tblptru,c
  9306  0020E4                     	endif
  9307  0020E4                     	if	0	;tblptru may be non-zero
  9308  0020E4                     	endif
  9309  0020E4  0008               	tblrd		*
  9310  0020E6  50F5               	movf	tablat,w,c
  9311  0020E8  6E1C               	movwf	??_atoi^0,c
  9312  0020EA  6A1D               	clrf	(??_atoi+1)^0,c
  9313                           
  9314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9315                           ; Switch size 1, requested type "simple"
  9316                           ; Number of cases is 1, Range of values is 0 to 0
  9317                           ; switch strategies available:
  9318                           ; Name         Instructions Cycles
  9319                           ; simple_byte            4     3 (average)
  9320                           ;	Chosen strategy is simple_byte
  9321  0020EC  501D               	movf	(??_atoi+1)^0,w,c
  9322  0020EE  0A00               	xorlw	0	; case 0
  9323  0020F0  B4D8               	btfsc	status,2,c
  9324  0020F2  EF7D  F010         	goto	l6269
  9325  0020F6  EFA4  F010         	goto	l5315
  9326  0020FA                     l6269:
  9327                           
  9328                           ; Switch size 1, requested type "simple"
  9329                           ; Number of cases is 2, Range of values is 43 to 45
  9330                           ; switch strategies available:
  9331                           ; Name         Instructions Cycles
  9332                           ; simple_byte            7     4 (average)
  9333                           ;	Chosen strategy is simple_byte
  9334  0020FA  501C               	movf	??_atoi^0,w,c
  9335  0020FC  0A2B               	xorlw	43	; case 43
  9336  0020FE  B4D8               	btfsc	status,2,c
  9337  002100  EF69  F010         	goto	l5307
  9338  002104  0A06               	xorlw	6	; case 45
  9339  002106  B4D8               	btfsc	status,2,c
  9340  002108  EF65  F010         	goto	l5305
  9341  00210C  EFA4  F010         	goto	l5315
  9342  002110                     l5311:
  9343  002110  C027  F013         	movff	atoi@n,___wmul@multiplier
  9344  002114  C028  F014         	movff	atoi@n+1,___wmul@multiplier+1
  9345  002118  0E00               	movlw	0
  9346  00211A  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  9347  00211C  0E0A               	movlw	10
  9348  00211E  6E15               	movwf	___wmul@multiplicand^0,c
  9349  002120  EC4D  F01C         	call	___wmul	;wreg free
  9350  002124  C01A  FFF6         	movff	atoi@s,tblptrl
  9351  002128  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9352  00212C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9353  00212C  6AF8               	clrf	tblptru,c
  9354  00212E                     	endif
  9355  00212E                     	if	0	;tblptru may be non-zero
  9356  00212E                     	endif
  9357  00212E  0008               	tblrd		*
  9358  002130  50F5               	movf	tablat,w,c
  9359  002132  5E13               	subwf	?___wmul^0,f,c
  9360  002134  0E00               	movlw	0
  9361  002136  5A14               	subwfb	(?___wmul+1)^0,f,c
  9362  002138  0E30               	movlw	48
  9363  00213A  2413               	addwf	?___wmul^0,w,c
  9364  00213C  6E27               	movwf	atoi@n^0,c
  9365  00213E  0E00               	movlw	0
  9366  002140  2014               	addwfc	(?___wmul+1)^0,w,c
  9367  002142  6E28               	movwf	(atoi@n+1)^0,c
  9368  002144  EF69  F010         	goto	l5307
  9369  002148                     l5315:
  9370  002148  0ED0               	movlw	208
  9371  00214A  6E1C               	movwf	??_atoi^0,c
  9372  00214C  0EFF               	movlw	255
  9373  00214E  6E1D               	movwf	(??_atoi+1)^0,c
  9374  002150  C01A  FFF6         	movff	atoi@s,tblptrl
  9375  002154  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9376  002158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9377  002158  6AF8               	clrf	tblptru,c
  9378  00215A                     	endif
  9379  00215A                     	if	0	;tblptru may be non-zero
  9380  00215A                     	endif
  9381  00215A  0008               	tblrd		*
  9382  00215C  50F5               	movf	tablat,w,c
  9383  00215E  6E1E               	movwf	(??_atoi+2)^0,c
  9384  002160  6A1F               	clrf	(??_atoi+3)^0,c
  9385  002162  501C               	movf	??_atoi^0,w,c
  9386  002164  261E               	addwf	(??_atoi+2)^0,f,c
  9387  002166  501D               	movf	(??_atoi+1)^0,w,c
  9388  002168  221F               	addwfc	(??_atoi+3)^0,f,c
  9389  00216A  501F               	movf	(??_atoi+3)^0,w,c
  9390  00216C  E10A               	bnz	u5630
  9391  00216E  0E0A               	movlw	10
  9392  002170  5C1E               	subwf	(??_atoi+2)^0,w,c
  9393  002172  A0D8               	btfss	status,0,c
  9394  002174  EFBE  F010         	goto	u5631
  9395  002178  EFC1  F010         	goto	u5630
  9396  00217C                     u5631:
  9397  00217C  0E01               	movlw	1
  9398  00217E  EFC2  F010         	goto	u5640
  9399  002182                     u5630:
  9400  002182  0E00               	movlw	0
  9401  002184                     u5640:
  9402  002184  6E24               	movwf	_atoi$1852^0,c
  9403  002186  6A25               	clrf	(_atoi$1852+1)^0,c
  9404  002188  5024               	movf	_atoi$1852^0,w,c
  9405  00218A  1025               	iorwf	(_atoi$1852+1)^0,w,c
  9406  00218C  A4D8               	btfss	status,2,c
  9407  00218E  EFCB  F010         	goto	u5651
  9408  002192  EFCD  F010         	goto	u5650
  9409  002196                     u5651:
  9410  002196  EF88  F010         	goto	l5311
  9411  00219A                     u5650:
  9412  00219A  5020               	movf	atoi@neg^0,w,c
  9413  00219C  1021               	iorwf	(atoi@neg+1)^0,w,c
  9414  00219E  A4D8               	btfss	status,2,c
  9415  0021A0  EFD4  F010         	goto	u5661
  9416  0021A4  EFD6  F010         	goto	u5660
  9417  0021A8                     u5661:
  9418  0021A8  EFE4  F010         	goto	l1367
  9419  0021AC                     u5660:
  9420  0021AC  C027  F01C         	movff	atoi@n,??_atoi
  9421  0021B0  C028  F01D         	movff	atoi@n+1,??_atoi+1
  9422  0021B4  1E1C               	comf	??_atoi^0,f,c
  9423  0021B6  1E1D               	comf	(??_atoi+1)^0,f,c
  9424  0021B8  4A1C               	infsnz	??_atoi^0,f,c
  9425  0021BA  2A1D               	incf	(??_atoi+1)^0,f,c
  9426  0021BC  C01C  F01A         	movff	??_atoi,?_atoi
  9427  0021C0  C01D  F01B         	movff	??_atoi+1,?_atoi+1
  9428  0021C4  EFE8  F010         	goto	l1370
  9429  0021C8                     l1367:
  9430  0021C8  C027  F01A         	movff	atoi@n,?_atoi
  9431  0021CC  C028  F01B         	movff	atoi@n+1,?_atoi+1
  9432  0021D0                     l1370:
  9433  0021D0  0012               	return		;funcret
  9434  0021D2                     __end_of_atoi:
  9435                           	opt callstack 0
  9436                           
  9437 ;; *************** function _isspace *****************
  9438 ;; Defined at:
  9439 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  c               2   18[COMRAM] int 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;		None
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  2   18[COMRAM] int 
  9446 ;; Registers used:
  9447 ;;		wreg, status,2, status,0
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9457 ;;Total ram usage:        7 bytes
  9458 ;; Hardware stack levels used:    1
  9459 ;; Hardware stack levels required when called:    5
  9460 ;; This function calls:
  9461 ;;		Nothing
  9462 ;; This function is called by:
  9463 ;;		_atoi
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           	psect	text27
  9468  0033B8                     __ptext27:
  9469                           	opt callstack 0
  9470  0033B8                     _isspace:
  9471                           	opt callstack 20
  9472  0033B8  0E01               	movlw	1
  9473  0033BA  6E19               	movwf	_isspace$1877^0,c
  9474  0033BC  0E20               	movlw	32
  9475  0033BE  1813               	xorwf	isspace@c^0,w,c
  9476  0033C0  1014               	iorwf	(isspace@c+1)^0,w,c
  9477  0033C2  B4D8               	btfsc	status,2,c
  9478  0033C4  EFE6  F019         	goto	u4981
  9479  0033C8  EFE8  F019         	goto	u4980
  9480  0033CC                     u4981:
  9481  0033CC  EF01  F01A         	goto	l5007
  9482  0033D0                     u4980:
  9483  0033D0  0EF7               	movlw	247
  9484  0033D2  6E15               	movwf	??_isspace^0,c
  9485  0033D4  0EFF               	movlw	255
  9486  0033D6  6E16               	movwf	(??_isspace+1)^0,c
  9487  0033D8  C013  F017         	movff	isspace@c,??_isspace+2
  9488  0033DC  C014  F018         	movff	isspace@c+1,??_isspace+3
  9489  0033E0  5015               	movf	??_isspace^0,w,c
  9490  0033E2  2617               	addwf	(??_isspace+2)^0,f,c
  9491  0033E4  5016               	movf	(??_isspace+1)^0,w,c
  9492  0033E6  2218               	addwfc	(??_isspace+3)^0,f,c
  9493  0033E8  5018               	movf	(??_isspace+3)^0,w,c
  9494  0033EA  E109               	bnz	u4990
  9495  0033EC  0E05               	movlw	5
  9496  0033EE  5C17               	subwf	(??_isspace+2)^0,w,c
  9497  0033F0  A0D8               	btfss	status,0,c
  9498  0033F2  EFFD  F019         	goto	u4991
  9499  0033F6  EFFF  F019         	goto	u4990
  9500  0033FA                     u4991:
  9501  0033FA  EF01  F01A         	goto	l5007
  9502  0033FE                     u4990:
  9503  0033FE  0E00               	movlw	0
  9504  003400  6E19               	movwf	_isspace$1877^0,c
  9505  003402                     l5007:
  9506  003402  C019  F013         	movff	_isspace$1877,?_isspace
  9507  003406  6A14               	clrf	(?_isspace+1)^0,c
  9508  003408  0012               	return		;funcret
  9509  00340A                     __end_of_isspace:
  9510                           	opt callstack 0
  9511                           
  9512 ;; *************** function _isdigit *****************
  9513 ;; Defined at:
  9514 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;  c               2   18[COMRAM] int 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  2   18[COMRAM] int 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9532 ;;Total ram usage:        6 bytes
  9533 ;; Hardware stack levels used:    1
  9534 ;; Hardware stack levels required when called:    5
  9535 ;; This function calls:
  9536 ;;		Nothing
  9537 ;; This function is called by:
  9538 ;;		_vfpfcnvrt
  9539 ;;		_atoi
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text28
  9544  0036E6                     __ptext28:
  9545                           	opt callstack 0
  9546  0036E6                     _isdigit:
  9547                           	opt callstack 21
  9548  0036E6  0ED0               	movlw	208
  9549  0036E8  6E15               	movwf	??_isdigit^0,c
  9550  0036EA  0EFF               	movlw	255
  9551  0036EC  6E16               	movwf	(??_isdigit+1)^0,c
  9552  0036EE  C013  F017         	movff	isdigit@c,??_isdigit+2
  9553  0036F2  C014  F018         	movff	isdigit@c+1,??_isdigit+3
  9554  0036F6  5015               	movf	??_isdigit^0,w,c
  9555  0036F8  2617               	addwf	(??_isdigit+2)^0,f,c
  9556  0036FA  5016               	movf	(??_isdigit+1)^0,w,c
  9557  0036FC  2218               	addwfc	(??_isdigit+3)^0,f,c
  9558  0036FE  5018               	movf	(??_isdigit+3)^0,w,c
  9559  003700  E10A               	bnz	u4760
  9560  003702  0E0A               	movlw	10
  9561  003704  5C17               	subwf	(??_isdigit+2)^0,w,c
  9562  003706  A0D8               	btfss	status,0,c
  9563  003708  EF88  F01B         	goto	u4761
  9564  00370C  EF8B  F01B         	goto	u4760
  9565  003710                     u4761:
  9566  003710  0E01               	movlw	1
  9567  003712  EF8C  F01B         	goto	u4770
  9568  003716                     u4760:
  9569  003716  0E00               	movlw	0
  9570  003718                     u4770:
  9571  003718  6E13               	movwf	?_isdigit^0,c
  9572  00371A  6A14               	clrf	(?_isdigit+1)^0,c
  9573  00371C  0012               	return		;funcret
  9574  00371E                     __end_of_isdigit:
  9575                           	opt callstack 0
  9576                           
  9577 ;; *************** function ___wmul *****************
  9578 ;; Defined at:
  9579 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  multiplier      2   18[COMRAM] unsigned int 
  9582 ;;  multiplicand    2   20[COMRAM] unsigned int 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;  product         2   22[COMRAM] unsigned int 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  2   18[COMRAM] unsigned int 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0, prodl, prodh
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9597 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9598 ;;Total ram usage:        6 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    5
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_atoi
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text29
  9609  00389A                     __ptext29:
  9610                           	opt callstack 0
  9611  00389A                     ___wmul:
  9612                           	opt callstack 20
  9613  00389A  5013               	movf	___wmul@multiplier^0,w,c
  9614  00389C  0215               	mulwf	___wmul@multiplicand^0,c
  9615  00389E  CFF3 F017          	movff	prodl,___wmul@product
  9616  0038A2  CFF4 F018          	movff	prodh,___wmul@product+1
  9617  0038A6  5013               	movf	___wmul@multiplier^0,w,c
  9618  0038A8  0216               	mulwf	(___wmul@multiplicand+1)^0,c
  9619  0038AA  50F3               	movf	243,w,c
  9620  0038AC  2618               	addwf	(___wmul@product+1)^0,f,c
  9621  0038AE  5014               	movf	(___wmul@multiplier+1)^0,w,c
  9622  0038B0  0215               	mulwf	___wmul@multiplicand^0,c
  9623  0038B2  50F3               	movf	243,w,c
  9624  0038B4  2618               	addwf	(___wmul@product+1)^0,f,c
  9625  0038B6  C017  F013         	movff	___wmul@product,?___wmul
  9626  0038BA  C018  F014         	movff	___wmul@product+1,?___wmul+1
  9627  0038BE  0012               	return		;funcret
  9628  0038C0                     __end_of___wmul:
  9629                           	opt callstack 0
  9630                           
  9631 ;; *************** function _lcd_init *****************
  9632 ;; Defined at:
  9633 ;;		line 32 in file "lib_ili9341.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;		None
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  1    wreg      void 
  9640 ;; Registers used:
  9641 ;;		wreg, status,2, status,0, cstack
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9651 ;;Total ram usage:        0 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; Hardware stack levels required when called:   10
  9654 ;; This function calls:
  9655 ;;		_lcd_fill
  9656 ;;		_lcd_send
  9657 ;;		_msDelay
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           	psect	text30
  9664  001304                     __ptext30:
  9665                           	opt callstack 0
  9666  001304                     _lcd_init:
  9667                           	opt callstack 20
  9668  001304                     
  9669                           ;lib_ili9341.c: 35:     lcd_send(0, 0x01);
  9670  001304  0E01               	movlw	1
  9671  001306  6E14               	movwf	lcd_send@value^0,c
  9672  001308  0E00               	movlw	0
  9673  00130A  EC92  F01C         	call	_lcd_send
  9674  00130E                     
  9675                           ;lib_ili9341.c: 36:     msDelay(150);
  9676  00130E  0E96               	movlw	150
  9677  001310  ECF3  F01B         	call	_msDelay
  9678  001314                     
  9679                           ;lib_ili9341.c: 38:     lcd_send(0,0xEF);
  9680  001314  0EEF               	movlw	239
  9681  001316  6E14               	movwf	lcd_send@value^0,c
  9682  001318  0E00               	movlw	0
  9683  00131A  EC92  F01C         	call	_lcd_send
  9684  00131E                     
  9685                           ;lib_ili9341.c: 39:     lcd_send(1,0x03);
  9686  00131E  0E03               	movlw	3
  9687  001320  6E14               	movwf	lcd_send@value^0,c
  9688  001322  0E01               	movlw	1
  9689  001324  EC92  F01C         	call	_lcd_send
  9690  001328                     
  9691                           ;lib_ili9341.c: 40:     lcd_send(1,0x80);
  9692  001328  0E80               	movlw	128
  9693  00132A  6E14               	movwf	lcd_send@value^0,c
  9694  00132C  0E01               	movlw	1
  9695  00132E  EC92  F01C         	call	_lcd_send
  9696  001332                     
  9697                           ;lib_ili9341.c: 41:     lcd_send(1,0x02);
  9698  001332  0E02               	movlw	2
  9699  001334  6E14               	movwf	lcd_send@value^0,c
  9700  001336  0E01               	movlw	1
  9701  001338  EC92  F01C         	call	_lcd_send
  9702  00133C                     
  9703                           ;lib_ili9341.c: 42:     lcd_send(0,0xCF);
  9704  00133C  0ECF               	movlw	207
  9705  00133E  6E14               	movwf	lcd_send@value^0,c
  9706  001340  0E00               	movlw	0
  9707  001342  EC92  F01C         	call	_lcd_send
  9708  001346                     
  9709                           ;lib_ili9341.c: 43:     lcd_send(1,0x00);
  9710  001346  0E00               	movlw	0
  9711  001348  6E14               	movwf	lcd_send@value^0,c
  9712  00134A  0E01               	movlw	1
  9713  00134C  EC92  F01C         	call	_lcd_send
  9714  001350                     
  9715                           ;lib_ili9341.c: 44:     lcd_send(1,0XC1);
  9716  001350  0EC1               	movlw	193
  9717  001352  6E14               	movwf	lcd_send@value^0,c
  9718  001354  0E01               	movlw	1
  9719  001356  EC92  F01C         	call	_lcd_send
  9720  00135A                     
  9721                           ;lib_ili9341.c: 45:     lcd_send(1,0X30);
  9722  00135A  0E30               	movlw	48
  9723  00135C  6E14               	movwf	lcd_send@value^0,c
  9724  00135E  0E01               	movlw	1
  9725  001360  EC92  F01C         	call	_lcd_send
  9726  001364                     
  9727                           ;lib_ili9341.c: 46:     lcd_send(0,0xED);
  9728  001364  0EED               	movlw	237
  9729  001366  6E14               	movwf	lcd_send@value^0,c
  9730  001368  0E00               	movlw	0
  9731  00136A  EC92  F01C         	call	_lcd_send
  9732  00136E                     
  9733                           ;lib_ili9341.c: 47:     lcd_send(1,0x64);
  9734  00136E  0E64               	movlw	100
  9735  001370  6E14               	movwf	lcd_send@value^0,c
  9736  001372  0E01               	movlw	1
  9737  001374  EC92  F01C         	call	_lcd_send
  9738  001378                     
  9739                           ;lib_ili9341.c: 48:     lcd_send(1,0x03);
  9740  001378  0E03               	movlw	3
  9741  00137A  6E14               	movwf	lcd_send@value^0,c
  9742  00137C  0E01               	movlw	1
  9743  00137E  EC92  F01C         	call	_lcd_send
  9744  001382                     
  9745                           ;lib_ili9341.c: 49:     lcd_send(1,0X12);
  9746  001382  0E12               	movlw	18
  9747  001384  6E14               	movwf	lcd_send@value^0,c
  9748  001386  0E01               	movlw	1
  9749  001388  EC92  F01C         	call	_lcd_send
  9750  00138C                     
  9751                           ;lib_ili9341.c: 50:     lcd_send(1,0X81);
  9752  00138C  0E81               	movlw	129
  9753  00138E  6E14               	movwf	lcd_send@value^0,c
  9754  001390  0E01               	movlw	1
  9755  001392  EC92  F01C         	call	_lcd_send
  9756  001396                     
  9757                           ;lib_ili9341.c: 51:     lcd_send(0,0xE8);
  9758  001396  0EE8               	movlw	232
  9759  001398  6E14               	movwf	lcd_send@value^0,c
  9760  00139A  0E00               	movlw	0
  9761  00139C  EC92  F01C         	call	_lcd_send
  9762  0013A0                     
  9763                           ;lib_ili9341.c: 52:     lcd_send(1,0x85);
  9764  0013A0  0E85               	movlw	133
  9765  0013A2  6E14               	movwf	lcd_send@value^0,c
  9766  0013A4  0E01               	movlw	1
  9767  0013A6  EC92  F01C         	call	_lcd_send
  9768  0013AA                     
  9769                           ;lib_ili9341.c: 53:     lcd_send(1,0x00);
  9770  0013AA  0E00               	movlw	0
  9771  0013AC  6E14               	movwf	lcd_send@value^0,c
  9772  0013AE  0E01               	movlw	1
  9773  0013B0  EC92  F01C         	call	_lcd_send
  9774  0013B4                     
  9775                           ;lib_ili9341.c: 54:     lcd_send(1,0x78);
  9776  0013B4  0E78               	movlw	120
  9777  0013B6  6E14               	movwf	lcd_send@value^0,c
  9778  0013B8  0E01               	movlw	1
  9779  0013BA  EC92  F01C         	call	_lcd_send
  9780  0013BE                     
  9781                           ;lib_ili9341.c: 55:     lcd_send(0,0xCB);
  9782  0013BE  0ECB               	movlw	203
  9783  0013C0  6E14               	movwf	lcd_send@value^0,c
  9784  0013C2  0E00               	movlw	0
  9785  0013C4  EC92  F01C         	call	_lcd_send
  9786  0013C8                     
  9787                           ;lib_ili9341.c: 56:     lcd_send(1,0x39);
  9788  0013C8  0E39               	movlw	57
  9789  0013CA  6E14               	movwf	lcd_send@value^0,c
  9790  0013CC  0E01               	movlw	1
  9791  0013CE  EC92  F01C         	call	_lcd_send
  9792  0013D2                     
  9793                           ;lib_ili9341.c: 57:     lcd_send(1,0x2C);
  9794  0013D2  0E2C               	movlw	44
  9795  0013D4  6E14               	movwf	lcd_send@value^0,c
  9796  0013D6  0E01               	movlw	1
  9797  0013D8  EC92  F01C         	call	_lcd_send
  9798  0013DC                     
  9799                           ;lib_ili9341.c: 58:     lcd_send(1,0x00);
  9800  0013DC  0E00               	movlw	0
  9801  0013DE  6E14               	movwf	lcd_send@value^0,c
  9802  0013E0  0E01               	movlw	1
  9803  0013E2  EC92  F01C         	call	_lcd_send
  9804  0013E6                     
  9805                           ;lib_ili9341.c: 59:     lcd_send(1,0x34);
  9806  0013E6  0E34               	movlw	52
  9807  0013E8  6E14               	movwf	lcd_send@value^0,c
  9808  0013EA  0E01               	movlw	1
  9809  0013EC  EC92  F01C         	call	_lcd_send
  9810  0013F0                     
  9811                           ;lib_ili9341.c: 60:     lcd_send(1,0x02);
  9812  0013F0  0E02               	movlw	2
  9813  0013F2  6E14               	movwf	lcd_send@value^0,c
  9814  0013F4  0E01               	movlw	1
  9815  0013F6  EC92  F01C         	call	_lcd_send
  9816  0013FA                     
  9817                           ;lib_ili9341.c: 61:     lcd_send(0,0xF7);
  9818  0013FA  0EF7               	movlw	247
  9819  0013FC  6E14               	movwf	lcd_send@value^0,c
  9820  0013FE  0E00               	movlw	0
  9821  001400  EC92  F01C         	call	_lcd_send
  9822  001404                     
  9823                           ;lib_ili9341.c: 62:     lcd_send(1,0x20);
  9824  001404  0E20               	movlw	32
  9825  001406  6E14               	movwf	lcd_send@value^0,c
  9826  001408  0E01               	movlw	1
  9827  00140A  EC92  F01C         	call	_lcd_send
  9828  00140E                     
  9829                           ;lib_ili9341.c: 63:     lcd_send(0,0xEA);
  9830  00140E  0EEA               	movlw	234
  9831  001410  6E14               	movwf	lcd_send@value^0,c
  9832  001412  0E00               	movlw	0
  9833  001414  EC92  F01C         	call	_lcd_send
  9834  001418                     
  9835                           ;lib_ili9341.c: 64:     lcd_send(1,0x00);
  9836  001418  0E00               	movlw	0
  9837  00141A  6E14               	movwf	lcd_send@value^0,c
  9838  00141C  0E01               	movlw	1
  9839  00141E  EC92  F01C         	call	_lcd_send
  9840  001422                     
  9841                           ;lib_ili9341.c: 65:     lcd_send(1,0x00);
  9842  001422  0E00               	movlw	0
  9843  001424  6E14               	movwf	lcd_send@value^0,c
  9844  001426  0E01               	movlw	1
  9845  001428  EC92  F01C         	call	_lcd_send
  9846  00142C                     
  9847                           ;lib_ili9341.c: 66:     lcd_send(0,0xC0);
  9848  00142C  0EC0               	movlw	192
  9849  00142E  6E14               	movwf	lcd_send@value^0,c
  9850  001430  0E00               	movlw	0
  9851  001432  EC92  F01C         	call	_lcd_send
  9852  001436                     
  9853                           ;lib_ili9341.c: 67:     lcd_send(1,0x23);
  9854  001436  0E23               	movlw	35
  9855  001438  6E14               	movwf	lcd_send@value^0,c
  9856  00143A  0E01               	movlw	1
  9857  00143C  EC92  F01C         	call	_lcd_send
  9858  001440                     
  9859                           ;lib_ili9341.c: 68:     lcd_send(0,0xC1);
  9860  001440  0EC1               	movlw	193
  9861  001442  6E14               	movwf	lcd_send@value^0,c
  9862  001444  0E00               	movlw	0
  9863  001446  EC92  F01C         	call	_lcd_send
  9864  00144A                     
  9865                           ;lib_ili9341.c: 69:     lcd_send(1,0x10);
  9866  00144A  0E10               	movlw	16
  9867  00144C  6E14               	movwf	lcd_send@value^0,c
  9868  00144E  0E01               	movlw	1
  9869  001450  EC92  F01C         	call	_lcd_send
  9870  001454                     
  9871                           ;lib_ili9341.c: 70:     lcd_send(0,0xC5);
  9872  001454  0EC5               	movlw	197
  9873  001456  6E14               	movwf	lcd_send@value^0,c
  9874  001458  0E00               	movlw	0
  9875  00145A  EC92  F01C         	call	_lcd_send
  9876  00145E                     
  9877                           ;lib_ili9341.c: 71:     lcd_send(1,0x3e);
  9878  00145E  0E3E               	movlw	62
  9879  001460  6E14               	movwf	lcd_send@value^0,c
  9880  001462  0E01               	movlw	1
  9881  001464  EC92  F01C         	call	_lcd_send
  9882  001468                     
  9883                           ;lib_ili9341.c: 72:     lcd_send(1,0x28);
  9884  001468  0E28               	movlw	40
  9885  00146A  6E14               	movwf	lcd_send@value^0,c
  9886  00146C  0E01               	movlw	1
  9887  00146E  EC92  F01C         	call	_lcd_send
  9888  001472                     
  9889                           ;lib_ili9341.c: 73:     lcd_send(0,0xC7);
  9890  001472  0EC7               	movlw	199
  9891  001474  6E14               	movwf	lcd_send@value^0,c
  9892  001476  0E00               	movlw	0
  9893  001478  EC92  F01C         	call	_lcd_send
  9894  00147C                     
  9895                           ;lib_ili9341.c: 74:     lcd_send(1,0x86);
  9896  00147C  0E86               	movlw	134
  9897  00147E  6E14               	movwf	lcd_send@value^0,c
  9898  001480  0E01               	movlw	1
  9899  001482  EC92  F01C         	call	_lcd_send
  9900  001486                     
  9901                           ;lib_ili9341.c: 75:     lcd_send(0,0x36);
  9902  001486  0E36               	movlw	54
  9903  001488  6E14               	movwf	lcd_send@value^0,c
  9904  00148A  0E00               	movlw	0
  9905  00148C  EC92  F01C         	call	_lcd_send
  9906  001490                     
  9907                           ;lib_ili9341.c: 76:     lcd_send(1,0x48);
  9908  001490  0E48               	movlw	72
  9909  001492  6E14               	movwf	lcd_send@value^0,c
  9910  001494  0E01               	movlw	1
  9911  001496  EC92  F01C         	call	_lcd_send
  9912  00149A                     
  9913                           ;lib_ili9341.c: 77:     lcd_send(0,0x3A);
  9914  00149A  0E3A               	movlw	58
  9915  00149C  6E14               	movwf	lcd_send@value^0,c
  9916  00149E  0E00               	movlw	0
  9917  0014A0  EC92  F01C         	call	_lcd_send
  9918  0014A4                     
  9919                           ;lib_ili9341.c: 78:     lcd_send(1,0x55);
  9920  0014A4  0E55               	movlw	85
  9921  0014A6  6E14               	movwf	lcd_send@value^0,c
  9922  0014A8  0E01               	movlw	1
  9923  0014AA  EC92  F01C         	call	_lcd_send
  9924  0014AE                     
  9925                           ;lib_ili9341.c: 79:     lcd_send(0,0xB1);
  9926  0014AE  0EB1               	movlw	177
  9927  0014B0  6E14               	movwf	lcd_send@value^0,c
  9928  0014B2  0E00               	movlw	0
  9929  0014B4  EC92  F01C         	call	_lcd_send
  9930  0014B8                     
  9931                           ;lib_ili9341.c: 80:     lcd_send(1,0x00);
  9932  0014B8  0E00               	movlw	0
  9933  0014BA  6E14               	movwf	lcd_send@value^0,c
  9934  0014BC  0E01               	movlw	1
  9935  0014BE  EC92  F01C         	call	_lcd_send
  9936  0014C2                     
  9937                           ;lib_ili9341.c: 81:     lcd_send(1,0x18);
  9938  0014C2  0E18               	movlw	24
  9939  0014C4  6E14               	movwf	lcd_send@value^0,c
  9940  0014C6  0E01               	movlw	1
  9941  0014C8  EC92  F01C         	call	_lcd_send
  9942  0014CC                     
  9943                           ;lib_ili9341.c: 82:     lcd_send(0,0xB6);
  9944  0014CC  0EB6               	movlw	182
  9945  0014CE  6E14               	movwf	lcd_send@value^0,c
  9946  0014D0  0E00               	movlw	0
  9947  0014D2  EC92  F01C         	call	_lcd_send
  9948  0014D6                     
  9949                           ;lib_ili9341.c: 83:     lcd_send(1,0x08);
  9950  0014D6  0E08               	movlw	8
  9951  0014D8  6E14               	movwf	lcd_send@value^0,c
  9952  0014DA  0E01               	movlw	1
  9953  0014DC  EC92  F01C         	call	_lcd_send
  9954  0014E0                     
  9955                           ;lib_ili9341.c: 84:     lcd_send(1,0x82);
  9956  0014E0  0E82               	movlw	130
  9957  0014E2  6E14               	movwf	lcd_send@value^0,c
  9958  0014E4  0E01               	movlw	1
  9959  0014E6  EC92  F01C         	call	_lcd_send
  9960  0014EA                     
  9961                           ;lib_ili9341.c: 85:     lcd_send(1,0x27);
  9962  0014EA  0E27               	movlw	39
  9963  0014EC  6E14               	movwf	lcd_send@value^0,c
  9964  0014EE  0E01               	movlw	1
  9965  0014F0  EC92  F01C         	call	_lcd_send
  9966  0014F4                     
  9967                           ;lib_ili9341.c: 86:     lcd_send(0,0xF2);
  9968  0014F4  0EF2               	movlw	242
  9969  0014F6  6E14               	movwf	lcd_send@value^0,c
  9970  0014F8  0E00               	movlw	0
  9971  0014FA  EC92  F01C         	call	_lcd_send
  9972  0014FE                     
  9973                           ;lib_ili9341.c: 87:     lcd_send(1,0x00);
  9974  0014FE  0E00               	movlw	0
  9975  001500  6E14               	movwf	lcd_send@value^0,c
  9976  001502  0E01               	movlw	1
  9977  001504  EC92  F01C         	call	_lcd_send
  9978  001508                     
  9979                           ;lib_ili9341.c: 88:     lcd_send(0,0x26);
  9980  001508  0E26               	movlw	38
  9981  00150A  6E14               	movwf	lcd_send@value^0,c
  9982  00150C  0E00               	movlw	0
  9983  00150E  EC92  F01C         	call	_lcd_send
  9984  001512                     
  9985                           ;lib_ili9341.c: 89:     lcd_send(1,0x01);
  9986  001512  0E01               	movlw	1
  9987  001514  6E14               	movwf	lcd_send@value^0,c
  9988  001516  0E01               	movlw	1
  9989  001518  EC92  F01C         	call	_lcd_send
  9990  00151C                     
  9991                           ;lib_ili9341.c: 90:     lcd_send(0,0xE0);
  9992  00151C  0EE0               	movlw	224
  9993  00151E  6E14               	movwf	lcd_send@value^0,c
  9994  001520  0E00               	movlw	0
  9995  001522  EC92  F01C         	call	_lcd_send
  9996  001526                     
  9997                           ;lib_ili9341.c: 91:     lcd_send(1,0x0F);
  9998  001526  0E0F               	movlw	15
  9999  001528  6E14               	movwf	lcd_send@value^0,c
 10000  00152A  0E01               	movlw	1
 10001  00152C  EC92  F01C         	call	_lcd_send
 10002  001530                     
 10003                           ;lib_ili9341.c: 92:     lcd_send(1,0x31);
 10004  001530  0E31               	movlw	49
 10005  001532  6E14               	movwf	lcd_send@value^0,c
 10006  001534  0E01               	movlw	1
 10007  001536  EC92  F01C         	call	_lcd_send
 10008  00153A                     
 10009                           ;lib_ili9341.c: 93:     lcd_send(1,0x2B);
 10010  00153A  0E2B               	movlw	43
 10011  00153C  6E14               	movwf	lcd_send@value^0,c
 10012  00153E  0E01               	movlw	1
 10013  001540  EC92  F01C         	call	_lcd_send
 10014  001544                     
 10015                           ;lib_ili9341.c: 94:     lcd_send(1,0x0C);
 10016  001544  0E0C               	movlw	12
 10017  001546  6E14               	movwf	lcd_send@value^0,c
 10018  001548  0E01               	movlw	1
 10019  00154A  EC92  F01C         	call	_lcd_send
 10020  00154E                     
 10021                           ;lib_ili9341.c: 95:     lcd_send(1,0x0E);
 10022  00154E  0E0E               	movlw	14
 10023  001550  6E14               	movwf	lcd_send@value^0,c
 10024  001552  0E01               	movlw	1
 10025  001554  EC92  F01C         	call	_lcd_send
 10026  001558                     
 10027                           ;lib_ili9341.c: 96:     lcd_send(1,0x08);
 10028  001558  0E08               	movlw	8
 10029  00155A  6E14               	movwf	lcd_send@value^0,c
 10030  00155C  0E01               	movlw	1
 10031  00155E  EC92  F01C         	call	_lcd_send
 10032  001562                     
 10033                           ;lib_ili9341.c: 97:     lcd_send(1,0x4E);
 10034  001562  0E4E               	movlw	78
 10035  001564  6E14               	movwf	lcd_send@value^0,c
 10036  001566  0E01               	movlw	1
 10037  001568  EC92  F01C         	call	_lcd_send
 10038  00156C                     
 10039                           ;lib_ili9341.c: 98:     lcd_send(1,0xF1);
 10040  00156C  0EF1               	movlw	241
 10041  00156E  6E14               	movwf	lcd_send@value^0,c
 10042  001570  0E01               	movlw	1
 10043  001572  EC92  F01C         	call	_lcd_send
 10044  001576                     
 10045                           ;lib_ili9341.c: 99:     lcd_send(1,0x37);
 10046  001576  0E37               	movlw	55
 10047  001578  6E14               	movwf	lcd_send@value^0,c
 10048  00157A  0E01               	movlw	1
 10049  00157C  EC92  F01C         	call	_lcd_send
 10050  001580                     
 10051                           ;lib_ili9341.c: 100:     lcd_send(1,0x07);
 10052  001580  0E07               	movlw	7
 10053  001582  6E14               	movwf	lcd_send@value^0,c
 10054  001584  0E01               	movlw	1
 10055  001586  EC92  F01C         	call	_lcd_send
 10056  00158A                     
 10057                           ;lib_ili9341.c: 101:     lcd_send(1,0x10);
 10058  00158A  0E10               	movlw	16
 10059  00158C  6E14               	movwf	lcd_send@value^0,c
 10060  00158E  0E01               	movlw	1
 10061  001590  EC92  F01C         	call	_lcd_send
 10062  001594                     
 10063                           ;lib_ili9341.c: 102:     lcd_send(1,0x03);
 10064  001594  0E03               	movlw	3
 10065  001596  6E14               	movwf	lcd_send@value^0,c
 10066  001598  0E01               	movlw	1
 10067  00159A  EC92  F01C         	call	_lcd_send
 10068  00159E                     
 10069                           ;lib_ili9341.c: 103:     lcd_send(1,0x0E);
 10070  00159E  0E0E               	movlw	14
 10071  0015A0  6E14               	movwf	lcd_send@value^0,c
 10072  0015A2  0E01               	movlw	1
 10073  0015A4  EC92  F01C         	call	_lcd_send
 10074  0015A8                     
 10075                           ;lib_ili9341.c: 104:     lcd_send(1,0x09);
 10076  0015A8  0E09               	movlw	9
 10077  0015AA  6E14               	movwf	lcd_send@value^0,c
 10078  0015AC  0E01               	movlw	1
 10079  0015AE  EC92  F01C         	call	_lcd_send
 10080  0015B2                     
 10081                           ;lib_ili9341.c: 105:     lcd_send(1,0x00);
 10082  0015B2  0E00               	movlw	0
 10083  0015B4  6E14               	movwf	lcd_send@value^0,c
 10084  0015B6  0E01               	movlw	1
 10085  0015B8  EC92  F01C         	call	_lcd_send
 10086  0015BC                     
 10087                           ;lib_ili9341.c: 106:     lcd_send(0,0xE1);
 10088  0015BC  0EE1               	movlw	225
 10089  0015BE  6E14               	movwf	lcd_send@value^0,c
 10090  0015C0  0E00               	movlw	0
 10091  0015C2  EC92  F01C         	call	_lcd_send
 10092  0015C6                     
 10093                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 10094  0015C6  0E00               	movlw	0
 10095  0015C8  6E14               	movwf	lcd_send@value^0,c
 10096  0015CA  0E01               	movlw	1
 10097  0015CC  EC92  F01C         	call	_lcd_send
 10098  0015D0                     
 10099                           ;lib_ili9341.c: 108:     lcd_send(1,0x0E);
 10100  0015D0  0E0E               	movlw	14
 10101  0015D2  6E14               	movwf	lcd_send@value^0,c
 10102  0015D4  0E01               	movlw	1
 10103  0015D6  EC92  F01C         	call	_lcd_send
 10104  0015DA                     
 10105                           ;lib_ili9341.c: 109:     lcd_send(1,0x14);
 10106  0015DA  0E14               	movlw	20
 10107  0015DC  6E14               	movwf	lcd_send@value^0,c
 10108  0015DE  0E01               	movlw	1
 10109  0015E0  EC92  F01C         	call	_lcd_send
 10110  0015E4                     
 10111                           ;lib_ili9341.c: 110:     lcd_send(1,0x03);
 10112  0015E4  0E03               	movlw	3
 10113  0015E6  6E14               	movwf	lcd_send@value^0,c
 10114  0015E8  0E01               	movlw	1
 10115  0015EA  EC92  F01C         	call	_lcd_send
 10116  0015EE                     
 10117                           ;lib_ili9341.c: 111:     lcd_send(1,0x11);
 10118  0015EE  0E11               	movlw	17
 10119  0015F0  6E14               	movwf	lcd_send@value^0,c
 10120  0015F2  0E01               	movlw	1
 10121  0015F4  EC92  F01C         	call	_lcd_send
 10122  0015F8                     
 10123                           ;lib_ili9341.c: 112:     lcd_send(1,0x07);
 10124  0015F8  0E07               	movlw	7
 10125  0015FA  6E14               	movwf	lcd_send@value^0,c
 10126  0015FC  0E01               	movlw	1
 10127  0015FE  EC92  F01C         	call	_lcd_send
 10128  001602                     
 10129                           ;lib_ili9341.c: 113:     lcd_send(1,0x31);
 10130  001602  0E31               	movlw	49
 10131  001604  6E14               	movwf	lcd_send@value^0,c
 10132  001606  0E01               	movlw	1
 10133  001608  EC92  F01C         	call	_lcd_send
 10134  00160C                     
 10135                           ;lib_ili9341.c: 114:     lcd_send(1,0xC1);
 10136  00160C  0EC1               	movlw	193
 10137  00160E  6E14               	movwf	lcd_send@value^0,c
 10138  001610  0E01               	movlw	1
 10139  001612  EC92  F01C         	call	_lcd_send
 10140  001616                     
 10141                           ;lib_ili9341.c: 115:     lcd_send(1,0x48);
 10142  001616  0E48               	movlw	72
 10143  001618  6E14               	movwf	lcd_send@value^0,c
 10144  00161A  0E01               	movlw	1
 10145  00161C  EC92  F01C         	call	_lcd_send
 10146  001620                     
 10147                           ;lib_ili9341.c: 116:     lcd_send(1,0x08);
 10148  001620  0E08               	movlw	8
 10149  001622  6E14               	movwf	lcd_send@value^0,c
 10150  001624  0E01               	movlw	1
 10151  001626  EC92  F01C         	call	_lcd_send
 10152  00162A                     
 10153                           ;lib_ili9341.c: 117:     lcd_send(1,0x0F);
 10154  00162A  0E0F               	movlw	15
 10155  00162C  6E14               	movwf	lcd_send@value^0,c
 10156  00162E  0E01               	movlw	1
 10157  001630  EC92  F01C         	call	_lcd_send
 10158  001634                     
 10159                           ;lib_ili9341.c: 118:     lcd_send(1,0x0C);
 10160  001634  0E0C               	movlw	12
 10161  001636  6E14               	movwf	lcd_send@value^0,c
 10162  001638  0E01               	movlw	1
 10163  00163A  EC92  F01C         	call	_lcd_send
 10164  00163E                     
 10165                           ;lib_ili9341.c: 119:     lcd_send(1,0x31);
 10166  00163E  0E31               	movlw	49
 10167  001640  6E14               	movwf	lcd_send@value^0,c
 10168  001642  0E01               	movlw	1
 10169  001644  EC92  F01C         	call	_lcd_send
 10170  001648                     
 10171                           ;lib_ili9341.c: 120:     lcd_send(1,0x36);
 10172  001648  0E36               	movlw	54
 10173  00164A  6E14               	movwf	lcd_send@value^0,c
 10174  00164C  0E01               	movlw	1
 10175  00164E  EC92  F01C         	call	_lcd_send
 10176  001652                     
 10177                           ;lib_ili9341.c: 121:     lcd_send(1,0x0F);
 10178  001652  0E0F               	movlw	15
 10179  001654  6E14               	movwf	lcd_send@value^0,c
 10180  001656  0E01               	movlw	1
 10181  001658  EC92  F01C         	call	_lcd_send
 10182  00165C                     
 10183                           ;lib_ili9341.c: 122:     lcd_send(0,0x11);
 10184  00165C  0E11               	movlw	17
 10185  00165E  6E14               	movwf	lcd_send@value^0,c
 10186  001660  0E00               	movlw	0
 10187  001662  EC92  F01C         	call	_lcd_send
 10188                           
 10189                           ;lib_ili9341.c: 123:     msDelay(120);
 10190  001666  0E78               	movlw	120
 10191  001668  ECF3  F01B         	call	_msDelay
 10192  00166C                     
 10193                           ;lib_ili9341.c: 124:     lcd_send(0,0x29);
 10194  00166C  0E29               	movlw	41
 10195  00166E  6E14               	movwf	lcd_send@value^0,c
 10196  001670  0E00               	movlw	0
 10197  001672  EC92  F01C         	call	_lcd_send
 10198  001676                     
 10199                           ;lib_ili9341.c: 125:     msDelay(120);
 10200  001676  0E78               	movlw	120
 10201  001678  ECF3  F01B         	call	_msDelay
 10202  00167C                     
 10203                           ;lib_ili9341.c: 128:     lcd_fill(global_bg_color);
 10204  00167C  0E00               	movlw	0
 10205  00167E  6E1D               	movwf	(lcd_fill@bg_color+1)^0,c
 10206  001680  0E00               	movlw	0
 10207  001682  6E1C               	movwf	lcd_fill@bg_color^0,c
 10208  001684  EC0D  F019         	call	_lcd_fill	;wreg free
 10209  001688  0012               	return		;funcret
 10210  00168A                     __end_of_lcd_init:
 10211                           	opt callstack 0
 10212                           
 10213 ;; *************** function _msDelay *****************
 10214 ;; Defined at:
 10215 ;;		line 14 in file "lib_ili9341.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  ms              1    wreg     unsigned char 
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;  ms              1   19[COMRAM] unsigned char 
 10220 ;;  k               1   20[COMRAM] unsigned char 
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      void 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2, status,0
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10234 ;;Total ram usage:        3 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    5
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_lcd_init
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           	psect	text31
 10245  0037E6                     __ptext31:
 10246                           	opt callstack 0
 10247  0037E6                     _msDelay:
 10248                           	opt callstack 24
 10249                           
 10250                           ;incstack = 0
 10251                           ;msDelay@ms stored from wreg
 10252  0037E6  6E14               	movwf	msDelay@ms^0,c
 10253  0037E8                     
 10254                           ;lib_ili9341.c: 14: void msDelay (uint8_t ms);lib_ili9341.c: 15: {;lib_ili9341.c: 16:   
      +                            uint8_t k;;lib_ili9341.c: 18:     for(k=0; k<ms; k++)
 10255  0037E8  0E00               	movlw	0
 10256  0037EA  6E15               	movwf	msDelay@k^0,c
 10257  0037EC  EF00  F01C         	goto	l4205
 10258  0037F0                     l4201:
 10259                           
 10260                           ;lib_ili9341.c: 19:     {;lib_ili9341.c: 20:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 10261  0037F0  0E03               	movlw	3
 10262  0037F2  6E13               	movwf	??_msDelay^0,c
 10263  0037F4  0E98               	movlw	152
 10264  0037F6                     u6607:
 10265  0037F6  2EE8               	decfsz	wreg,f,c
 10266  0037F8  D7FE               	bra	u6607
 10267  0037FA  2E13               	decfsz	??_msDelay^0,f,c
 10268  0037FC  D7FC               	bra	u6607
 10269  0037FE                     
 10270                           ;lib_ili9341.c: 21:     }
 10271  0037FE  2A15               	incf	msDelay@k^0,f,c
 10272  003800                     l4205:
 10273  003800  5014               	movf	msDelay@ms^0,w,c
 10274  003802  5C15               	subwf	msDelay@k^0,w,c
 10275  003804  A0D8               	btfss	status,0,c
 10276  003806  EF07  F01C         	goto	u4071
 10277  00380A  EF09  F01C         	goto	u4070
 10278  00380E                     u4071:
 10279  00380E  EFF8  F01B         	goto	l4201
 10280  003812                     u4070:
 10281  003812  0012               	return		;funcret
 10282  003814                     __end_of_msDelay:
 10283                           	opt callstack 0
 10284                           
 10285 ;; *************** function _lcd_fill *****************
 10286 ;; Defined at:
 10287 ;;		line 191 in file "lib_ili9341.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  bg_color        2   27[COMRAM] unsigned short 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;  width           2   31[COMRAM] unsigned short 
 10292 ;;  height          2   29[COMRAM] unsigned short 
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      void 
 10295 ;; Registers used:
 10296 ;;		wreg, status,2, status,0, cstack
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10306 ;;Total ram usage:        6 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; Hardware stack levels required when called:    9
 10309 ;; This function calls:
 10310 ;;		_lcd_draw_pixel
 10311 ;;		_lcd_set_cursor
 10312 ;; This function is called by:
 10313 ;;		_lcd_init
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text32
 10318  00321A                     __ptext32:
 10319                           	opt callstack 0
 10320  00321A                     _lcd_fill:
 10321                           	opt callstack 20
 10322  00321A                     
 10323                           ;lib_ili9341.c: 191: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 192: {;lib_ili9341.
      +                          c: 193:     uint16_t width = 320, height = 240;
 10324  00321A  0E01               	movlw	1
 10325  00321C  6E21               	movwf	(lcd_fill@width+1)^0,c
 10326  00321E  0E40               	movlw	64
 10327  003220  6E20               	movwf	lcd_fill@width^0,c
 10328  003222  0E00               	movlw	0
 10329  003224  6E1F               	movwf	(lcd_fill@height+1)^0,c
 10330  003226  0EF0               	movlw	240
 10331  003228  6E1E               	movwf	lcd_fill@height^0,c
 10332  00322A                     
 10333                           ;lib_ili9341.c: 195:     if( lcd_set_cursor(0,0) )
 10334  00322A  0E00               	movlw	0
 10335  00322C  6E19               	movwf	(lcd_set_cursor@x+1)^0,c
 10336  00322E  0E00               	movlw	0
 10337  003230  6E18               	movwf	lcd_set_cursor@x^0,c
 10338  003232  0E00               	movlw	0
 10339  003234  6E1B               	movwf	(lcd_set_cursor@y+1)^0,c
 10340  003236  0E00               	movlw	0
 10341  003238  6E1A               	movwf	lcd_set_cursor@y^0,c
 10342  00323A  ECDC  F01A         	call	_lcd_set_cursor	;wreg free
 10343  00323E  0900               	iorlw	0
 10344  003240  B4D8               	btfsc	status,2,c
 10345  003242  EF25  F019         	goto	u6221
 10346  003246  EF27  F019         	goto	u6220
 10347  00324A                     u6221:
 10348  00324A  EF40  F019         	goto	l5745
 10349  00324E                     u6220:
 10350  00324E  EF4D  F019         	goto	l282
 10351  003252                     l5739:
 10352                           
 10353                           ;lib_ili9341.c: 203:         {;lib_ili9341.c: 204:             lcd_draw_pixel(bg_color);
 10354  003252  C01C  F016         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 10355  003256  C01D  F017         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 10356  00325A  ECAA  F01C         	call	_lcd_draw_pixel	;wreg free
 10357  00325E                     l5741:
 10358                           
 10359                           ;lib_ili9341.c: 202:         while(width--)
 10360  00325E  0620               	decf	lcd_fill@width^0,f,c
 10361  003260  A0D8               	btfss	status,0,c
 10362  003262  0621               	decf	(lcd_fill@width+1)^0,f,c
 10363  003264  2820               	incf	lcd_fill@width^0,w,c
 10364  003266  E106               	bnz	u6231
 10365  003268  2821               	incf	(lcd_fill@width+1)^0,w,c
 10366  00326A  A4D8               	btfss	status,2,c
 10367  00326C  EF3A  F019         	goto	u6231
 10368  003270  EF3C  F019         	goto	u6230
 10369  003274                     u6231:
 10370  003274  EF29  F019         	goto	l5739
 10371  003278                     u6230:
 10372  003278                     
 10373                           ;lib_ili9341.c: 206:         width = 320;
 10374  003278  0E01               	movlw	1
 10375  00327A  6E21               	movwf	(lcd_fill@width+1)^0,c
 10376  00327C  0E40               	movlw	64
 10377  00327E  6E20               	movwf	lcd_fill@width^0,c
 10378  003280                     l5745:
 10379                           
 10380                           ;lib_ili9341.c: 200:     while(height--)
 10381  003280  061E               	decf	lcd_fill@height^0,f,c
 10382  003282  A0D8               	btfss	status,0,c
 10383  003284  061F               	decf	(lcd_fill@height+1)^0,f,c
 10384  003286  281E               	incf	lcd_fill@height^0,w,c
 10385  003288  E106               	bnz	u6241
 10386  00328A  281F               	incf	(lcd_fill@height+1)^0,w,c
 10387  00328C  A4D8               	btfss	status,2,c
 10388  00328E  EF4B  F019         	goto	u6241
 10389  003292  EF4D  F019         	goto	u6240
 10390  003296                     u6241:
 10391  003296  EF2F  F019         	goto	l5741
 10392  00329A                     u6240:
 10393  00329A                     l282:
 10394  00329A  0012               	return		;funcret
 10395  00329C                     __end_of_lcd_fill:
 10396                           	opt callstack 0
 10397                           
 10398 ;; *************** function _lcd_draw_string *****************
 10399 ;; Defined at:
 10400 ;;		line 378 in file "lib_ili9341.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  x               2   49[COMRAM] unsigned short 
 10403 ;;  y               2   51[COMRAM] unsigned short 
 10404 ;;  pS              2   53[COMRAM] PTR const unsigned char 
 10405 ;;		 -> string(100), STR_2(11), STR_1(33), 
 10406 ;;  fg_color        2   55[COMRAM] unsigned short 
 10407 ;;  bg_color        2   57[COMRAM] unsigned short 
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;  lIndex          2    6[BANK0 ] unsigned short 
 10410 ;;  k               2    4[BANK0 ] unsigned short 
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      void 
 10413 ;; Registers used:
 10414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10420 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10421 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10422 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10423 ;;      Totals:        10       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10424 ;;Total ram usage:       18 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:   10
 10427 ;; This function calls:
 10428 ;;		_lcd_draw_char
 10429 ;; This function is called by:
 10430 ;;		_main
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           	psect	text33
 10435  002922                     __ptext33:
 10436                           	opt callstack 0
 10437  002922                     _lcd_draw_string:
 10438                           	opt callstack 20
 10439  002922                     
 10440                           ;lib_ili9341.c: 378: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 379: {;lib_ili9341.c: 380:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 382:     while(*pS)
 10441  002922  EF13  F015         	goto	l6051
 10442  002926                     l6037:
 10443                           
 10444                           ;lib_ili9341.c: 383:     {;lib_ili9341.c: 384:         lIndex = 0;
 10445  002926  0E00               	movlw	0
 10446  002928  0100               	movlb	0	; () banked
 10447  00292A  6F67               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 10448  00292C  0E00               	movlw	0
 10449  00292E  6F66               	movwf	lcd_draw_string@lIndex& (0+255),b
 10450                           
 10451                           ;lib_ili9341.c: 385:         for(k=0; k<(*pS - ' '); k++)
 10452  002930  0E00               	movlw	0
 10453  002932  6F65               	movwf	(lcd_draw_string@k+1)& (0+255),b
 10454  002934  0E00               	movlw	0
 10455  002936  6F64               	movwf	lcd_draw_string@k& (0+255),b
 10456  002938  EFBD  F014         	goto	l6043
 10457  00293C                     l6039:
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;lib_ili9341.c: 386:         {;lib_ili9341.c: 387:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 10461  00293C  90D8               	bcf	status,0,c
 10462  00293E  3566               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 10463  002940  6EF6               	movwf	tblptrl,c
 10464  002942  3567               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 10465  002944  6EF7               	movwf	tblptrh,c
 10466  002946  0EC1               	movlw	low _font
 10467  002948  26F6               	addwf	tblptrl,f,c
 10468  00294A  0EF1               	movlw	high _font
 10469  00294C  22F7               	addwfc	tblptrh,f,c
 10470  00294E                     	if	1	;There are 3 active tblptr bytes
 10471  00294E  6AF8               	clrf	tblptru,c
 10472  002950  0E00               	movlw	low (__mediumconst shr (0+16))
 10473  002952  22F8               	addwfc	tblptru,f,c
 10474  002954                     	endif
 10475  002954  0009               	tblrd		*+
 10476  002956  CFF5 F060          	movff	tablat,??_lcd_draw_string
 10477  00295A  0009               	tblrd		*+
 10478  00295C  CFF5 F061          	movff	tablat,??_lcd_draw_string+1
 10479  002960  90D8               	bcf	status,0,c
 10480  002962  3760               	rlcf	??_lcd_draw_string& (0+255),f,b
 10481  002964  3761               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 10482  002966  0E01               	movlw	1
 10483  002968  2760               	addwf	??_lcd_draw_string& (0+255),f,b
 10484  00296A  0E00               	movlw	0
 10485  00296C  2361               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 10486  00296E  5160               	movf	??_lcd_draw_string& (0+255),w,b
 10487  002970  2766               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 10488  002972  5161               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 10489  002974  2367               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 10490  002976                     
 10491                           ; BSR set to: 0
 10492                           ;lib_ili9341.c: 388:         }
 10493  002976  4B64               	infsnz	lcd_draw_string@k& (0+255),f,b
 10494  002978  2B65               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 10495  00297A                     l6043:
 10496                           
 10497                           ; BSR set to: 0
 10498  00297A  0EE0               	movlw	224
 10499  00297C  6F60               	movwf	??_lcd_draw_string& (0+255),b
 10500  00297E  0EFF               	movlw	255
 10501  002980  6F61               	movwf	(??_lcd_draw_string+1)& (0+255),b
 10502  002982  C036  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10503  002986  C037  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10504  00298A  0E00               	movlw	low (__mediumconst shr (0+16))
 10505  00298C  6EF8               	movwf	tblptru,c
 10506  00298E  0E0E               	movlw	(high __ramtop+-1)
 10507  002990  64F7               	cpfsgt	tblptrh,c
 10508  002992  D003               	bra	u6447
 10509  002994  0008               	tblrd		*
 10510  002996  50F5               	movf	tablat,w,c
 10511  002998  D005               	bra	u6440
 10512  00299A                     u6447:
 10513  00299A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10514  00299E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10515  0029A2  50E7               	movf	indf1,w,c
 10516  0029A4                     u6440:
 10517  0029A4  0100               	movlb	0	; () banked
 10518  0029A6  6F62               	movwf	(??_lcd_draw_string+2)& (0+255),b
 10519  0029A8  6B63               	clrf	(??_lcd_draw_string+3)& (0+255),b
 10520  0029AA  5160               	movf	??_lcd_draw_string& (0+255),w,b
 10521  0029AC  2762               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 10522  0029AE  5161               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 10523  0029B0  2363               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 10524  0029B2  5162               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 10525  0029B4  5D64               	subwf	lcd_draw_string@k& (0+255),w,b
 10526  0029B6  5163               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 10527  0029B8  5965               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 10528  0029BA  A0D8               	btfss	status,0,c
 10529  0029BC  EFE2  F014         	goto	u6451
 10530  0029C0  EFE4  F014         	goto	u6450
 10531  0029C4                     u6451:
 10532  0029C4  EF9E  F014         	goto	l6039
 10533  0029C8                     u6450:
 10534  0029C8                     
 10535                           ; BSR set to: 0
 10536                           ;lib_ili9341.c: 390:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 10537  0029C8  C032  F01C         	movff	lcd_draw_string@x,lcd_draw_char@x
 10538  0029CC  C033  F01D         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 10539  0029D0  C034  F01E         	movff	lcd_draw_string@y,lcd_draw_char@y
 10540  0029D4  C035  F01F         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 10541  0029D8  C066  F020         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 10542  0029DC  C067  F021         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 10543  0029E0  C038  F022         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 10544  0029E4  C039  F023         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 10545  0029E8  C03A  F024         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 10546  0029EC  C03B  F025         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 10547  0029F0  EC6E  F012         	call	_lcd_draw_char	;wreg free
 10548  0029F4                     
 10549                           ;lib_ili9341.c: 392:         x += font[lIndex];
 10550  0029F4  90D8               	bcf	status,0,c
 10551  0029F6  0100               	movlb	0	; () banked
 10552  0029F8  3566               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 10553  0029FA  6EF6               	movwf	tblptrl,c
 10554  0029FC  3567               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 10555  0029FE  6EF7               	movwf	tblptrh,c
 10556  002A00  0EC1               	movlw	low _font
 10557  002A02  26F6               	addwf	tblptrl,f,c
 10558  002A04  0EF1               	movlw	high _font
 10559  002A06  22F7               	addwfc	tblptrh,f,c
 10560  002A08                     	if	1	;There are 3 active tblptr bytes
 10561  002A08  6AF8               	clrf	tblptru,c
 10562  002A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 10563  002A0C  22F8               	addwfc	tblptru,f,c
 10564  002A0E                     	endif
 10565  002A0E  0009               	tblrd		*+
 10566  002A10  CFF5 F060          	movff	tablat,??_lcd_draw_string
 10567  002A14  0009               	tblrd		*+
 10568  002A16  CFF5 F061          	movff	tablat,??_lcd_draw_string+1
 10569  002A1A  5160               	movf	??_lcd_draw_string& (0+255),w,b
 10570  002A1C  2632               	addwf	lcd_draw_string@x^0,f,c
 10571  002A1E  5161               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 10572  002A20  2233               	addwfc	(lcd_draw_string@x+1)^0,f,c
 10573  002A22                     
 10574                           ; BSR set to: 0
 10575                           ;lib_ili9341.c: 394:         pS++;
 10576  002A22  4A36               	infsnz	lcd_draw_string@pS^0,f,c
 10577  002A24  2A37               	incf	(lcd_draw_string@pS+1)^0,f,c
 10578  002A26                     l6051:
 10579                           
 10580                           ;lib_ili9341.c: 382:     while(*pS)
 10581  002A26  C036  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10582  002A2A  C037  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10583  002A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 10584  002A30  6EF8               	movwf	tblptru,c
 10585  002A32  0E0E               	movlw	(high __ramtop+-1)
 10586  002A34  64F7               	cpfsgt	tblptrh,c
 10587  002A36  D003               	bra	u6467
 10588  002A38  0008               	tblrd		*
 10589  002A3A  50F5               	movf	tablat,w,c
 10590  002A3C  D005               	bra	u6460
 10591  002A3E                     u6467:
 10592  002A3E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10593  002A42  CFF7 FFE2          	movff	tblptrh,fsr1h
 10594  002A46  50E7               	movf	indf1,w,c
 10595  002A48                     u6460:
 10596  002A48  0900               	iorlw	0
 10597  002A4A  A4D8               	btfss	status,2,c
 10598  002A4C  EF2A  F015         	goto	u6471
 10599  002A50  EF2C  F015         	goto	u6470
 10600  002A54                     u6471:
 10601  002A54  EF93  F014         	goto	l6037
 10602  002A58                     u6470:
 10603  002A58  0012               	return		;funcret
 10604  002A5A                     __end_of_lcd_draw_string:
 10605                           	opt callstack 0
 10606                           
 10607 ;; *************** function _lcd_draw_char *****************
 10608 ;; Defined at:
 10609 ;;		line 353 in file "lib_ili9341.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;  x               2   27[COMRAM] unsigned short 
 10612 ;;  y               2   29[COMRAM] unsigned short 
 10613 ;;  fIndex          2   31[COMRAM] unsigned short 
 10614 ;;  fg_color        2   33[COMRAM] unsigned short 
 10615 ;;  bg_color        2   35[COMRAM] unsigned short 
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;  i               1   48[COMRAM] unsigned char 
 10618 ;;  k               1   47[COMRAM] unsigned char 
 10619 ;;  j               1   46[COMRAM] unsigned char 
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      void 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10629 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10630 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10631 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10632 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10633 ;;Total ram usage:       22 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:    9
 10636 ;; This function calls:
 10637 ;;		_lcd_draw_pixel
 10638 ;;		_lcd_set_cursor
 10639 ;; This function is called by:
 10640 ;;		_lcd_draw_string
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           	psect	text34
 10645  0024DC                     __ptext34:
 10646                           	opt callstack 0
 10647  0024DC                     _lcd_draw_char:
 10648                           	opt callstack 20
 10649  0024DC                     
 10650                           ;lib_ili9341.c: 353: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 354: {;lib_ili9341.c: 355:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 357:     for(j=0; j < font[fIndex]; j++)
 10651  0024DC  0E00               	movlw	0
 10652  0024DE  6E2F               	movwf	lcd_draw_char@j^0,c
 10653  0024E0  EF0E  F013         	goto	l5783
 10654  0024E4                     l5753:
 10655                           
 10656                           ;lib_ili9341.c: 358:     {;lib_ili9341.c: 359:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 10657  0024E4  90D8               	bcf	status,0,c
 10658  0024E6  3420               	rlcf	lcd_draw_char@fIndex^0,w,c
 10659  0024E8  6EF6               	movwf	tblptrl,c
 10660  0024EA  3421               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10661  0024EC  6EF7               	movwf	tblptrh,c
 10662  0024EE  0EC1               	movlw	low _font
 10663  0024F0  26F6               	addwf	tblptrl,f,c
 10664  0024F2  0EF1               	movlw	high _font
 10665  0024F4  22F7               	addwfc	tblptrh,f,c
 10666  0024F6                     	if	1	;There are 3 active tblptr bytes
 10667  0024F6  6AF8               	clrf	tblptru,c
 10668  0024F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10669  0024FA  22F8               	addwfc	tblptru,f,c
 10670  0024FC                     	endif
 10671  0024FC  0009               	tblrd		*+
 10672  0024FE  CFF5 F026          	movff	tablat,??_lcd_draw_char
 10673  002502  0009               	tblrd		*+
 10674  002504  CFF5 F027          	movff	tablat,??_lcd_draw_char+1
 10675  002508  502F               	movf	lcd_draw_char@j^0,w,c
 10676  00250A  5E26               	subwf	??_lcd_draw_char^0,f,c
 10677  00250C  0E00               	movlw	0
 10678  00250E  5A27               	subwfb	(??_lcd_draw_char+1)^0,f,c
 10679  002510  501C               	movf	lcd_draw_char@x^0,w,c
 10680  002512  2426               	addwf	??_lcd_draw_char^0,w,c
 10681  002514  6E18               	movwf	lcd_set_cursor@x^0,c
 10682  002516  501D               	movf	(lcd_draw_char@x+1)^0,w,c
 10683  002518  2027               	addwfc	(??_lcd_draw_char+1)^0,w,c
 10684  00251A  6E19               	movwf	(lcd_set_cursor@x+1)^0,c
 10685  00251C  C01E  F01A         	movff	lcd_draw_char@y,lcd_set_cursor@y
 10686  002520  C01F  F01B         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 10687  002524  ECDC  F01A         	call	_lcd_set_cursor	;wreg free
 10688  002528                     
 10689                           ;lib_ili9341.c: 361:         for(k=0; k<2; k++)
 10690  002528  0E00               	movlw	0
 10691  00252A  6E30               	movwf	lcd_draw_char@k^0,c
 10692  00252C                     l5761:
 10693                           
 10694                           ;lib_ili9341.c: 362:         {;lib_ili9341.c: 363:             for(i=0; i<8; i++)
 10695  00252C  0E00               	movlw	0
 10696  00252E  6E31               	movwf	lcd_draw_char@i^0,c
 10697  002530                     l5767:
 10698                           
 10699                           ;lib_ili9341.c: 364:             {;lib_ili9341.c: 365:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 10700  002530  502F               	movf	lcd_draw_char@j^0,w,c
 10701  002532  6E26               	movwf	??_lcd_draw_char^0,c
 10702  002534  6A27               	clrf	(??_lcd_draw_char+1)^0,c
 10703  002536  90D8               	bcf	status,0,c
 10704  002538  3626               	rlcf	??_lcd_draw_char^0,f,c
 10705  00253A  3627               	rlcf	(??_lcd_draw_char+1)^0,f,c
 10706  00253C  90D8               	bcf	status,0,c
 10707  00253E  3420               	rlcf	lcd_draw_char@fIndex^0,w,c
 10708  002540  6EF6               	movwf	tblptrl,c
 10709  002542  3421               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10710  002544  6EF7               	movwf	tblptrh,c
 10711  002546  0EC1               	movlw	low _font
 10712  002548  26F6               	addwf	tblptrl,f,c
 10713  00254A  0EF1               	movlw	high _font
 10714  00254C  22F7               	addwfc	tblptrh,f,c
 10715  00254E                     	if	1	;There are 3 active tblptr bytes
 10716  00254E  6AF8               	clrf	tblptru,c
 10717  002550  0E00               	movlw	low (__mediumconst shr (0+16))
 10718  002552  22F8               	addwfc	tblptru,f,c
 10719  002554                     	endif
 10720  002554  0009               	tblrd		*+
 10721  002556  CFF5 F028          	movff	tablat,??_lcd_draw_char+2
 10722  00255A  0009               	tblrd		*+
 10723  00255C  CFF5 F029          	movff	tablat,??_lcd_draw_char+3
 10724  002560  90D8               	bcf	status,0,c
 10725  002562  3628               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10726  002564  3629               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10727  002566  5026               	movf	??_lcd_draw_char^0,w,c
 10728  002568  5E28               	subwf	(??_lcd_draw_char+2)^0,f,c
 10729  00256A  5027               	movf	(??_lcd_draw_char+1)^0,w,c
 10730  00256C  5A29               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10731  00256E  5030               	movf	lcd_draw_char@k^0,w,c
 10732  002570  5E28               	subwf	(??_lcd_draw_char+2)^0,f,c
 10733  002572  0E00               	movlw	0
 10734  002574  5A29               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10735  002576  5020               	movf	lcd_draw_char@fIndex^0,w,c
 10736  002578  2628               	addwf	(??_lcd_draw_char+2)^0,f,c
 10737  00257A  5021               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 10738  00257C  2229               	addwfc	(??_lcd_draw_char+3)^0,f,c
 10739  00257E  90D8               	bcf	status,0,c
 10740  002580  3628               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10741  002582  3629               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10742  002584  0EC1               	movlw	low _font
 10743  002586  2428               	addwf	(??_lcd_draw_char+2)^0,w,c
 10744  002588  6EF6               	movwf	tblptrl,c
 10745  00258A  0EF1               	movlw	high _font
 10746  00258C  2029               	addwfc	(??_lcd_draw_char+3)^0,w,c
 10747  00258E  6EF7               	movwf	tblptrh,c
 10748  002590                     	if	1	;There are 3 active tblptr bytes
 10749  002590  6AF8               	clrf	tblptru,c
 10750  002592  0E00               	movlw	low (__mediumconst shr (0+16))
 10751  002594  22F8               	addwfc	tblptru,f,c
 10752  002596                     	endif
 10753  002596  0009               	tblrd		*+
 10754  002598  CFF5 F02A          	movff	tablat,??_lcd_draw_char+4
 10755  00259C  0009               	tblrd		*+
 10756  00259E  CFF5 F02B          	movff	tablat,??_lcd_draw_char+5
 10757  0025A2  C031  F02C         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 10758  0025A6  0E80               	movlw	128
 10759  0025A8  6E2D               	movwf	(??_lcd_draw_char+7)^0,c
 10760  0025AA  0E00               	movlw	0
 10761  0025AC  6E2E               	movwf	(??_lcd_draw_char+8)^0,c
 10762  0025AE  2A2C               	incf	(??_lcd_draw_char+6)^0,f,c
 10763  0025B0  EFDD  F012         	goto	u6264
 10764  0025B4                     u6265:
 10765  0025B4  342E               	rlcf	(??_lcd_draw_char+8)^0,w,c
 10766  0025B6  322E               	rrcf	(??_lcd_draw_char+8)^0,f,c
 10767  0025B8  322D               	rrcf	(??_lcd_draw_char+7)^0,f,c
 10768  0025BA                     u6264:
 10769  0025BA  2E2C               	decfsz	(??_lcd_draw_char+6)^0,f,c
 10770  0025BC  EFDA  F012         	goto	u6265
 10771  0025C0  502A               	movf	(??_lcd_draw_char+4)^0,w,c
 10772  0025C2  162D               	andwf	(??_lcd_draw_char+7)^0,f,c
 10773  0025C4  502B               	movf	(??_lcd_draw_char+5)^0,w,c
 10774  0025C6  162E               	andwf	(??_lcd_draw_char+8)^0,f,c
 10775  0025C8  502D               	movf	(??_lcd_draw_char+7)^0,w,c
 10776  0025CA  102E               	iorwf	(??_lcd_draw_char+8)^0,w,c
 10777  0025CC  B4D8               	btfsc	status,2,c
 10778  0025CE  EFEB  F012         	goto	u6271
 10779  0025D2  EFED  F012         	goto	u6270
 10780  0025D6                     u6271:
 10781  0025D6  EFF5  F012         	goto	l5771
 10782  0025DA                     u6270:
 10783  0025DA                     
 10784                           ;lib_ili9341.c: 366:                 {;lib_ili9341.c: 367:                     lcd_draw_
      +                          pixel(fg_color);
 10785  0025DA  C022  F016         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 10786  0025DE  C023  F017         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 10787  0025E2  ECAA  F01C         	call	_lcd_draw_pixel	;wreg free
 10788                           
 10789                           ;lib_ili9341.c: 368:                 }
 10790  0025E6  EFFB  F012         	goto	l5773
 10791  0025EA                     l5771:
 10792                           
 10793                           ;lib_ili9341.c: 370:                 {;lib_ili9341.c: 371:                     lcd_draw_
      +                          pixel(bg_color);
 10794  0025EA  C024  F016         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 10795  0025EE  C025  F017         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 10796  0025F2  ECAA  F01C         	call	_lcd_draw_pixel	;wreg free
 10797  0025F6                     l5773:
 10798                           
 10799                           ;lib_ili9341.c: 373:             }
 10800  0025F6  2A31               	incf	lcd_draw_char@i^0,f,c
 10801  0025F8  0E07               	movlw	7
 10802  0025FA  6431               	cpfsgt	lcd_draw_char@i^0,c
 10803  0025FC  EF02  F013         	goto	u6281
 10804  002600  EF04  F013         	goto	u6280
 10805  002604                     u6281:
 10806  002604  EF98  F012         	goto	l5767
 10807  002608                     u6280:
 10808  002608                     
 10809                           ;lib_ili9341.c: 374:         }
 10810  002608  2A30               	incf	lcd_draw_char@k^0,f,c
 10811  00260A  0E01               	movlw	1
 10812  00260C  6430               	cpfsgt	lcd_draw_char@k^0,c
 10813  00260E  EF0B  F013         	goto	u6291
 10814  002612  EF0D  F013         	goto	u6290
 10815  002616                     u6291:
 10816  002616  EF96  F012         	goto	l5761
 10817  00261A                     u6290:
 10818  00261A                     
 10819                           ;lib_ili9341.c: 375:     }
 10820  00261A  2A2F               	incf	lcd_draw_char@j^0,f,c
 10821  00261C                     l5783:
 10822  00261C  90D8               	bcf	status,0,c
 10823  00261E  3420               	rlcf	lcd_draw_char@fIndex^0,w,c
 10824  002620  6EF6               	movwf	tblptrl,c
 10825  002622  3421               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10826  002624  6EF7               	movwf	tblptrh,c
 10827  002626  0EC1               	movlw	low _font
 10828  002628  26F6               	addwf	tblptrl,f,c
 10829  00262A  0EF1               	movlw	high _font
 10830  00262C  22F7               	addwfc	tblptrh,f,c
 10831  00262E                     	if	1	;There are 3 active tblptr bytes
 10832  00262E  6AF8               	clrf	tblptru,c
 10833  002630  0E00               	movlw	low (__mediumconst shr (0+16))
 10834  002632  22F8               	addwfc	tblptru,f,c
 10835  002634                     	endif
 10836  002634  502F               	movf	lcd_draw_char@j^0,w,c
 10837  002636  6E26               	movwf	??_lcd_draw_char^0,c
 10838  002638  6A27               	clrf	(??_lcd_draw_char+1)^0,c
 10839  00263A  0009               	tblrd		*+
 10840  00263C  50F5               	movf	tablat,w,c
 10841  00263E  5C26               	subwf	??_lcd_draw_char^0,w,c
 10842  002640  0009               	tblrd		*+
 10843  002642  50F5               	movf	tablat,w,c
 10844  002644  5827               	subwfb	(??_lcd_draw_char+1)^0,w,c
 10845  002646  A0D8               	btfss	status,0,c
 10846  002648  EF28  F013         	goto	u6301
 10847  00264C  EF2A  F013         	goto	u6300
 10848  002650                     u6301:
 10849  002650  EF72  F012         	goto	l5753
 10850  002654                     u6300:
 10851  002654  0012               	return		;funcret
 10852  002656                     __end_of_lcd_draw_char:
 10853                           	opt callstack 0
 10854                           
 10855 ;; *************** function _lcd_draw_line *****************
 10856 ;; Defined at:
 10857 ;;		line 210 in file "lib_ili9341.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;  x0              2   33[COMRAM] unsigned short 
 10860 ;;  y0              2   35[COMRAM] unsigned short 
 10861 ;;  x1              2   37[COMRAM] unsigned short 
 10862 ;;  y1              2   39[COMRAM] unsigned short 
 10863 ;;  color           2   41[COMRAM] unsigned short 
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;  dy              2   54[COMRAM] short 
 10866 ;;  dx              2   52[COMRAM] short 
 10867 ;;  e2              2   50[COMRAM] short 
 10868 ;;  err             2   48[COMRAM] short 
 10869 ;;  sy              2   46[COMRAM] short 
 10870 ;;  sx              2   44[COMRAM] short 
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  1    wreg      void 
 10873 ;; Registers used:
 10874 ;;		wreg, status,2, status,0, cstack
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10880 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10881 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;Total ram usage:       23 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:   10
 10887 ;; This function calls:
 10888 ;;		_lcd_draw_pixel_at
 10889 ;; This function is called by:
 10890 ;;		_main
 10891 ;;		_lcd_draw_filled_circle
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text35
 10896  002656                     __ptext35:
 10897                           	opt callstack 0
 10898  002656                     _lcd_draw_line:
 10899                           	opt callstack 20
 10900  002656                     
 10901                           ;lib_ili9341.c: 210: void lcd_draw_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 211: {;lib_ili9341.c: 212:     int16_t dx = x1 - x0, 
      +                          sx = x0 < x1 ? 1 : -1;
 10902  002656  5022               	movf	lcd_draw_line@x0^0,w,c
 10903  002658  5C26               	subwf	lcd_draw_line@x1^0,w,c
 10904  00265A  6E35               	movwf	lcd_draw_line@dx^0,c
 10905  00265C  5023               	movf	(lcd_draw_line@x0+1)^0,w,c
 10906  00265E  5827               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 10907  002660  6E36               	movwf	(lcd_draw_line@dx+1)^0,c
 10908  002662  5026               	movf	lcd_draw_line@x1^0,w,c
 10909  002664  5C22               	subwf	lcd_draw_line@x0^0,w,c
 10910  002666  5027               	movf	(lcd_draw_line@x1+1)^0,w,c
 10911  002668  5823               	subwfb	(lcd_draw_line@x0+1)^0,w,c
 10912  00266A  A0D8               	btfss	status,0,c
 10913  00266C  EF3A  F013         	goto	u6361
 10914  002670  EF3C  F013         	goto	u6360
 10915  002674                     u6361:
 10916  002674  EF40  F013         	goto	l6001
 10917  002678                     u6360:
 10918  002678  682D               	setf	lcd_draw_line@sx^0,c
 10919  00267A  682E               	setf	(lcd_draw_line@sx+1)^0,c
 10920  00267C  EF44  F013         	goto	l6003
 10921  002680                     l6001:
 10922  002680  0E00               	movlw	0
 10923  002682  6E2E               	movwf	(lcd_draw_line@sx+1)^0,c
 10924  002684  0E01               	movlw	1
 10925  002686  6E2D               	movwf	lcd_draw_line@sx^0,c
 10926  002688                     l6003:
 10927                           
 10928                           ;lib_ili9341.c: 213:     int16_t dy = y1 - y0, sy = y0 < y1 ? 1 : -1;
 10929  002688  5024               	movf	lcd_draw_line@y0^0,w,c
 10930  00268A  5C28               	subwf	lcd_draw_line@y1^0,w,c
 10931  00268C  6E37               	movwf	lcd_draw_line@dy^0,c
 10932  00268E  5025               	movf	(lcd_draw_line@y0+1)^0,w,c
 10933  002690  5829               	subwfb	(lcd_draw_line@y1+1)^0,w,c
 10934  002692  6E38               	movwf	(lcd_draw_line@dy+1)^0,c
 10935  002694  5028               	movf	lcd_draw_line@y1^0,w,c
 10936  002696  5C24               	subwf	lcd_draw_line@y0^0,w,c
 10937  002698  5029               	movf	(lcd_draw_line@y1+1)^0,w,c
 10938  00269A  5825               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 10939  00269C  A0D8               	btfss	status,0,c
 10940  00269E  EF53  F013         	goto	u6371
 10941  0026A2  EF55  F013         	goto	u6370
 10942  0026A6                     u6371:
 10943  0026A6  EF59  F013         	goto	l6009
 10944  0026AA                     u6370:
 10945  0026AA  682F               	setf	lcd_draw_line@sy^0,c
 10946  0026AC  6830               	setf	(lcd_draw_line@sy+1)^0,c
 10947  0026AE  EF5D  F013         	goto	l6011
 10948  0026B2                     l6009:
 10949  0026B2  0E00               	movlw	0
 10950  0026B4  6E30               	movwf	(lcd_draw_line@sy+1)^0,c
 10951  0026B6  0E01               	movlw	1
 10952  0026B8  6E2F               	movwf	lcd_draw_line@sy^0,c
 10953  0026BA                     l6011:
 10954                           
 10955                           ;lib_ili9341.c: 214:     int16_t err, e2;;lib_ili9341.c: 216:     if(x0 > x1)
 10956  0026BA  5022               	movf	lcd_draw_line@x0^0,w,c
 10957  0026BC  5C26               	subwf	lcd_draw_line@x1^0,w,c
 10958  0026BE  5023               	movf	(lcd_draw_line@x0+1)^0,w,c
 10959  0026C0  5827               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 10960  0026C2  B0D8               	btfsc	status,0,c
 10961  0026C4  EF66  F013         	goto	u6381
 10962  0026C8  EF68  F013         	goto	u6380
 10963  0026CC                     u6381:
 10964  0026CC  EF6C  F013         	goto	l6015
 10965  0026D0                     u6380:
 10966  0026D0                     
 10967                           ;lib_ili9341.c: 217:     {;lib_ili9341.c: 218:         dx = -dx;
 10968  0026D0  6C35               	negf	lcd_draw_line@dx^0,c
 10969  0026D2  1E36               	comf	(lcd_draw_line@dx+1)^0,f,c
 10970  0026D4  B0D8               	btfsc	status,0,c
 10971  0026D6  2A36               	incf	(lcd_draw_line@dx+1)^0,f,c
 10972  0026D8                     l6015:
 10973                           
 10974                           ;lib_ili9341.c: 221:     if(y1 > y0)
 10975  0026D8  5028               	movf	lcd_draw_line@y1^0,w,c
 10976  0026DA  5C24               	subwf	lcd_draw_line@y0^0,w,c
 10977  0026DC  5029               	movf	(lcd_draw_line@y1+1)^0,w,c
 10978  0026DE  5825               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 10979  0026E0  B0D8               	btfsc	status,0,c
 10980  0026E2  EF75  F013         	goto	u6391
 10981  0026E6  EF77  F013         	goto	u6390
 10982  0026EA                     u6391:
 10983  0026EA  EF7B  F013         	goto	l6019
 10984  0026EE                     u6390:
 10985  0026EE                     
 10986                           ;lib_ili9341.c: 222:     {;lib_ili9341.c: 223:         dy = -dy;
 10987  0026EE  6C37               	negf	lcd_draw_line@dy^0,c
 10988  0026F0  1E38               	comf	(lcd_draw_line@dy+1)^0,f,c
 10989  0026F2  B0D8               	btfsc	status,0,c
 10990  0026F4  2A38               	incf	(lcd_draw_line@dy+1)^0,f,c
 10991  0026F6                     l6019:
 10992                           
 10993                           ;lib_ili9341.c: 226:     err = dx + dy;
 10994  0026F6  5037               	movf	lcd_draw_line@dy^0,w,c
 10995  0026F8  2435               	addwf	lcd_draw_line@dx^0,w,c
 10996  0026FA  6E31               	movwf	lcd_draw_line@err^0,c
 10997  0026FC  5038               	movf	(lcd_draw_line@dy+1)^0,w,c
 10998  0026FE  2036               	addwfc	(lcd_draw_line@dx+1)^0,w,c
 10999  002700  6E32               	movwf	(lcd_draw_line@err+1)^0,c
 11000  002702                     l6021:
 11001                           
 11002                           ;lib_ili9341.c: 229:     {;lib_ili9341.c: 230:         lcd_draw_pixel_at( x0, y0, color)
      +                          ;
 11003  002702  C022  F01C         	movff	lcd_draw_line@x0,lcd_draw_pixel_at@x
 11004  002706  C023  F01D         	movff	lcd_draw_line@x0+1,lcd_draw_pixel_at@x+1
 11005  00270A  C024  F01E         	movff	lcd_draw_line@y0,lcd_draw_pixel_at@y
 11006  00270E  C025  F01F         	movff	lcd_draw_line@y0+1,lcd_draw_pixel_at@y+1
 11007  002712  C02A  F020         	movff	lcd_draw_line@color,lcd_draw_pixel_at@color
 11008  002716  C02B  F021         	movff	lcd_draw_line@color+1,lcd_draw_pixel_at@color+1
 11009  00271A  ECAA  F01B         	call	_lcd_draw_pixel_at	;wreg free
 11010  00271E                     
 11011                           ;lib_ili9341.c: 232:         if ( (x0 == x1) && (y0 == y1) )
 11012  00271E  5026               	movf	lcd_draw_line@x1^0,w,c
 11013  002720  1822               	xorwf	lcd_draw_line@x0^0,w,c
 11014  002722  E107               	bnz	u6401
 11015  002724  5027               	movf	(lcd_draw_line@x1+1)^0,w,c
 11016  002726  1823               	xorwf	(lcd_draw_line@x0+1)^0,w,c
 11017  002728  A4D8               	btfss	status,2,c
 11018  00272A  EF99  F013         	goto	u6401
 11019  00272E  EF9B  F013         	goto	u6400
 11020  002732                     u6401:
 11021  002732  EFA9  F013         	goto	l6029
 11022  002736                     u6400:
 11023  002736  5028               	movf	lcd_draw_line@y1^0,w,c
 11024  002738  1824               	xorwf	lcd_draw_line@y0^0,w,c
 11025  00273A  E107               	bnz	u6411
 11026  00273C  5029               	movf	(lcd_draw_line@y1+1)^0,w,c
 11027  00273E  1825               	xorwf	(lcd_draw_line@y0+1)^0,w,c
 11028  002740  A4D8               	btfss	status,2,c
 11029  002742  EFA5  F013         	goto	u6411
 11030  002746  EFA7  F013         	goto	u6410
 11031  00274A                     u6411:
 11032  00274A  EFA9  F013         	goto	l6029
 11033  00274E                     u6410:
 11034  00274E  EFDE  F013         	goto	l307
 11035  002752                     l6029:
 11036                           
 11037                           ;lib_ili9341.c: 237:         e2 = (err << 1);
 11038  002752  90D8               	bcf	status,0,c
 11039  002754  3431               	rlcf	lcd_draw_line@err^0,w,c
 11040  002756  6E33               	movwf	lcd_draw_line@e2^0,c
 11041  002758  3432               	rlcf	(lcd_draw_line@err+1)^0,w,c
 11042  00275A  6E34               	movwf	(lcd_draw_line@e2+1)^0,c
 11043                           
 11044                           ;lib_ili9341.c: 239:         if(e2 >= dy)
 11045  00275C  5037               	movf	lcd_draw_line@dy^0,w,c
 11046  00275E  5C33               	subwf	lcd_draw_line@e2^0,w,c
 11047  002760  5034               	movf	(lcd_draw_line@e2+1)^0,w,c
 11048  002762  0A80               	xorlw	128
 11049  002764  6E2C               	movwf	??_lcd_draw_line^0,c
 11050  002766  5038               	movf	(lcd_draw_line@dy+1)^0,w,c
 11051  002768  0A80               	xorlw	128
 11052  00276A  582C               	subwfb	??_lcd_draw_line^0,w,c
 11053  00276C  A0D8               	btfss	status,0,c
 11054  00276E  EFBB  F013         	goto	u6421
 11055  002772  EFBD  F013         	goto	u6420
 11056  002776                     u6421:
 11057  002776  EFC5  F013         	goto	l304
 11058  00277A                     u6420:
 11059  00277A                     
 11060                           ;lib_ili9341.c: 240:         {;lib_ili9341.c: 241:             err += dy;
 11061  00277A  5037               	movf	lcd_draw_line@dy^0,w,c
 11062  00277C  2631               	addwf	lcd_draw_line@err^0,f,c
 11063  00277E  5038               	movf	(lcd_draw_line@dy+1)^0,w,c
 11064  002780  2232               	addwfc	(lcd_draw_line@err+1)^0,f,c
 11065                           
 11066                           ;lib_ili9341.c: 242:             x0 += sx;
 11067  002782  502D               	movf	lcd_draw_line@sx^0,w,c
 11068  002784  2622               	addwf	lcd_draw_line@x0^0,f,c
 11069  002786  502E               	movf	(lcd_draw_line@sx+1)^0,w,c
 11070  002788  2223               	addwfc	(lcd_draw_line@x0+1)^0,f,c
 11071  00278A                     l304:
 11072                           
 11073                           ;lib_ili9341.c: 245:         if(e2 <= dx)
 11074  00278A  5033               	movf	lcd_draw_line@e2^0,w,c
 11075  00278C  5C35               	subwf	lcd_draw_line@dx^0,w,c
 11076  00278E  5036               	movf	(lcd_draw_line@dx+1)^0,w,c
 11077  002790  0A80               	xorlw	128
 11078  002792  6E2C               	movwf	??_lcd_draw_line^0,c
 11079  002794  5034               	movf	(lcd_draw_line@e2+1)^0,w,c
 11080  002796  0A80               	xorlw	128
 11081  002798  582C               	subwfb	??_lcd_draw_line^0,w,c
 11082  00279A  A0D8               	btfss	status,0,c
 11083  00279C  EFD2  F013         	goto	u6431
 11084  0027A0  EFD4  F013         	goto	u6430
 11085  0027A4                     u6431:
 11086  0027A4  EF81  F013         	goto	l6021
 11087  0027A8                     u6430:
 11088  0027A8                     
 11089                           ;lib_ili9341.c: 246:         {;lib_ili9341.c: 247:             err += dx;
 11090  0027A8  5035               	movf	lcd_draw_line@dx^0,w,c
 11091  0027AA  2631               	addwf	lcd_draw_line@err^0,f,c
 11092  0027AC  5036               	movf	(lcd_draw_line@dx+1)^0,w,c
 11093  0027AE  2232               	addwfc	(lcd_draw_line@err+1)^0,f,c
 11094                           
 11095                           ;lib_ili9341.c: 248:             y0 += sy;
 11096  0027B0  502F               	movf	lcd_draw_line@sy^0,w,c
 11097  0027B2  2624               	addwf	lcd_draw_line@y0^0,f,c
 11098  0027B4  5030               	movf	(lcd_draw_line@sy+1)^0,w,c
 11099  0027B6  2225               	addwfc	(lcd_draw_line@y0+1)^0,f,c
 11100  0027B8  EF81  F013         	goto	l6021
 11101  0027BC                     l307:
 11102  0027BC  0012               	return		;funcret
 11103  0027BE                     __end_of_lcd_draw_line:
 11104                           	opt callstack 0
 11105                           
 11106 ;; *************** function _lcd_draw_pixel_at *****************
 11107 ;; Defined at:
 11108 ;;		line 253 in file "lib_ili9341.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;  x               2   27[COMRAM] unsigned short 
 11111 ;;  y               2   29[COMRAM] unsigned short 
 11112 ;;  color           2   31[COMRAM] unsigned short 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;		None
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  1    wreg      void 
 11117 ;; Registers used:
 11118 ;;		wreg, status,2, status,0, cstack
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11124 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11128 ;;Total ram usage:        6 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; Hardware stack levels required when called:    9
 11131 ;; This function calls:
 11132 ;;		_lcd_draw_pixel
 11133 ;;		_lcd_set_cursor
 11134 ;; This function is called by:
 11135 ;;		_lcd_draw_line
 11136 ;;		_lcd_draw_circle
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           	psect	text36
 11141  003754                     __ptext36:
 11142                           	opt callstack 0
 11143  003754                     _lcd_draw_pixel_at:
 11144                           	opt callstack 20
 11145  003754                     
 11146                           ;lib_ili9341.c: 253: void lcd_draw_pixel_at(uint16_t x, uint16_t y, uint16_t color);lib_
      +                          ili9341.c: 254: {;lib_ili9341.c: 255:     if( !lcd_set_cursor(x,y) )
 11147  003754  C01C  F018         	movff	lcd_draw_pixel_at@x,lcd_set_cursor@x
 11148  003758  C01D  F019         	movff	lcd_draw_pixel_at@x+1,lcd_set_cursor@x+1
 11149  00375C  C01E  F01A         	movff	lcd_draw_pixel_at@y,lcd_set_cursor@y
 11150  003760  C01F  F01B         	movff	lcd_draw_pixel_at@y+1,lcd_set_cursor@y+1
 11151  003764  ECDC  F01A         	call	_lcd_set_cursor	;wreg free
 11152  003768  0900               	iorlw	0
 11153  00376A  A4D8               	btfss	status,2,c
 11154  00376C  EFBA  F01B         	goto	u6251
 11155  003770  EFBC  F01B         	goto	u6250
 11156  003774                     u6251:
 11157  003774  EFC2  F01B         	goto	l311
 11158  003778                     u6250:
 11159  003778                     
 11160                           ;lib_ili9341.c: 256:     {;lib_ili9341.c: 257:         lcd_draw_pixel(color);
 11161  003778  C020  F016         	movff	lcd_draw_pixel_at@color,lcd_draw_pixel@color
 11162  00377C  C021  F017         	movff	lcd_draw_pixel_at@color+1,lcd_draw_pixel@color+1
 11163  003780  ECAA  F01C         	call	_lcd_draw_pixel	;wreg free
 11164  003784                     l311:
 11165  003784  0012               	return		;funcret
 11166  003786                     __end_of_lcd_draw_pixel_at:
 11167                           	opt callstack 0
 11168                           
 11169 ;; *************** function _lcd_set_cursor *****************
 11170 ;; Defined at:
 11171 ;;		line 142 in file "lib_ili9341.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  x               2   23[COMRAM] unsigned short 
 11174 ;;  y               2   25[COMRAM] unsigned short 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      unsigned char 
 11179 ;; Registers used:
 11180 ;;		wreg, status,2, status,0, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11190 ;;Total ram usage:        4 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    8
 11193 ;; This function calls:
 11194 ;;		_lcd_set_cursor_x
 11195 ;;		_lcd_set_cursor_y
 11196 ;; This function is called by:
 11197 ;;		_lcd_fill
 11198 ;;		_lcd_draw_pixel_at
 11199 ;;		_lcd_draw_char
 11200 ;;		_lcd_fill_rect
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text37
 11205  0035B8                     __ptext37:
 11206                           	opt callstack 0
 11207  0035B8                     _lcd_set_cursor:
 11208                           	opt callstack 20
 11209  0035B8                     
 11210                           ;lib_ili9341.c: 142: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 143: 
      +                          {;lib_ili9341.c: 144:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 11211  0035B8  C018  F016         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 11212  0035BC  C019  F017         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 11213  0035C0  EC50  F01A         	call	_lcd_set_cursor_x	;wreg free
 11214  0035C4  0900               	iorlw	0
 11215  0035C6  A4D8               	btfss	status,2,c
 11216  0035C8  EFE8  F01A         	goto	u6191
 11217  0035CC  EFEA  F01A         	goto	u6190
 11218  0035D0                     u6191:
 11219  0035D0  EFF8  F01A         	goto	l5713
 11220  0035D4                     u6190:
 11221  0035D4  C01A  F016         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 11222  0035D8  C01B  F017         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 11223  0035DC  EC2C  F01A         	call	_lcd_set_cursor_y	;wreg free
 11224  0035E0  0900               	iorlw	0
 11225  0035E2  B4D8               	btfsc	status,2,c
 11226  0035E4  EFF6  F01A         	goto	u6201
 11227  0035E8  EFF8  F01A         	goto	u6200
 11228  0035EC                     u6201:
 11229  0035EC  EFFB  F01A         	goto	l5717
 11230  0035F0                     u6200:
 11231  0035F0                     l5713:
 11232                           
 11233                           ;lib_ili9341.c: 145:     {;lib_ili9341.c: 146:         return 1;
 11234  0035F0  0E01               	movlw	1
 11235  0035F2  EFFC  F01A         	goto	l267
 11236  0035F6                     l5717:
 11237                           
 11238                           ;lib_ili9341.c: 149:     return 0;
 11239  0035F6  0E00               	movlw	0
 11240  0035F8                     l267:
 11241  0035F8  0012               	return		;funcret
 11242  0035FA                     __end_of_lcd_set_cursor:
 11243                           	opt callstack 0
 11244                           
 11245 ;; *************** function _lcd_set_cursor_y *****************
 11246 ;; Defined at:
 11247 ;;		line 168 in file "lib_ili9341.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;  y               2   21[COMRAM] unsigned short 
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;		None
 11252 ;; Return value:  Size  Location     Type
 11253 ;;                  1    wreg      unsigned char 
 11254 ;; Registers used:
 11255 ;;		wreg, status,2, status,0, cstack
 11256 ;; Tracked objects:
 11257 ;;		On entry : 0/0
 11258 ;;		On exit  : 0/0
 11259 ;;		Unchanged: 0/0
 11260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11265 ;;Total ram usage:        2 bytes
 11266 ;; Hardware stack levels used:    1
 11267 ;; Hardware stack levels required when called:    7
 11268 ;; This function calls:
 11269 ;;		_lcd_send
 11270 ;; This function is called by:
 11271 ;;		_lcd_set_cursor
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text38
 11276  003458                     __ptext38:
 11277                           	opt callstack 0
 11278  003458                     _lcd_set_cursor_y:
 11279                           	opt callstack 20
 11280  003458                     
 11281                           ;lib_ili9341.c: 168: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 169: {;lib_ili9
      +                          341.c: 170:     if( y >= 240 )
 11282  003458  5017               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 11283  00345A  E109               	bnz	u5730
 11284  00345C  0EF0               	movlw	240
 11285  00345E  5C16               	subwf	lcd_set_cursor_y@y^0,w,c
 11286  003460  A0D8               	btfss	status,0,c
 11287  003462  EF35  F01A         	goto	u5731
 11288  003466  EF37  F01A         	goto	u5730
 11289  00346A                     u5731:
 11290  00346A  EF3A  F01A         	goto	l5367
 11291  00346E                     u5730:
 11292  00346E                     
 11293                           ;lib_ili9341.c: 171:     {;lib_ili9341.c: 172:         return 1;
 11294  00346E  0E01               	movlw	1
 11295  003470  EF4F  F01A         	goto	l275
 11296  003474                     l5367:
 11297                           
 11298                           ;lib_ili9341.c: 175:     lcd_send(0, 0x2A);
 11299  003474  0E2A               	movlw	42
 11300  003476  6E14               	movwf	lcd_send@value^0,c
 11301  003478  0E00               	movlw	0
 11302  00347A  EC92  F01C         	call	_lcd_send
 11303                           
 11304                           ;lib_ili9341.c: 176:     lcd_send(1, y >> 8);
 11305  00347E  5017               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 11306  003480  6E14               	movwf	lcd_send@value^0,c
 11307  003482  0E01               	movlw	1
 11308  003484  EC92  F01C         	call	_lcd_send
 11309                           
 11310                           ;lib_ili9341.c: 177:     lcd_send(1, y & 0xFF);
 11311  003488  C016  F014         	movff	lcd_set_cursor_y@y,lcd_send@value
 11312  00348C  0E01               	movlw	1
 11313  00348E  EC92  F01C         	call	_lcd_send
 11314                           
 11315                           ;lib_ili9341.c: 178:     lcd_send(0, 0x2c);
 11316  003492  0E2C               	movlw	44
 11317  003494  6E14               	movwf	lcd_send@value^0,c
 11318  003496  0E00               	movlw	0
 11319  003498  EC92  F01C         	call	_lcd_send
 11320  00349C                     
 11321                           ;lib_ili9341.c: 180:     return 0;
 11322  00349C  0E00               	movlw	0
 11323  00349E                     l275:
 11324  00349E  0012               	return		;funcret
 11325  0034A0                     __end_of_lcd_set_cursor_y:
 11326                           	opt callstack 0
 11327                           
 11328 ;; *************** function _lcd_set_cursor_x *****************
 11329 ;; Defined at:
 11330 ;;		line 153 in file "lib_ili9341.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;  x               2   21[COMRAM] unsigned short 
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      unsigned char 
 11337 ;; Registers used:
 11338 ;;		wreg, status,2, status,0, cstack
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11348 ;;Total ram usage:        2 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:    7
 11351 ;; This function calls:
 11352 ;;		_lcd_send
 11353 ;; This function is called by:
 11354 ;;		_lcd_set_cursor
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text39
 11359  0034A0                     __ptext39:
 11360                           	opt callstack 0
 11361  0034A0                     _lcd_set_cursor_x:
 11362                           	opt callstack 20
 11363  0034A0                     
 11364                           ;lib_ili9341.c: 153: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 154: {;lib_ili9
      +                          341.c: 155:     if( x >= 320 )
 11365  0034A0  0E40               	movlw	64
 11366  0034A2  5C16               	subwf	lcd_set_cursor_x@x^0,w,c
 11367  0034A4  0E01               	movlw	1
 11368  0034A6  5817               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 11369  0034A8  A0D8               	btfss	status,0,c
 11370  0034AA  EF59  F01A         	goto	u5721
 11371  0034AE  EF5B  F01A         	goto	u5720
 11372  0034B2                     u5721:
 11373  0034B2  EF5E  F01A         	goto	l5355
 11374  0034B6                     u5720:
 11375  0034B6                     
 11376                           ;lib_ili9341.c: 156:     {;lib_ili9341.c: 157:         return 1;
 11377  0034B6  0E01               	movlw	1
 11378  0034B8  EF73  F01A         	goto	l271
 11379  0034BC                     l5355:
 11380                           
 11381                           ;lib_ili9341.c: 160:     lcd_send(0, 0x2B);
 11382  0034BC  0E2B               	movlw	43
 11383  0034BE  6E14               	movwf	lcd_send@value^0,c
 11384  0034C0  0E00               	movlw	0
 11385  0034C2  EC92  F01C         	call	_lcd_send
 11386                           
 11387                           ;lib_ili9341.c: 161:     lcd_send(1, x >> 8);
 11388  0034C6  5017               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 11389  0034C8  6E14               	movwf	lcd_send@value^0,c
 11390  0034CA  0E01               	movlw	1
 11391  0034CC  EC92  F01C         	call	_lcd_send
 11392                           
 11393                           ;lib_ili9341.c: 162:     lcd_send(1, x & 0xFF);
 11394  0034D0  C016  F014         	movff	lcd_set_cursor_x@x,lcd_send@value
 11395  0034D4  0E01               	movlw	1
 11396  0034D6  EC92  F01C         	call	_lcd_send
 11397                           
 11398                           ;lib_ili9341.c: 163:     lcd_send(0, 0x2c);
 11399  0034DA  0E2C               	movlw	44
 11400  0034DC  6E14               	movwf	lcd_send@value^0,c
 11401  0034DE  0E00               	movlw	0
 11402  0034E0  EC92  F01C         	call	_lcd_send
 11403  0034E4                     
 11404                           ;lib_ili9341.c: 165:     return 0;
 11405  0034E4  0E00               	movlw	0
 11406  0034E6                     l271:
 11407  0034E6  0012               	return		;funcret
 11408  0034E8                     __end_of_lcd_set_cursor_x:
 11409                           	opt callstack 0
 11410                           
 11411 ;; *************** function _lcd_draw_pixel *****************
 11412 ;; Defined at:
 11413 ;;		line 183 in file "lib_ili9341.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  color           2   21[COMRAM] unsigned short 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;		None
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1    wreg      unsigned char 
 11420 ;; Registers used:
 11421 ;;		wreg, status,2, cstack
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11431 ;;Total ram usage:        2 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:    7
 11434 ;; This function calls:
 11435 ;;		_lcd_send
 11436 ;; This function is called by:
 11437 ;;		_lcd_fill
 11438 ;;		_lcd_draw_pixel_at
 11439 ;;		_lcd_draw_char
 11440 ;;		_lcd_fill_rect
 11441 ;; This function uses a non-reentrant model
 11442 ;;
 11443                           
 11444                           	psect	text40
 11445  003954                     __ptext40:
 11446                           	opt callstack 0
 11447  003954                     _lcd_draw_pixel:
 11448                           	opt callstack 21
 11449  003954                     
 11450                           ;lib_ili9341.c: 183: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 184: {;lib_il
      +                          i9341.c: 185:     lcd_send(1, color >> 8);
 11451  003954  5017               	movf	(lcd_draw_pixel@color+1)^0,w,c
 11452  003956  6E14               	movwf	lcd_send@value^0,c
 11453  003958  0E01               	movlw	1
 11454  00395A  EC92  F01C         	call	_lcd_send
 11455                           
 11456                           ;lib_ili9341.c: 186:     lcd_send(1, color & 0xFF);
 11457  00395E  C016  F014         	movff	lcd_draw_pixel@color,lcd_send@value
 11458  003962  0E01               	movlw	1
 11459  003964  EC92  F01C         	call	_lcd_send
 11460  003968  0012               	return		;funcret
 11461  00396A                     __end_of_lcd_draw_pixel:
 11462                           	opt callstack 0
 11463                           
 11464 ;; *************** function _lcd_send *****************
 11465 ;; Defined at:
 11466 ;;		line 132 in file "lib_ili9341.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  dc              1    wreg     _Bool 
 11469 ;;  value           1   19[COMRAM] unsigned char 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;  dc              1   20[COMRAM] _Bool 
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, status,2, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11481 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;Total ram usage:        2 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:    6
 11488 ;; This function calls:
 11489 ;;		_SPI_ExchangeByte
 11490 ;; This function is called by:
 11491 ;;		_lcd_init
 11492 ;;		_lcd_set_cursor_x
 11493 ;;		_lcd_set_cursor_y
 11494 ;;		_lcd_draw_pixel
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           	psect	text41
 11499  003924                     __ptext41:
 11500                           	opt callstack 0
 11501  003924                     _lcd_send:
 11502                           	opt callstack 23
 11503                           
 11504                           ;incstack = 0
 11505                           ;lcd_send@dc stored from wreg
 11506  003924  6E15               	movwf	lcd_send@dc^0,c
 11507  003926                     
 11508                           ;lib_ili9341.c: 132: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 133: {;lib_il
      +                          i9341.c: 134:     LATEbits.LE0 = dc;
 11509  003926  B015               	btfsc	lcd_send@dc^0,0,c
 11510  003928  D002               	bra	u5005
 11511  00392A  908D               	bcf	141,0,c	;volatile
 11512  00392C  D001               	bra	u5006
 11513  00392E                     u5005:
 11514  00392E  808D               	bsf	141,0,c	;volatile
 11515  003930                     u5006:
 11516  003930                     
 11517                           ;lib_ili9341.c: 136:     LATEbits.LE1 = 0;
 11518  003930  928D               	bcf	141,1,c	;volatile
 11519  003932                     
 11520                           ;lib_ili9341.c: 138:     SPI_ExchangeByte(value);
 11521  003932  5014               	movf	lcd_send@value^0,w,c
 11522  003934  EC85  F01C         	call	_SPI_ExchangeByte
 11523  003938                     
 11524                           ;lib_ili9341.c: 139:     LATEbits.LE1 = 1;
 11525  003938  828D               	bsf	141,1,c	;volatile
 11526  00393A  0012               	return		;funcret
 11527  00393C                     __end_of_lcd_send:
 11528                           	opt callstack 0
 11529                           
 11530 ;; *************** function _SPI_ExchangeByte *****************
 11531 ;; Defined at:
 11532 ;;		line 92 in file "mcc_generated_files/spi.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  data            1    wreg     unsigned char 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  data            1   18[COMRAM] unsigned char 
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      unsigned char 
 11539 ;; Registers used:
 11540 ;;		wreg, status,2
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11550 ;;Total ram usage:        1 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:    5
 11553 ;; This function calls:
 11554 ;;		Nothing
 11555 ;; This function is called by:
 11556 ;;		_lcd_send
 11557 ;;		_SPI_WriteBlock
 11558 ;;		_SPI_ReadBlock
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text42
 11563  00390A                     __ptext42:
 11564                           	opt callstack 0
 11565  00390A                     _SPI_ExchangeByte:
 11566                           	opt callstack 23
 11567                           
 11568                           ;incstack = 0
 11569                           ;SPI_ExchangeByte@data stored from wreg
 11570  00390A  6E13               	movwf	SPI_ExchangeByte@data^0,c
 11571  00390C                     
 11572                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 11573  00390C  C013  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 11574  003910                     l138:
 11575  003910  A69E               	btfss	158,3,c	;volatile
 11576  003912  EF8D  F01C         	goto	u4631
 11577  003916  EF8F  F01C         	goto	u4630
 11578  00391A                     u4631:
 11579  00391A  EF88  F01C         	goto	l138
 11580  00391E                     u4630:
 11581  00391E                     
 11582                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 11583  00391E  969E               	bcf	158,3,c	;volatile
 11584                           
 11585                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 11586  003920  50C9               	movf	201,w,c	;volatile
 11587  003922  0012               	return		;funcret
 11588  003924                     __end_of_SPI_ExchangeByte:
 11589                           	opt callstack 0
 11590                           
 11591 ;; *************** function _SYSTEM_Initialize *****************
 11592 ;; Defined at:
 11593 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;		None
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;		None
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg, status,2, status,0, cstack
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11611 ;;Total ram usage:        0 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    7
 11614 ;; This function calls:
 11615 ;;		_ADC_Initialize
 11616 ;;		_INTERRUPT_Initialize
 11617 ;;		_OSCILLATOR_Initialize
 11618 ;;		_PIN_MANAGER_Initialize
 11619 ;;		_SPI_Initialize
 11620 ;; This function is called by:
 11621 ;;		_main
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text43
 11626  00396A                     __ptext43:
 11627                           	opt callstack 0
 11628  00396A                     _SYSTEM_Initialize:
 11629                           	opt callstack 23
 11630  00396A                     
 11631                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 11632  00396A  ECEA  F01C         	call	_INTERRUPT_Initialize	;wreg free
 11633  00396E                     
 11634                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 11635  00396E  ECCA  F01C         	call	_SPI_Initialize	;wreg free
 11636  003972                     
 11637                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 11638  003972  EC74  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
 11639  003976                     
 11640                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 11641  003976  ECD3  F01C         	call	_OSCILLATOR_Initialize	;wreg free
 11642  00397A                     
 11643                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 11644  00397A  EC73  F01C         	call	_ADC_Initialize	;wreg free
 11645  00397E  0012               	return		;funcret
 11646  003980                     __end_of_SYSTEM_Initialize:
 11647                           	opt callstack 0
 11648                           
 11649 ;; *************** function _SPI_Initialize *****************
 11650 ;; Defined at:
 11651 ;;		line 62 in file "mcc_generated_files/spi.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;		None
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;		None
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1    wreg      void 
 11658 ;; Registers used:
 11659 ;;		wreg, status,2
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11669 ;;Total ram usage:        0 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:    5
 11672 ;; This function calls:
 11673 ;;		Nothing
 11674 ;; This function is called by:
 11675 ;;		_SYSTEM_Initialize
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           	psect	text44
 11680  003994                     __ptext44:
 11681                           	opt callstack 0
 11682  003994                     _SPI_Initialize:
 11683                           	opt callstack 24
 11684  003994                     
 11685                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 11686  003994  0E40               	movlw	64
 11687  003996  6EC7               	movwf	199,c	;volatile
 11688                           
 11689                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 11690  003998  0E00               	movlw	0
 11691  00399A  6EC6               	movwf	198,c	;volatile
 11692                           
 11693                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 11694  00399C  0E01               	movlw	1
 11695  00399E  6EC8               	movwf	200,c	;volatile
 11696  0039A0                     
 11697                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 11698  0039A0  9694               	bcf	148,3,c	;volatile
 11699  0039A2                     
 11700                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 11701  0039A2  9AC6               	bcf	198,5,c	;volatile
 11702  0039A4  0012               	return		;funcret
 11703  0039A6                     __end_of_SPI_Initialize:
 11704                           	opt callstack 0
 11705                           
 11706 ;; *************** function _PIN_MANAGER_Initialize *****************
 11707 ;; Defined at:
 11708 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;		None
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;		None
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, status,0, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11726 ;;Total ram usage:        0 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:    6
 11729 ;; This function calls:
 11730 ;;		_IOCB4_SetInterruptHandler
 11731 ;; This function is called by:
 11732 ;;		_SYSTEM_Initialize
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text45
 11737  0034E8                     __ptext45:
 11738                           	opt callstack 0
 11739  0034E8                     _PIN_MANAGER_Initialize:
 11740                           	opt callstack 23
 11741  0034E8                     
 11742                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 11743  0034E8  0E00               	movlw	0
 11744  0034EA  6E8D               	movwf	141,c	;volatile
 11745                           
 11746                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11747  0034EC  0E00               	movlw	0
 11748  0034EE  6E8C               	movwf	140,c	;volatile
 11749                           
 11750                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11751  0034F0  0E00               	movlw	0
 11752  0034F2  6E89               	movwf	137,c	;volatile
 11753                           
 11754                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 11755  0034F4  0E00               	movlw	0
 11756  0034F6  6E8A               	movwf	138,c	;volatile
 11757                           
 11758                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 11759  0034F8  0E00               	movlw	0
 11760  0034FA  6E8B               	movwf	139,c	;volatile
 11761                           
 11762                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 11763  0034FC  0E04               	movlw	4
 11764  0034FE  6E96               	movwf	150,c	;volatile
 11765                           
 11766                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xCF;
 11767  003500  0ECF               	movlw	207
 11768  003502  6E92               	movwf	146,c	;volatile
 11769  003504                     
 11770                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 11771  003504  6893               	setf	147,c	;volatile
 11772                           
 11773                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 11774  003506  0ED7               	movlw	215
 11775  003508  6E94               	movwf	148,c	;volatile
 11776  00350A                     
 11777                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 11778  00350A  6895               	setf	149,c	;volatile
 11779                           
 11780                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x8E;
 11781  00350C  0E8E               	movlw	142
 11782  00350E  010F               	movlb	15	; () banked
 11783  003510  6F5D               	movwf	93,b	;volatile
 11784                           
 11785                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 11786  003512  0E7D               	movlw	125
 11787  003514  6F5C               	movwf	92,b	;volatile
 11788                           
 11789                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 11790  003516  0E00               	movlw	0
 11791  003518  6F5B               	movwf	91,b	;volatile
 11792  00351A                     
 11793                           ; BSR set to: 15
 11794                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 11795  00351A  8EF1               	bsf	241,7,c	;volatile
 11796  00351C                     
 11797                           ; BSR set to: 15
 11798                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 11799  00351C  895A               	bsf	90,4,b	;volatile
 11800  00351E                     
 11801                           ; BSR set to: 15
 11802                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 11803  00351E  0EDA               	movlw	low _IOCB4_DefaultInterruptHandler
 11804  003520  6E13               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 11805  003522  0E39               	movlw	high _IOCB4_DefaultInterruptHandler
 11806  003524  6E14               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 11807  003526  ECDC  F01C         	call	_IOCB4_SetInterruptHandler	;wreg free
 11808  00352A                     
 11809                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 11810  00352A  86F2               	bsf	242,3,c	;volatile
 11811  00352C  0012               	return		;funcret
 11812  00352E                     __end_of_PIN_MANAGER_Initialize:
 11813                           	opt callstack 0
 11814                           
 11815 ;; *************** function _IOCB4_SetInterruptHandler *****************
 11816 ;; Defined at:
 11817 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 11818 ;; Parameters:    Size  Location     Type
 11819 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
 11820 ;;		 -> acende_led(1), IOCB4_DefaultInterruptHandler(1), 
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;		None
 11823 ;; Return value:  Size  Location     Type
 11824 ;;                  1    wreg      void 
 11825 ;; Registers used:
 11826 ;;		wreg, status,2, status,0
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11836 ;;Total ram usage:        2 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; Hardware stack levels required when called:    5
 11839 ;; This function calls:
 11840 ;;		Nothing
 11841 ;; This function is called by:
 11842 ;;		_PIN_MANAGER_Initialize
 11843 ;;		_main
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text46
 11848  0039B8                     __ptext46:
 11849                           	opt callstack 0
 11850  0039B8                     _IOCB4_SetInterruptHandler:
 11851                           	opt callstack 23
 11852  0039B8                     
 11853                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 11854  0039B8  C013  F04B         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 11855  0039BC  C014  F04C         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 11856  0039C0  0012               	return		;funcret
 11857  0039C2                     __end_of_IOCB4_SetInterruptHandler:
 11858                           	opt callstack 0
 11859                           
 11860 ;; *************** function _OSCILLATOR_Initialize *****************
 11861 ;; Defined at:
 11862 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11863 ;; Parameters:    Size  Location     Type
 11864 ;;		None
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;		None
 11867 ;; Return value:  Size  Location     Type
 11868 ;;                  1    wreg      void 
 11869 ;; Registers used:
 11870 ;;		wreg, status,2
 11871 ;; Tracked objects:
 11872 ;;		On entry : 0/0
 11873 ;;		On exit  : 0/0
 11874 ;;		Unchanged: 0/0
 11875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11880 ;;Total ram usage:        0 bytes
 11881 ;; Hardware stack levels used:    1
 11882 ;; Hardware stack levels required when called:    5
 11883 ;; This function calls:
 11884 ;;		Nothing
 11885 ;; This function is called by:
 11886 ;;		_SYSTEM_Initialize
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text47
 11891  0039A6                     __ptext47:
 11892                           	opt callstack 0
 11893  0039A6                     _OSCILLATOR_Initialize:
 11894                           	opt callstack 24
 11895  0039A6                     
 11896                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x62;
 11897  0039A6  0E62               	movlw	98
 11898  0039A8  6ED3               	movwf	211,c	;volatile
 11899                           
 11900                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
 11901  0039AA  0E00               	movlw	0
 11902  0039AC  6ED2               	movwf	210,c	;volatile
 11903                           
 11904                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
 11905  0039AE  0E00               	movlw	0
 11906  0039B0  6E9B               	movwf	155,c	;volatile
 11907                           
 11908                           ;mcc_generated_files/mcc.c: 69:     REFOCON = 0x00;
 11909  0039B2  0E00               	movlw	0
 11910  0039B4  6E9A               	movwf	154,c	;volatile
 11911  0039B6  0012               	return		;funcret
 11912  0039B8                     __end_of_OSCILLATOR_Initialize:
 11913                           	opt callstack 0
 11914                           
 11915 ;; *************** function _INTERRUPT_Initialize *****************
 11916 ;; Defined at:
 11917 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;		None
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;		None
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  1    wreg      void 
 11924 ;; Registers used:
 11925 ;;		None
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11935 ;;Total ram usage:        0 bytes
 11936 ;; Hardware stack levels used:    1
 11937 ;; Hardware stack levels required when called:    5
 11938 ;; This function calls:
 11939 ;;		Nothing
 11940 ;; This function is called by:
 11941 ;;		_SYSTEM_Initialize
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           	psect	text48
 11946  0039D4                     __ptext48:
 11947                           	opt callstack 0
 11948  0039D4                     _INTERRUPT_Initialize:
 11949                           	opt callstack 24
 11950  0039D4                     
 11951                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 11952  0039D4  9ED0               	bcf	208,7,c	;volatile
 11953  0039D6  0012               	return		;funcret
 11954  0039D8                     __end_of_INTERRUPT_Initialize:
 11955                           	opt callstack 0
 11956                           
 11957 ;; *************** function _ADC_Initialize *****************
 11958 ;; Defined at:
 11959 ;;		line 62 in file "mcc_generated_files/adc.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;		None
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;		None
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  1    wreg      void 
 11966 ;; Registers used:
 11967 ;;		wreg, status,2, status,0, cstack
 11968 ;; Tracked objects:
 11969 ;;		On entry : 0/0
 11970 ;;		On exit  : 0/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11977 ;;Total ram usage:        0 bytes
 11978 ;; Hardware stack levels used:    1
 11979 ;; Hardware stack levels required when called:    6
 11980 ;; This function calls:
 11981 ;;		_ADC_SetInterruptHandler
 11982 ;; This function is called by:
 11983 ;;		_SYSTEM_Initialize
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text49
 11988  0038E6                     __ptext49:
 11989                           	opt callstack 0
 11990  0038E6                     _ADC_Initialize:
 11991                           	opt callstack 23
 11992  0038E6                     
 11993                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 11994  0038E6  0E01               	movlw	1
 11995  0038E8  6EC2               	movwf	194,c	;volatile
 11996                           
 11997                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
 11998  0038EA  0E00               	movlw	0
 11999  0038EC  6EC1               	movwf	193,c	;volatile
 12000                           
 12001                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xA1;
 12002  0038EE  0EA1               	movlw	161
 12003  0038F0  6EC0               	movwf	192,c	;volatile
 12004                           
 12005                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 12006  0038F2  0E00               	movlw	0
 12007  0038F4  6EC4               	movwf	196,c	;volatile
 12008                           
 12009                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 12010  0038F6  0E00               	movlw	0
 12011  0038F8  6EC3               	movwf	195,c	;volatile
 12012  0038FA                     
 12013                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
 12014  0038FA  8C9D               	bsf	157,6,c	;volatile
 12015  0038FC                     
 12016                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 12017  0038FC  0EDC               	movlw	low _ADC_DefaultInterruptHandler
 12018  0038FE  6E13               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
 12019  003900  0E39               	movlw	high _ADC_DefaultInterruptHandler
 12020  003902  6E14               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
 12021  003904  ECE1  F01C         	call	_ADC_SetInterruptHandler	;wreg free
 12022  003908  0012               	return		;funcret
 12023  00390A                     __end_of_ADC_Initialize:
 12024                           	opt callstack 0
 12025                           
 12026 ;; *************** function _ADC_SetInterruptHandler *****************
 12027 ;; Defined at:
 12028 ;;		line 150 in file "mcc_generated_files/adc.c"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
 12031 ;;		 -> ADC_DefaultInterruptHandler(1), ADC_POT(1), 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;		None
 12034 ;; Return value:  Size  Location     Type
 12035 ;;                  1    wreg      void 
 12036 ;; Registers used:
 12037 ;;		wreg, status,2, status,0
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12047 ;;Total ram usage:        2 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:    5
 12050 ;; This function calls:
 12051 ;;		Nothing
 12052 ;; This function is called by:
 12053 ;;		_main
 12054 ;;		_ADC_Initialize
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           	psect	text50
 12059  0039C2                     __ptext50:
 12060                           	opt callstack 0
 12061  0039C2                     _ADC_SetInterruptHandler:
 12062                           	opt callstack 23
 12063  0039C2                     
 12064                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
 12065  0039C2  C013  F049         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
 12066  0039C6  C014  F04A         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
 12067  0039CA  0012               	return		;funcret
 12068  0039CC                     __end_of_ADC_SetInterruptHandler:
 12069                           	opt callstack 0
 12070                           
 12071 ;; *************** function _SPI_Open *****************
 12072 ;; Defined at:
 12073 ;;		line 72 in file "mcc_generated_files/spi.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  spiUniqueCon    1    wreg     enum E353
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;  spiUniqueCon    1   19[COMRAM] enum E353
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      _Bool 
 12080 ;; Registers used:
 12081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12091 ;;Total ram usage:        2 bytes
 12092 ;; Hardware stack levels used:    1
 12093 ;; Hardware stack levels required when called:    5
 12094 ;; This function calls:
 12095 ;;		Nothing
 12096 ;; This function is called by:
 12097 ;;		_main
 12098 ;; This function uses a non-reentrant model
 12099 ;;
 12100                           
 12101                           	psect	text51
 12102  00316A                     __ptext51:
 12103                           	opt callstack 0
 12104  00316A                     _SPI_Open:
 12105                           	opt callstack 25
 12106                           
 12107                           ;incstack = 0
 12108                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 12109  00316A  6E14               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 12110  00316C                     
 12111                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 12112  00316C  BAC6               	btfsc	198,5,c	;volatile
 12113  00316E  EFBB  F018         	goto	u4251
 12114  003172  EFBD  F018         	goto	u4250
 12115  003176                     u4251:
 12116  003176  EF0C  F019         	goto	l132
 12117  00317A                     u4250:
 12118  00317A                     
 12119                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 12120  00317A  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12121  00317C  0D04               	mullw	4
 12122  00317E  0E01               	movlw	1
 12123  003180  26F3               	addwf	243,f,c
 12124  003182  0E00               	movlw	0
 12125  003184  22F4               	addwfc	244,f,c
 12126  003186  0E8D               	movlw	low _spi_configuration
 12127  003188  24F3               	addwf	243,w,c
 12128  00318A  6EF6               	movwf	tblptrl,c
 12129  00318C  0EFF               	movlw	high _spi_configuration
 12130  00318E  20F4               	addwfc	244,w,c
 12131  003190  6EF7               	movwf	tblptrh,c
 12132  003192                     	if	1	;There are 3 active tblptr bytes
 12133  003192  6AF8               	clrf	tblptru,c
 12134  003194  0E00               	movlw	low (__mediumconst shr (0+16))
 12135  003196  22F8               	addwfc	tblptru,f,c
 12136  003198                     	endif
 12137  003198  0008               	tblrd		*
 12138  00319A  CFF5 FFC7          	movff	tablat,4039	;volatile
 12139                           
 12140                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 12141  00319E  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12142  0031A0  0D04               	mullw	4
 12143  0031A2  0E8D               	movlw	low _spi_configuration
 12144  0031A4  24F3               	addwf	243,w,c
 12145  0031A6  6EF6               	movwf	tblptrl,c
 12146  0031A8  0EFF               	movlw	high _spi_configuration
 12147  0031AA  20F4               	addwfc	244,w,c
 12148  0031AC  6EF7               	movwf	tblptrh,c
 12149  0031AE                     	if	1	;There are 3 active tblptr bytes
 12150  0031AE  6AF8               	clrf	tblptru,c
 12151  0031B0  0E00               	movlw	low (__mediumconst shr (0+16))
 12152  0031B2  22F8               	addwfc	tblptru,f,c
 12153  0031B4                     	endif
 12154  0031B4  0008               	tblrd		*
 12155  0031B6  CFF5 FFC6          	movff	tablat,4038	;volatile
 12156  0031BA                     
 12157                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 12158  0031BA  0E00               	movlw	0
 12159  0031BC  6EC5               	movwf	197,c	;volatile
 12160  0031BE                     
 12161                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 12162  0031BE  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12163  0031C0  0D04               	mullw	4
 12164  0031C2  0E02               	movlw	2
 12165  0031C4  26F3               	addwf	243,f,c
 12166  0031C6  0E00               	movlw	0
 12167  0031C8  22F4               	addwfc	244,f,c
 12168  0031CA  0E8D               	movlw	low _spi_configuration
 12169  0031CC  24F3               	addwf	243,w,c
 12170  0031CE  6EF6               	movwf	tblptrl,c
 12171  0031D0  0EFF               	movlw	high _spi_configuration
 12172  0031D2  20F4               	addwfc	244,w,c
 12173  0031D4  6EF7               	movwf	tblptrh,c
 12174  0031D6                     	if	1	;There are 3 active tblptr bytes
 12175  0031D6  6AF8               	clrf	tblptru,c
 12176  0031D8  0E00               	movlw	low (__mediumconst shr (0+16))
 12177  0031DA  22F8               	addwfc	tblptru,f,c
 12178  0031DC                     	endif
 12179  0031DC  0008               	tblrd		*
 12180  0031DE  CFF5 FFC8          	movff	tablat,4040	;volatile
 12181  0031E2                     
 12182                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 12183  0031E2  5014               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12184  0031E4  0D04               	mullw	4
 12185  0031E6  0E03               	movlw	3
 12186  0031E8  26F3               	addwf	243,f,c
 12187  0031EA  0E00               	movlw	0
 12188  0031EC  22F4               	addwfc	244,f,c
 12189  0031EE  0E8D               	movlw	low _spi_configuration
 12190  0031F0  24F3               	addwf	243,w,c
 12191  0031F2  6EF6               	movwf	tblptrl,c
 12192  0031F4  0EFF               	movlw	high _spi_configuration
 12193  0031F6  20F4               	addwfc	244,w,c
 12194  0031F8  6EF7               	movwf	tblptrh,c
 12195  0031FA                     	if	1	;There are 3 active tblptr bytes
 12196  0031FA  6AF8               	clrf	tblptru,c
 12197  0031FC  0E00               	movlw	low (__mediumconst shr (0+16))
 12198  0031FE  22F8               	addwfc	tblptru,f,c
 12199  003200                     	endif
 12200  003200  0008               	tblrd		*
 12201  003202  CFF5 F013          	movff	tablat,??_SPI_Open
 12202  003206  4613               	rlncf	??_SPI_Open^0,f,c
 12203  003208  4613               	rlncf	??_SPI_Open^0,f,c
 12204  00320A  4613               	rlncf	??_SPI_Open^0,f,c
 12205  00320C  5094               	movf	148,w,c	;volatile
 12206  00320E  1813               	xorwf	??_SPI_Open^0,w,c
 12207  003210  0BF7               	andlw	-9
 12208  003212  1813               	xorwf	??_SPI_Open^0,w,c
 12209  003214  6E94               	movwf	148,c	;volatile
 12210  003216                     
 12211                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 12212  003216  8AC6               	bsf	198,5,c	;volatile
 12213  003218                     l132:
 12214  003218  0012               	return		;funcret
 12215  00321A                     __end_of_SPI_Open:
 12216                           	opt callstack 0
 12217                           
 12218 ;; *************** function _INTERRUPT_InterruptManager *****************
 12219 ;; Defined at:
 12220 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;		None
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;		None
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  1    wreg      void 
 12227 ;; Registers used:
 12228 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12229 ;; Tracked objects:
 12230 ;;		On entry : 0/0
 12231 ;;		On exit  : 0/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12238 ;;Total ram usage:        4 bytes
 12239 ;; Hardware stack levels used:    1
 12240 ;; Hardware stack levels required when called:    4
 12241 ;; This function calls:
 12242 ;;		_ADC_ISR
 12243 ;;		_PIN_MANAGER_IOC
 12244 ;; This function is called by:
 12245 ;;		Interrupt level 2
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           	psect	intcode
 12250  000008                     __pintcode:
 12251                           	opt callstack 0
 12252  000008                     _INTERRUPT_InterruptManager:
 12253                           	opt callstack 17
 12254                           
 12255                           ;incstack = 0
 12256  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12257  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
 12258  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12259  000012  CFF3 F011          	movff	prodl,??_INTERRUPT_InterruptManager+2
 12260  000016  CFF4 F012          	movff	prodh,??_INTERRUPT_InterruptManager+3
 12261  00001A                     
 12262                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 12263  00001A  A6F2               	btfss	242,3,c	;volatile
 12264  00001C  EF12  F000         	goto	i2u438_41
 12265  000020  EF14  F000         	goto	i2u438_40
 12266  000024                     i2u438_41:
 12267  000024  EF1F  F000         	goto	i2l101
 12268  000028                     i2u438_40:
 12269  000028  A0F2               	btfss	242,0,c	;volatile
 12270  00002A  EF19  F000         	goto	i2u439_41
 12271  00002E  EF1B  F000         	goto	i2u439_40
 12272  000032                     i2u439_41:
 12273  000032  EF1F  F000         	goto	i2l101
 12274  000036                     i2u439_40:
 12275  000036                     
 12276                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 12277  000036  EC9E  F01C         	call	_PIN_MANAGER_IOC	;wreg free
 12278                           
 12279                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 12280  00003A  EF38  F000         	goto	i2l107
 12281  00003E                     i2l101:
 12282  00003E  ACF2               	btfss	242,6,c	;volatile
 12283  000040  EF24  F000         	goto	i2u440_41
 12284  000044  EF26  F000         	goto	i2u440_40
 12285  000048                     i2u440_41:
 12286  000048  EF38  F000         	goto	i2l107
 12287  00004C                     i2u440_40:
 12288  00004C                     
 12289                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12290  00004C  AC9D               	btfss	157,6,c	;volatile
 12291  00004E  EF2B  F000         	goto	i2u441_41
 12292  000052  EF2D  F000         	goto	i2u441_40
 12293  000056                     i2u441_41:
 12294  000056  EF38  F000         	goto	i2l106
 12295  00005A                     i2u441_40:
 12296  00005A  AC9E               	btfss	158,6,c	;volatile
 12297  00005C  EF32  F000         	goto	i2u442_41
 12298  000060  EF34  F000         	goto	i2u442_40
 12299  000064                     i2u442_41:
 12300  000064  EF38  F000         	goto	i2l106
 12301  000068                     i2u442_40:
 12302  000068                     
 12303                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             ADC_ISR();
 12304  000068  EC0A  F01C         	call	_ADC_ISR	;wreg free
 12305                           
 12306                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 12307  00006C  EF38  F000         	goto	i2l107
 12308  000070                     i2l106:
 12309  000070                     i2l107:
 12310  000070  C012  FFF4         	movff	??_INTERRUPT_InterruptManager+3,prodh
 12311  000074  C011  FFF3         	movff	??_INTERRUPT_InterruptManager+2,prodl
 12312  000078  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12313  00007C  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12314  000080  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12315  000082  0011               	retfie		f
 12316  000084                     __end_of_INTERRUPT_InterruptManager:
 12317                           	opt callstack 0
 12318                           
 12319 ;; *************** function _PIN_MANAGER_IOC *****************
 12320 ;; Defined at:
 12321 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;		None
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;		None
 12326 ;; Return value:  Size  Location     Type
 12327 ;;                  1    wreg      void 
 12328 ;; Registers used:
 12329 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12339 ;;Total ram usage:        0 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:    3
 12342 ;; This function calls:
 12343 ;;		_IOCB4_ISR
 12344 ;; This function is called by:
 12345 ;;		_INTERRUPT_InterruptManager
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           	psect	text53
 12350  00393C                     __ptext53:
 12351                           	opt callstack 0
 12352  00393C                     _PIN_MANAGER_IOC:
 12353                           	opt callstack 17
 12354  00393C                     
 12355                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 12356  00393C  010F               	movlb	15	; () banked
 12357  00393E  A95A               	btfss	90,4,b	;volatile
 12358  003940  EFA4  F01C         	goto	i2u422_41
 12359  003944  EFA6  F01C         	goto	i2u422_40
 12360  003948                     i2u422_41:
 12361  003948  EFA8  F01C         	goto	i2l4295
 12362  00394C                     i2u422_40:
 12363  00394C                     
 12364                           ; BSR set to: 15
 12365                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 12366  00394C  EC21  F01C         	call	_IOCB4_ISR	;wreg free
 12367  003950                     i2l4295:
 12368                           
 12369                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 12370  003950  90F2               	bcf	242,0,c	;volatile
 12371  003952  0012               	return		;funcret
 12372  003954                     __end_of_PIN_MANAGER_IOC:
 12373                           	opt callstack 0
 12374                           
 12375 ;; *************** function _IOCB4_ISR *****************
 12376 ;; Defined at:
 12377 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 12378 ;; Parameters:    Size  Location     Type
 12379 ;;		None
 12380 ;; Auto vars:     Size  Location     Type
 12381 ;;		None
 12382 ;; Return value:  Size  Location     Type
 12383 ;;                  1    wreg      void 
 12384 ;; Registers used:
 12385 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12386 ;; Tracked objects:
 12387 ;;		On entry : 0/0
 12388 ;;		On exit  : 0/0
 12389 ;;		Unchanged: 0/0
 12390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12395 ;;Total ram usage:        0 bytes
 12396 ;; Hardware stack levels used:    1
 12397 ;; Hardware stack levels required when called:    2
 12398 ;; This function calls:
 12399 ;;		Absolute function
 12400 ;;		_IOCB4_DefaultInterruptHandler
 12401 ;;		_acende_led
 12402 ;; This function is called by:
 12403 ;;		_PIN_MANAGER_IOC
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407                           	psect	text54
 12408  003842                     __ptext54:
 12409                           	opt callstack 0
 12410  003842                     _IOCB4_ISR:
 12411                           	opt callstack 17
 12412  003842                     
 12413                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 12414  003842  504B               	movf	_IOCB4_InterruptHandler^0,w,c
 12415  003844  104C               	iorwf	(_IOCB4_InterruptHandler+1)^0,w,c
 12416  003846  B4D8               	btfsc	status,2,c
 12417  003848  EF28  F01C         	goto	i2u405_41
 12418  00384C  EF2A  F01C         	goto	i2u405_40
 12419  003850                     i2u405_41:
 12420  003850  EF36  F01C         	goto	i2l51
 12421  003854                     i2u405_40:
 12422  003854                     
 12423                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 12424  003854  D802               	call	i2u406_48
 12425  003856  EF36  F01C         	goto	i2u406_49
 12426  00385A                     i2u406_48:
 12427  00385A  0005               	push	
 12428  00385C  6EFA               	movwf	pclath,c
 12429  00385E  504B               	movf	_IOCB4_InterruptHandler^0,w,c
 12430  003860  6EFD               	movwf	tosl,c
 12431  003862  504C               	movf	(_IOCB4_InterruptHandler+1)^0,w,c
 12432  003864  6EFE               	movwf	tosh,c
 12433  003866  6AFF               	clrf	tosu,c
 12434  003868  50FA               	movf	pclath,w,c
 12435  00386A  0012               	return		;indir
 12436  00386C                     i2u406_49:
 12437  00386C                     i2l51:
 12438  00386C  0012               	return		;funcret
 12439  00386E                     __end_of_IOCB4_ISR:
 12440                           	opt callstack 0
 12441                           
 12442 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 12443 ;; Defined at:
 12444 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;		None
 12447 ;; Auto vars:     Size  Location     Type
 12448 ;;		None
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  1    wreg      void 
 12451 ;; Registers used:
 12452 ;;		None
 12453 ;; Tracked objects:
 12454 ;;		On entry : 0/0
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12462 ;;Total ram usage:        0 bytes
 12463 ;; Hardware stack levels used:    1
 12464 ;; This function calls:
 12465 ;;		Nothing
 12466 ;; This function is called by:
 12467 ;;		_PIN_MANAGER_Initialize
 12468 ;;		_IOCB4_ISR
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text55
 12473  0039DA                     __ptext55:
 12474                           	opt callstack 0
 12475  0039DA                     _IOCB4_DefaultInterruptHandler:
 12476                           	opt callstack 18
 12477  0039DA  0012               	return		;funcret
 12478  0039DC                     __end_of_IOCB4_DefaultInterruptHandler:
 12479                           	opt callstack 0
 12480                           
 12481 ;; *************** function _acende_led *****************
 12482 ;; Defined at:
 12483 ;;		line 21 in file "main.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;		None
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1    wreg      void 
 12490 ;; Registers used:
 12491 ;;		wreg, status,2, status,0, cstack
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12501 ;;Total ram usage:        1 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:    1
 12504 ;; This function calls:
 12505 ;;		_ADC_GetConversion
 12506 ;;		_ADC_GetConversionResult
 12507 ;; This function is called by:
 12508 ;;		_main
 12509 ;;		_IOCB4_ISR
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text56
 12514  00352E                     __ptext56:
 12515                           	opt callstack 0
 12516  00352E                     _acende_led:
 12517                           	opt callstack 17
 12518  00352E                     
 12519                           ;main.c: 22:     if (PORTBbits.RB4 == 0){
 12520  00352E  B881               	btfsc	129,4,c	;volatile
 12521  003530  EF9C  F01A         	goto	i2u394_41
 12522  003534  EF9E  F01A         	goto	i2u394_40
 12523  003538                     i2u394_41:
 12524  003538  EFB9  F01A         	goto	i2l208
 12525  00353C                     i2u394_40:
 12526  00353C  BA89               	btfsc	137,5,c	;volatile
 12527  00353E  EFA3  F01A         	goto	i2u395_41
 12528  003542  EFA6  F01A         	goto	i2u395_40
 12529  003546                     i2u395_41:
 12530  003546  0E01               	movlw	1
 12531  003548  EFA7  F01A         	goto	i2u395_46
 12532  00354C                     i2u395_40:
 12533  00354C  0E00               	movlw	0
 12534  00354E                     i2u395_46:
 12535  00354E  0AFF               	xorlw	255
 12536  003550  6E05               	movwf	??_acende_led^0,c
 12537  003552  3A05               	swapf	??_acende_led^0,f,c
 12538  003554  4605               	rlncf	??_acende_led^0,f,c
 12539  003556  5089               	movf	137,w,c	;volatile
 12540  003558  1805               	xorwf	??_acende_led^0,w,c
 12541  00355A  0BDF               	andlw	-33
 12542  00355C  1805               	xorwf	??_acende_led^0,w,c
 12543  00355E  6E89               	movwf	137,c	;volatile
 12544  003560                     
 12545                           ;main.c: 24:         ADC_GetConversion(POT);
 12546  003560  0E00               	movlw	0
 12547  003562  EC37  F01C         	call	_ADC_GetConversion
 12548  003566                     
 12549                           ;main.c: 25:         codigo_digital=ADC_GetConversionResult();
 12550  003566  ECC0  F01C         	call	_ADC_GetConversionResult	;wreg free
 12551  00356A  C001  F047         	movff	?_ADC_GetConversionResult,_codigo_digital
 12552  00356E  C002  F048         	movff	?_ADC_GetConversionResult+1,_codigo_digital+1
 12553  003572                     i2l208:
 12554  003572  0012               	return		;funcret
 12555  003574                     __end_of_acende_led:
 12556                           	opt callstack 0
 12557                           
 12558 ;; *************** function _ADC_GetConversionResult *****************
 12559 ;; Defined at:
 12560 ;;		line 107 in file "mcc_generated_files/adc.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;		None
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;		None
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  2    0[COMRAM] unsigned short 
 12567 ;; Registers used:
 12568 ;;		wreg, status,2, status,0
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12577 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12578 ;;Total ram usage:        4 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_acende_led
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text57
 12588  003980                     __ptext57:
 12589                           	opt callstack 0
 12590  003980                     _ADC_GetConversionResult:
 12591                           	opt callstack 17
 12592  003980                     
 12593                           ;mcc_generated_files/adc.c: 110:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12594  003980  50C4               	movf	196,w,c	;volatile
 12595  003982  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
 12596  003984  6A03               	clrf	??_ADC_GetConversionResult^0,c
 12597  003986  50C3               	movf	195,w,c	;volatile
 12598  003988  2403               	addwf	??_ADC_GetConversionResult^0,w,c
 12599  00398A  6E01               	movwf	?_ADC_GetConversionResult^0,c
 12600  00398C  0E00               	movlw	0
 12601  00398E  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
 12602  003990  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
 12603  003992  0012               	return		;funcret
 12604  003994                     __end_of_ADC_GetConversionResult:
 12605                           	opt callstack 0
 12606                           
 12607 ;; *************** function _ADC_GetConversion *****************
 12608 ;; Defined at:
 12609 ;;		line 113 in file "mcc_generated_files/adc.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;  channel         1    wreg     enum E12385
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  channel         1    1[COMRAM] enum E12385
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  2  174[None  ] unsigned short 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12627 ;;Total ram usage:        2 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_acende_led
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text58
 12637  00386E                     __ptext58:
 12638                           	opt callstack 0
 12639  00386E                     _ADC_GetConversion:
 12640                           	opt callstack 17
 12641                           
 12642                           ;incstack = 0
 12643                           ;ADC_GetConversion@channel stored from wreg
 12644  00386E  6E02               	movwf	ADC_GetConversion@channel^0,c
 12645  003870                     
 12646                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 12647  003870  C002  F001         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 12648  003874  4601               	rlncf	??_ADC_GetConversion^0,f,c
 12649  003876  4601               	rlncf	??_ADC_GetConversion^0,f,c
 12650  003878  50C2               	movf	194,w,c	;volatile
 12651  00387A  1801               	xorwf	??_ADC_GetConversion^0,w,c
 12652  00387C  0B83               	andlw	-125
 12653  00387E  1801               	xorwf	??_ADC_GetConversion^0,w,c
 12654  003880  6EC2               	movwf	194,c	;volatile
 12655  003882                     
 12656                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 12657  003882  80C2               	bsf	194,0,c	;volatile
 12658  003884                     
 12659                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 12660  003884  82C2               	bsf	194,1,c	;volatile
 12661  003886                     i2l399:
 12662                           
 12663                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 12664  003886  B2C2               	btfsc	194,1,c	;volatile
 12665  003888  EF48  F01C         	goto	i2u118_41
 12666  00388C  EF4A  F01C         	goto	i2u118_40
 12667  003890                     i2u118_41:
 12668  003890  EF43  F01C         	goto	i2l399
 12669  003894                     i2u118_40:
 12670  003894                     
 12671                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));;	R
      +                          eturn value of _ADC_GetConversion is never used
 12672  003894  50C4               	movf	196,w,c	;volatile
 12673  003896  50C3               	movf	195,w,c	;volatile
 12674  003898  0012               	return		;funcret
 12675  00389A                     __end_of_ADC_GetConversion:
 12676                           	opt callstack 0
 12677                           
 12678 ;; *************** function _ADC_ISR *****************
 12679 ;; Defined at:
 12680 ;;		line 139 in file "mcc_generated_files/adc.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;		None
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;		None
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  1    wreg      void 
 12687 ;; Registers used:
 12688 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12698 ;;Total ram usage:        0 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:    2
 12701 ;; This function calls:
 12702 ;;		Absolute function
 12703 ;;		_ADC_DefaultInterruptHandler
 12704 ;;		_ADC_POT
 12705 ;; This function is called by:
 12706 ;;		_INTERRUPT_InterruptManager
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text59
 12711  003814                     __ptext59:
 12712                           	opt callstack 0
 12713  003814                     _ADC_ISR:
 12714                           	opt callstack 18
 12715  003814                     
 12716                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
 12717  003814  9C9E               	bcf	158,6,c	;volatile
 12718  003816                     
 12719                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
 12720  003816  5049               	movf	_ADC_InterruptHandler^0,w,c
 12721  003818  104A               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
 12722  00381A  B4D8               	btfsc	status,2,c
 12723  00381C  EF12  F01C         	goto	i2u423_41
 12724  003820  EF14  F01C         	goto	i2u423_40
 12725  003824                     i2u423_41:
 12726  003824  EF20  F01C         	goto	i2l409
 12727  003828                     i2u423_40:
 12728  003828                     
 12729                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
 12730  003828  D802               	call	i2u424_48
 12731  00382A  EF20  F01C         	goto	i2u424_49
 12732  00382E                     i2u424_48:
 12733  00382E  0005               	push	
 12734  003830  6EFA               	movwf	pclath,c
 12735  003832  5049               	movf	_ADC_InterruptHandler^0,w,c
 12736  003834  6EFD               	movwf	tosl,c
 12737  003836  504A               	movf	(_ADC_InterruptHandler+1)^0,w,c
 12738  003838  6EFE               	movwf	tosh,c
 12739  00383A  6AFF               	clrf	tosu,c
 12740  00383C  50FA               	movf	pclath,w,c
 12741  00383E  0012               	return		;indir
 12742  003840                     i2u424_49:
 12743  003840                     i2l409:
 12744  003840  0012               	return		;funcret
 12745  003842                     __end_of_ADC_ISR:
 12746                           	opt callstack 0
 12747                           
 12748 ;; *************** function _ADC_DefaultInterruptHandler *****************
 12749 ;; Defined at:
 12750 ;;		line 154 in file "mcc_generated_files/adc.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;		None
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;		None
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      void 
 12757 ;; Registers used:
 12758 ;;		None
 12759 ;; Tracked objects:
 12760 ;;		On entry : 0/0
 12761 ;;		On exit  : 0/0
 12762 ;;		Unchanged: 0/0
 12763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12768 ;;Total ram usage:        0 bytes
 12769 ;; Hardware stack levels used:    1
 12770 ;; This function calls:
 12771 ;;		Nothing
 12772 ;; This function is called by:
 12773 ;;		_ADC_Initialize
 12774 ;;		_ADC_ISR
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778                           	psect	text60
 12779  0039DC                     __ptext60:
 12780                           	opt callstack 0
 12781  0039DC                     _ADC_DefaultInterruptHandler:
 12782                           	opt callstack 19
 12783  0039DC  0012               	return		;funcret
 12784  0039DE                     __end_of_ADC_DefaultInterruptHandler:
 12785                           	opt callstack 0
 12786                           
 12787 ;; *************** function _ADC_POT *****************
 12788 ;; Defined at:
 12789 ;;		line 30 in file "main.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;		None
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      void 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12807 ;;Total ram usage:        0 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    1
 12810 ;; This function calls:
 12811 ;;		___awdiv
 12812 ;;		i2___wmul
 12813 ;; This function is called by:
 12814 ;;		_main
 12815 ;;		_ADC_ISR
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           	psect	text61
 12820  0037B6                     __ptext61:
 12821                           	opt callstack 0
 12822  0037B6                     _ADC_POT:
 12823                           	opt callstack 18
 12824  0037B6                     
 12825                           ;main.c: 32:     percentagem = (4095/codigo_digital)*100 ;
 12826  0037B6  C047  F003         	movff	_codigo_digital,___awdiv@divisor
 12827  0037BA  C048  F004         	movff	_codigo_digital+1,___awdiv@divisor+1
 12828  0037BE  0E0F               	movlw	15
 12829  0037C0  6E02               	movwf	(___awdiv@dividend+1)^0,c
 12830  0037C2  6801               	setf	___awdiv@dividend^0,c
 12831  0037C4  ECF2  F017         	call	___awdiv	;wreg free
 12832  0037C8  C001  F009         	movff	?___awdiv,i2___wmul@multiplier
 12833  0037CC  C002  F00A         	movff	?___awdiv+1,i2___wmul@multiplier+1
 12834  0037D0  0E00               	movlw	0
 12835  0037D2  6E0C               	movwf	(i2___wmul@multiplicand+1)^0,c
 12836  0037D4  0E64               	movlw	100
 12837  0037D6  6E0B               	movwf	i2___wmul@multiplicand^0,c
 12838  0037D8  EC60  F01C         	call	i2___wmul	;wreg free
 12839  0037DC  C009  F0C9         	movff	?i2___wmul,_percentagem
 12840  0037E0  C00A  F0CA         	movff	?i2___wmul+1,_percentagem+1
 12841  0037E4  0012               	return		;funcret
 12842  0037E6                     __end_of_ADC_POT:
 12843                           	opt callstack 0
 12844                           
 12845 ;; *************** function i2___wmul *****************
 12846 ;; Defined at:
 12847 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;  multiplier      2    8[COMRAM] unsigned int 
 12850 ;;  multiplicand    2   10[COMRAM] unsigned int 
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;  __wmul          2   12[COMRAM] unsigned int 
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  2    8[COMRAM] unsigned int 
 12855 ;; Registers used:
 12856 ;;		wreg, status,2, status,0, prodl, prodh
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12866 ;;Total ram usage:        6 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; This function calls:
 12869 ;;		Nothing
 12870 ;; This function is called by:
 12871 ;;		_ADC_POT
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           	psect	text62
 12876  0038C0                     __ptext62:
 12877                           	opt callstack 0
 12878  0038C0                     i2___wmul:
 12879                           	opt callstack 18
 12880  0038C0  5009               	movf	i2___wmul@multiplier^0,w,c
 12881  0038C2  020B               	mulwf	i2___wmul@multiplicand^0,c
 12882  0038C4  CFF3 F00D          	movff	prodl,i2___wmul@product
 12883  0038C8  CFF4 F00E          	movff	prodh,i2___wmul@product+1
 12884  0038CC  5009               	movf	i2___wmul@multiplier^0,w,c
 12885  0038CE  020C               	mulwf	(i2___wmul@multiplicand+1)^0,c
 12886  0038D0  50F3               	movf	243,w,c
 12887  0038D2  260E               	addwf	(i2___wmul@product+1)^0,f,c
 12888  0038D4  500A               	movf	(i2___wmul@multiplier+1)^0,w,c
 12889  0038D6  020B               	mulwf	i2___wmul@multiplicand^0,c
 12890  0038D8  50F3               	movf	243,w,c
 12891  0038DA  260E               	addwf	(i2___wmul@product+1)^0,f,c
 12892  0038DC  C00D  F009         	movff	i2___wmul@product,?i2___wmul
 12893  0038E0  C00E  F00A         	movff	i2___wmul@product+1,?i2___wmul+1
 12894  0038E4  0012               	return		;funcret
 12895  0038E6                     __end_ofi2___wmul:
 12896                           	opt callstack 0
 12897                           
 12898 ;; *************** function ___awdiv *****************
 12899 ;; Defined at:
 12900 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;  dividend        2    0[COMRAM] int 
 12903 ;;  divisor         2    2[COMRAM] int 
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;  quotient        2    6[COMRAM] int 
 12906 ;;  sign            1    5[COMRAM] unsigned char 
 12907 ;;  counter         1    4[COMRAM] unsigned char 
 12908 ;; Return value:  Size  Location     Type
 12909 ;;                  2    0[COMRAM] int 
 12910 ;; Registers used:
 12911 ;;		wreg, status,2, status,0
 12912 ;; Tracked objects:
 12913 ;;		On entry : 0/0
 12914 ;;		On exit  : 0/0
 12915 ;;		Unchanged: 0/0
 12916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12918 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12921 ;;Total ram usage:        8 bytes
 12922 ;; Hardware stack levels used:    1
 12923 ;; This function calls:
 12924 ;;		Nothing
 12925 ;; This function is called by:
 12926 ;;		_ADC_POT
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text63
 12931  002FE4                     __ptext63:
 12932                           	opt callstack 0
 12933  002FE4                     ___awdiv:
 12934                           	opt callstack 18
 12935  002FE4  0E00               	movlw	0
 12936  002FE6  6E06               	movwf	___awdiv@sign^0,c
 12937  002FE8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12938  002FEA  EFFB  F017         	goto	i2u399_40
 12939  002FEE  EFF9  F017         	goto	i2u399_41
 12940  002FF2                     i2u399_41:
 12941  002FF2  EF01  F018         	goto	i2l4121
 12942  002FF6                     i2u399_40:
 12943  002FF6  6C03               	negf	___awdiv@divisor^0,c
 12944  002FF8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12945  002FFA  B0D8               	btfsc	status,0,c
 12946  002FFC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12947  002FFE  0E01               	movlw	1
 12948  003000  6E06               	movwf	___awdiv@sign^0,c
 12949  003002                     i2l4121:
 12950  003002  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12951  003004  EF08  F018         	goto	i2u400_40
 12952  003008  EF06  F018         	goto	i2u400_41
 12953  00300C                     i2u400_41:
 12954  00300C  EF0E  F018         	goto	i2l4127
 12955  003010                     i2u400_40:
 12956  003010  6C01               	negf	___awdiv@dividend^0,c
 12957  003012  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12958  003014  B0D8               	btfsc	status,0,c
 12959  003016  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12960  003018  0E01               	movlw	1
 12961  00301A  1A06               	xorwf	___awdiv@sign^0,f,c
 12962  00301C                     i2l4127:
 12963  00301C  0E00               	movlw	0
 12964  00301E  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12965  003020  0E00               	movlw	0
 12966  003022  6E07               	movwf	___awdiv@quotient^0,c
 12967  003024  5003               	movf	___awdiv@divisor^0,w,c
 12968  003026  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12969  003028  B4D8               	btfsc	status,2,c
 12970  00302A  EF19  F018         	goto	i2u401_41
 12971  00302E  EF1B  F018         	goto	i2u401_40
 12972  003032                     i2u401_41:
 12973  003032  EF43  F018         	goto	i2l4149
 12974  003036                     i2u401_40:
 12975  003036  0E01               	movlw	1
 12976  003038  6E05               	movwf	___awdiv@counter^0,c
 12977  00303A  EF23  F018         	goto	i2l4135
 12978  00303E                     i2l4133:
 12979  00303E  90D8               	bcf	status,0,c
 12980  003040  3603               	rlcf	___awdiv@divisor^0,f,c
 12981  003042  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12982  003044  2A05               	incf	___awdiv@counter^0,f,c
 12983  003046                     i2l4135:
 12984  003046  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12985  003048  EF28  F018         	goto	i2u402_41
 12986  00304C  EF2A  F018         	goto	i2u402_40
 12987  003050                     i2u402_41:
 12988  003050  EF1F  F018         	goto	i2l4133
 12989  003054                     i2u402_40:
 12990  003054                     i2l4137:
 12991  003054  90D8               	bcf	status,0,c
 12992  003056  3607               	rlcf	___awdiv@quotient^0,f,c
 12993  003058  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12994  00305A  5003               	movf	___awdiv@divisor^0,w,c
 12995  00305C  5C01               	subwf	___awdiv@dividend^0,w,c
 12996  00305E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12997  003060  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12998  003062  A0D8               	btfss	status,0,c
 12999  003064  EF36  F018         	goto	i2u403_41
 13000  003068  EF38  F018         	goto	i2u403_40
 13001  00306C                     i2u403_41:
 13002  00306C  EF3D  F018         	goto	i2l4145
 13003  003070                     i2u403_40:
 13004  003070  5003               	movf	___awdiv@divisor^0,w,c
 13005  003072  5E01               	subwf	___awdiv@dividend^0,f,c
 13006  003074  5004               	movf	(___awdiv@divisor+1)^0,w,c
 13007  003076  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 13008  003078  8007               	bsf	___awdiv@quotient^0,0,c
 13009  00307A                     i2l4145:
 13010  00307A  90D8               	bcf	status,0,c
 13011  00307C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 13012  00307E  3203               	rrcf	___awdiv@divisor^0,f,c
 13013  003080  2E05               	decfsz	___awdiv@counter^0,f,c
 13014  003082  EF2A  F018         	goto	i2l4137
 13015  003086                     i2l4149:
 13016  003086  5006               	movf	___awdiv@sign^0,w,c
 13017  003088  B4D8               	btfsc	status,2,c
 13018  00308A  EF49  F018         	goto	i2u404_41
 13019  00308E  EF4B  F018         	goto	i2u404_40
 13020  003092                     i2u404_41:
 13021  003092  EF4F  F018         	goto	i2l4153
 13022  003096                     i2u404_40:
 13023  003096  6C07               	negf	___awdiv@quotient^0,c
 13024  003098  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 13025  00309A  B0D8               	btfsc	status,0,c
 13026  00309C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 13027  00309E                     i2l4153:
 13028  00309E  C007  F001         	movff	___awdiv@quotient,?___awdiv
 13029  0030A2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 13030  0030A6  0012               	return		;funcret
 13031  0030A8                     __end_of___awdiv:
 13032                           	opt callstack 0
 13033                           
 13034                           	psect	text64
 13035  000000                     __ptext64:
 13036                           	opt callstack 0
 13037  000000                     
 13038                           	psect	rparam
 13039  0000                     
 13040                           	psect	temp
 13041  00004D                     btemp:
 13042                           	opt callstack 0
 13043  00004D                     	ds	1
 13044  0000                     int$flags	set	btemp
 13045  0000                     wtemp8	set	btemp+1
 13046  0000                     ttemp5	set	btemp+1
 13047  0000                     ttemp6	set	btemp+4
 13048  0000                     ttemp7	set	btemp+8
 13049                           tosu	equ	0xFFF
 13050                           tosh	equ	0xFFE
 13051                           tosl	equ	0xFFD
 13052                           stkptr	equ	0xFFC
 13053                           pclatu	equ	0xFFB
 13054                           pclath	equ	0xFFA
 13055                           pcl	equ	0xFF9
 13056                           tblptru	equ	0xFF8
 13057                           tblptrh	equ	0xFF7
 13058                           tblptrl	equ	0xFF6
 13059                           tablat	equ	0xFF5
 13060                           prodh	equ	0xFF4
 13061                           prodl	equ	0xFF3
 13062                           indf0	equ	0xFEF
 13063                           postinc0	equ	0xFEE
 13064                           postdec0	equ	0xFED
 13065                           preinc0	equ	0xFEC
 13066                           plusw0	equ	0xFEB
 13067                           fsr0h	equ	0xFEA
 13068                           fsr0l	equ	0xFE9
 13069                           wreg	equ	0xFE8
 13070                           indf1	equ	0xFE7
 13071                           postinc1	equ	0xFE6
 13072                           postdec1	equ	0xFE5
 13073                           preinc1	equ	0xFE4
 13074                           plusw1	equ	0xFE3
 13075                           fsr1h	equ	0xFE2
 13076                           fsr1l	equ	0xFE1
 13077                           bsr	equ	0xFE0
 13078                           indf2	equ	0xFDF
 13079                           postinc2	equ	0xFDE
 13080                           postdec2	equ	0xFDD
 13081                           preinc2	equ	0xFDC
 13082                           plusw2	equ	0xFDB
 13083                           fsr2h	equ	0xFDA
 13084                           fsr2l	equ	0xFD9
 13085                           status	equ	0xFD8


Data Sizes:
    Strings     110
    Constant    3536
    Data        7
    BSS         148
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      76
    BANK0           160    103     146
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), codigo_digital(COMRAM[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), codigo_digital(COMRAM[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S1890_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), codigo_digital(COMRAM[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), codigo_digital(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), codigo_digital(COMRAM[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), codigo_digital(COMRAM[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), ADC_POT(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), ADC_POT(), Absolute function(), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), STR_2(CODE[11]), STR_1(CODE[33]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_draw_line->_lcd_draw_pixel_at
    _lcd_draw_pixel_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_acende_led
    _acende_led->_ADC_GetConversionResult
    _ADC_POT->i2___wmul
    i2___wmul->___awdiv

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  162676
            _ADC_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                      _lcd_draw_line
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   58434
                                             91 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   57877
                                             69 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   56840
                                             61 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   56046
                                             56 COMRAM     4     4      0
                                             28 BANK0     33    27      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8777
                                             45 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             24 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7619
                                             45 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             18 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             18 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5995
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             27 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    6891
                                             45 COMRAM    10     0     10
                                              0 BANK0     24    24      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8473
                                             45 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             36 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             18 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             18 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    5946
                                             45 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5667
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2305
                                             25 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1022
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37190
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                             27 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   30802
                                             49 COMRAM    10     0     10
                                              0 BANK0      8     8      0
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                             27 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_line                                       23    13     10   35466
                                             33 COMRAM    23    13     10
                  _lcd_draw_pixel_at
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_pixel_at                                    6     0      6   31732
                                             27 COMRAM     6     0      6
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                             23 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                             21 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                             21 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                             21 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                             19 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     678
                                             14 COMRAM     4     4      0
                            _ADC_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0      15
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0      15
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                         _acende_led *
 ---------------------------------------------------------------------------------
 (13) _acende_led                                          1     1      0      15
                                              4 COMRAM     1     1      0
                  _ADC_GetConversion
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversion                                   2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0     663
                   Absolute function *
        _ADC_DefaultInterruptHandler *
                            _ADC_POT *
 ---------------------------------------------------------------------------------
 (12) _ADC_POT                                             0     0      0     663
                            ___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (13) i2___wmul                                            6     2      4     211
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (13) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
   _lcd_draw_line
     _lcd_draw_pixel_at
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_POT *
       ___awdiv
       i2___wmul
         ___awdiv (ARG)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _acende_led *
         _ADC_GetConversion
         _ADC_GetConversionResult

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      92       5       91.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      4C       1       80.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     142       6        0.0%
DATA                 0      0     142       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 14 13:49:19 2020

                           _SPI_Initialize 3994                                _SSPSTATbits 000FC7  
                                       l43 352C                                         l54 39C0  
                                       l81 39B6                                         l78 397E  
                                       l96 39D6                               ___awdiv@sign 0006  
                      ___wmul@multiplicand 0015         __size_of_IOCB4_SetInterruptHandler 000A  
                              __CFG_BORV$3 000000                 ?_IOCB4_SetInterruptHandler 0013  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l132 3218                                        l140 391E  
                                      l141 3922                                        l311 3784  
                                      l128 39A4                                        l304 278A  
                                      l138 3910                                        l307 27BC  
                                      l412 39CA                                        l261 393A  
                                      l271 34E6                                        l351 2654  
                                      l360 2A58                                        l249 3812  
                                      l282 329A                                        l258 1688  
                                      l506 1FD2                                        l275 349E  
                                      l267 35F8                                        l531 24DA  
                                      l515 23DA                                        l508 2036  
                                      l517 23E2                                        l613 1302  
                                      l278 3968                                        l454 30EC  
                                      l526 248A                                        l527 24D2  
                                      l551 19A4                                        l472 172A  
                                      l536 1C7E                                        l560 1A44  
                                      l457 312E                                        l553 19AC  
                                      l466 33B6                                        l474 1732  
                                      l546 1E4A                                        l538 1C86  
                                      l387 3908                                        l459 3168  
                                      l492 196A                                        l661 38BE  
                                      l574 1BE2                                        l590 017E  
                                      l576 1C44                                        l497 1E84  
                                      l657 32F6                                        l658 32FE  
                                      l499 1E8C                                        l775 2358  
                                      l788 2920                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                                        _abs 35FA  
                                      _pad 30A8                            __end_of_ADC_ISR 3842  
                          __end_of_ADC_POT 37E6            __end_of_ADC_SetInterruptHandler 39CC  
                                      tosl 000FFD                                        wreg 000FE8  
             ?_ADC_DefaultInterruptHandler 0001                            ?_lcd_set_cursor 0018  
                       __size_of_IOCB4_ISR 002C                                       l1106 2D5E  
                                     ?_abs 0025                                       l1116 2F18  
                                     l1109 2EF8                                       l1408 2FE2  
                                     l1416 35B6                                       l1432 3752  
                                     l1336 3630                                       l1370 21D0  
                                     l1426 37B4                                       l1419 39D8  
                                     l1339 3638                                       l1099 2D3E  
                                     l1451 335C                                       l1436 2E48  
                                     l1373 3674                                       l1446 3354  
                                     l1367 21C8                                       l4201 37F0  
                                     l5001 33BC                                       l1393 36E4  
                                     l1457 36AC                                       l1473 2B48  
                                     l5011 3926                                       l4203 37FE  
                                     l1379 371C                                       l1387 3408  
                                     l5003 33D0                                       l1468 2B68  
                                     l4301 3972                                       l5013 3930  
                                     l4205 3800                                       l5005 33FE  
                                     l5021 3370                                       l5101 1E76  
                                     l4303 3976                                       l5015 3932  
                                     l5007 3402                                       l5023 337C  
                                     l5111 1ED4                                       l5103 1EB4  
                                     l4321 31E2                                       l4313 316C  
                                     l4305 397A                                       l5017 3938  
                                     l6001 2680                                       l5025 3388  
                                     l5041 1702                                       l5033 168A  
                                     l5113 1EDC                                       l5121 1F58  
                                     l5105 1EBE                                       l5201 1D3E  
                                     l4323 3216                                       l4315 317A  
                                     l4171 351C                                       l4163 34E8  
                                     l6011 26BA                                       l6003 2688  
                                     l5027 338C                                       l5019 335E  
                                     l5051 175A                                       l5043 1704  
                                     l5035 16AA                                       l5131 1FE0  
                                     l5123 1F72                                       l5115 1EEE  
                                     l5107 1EC2                                       l5211 1DE0  
                                     l5203 1D44                                       l4317 31BA  
                                     l4181 39D4                                       l4077 39B8  
                                     l4173 351E                                       l4165 3504  
                                     l6021 2702                                       l6013 26D0  
                                     l6005 2694                                       l5029 3392  
                                     l5061 17F8                                       l5053 1760  
                                     l5045 171E                                       l5037 16D4  
                                     l5133 1FF2                                       l5125 1F90  
                                     l5117 1EF4                                       l5109 1ECE  
                                     l5213 1DFA                                       l5205 1D4A  
                                     l5221 196C                                       l4319 31BE  
                                     l4087 39C2                                       l4191 38E6  
                                     l4175 352A                                       l4167 350A  
                                     l4183 3994                                       l6031 277A  
                                     l6023 271E                                       l6015 26D8  
                                     l6007 26AA                                       l5311 2110  
                                     l5303 20B4                                       l5071 18A4  
                                     l5063 1800                                       l5055 1768  
                                     l5047 173A                                       l5039 16F4  
                                     l5135 1FF8                                       l5127 1FAA  
                                     l5119 1EFA                                       l5151 238E  
                                     l5143 235A                                       l5215 1E14  
                                     l5207 1DAE                                       l5231 19CC  
                                     l5223 197A                                       l4193 38FA  
                                     l4169 351A                                       l4185 39A0  
                                     l6033 27A8                                       l6025 2736  
                                     l6017 26EE                                       l6009 26B2  
                                     l6041 2976                                       l5321 219A  
                                     l5305 20CA                                       l5081 1906  
                                     l5073 18BE                                       l5065 1806  
                                     l5057 1770                                       l5049 174C  
                                     l5137 2008                                       l5129 1FC4  
                                     l5161 2404                                       l5153 23A2  
                                     l5145 236C                                       l5209 1DC2  
                                     l5217 1E22                                       l5241 1A0C  
                                     l5233 19EC                                       l5225 197C  
                                     l4195 38FC                                       l4187 39A2  
                                     l6019 26F6                                       l6043 297A  
                                     l6051 2A26                                       l6035 2922  
                                     l5323 21AC                                       l5315 2148  
                                     l5307 20D2                                       l5083 190C  
                                     l5091 1942                                       l5075 18D8  
                                     l5059 1776                                       l5067 186A  
                                     l5139 200E                                       l5171 2464  
                                     l5163 2418                                       l5155 23AA  
                                     l5147 2374                                       l5331 2D8A  
                                     l5251 1A8A                                       l5243 1A28  
                                     l5235 19F6                                       l5227 1996  
                                     l5411 018C                                       l5403 010A  
                                     l4189 39A6                                       l6029 2752  
                                     l6045 29C8                                       l6037 2926  
                                     l5309 20DA                                       l5085 191E  
                                     l5069 1886                                       l5077 18E6  
                                     l5181 24B0                                       l5173 2468  
                                     l5165 241C                                       l5157 23B8  
                                     l5149 2386                                       l5341 2DE0  
                                     l5261 1AFC                                       l5245 1A38  
                                     l5237 19FE                                       l5229 19C2  
                                     l5501 0762                                       l5421 0206  
                                     l5413 018E                                       l6053 3786  
                                     ?_pad 0023                                       l5351 34B6  
                                     l6047 29F4                                       l6039 293C  
                                     l4199 37E8                                       l5319 2188  
                                     l5087 192A                                       l5079 18F8  
                                     l5095 1E4C                                       l5183 24B4  
                                     l5175 246C                                       l5167 243A  
                                     l5343 2DF2                                       l5335 2D96  
                                     l5191 1C70                                       l5271 1BA0  
                                     l5263 1B02                                       l5255 1AC4  
                                     l5239 1A04                                       l5503 07AA  
                                     l5423 0226                                       l5431 0290  
                                     l5415 01B4                                       l5407 0116  
                                     l6055 3790                                       l4297 396A  
                                     l5361 3458                                       l6049 2A22  
                                     l5089 1932                                       l5097 1E5A  
                                     l5169 2446                                       l5345 2E20  
                                     l5337 2DA4                                       l5329 2D60  
                                     l5193 1CAE                                       l5185 1C46  
                                     l5281 1C06                                       l5273 1BBA  
                                     l5265 1B08                                       l5257 1AD6  
                                     l5249 1A78                                       l5441 032C  
                                     l5433 02B6                                       l5425 0234  
                                     l5417 01EA                                       l5409 016C  
                                     l6081 2B90                                       l4299 396E  
                                     l5355 34BC                                       l5363 346E  
                                     l5291 2050                                       l4803 3574  
                                     l4811 371E                                       l5099 1E5C  
                                     l5179 249C                                       l5339 2DC2  
                                     l5195 1CB8                                       l5187 1C54  
                                     l5283 1C1C                                       l5275 1BD4  
                                     l5259 1AEA                                       l5267 1B66  
                                     l5611 0E42                                       l5603 0DCC  
                                     l5531 0968                                       l5523 08E0  
                                     l5515 086A                                       l5507 07E2  
                                     l5443 034C                                       l5435 02BE  
                                     l5451 03B6                                       l5419 01F8  
                                     l6091 2C3C                                       l6083 2BBC  
                                     l6075 2B6A                                       l5357 34E4  
                                     l5349 34A0                                       l5293 2054  
                                     l4805 3580                                       l4813 372A  
                                     l4901 226C                                       l5197 1CC0  
                                     l5189 1C56                                       l4821 3676  
                                     l5277 1BF0                                       l5269 1B82  
                                     l5621 0F00                                       l5613 0E78  
                                     l5605 0DF2                                       l5533 099E  
                                     l5541 09F0                                       l5525 0916  
                                     l5517 0890                                       l5509 0818  
                                     l5461 0460                                       l5453 03DC  
                                     l5445 035A                                       l5437 02CC  
                                     l5429 027E                                       l5381 00D0  
                                     l5373 0088                                       l6085 2BE8  
                                     l6077 2B86                                       l5367 3474  
                                     l5711 35D4                                       l5295 2072  
                                     l5287 2038                                       l4807 3592  
                                     l4815 372E                                       l4831 30CA  
                                     l4911 22EE                                       l4903 2280  
                                     l5199 1CC6                                       l5279 1BF6  
                                     l5623 0F36                                       l5543 0A26  
                                     l5551 0A72                                       l5535 09D6  
                                     l5471 054E                                       l5463 0496  
                                     l5455 040E                                       l5439 02F2  
                                     l5391 00F8                                       l5383 00DE  
                                     l5375 00AE                                       l6087 2C14  
                                     l6079 2B8C                                       l4825 390C  
                                     l5721 3954                                       l5369 349C  
                                     l5713 35F0                                       l5297 20AA  
                                     l5289 204C                                       l4809 3596  
                                     l4817 3746                                       l4841 3110  
                                     l4833 30D8                                       l4921 2338  
                                     l4913 22F0                                       l4905 228E  
                                     l5641 1086                                       l5625 0F5E  
                                     l5633 0FE2                                       l5553 0A98  
                                     l5561 0AE2                                       l5545 0A5E  
                                     l5537 09E2                                       l5481 05FA  
                                     l5473 0584                                       l5465 04E0  
                                     l5449 03A4                                       l5385 00E0  
                                     l5377 00BC                                       l5801 2AC4  
                                     l6089 2C16                                       l5299 20AE  
                                     l4843 313C                                       l4835 30E4  
                                     l4827 30A8                                       l4915 2302  
                                     l4907 22A0                                       l4931 27F0  
                                     l4851 3614                                       l5651 1114  
                                     l5635 1018                                       l5627 0F6E  
                                     l5619 0ECA                                       l5563 0B18  
                                     l5571 0B64                                       l5555 0ACE  
                                     l5491 06A4                                       l5483 0620  
                                     l5459 042A                                       l6267 013E  
                                     l5395 00FE                                       l5387 00F2  
                                     l5379 00CC                                       l5731 32D8  
                                     l5811 2B50                                       l5803 2AE8  
                                     l5717 35F6                                       l5709 35B8  
                                     l5741 325E                                       l5733 321A  
                                     l5901 14A4                                       l5821 1314  
                                     l6269 20FA                                       l4845 3150  
                                     l4837 30F8                                       l4829 30B6  
                                     l4909 22CE                                       l4917 2308  
                                     l4941 2848                                       l4933 27F4  
                                     l4925 27BE                                       l4853 36AE  
                                     l4861 3300                                       l5653 112C  
                                     l5661 117C                                       l5637 104E  
                                     l5629 0FA6                                       l5581 0C38  
                                     l5573 0B8A                                       l5565 0B50  
                                     l5493 06DA                                       l5469 0518  
                                     l5725 329C                                       l5805 2AFC  
                                     l5813 2B60                                       l5751 24DC  
                                     l5743 3278                                       l5735 322A  
                                     l5911 14D6                                       l5903 14AE  
                                     l5831 1346                                       l5823 131E  
                                     l4871 36E6                                       l4791 2F2C  
                                     l4839 310C                                       l4919 2318  
                                     l4951 28CA                                       l4943 285C  
                                     l4935 2802                                       l4927 27C2  
                                     l5663 11B2                                       l5655 113A  
                                     l5639 1076                                       l5647 10C8  
                                     l5591 0D0C                                       l5583 0C6E  
                                     l5575 0BD6                                       l5479 05D4  
                                     l5399 0104                                       l5727 32A4  
                                     l5807 2B0A                                       l5761 252C  
                                     l5753 24E4                                       l5745 3280  
                                     l5921 1508                                       l5913 14E0  
                                     l5905 14B8                                       l5841 1378  
                                     l5833 1350                                       l5825 1328  
                                     l5817 1304                                       l4793 2F3E  
                                     l4881 21D2                                       l4945 286A  
                                     l4953 28D0                                       l4937 2822  
                                     l4929 27D0                                       l4849 35FA  
                                     l4961 2C70                                       l4857 363A  
                                     l4865 3336                                       l5681 12AA  
                                     l5665 11E8                                       l5649 10EE  
                                     l5489 066E                                       l5729 32B0  
                                     l5809 2B38                                       l5747 3754  
                                     l5771 25EA                                       l5755 2528  
                                     l5739 3252                                       l5931 153A  
                                     l5923 1512                                       l5915 14EA  
                                     l5907 14C2                                       l5851 13AA  
                                     l5843 1382                                       l5835 135A  
                                     l5827 1332                                       l5819 130E  
                                     l4875 389A                                       l4795 2F48  
                                     l4891 2216                                       l4883 21D6  
                                     l4955 28E0                                       l4947 2898  
                                     l4939 2840                                       l4971 2CC4  
                                     l4963 2C7C                                       l4867 3348  
                                     l5667 1210                                       l5675 1262  
                                     l5595 0D44                                       l5587 0C8E  
                                     l5579 0C12                                       l5499 072C  
                                     l5691 12CA                                       l5749 3778  
                                     l5781 261A                                       l5773 25F6  
                                     l5941 156C                                       l5933 1544  
                                     l5925 151C                                       l5917 14F4  
                                     l5909 14CC                                       l5861 13DC  
                                     l5853 13B4                                       l5845 138C  
                                     l5837 1364                                       l5829 133C  
                                     l4877 38B6                                       l4797 2F66  
                                     l4789 2F1A                                       l4893 2236  
                                     l4885 21E4                                       l4957 2900  
                                     l4949 28B8                                       l4981 2D38  
                                     l4973 2CD6                                       l4965 2C9A  
                                     l5693 12F0                                       l5677 1288  
                                     l5685 12B8                                       l5669 1220  
                                     l5597 0D7A                                       l5589 0CC4  
                                     l5775 25F8                                       l5767 2530  
                                     l5783 261C                                       l5951 159E  
                                     l5943 1576                                       l5935 154E  
                                     l5927 1526                                       l5919 14FE  
                                     l5871 140E                                       l5863 13E6  
                                     l5855 13BE                                       l5847 1396  
                                     l5839 136E                                       l4799 2F9C  
                                     l4895 223A                                       l4887 2204  
                                     l4975 2D04                                       l4967 2CA2  
                                     l4991 2E92                                       l4983 2E4A  
                                     l5679 1296                                       l5777 2608  
                                     l5769 25DA                                       l5961 15D0  
                                     l5953 15A8                                       l5945 1580  
                                     l5937 1558                                       l5929 1530  
                                     l5881 1440                                       l5873 1418  
                                     l5865 13F0                                       l5857 13C8  
                                     l5849 13A0                                       l4897 2246  
                                     l4889 2208                                       l4977 2D24  
                                     l4969 2CB6                                       l4993 2EC0  
                                     l4985 2E68                                       l5793 2A7E  
                                     l5785 2A5A                                       l5779 260A  
                                     l5971 1602                                       l5963 15DA  
                                     l5955 15B2                                       l5947 158A  
                                     l5939 1562                                       l5891 1472  
                                     l5883 144A                                       l5875 1422  
                                     l5867 13FA                                       l5859 13D2  
                                     l4899 2264                                       l4979 2D26  
                                     l4995 2EE0                                       l4987 2E70  
                                     l5795 2A9C                                       l5787 2A6E  
                                     l5981 1634                                       l5973 160C  
                                     l5965 15E4                                       l5957 15BC  
                                     l5949 1594                                       l5893 147C  
                                     l5885 1454                                       l5877 142C  
                                     l5869 1404                                       l4997 2EF2  
                                     l4989 2E84                                       l5797 2AA8  
                                     l5789 2A76                                       l5991 166C  
                                     l5983 163E                                       l5975 1616  
                                     l5967 15EE                                       l5959 15C6  
                                     l5895 1486                                       l5887 145E  
                                     l5879 1436                                       l4999 33B8  
                                     l5799 2AB4                                       l5993 1676  
                                     l5985 1648                                       l5977 1620  
                                     l5969 15F8                                       l5897 1490  
                                     l5889 1468                                       l5995 167C  
                                     l5987 1652                                       l5979 162A  
                                     l5899 149A                                       l5997 2656  
                                     l5989 165C                                       l5999 2678  
                                     STR_1 FF91                                       STR_2 FFC3  
                                     STR_3 FFB2                                       STR_4 FFD2  
                                     STR_6 FFD2                                       STR_8 FFD6  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u5010 3370  
                                     u5011 336C                                       u5100 18A4  
                                     u5020 16BC                                       u5005 392E  
                                     u5101 18A0                                       u5021 16B6  
                                     u5006 3930                                       u4070 3812  
                                     u5110 18BE                                       u5030 16BE  
                                     u4071 380E                                       u5111 18BA  
                                     u5120 18D8                                       u5040 16D4  
                                     u5200 1F72                                       u6000 099E  
                                     u5121 18D4                                       u5041 16D0  
                                     u5201 1F6E                                       u6001 099A  
                                     u4250 317A                                       u5130 18E6  
                                     u5050 1702                                       u5210 1F90  
                                     u6010 0A26                                       u4251 3176  
                                     u5131 18E2                                       u5051 16FE  
                                     u5211 1F8C                                       u6011 0A22  
                                     u5140 18F8                                       u5060 171E  
                                     u5220 1FAA                                       u5300 23D6  
                                     u6100 0F00                                       u6020 0A98  
                                     u5141 18F4                                       u5061 171A  
                                     u5221 1FA6                                       u5301 23D2  
                                     u6101 0EFC                                       u6021 0A94  
                                     u5150 1906                                       u5070 174C  
                                     u5230 1FC4                                       u5310 2400  
                                     u6110 0F36                                       u6030 0B18  
                                     u5151 1902                                       u5071 1748  
                                     u5231 1FC0                                       u5311 23FC  
                                     u6111 0F32                                       u6031 0B14  
                                     u6200 35F0                                       u4600 3746  
                                     u5160 191E                                       u5080 175A  
                                     u5240 1FD2                                       u5320 243A  
                                     u5400 1DFA                                       u6120 1018  
                                     u6040 0B8A                                       u6201 35EC  
                                     u4601 3742                                       u5161 191A  
                                     u5081 1756                                       u5241 1FCE  
                                     u5321 2436                                       u5401 1DF6  
                                     u6121 1014                                       u6041 0B86  
                                     u5090 1886                                       u5250 1FE0  
                                     u5170 1E5A                                       u5330 248A  
                                     u5410 1E14                                       u4610 36A6  
                                     u6130 104E                                       u6050 0C38  
                                     u6210 32F6                                       u5091 1882  
                                     u5251 1FDC                                       u5171 1E56  
                                     u5331 2486                                       u5411 1E10  
                                     u4611 36A0                                       u6131 104A  
                                     u6051 0C34                                       u6211 32F2  
                                     u6300 2654                                       u6220 324E  
                                     u5260 1FF2                                       u5180 1E76  
                                     u5340 2498                                       u5420 1E22  
                                     u4700 36E0                                       u4620 36A8  
                                     u5500 1ABE                                       u6140 10EE  
                                     u6060 0CC4                                       u6301 2650  
                                     u6221 324A                                       u5261 1FEE  
                                     u5181 1E72                                       u5341 2494  
                                     u5421 1E1E                                       u5501 1AB8  
                                     u6141 10EA                                       u6061 0CC0  
                                     u4630 391E                                       u6230 3278  
                                     u4550 2F2C                                       u5190 1F32  
                                     u5350 24D2                                       u4710 366E  
                                     u5510 1AC0                                       u5430 197A  
                                     u6150 1114                                       u6070 0D7A  
                                     u6310 2A6E                                       u4631 391A  
                                     u6231 3274                                       u4551 2F28  
                                     u5351 24CE                                       u5271 2364  
                                     u4711 3668                                       u5431 1976  
                                     u6151 1110                                       u6071 0D76  
                                     u6311 2A6A                                       u6400 2736  
                                     u6240 329A                                       u5600 2072  
                                     u4560 2F3E                                       u4640 30B6  
                                     u5280 2386                                       u5360 1C54  
                                     u4720 3670                                       u5520 1AD6  
                                     u5440 1996                                       u6160 11B2  
                                     u6080 0DF2                                       u6320 2A9C  
                                     u6401 2732                                       u6241 3296  
                                     u5601 206E                                       u4561 2F3A  
                                     u4641 30B2                                       u4801 2240  
                                     u5281 2382                                       u5361 1C50  
                                     u5521 1AD2                                       u5441 1992  
                                     u6161 11AE                                       u6081 0DEE  
                                     u6321 2A98                                       u6250 3778  
                                     u6410 274E                                       u5610 20AA  
                                     u4570 2F66                                       u4650 30D8  
                                     u4810 2264                                       u5290 23B8  
                                     u5370 1C70                                       u4730 3330  
                                     u5530 1B40                                       u5450 19C2  
                                     u6170 11E8                                       u6090 0E78  
                                     u6330 2AFC                                       u6251 3774  
                                     u6411 274A                                       u5611 20A6  
                                     u4571 2F62                                       u4651 30D4  
                                     u4811 2260                                       u5195 1F20  
                                     u5291 23B4                                       u5371 1C6C  
                                     u4731 332A                                       u5451 19BE  
                                     u6171 11E4                                       u6091 0E74  
                                     u6331 2AF8                                       u6420 277A  
                                     u5620 20C6                                       u4580 2F9C  
                                     u4660 312E                                       u4820 228E  
                                     u4900 28E0                                       u5700 2DF2  
                                     u5380 1DC2                                       u4740 3332  
                                     u5540 1B82                                       u5460 1A28  
                                     u6180 1288                                       u6340 2B0A  
                                     u6421 2776                                       u5621 20C2  
                                     u4581 2F98                                       u4661 312A  
                                     u4821 228A                                       u4901 28DC  
                                     u5701 2DEE                                       u5381 1DBE  
                                     u5541 1B7E                                       u5461 1A24  
                                     u6181 1284                                       u6341 2B06  
                                     u6190 35D4                                       u6430 27A8  
                                     u6270 25DA                                       u5630 2182  
                                     u4590 35B6                                       u4670 313C  
                                     u4830 22CE                                       u5710 2E20  
                                     u5390 1DE0                                       u4750 3348  
                                     u5550 1BA0                                       u5470 1A72  
                                     u6350 2B38                                       u6191 35D0  
                                     u6431 27A4                                       u6271 25D6  
                                     u5631 217C                                       u4591 35B2  
                                     u4671 3138                                       u4831 22CA  
                                     u5711 2E1C                                       u4911 2C76  
                                     u5391 1DDC                                       u4751 3344  
                                     u5551 1B9C                                       u5535 1B2E  
                                     u5471 1A6C                                       u6351 2B34  
                                     u5720 34B6                                       u6360 2678  
                                     u6280 2608                                       u6264 25BA  
                                     u6440 29A4                                       u4760 3716  
                                     u5640 2184                                       u4840 2318  
                                     u4680 3614                                       u4920 2C9A  
                                     u5560 1BBA                                       u5480 1A74  
                                     u5800 0278                                       u5721 34B2  
                                     u6361 2674                                       u6281 2604  
                                     u6265 25B4                                       u4761 3710  
                                     u4841 2314                                       u4681 3610  
                                     u4921 2C96                                       u5561 1BB6  
                                     u5730 346E                                       u6370 26AA  
                                     u6290 261A                                       u6450 29C8  
                                     u4770 3718                                       u5650 219A  
                                     u4850 27D0                                       u4930 2CC4  
                                     u4690 36DE                                       u5570 1BD4  
                                     u5490 1A8A                                       u5810 0290  
                                     i2l51 386C                                       u5731 346A  
                                     u6371 26A6                                       u6291 2616  
                                     u6451 29C4                                       u5651 2196  
                                     u4851 27CC                                       u4931 2CC0  
                                     u4691 36D8                                       u5571 1BD0  
                                     u5491 1A86                                       u5811 028C  
                                     u6380 26D0                                       u6460 2A48  
                                     u5660 21AC                                       u4780 21E4  
                                     u4860 2802                                       u4940 2D04  
                                     u5580 1BE2                                       u5900 054E  
                                     u5820 02B6                                       u5740 00AE  
                                     u6381 26CC                                       u5661 21A8  
                                     u4781 21E0                                       u4861 27FE  
                                     u4941 2D00                                       u5581 1BDE  
                                     u5901 054A                                       u5821 02B2  
                                     u5741 00AA                                       u6390 26EE  
                                     u6470 2A58                                       u4790 2216  
                                     u4870 2840                                       u5670 2D8A  
                                     u4950 2E68                                       u5590 1BF0  
                                     u5910 0584                                       u5830 02F2  
                                     u5750 017E                                       i2l47 3952  
                                     u6391 26EA                                       u6471 2A54  
                                     u6447 299A                                       u6607 37F6  
                                     u4791 2212                                       u4871 283C  
                                     u5671 2D86                                       u4951 2E64  
                                     u5591 1BEC                                       u5911 0580  
                                     u5831 02EE                                       u5751 017A  
                                     u4880 286A                                       u5680 2DC2  
                                     u4960 2E92                                       u5920 05FA  
                                     u5840 039C                                       u5760 018C  
                                     i2l57 39DA                                       u4881 2866  
                                     u5681 2DBE                                       u4961 2E8E  
                                     u5921 05F6                                       u5841 0396  
                                     u5761 0188                                       u4890 2898  
                                     u5690 2DE0                                       u4970 2EC0  
                                     u5930 0620                                       u5850 039E  
                                     u5770 01B4                                       u6467 2A3E  
                                     u4891 2894                                       u5691 2DDC  
                                     u4971 2EBC                                       u5931 061C  
                                     u5771 01B0                                       u4980 33D0  
                                     u5940 06A4                                       u5860 03B6  
                                     u5780 01F8                                       u4981 33CC  
                                     u5941 06A0                                       u5861 03B2  
                                     u5781 01F4                                       u4990 33FE  
                                     u5950 06DA                                       u5870 03DC  
                                     u5790 0276                                       u4991 33FA  
                                     u5951 06D6                                       u5871 03D8  
                                     u5791 0270                                       u5960 0762  
                                     u5880 0460                                       u5961 075E  
                                     u5881 045C                                       u5970 0818  
                                     u5890 0496                                       u5971 0814  
                                     u5891 0492                                       u5980 0890  
                                     u5981 088C                                       u5990 0916  
                                     u5991 0912                                       _WPUB 000F5B  
                                     abs@a 0025                                       _dbuf 00CB  
                                     _atoi 2038                                       _ctoa 335E  
                                     _main 2B6A                                       _dtoa 168A  
                                     _font F1C1                                       _prec 0041  
                                     _otoa 1E4C                                       _nout 003D  
                                     pad@i 002A                                       pad@p 0027  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 002C  
                                     fsr2l 000FD9                                       _stoa 235A  
                                     btemp 004D                                       _utoa 1C46  
                                     _xtoa 196C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0084  
                            __CFG_IESO$OFF 000000                     __end_of_SPI_Initialize 39A6  
                            lcd_fill@width 0020                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                      ??_abs 0027  
                                    ??_pad 0029             __size_of_OSCILLATOR_Initialize 0012  
            __end_of_OSCILLATOR_Initialize 39B8                            __end_of___aodiv 235A  
                                    ?_atoi 001A                                      ?_ctoa 002E  
                                    ?_main 0001                                      ?_dtoa 002E  
                          __end_of___aomod 2922                            __end_of___awdiv 30A8  
                                    STR_10 FFD6                                      STR_22 FFED  
                                    STR_15 FFD3                                      STR_31 FFDE  
                                    STR_24 FFED                                      STR_33 FFDE  
                                    STR_41 FFF6                                      STR_26 FFF0  
                                    STR_19 FFD7                                      STR_43 FFF6  
                                    STR_28 FFF0                                      STR_53 FFDB  
                                    STR_61 FFE2                                      STR_38 FFDF  
                                    STR_46 FFDA                                      STR_63 FFE2  
                                    STR_71 FFF9                                      STR_48 FFDA  
                                    STR_56 FFF3                                      STR_80 FFCE  
                                    STR_73 FFF9                                      STR_82 FFCE  
                                    STR_58 FFF3                                      STR_91 FFCF  
                                    STR_68 FFE3                                      STR_76 FFE6  
                                    STR_78 FFE6                                      STR_94 FFFC  
                                    STR_87 FFE7                                      STR_96 FFFC  
                                    STR_98 FFEA                                      ?_otoa 002E  
        __end_of_IOCB4_SetInterruptHandler 39C2                                      ?_stoa 001C  
                                    ?_utoa 002E                            __end_of___lodiv 2D60  
                          ___awdiv@divisor 0003                                      ?_xtoa 002E  
                          __end_of___lomod 2F1A                                      i2l101 003E  
                                    i2l106 0070                                      i2l211 37E4  
                                    i2l107 0070                                      i2l208 3572  
                                    i2l402 3898                                      i2l415 39DC  
                                    i2l409 3840                                      i2l396 3992  
                                    i2l661 38E4                                      i2l399 3886  
                                    i2l892 30A6                            ___awdiv@counter 0005  
                             vfpfcnvrt@fmt 007E                               vfpfcnvrt@llu 0095  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96           __size_of_ADC_GetConversionResult 0014  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0026  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                            ??_lcd_draw_line 002C  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 3814                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 3954                                      _flags 0043  
                                    _errno 00C7                                      _fputc 2F1A  
                          __end_of_isalpha 3676                                      _fputs 3574  
                          __end_of_isdigit 371E                                      atoi@n 0027  
                                    pad@fp 0023                                      atoi@s 001A  
                                    _width 003F                                      ctoa@c 0030  
                                    _putch 39D8                                      ctoa@w 0031  
                                    dtoa@d 0030                                      dtoa@i 0078  
                                    dtoa@n 0070                                      dtoa@p 006A  
                                    dtoa@s 006E                                      dtoa@w 006C  
                         __end_of_SPI_Open 321A                            __end_of_islower 36AE  
                          __end_of_isspace 340A                            __end_of_isupper 36E6  
                                    pclath 000FFA                                      tablat 000FF5  
                                    otoa@d 0030                                      otoa@i 0076  
                                    otoa@n 006E                                      otoa@p 0068  
                                    otoa@t 006A                                      otoa@w 006C  
                         __end_ofi2___wmul 38E6                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0028  
                                    stoa@l 0030                                      stoa@p 002E  
                                    stoa@s 001E                                      stoa@w 002A  
                                    ttemp5 004E                                      ttemp6 0051  
                                    ttemp7 0055                                      utoa@d 0030  
                                    utoa@i 0074                                      utoa@n 006C  
                                    utoa@p 0068                                      utoa@w 006A  
                                    status 000FD8                                      wtemp8 004E  
                                    xtoa@c 007A                                      xtoa@d 0030  
                                    xtoa@i 0078                                      xtoa@n 0070  
                                    xtoa@p 006C                                      xtoa@w 006E  
                                    xtoa@x 0038                            __end_of_strncmp 2E4A  
                          __end_of_toupper 335E                             lcd_fill@height 001E  
                         ___lodiv@dividend 0013                            ?_SPI_Initialize 0001  
          ??_IOCB4_DefaultInterruptHandler 0001                               _toupper$1957 001F  
                          __initialization 340A                               __end_of_atoi 21D2  
                             __end_of_ctoa 33B8                               __end_of_main 2C70  
                             __end_of_dtoa 196C                               __end_of_font FF8D  
                             __end_of_otoa 2038                               __end_of_stoa 24DC  
                             __end_of_utoa 1E4C                               __end_of_xtoa 1C46  
                        __end_of_IOCB4_ISR 386E                                  ??_ADC_ISR 000F  
                                ??_ADC_POT 000F                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 001C                                     ??_ctoa 0031  
                                   ??_main 003D                                     ??_dtoa 0060  
                        ?_lcd_set_cursor_x 0016                          ?_lcd_set_cursor_y 0016  
                            lcd_send@value 0014                                     ??_otoa 0060  
                                   ??_stoa 0020                                     ??_utoa 0060  
                                   ??_xtoa 0060                              __activetblptr 000003  
                       ??_lcd_set_cursor_x 0018                         ??_lcd_set_cursor_y 0018  
                           __CFG_RETEN$OFF 000000                           ___lodiv@quotient 0023  
                           lcd_draw_char@i 0031                             lcd_draw_char@j 002F  
                           lcd_draw_char@k 0030                   __end_of_SPI_ExchangeByte 3924  
                           lcd_draw_char@x 001C                             lcd_draw_char@y 001E  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_fputc 0013  
                                   STR_100 FFEA                                     ?_fputs 001C  
                                   _ADRESH 000FC4                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 0001                                     ?_putch 0001  
                          __CFG_BBSIZ$BB2K 000000                                     i2l2041 3882  
                                   i2l2043 3884                                     i2l2045 3894  
                                   i2l2039 3870                                     i2l4121 3002  
                                   i2l4113 2FE4                                     i2l4131 3036  
                                   i2l4123 3010                                     i2l4115 2FE8  
                                   i2l4141 3070                                     i2l4133 303E  
                                   i2l4125 3018                                     i2l4117 2FF6  
                           __CFG_WDTEN$OFF 000000                                     i2l4151 3096  
                                   i2l4143 3078                                     i2l4135 3046  
                                   i2l4127 301C                                     i2l4119 2FFE  
                                   i2l4311 3828                                     i2l4153 309E  
                                   i2l4145 307A                                     i2l4137 3054  
                                   i2l4129 3024                                     i2l4081 353C  
                                   i2l4147 3080                                     i2l4139 305A  
                                   i2l4307 3814                                     i2l4083 3560  
                                   i2l4149 3086                                     i2l4157 38C0  
                                   i2l4309 3816                                     i2l4085 3566  
                                   i2l4159 38DC                                     i2l4079 352E  
                                   i2l3713 3980                                     i2l4177 3842  
                                   i2l4179 3854                                     i2l4291 393C  
                                   i2l4197 37B6                                     i2l4293 394C  
                                   i2l4295 3950                                     i2l4571 0028  
                                   i2l4573 0036                                     i2l4575 004C  
                                   i2l4577 005A                                     i2l4569 001A  
                                   i2l4579 0068                                     _OSCCON 000FD3  
                            vfpfcnvrt@done 0084                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                            _global_bg_color 0045  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0018  
                         __end_of_lcd_fill 329C                               vfprintf@cfmt 00A3  
                         __end_of_lcd_init 168A       __size_of_ADC_DefaultInterruptHandler 0002  
         __size_of_ADC_SetInterruptHandler 000A                           __end_of_lcd_send 393C  
                                ??___aodiv 0023                                  ??___aomod 0023  
                                   ___wmul 389A                                  ??___awdiv 0005  
                           __CFG_STVREN$ON 000000                                  ??___lodiv 0023  
                                ??___lomod 0023                                     clear_0 3430  
                                   clear_1 343C                                     clear_2 3448  
                         ___awdiv@quotient 0007                                     pad@buf 0025  
                                   ctoa@fp 002E                                     dtoa@fp 002E  
                                   _string 0100                                     _strlen 371E  
                                ??_msDelay 0013                                     fputc@c 0013  
                                   fputs@c 0020                                     fputs@i 0021  
                                   fputs@s 001C                                  ??_isalpha 0015  
                                ??_isdigit 0015                                  ??_islower 0015  
                             __mediumconst F1C0                                  ??_isspace 0015  
                                   otoa@fp 002E                                     tblptrh 000FF7  
                                ??_isupper 0015                                     tblptrl 000FF6  
                                   tblptru 000FF8                   ADC_GetConversion@channel 0002  
                                   stoa@cp 002C                                     stoa@fp 001C  
                                   putch@c 0001                           __end_of_vfprintf 3300  
                                   utoa@fp 002E    ADC_SetInterruptHandler@InterruptHandler 0013  
IOCB4_SetInterruptHandler@InterruptHandler 0013                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 37B6                                     xtoa@fp 002E  
                                ??_strncmp 0019                                  ??_toupper 001B  
            __size_of_INTERRUPT_Initialize 0004                          _SYSTEM_Initialize 396A  
                               __accesstop 0060                   __size_of_lcd_draw_string 0138  
                  __end_of__initialization 344E                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                             __pcstackCOMRAM 0001  
                             __pidataBANK0 39CC                        ??_SYSTEM_Initialize 0015  
                            __end_of_fputc 2FE4                              __end_of_fputs 35B8  
    __end_of_IOCB4_DefaultInterruptHandler 39DC     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 39DA                              __end_of_putch 39DA  
                                ?_SPI_Open 0001                                 _acende_led 352E  
              ??_IOCB4_SetInterruptHandler 0015                                  ?i2___wmul 0009  
                         ??_lcd_set_cursor 001C                    _ADC_GetConversionResult 3980  
                                  ??_fputc 0017                  __end_of_SYSTEM_Initialize 3980  
                                  ??_fputs 0020                                    ??_putch 0013  
                               __pbssBANK0 00C7                                 __pbssBANK1 0100  
                          __CFG_PLLCFG$OFF 000000                                 __pnvCOMRAM 0049  
                                  ?___wmul 0013                                    _ADC_ISR 3814  
                                  _ADC_POT 37B6                                 ??_SPI_Open 0013  
                          lcd_draw_line@e2 0033                            lcd_draw_line@x0 0022  
                          lcd_draw_line@x1 0026                            lcd_draw_line@y0 0024  
                          lcd_draw_line@y1 0028                    __size_of_ADC_Initialize 0024  
                          lcd_draw_line@dx 0035                            lcd_draw_line@dy 0037  
                          lcd_draw_line@sx 002D                            lcd_draw_line@sy 002F  
                                  ?_strlen 0013                                 ??i2___wmul 000D  
                         __CFG_CANMX$PORTB 000000                                    _REFOCON 000F9A  
                                  _OSCCON2 000FD2                         __size_of_vfpfcnvrt 127C  
                                  _OSCTUNE 000F9B                                    _SSPCON1 000FC6  
                                  _SSPCON2 000FC5                                  ?_lcd_fill 001C  
                                ?_lcd_init 0001                                  ?_lcd_send 0014  
                                  _SSPSTAT 000FC7                           ___lomod@dividend 0013  
                         ??_SPI_Initialize 0013                  _IOCB4_SetInterruptHandler 39B8  
                          __CFG_PWRTEN$OFF 000000                       _ADC_InterruptHandler 0049  
                                  __Hparam 0000                    _ADC_SetInterruptHandler 39C2  
                                  __Lparam 0000                         __size_of_vsnprintf 0110  
                        ??_lcd_draw_string 0060                                    ___aodiv 21D2  
                                  ___aomod 27BE                                    ___awdiv 2FE4  
                          __size_of___wmul 0026                                    ___lodiv 2C70  
                                  ___lomod 2E4A                                  ?_vfprintf 009D  
                                ?_snprintf 00BB                  ??_ADC_GetConversionResult 0003  
                                  __pcinit 340A                                    __ramtop 0F00  
                              ?_acende_led 0001                                    __ptext0 2B6A  
                                  __ptext1 3786                                    __ptext2 2A5A  
                                  __ptext3 329C                                    __ptext4 0088  
                                  __ptext5 196C                                    __ptext6 3300  
                                  __ptext7 3676                                    __ptext8 36AE  
                                  __ptext9 363A                                    _msDelay 37E6  
                                _IOCB4_ISR 3842                            __size_of_strlen 0036  
                               fp__ADC_POT 0000                      _OSCILLATOR_Initialize 39A6  
                             __size_of_abs 0040                               __size_of_pad 00C2  
                                  _isalpha 363A                                    _isdigit 36E6  
                                  _islower 3676                   ??_PIN_MANAGER_Initialize 0015  
                                  _isspace 33B8                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 36AE                                    atoi@neg 0020  
                    __end_of_lcd_draw_char 2656                      __end_of_lcd_draw_line 27BE  
               __size_of_SYSTEM_Initialize 0016                                 ??_lcd_fill 001E  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 0022  
                               ??_lcd_send 0015                                    _strncmp 2D60  
                                  _toupper 3300                       end_of_initialization 344E  
                       ??_SPI_ExchangeByte 0013                  __size_of_lcd_set_cursor_x 0048  
                __size_of_lcd_set_cursor_y 0048                                    fputc@fp 0015  
                                  fputs@fp 001E                        i2___wmul@multiplier 0009  
                      lcd_draw_char@fIndex 0020                          __end_of_vfpfcnvrt 1304  
                                  postdec1 000FE5                                    postdec2 000FDD  
                   lcd_draw_pixel_at@color 0020                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 001C                                 ??_vfprintf 003D  
                               ??_snprintf 003D                                    strlen@a 0015  
                                  strlen@s 0013                          lcd_draw_string@pS 0036  
                                _PORTBbits 000F81                          _spi_configuration FF8D  
                               ?_IOCB4_ISR 0001                           __CFG_FOSC$INTIO2 000000  
      __end_of_ADC_DefaultInterruptHandler 39DE                _ADC_DefaultInterruptHandler 39DC  
                                _TRISCbits 000F94                          __end_of_vsnprintf 2B6A  
            ??_ADC_DefaultInterruptHandler 0001                                 lcd_send@dc 0015  
                ??_ADC_SetInterruptHandler 0015                        __size_of_acende_led 0046  
             __end_of_INTERRUPT_Initialize 39D8                       SPI_ExchangeByte@data 0013  
                __end_of_spi_configuration FF91                                vfpfcnvrt@ap 0080  
                              vfpfcnvrt@cp 0082                                vfpfcnvrt@fp 007C  
                              vfpfcnvrt@ll 008A                             __end_of___wmul 38C0  
                              vfpfcnvrt@vp 0092                             _ADC_Initialize 38E6  
                   ?_OSCILLATOR_Initialize 0001                           i2___wmul@product 000D  
                        __size_of_SPI_Open 00B0                             __end_of_strlen 3754  
                      start_initialization 340A                            ___lodiv@divisor 001B  
                          ___lodiv@counter 002B                          __size_ofi2___wmul 0026  
                        _lcd_draw_pixel_at 3754            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 363A                                __end_of_pad 316A  
                       ?_lcd_draw_pixel_at 001C                             _codigo_digital 0047  
                      ??_lcd_draw_pixel_at 0022                   __size_of_PIN_MANAGER_IOC 0018  
           SPI_Open@spiUniqueConfiguration 0014                                vfprintf@fmt 009F  
                                 ??___wmul 0017                     __end_of_ADC_Initialize 390A  
                              __pdataBANK0 00EB                                   ?_ADC_ISR 0001  
                                 ?_ADC_POT 0001                                   ??_strlen 0015  
                              ??_IOCB4_ISR 0006                    __size_of_lcd_draw_pixel 0016  
                __end_of_lcd_draw_pixel_at 3786                               vsnprintf@cnt 00B3  
                             vsnprintf@fmt 00A9                                __pbssCOMRAM 003D  
                            __pcstackBANK0 0060                           ___aodiv@dividend 0013  
                              snprintf@fmt 00BF                            _lcd_draw_string 2922  
                         _lcd_set_cursor_x 34A0                           _lcd_set_cursor_y 3458  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$1850 0022  
                                _atoi$1851 0026                                  _atoi$1852 0024  
                   _PIN_MANAGER_Initialize 34E8                                  _dtoa$1237 0068  
                                __pintcode 0008                              __pmediumconst F1C0  
                                 ?___aodiv 0013                                   ?___aomod 0013  
                                 ?___awdiv 0001                           ___aodiv@quotient 0025  
                                 ?___lodiv 0013                                   ?___lomod 0013  
                          ?_ADC_Initialize 0001                               ??_acende_led 0005  
             ??_INTERRUPT_InterruptManager 000F                          __size_of_vfprintf 0064  
                        __size_of_snprintf 0030                                   ?_msDelay 0001  
                          ___lomod@divisor 001B                            ___lomod@counter 0023  
                                 ?_isalpha 0013                                   ?_isdigit 0013  
                                 ?_islower 0013                                   ?_isspace 0013  
                                 ?_isupper 0013                           lcd_draw_line@err 0031  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0013                                   ?_toupper 0019  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 39D4  
                  __size_of_lcd_set_cursor 0042                             ___wmul@product 0017  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                         __end_of_acende_led 3574  
                                 _PIE1bits 000F9D                            lcd_set_cursor@x 0018  
                          lcd_set_cursor@y 001A                                   i2u118_40 3894  
                                 i2u118_41 3890        __size_of_INTERRUPT_InterruptManager 007C  
                                 i2u400_40 3010                                   i2u400_41 300C  
                                 i2u401_40 3036                                   i2u401_41 3032  
                                 i2u402_40 3054                                   i2u402_41 3050  
                                 i2u403_40 3070                                   i2u403_41 306C  
                                 i2u404_40 3096                                   i2u404_41 3092  
                                 i2u405_40 3854                                   i2u405_41 3850  
                                 i2u422_40 394C                                   i2u422_41 3948  
                                 i2u423_40 3828                                   i2u406_48 385A  
                                 i2u423_41 3824                                   i2u406_49 386C  
                                 i2u440_40 004C                                   i2u440_41 0048  
                                 i2u424_48 382E                                   i2u441_40 005A  
                                 i2u424_49 3840                                   i2u441_41 0056  
                                 _PIR1bits 000F9E                                   i2u442_40 0068  
                                 i2u442_41 0064                                   i2u438_40 0028  
                                 i2u438_41 0024                                   i2u439_40 0036  
                                 i2u439_41 0032                                   i2u394_40 353C  
                                 i2u394_41 3538                      lcd_draw_string@lIndex 0066  
                                 i2u395_40 354C                                   i2u395_41 3546  
                                 i2u395_46 354E                                   i2u399_40 2FF6  
                                 i2u399_41 2FF2                                   _RCONbits 000FD0  
                __size_of_SPI_ExchangeByte 001A             fp__ADC_DefaultInterruptHandler 0000  
                         lcd_draw_string@k 0064                           lcd_draw_string@x 0032  
                         lcd_draw_string@y 0034                          ??_PIN_MANAGER_IOC 0006  
                                _vfpfcnvrt 0088                                  _xtoa$1273 0068  
                                _xtoa$1274 006A                                   _SPI_Open 316A  
                         __size_of_ADC_ISR 002E                           __size_of_ADC_POT 0030  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0013  
                         __CFG_SOSCSEL$DIG 000000                                   i2___wmul 38C0  
               __size_of_lcd_draw_pixel_at 0032                    __end_of_lcd_draw_string 2A5A  
                             _isspace$1877 0019                                  msDelay@ms 0014  
                               vfpfcnvrt@c 0094                                _INTCON2bits 000FF1  
                                copy_data0 341E                      ?_INTERRUPT_Initialize 0001  
                                _vsnprintf 2A5A                        lcd_draw_pixel@color 0016  
                                 __Hrparam 0000                                 vfprintf@ap 00A1  
                                 __Lrparam 0000                                 vfprintf@fp 009D  
                 ?_ADC_GetConversionResult 0001                          _ADC_GetConversion 386E  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0013                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0001                           __size_of___aodiv 0188  
                   __size_of_lcd_draw_line 0168                           __size_of___aomod 0164  
                         __size_of___awdiv 00C4                                vsnprintf@ap 00AB  
                    i2___wmul@multiplicand 000B                           __size_of___lodiv 00F0  
                         __size_of___lomod 00D0                                 ?_vfpfcnvrt 007C  
                               snprintf@ap 00C5                            ___aodiv@divisor 001B  
                          ___aodiv@counter 0023                     _IOCB4_InterruptHandler 004B  
                           _lcd_draw_pixel 3954                        ??_ADC_GetConversion 0001  
                         __size_of_msDelay 002E                         lcd_draw_line@color 002A  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 1C46                                   __ptext11 2E4A  
                                 __ptext20 335E                                   __ptext12 2C70  
                                 __ptext21 30A8                                   __ptext13 2D60  
                                 __ptext30 1304                                   __ptext22 371E  
                                 __ptext14 235A                                   __ptext31 37E6  
                                 __ptext23 3574                                   __ptext15 1E4C  
                                 __ptext40 3954                                   __ptext32 321A  
                                 __ptext24 2F1A                                   __ptext16 168A  
                                 __ptext41 3924                                   __ptext33 2922  
                                 __ptext25 39D8                                   __ptext17 35FA  
                                 __ptext50 39C2                                   __ptext42 390A  
                                 __ptext34 24DC                                   __ptext26 2038  
                                 __ptext18 27BE                                   __ptext51 316A  
                                 __ptext43 396A                                   __ptext35 2656  
                                 __ptext27 33B8                                   __ptext19 21D2  
                                 __ptext60 39DC                                   __ptext44 3994  
                                 __ptext36 3754                                   __ptext28 36E6  
                                 __ptext61 37B6                                   __ptext53 393C  
                                 __ptext45 34E8                                   __ptext37 35B8  
                                 __ptext29 389A                                   __ptext62 38C0  
                                 __ptext54 3842                                   __ptext46 39B8  
                                 __ptext38 3458                                   __ptext63 2FE4  
                                 __ptext55 39DA                                   __ptext47 39A6  
                                 __ptext39 34A0                                   __ptext64 0000  
                                 __ptext56 352E                                   __ptext48 39D4  
                                 __ptext57 3980                                   __ptext49 38E6  
                                 __ptext58 386E                                   __ptext59 3814  
                         __size_of_isupper 0038                                   _lcd_fill 321A  
                                 _lcd_init 1304                                   _lcd_send 3924  
                         __size_of_strncmp 00EA                           __size_of_toupper 005E  
                               ?_vsnprintf 00A5                              __size_of_atoi 019A  
                            __size_of_ctoa 005A                              __size_of_main 0106  
                            __size_of_dtoa 02E2                              __size_of_otoa 01EC  
                            __size_of_stoa 0182                              __size_of_utoa 0206  
                            __size_of_xtoa 02DA                  __end_of_ADC_GetConversion 389A  
                                stoa@F1152 00EB                      lcd_draw_char@bg_color 0024  
                                 int$flags 004D                                   _vfprintf 329C  
                    lcd_draw_char@fg_color 0022         __end_of_INTERRUPT_InterruptManager 0084  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 396A  
                                 _snprintf 3786                                _percentagem 00C9  
                 __end_of_lcd_set_cursor_x 34E8                   __end_of_lcd_set_cursor_y 34A0  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0015  
                         ___aomod@dividend 0013                             _vfpfcnvrt$1288 0086  
                           _vfpfcnvrt$1289 0088                                 _INTCONbits 000FF2  
                            fp__acende_led 0000                           ?_lcd_draw_string 0032  
                                 isalpha@c 0013                                   isdigit@c 0013  
                   ??_INTERRUPT_Initialize 0013                         lcd_draw_pixel_at@x 001C  
                       lcd_draw_pixel_at@y 001E                                 vsnprintf@f 00B5  
                               vsnprintf@n 00A7                                 vsnprintf@s 00A5  
                 ?_ADC_SetInterruptHandler 0013                              _lcd_draw_char 24DC  
                                snprintf@n 00BD                                  snprintf@s 00BB  
                            _lcd_draw_line 2656                                   intlevel2 0000  
                           _lcd_set_cursor 35B8                          lcd_set_cursor_x@x 0016  
                        lcd_set_cursor_y@y 0016                                   islower@c 0013  
                                 isspace@c 0013                    ?_PIN_MANAGER_Initialize 0001  
          __end_of_ADC_GetConversionResult 3994                                   isupper@c 0013  
                                strncmp@_l 0013                                  strncmp@_r 0015  
                         ??_ADC_Initialize 0015                           _SPI_ExchangeByte 390A  
                  lcd_draw_string@bg_color 003A                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 001B                    lcd_draw_string@fg_color 0038  
                          ?_lcd_draw_pixel 0016                                ??_vfpfcnvrt 0039  
                                 stoa@nuls 0021                            ___aomod@counter 0023  
                           _vsnprintf$1989 00B1                                   strncmp@l 001A  
                                 strncmp@n 0017                                   strncmp@r 001C  
                                 toupper@c 0019                                _SSPCON1bits 000FC6  
                   __end_of_lcd_set_cursor 35FA                             ?_lcd_draw_char 001C  
                           ?_lcd_draw_line 0022                               ___aodiv@sign 0024  
           __end_of_PIN_MANAGER_Initialize 352E                                ??_vsnprintf 00AD  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 393C  
               __size_of_ADC_GetConversion 002C                               ___aomod@sign 0024  
