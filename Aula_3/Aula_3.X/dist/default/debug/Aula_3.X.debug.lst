

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 28 13:37:12 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98  0000                     
    99                           ; Version 2.10
   100                           ; Generated 31/07/2019 GMT
   101                           ; 
   102                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F46K80 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataBANK1
   135  005CD2                     __pidataBANK1:
   136                           	opt callstack 0
   137                           
   138                           ;initializer for stoa@F1174
   139  005CD2  28                 	db	40
   140  005CD3  6E                 	db	110
   141  005CD4  75                 	db	117
   142  005CD5  6C                 	db	108
   143  005CD6  6C                 	db	108
   144  005CD7  29                 	db	41
   145  005CD8  00                 	db	0
   146                           
   147                           	psect	mediumconst
   148  00F1C8                     __pmediumconst:
   149                           	opt callstack 0
   150  00F1C8  00                 	db	0
   151  00F1C9                     _font:
   152                           	opt callstack 0
   153  00F1C9  0004               	dw	4
   154  00F1CB  0000               	dw	0
   155  00F1CD  0000               	dw	0
   156  00F1CF  0000               	dw	0
   157  00F1D1  0000               	dw	0
   158  00F1D3  0000               	dw	0
   159  00F1D5  0000               	dw	0
   160  00F1D7  0000               	dw	0
   161  00F1D9  0000               	dw	0
   162  00F1DB  0003               	dw	3
   163  00F1DD  0000               	dw	0
   164  00F1DF  0000               	dw	0
   165  00F1E1  00FE               	dw	254
   166  00F1E3  001B               	dw	27
   167  00F1E5  0000               	dw	0
   168  00F1E7  0000               	dw	0
   169  00F1E9  0005               	dw	5
   170  00F1EB  001E               	dw	30
   171  00F1ED  0000               	dw	0
   172  00F1EF  0000               	dw	0
   173  00F1F1  0000               	dw	0
   174  00F1F3  0000               	dw	0
   175  00F1F5  0000               	dw	0
   176  00F1F7  001E               	dw	30
   177  00F1F9  0000               	dw	0
   178  00F1FB  0000               	dw	0
   179  00F1FD  0000               	dw	0
   180  00F1FF  000B               	dw	11
   181  00F201  0000               	dw	0
   182  00F203  0000               	dw	0
   183  00F205  0010               	dw	16
   184  00F207  0001               	dw	1
   185  00F209  0010               	dw	16
   186  00F20B  001D               	dw	29
   187  00F20D  00F0               	dw	240
   188  00F20F  0003               	dw	3
   189  00F211  001E               	dw	30
   190  00F213  0001               	dw	1
   191  00F215  0010               	dw	16
   192  00F217  0001               	dw	1
   193  00F219  0010               	dw	16
   194  00F21B  001D               	dw	29
   195  00F21D  00F0               	dw	240
   196  00F21F  0003               	dw	3
   197  00F221  001E               	dw	30
   198  00F223  0001               	dw	1
   199  00F225  0010               	dw	16
   200  00F227  0001               	dw	1
   201  00F229  0000               	dw	0
   202  00F22B  0000               	dw	0
   203  00F22D  0009               	dw	9
   204  00F22F  0000               	dw	0
   205  00F231  0004               	dw	4
   206  00F233  001C               	dw	28
   207  00F235  0008               	dw	8
   208  00F237  0022               	dw	34
   209  00F239  0010               	dw	16
   210  00F23B  0042               	dw	66
   211  00F23D  0010               	dw	16
   212  00F23F  00FF               	dw	255
   213  00F241  007F               	dw	127
   214  00F243  0042               	dw	66
   215  00F245  0010               	dw	16
   216  00F247  0084               	dw	132
   217  00F249  0010               	dw	16
   218  00F24B  0000               	dw	0
   219  00F24D  000F               	dw	15
   220  00F24F  0000               	dw	0
   221  00F251  0000               	dw	0
   222  00F253  000C               	dw	12
   223  00F255  001C               	dw	28
   224  00F257  0000               	dw	0
   225  00F259  0022               	dw	34
   226  00F25B  0010               	dw	16
   227  00F25D  0022               	dw	34
   228  00F25F  0008               	dw	8
   229  00F261  0022               	dw	34
   230  00F263  0006               	dw	6
   231  00F265  001C               	dw	28
   232  00F267  0001               	dw	1
   233  00F269  00C0               	dw	192
   234  00F26B  0000               	dw	0
   235  00F26D  0020               	dw	32
   236  00F26F  000E               	dw	14
   237  00F271  0018               	dw	24
   238  00F273  0011               	dw	17
   239  00F275  0004               	dw	4
   240  00F277  0011               	dw	17
   241  00F279  0002               	dw	2
   242  00F27B  0011               	dw	17
   243  00F27D  0000               	dw	0
   244  00F27F  000E               	dw	14
   245  00F281  0000               	dw	0
   246  00F283  0000               	dw	0
   247  00F285  000B               	dw	11
   248  00F287  0000               	dw	0
   249  00F289  0000               	dw	0
   250  00F28B  0000               	dw	0
   251  00F28D  000E               	dw	14
   252  00F28F  001C               	dw	28
   253  00F291  0011               	dw	17
   254  00F293  00A2               	dw	162
   255  00F295  0010               	dw	16
   256  00F297  00C2               	dw	194
   257  00F299  0010               	dw	16
   258  00F29B  0022               	dw	34
   259  00F29D  0011               	dw	17
   260  00F29F  001C               	dw	28
   261  00F2A1  000A               	dw	10
   262  00F2A3  0000               	dw	0
   263  00F2A5  000C               	dw	12
   264  00F2A7  0000               	dw	0
   265  00F2A9  000C               	dw	12
   266  00F2AB  0000               	dw	0
   267  00F2AD  0012               	dw	18
   268  00F2AF  0000               	dw	0
   269  00F2B1  0000               	dw	0
   270  00F2B3  0003               	dw	3
   271  00F2B5  0000               	dw	0
   272  00F2B7  0000               	dw	0
   273  00F2B9  001E               	dw	30
   274  00F2BB  0000               	dw	0
   275  00F2BD  0000               	dw	0
   276  00F2BF  0000               	dw	0
   277  00F2C1  0006               	dw	6
   278  00F2C3  0000               	dw	0
   279  00F2C5  0000               	dw	0
   280  00F2C7  0000               	dw	0
   281  00F2C9  0000               	dw	0
   282  00F2CB  00E0               	dw	224
   283  00F2CD  001F               	dw	31
   284  00F2CF  001C               	dw	28
   285  00F2D1  0060               	dw	96
   286  00F2D3  0002               	dw	2
   287  00F2D5  0080               	dw	128
   288  00F2D7  0000               	dw	0
   289  00F2D9  0000               	dw	0
   290  00F2DB  0004               	dw	4
   291  00F2DD  0000               	dw	0
   292  00F2DF  0000               	dw	0
   293  00F2E1  0006               	dw	6
   294  00F2E3  00C0               	dw	192
   295  00F2E5  00F8               	dw	248
   296  00F2E7  003F               	dw	63
   297  00F2E9  0000               	dw	0
   298  00F2EB  0000               	dw	0
   299  00F2ED  0006               	dw	6
   300  00F2EF  0024               	dw	36
   301  00F2F1  0000               	dw	0
   302  00F2F3  0018               	dw	24
   303  00F2F5  0000               	dw	0
   304  00F2F7  007E               	dw	126
   305  00F2F9  0000               	dw	0
   306  00F2FB  0018               	dw	24
   307  00F2FD  0000               	dw	0
   308  00F2FF  0024               	dw	36
   309  00F301  0000               	dw	0
   310  00F303  0000               	dw	0
   311  00F305  0000               	dw	0
   312  00F307  0009               	dw	9
   313  00F309  0000               	dw	0
   314  00F30B  0000               	dw	0
   315  00F30D  0080               	dw	128
   316  00F30F  0000               	dw	0
   317  00F311  0080               	dw	128
   318  00F313  0000               	dw	0
   319  00F315  0080               	dw	128
   320  00F317  0000               	dw	0
   321  00F319  00F0               	dw	240
   322  00F31B  0007               	dw	7
   323  00F31D  0080               	dw	128
   324  00F31F  0000               	dw	0
   325  00F321  0080               	dw	128
   326  00F323  0000               	dw	0
   327  00F325  0080               	dw	128
   328  00F327  0000               	dw	0
   329  00F329  0000               	dw	0
   330  00F32B  0000               	dw	0
   331  00F32D  0004               	dw	4
   332  00F32F  0000               	dw	0
   333  00F331  0000               	dw	0
   334  00F333  0000               	dw	0
   335  00F335  0060               	dw	96
   336  00F337  0000               	dw	0
   337  00F339  0018               	dw	24
   338  00F33B  0000               	dw	0
   339  00F33D  0000               	dw	0
   340  00F33F  0005               	dw	5
   341  00F341  0000               	dw	0
   342  00F343  0001               	dw	1
   343  00F345  0000               	dw	0
   344  00F347  0001               	dw	1
   345  00F349  0000               	dw	0
   346  00F34B  0001               	dw	1
   347  00F34D  0000               	dw	0
   348  00F34F  0001               	dw	1
   349  00F351  0000               	dw	0
   350  00F353  0000               	dw	0
   351  00F355  0004               	dw	4
   352  00F357  0000               	dw	0
   353  00F359  0000               	dw	0
   354  00F35B  0000               	dw	0
   355  00F35D  0018               	dw	24
   356  00F35F  0000               	dw	0
   357  00F361  0018               	dw	24
   358  00F363  0000               	dw	0
   359  00F365  0000               	dw	0
   360  00F367  0008               	dw	8
   361  00F369  0000               	dw	0
   362  00F36B  0000               	dw	0
   363  00F36D  0000               	dw	0
   364  00F36F  0040               	dw	64
   365  00F371  0000               	dw	0
   366  00F373  0038               	dw	56
   367  00F375  0000               	dw	0
   368  00F377  0007               	dw	7
   369  00F379  00E0               	dw	224
   370  00F37B  0000               	dw	0
   371  00F37D  001C               	dw	28
   372  00F37F  0000               	dw	0
   373  00F381  0002               	dw	2
   374  00F383  0000               	dw	0
   375  00F385  0000               	dw	0
   376  00F387  0000               	dw	0
   377  00F389  0009               	dw	9
   378  00F38B  00F8               	dw	248
   379  00F38D  0007               	dw	7
   380  00F38F  0004               	dw	4
   381  00F391  0008               	dw	8
   382  00F393  0002               	dw	2
   383  00F395  0010               	dw	16
   384  00F397  0002               	dw	2
   385  00F399  0010               	dw	16
   386  00F39B  0002               	dw	2
   387  00F39D  0010               	dw	16
   388  00F39F  0002               	dw	2
   389  00F3A1  0010               	dw	16
   390  00F3A3  0004               	dw	4
   391  00F3A5  0008               	dw	8
   392  00F3A7  00F8               	dw	248
   393  00F3A9  0007               	dw	7
   394  00F3AB  0000               	dw	0
   395  00F3AD  0000               	dw	0
   396  00F3AF  0006               	dw	6
   397  00F3B1  0000               	dw	0
   398  00F3B3  0000               	dw	0
   399  00F3B5  0000               	dw	0
   400  00F3B7  0000               	dw	0
   401  00F3B9  0002               	dw	2
   402  00F3BB  0000               	dw	0
   403  00F3BD  0002               	dw	2
   404  00F3BF  0000               	dw	0
   405  00F3C1  00FE               	dw	254
   406  00F3C3  001F               	dw	31
   407  00F3C5  0000               	dw	0
   408  00F3C7  0000               	dw	0
   409  00F3C9  0009               	dw	9
   410  00F3CB  0018               	dw	24
   411  00F3CD  0010               	dw	16
   412  00F3CF  0004               	dw	4
   413  00F3D1  0018               	dw	24
   414  00F3D3  0002               	dw	2
   415  00F3D5  0014               	dw	20
   416  00F3D7  0002               	dw	2
   417  00F3D9  0012               	dw	18
   418  00F3DB  0002               	dw	2
   419  00F3DD  0011               	dw	17
   420  00F3DF  0082               	dw	130
   421  00F3E1  0010               	dw	16
   422  00F3E3  0044               	dw	68
   423  00F3E5  0010               	dw	16
   424  00F3E7  0038               	dw	56
   425  00F3E9  0010               	dw	16
   426  00F3EB  0000               	dw	0
   427  00F3ED  0000               	dw	0
   428  00F3EF  0009               	dw	9
   429  00F3F1  0008               	dw	8
   430  00F3F3  000C               	dw	12
   431  00F3F5  0004               	dw	4
   432  00F3F7  0010               	dw	16
   433  00F3F9  0002               	dw	2
   434  00F3FB  0010               	dw	16
   435  00F3FD  0042               	dw	66
   436  00F3FF  0010               	dw	16
   437  00F401  0042               	dw	66
   438  00F403  0010               	dw	16
   439  00F405  0044               	dw	68
   440  00F407  0010               	dw	16
   441  00F409  00B8               	dw	184
   442  00F40B  0008               	dw	8
   443  00F40D  0000               	dw	0
   444  00F40F  0007               	dw	7
   445  00F411  0000               	dw	0
   446  00F413  0000               	dw	0
   447  00F415  0009               	dw	9
   448  00F417  0000               	dw	0
   449  00F419  0002               	dw	2
   450  00F41B  0000               	dw	0
   451  00F41D  0003               	dw	3
   452  00F41F  0080               	dw	128
   453  00F421  0002               	dw	2
   454  00F423  0060               	dw	96
   455  00F425  0002               	dw	2
   456  00F427  0010               	dw	16
   457  00F429  0002               	dw	2
   458  00F42B  0008               	dw	8
   459  00F42D  0002               	dw	2
   460  00F42F  00FE               	dw	254
   461  00F431  001F               	dw	31
   462  00F433  0000               	dw	0
   463  00F435  0002               	dw	2
   464  00F437  0000               	dw	0
   465  00F439  0000               	dw	0
   466  00F43B  0009               	dw	9
   467  00F43D  0000               	dw	0
   468  00F43F  0004               	dw	4
   469  00F441  0070               	dw	112
   470  00F443  0008               	dw	8
   471  00F445  002E               	dw	46
   472  00F447  0010               	dw	16
   473  00F449  0022               	dw	34
   474  00F44B  0010               	dw	16
   475  00F44D  0022               	dw	34
   476  00F44F  0010               	dw	16
   477  00F451  0022               	dw	34
   478  00F453  0010               	dw	16
   479  00F455  0042               	dw	66
   480  00F457  0008               	dw	8
   481  00F459  0082               	dw	130
   482  00F45B  0007               	dw	7
   483  00F45D  0000               	dw	0
   484  00F45F  0000               	dw	0
   485  00F461  0009               	dw	9
   486  00F463  0000               	dw	0
   487  00F465  0000               	dw	0
   488  00F467  0000               	dw	0
   489  00F469  0007               	dw	7
   490  00F46B  00C0               	dw	192
   491  00F46D  0008               	dw	8
   492  00F46F  0060               	dw	96
   493  00F471  0010               	dw	16
   494  00F473  0058               	dw	88
   495  00F475  0010               	dw	16
   496  00F477  0044               	dw	68
   497  00F479  0010               	dw	16
   498  00F47B  0082               	dw	130
   499  00F47D  0008               	dw	8
   500  00F47F  0000               	dw	0
   501  00F481  0007               	dw	7
   502  00F483  0000               	dw	0
   503  00F485  0000               	dw	0
   504  00F487  0009               	dw	9
   505  00F489  0000               	dw	0
   506  00F48B  0000               	dw	0
   507  00F48D  0002               	dw	2
   508  00F48F  0010               	dw	16
   509  00F491  0002               	dw	2
   510  00F493  000C               	dw	12
   511  00F495  0002               	dw	2
   512  00F497  0003               	dw	3
   513  00F499  00C2               	dw	194
   514  00F49B  0000               	dw	0
   515  00F49D  0032               	dw	50
   516  00F49F  0000               	dw	0
   517  00F4A1  000E               	dw	14
   518  00F4A3  0000               	dw	0
   519  00F4A5  0002               	dw	2
   520  00F4A7  0000               	dw	0
   521  00F4A9  0000               	dw	0
   522  00F4AB  0000               	dw	0
   523  00F4AD  0009               	dw	9
   524  00F4AF  0000               	dw	0
   525  00F4B1  0007               	dw	7
   526  00F4B3  0098               	dw	152
   527  00F4B5  0008               	dw	8
   528  00F4B7  0064               	dw	100
   529  00F4B9  0010               	dw	16
   530  00F4BB  0042               	dw	66
   531  00F4BD  0010               	dw	16
   532  00F4BF  0042               	dw	66
   533  00F4C1  0010               	dw	16
   534  00F4C3  0064               	dw	100
   535  00F4C5  0010               	dw	16
   536  00F4C7  0098               	dw	152
   537  00F4C9  0008               	dw	8
   538  00F4CB  0000               	dw	0
   539  00F4CD  0007               	dw	7
   540  00F4CF  0000               	dw	0
   541  00F4D1  0000               	dw	0
   542  00F4D3  0009               	dw	9
   543  00F4D5  0000               	dw	0
   544  00F4D7  0000               	dw	0
   545  00F4D9  0038               	dw	56
   546  00F4DB  0000               	dw	0
   547  00F4DD  0044               	dw	68
   548  00F4DF  0010               	dw	16
   549  00F4E1  0082               	dw	130
   550  00F4E3  0008               	dw	8
   551  00F4E5  0082               	dw	130
   552  00F4E7  0004               	dw	4
   553  00F4E9  0082               	dw	130
   554  00F4EB  0003               	dw	3
   555  00F4ED  0084               	dw	132
   556  00F4EF  0000               	dw	0
   557  00F4F1  0078               	dw	120
   558  00F4F3  0000               	dw	0
   559  00F4F5  0000               	dw	0
   560  00F4F7  0000               	dw	0
   561  00F4F9  0004               	dw	4
   562  00F4FB  0000               	dw	0
   563  00F4FD  0000               	dw	0
   564  00F4FF  0030               	dw	48
   565  00F501  0018               	dw	24
   566  00F503  0030               	dw	48
   567  00F505  0018               	dw	24
   568  00F507  0000               	dw	0
   569  00F509  0000               	dw	0
   570  00F50B  0004               	dw	4
   571  00F50D  0000               	dw	0
   572  00F50F  0000               	dw	0
   573  00F511  0030               	dw	48
   574  00F513  0060               	dw	96
   575  00F515  0030               	dw	48
   576  00F517  0018               	dw	24
   577  00F519  0000               	dw	0
   578  00F51B  0000               	dw	0
   579  00F51D  000A               	dw	10
   580  00F51F  0000               	dw	0
   581  00F521  0000               	dw	0
   582  00F523  0080               	dw	128
   583  00F525  0000               	dw	0
   584  00F527  0080               	dw	128
   585  00F529  0000               	dw	0
   586  00F52B  0040               	dw	64
   587  00F52D  0001               	dw	1
   588  00F52F  0020               	dw	32
   589  00F531  0002               	dw	2
   590  00F533  0020               	dw	32
   591  00F535  0002               	dw	2
   592  00F537  0010               	dw	16
   593  00F539  0004               	dw	4
   594  00F53B  0010               	dw	16
   595  00F53D  0004               	dw	4
   596  00F53F  0008               	dw	8
   597  00F541  0008               	dw	8
   598  00F543  0000               	dw	0
   599  00F545  0000               	dw	0
   600  00F547  000A               	dw	10
   601  00F549  0000               	dw	0
   602  00F54B  0000               	dw	0
   603  00F54D  0020               	dw	32
   604  00F54F  0001               	dw	1
   605  00F551  0020               	dw	32
   606  00F553  0001               	dw	1
   607  00F555  0020               	dw	32
   608  00F557  0001               	dw	1
   609  00F559  0020               	dw	32
   610  00F55B  0001               	dw	1
   611  00F55D  0020               	dw	32
   612  00F55F  0001               	dw	1
   613  00F561  0020               	dw	32
   614  00F563  0001               	dw	1
   615  00F565  0020               	dw	32
   616  00F567  0001               	dw	1
   617  00F569  0020               	dw	32
   618  00F56B  0001               	dw	1
   619  00F56D  0000               	dw	0
   620  00F56F  0000               	dw	0
   621  00F571  000A               	dw	10
   622  00F573  0000               	dw	0
   623  00F575  0000               	dw	0
   624  00F577  0008               	dw	8
   625  00F579  0008               	dw	8
   626  00F57B  0010               	dw	16
   627  00F57D  0004               	dw	4
   628  00F57F  0010               	dw	16
   629  00F581  0004               	dw	4
   630  00F583  0020               	dw	32
   631  00F585  0002               	dw	2
   632  00F587  0020               	dw	32
   633  00F589  0002               	dw	2
   634  00F58B  0040               	dw	64
   635  00F58D  0001               	dw	1
   636  00F58F  0080               	dw	128
   637  00F591  0000               	dw	0
   638  00F593  0080               	dw	128
   639  00F595  0000               	dw	0
   640  00F597  0000               	dw	0
   641  00F599  0000               	dw	0
   642  00F59B  0008               	dw	8
   643  00F59D  0000               	dw	0
   644  00F59F  0000               	dw	0
   645  00F5A1  000C               	dw	12
   646  00F5A3  0000               	dw	0
   647  00F5A5  0082               	dw	130
   648  00F5A7  0001               	dw	1
   649  00F5A9  0042               	dw	66
   650  00F5AB  0002               	dw	2
   651  00F5AD  0022               	dw	34
   652  00F5AF  001A               	dw	26
   653  00F5B1  0022               	dw	34
   654  00F5B3  001A               	dw	26
   655  00F5B5  009C               	dw	156
   656  00F5B7  0001               	dw	1
   657  00F5B9  0000               	dw	0
   658  00F5BB  0000               	dw	0
   659  00F5BD  000E               	dw	14
   660  00F5BF  0000               	dw	0
   661  00F5C1  0000               	dw	0
   662  00F5C3  00F0               	dw	240
   663  00F5C5  0003               	dw	3
   664  00F5C7  0008               	dw	8
   665  00F5C9  0004               	dw	4
   666  00F5CB  0004               	dw	4
   667  00F5CD  0008               	dw	8
   668  00F5CF  00C2               	dw	194
   669  00F5D1  0011               	dw	17
   670  00F5D3  0022               	dw	34
   671  00F5D5  0012               	dw	18
   672  00F5D7  0012               	dw	18
   673  00F5D9  0012               	dw	18
   674  00F5DB  0012               	dw	18
   675  00F5DD  0012               	dw	18
   676  00F5DF  00E2               	dw	226
   677  00F5E1  0011               	dw	17
   678  00F5E3  0012               	dw	18
   679  00F5E5  0012               	dw	18
   680  00F5E7  0004               	dw	4
   681  00F5E9  0012               	dw	18
   682  00F5EB  0008               	dw	8
   683  00F5ED  0009               	dw	9
   684  00F5EF  00F0               	dw	240
   685  00F5F1  0004               	dw	4
   686  00F5F3  0000               	dw	0
   687  00F5F5  0000               	dw	0
   688  00F5F7  000D               	dw	13
   689  00F5F9  0000               	dw	0
   690  00F5FB  0000               	dw	0
   691  00F5FD  0000               	dw	0
   692  00F5FF  0010               	dw	16
   693  00F601  0000               	dw	0
   694  00F603  000E               	dw	14
   695  00F605  0080               	dw	128
   696  00F607  0001               	dw	1
   697  00F609  0060               	dw	96
   698  00F60B  0001               	dw	1
   699  00F60D  001C               	dw	28
   700  00F60F  0001               	dw	1
   701  00F611  0002               	dw	2
   702  00F613  0001               	dw	1
   703  00F615  001C               	dw	28
   704  00F617  0001               	dw	1
   705  00F619  0060               	dw	96
   706  00F61B  0001               	dw	1
   707  00F61D  0080               	dw	128
   708  00F61F  0001               	dw	1
   709  00F621  0000               	dw	0
   710  00F623  000E               	dw	14
   711  00F625  0000               	dw	0
   712  00F627  0010               	dw	16
   713  00F629  0000               	dw	0
   714  00F62B  0000               	dw	0
   715  00F62D  0009               	dw	9
   716  00F62F  0000               	dw	0
   717  00F631  0000               	dw	0
   718  00F633  0000               	dw	0
   719  00F635  0000               	dw	0
   720  00F637  00FE               	dw	254
   721  00F639  001F               	dw	31
   722  00F63B  0042               	dw	66
   723  00F63D  0010               	dw	16
   724  00F63F  0042               	dw	66
   725  00F641  0010               	dw	16
   726  00F643  0064               	dw	100
   727  00F645  0010               	dw	16
   728  00F647  0098               	dw	152
   729  00F649  0008               	dw	8
   730  00F64B  0000               	dw	0
   731  00F64D  0007               	dw	7
   732  00F64F  0000               	dw	0
   733  00F651  0000               	dw	0
   734  00F653  000D               	dw	13
   735  00F655  0000               	dw	0
   736  00F657  0000               	dw	0
   737  00F659  00F0               	dw	240
   738  00F65B  0003               	dw	3
   739  00F65D  0008               	dw	8
   740  00F65F  0004               	dw	4
   741  00F661  0004               	dw	4
   742  00F663  0008               	dw	8
   743  00F665  0002               	dw	2
   744  00F667  0010               	dw	16
   745  00F669  0002               	dw	2
   746  00F66B  0010               	dw	16
   747  00F66D  0002               	dw	2
   748  00F66F  0010               	dw	16
   749  00F671  0002               	dw	2
   750  00F673  0010               	dw	16
   751  00F675  0002               	dw	2
   752  00F677  0010               	dw	16
   753  00F679  0004               	dw	4
   754  00F67B  0008               	dw	8
   755  00F67D  0004               	dw	4
   756  00F67F  0008               	dw	8
   757  00F681  0008               	dw	8
   758  00F683  0004               	dw	4
   759  00F685  0000               	dw	0
   760  00F687  0000               	dw	0
   761  00F689  000C               	dw	12
   762  00F68B  0000               	dw	0
   763  00F68D  0000               	dw	0
   764  00F68F  0000               	dw	0
   765  00F691  0000               	dw	0
   766  00F693  00FE               	dw	254
   767  00F695  001F               	dw	31
   768  00F697  0002               	dw	2
   769  00F699  0010               	dw	16
   770  00F69B  0002               	dw	2
   771  00F69D  0010               	dw	16
   772  00F69F  0002               	dw	2
   773  00F6A1  0010               	dw	16
   774  00F6A3  0002               	dw	2
   775  00F6A5  0010               	dw	16
   776  00F6A7  0002               	dw	2
   777  00F6A9  0010               	dw	16
   778  00F6AB  0004               	dw	4
   779  00F6AD  0008               	dw	8
   780  00F6AF  0008               	dw	8
   781  00F6B1  0004               	dw	4
   782  00F6B3  00F0               	dw	240
   783  00F6B5  0003               	dw	3
   784  00F6B7  0000               	dw	0
   785  00F6B9  0000               	dw	0
   786  00F6BB  0009               	dw	9
   787  00F6BD  0000               	dw	0
   788  00F6BF  0000               	dw	0
   789  00F6C1  0000               	dw	0
   790  00F6C3  0000               	dw	0
   791  00F6C5  00FE               	dw	254
   792  00F6C7  001F               	dw	31
   793  00F6C9  0042               	dw	66
   794  00F6CB  0010               	dw	16
   795  00F6CD  0042               	dw	66
   796  00F6CF  0010               	dw	16
   797  00F6D1  0042               	dw	66
   798  00F6D3  0010               	dw	16
   799  00F6D5  0042               	dw	66
   800  00F6D7  0010               	dw	16
   801  00F6D9  0042               	dw	66
   802  00F6DB  0010               	dw	16
   803  00F6DD  0000               	dw	0
   804  00F6DF  0000               	dw	0
   805  00F6E1  0008               	dw	8
   806  00F6E3  0000               	dw	0
   807  00F6E5  0000               	dw	0
   808  00F6E7  0000               	dw	0
   809  00F6E9  0000               	dw	0
   810  00F6EB  00FE               	dw	254
   811  00F6ED  001F               	dw	31
   812  00F6EF  0042               	dw	66
   813  00F6F1  0000               	dw	0
   814  00F6F3  0042               	dw	66
   815  00F6F5  0000               	dw	0
   816  00F6F7  0042               	dw	66
   817  00F6F9  0000               	dw	0
   818  00F6FB  0042               	dw	66
   819  00F6FD  0000               	dw	0
   820  00F6FF  0000               	dw	0
   821  00F701  0000               	dw	0
   822  00F703  000E               	dw	14
   823  00F705  0000               	dw	0
   824  00F707  0000               	dw	0
   825  00F709  00F0               	dw	240
   826  00F70B  0003               	dw	3
   827  00F70D  0008               	dw	8
   828  00F70F  0004               	dw	4
   829  00F711  0004               	dw	4
   830  00F713  0008               	dw	8
   831  00F715  0002               	dw	2
   832  00F717  0010               	dw	16
   833  00F719  0002               	dw	2
   834  00F71B  0010               	dw	16
   835  00F71D  0002               	dw	2
   836  00F71F  0010               	dw	16
   837  00F721  0002               	dw	2
   838  00F723  0010               	dw	16
   839  00F725  0082               	dw	130
   840  00F727  0010               	dw	16
   841  00F729  0084               	dw	132
   842  00F72B  0010               	dw	16
   843  00F72D  0084               	dw	132
   844  00F72F  0008               	dw	8
   845  00F731  0088               	dw	136
   846  00F733  0004               	dw	4
   847  00F735  0080               	dw	128
   848  00F737  0003               	dw	3
   849  00F739  0000               	dw	0
   850  00F73B  0000               	dw	0
   851  00F73D  000A               	dw	10
   852  00F73F  0000               	dw	0
   853  00F741  0000               	dw	0
   854  00F743  0000               	dw	0
   855  00F745  0000               	dw	0
   856  00F747  00FE               	dw	254
   857  00F749  001F               	dw	31
   858  00F74B  0040               	dw	64
   859  00F74D  0000               	dw	0
   860  00F74F  0040               	dw	64
   861  00F751  0000               	dw	0
   862  00F753  0040               	dw	64
   863  00F755  0000               	dw	0
   864  00F757  0040               	dw	64
   865  00F759  0000               	dw	0
   866  00F75B  0040               	dw	64
   867  00F75D  0000               	dw	0
   868  00F75F  00FE               	dw	254
   869  00F761  001F               	dw	31
   870  00F763  0000               	dw	0
   871  00F765  0000               	dw	0
   872  00F767  0004               	dw	4
   873  00F769  0000               	dw	0
   874  00F76B  0000               	dw	0
   875  00F76D  0000               	dw	0
   876  00F76F  0000               	dw	0
   877  00F771  00FE               	dw	254
   878  00F773  001F               	dw	31
   879  00F775  0000               	dw	0
   880  00F777  0000               	dw	0
   881  00F779  0007               	dw	7
   882  00F77B  0000               	dw	0
   883  00F77D  0000               	dw	0
   884  00F77F  0000               	dw	0
   885  00F781  0008               	dw	8
   886  00F783  0000               	dw	0
   887  00F785  0010               	dw	16
   888  00F787  0000               	dw	0
   889  00F789  0010               	dw	16
   890  00F78B  0000               	dw	0
   891  00F78D  0008               	dw	8
   892  00F78F  00FE               	dw	254
   893  00F791  0007               	dw	7
   894  00F793  0000               	dw	0
   895  00F795  0000               	dw	0
   896  00F797  0009               	dw	9
   897  00F799  0000               	dw	0
   898  00F79B  0000               	dw	0
   899  00F79D  0000               	dw	0
   900  00F79F  0000               	dw	0
   901  00F7A1  00FE               	dw	254
   902  00F7A3  001F               	dw	31
   903  00F7A5  0060               	dw	96
   904  00F7A7  0000               	dw	0
   905  00F7A9  0090               	dw	144
   906  00F7AB  0001               	dw	1
   907  00F7AD  0008               	dw	8
   908  00F7AF  0002               	dw	2
   909  00F7B1  0004               	dw	4
   910  00F7B3  000C               	dw	12
   911  00F7B5  0002               	dw	2
   912  00F7B7  0010               	dw	16
   913  00F7B9  0000               	dw	0
   914  00F7BB  0000               	dw	0
   915  00F7BD  0008               	dw	8
   916  00F7BF  0000               	dw	0
   917  00F7C1  0000               	dw	0
   918  00F7C3  0000               	dw	0
   919  00F7C5  0000               	dw	0
   920  00F7C7  00FE               	dw	254
   921  00F7C9  001F               	dw	31
   922  00F7CB  0000               	dw	0
   923  00F7CD  0010               	dw	16
   924  00F7CF  0000               	dw	0
   925  00F7D1  0010               	dw	16
   926  00F7D3  0000               	dw	0
   927  00F7D5  0010               	dw	16
   928  00F7D7  0000               	dw	0
   929  00F7D9  0010               	dw	16
   930  00F7DB  0000               	dw	0
   931  00F7DD  0000               	dw	0
   932  00F7DF  000F               	dw	15
   933  00F7E1  0000               	dw	0
   934  00F7E3  0000               	dw	0
   935  00F7E5  0000               	dw	0
   936  00F7E7  001C               	dw	28
   937  00F7E9  00F8               	dw	248
   938  00F7EB  0003               	dw	3
   939  00F7ED  0006               	dw	6
   940  00F7EF  0000               	dw	0
   941  00F7F1  0038               	dw	56
   942  00F7F3  0000               	dw	0
   943  00F7F5  00C0               	dw	192
   944  00F7F7  0001               	dw	1
   945  00F7F9  0000               	dw	0
   946  00F7FB  000E               	dw	14
   947  00F7FD  0000               	dw	0
   948  00F7FF  0010               	dw	16
   949  00F801  0000               	dw	0
   950  00F803  000E               	dw	14
   951  00F805  00C0               	dw	192
   952  00F807  0001               	dw	1
   953  00F809  0038               	dw	56
   954  00F80B  0000               	dw	0
   955  00F80D  0006               	dw	6
   956  00F80F  0000               	dw	0
   957  00F811  00F8               	dw	248
   958  00F813  0003               	dw	3
   959  00F815  0000               	dw	0
   960  00F817  001C               	dw	28
   961  00F819  0000               	dw	0
   962  00F81B  0000               	dw	0
   963  00F81D  000B               	dw	11
   964  00F81F  0000               	dw	0
   965  00F821  0000               	dw	0
   966  00F823  0000               	dw	0
   967  00F825  0000               	dw	0
   968  00F827  00FE               	dw	254
   969  00F829  001F               	dw	31
   970  00F82B  0008               	dw	8
   971  00F82D  0000               	dw	0
   972  00F82F  0030               	dw	48
   973  00F831  0000               	dw	0
   974  00F833  0040               	dw	64
   975  00F835  0000               	dw	0
   976  00F837  0080               	dw	128
   977  00F839  0000               	dw	0
   978  00F83B  0000               	dw	0
   979  00F83D  0003               	dw	3
   980  00F83F  0000               	dw	0
   981  00F841  0004               	dw	4
   982  00F843  00FE               	dw	254
   983  00F845  001F               	dw	31
   984  00F847  0000               	dw	0
   985  00F849  0000               	dw	0
   986  00F84B  000E               	dw	14
   987  00F84D  0000               	dw	0
   988  00F84F  0000               	dw	0
   989  00F851  00F0               	dw	240
   990  00F853  0003               	dw	3
   991  00F855  0008               	dw	8
   992  00F857  0004               	dw	4
   993  00F859  0004               	dw	4
   994  00F85B  0008               	dw	8
   995  00F85D  0002               	dw	2
   996  00F85F  0010               	dw	16
   997  00F861  0002               	dw	2
   998  00F863  0010               	dw	16
   999  00F865  0002               	dw	2
  1000  00F867  0010               	dw	16
  1001  00F869  0002               	dw	2
  1002  00F86B  0010               	dw	16
  1003  00F86D  0002               	dw	2
  1004  00F86F  0010               	dw	16
  1005  00F871  0002               	dw	2
  1006  00F873  0010               	dw	16
  1007  00F875  0004               	dw	4
  1008  00F877  0008               	dw	8
  1009  00F879  0008               	dw	8
  1010  00F87B  0004               	dw	4
  1011  00F87D  00F0               	dw	240
  1012  00F87F  0003               	dw	3
  1013  00F881  0000               	dw	0
  1014  00F883  0000               	dw	0
  1015  00F885  0009               	dw	9
  1016  00F887  0000               	dw	0
  1017  00F889  0000               	dw	0
  1018  00F88B  0000               	dw	0
  1019  00F88D  0000               	dw	0
  1020  00F88F  00FE               	dw	254
  1021  00F891  001F               	dw	31
  1022  00F893  0042               	dw	66
  1023  00F895  0000               	dw	0
  1024  00F897  0042               	dw	66
  1025  00F899  0000               	dw	0
  1026  00F89B  0042               	dw	66
  1027  00F89D  0000               	dw	0
  1028  00F89F  0024               	dw	36
  1029  00F8A1  0000               	dw	0
  1030  00F8A3  0018               	dw	24
  1031  00F8A5  0000               	dw	0
  1032  00F8A7  0000               	dw	0
  1033  00F8A9  0000               	dw	0
  1034  00F8AB  000E               	dw	14
  1035  00F8AD  0000               	dw	0
  1036  00F8AF  0000               	dw	0
  1037  00F8B1  00F0               	dw	240
  1038  00F8B3  0003               	dw	3
  1039  00F8B5  0008               	dw	8
  1040  00F8B7  0004               	dw	4
  1041  00F8B9  0004               	dw	4
  1042  00F8BB  0008               	dw	8
  1043  00F8BD  0002               	dw	2
  1044  00F8BF  0010               	dw	16
  1045  00F8C1  0002               	dw	2
  1046  00F8C3  0010               	dw	16
  1047  00F8C5  0002               	dw	2
  1048  00F8C7  0010               	dw	16
  1049  00F8C9  0002               	dw	2
  1050  00F8CB  0011               	dw	17
  1051  00F8CD  0002               	dw	2
  1052  00F8CF  0012               	dw	18
  1053  00F8D1  0002               	dw	2
  1054  00F8D3  000C               	dw	12
  1055  00F8D5  0004               	dw	4
  1056  00F8D7  0008               	dw	8
  1057  00F8D9  0008               	dw	8
  1058  00F8DB  0016               	dw	22
  1059  00F8DD  00F0               	dw	240
  1060  00F8DF  0021               	dw	33
  1061  00F8E1  0000               	dw	0
  1062  00F8E3  0000               	dw	0
  1063  00F8E5  000A               	dw	10
  1064  00F8E7  0000               	dw	0
  1065  00F8E9  0000               	dw	0
  1066  00F8EB  0000               	dw	0
  1067  00F8ED  0000               	dw	0
  1068  00F8EF  00FE               	dw	254
  1069  00F8F1  001F               	dw	31
  1070  00F8F3  0042               	dw	66
  1071  00F8F5  0000               	dw	0
  1072  00F8F7  00C2               	dw	194
  1073  00F8F9  0000               	dw	0
  1074  00F8FB  0042               	dw	66
  1075  00F8FD  0001               	dw	1
  1076  00F8FF  0042               	dw	66
  1077  00F901  0006               	dw	6
  1078  00F903  0024               	dw	36
  1079  00F905  0008               	dw	8
  1080  00F907  0018               	dw	24
  1081  00F909  0010               	dw	16
  1082  00F90B  0000               	dw	0
  1083  00F90D  0000               	dw	0
  1084  00F90F  0008               	dw	8
  1085  00F911  0000               	dw	0
  1086  00F913  0004               	dw	4
  1087  00F915  0018               	dw	24
  1088  00F917  0008               	dw	8
  1089  00F919  0024               	dw	36
  1090  00F91B  0010               	dw	16
  1091  00F91D  0042               	dw	66
  1092  00F91F  0010               	dw	16
  1093  00F921  0042               	dw	66
  1094  00F923  0010               	dw	16
  1095  00F925  0084               	dw	132
  1096  00F927  0008               	dw	8
  1097  00F929  0008               	dw	8
  1098  00F92B  0007               	dw	7
  1099  00F92D  0000               	dw	0
  1100  00F92F  0000               	dw	0
  1101  00F931  0008               	dw	8
  1102  00F933  0002               	dw	2
  1103  00F935  0000               	dw	0
  1104  00F937  0002               	dw	2
  1105  00F939  0000               	dw	0
  1106  00F93B  0002               	dw	2
  1107  00F93D  0000               	dw	0
  1108  00F93F  00FE               	dw	254
  1109  00F941  001F               	dw	31
  1110  00F943  0002               	dw	2
  1111  00F945  0000               	dw	0
  1112  00F947  0002               	dw	2
  1113  00F949  0000               	dw	0
  1114  00F94B  0002               	dw	2
  1115  00F94D  0000               	dw	0
  1116  00F94F  0000               	dw	0
  1117  00F951  0000               	dw	0
  1118  00F953  000A               	dw	10
  1119  00F955  0000               	dw	0
  1120  00F957  0000               	dw	0
  1121  00F959  0000               	dw	0
  1122  00F95B  0000               	dw	0
  1123  00F95D  00FE               	dw	254
  1124  00F95F  0007               	dw	7
  1125  00F961  0000               	dw	0
  1126  00F963  0008               	dw	8
  1127  00F965  0000               	dw	0
  1128  00F967  0010               	dw	16
  1129  00F969  0000               	dw	0
  1130  00F96B  0010               	dw	16
  1131  00F96D  0000               	dw	0
  1132  00F96F  0010               	dw	16
  1133  00F971  0000               	dw	0
  1134  00F973  0008               	dw	8
  1135  00F975  00FE               	dw	254
  1136  00F977  0007               	dw	7
  1137  00F979  0000               	dw	0
  1138  00F97B  0000               	dw	0
  1139  00F97D  000C               	dw	12
  1140  00F97F  0002               	dw	2
  1141  00F981  0000               	dw	0
  1142  00F983  001C               	dw	28
  1143  00F985  0000               	dw	0
  1144  00F987  0060               	dw	96
  1145  00F989  0000               	dw	0
  1146  00F98B  0080               	dw	128
  1147  00F98D  0001               	dw	1
  1148  00F98F  0000               	dw	0
  1149  00F991  000E               	dw	14
  1150  00F993  0000               	dw	0
  1151  00F995  0010               	dw	16
  1152  00F997  0000               	dw	0
  1153  00F999  000E               	dw	14
  1154  00F99B  0080               	dw	128
  1155  00F99D  0001               	dw	1
  1156  00F99F  0060               	dw	96
  1157  00F9A1  0000               	dw	0
  1158  00F9A3  001C               	dw	28
  1159  00F9A5  0000               	dw	0
  1160  00F9A7  0002               	dw	2
  1161  00F9A9  0000               	dw	0
  1162  00F9AB  0000               	dw	0
  1163  00F9AD  0000               	dw	0
  1164  00F9AF  000F               	dw	15
  1165  00F9B1  0000               	dw	0
  1166  00F9B3  0000               	dw	0
  1167  00F9B5  0006               	dw	6
  1168  00F9B7  0000               	dw	0
  1169  00F9B9  0078               	dw	120
  1170  00F9BB  0000               	dw	0
  1171  00F9BD  0080               	dw	128
  1172  00F9BF  0007               	dw	7
  1173  00F9C1  0000               	dw	0
  1174  00F9C3  0018               	dw	24
  1175  00F9C5  0080               	dw	128
  1176  00F9C7  0007               	dw	7
  1177  00F9C9  0078               	dw	120
  1178  00F9CB  0000               	dw	0
  1179  00F9CD  0006               	dw	6
  1180  00F9CF  0000               	dw	0
  1181  00F9D1  0078               	dw	120
  1182  00F9D3  0000               	dw	0
  1183  00F9D5  0080               	dw	128
  1184  00F9D7  0007               	dw	7
  1185  00F9D9  0000               	dw	0
  1186  00F9DB  0018               	dw	24
  1187  00F9DD  0080               	dw	128
  1188  00F9DF  0007               	dw	7
  1189  00F9E1  0078               	dw	120
  1190  00F9E3  0000               	dw	0
  1191  00F9E5  0006               	dw	6
  1192  00F9E7  0000               	dw	0
  1193  00F9E9  0000               	dw	0
  1194  00F9EB  0000               	dw	0
  1195  00F9ED  0009               	dw	9
  1196  00F9EF  0000               	dw	0
  1197  00F9F1  0000               	dw	0
  1198  00F9F3  0006               	dw	6
  1199  00F9F5  0018               	dw	24
  1200  00F9F7  0008               	dw	8
  1201  00F9F9  0004               	dw	4
  1202  00F9FB  0030               	dw	48
  1203  00F9FD  0003               	dw	3
  1204  00F9FF  00C0               	dw	192
  1205  00FA01  0000               	dw	0
  1206  00FA03  0030               	dw	48
  1207  00FA05  0003               	dw	3
  1208  00FA07  0008               	dw	8
  1209  00FA09  0004               	dw	4
  1210  00FA0B  0006               	dw	6
  1211  00FA0D  0018               	dw	24
  1212  00FA0F  0000               	dw	0
  1213  00FA11  0000               	dw	0
  1214  00FA13  000B               	dw	11
  1215  00FA15  0000               	dw	0
  1216  00FA17  0000               	dw	0
  1217  00FA19  0002               	dw	2
  1218  00FA1B  0000               	dw	0
  1219  00FA1D  0004               	dw	4
  1220  00FA1F  0000               	dw	0
  1221  00FA21  0018               	dw	24
  1222  00FA23  0000               	dw	0
  1223  00FA25  0060               	dw	96
  1224  00FA27  0000               	dw	0
  1225  00FA29  0080               	dw	128
  1226  00FA2B  001F               	dw	31
  1227  00FA2D  0060               	dw	96
  1228  00FA2F  0000               	dw	0
  1229  00FA31  0018               	dw	24
  1230  00FA33  0000               	dw	0
  1231  00FA35  0004               	dw	4
  1232  00FA37  0000               	dw	0
  1233  00FA39  0002               	dw	2
  1234  00FA3B  0000               	dw	0
  1235  00FA3D  0000               	dw	0
  1236  00FA3F  0000               	dw	0
  1237  00FA41  0008               	dw	8
  1238  00FA43  0002               	dw	2
  1239  00FA45  0010               	dw	16
  1240  00FA47  0002               	dw	2
  1241  00FA49  001C               	dw	28
  1242  00FA4B  0002               	dw	2
  1243  00FA4D  0013               	dw	19
  1244  00FA4F  00C2               	dw	194
  1245  00FA51  0010               	dw	16
  1246  00FA53  0032               	dw	50
  1247  00FA55  0010               	dw	16
  1248  00FA57  000E               	dw	14
  1249  00FA59  0010               	dw	16
  1250  00FA5B  0002               	dw	2
  1251  00FA5D  0010               	dw	16
  1252  00FA5F  0000               	dw	0
  1253  00FA61  0000               	dw	0
  1254  00FA63  0006               	dw	6
  1255  00FA65  0000               	dw	0
  1256  00FA67  0000               	dw	0
  1257  00FA69  0000               	dw	0
  1258  00FA6B  0000               	dw	0
  1259  00FA6D  00FE               	dw	254
  1260  00FA6F  00FF               	dw	255
  1261  00FA71  0002               	dw	2
  1262  00FA73  0080               	dw	128
  1263  00FA75  0002               	dw	2
  1264  00FA77  0080               	dw	128
  1265  00FA79  0000               	dw	0
  1266  00FA7B  0000               	dw	0
  1267  00FA7D  000A               	dw	10
  1268  00FA7F  0002               	dw	2
  1269  00FA81  0000               	dw	0
  1270  00FA83  000C               	dw	12
  1271  00FA85  0000               	dw	0
  1272  00FA87  0010               	dw	16
  1273  00FA89  0000               	dw	0
  1274  00FA8B  0060               	dw	96
  1275  00FA8D  0000               	dw	0
  1276  00FA8F  0080               	dw	128
  1277  00FA91  0001               	dw	1
  1278  00FA93  0000               	dw	0
  1279  00FA95  0006               	dw	6
  1280  00FA97  0000               	dw	0
  1281  00FA99  0008               	dw	8
  1282  00FA9B  0000               	dw	0
  1283  00FA9D  0030               	dw	48
  1284  00FA9F  0000               	dw	0
  1285  00FAA1  0040               	dw	64
  1286  00FAA3  0000               	dw	0
  1287  00FAA5  0000               	dw	0
  1288  00FAA7  0005               	dw	5
  1289  00FAA9  0000               	dw	0
  1290  00FAAB  0000               	dw	0
  1291  00FAAD  0002               	dw	2
  1292  00FAAF  0080               	dw	128
  1293  00FAB1  0002               	dw	2
  1294  00FAB3  0080               	dw	128
  1295  00FAB5  00FE               	dw	254
  1296  00FAB7  00FF               	dw	255
  1297  00FAB9  0000               	dw	0
  1298  00FABB  0000               	dw	0
  1299  00FABD  000B               	dw	11
  1300  00FABF  0000               	dw	0
  1301  00FAC1  0000               	dw	0
  1302  00FAC3  0000               	dw	0
  1303  00FAC5  0002               	dw	2
  1304  00FAC7  0080               	dw	128
  1305  00FAC9  0001               	dw	1
  1306  00FACB  0070               	dw	112
  1307  00FACD  0000               	dw	0
  1308  00FACF  000C               	dw	12
  1309  00FAD1  0000               	dw	0
  1310  00FAD3  0002               	dw	2
  1311  00FAD5  0000               	dw	0
  1312  00FAD7  000C               	dw	12
  1313  00FAD9  0000               	dw	0
  1314  00FADB  0070               	dw	112
  1315  00FADD  0000               	dw	0
  1316  00FADF  0080               	dw	128
  1317  00FAE1  0001               	dw	1
  1318  00FAE3  0000               	dw	0
  1319  00FAE5  0002               	dw	2
  1320  00FAE7  0000               	dw	0
  1321  00FAE9  0000               	dw	0
  1322  00FAEB  0009               	dw	9
  1323  00FAED  0000               	dw	0
  1324  00FAEF  0040               	dw	64
  1325  00FAF1  0000               	dw	0
  1326  00FAF3  0040               	dw	64
  1327  00FAF5  0000               	dw	0
  1328  00FAF7  0040               	dw	64
  1329  00FAF9  0000               	dw	0
  1330  00FAFB  0040               	dw	64
  1331  00FAFD  0000               	dw	0
  1332  00FAFF  0040               	dw	64
  1333  00FB01  0000               	dw	0
  1334  00FB03  0040               	dw	64
  1335  00FB05  0000               	dw	0
  1336  00FB07  0040               	dw	64
  1337  00FB09  0000               	dw	0
  1338  00FB0B  0040               	dw	64
  1339  00FB0D  0000               	dw	0
  1340  00FB0F  0000               	dw	0
  1341  00FB11  0005               	dw	5
  1342  00FB13  0000               	dw	0
  1343  00FB15  0000               	dw	0
  1344  00FB17  0000               	dw	0
  1345  00FB19  0000               	dw	0
  1346  00FB1B  0002               	dw	2
  1347  00FB1D  0000               	dw	0
  1348  00FB1F  0004               	dw	4
  1349  00FB21  0000               	dw	0
  1350  00FB23  0000               	dw	0
  1351  00FB25  0000               	dw	0
  1352  00FB27  000B               	dw	11
  1353  00FB29  0000               	dw	0
  1354  00FB2B  0000               	dw	0
  1355  00FB2D  00C0               	dw	192
  1356  00FB2F  0007               	dw	7
  1357  00FB31  0020               	dw	32
  1358  00FB33  0008               	dw	8
  1359  00FB35  0010               	dw	16
  1360  00FB37  0010               	dw	16
  1361  00FB39  0010               	dw	16
  1362  00FB3B  0010               	dw	16
  1363  00FB3D  0010               	dw	16
  1364  00FB3F  0010               	dw	16
  1365  00FB41  0010               	dw	16
  1366  00FB43  0010               	dw	16
  1367  00FB45  0010               	dw	16
  1368  00FB47  0010               	dw	16
  1369  00FB49  0020               	dw	32
  1370  00FB4B  0008               	dw	8
  1371  00FB4D  00F0               	dw	240
  1372  00FB4F  001F               	dw	31
  1373  00FB51  0000               	dw	0
  1374  00FB53  0000               	dw	0
  1375  00FB55  000B               	dw	11
  1376  00FB57  0000               	dw	0
  1377  00FB59  0000               	dw	0
  1378  00FB5B  00FE               	dw	254
  1379  00FB5D  001F               	dw	31
  1380  00FB5F  0020               	dw	32
  1381  00FB61  0008               	dw	8
  1382  00FB63  0010               	dw	16
  1383  00FB65  0010               	dw	16
  1384  00FB67  0010               	dw	16
  1385  00FB69  0010               	dw	16
  1386  00FB6B  0010               	dw	16
  1387  00FB6D  0010               	dw	16
  1388  00FB6F  0010               	dw	16
  1389  00FB71  0010               	dw	16
  1390  00FB73  0010               	dw	16
  1391  00FB75  0010               	dw	16
  1392  00FB77  0020               	dw	32
  1393  00FB79  0008               	dw	8
  1394  00FB7B  00C0               	dw	192
  1395  00FB7D  0007               	dw	7
  1396  00FB7F  0000               	dw	0
  1397  00FB81  0000               	dw	0
  1398  00FB83  000A               	dw	10
  1399  00FB85  0000               	dw	0
  1400  00FB87  0000               	dw	0
  1401  00FB89  00C0               	dw	192
  1402  00FB8B  0007               	dw	7
  1403  00FB8D  0020               	dw	32
  1404  00FB8F  0008               	dw	8
  1405  00FB91  0010               	dw	16
  1406  00FB93  0010               	dw	16
  1407  00FB95  0010               	dw	16
  1408  00FB97  0010               	dw	16
  1409  00FB99  0010               	dw	16
  1410  00FB9B  0010               	dw	16
  1411  00FB9D  0010               	dw	16
  1412  00FB9F  0010               	dw	16
  1413  00FBA1  0020               	dw	32
  1414  00FBA3  0008               	dw	8
  1415  00FBA5  0040               	dw	64
  1416  00FBA7  0004               	dw	4
  1417  00FBA9  0000               	dw	0
  1418  00FBAB  0000               	dw	0
  1419  00FBAD  000B               	dw	11
  1420  00FBAF  0000               	dw	0
  1421  00FBB1  0000               	dw	0
  1422  00FBB3  00C0               	dw	192
  1423  00FBB5  0007               	dw	7
  1424  00FBB7  0020               	dw	32
  1425  00FBB9  0008               	dw	8
  1426  00FBBB  0010               	dw	16
  1427  00FBBD  0010               	dw	16
  1428  00FBBF  0010               	dw	16
  1429  00FBC1  0010               	dw	16
  1430  00FBC3  0010               	dw	16
  1431  00FBC5  0010               	dw	16
  1432  00FBC7  0010               	dw	16
  1433  00FBC9  0010               	dw	16
  1434  00FBCB  0010               	dw	16
  1435  00FBCD  0010               	dw	16
  1436  00FBCF  0020               	dw	32
  1437  00FBD1  0008               	dw	8
  1438  00FBD3  00FE               	dw	254
  1439  00FBD5  001F               	dw	31
  1440  00FBD7  0000               	dw	0
  1441  00FBD9  0000               	dw	0
  1442  00FBDB  000A               	dw	10
  1443  00FBDD  0000               	dw	0
  1444  00FBDF  0000               	dw	0
  1445  00FBE1  00C0               	dw	192
  1446  00FBE3  0007               	dw	7
  1447  00FBE5  0020               	dw	32
  1448  00FBE7  0009               	dw	9
  1449  00FBE9  0010               	dw	16
  1450  00FBEB  0011               	dw	17
  1451  00FBED  0010               	dw	16
  1452  00FBEF  0011               	dw	17
  1453  00FBF1  0010               	dw	16
  1454  00FBF3  0011               	dw	17
  1455  00FBF5  0010               	dw	16
  1456  00FBF7  0011               	dw	17
  1457  00FBF9  0020               	dw	32
  1458  00FBFB  0009               	dw	9
  1459  00FBFD  00C0               	dw	192
  1460  00FBFF  0005               	dw	5
  1461  00FC01  0000               	dw	0
  1462  00FC03  0000               	dw	0
  1463  00FC05  0006               	dw	6
  1464  00FC07  0000               	dw	0
  1465  00FC09  0000               	dw	0
  1466  00FC0B  0010               	dw	16
  1467  00FC0D  0000               	dw	0
  1468  00FC0F  00FC               	dw	252
  1469  00FC11  001F               	dw	31
  1470  00FC13  0012               	dw	18
  1471  00FC15  0000               	dw	0
  1472  00FC17  0012               	dw	18
  1473  00FC19  0000               	dw	0
  1474  00FC1B  0000               	dw	0
  1475  00FC1D  0000               	dw	0
  1476  00FC1F  000B               	dw	11
  1477  00FC21  0000               	dw	0
  1478  00FC23  0000               	dw	0
  1479  00FC25  00C0               	dw	192
  1480  00FC27  0027               	dw	39
  1481  00FC29  0020               	dw	32
  1482  00FC2B  0048               	dw	72
  1483  00FC2D  0010               	dw	16
  1484  00FC2F  0090               	dw	144
  1485  00FC31  0010               	dw	16
  1486  00FC33  0090               	dw	144
  1487  00FC35  0010               	dw	16
  1488  00FC37  0090               	dw	144
  1489  00FC39  0010               	dw	16
  1490  00FC3B  0090               	dw	144
  1491  00FC3D  0010               	dw	16
  1492  00FC3F  0090               	dw	144
  1493  00FC41  0020               	dw	32
  1494  00FC43  0048               	dw	72
  1495  00FC45  00F0               	dw	240
  1496  00FC47  003F               	dw	63
  1497  00FC49  0000               	dw	0
  1498  00FC4B  0000               	dw	0
  1499  00FC4D  000A               	dw	10
  1500  00FC4F  0000               	dw	0
  1501  00FC51  0000               	dw	0
  1502  00FC53  00FE               	dw	254
  1503  00FC55  001F               	dw	31
  1504  00FC57  0020               	dw	32
  1505  00FC59  0000               	dw	0
  1506  00FC5B  0010               	dw	16
  1507  00FC5D  0000               	dw	0
  1508  00FC5F  0010               	dw	16
  1509  00FC61  0000               	dw	0
  1510  00FC63  0010               	dw	16
  1511  00FC65  0000               	dw	0
  1512  00FC67  0010               	dw	16
  1513  00FC69  0000               	dw	0
  1514  00FC6B  0020               	dw	32
  1515  00FC6D  0000               	dw	0
  1516  00FC6F  00C0               	dw	192
  1517  00FC71  001F               	dw	31
  1518  00FC73  0000               	dw	0
  1519  00FC75  0000               	dw	0
  1520  00FC77  0003               	dw	3
  1521  00FC79  0000               	dw	0
  1522  00FC7B  0000               	dw	0
  1523  00FC7D  00F6               	dw	246
  1524  00FC7F  001F               	dw	31
  1525  00FC81  0000               	dw	0
  1526  00FC83  0000               	dw	0
  1527  00FC85  0003               	dw	3
  1528  00FC87  0000               	dw	0
  1529  00FC89  0080               	dw	128
  1530  00FC8B  00F6               	dw	246
  1531  00FC8D  007F               	dw	127
  1532  00FC8F  0000               	dw	0
  1533  00FC91  0000               	dw	0
  1534  00FC93  0008               	dw	8
  1535  00FC95  0000               	dw	0
  1536  00FC97  0000               	dw	0
  1537  00FC99  00FE               	dw	254
  1538  00FC9B  001F               	dw	31
  1539  00FC9D  0000               	dw	0
  1540  00FC9F  0001               	dw	1
  1541  00FCA1  0080               	dw	128
  1542  00FCA3  0002               	dw	2
  1543  00FCA5  0040               	dw	64
  1544  00FCA7  0004               	dw	4
  1545  00FCA9  0020               	dw	32
  1546  00FCAB  0008               	dw	8
  1547  00FCAD  0010               	dw	16
  1548  00FCAF  0010               	dw	16
  1549  00FCB1  0000               	dw	0
  1550  00FCB3  0000               	dw	0
  1551  00FCB5  0003               	dw	3
  1552  00FCB7  0000               	dw	0
  1553  00FCB9  0000               	dw	0
  1554  00FCBB  00FE               	dw	254
  1555  00FCBD  001F               	dw	31
  1556  00FCBF  0000               	dw	0
  1557  00FCC1  0000               	dw	0
  1558  00FCC3  000F               	dw	15
  1559  00FCC5  0000               	dw	0
  1560  00FCC7  0000               	dw	0
  1561  00FCC9  00F0               	dw	240
  1562  00FCCB  001F               	dw	31
  1563  00FCCD  0020               	dw	32
  1564  00FCCF  0000               	dw	0
  1565  00FCD1  0010               	dw	16
  1566  00FCD3  0000               	dw	0
  1567  00FCD5  0010               	dw	16
  1568  00FCD7  0000               	dw	0
  1569  00FCD9  0010               	dw	16
  1570  00FCDB  0000               	dw	0
  1571  00FCDD  0020               	dw	32
  1572  00FCDF  0000               	dw	0
  1573  00FCE1  00C0               	dw	192
  1574  00FCE3  001F               	dw	31
  1575  00FCE5  0020               	dw	32
  1576  00FCE7  0000               	dw	0
  1577  00FCE9  0010               	dw	16
  1578  00FCEB  0000               	dw	0
  1579  00FCED  0010               	dw	16
  1580  00FCEF  0000               	dw	0
  1581  00FCF1  0010               	dw	16
  1582  00FCF3  0000               	dw	0
  1583  00FCF5  0020               	dw	32
  1584  00FCF7  0000               	dw	0
  1585  00FCF9  00C0               	dw	192
  1586  00FCFB  001F               	dw	31
  1587  00FCFD  0000               	dw	0
  1588  00FCFF  0000               	dw	0
  1589  00FD01  000A               	dw	10
  1590  00FD03  0000               	dw	0
  1591  00FD05  0000               	dw	0
  1592  00FD07  00F0               	dw	240
  1593  00FD09  001F               	dw	31
  1594  00FD0B  0020               	dw	32
  1595  00FD0D  0000               	dw	0
  1596  00FD0F  0010               	dw	16
  1597  00FD11  0000               	dw	0
  1598  00FD13  0010               	dw	16
  1599  00FD15  0000               	dw	0
  1600  00FD17  0010               	dw	16
  1601  00FD19  0000               	dw	0
  1602  00FD1B  0010               	dw	16
  1603  00FD1D  0000               	dw	0
  1604  00FD1F  0020               	dw	32
  1605  00FD21  0000               	dw	0
  1606  00FD23  00C0               	dw	192
  1607  00FD25  001F               	dw	31
  1608  00FD27  0000               	dw	0
  1609  00FD29  0000               	dw	0
  1610  00FD2B  000A               	dw	10
  1611  00FD2D  0000               	dw	0
  1612  00FD2F  0000               	dw	0
  1613  00FD31  00C0               	dw	192
  1614  00FD33  0007               	dw	7
  1615  00FD35  0020               	dw	32
  1616  00FD37  0008               	dw	8
  1617  00FD39  0010               	dw	16
  1618  00FD3B  0010               	dw	16
  1619  00FD3D  0010               	dw	16
  1620  00FD3F  0010               	dw	16
  1621  00FD41  0010               	dw	16
  1622  00FD43  0010               	dw	16
  1623  00FD45  0010               	dw	16
  1624  00FD47  0010               	dw	16
  1625  00FD49  0020               	dw	32
  1626  00FD4B  0008               	dw	8
  1627  00FD4D  00C0               	dw	192
  1628  00FD4F  0007               	dw	7
  1629  00FD51  0000               	dw	0
  1630  00FD53  0000               	dw	0
  1631  00FD55  000B               	dw	11
  1632  00FD57  0000               	dw	0
  1633  00FD59  0000               	dw	0
  1634  00FD5B  00F0               	dw	240
  1635  00FD5D  00FF               	dw	255
  1636  00FD5F  0020               	dw	32
  1637  00FD61  0008               	dw	8
  1638  00FD63  0010               	dw	16
  1639  00FD65  0010               	dw	16
  1640  00FD67  0010               	dw	16
  1641  00FD69  0010               	dw	16
  1642  00FD6B  0010               	dw	16
  1643  00FD6D  0010               	dw	16
  1644  00FD6F  0010               	dw	16
  1645  00FD71  0010               	dw	16
  1646  00FD73  0010               	dw	16
  1647  00FD75  0010               	dw	16
  1648  00FD77  0020               	dw	32
  1649  00FD79  0008               	dw	8
  1650  00FD7B  00C0               	dw	192
  1651  00FD7D  0007               	dw	7
  1652  00FD7F  0000               	dw	0
  1653  00FD81  0000               	dw	0
  1654  00FD83  000B               	dw	11
  1655  00FD85  0000               	dw	0
  1656  00FD87  0000               	dw	0
  1657  00FD89  00C0               	dw	192
  1658  00FD8B  0007               	dw	7
  1659  00FD8D  0020               	dw	32
  1660  00FD8F  0008               	dw	8
  1661  00FD91  0010               	dw	16
  1662  00FD93  0010               	dw	16
  1663  00FD95  0010               	dw	16
  1664  00FD97  0010               	dw	16
  1665  00FD99  0010               	dw	16
  1666  00FD9B  0010               	dw	16
  1667  00FD9D  0010               	dw	16
  1668  00FD9F  0010               	dw	16
  1669  00FDA1  0010               	dw	16
  1670  00FDA3  0010               	dw	16
  1671  00FDA5  0020               	dw	32
  1672  00FDA7  0008               	dw	8
  1673  00FDA9  00F0               	dw	240
  1674  00FDAB  00FF               	dw	255
  1675  00FDAD  0000               	dw	0
  1676  00FDAF  0000               	dw	0
  1677  00FDB1  0006               	dw	6
  1678  00FDB3  0000               	dw	0
  1679  00FDB5  0000               	dw	0
  1680  00FDB7  00F0               	dw	240
  1681  00FDB9  001F               	dw	31
  1682  00FDBB  0020               	dw	32
  1683  00FDBD  0000               	dw	0
  1684  00FDBF  0010               	dw	16
  1685  00FDC1  0000               	dw	0
  1686  00FDC3  0010               	dw	16
  1687  00FDC5  0000               	dw	0
  1688  00FDC7  0000               	dw	0
  1689  00FDC9  0000               	dw	0
  1690  00FDCB  0006               	dw	6
  1691  00FDCD  0060               	dw	96
  1692  00FDCF  0008               	dw	8
  1693  00FDD1  0090               	dw	144
  1694  00FDD3  0010               	dw	16
  1695  00FDD5  0010               	dw	16
  1696  00FDD7  0011               	dw	17
  1697  00FDD9  0010               	dw	16
  1698  00FDDB  0011               	dw	17
  1699  00FDDD  0020               	dw	32
  1700  00FDDF  000E               	dw	14
  1701  00FDE1  0000               	dw	0
  1702  00FDE3  0000               	dw	0
  1703  00FDE5  0007               	dw	7
  1704  00FDE7  0000               	dw	0
  1705  00FDE9  0000               	dw	0
  1706  00FDEB  0010               	dw	16
  1707  00FDED  0000               	dw	0
  1708  00FDEF  0010               	dw	16
  1709  00FDF1  0000               	dw	0
  1710  00FDF3  00FE               	dw	254
  1711  00FDF5  001F               	dw	31
  1712  00FDF7  0010               	dw	16
  1713  00FDF9  0000               	dw	0
  1714  00FDFB  0010               	dw	16
  1715  00FDFD  0000               	dw	0
  1716  00FDFF  0000               	dw	0
  1717  00FE01  0000               	dw	0
  1718  00FE03  000A               	dw	10
  1719  00FE05  0000               	dw	0
  1720  00FE07  0000               	dw	0
  1721  00FE09  00F0               	dw	240
  1722  00FE0B  0007               	dw	7
  1723  00FE0D  0000               	dw	0
  1724  00FE0F  0008               	dw	8
  1725  00FE11  0000               	dw	0
  1726  00FE13  0010               	dw	16
  1727  00FE15  0000               	dw	0
  1728  00FE17  0010               	dw	16
  1729  00FE19  0000               	dw	0
  1730  00FE1B  0010               	dw	16
  1731  00FE1D  0000               	dw	0
  1732  00FE1F  0010               	dw	16
  1733  00FE21  0000               	dw	0
  1734  00FE23  0008               	dw	8
  1735  00FE25  00F0               	dw	240
  1736  00FE27  0007               	dw	7
  1737  00FE29  0000               	dw	0
  1738  00FE2B  0000               	dw	0
  1739  00FE2D  000A               	dw	10
  1740  00FE2F  0010               	dw	16
  1741  00FE31  0000               	dw	0
  1742  00FE33  0060               	dw	96
  1743  00FE35  0000               	dw	0
  1744  00FE37  0080               	dw	128
  1745  00FE39  0003               	dw	3
  1746  00FE3B  0000               	dw	0
  1747  00FE3D  000C               	dw	12
  1748  00FE3F  0000               	dw	0
  1749  00FE41  0010               	dw	16
  1750  00FE43  0000               	dw	0
  1751  00FE45  000C               	dw	12
  1752  00FE47  0080               	dw	128
  1753  00FE49  0003               	dw	3
  1754  00FE4B  0060               	dw	96
  1755  00FE4D  0000               	dw	0
  1756  00FE4F  0010               	dw	16
  1757  00FE51  0000               	dw	0
  1758  00FE53  0000               	dw	0
  1759  00FE55  0000               	dw	0
  1760  00FE57  000E               	dw	14
  1761  00FE59  0010               	dw	16
  1762  00FE5B  0000               	dw	0
  1763  00FE5D  00E0               	dw	224
  1764  00FE5F  0000               	dw	0
  1765  00FE61  0000               	dw	0
  1766  00FE63  0007               	dw	7
  1767  00FE65  0000               	dw	0
  1768  00FE67  0018               	dw	24
  1769  00FE69  0000               	dw	0
  1770  00FE6B  0007               	dw	7
  1771  00FE6D  00E0               	dw	224
  1772  00FE6F  0000               	dw	0
  1773  00FE71  0010               	dw	16
  1774  00FE73  0000               	dw	0
  1775  00FE75  00E0               	dw	224
  1776  00FE77  0000               	dw	0
  1777  00FE79  0000               	dw	0
  1778  00FE7B  0007               	dw	7
  1779  00FE7D  0000               	dw	0
  1780  00FE7F  0018               	dw	24
  1781  00FE81  0000               	dw	0
  1782  00FE83  0007               	dw	7
  1783  00FE85  00E0               	dw	224
  1784  00FE87  0000               	dw	0
  1785  00FE89  0010               	dw	16
  1786  00FE8B  0000               	dw	0
  1787  00FE8D  0000               	dw	0
  1788  00FE8F  0000               	dw	0
  1789  00FE91  0009               	dw	9
  1790  00FE93  0010               	dw	16
  1791  00FE95  0010               	dw	16
  1792  00FE97  0020               	dw	32
  1793  00FE99  0008               	dw	8
  1794  00FE9B  0040               	dw	64
  1795  00FE9D  0004               	dw	4
  1796  00FE9F  0080               	dw	128
  1797  00FEA1  0003               	dw	3
  1798  00FEA3  0080               	dw	128
  1799  00FEA5  0003               	dw	3
  1800  00FEA7  0040               	dw	64
  1801  00FEA9  0004               	dw	4
  1802  00FEAB  0020               	dw	32
  1803  00FEAD  0008               	dw	8
  1804  00FEAF  0010               	dw	16
  1805  00FEB1  0010               	dw	16
  1806  00FEB3  0000               	dw	0
  1807  00FEB5  0000               	dw	0
  1808  00FEB7  0009               	dw	9
  1809  00FEB9  0010               	dw	16
  1810  00FEBB  0000               	dw	0
  1811  00FEBD  00E0               	dw	224
  1812  00FEBF  0000               	dw	0
  1813  00FEC1  0000               	dw	0
  1814  00FEC3  0083               	dw	131
  1815  00FEC5  0000               	dw	0
  1816  00FEC7  007C               	dw	124
  1817  00FEC9  0000               	dw	0
  1818  00FECB  000C               	dw	12
  1819  00FECD  0000               	dw	0
  1820  00FECF  0003               	dw	3
  1821  00FED1  00E0               	dw	224
  1822  00FED3  0000               	dw	0
  1823  00FED5  0010               	dw	16
  1824  00FED7  0000               	dw	0
  1825  00FED9  0000               	dw	0
  1826  00FEDB  0000               	dw	0
  1827  00FEDD  0008               	dw	8
  1828  00FEDF  0010               	dw	16
  1829  00FEE1  0010               	dw	16
  1830  00FEE3  0010               	dw	16
  1831  00FEE5  0018               	dw	24
  1832  00FEE7  0010               	dw	16
  1833  00FEE9  0016               	dw	22
  1834  00FEEB  0010               	dw	16
  1835  00FEED  0011               	dw	17
  1836  00FEEF  00D0               	dw	208
  1837  00FEF1  0010               	dw	16
  1838  00FEF3  0030               	dw	48
  1839  00FEF5  0010               	dw	16
  1840  00FEF7  0010               	dw	16
  1841  00FEF9  0010               	dw	16
  1842  00FEFB  0000               	dw	0
  1843  00FEFD  0000               	dw	0
  1844  00FEFF  0007               	dw	7
  1845  00FF01  0000               	dw	0
  1846  00FF03  0000               	dw	0
  1847  00FF05  0000               	dw	0
  1848  00FF07  0001               	dw	1
  1849  00FF09  0080               	dw	128
  1850  00FF0B  0002               	dw	2
  1851  00FF0D  00FC               	dw	252
  1852  00FF0F  007E               	dw	126
  1853  00FF11  0002               	dw	2
  1854  00FF13  0080               	dw	128
  1855  00FF15  0002               	dw	2
  1856  00FF17  0080               	dw	128
  1857  00FF19  0000               	dw	0
  1858  00FF1B  0000               	dw	0
  1859  00FF1D  0007               	dw	7
  1860  00FF1F  0000               	dw	0
  1861  00FF21  0000               	dw	0
  1862  00FF23  0000               	dw	0
  1863  00FF25  0000               	dw	0
  1864  00FF27  0000               	dw	0
  1865  00FF29  0000               	dw	0
  1866  00FF2B  0000               	dw	0
  1867  00FF2D  0000               	dw	0
  1868  00FF2F  0000               	dw	0
  1869  00FF31  0000               	dw	0
  1870  00FF33  00FE               	dw	254
  1871  00FF35  00FF               	dw	255
  1872  00FF37  0000               	dw	0
  1873  00FF39  0000               	dw	0
  1874  00FF3B  0006               	dw	6
  1875  00FF3D  0002               	dw	2
  1876  00FF3F  0080               	dw	128
  1877  00FF41  0002               	dw	2
  1878  00FF43  0080               	dw	128
  1879  00FF45  00FC               	dw	252
  1880  00FF47  007E               	dw	126
  1881  00FF49  0080               	dw	128
  1882  00FF4B  0002               	dw	2
  1883  00FF4D  0000               	dw	0
  1884  00FF4F  0001               	dw	1
  1885  00FF51  0000               	dw	0
  1886  00FF53  0000               	dw	0
  1887  00FF55  000A               	dw	10
  1888  00FF57  0000               	dw	0
  1889  00FF59  0000               	dw	0
  1890  00FF5B  0080               	dw	128
  1891  00FF5D  0000               	dw	0
  1892  00FF5F  0040               	dw	64
  1893  00FF61  0000               	dw	0
  1894  00FF63  0040               	dw	64
  1895  00FF65  0000               	dw	0
  1896  00FF67  0040               	dw	64
  1897  00FF69  0000               	dw	0
  1898  00FF6B  0080               	dw	128
  1899  00FF6D  0000               	dw	0
  1900  00FF6F  0080               	dw	128
  1901  00FF71  0000               	dw	0
  1902  00FF73  0080               	dw	128
  1903  00FF75  0000               	dw	0
  1904  00FF77  0040               	dw	64
  1905  00FF79  0000               	dw	0
  1906  00FF7B  0000               	dw	0
  1907  00FF7D  0000               	dw	0
  1908  00FF7F  0005               	dw	5
  1909  00FF81  00FF               	dw	255
  1910  00FF83  000F               	dw	15
  1911  00FF85  0001               	dw	1
  1912  00FF87  0008               	dw	8
  1913  00FF89  0001               	dw	1
  1914  00FF8B  0008               	dw	8
  1915  00FF8D  00FF               	dw	255
  1916  00FF8F  000F               	dw	15
  1917  00FF91  0000               	dw	0
  1918  00FF93  0000               	dw	0
  1919  00FF95                     __end_of_font:
  1920                           	opt callstack 0
  1921  00FF95                     _spi_configuration:
  1922                           	opt callstack 0
  1923  00FF95  00                 	db	0
  1924  00FF96  40                 	db	64
  1925  00FF97  01                 	db	1
  1926  00FF98  00                 	db	0
  1927  00FF99                     __end_of_spi_configuration:
  1928                           	opt callstack 0
  1929  00FF99                     STR_1:
  1930  00FF99  48                 	db	72	;'H'
  1931  00FF9A  45                 	db	69	;'E'
  1932  00FF9B  4C                 	db	76	;'L'
  1933  00FF9C  4C                 	db	76	;'L'
  1934  00FF9D  4F                 	db	79	;'O'
  1935  00FF9E  20                 	db	32
  1936  00FF9F  57                 	db	87	;'W'
  1937  00FFA0  4F                 	db	79	;'O'
  1938  00FFA1  52                 	db	82	;'R'
  1939  00FFA2  4C                 	db	76	;'L'
  1940  00FFA3  44                 	db	68	;'D'
  1941  00FFA4  00                 	db	0
  1942  00FFA5                     STR_3:
  1943  00FFA5  50                 	db	80	;'P'
  1944  00FFA6  4F                 	db	79	;'O'
  1945  00FFA7  54                 	db	84	;'T'
  1946  00FFA8  3D                 	db	61	;'='
  1947  00FFA9  20                 	db	32
  1948  00FFAA  2D                 	db	45
  1949  00FFAB  2D                 	db	45
  1950  00FFAC  2D                 	db	45
  1951  00FFAD  2D                 	db	45
  1952  00FFAE  2D                 	db	45
  1953  00FFAF  00                 	db	0
  1954  00FFB0                     STR_2:
  1955  00FFB0  50                 	db	80	;'P'
  1956  00FFB1  4F                 	db	79	;'O'
  1957  00FFB2  54                 	db	84	;'T'
  1958  00FFB3  3D                 	db	61	;'='
  1959  00FFB4  25                 	db	37
  1960  00FFB5  2E                 	db	46
  1961  00FFB6  66                 	db	102	;'f'
  1962  00FFB7  25                 	db	37
  1963  00FFB8  25                 	db	37
  1964  00FFB9  00                 	db	0
  1965  00FFBA                     STR_4:
  1966  00FFBA  49                 	db	73	;'I'
  1967  00FFBB  4E                 	db	78	;'N'
  1968  00FFBC  46                 	db	70	;'F'
  1969  00FFBD  00                 	db	0
  1970  00FFBE                     STR_8:
  1971  00FFBE  4E                 	db	78	;'N'
  1972  00FFBF  41                 	db	65	;'A'
  1973  00FFC0  4E                 	db	78	;'N'
  1974  00FFC1  00                 	db	0
  1975  00FFC2                     STR_93:
  1976  00FFC2  68                 	db	104	;'h'
  1977  00FFC3  68                 	db	104	;'h'
  1978  00FFC4  58                 	db	88	;'X'
  1979  00FFC5  00                 	db	0
  1980  00FFC6                     STR_12:
  1981  00FFC6  68                 	db	104	;'h'
  1982  00FFC7  68                 	db	104	;'h'
  1983  00FFC8  64                 	db	100	;'d'
  1984  00FFC9  00                 	db	0
  1985  00FFCA                     STR_5:
  1986  00FFCA  69                 	db	105	;'i'
  1987  00FFCB  6E                 	db	110	;'n'
  1988  00FFCC  66                 	db	102	;'f'
  1989  00FFCD  00                 	db	0
  1990  00FFCE                     STR_16:
  1991  00FFCE  68                 	db	104	;'h'
  1992  00FFCF  68                 	db	104	;'h'
  1993  00FFD0  69                 	db	105	;'i'
  1994  00FFD1  00                 	db	0
  1995  00FFD2                     STR_9:
  1996  00FFD2  6E                 	db	110	;'n'
  1997  00FFD3  61                 	db	97	;'a'
  1998  00FFD4  6E                 	db	110	;'n'
  1999  00FFD5  00                 	db	0
  2000  00FFD6                     STR_59:
  2001  00FFD6  68                 	db	104	;'h'
  2002  00FFD7  68                 	db	104	;'h'
  2003  00FFD8  6E                 	db	110	;'n'
  2004  00FFD9  00                 	db	0
  2005  00FFDA                     STR_44:
  2006  00FFDA  68                 	db	104	;'h'
  2007  00FFDB  68                 	db	104	;'h'
  2008  00FFDC  6F                 	db	111	;'o'
  2009  00FFDD  00                 	db	0
  2010  00FFDE                     STR_74:
  2011  00FFDE  68                 	db	104	;'h'
  2012  00FFDF  68                 	db	104	;'h'
  2013  00FFE0  75                 	db	117	;'u'
  2014  00FFE1  00                 	db	0
  2015  00FFE2                     STR_89:
  2016  00FFE2  68                 	db	104	;'h'
  2017  00FFE3  68                 	db	104	;'h'
  2018  00FFE4  78                 	db	120	;'x'
  2019  00FFE5  00                 	db	0
  2020  00FFE6                     STR_111:
  2021  00FFE6  7A                 	db	122	;'z'
  2022  00FFE7  58                 	db	88	;'X'
  2023  00FFE8  00                 	db	0
  2024  00FFE9                     STR_30:
  2025  00FFE9  7A                 	db	122	;'z'
  2026  00FFEA  64                 	db	100	;'d'
  2027  00FFEB  00                 	db	0
  2028  00FFEC                     STR_39:
  2029  00FFEC  6C                 	db	108	;'l'
  2030  00FFED  66                 	db	102	;'f'
  2031  00FFEE  00                 	db	0
  2032  00FFEF                     STR_34:
  2033  00FFEF  7A                 	db	122	;'z'
  2034  00FFF0  69                 	db	105	;'i'
  2035  00FFF1  00                 	db	0
  2036  00FFF2                     STR_69:
  2037  00FFF2  7A                 	db	122	;'z'
  2038  00FFF3  6E                 	db	110	;'n'
  2039  00FFF4  00                 	db	0
  2040  00FFF5                     STR_54:
  2041  00FFF5  7A                 	db	122	;'z'
  2042  00FFF6  6F                 	db	111	;'o'
  2043  00FFF7  00                 	db	0
  2044  00FFF8                     STR_84:
  2045  00FFF8  7A                 	db	122	;'z'
  2046  00FFF9  75                 	db	117	;'u'
  2047  00FFFA  00                 	db	0
  2048  00FFFB                     STR_107:
  2049  00FFFB  7A                 	db	122	;'z'
  2050  00FFFC  78                 	db	120	;'x'
  2051  00FFFD  00                 	db	0
  2052  0000                     
  2053                           ; #config settings
  2054  00FFFE  00                 	db	0	; dummy byte at the end
  2055  0000                     
  2056                           	psect	nvBANK0
  2057  0000F8                     __pnvBANK0:
  2058                           	opt callstack 0
  2059  0000F8                     _INT0_InterruptHandler:
  2060                           	opt callstack 0
  2061  0000F8                     	ds	2
  2062  0000FA                     _timer1ReloadVal:
  2063                           	opt callstack 0
  2064  0000FA                     	ds	2
  2065  0000FC                     _IOCB4_InterruptHandler:
  2066                           	opt callstack 0
  2067  0000FC                     	ds	2
  2068  0000                     _IOCBbits	set	3930
  2069  0000                     _WPUB	set	3931
  2070  0000                     _ANCON1	set	3932
  2071  0000                     _ANCON0	set	3933
  2072  0000                     _LATEbits	set	3981
  2073  0000                     _SSPSTATbits	set	4039
  2074  0000                     _LATAbits	set	3977
  2075  0000                     _PORTBbits	set	3969
  2076  0000                     _T1GCONbits	set	4010
  2077  0000                     _T1CONbits	set	4045
  2078  0000                     _T1CON	set	4045
  2079  0000                     _TMR1L	set	4046
  2080  0000                     _TMR1H	set	4047
  2081  0000                     _T1GCON	set	4010
  2082  0000                     _ADCON0bits	set	4034
  2083  0000                     _ADRESL	set	4035
  2084  0000                     _ADRESH	set	4036
  2085  0000                     _ADCON2	set	4032
  2086  0000                     _ADCON1	set	4033
  2087  0000                     _ADCON0	set	4034
  2088  0000                     _PIR1bits	set	3998
  2089  0000                     _SSPBUF	set	4041
  2090  0000                     _SSPCON2	set	4037
  2091  0000                     _SSPCON1bits	set	4038
  2092  0000                     _TRISCbits	set	3988
  2093  0000                     _SSPADD	set	4040
  2094  0000                     _SSPCON1	set	4038
  2095  0000                     _SSPSTAT	set	4039
  2096  0000                     _INTCON2bits	set	4081
  2097  0000                     _TRISD	set	3989
  2098  0000                     _TRISC	set	3988
  2099  0000                     _TRISB	set	3987
  2100  0000                     _TRISA	set	3986
  2101  0000                     _TRISE	set	3990
  2102  0000                     _LATC	set	3979
  2103  0000                     _LATB	set	3978
  2104  0000                     _LATA	set	3977
  2105  0000                     _LATD	set	3980
  2106  0000                     _LATE	set	3981
  2107  0000                     _INTCONbits	set	4082
  2108  0000                     _RCONbits	set	4048
  2109  0000                     _REFOCON	set	3994
  2110  0000                     _OSCTUNE	set	3995
  2111  0000                     _OSCCON2	set	4050
  2112  0000                     _OSCCON	set	4051
  2113                           
  2114                           	psect	cinit
  2115  005758                     __pcinit:
  2116                           	opt callstack 0
  2117  005758                     start_initialization:
  2118                           	opt callstack 0
  2119  005758                     __initialization:
  2120                           	opt callstack 0
  2121                           
  2122                           ; Initialize objects allocated to BANK1 (7 bytes)
  2123                           ; load TBLPTR registers with __pidataBANK1
  2124  005758  0ED2               	movlw	low __pidataBANK1
  2125  00575A  6EF6               	movwf	tblptrl,c
  2126  00575C  0E5C               	movlw	high __pidataBANK1
  2127  00575E  6EF7               	movwf	tblptrh,c
  2128  005760  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2129  005762  6EF8               	movwf	tblptru,c
  2130  005764  EE01  F0B4         	lfsr	0,__pdataBANK1
  2131  005768  EE10 F007          	lfsr	1,7
  2132  00576C                     copy_data0:
  2133  00576C  0009               	tblrd		*+
  2134  00576E  CFF5 FFEE          	movff	tablat,postinc0
  2135  005772  50E5               	movf	postdec1,w,c
  2136  005774  50E1               	movf	fsr1l,w,c
  2137  005776  E1FA               	bnz	copy_data0
  2138                           
  2139                           ; Clear objects allocated to BANK1 (180 bytes)
  2140  005778  EE01  F000         	lfsr	0,__pbssBANK1
  2141  00577C  0EB4               	movlw	180
  2142  00577E                     clear_0:
  2143  00577E  6AEE               	clrf	postinc0,c
  2144  005780  06E8               	decf	wreg,f,c
  2145  005782  E1FD               	bnz	clear_0
  2146                           
  2147                           ; Clear objects allocated to BANK0 (28 bytes)
  2148  005784  EE00  F0DC         	lfsr	0,__pbssBANK0
  2149  005788  0E1C               	movlw	28
  2150  00578A                     clear_1:
  2151  00578A  6AEE               	clrf	postinc0,c
  2152  00578C  06E8               	decf	wreg,f,c
  2153  00578E  E1FD               	bnz	clear_1
  2154                           
  2155                           ; Clear objects allocated to COMRAM (2 bytes)
  2156  005790  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2157  005792  6A58               	clrf	__pbssCOMRAM& (0+255),c
  2158  005794                     end_of_initialization:
  2159                           	opt callstack 0
  2160  005794                     __end_of__initialization:
  2161                           	opt callstack 0
  2162  005794  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2163  005796  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2164  005798  0100               	movlb	0
  2165  00579A  EF94  F021         	goto	_main	;jump to C main() function
  2166                           
  2167                           	psect	bssCOMRAM
  2168  000058                     __pbssCOMRAM:
  2169                           	opt callstack 0
  2170  000058                     _prec:
  2171                           	opt callstack 0
  2172  000058                     	ds	2
  2173                           
  2174                           	psect	bssBANK0
  2175  0000DC                     __pbssBANK0:
  2176                           	opt callstack 0
  2177  0000DC                     floorf@F524:
  2178                           	opt callstack 0
  2179  0000DC                     	ds	4
  2180  0000E0                     ___fpclassifyf@F463:
  2181                           	opt callstack 0
  2182  0000E0                     	ds	4
  2183  0000E4                     _POT_VAL:
  2184                           	opt callstack 0
  2185  0000E4                     	ds	4
  2186  0000E8                     _errno:
  2187                           	opt callstack 0
  2188  0000E8                     	ds	2
  2189  0000EA                     _nout:
  2190                           	opt callstack 0
  2191  0000EA                     	ds	2
  2192  0000EC                     _width:
  2193                           	opt callstack 0
  2194  0000EC                     	ds	2
  2195  0000EE                     _flags:
  2196                           	opt callstack 0
  2197  0000EE                     	ds	2
  2198  0000F0                     _global_bg_color:
  2199                           	opt callstack 0
  2200  0000F0                     	ds	2
  2201  0000F2                     _code_digit:
  2202                           	opt callstack 0
  2203  0000F2                     	ds	2
  2204  0000F4                     _BUT_COMUT:
  2205                           	opt callstack 0
  2206  0000F4                     	ds	2
  2207  0000F6                     _ADC_InterruptHandler:
  2208                           	opt callstack 0
  2209  0000F6                     	ds	2
  2210                           
  2211                           	psect	bssBANK1
  2212  000100                     __pbssBANK1:
  2213                           	opt callstack 0
  2214  000100                     _sPOT:
  2215                           	opt callstack 0
  2216  000100                     	ds	100
  2217  000164                     _dbuf:
  2218                           	opt callstack 0
  2219  000164                     	ds	80
  2220                           
  2221                           	psect	dataBANK1
  2222  0001B4                     __pdataBANK1:
  2223                           	opt callstack 0
  2224  0001B4                     stoa@F1174:
  2225                           	opt callstack 0
  2226  0001B4                     	ds	7
  2227                           
  2228                           	psect	cstackBANK1
  2229  0001BB                     __pcstackBANK1:
  2230                           	opt callstack 0
  2231  0001BB                     	ds	2
  2232  0001BD                     snprintf@ap:
  2233                           	opt callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x2
  2236  0001BD                     	ds	2
  2237                           
  2238                           	psect	cstackBANK0
  2239  000060                     __pcstackBANK0:
  2240                           	opt callstack 0
  2241  000060                     efgtoa@ou:
  2242                           	opt callstack 0
  2243                           
  2244                           ; 4 bytes @ 0x0
  2245  000060                     	ds	4
  2246  000064                     _efgtoa$1394:
  2247                           	opt callstack 0
  2248                           
  2249                           ; 2 bytes @ 0x4
  2250  000064                     	ds	2
  2251  000066                     _efgtoa$1395:
  2252                           	opt callstack 0
  2253                           
  2254                           ; 2 bytes @ 0x6
  2255  000066                     	ds	2
  2256  000068                     _efgtoa$1399:
  2257                           	opt callstack 0
  2258                           
  2259                           ; 2 bytes @ 0x8
  2260  000068                     	ds	2
  2261  00006A                     _efgtoa$1403:
  2262                           	opt callstack 0
  2263                           
  2264                           ; 2 bytes @ 0xA
  2265  00006A                     	ds	2
  2266  00006C                     _efgtoa$1404:
  2267                           	opt callstack 0
  2268                           
  2269                           ; 2 bytes @ 0xC
  2270  00006C                     	ds	2
  2271  00006E                     _efgtoa$1405:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 2 bytes @ 0xE
  2275  00006E                     	ds	2
  2276  000070                     efgtoa@t:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 2 bytes @ 0x10
  2280  000070                     	ds	2
  2281  000072                     efgtoa@pp:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 2 bytes @ 0x12
  2285  000072                     	ds	2
  2286  000074                     efgtoa@m:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x14
  2290  000074                     	ds	2
  2291  000076                     efgtoa@ne:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 2 bytes @ 0x16
  2295  000076                     	ds	2
  2296  000078                     efgtoa@d:
  2297                           	opt callstack 0
  2298                           
  2299                           ; 2 bytes @ 0x18
  2300  000078                     	ds	2
  2301  00007A                     efgtoa@sign:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 2 bytes @ 0x1A
  2305  00007A                     	ds	2
  2306  00007C                     efgtoa@p:
  2307                           	opt callstack 0
  2308                           
  2309                           ; 2 bytes @ 0x1C
  2310  00007C                     	ds	2
  2311  00007E                     efgtoa@nmode:
  2312                           	opt callstack 0
  2313                           
  2314                           ; 1 bytes @ 0x1E
  2315  00007E                     	ds	1
  2316  00007F                     efgtoa@w:
  2317                           	opt callstack 0
  2318                           
  2319                           ; 2 bytes @ 0x1F
  2320  00007F                     	ds	2
  2321  000081                     efgtoa@mode:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 1 bytes @ 0x21
  2325  000081                     	ds	1
  2326  000082                     efgtoa@h:
  2327                           	opt callstack 0
  2328                           
  2329                           ; 4 bytes @ 0x22
  2330  000082                     	ds	4
  2331  000086                     efgtoa@l:
  2332                           	opt callstack 0
  2333                           
  2334                           ; 4 bytes @ 0x26
  2335  000086                     	ds	4
  2336  00008A                     efgtoa@i:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 2 bytes @ 0x2A
  2340  00008A                     	ds	2
  2341  00008C                     efgtoa@g:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 4 bytes @ 0x2C
  2345  00008C                     	ds	4
  2346  000090                     efgtoa@e:
  2347                           	opt callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x30
  2350  000090                     	ds	2
  2351  000092                     efgtoa@n:
  2352                           	opt callstack 0
  2353                           
  2354                           ; 2 bytes @ 0x32
  2355  000092                     	ds	2
  2356  000094                     efgtoa@u:
  2357                           	opt callstack 0
  2358                           
  2359                           ; 4 bytes @ 0x34
  2360  000094                     	ds	4
  2361  000098                     vfpfcnvrt@cp:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x38
  2365  000098                     	ds	2
  2366  00009A                     vfpfcnvrt@done:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 2 bytes @ 0x3A
  2370  00009A                     	ds	2
  2371  00009C                     _vfpfcnvrt$1456:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x3C
  2375  00009C                     	ds	2
  2376  00009E                     _vfpfcnvrt$1457:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 2 bytes @ 0x3E
  2380  00009E                     	ds	2
  2381  0000A0                     _vfpfcnvrt$1478:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 2 bytes @ 0x40
  2385  0000A0                     	ds	2
  2386  0000A2                     vfpfcnvrt@f:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 4 bytes @ 0x42
  2390  0000A2                     	ds	4
  2391  0000A6                     vfpfcnvrt@ct:
  2392                           	opt callstack 0
  2393                           
  2394                           ; 3 bytes @ 0x46
  2395  0000A6                     	ds	3
  2396  0000A9                     vfpfcnvrt@ll:
  2397                           	opt callstack 0
  2398                           
  2399                           ; 8 bytes @ 0x49
  2400  0000A9                     	ds	8
  2401  0000B1                     vfpfcnvrt@vp:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x51
  2405  0000B1                     	ds	2
  2406  0000B3                     vfpfcnvrt@c:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 1 bytes @ 0x53
  2410  0000B3                     	ds	1
  2411  0000B4                     vfpfcnvrt@llu:
  2412                           	opt callstack 0
  2413                           
  2414                           ; 8 bytes @ 0x54
  2415  0000B4                     	ds	8
  2416  0000BC                     ?_vsnprintf:
  2417                           	opt callstack 0
  2418  0000BC                     vsnprintf@s:
  2419                           	opt callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x5C
  2422  0000BC                     	ds	2
  2423  0000BE                     vsnprintf@n:
  2424                           	opt callstack 0
  2425                           
  2426                           ; 2 bytes @ 0x5E
  2427  0000BE                     	ds	2
  2428  0000C0                     vsnprintf@fmt:
  2429                           	opt callstack 0
  2430                           
  2431                           ; 2 bytes @ 0x60
  2432  0000C0                     	ds	2
  2433  0000C2                     vsnprintf@ap:
  2434                           	opt callstack 0
  2435                           
  2436                           ; 2 bytes @ 0x62
  2437  0000C2                     	ds	2
  2438  0000C4                     ??_vsnprintf:
  2439                           
  2440                           ; 1 bytes @ 0x64
  2441  0000C4                     	ds	4
  2442  0000C8                     _vsnprintf$2209:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 2 bytes @ 0x68
  2446  0000C8                     	ds	2
  2447  0000CA                     vsnprintf@cnt:
  2448                           	opt callstack 0
  2449                           
  2450                           ; 2 bytes @ 0x6A
  2451  0000CA                     	ds	2
  2452  0000CC                     vsnprintf@f:
  2453                           	opt callstack 0
  2454                           
  2455                           ; 6 bytes @ 0x6C
  2456  0000CC                     	ds	6
  2457  0000D2                     ?_snprintf:
  2458                           	opt callstack 0
  2459  0000D2                     snprintf@s:
  2460                           	opt callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x72
  2463  0000D2                     	ds	2
  2464  0000D4                     snprintf@n:
  2465                           	opt callstack 0
  2466                           
  2467                           ; 2 bytes @ 0x74
  2468  0000D4                     	ds	2
  2469  0000D6                     snprintf@fmt:
  2470                           	opt callstack 0
  2471                           
  2472                           ; 2 bytes @ 0x76
  2473  0000D6                     	ds	6
  2474                           
  2475                           	psect	cstackCOMRAM
  2476  000001                     __pcstackCOMRAM:
  2477                           	opt callstack 0
  2478  000001                     ??_IOCB4_InterruptCall:
  2479  000001                     
  2480                           ; 1 bytes @ 0x0
  2481  000001                     	ds	1
  2482  000002                     ??_INTERRUPT_InterruptManager:
  2483                           
  2484                           ; 1 bytes @ 0x1
  2485  000002                     	ds	2
  2486  000004                     ??_TMR1_Initialize:
  2487  000004                     ??_SPI_Open:
  2488  000004                     ??_msDelay:
  2489  000004                     ?_strlen:
  2490                           	opt callstack 0
  2491  000004                     ?___fpclassifyf:
  2492                           	opt callstack 0
  2493  000004                     ?_isupper:
  2494                           	opt callstack 0
  2495  000004                     ?_isalpha:
  2496                           	opt callstack 0
  2497  000004                     ?_isdigit:
  2498                           	opt callstack 0
  2499  000004                     ?_strncmp:
  2500                           	opt callstack 0
  2501  000004                     ?_isspace:
  2502                           	opt callstack 0
  2503  000004                     ?_islower:
  2504                           	opt callstack 0
  2505  000004                     ?_ADC_GetConversion:
  2506                           	opt callstack 0
  2507  000004                     ?___wmul:
  2508                           	opt callstack 0
  2509  000004                     ?___awdiv:
  2510                           	opt callstack 0
  2511  000004                     ?___awmod:
  2512                           	opt callstack 0
  2513  000004                     ?___fladd:
  2514                           	opt callstack 0
  2515  000004                     ?___fldiv:
  2516                           	opt callstack 0
  2517  000004                     ?___flneg:
  2518                           	opt callstack 0
  2519  000004                     ?___fltol:
  2520                           	opt callstack 0
  2521  000004                     ?___xxtofl:
  2522                           	opt callstack 0
  2523  000004                     ?___aodiv:
  2524                           	opt callstack 0
  2525  000004                     ?___aomod:
  2526                           	opt callstack 0
  2527  000004                     ?___lodiv:
  2528                           	opt callstack 0
  2529  000004                     ?___lomod:
  2530                           	opt callstack 0
  2531  000004                     SPI_ExchangeByte@data:
  2532                           	opt callstack 0
  2533  000004                     IOCB4_SetInterruptHandler@InterruptHandler:
  2534                           	opt callstack 0
  2535  000004                     INT0_SetInterruptHandler@InterruptHandler:
  2536                           	opt callstack 0
  2537  000004                     ___wmul@multiplier:
  2538                           	opt callstack 0
  2539  000004                     ___awdiv@dividend:
  2540                           	opt callstack 0
  2541  000004                     ___awmod@dividend:
  2542                           	opt callstack 0
  2543  000004                     isalpha@c:
  2544                           	opt callstack 0
  2545  000004                     isdigit@c:
  2546                           	opt callstack 0
  2547  000004                     isspace@c:
  2548                           	opt callstack 0
  2549  000004                     isupper@c:
  2550                           	opt callstack 0
  2551  000004                     fputc@c:
  2552                           	opt callstack 0
  2553  000004                     strcpy@dest:
  2554                           	opt callstack 0
  2555  000004                     strlen@s:
  2556                           	opt callstack 0
  2557  000004                     strncmp@_l:
  2558                           	opt callstack 0
  2559  000004                     islower@c:
  2560                           	opt callstack 0
  2561  000004                     ___fleq@ff1:
  2562                           	opt callstack 0
  2563  000004                     ___flneg@f1:
  2564                           	opt callstack 0
  2565  000004                     ___fltol@f1:
  2566                           	opt callstack 0
  2567  000004                     ___fladd@b:
  2568                           	opt callstack 0
  2569  000004                     ___fldiv@b:
  2570                           	opt callstack 0
  2571  000004                     ___xxtofl@val:
  2572                           	opt callstack 0
  2573  000004                     ___fpclassifyf@x:
  2574                           	opt callstack 0
  2575  000004                     ___aodiv@dividend:
  2576                           	opt callstack 0
  2577  000004                     ___aomod@dividend:
  2578                           	opt callstack 0
  2579  000004                     ___lodiv@dividend:
  2580                           	opt callstack 0
  2581  000004                     ___lomod@dividend:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 8 bytes @ 0x3
  2585  000004                     	ds	1
  2586  000005                     SPI_Open@spiUniqueConfiguration:
  2587                           	opt callstack 0
  2588  000005                     msDelay@ms:
  2589                           	opt callstack 0
  2590  000005                     lcd_send@value:
  2591                           	opt callstack 0
  2592                           
  2593                           ; 1 bytes @ 0x4
  2594  000005                     	ds	1
  2595  000006                     ??_isupper:
  2596  000006                     ??_isalpha:
  2597  000006                     ??_isdigit:
  2598  000006                     ??_isspace:
  2599  000006                     ??_islower:
  2600  000006                     ??_ADC_GetConversion:
  2601  000006                     msDelay@k:
  2602                           	opt callstack 0
  2603  000006                     lcd_send@dc:
  2604                           	opt callstack 0
  2605  000006                     ___wmul@multiplicand:
  2606                           	opt callstack 0
  2607  000006                     ___awdiv@divisor:
  2608                           	opt callstack 0
  2609  000006                     ___awmod@divisor:
  2610                           	opt callstack 0
  2611  000006                     fputc@fp:
  2612                           	opt callstack 0
  2613  000006                     strcpy@src:
  2614                           	opt callstack 0
  2615  000006                     strlen@a:
  2616                           	opt callstack 0
  2617  000006                     strncmp@_r:
  2618                           	opt callstack 0
  2619                           
  2620                           ; 2 bytes @ 0x5
  2621  000006                     	ds	1
  2622  000007                     lcd_set_cursor_x@x:
  2623                           	opt callstack 0
  2624  000007                     lcd_set_cursor_y@y:
  2625                           	opt callstack 0
  2626  000007                     lcd_draw_pixel@color:
  2627                           	opt callstack 0
  2628                           
  2629                           ; 2 bytes @ 0x6
  2630  000007                     	ds	1
  2631  000008                     ??_fputc:
  2632  000008                     ??___fpclassifyf:
  2633  000008                     ??_strcpy:
  2634  000008                     ??___fltol:
  2635  000008                     ??___xxtofl:
  2636  000008                     ADC_GetConversion@channel:
  2637                           	opt callstack 0
  2638  000008                     ___awdiv@counter:
  2639                           	opt callstack 0
  2640  000008                     ___awmod@counter:
  2641                           	opt callstack 0
  2642  000008                     ___wmul@product:
  2643                           	opt callstack 0
  2644  000008                     strncmp@n:
  2645                           	opt callstack 0
  2646  000008                     ___fleq@ff2:
  2647                           	opt callstack 0
  2648  000008                     ___fladd@a:
  2649                           	opt callstack 0
  2650  000008                     ___fldiv@a:
  2651                           	opt callstack 0
  2652                           
  2653                           ; 4 bytes @ 0x7
  2654  000008                     	ds	1
  2655  000009                     ___awdiv@sign:
  2656                           	opt callstack 0
  2657  000009                     ___awmod@sign:
  2658                           	opt callstack 0
  2659  000009                     lcd_set_cursor@x:
  2660                           	opt callstack 0
  2661                           
  2662                           ; 2 bytes @ 0x8
  2663  000009                     	ds	1
  2664  00000A                     ??_strncmp:
  2665  00000A                     ?_tolower:
  2666                           	opt callstack 0
  2667  00000A                     ?_toupper:
  2668                           	opt callstack 0
  2669  00000A                     _isspace$2079:
  2670                           	opt callstack 0
  2671  00000A                     ___awdiv@quotient:
  2672                           	opt callstack 0
  2673  00000A                     strcpy@s:
  2674                           	opt callstack 0
  2675  00000A                     tolower@c:
  2676                           	opt callstack 0
  2677  00000A                     toupper@c:
  2678                           	opt callstack 0
  2679                           
  2680                           ; 2 bytes @ 0x9
  2681  00000A                     	ds	1
  2682  00000B                     ?_atoi:
  2683                           	opt callstack 0
  2684  00000B                     lcd_set_cursor@y:
  2685                           	opt callstack 0
  2686  00000B                     atoi@s:
  2687                           	opt callstack 0
  2688  00000B                     strncmp@l:
  2689                           	opt callstack 0
  2690                           
  2691                           ; 2 bytes @ 0xA
  2692  00000B                     	ds	1
  2693  00000C                     ??_tolower:
  2694  00000C                     ??_toupper:
  2695  00000C                     ??___fladd:
  2696  00000C                     ??___fldiv:
  2697  00000C                     ??___fleq:
  2698  00000C                     ___fltol@sign1:
  2699                           	opt callstack 0
  2700  00000C                     ___xxtofl@sign:
  2701                           	opt callstack 0
  2702  00000C                     ___fpclassifyf@e:
  2703                           	opt callstack 0
  2704  00000C                     strcpy@d:
  2705                           	opt callstack 0
  2706  00000C                     ___aodiv@divisor:
  2707                           	opt callstack 0
  2708  00000C                     ___aomod@divisor:
  2709                           	opt callstack 0
  2710  00000C                     ___lodiv@divisor:
  2711                           	opt callstack 0
  2712  00000C                     ___lomod@divisor:
  2713                           	opt callstack 0
  2714                           
  2715                           ; 8 bytes @ 0xB
  2716  00000C                     	ds	1
  2717  00000D                     ??_atoi:
  2718  00000D                     ?_stoa:
  2719                           	opt callstack 0
  2720  00000D                     ___fltol@exp1:
  2721                           	opt callstack 0
  2722  00000D                     ___xxtofl@exp:
  2723                           	opt callstack 0
  2724  00000D                     lcd_fill@bg_color:
  2725                           	opt callstack 0
  2726  00000D                     lcd_draw_char@x:
  2727                           	opt callstack 0
  2728  00000D                     stoa@fp:
  2729                           	opt callstack 0
  2730  00000D                     fputs@s:
  2731                           	opt callstack 0
  2732  00000D                     strncmp@r:
  2733                           	opt callstack 0
  2734                           
  2735                           ; 2 bytes @ 0xC
  2736  00000D                     	ds	1
  2737  00000E                     ___xxtofl@arg:
  2738                           	opt callstack 0
  2739  00000E                     ___fpclassifyf@u:
  2740                           	opt callstack 0
  2741                           
  2742                           ; 4 bytes @ 0xD
  2743  00000E                     	ds	1
  2744  00000F                     lcd_fill@height:
  2745                           	opt callstack 0
  2746  00000F                     lcd_draw_char@y:
  2747                           	opt callstack 0
  2748  00000F                     stoa@s:
  2749                           	opt callstack 0
  2750  00000F                     fputs@fp:
  2751                           	opt callstack 0
  2752                           
  2753                           ; 2 bytes @ 0xE
  2754  00000F                     	ds	1
  2755  000010                     ___fladd@signs:
  2756                           	opt callstack 0
  2757  000010                     _tolower$2162:
  2758                           	opt callstack 0
  2759  000010                     _toupper$2177:
  2760                           	opt callstack 0
  2761  000010                     ___fldiv@rem:
  2762                           	opt callstack 0
  2763                           
  2764                           ; 4 bytes @ 0xF
  2765  000010                     	ds	1
  2766  000011                     ??_stoa:
  2767  000011                     ___fladd@aexp:
  2768                           	opt callstack 0
  2769  000011                     fputs@c:
  2770                           	opt callstack 0
  2771  000011                     lcd_fill@width:
  2772                           	opt callstack 0
  2773  000011                     lcd_draw_char@fIndex:
  2774                           	opt callstack 0
  2775  000011                     atoi@neg:
  2776                           	opt callstack 0
  2777                           
  2778                           ; 2 bytes @ 0x10
  2779  000011                     	ds	1
  2780  000012                     ?___flmul:
  2781                           	opt callstack 0
  2782  000012                     ___fladd@bexp:
  2783                           	opt callstack 0
  2784  000012                     fputs@i:
  2785                           	opt callstack 0
  2786  000012                     ___flmul@b:
  2787                           	opt callstack 0
  2788  000012                     stoa@nuls:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 7 bytes @ 0x11
  2792  000012                     	ds	1
  2793  000013                     ___fladd@grs:
  2794                           	opt callstack 0
  2795  000013                     lcd_draw_char@fg_color:
  2796                           	opt callstack 0
  2797  000013                     _atoi$2039:
  2798                           	opt callstack 0
  2799                           
  2800                           ; 2 bytes @ 0x12
  2801  000013                     	ds	1
  2802  000014                     ?_pad:
  2803                           	opt callstack 0
  2804  000014                     ___aodiv@counter:
  2805                           	opt callstack 0
  2806  000014                     ___aomod@counter:
  2807                           	opt callstack 0
  2808  000014                     ___lomod@counter:
  2809                           	opt callstack 0
  2810  000014                     ___fldiv@sign:
  2811                           	opt callstack 0
  2812  000014                     pad@fp:
  2813                           	opt callstack 0
  2814  000014                     ___lodiv@quotient:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 8 bytes @ 0x13
  2818  000014                     	ds	1
  2819  000015                     ___aodiv@sign:
  2820                           	opt callstack 0
  2821  000015                     ___aomod@sign:
  2822                           	opt callstack 0
  2823  000015                     lcd_draw_char@bg_color:
  2824                           	opt callstack 0
  2825  000015                     ___fldiv@new_exp:
  2826                           	opt callstack 0
  2827  000015                     _atoi$2041:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 2 bytes @ 0x14
  2831  000015                     	ds	1
  2832  000016                     ?_abs:
  2833                           	opt callstack 0
  2834  000016                     pad@buf:
  2835                           	opt callstack 0
  2836  000016                     abs@a:
  2837                           	opt callstack 0
  2838  000016                     ___flmul@a:
  2839                           	opt callstack 0
  2840  000016                     ___aodiv@quotient:
  2841                           	opt callstack 0
  2842                           
  2843                           ; 8 bytes @ 0x15
  2844  000016                     	ds	1
  2845  000017                     ??_lcd_draw_char:
  2846  000017                     _atoi$2040:
  2847                           	opt callstack 0
  2848  000017                     ___fldiv@grs:
  2849                           	opt callstack 0
  2850                           
  2851                           ; 4 bytes @ 0x16
  2852  000017                     	ds	1
  2853  000018                     ??_abs:
  2854  000018                     pad@p:
  2855                           	opt callstack 0
  2856  000018                     atoi@n:
  2857                           	opt callstack 0
  2858                           
  2859                           ; 2 bytes @ 0x17
  2860  000018                     	ds	1
  2861  000019                     stoa@i:
  2862                           	opt callstack 0
  2863                           
  2864                           ; 2 bytes @ 0x18
  2865  000019                     	ds	1
  2866  00001A                     ??___flmul:
  2867  00001A                     ??_pad:
  2868                           
  2869                           ; 1 bytes @ 0x19
  2870  00001A                     	ds	1
  2871  00001B                     ___fldiv@bexp:
  2872                           	opt callstack 0
  2873  00001B                     pad@i:
  2874                           	opt callstack 0
  2875  00001B                     stoa@w:
  2876                           	opt callstack 0
  2877                           
  2878                           ; 2 bytes @ 0x1A
  2879  00001B                     	ds	1
  2880  00001C                     ___lodiv@counter:
  2881                           	opt callstack 0
  2882  00001C                     ___fldiv@aexp:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 1 bytes @ 0x1B
  2886  00001C                     	ds	1
  2887  00001D                     ?_floorf:
  2888                           	opt callstack 0
  2889  00001D                     pad@w:
  2890                           	opt callstack 0
  2891  00001D                     stoa@cp:
  2892                           	opt callstack 0
  2893  00001D                     floorf@x:
  2894                           	opt callstack 0
  2895                           
  2896                           ; 4 bytes @ 0x1C
  2897  00001D                     	ds	1
  2898  00001E                     ___flmul@sign:
  2899                           	opt callstack 0
  2900                           
  2901                           ; 1 bytes @ 0x1D
  2902  00001E                     	ds	1
  2903  00001F                     ?_ctoa:
  2904                           	opt callstack 0
  2905  00001F                     ?_dtoa:
  2906                           	opt callstack 0
  2907  00001F                     ?_otoa:
  2908                           	opt callstack 0
  2909  00001F                     ?_utoa:
  2910                           	opt callstack 0
  2911  00001F                     ?_xtoa:
  2912                           	opt callstack 0
  2913  00001F                     ___flmul@aexp:
  2914                           	opt callstack 0
  2915  00001F                     ctoa@fp:
  2916                           	opt callstack 0
  2917  00001F                     dtoa@fp:
  2918                           	opt callstack 0
  2919  00001F                     otoa@fp:
  2920                           	opt callstack 0
  2921  00001F                     stoa@p:
  2922                           	opt callstack 0
  2923  00001F                     utoa@fp:
  2924                           	opt callstack 0
  2925  00001F                     xtoa@fp:
  2926                           	opt callstack 0
  2927                           
  2928                           ; 2 bytes @ 0x1E
  2929  00001F                     	ds	1
  2930  000020                     lcd_draw_char@j:
  2931                           	opt callstack 0
  2932  000020                     ___flmul@grs:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 4 bytes @ 0x1F
  2936  000020                     	ds	1
  2937  000021                     ??_floorf:
  2938  000021                     lcd_draw_char@k:
  2939                           	opt callstack 0
  2940  000021                     ctoa@c:
  2941                           	opt callstack 0
  2942  000021                     stoa@l:
  2943                           	opt callstack 0
  2944  000021                     dtoa@d:
  2945                           	opt callstack 0
  2946  000021                     otoa@d:
  2947                           	opt callstack 0
  2948  000021                     utoa@d:
  2949                           	opt callstack 0
  2950  000021                     xtoa@d:
  2951                           	opt callstack 0
  2952                           
  2953                           ; 8 bytes @ 0x20
  2954  000021                     	ds	1
  2955  000022                     lcd_draw_char@i:
  2956                           	opt callstack 0
  2957  000022                     ctoa@w:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x21
  2961  000022                     	ds	1
  2962  000023                     lcd_draw_string@x:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x22
  2966  000023                     	ds	1
  2967  000024                     ___flmul@bexp:
  2968                           	opt callstack 0
  2969                           
  2970                           ; 1 bytes @ 0x23
  2971  000024                     	ds	1
  2972  000025                     lcd_draw_string@y:
  2973                           	opt callstack 0
  2974  000025                     ___flmul@prod:
  2975                           	opt callstack 0
  2976                           
  2977                           ; 4 bytes @ 0x24
  2978  000025                     	ds	2
  2979  000027                     lcd_draw_string@pS:
  2980                           	opt callstack 0
  2981  000027                     floorf@m:
  2982                           	opt callstack 0
  2983                           
  2984                           ; 4 bytes @ 0x26
  2985  000027                     	ds	2
  2986  000029                     ??_dtoa:
  2987  000029                     ??_otoa:
  2988  000029                     ??_utoa:
  2989  000029                     xtoa@x:
  2990                           	opt callstack 0
  2991  000029                     lcd_draw_string@fg_color:
  2992                           	opt callstack 0
  2993  000029                     ___flmul@temp:
  2994                           	opt callstack 0
  2995                           
  2996                           ; 2 bytes @ 0x28
  2997  000029                     	ds	1
  2998  00002A                     ??_xtoa:
  2999                           
  3000                           ; 1 bytes @ 0x29
  3001  00002A                     	ds	1
  3002  00002B                     ?___flsub:
  3003                           	opt callstack 0
  3004  00002B                     lcd_draw_string@bg_color:
  3005                           	opt callstack 0
  3006  00002B                     floorf@e:
  3007                           	opt callstack 0
  3008  00002B                     ___flge@ff1:
  3009                           	opt callstack 0
  3010  00002B                     ___flsub@b:
  3011                           	opt callstack 0
  3012                           
  3013                           ; 4 bytes @ 0x2A
  3014  00002B                     	ds	2
  3015  00002D                     ??_lcd_draw_string:
  3016  00002D                     floorf@u:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 4 bytes @ 0x2C
  3020  00002D                     	ds	2
  3021  00002F                     ___flge@ff2:
  3022                           	opt callstack 0
  3023  00002F                     ___flsub@a:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 4 bytes @ 0x2E
  3027  00002F                     	ds	2
  3028  000031                     lcd_draw_string@k:
  3029                           	opt callstack 0
  3030  000031                     _dtoa$1371:
  3031                           	opt callstack 0
  3032  000031                     otoa@p:
  3033                           	opt callstack 0
  3034  000031                     utoa@p:
  3035                           	opt callstack 0
  3036                           
  3037                           ; 2 bytes @ 0x30
  3038  000031                     	ds	1
  3039  000032                     _xtoa$1441:
  3040                           	opt callstack 0
  3041                           
  3042                           ; 2 bytes @ 0x31
  3043  000032                     	ds	1
  3044  000033                     ??___flge:
  3045  000033                     lcd_draw_string@lIndex:
  3046                           	opt callstack 0
  3047  000033                     dtoa@p:
  3048                           	opt callstack 0
  3049  000033                     otoa@t:
  3050                           	opt callstack 0
  3051  000033                     utoa@w:
  3052                           	opt callstack 0
  3053                           
  3054                           ; 2 bytes @ 0x32
  3055  000033                     	ds	1
  3056  000034                     _xtoa$1442:
  3057                           	opt callstack 0
  3058                           
  3059                           ; 2 bytes @ 0x33
  3060  000034                     	ds	1
  3061  000035                     dtoa@w:
  3062                           	opt callstack 0
  3063  000035                     otoa@w:
  3064                           	opt callstack 0
  3065  000035                     utoa@n:
  3066                           	opt callstack 0
  3067                           
  3068                           ; 8 bytes @ 0x34
  3069  000035                     	ds	1
  3070  000036                     xtoa@p:
  3071                           	opt callstack 0
  3072                           
  3073                           ; 2 bytes @ 0x35
  3074  000036                     	ds	1
  3075  000037                     ?_efgtoa:
  3076                           	opt callstack 0
  3077  000037                     dtoa@s:
  3078                           	opt callstack 0
  3079  000037                     efgtoa@fp:
  3080                           	opt callstack 0
  3081  000037                     otoa@n:
  3082                           	opt callstack 0
  3083                           
  3084                           ; 8 bytes @ 0x36
  3085  000037                     	ds	1
  3086  000038                     xtoa@w:
  3087                           	opt callstack 0
  3088                           
  3089                           ; 2 bytes @ 0x37
  3090  000038                     	ds	1
  3091  000039                     efgtoa@f:
  3092                           	opt callstack 0
  3093  000039                     dtoa@n:
  3094                           	opt callstack 0
  3095                           
  3096                           ; 8 bytes @ 0x38
  3097  000039                     	ds	1
  3098  00003A                     xtoa@n:
  3099                           	opt callstack 0
  3100                           
  3101                           ; 8 bytes @ 0x39
  3102  00003A                     	ds	3
  3103  00003D                     efgtoa@c:
  3104                           	opt callstack 0
  3105  00003D                     utoa@i:
  3106                           	opt callstack 0
  3107                           
  3108                           ; 2 bytes @ 0x3C
  3109  00003D                     	ds	1
  3110  00003E                     ??_efgtoa:
  3111                           
  3112                           ; 1 bytes @ 0x3D
  3113  00003E                     	ds	1
  3114  00003F                     otoa@i:
  3115                           	opt callstack 0
  3116                           
  3117                           ; 2 bytes @ 0x3E
  3118  00003F                     	ds	2
  3119  000041                     dtoa@i:
  3120                           	opt callstack 0
  3121                           
  3122                           ; 2 bytes @ 0x40
  3123  000041                     	ds	1
  3124  000042                     xtoa@i:
  3125                           	opt callstack 0
  3126                           
  3127                           ; 2 bytes @ 0x41
  3128  000042                     	ds	2
  3129  000044                     xtoa@c:
  3130                           	opt callstack 0
  3131                           
  3132                           ; 2 bytes @ 0x43
  3133  000044                     	ds	2
  3134  000046                     ?_vfpfcnvrt:
  3135                           	opt callstack 0
  3136  000046                     vfpfcnvrt@fp:
  3137                           	opt callstack 0
  3138                           
  3139                           ; 2 bytes @ 0x45
  3140  000046                     	ds	2
  3141  000048                     vfpfcnvrt@fmt:
  3142                           	opt callstack 0
  3143                           
  3144                           ; 2 bytes @ 0x47
  3145  000048                     	ds	2
  3146  00004A                     vfpfcnvrt@ap:
  3147                           	opt callstack 0
  3148                           
  3149                           ; 2 bytes @ 0x49
  3150  00004A                     	ds	2
  3151  00004C                     ??_vfpfcnvrt:
  3152                           
  3153                           ; 1 bytes @ 0x4B
  3154  00004C                     	ds	4
  3155  000050                     ?_vfprintf:
  3156                           	opt callstack 0
  3157  000050                     vfprintf@fp:
  3158                           	opt callstack 0
  3159                           
  3160                           ; 2 bytes @ 0x4F
  3161  000050                     	ds	2
  3162  000052                     vfprintf@fmt:
  3163                           	opt callstack 0
  3164                           
  3165                           ; 2 bytes @ 0x51
  3166  000052                     	ds	2
  3167  000054                     vfprintf@ap:
  3168                           	opt callstack 0
  3169                           
  3170                           ; 2 bytes @ 0x53
  3171  000054                     	ds	2
  3172  000056                     vfprintf@cfmt:
  3173                           	opt callstack 0
  3174                           
  3175                           ; 2 bytes @ 0x55
  3176  000056                     	ds	2
  3177  000058                     
  3178                           ; 1 bytes @ 0x57
  3179 ;;
  3180 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3181 ;;
  3182 ;; *************** function _main *****************
  3183 ;; Defined at:
  3184 ;;		line 38 in file "main.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels required when called:   13
  3204 ;; This function calls:
  3205 ;;		_ADC_GetConversion
  3206 ;;		_INT0_SetInterruptHandler
  3207 ;;		_IOCB4_SetInterruptHandler
  3208 ;;		_SPI_Open
  3209 ;;		_SYSTEM_Initialize
  3210 ;;		___flge
  3211 ;;		___flmul
  3212 ;;		___xxtofl
  3213 ;;		_lcd_draw_string
  3214 ;;		_lcd_init
  3215 ;;		_snprintf
  3216 ;; This function is called by:
  3217 ;;		Startup code after reset
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text0
  3222  004328                     __ptext0:
  3223                           	opt callstack 0
  3224  004328                     _main:
  3225                           	opt callstack 18
  3226  004328                     
  3227                           ;main.c: 41:     SYSTEM_Initialize();
  3228  004328  ECF5  F02D         	call	_SYSTEM_Initialize	;wreg free
  3229  00432C                     
  3230                           ;main.c: 42:     SPI_Open(SPI_DEFAULT);
  3231  00432C  0E00               	movlw	0
  3232  00432E  EC5F  F029         	call	_SPI_Open
  3233  004332                     
  3234                           ;main.c: 43:     lcd_init();
  3235  004332  ECBF  F016         	call	_lcd_init	;wreg free
  3236  004336                     
  3237                           ;main.c: 46:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  3238  004336  0E7C               	movlw	low _IOCB4_InterruptCall
  3239  004338  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3240  00433A  0E5A               	movlw	high _IOCB4_InterruptCall
  3241  00433C  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3242  00433E  EC5B  F02E         	call	_IOCB4_SetInterruptHandler	;wreg free
  3243  004342                     
  3244                           ;main.c: 47:     INT0_SetInterruptHandler(S3_toggle);
  3245  004342  0E9A               	movlw	low _S3_toggle
  3246  004344  6E04               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3247  004346  0E5B               	movlw	high _S3_toggle
  3248  004348  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3249  00434A  EC60  F02E         	call	_INT0_SetInterruptHandler	;wreg free
  3250  00434E                     
  3251                           ;main.c: 50:     (INTCONbits.GIE = 1);
  3252  00434E  8EF2               	bsf	242,7,c	;volatile
  3253  004350                     
  3254                           ;main.c: 61:     lcd_draw_string(100,120,"HELLO WORLD",0xFFFF,0x0000);
  3255  004350  0E00               	movlw	0
  3256  004352  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3257  004354  0E64               	movlw	100
  3258  004356  6E23               	movwf	lcd_draw_string@x^0,c
  3259  004358  0E00               	movlw	0
  3260  00435A  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3261  00435C  0E78               	movlw	120
  3262  00435E  6E25               	movwf	lcd_draw_string@y^0,c
  3263  004360  0E99               	movlw	low STR_1
  3264  004362  6E27               	movwf	lcd_draw_string@pS^0,c
  3265  004364  0EFF               	movlw	high STR_1
  3266  004366  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3267  004368  0EFF               	movlw	255
  3268  00436A  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3269  00436C  6829               	setf	lcd_draw_string@fg_color^0,c
  3270  00436E  0E00               	movlw	0
  3271  004370  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3272  004372  0E00               	movlw	0
  3273  004374  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3274  004376  ECC5  F023         	call	_lcd_draw_string	;wreg free
  3275  00437A                     l9151:
  3276                           
  3277                           ;main.c: 64:     {;main.c: 66:         if(BUT_COMUT==1){
  3278  00437A  0100               	movlb	0	; () banked
  3279  00437C  05F4               	decf	_BUT_COMUT& (0+255),w,b
  3280  00437E  11F5               	iorwf	(_BUT_COMUT+1)& (0+255),w,b
  3281  004380  A4D8               	btfss	status,2,c
  3282  004382  EFC5  F021         	goto	u12121
  3283  004386  EFC7  F021         	goto	u12120
  3284  00438A                     u12121:
  3285  00438A  EF3C  F022         	goto	l302
  3286  00438E                     u12120:
  3287  00438E                     
  3288                           ; BSR set to: 0
  3289                           ;main.c: 67:             code_digit=ADC_GetConversion(POT);
  3290  00438E  0E00               	movlw	0
  3291  004390  EC96  F02C         	call	_ADC_GetConversion
  3292  004394  C004  F0F2         	movff	?_ADC_GetConversion,_code_digit
  3293  004398  C005  F0F3         	movff	?_ADC_GetConversion+1,_code_digit+1
  3294  00439C                     
  3295                           ;main.c: 68:             POT_VAL=code_digit*0.0244200244200244;
  3296  00439C  C0F2  F004         	movff	_code_digit,___xxtofl@val
  3297  0043A0  C0F3  F005         	movff	_code_digit+1,___xxtofl@val+1
  3298  0043A4  0E00               	movlw	0
  3299  0043A6  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  3300  0043A8  0EFF               	movlw	-1
  3301  0043AA  6E06               	movwf	(___xxtofl@val+2)^0,c
  3302  0043AC  6E07               	movwf	(___xxtofl@val+3)^0,c
  3303  0043AE  0E01               	movlw	1
  3304  0043B0  EC66  F01E         	call	___xxtofl
  3305  0043B4  C004  F012         	movff	?___xxtofl,___flmul@b
  3306  0043B8  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3307  0043BC  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3308  0043C0  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3309  0043C4  0E81               	movlw	129
  3310  0043C6  6E16               	movwf	___flmul@a^0,c
  3311  0043C8  0E0C               	movlw	12
  3312  0043CA  6E17               	movwf	(___flmul@a+1)^0,c
  3313  0043CC  0EC8               	movlw	200
  3314  0043CE  6E18               	movwf	(___flmul@a+2)^0,c
  3315  0043D0  0E3C               	movlw	60
  3316  0043D2  6E19               	movwf	(___flmul@a+3)^0,c
  3317  0043D4  ECDD  F012         	call	___flmul	;wreg free
  3318  0043D8  C012  F0E4         	movff	?___flmul,_POT_VAL
  3319  0043DC  C013  F0E5         	movff	?___flmul+1,_POT_VAL+1
  3320  0043E0  C014  F0E6         	movff	?___flmul+2,_POT_VAL+2
  3321  0043E4  C015  F0E7         	movff	?___flmul+3,_POT_VAL+3
  3322  0043E8                     
  3323                           ;main.c: 69:             snprintf(sPOT,sizeof(sPOT),"POT=%.f%%",POT_VAL);
  3324  0043E8  0E00               	movlw	low _sPOT
  3325  0043EA  0100               	movlb	0	; () banked
  3326  0043EC  6FD2               	movwf	snprintf@s& (0+255),b
  3327  0043EE  0E01               	movlw	high _sPOT
  3328  0043F0  6FD3               	movwf	(snprintf@s+1)& (0+255),b
  3329  0043F2  0E00               	movlw	0
  3330  0043F4  6FD5               	movwf	(snprintf@n+1)& (0+255),b
  3331  0043F6  0E64               	movlw	100
  3332  0043F8  6FD4               	movwf	snprintf@n& (0+255),b
  3333  0043FA  0EB0               	movlw	low STR_2
  3334  0043FC  6FD6               	movwf	snprintf@fmt& (0+255),b
  3335  0043FE  0EFF               	movlw	high STR_2
  3336  004400  6FD7               	movwf	(snprintf@fmt+1)& (0+255),b
  3337  004402  C0E4  F0D8         	movff	_POT_VAL,?_snprintf+6
  3338  004406  C0E5  F0D9         	movff	_POT_VAL+1,?_snprintf+7
  3339  00440A  C0E6  F0DA         	movff	_POT_VAL+2,?_snprintf+8
  3340  00440E  C0E7  F0DB         	movff	_POT_VAL+3,?_snprintf+9
  3341  004412  EC59  F02D         	call	_snprintf	;wreg free
  3342  004416                     
  3343                           ;main.c: 70:             lcd_draw_string(100,100,sPOT,0xFFFF,0x0000);
  3344  004416  0E00               	movlw	0
  3345  004418  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3346  00441A  0E64               	movlw	100
  3347  00441C  6E23               	movwf	lcd_draw_string@x^0,c
  3348  00441E  0E00               	movlw	0
  3349  004420  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3350  004422  0E64               	movlw	100
  3351  004424  6E25               	movwf	lcd_draw_string@y^0,c
  3352  004426  0E00               	movlw	low _sPOT
  3353  004428  6E27               	movwf	lcd_draw_string@pS^0,c
  3354  00442A  0E01               	movlw	high _sPOT
  3355  00442C  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3356  00442E  0EFF               	movlw	255
  3357  004430  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3358  004432  6829               	setf	lcd_draw_string@fg_color^0,c
  3359  004434  0E00               	movlw	0
  3360  004436  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3361  004438  0E00               	movlw	0
  3362  00443A  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3363  00443C  ECC5  F023         	call	_lcd_draw_string	;wreg free
  3364  004440                     
  3365                           ;main.c: 71:             if (POT_VAL>94){
  3366  004440  0E00               	movlw	0
  3367  004442  6E2B               	movwf	___flge@ff1^0,c
  3368  004444  0E00               	movlw	0
  3369  004446  6E2C               	movwf	(___flge@ff1+1)^0,c
  3370  004448  0EBC               	movlw	188
  3371  00444A  6E2D               	movwf	(___flge@ff1+2)^0,c
  3372  00444C  0E42               	movlw	66
  3373  00444E  6E2E               	movwf	(___flge@ff1+3)^0,c
  3374  004450  C0E4  F02F         	movff	_POT_VAL,___flge@ff2
  3375  004454  C0E5  F030         	movff	_POT_VAL+1,___flge@ff2+1
  3376  004458  C0E6  F031         	movff	_POT_VAL+2,___flge@ff2+2
  3377  00445C  C0E7  F032         	movff	_POT_VAL+3,___flge@ff2+3
  3378  004460  ECFC  F025         	call	___flge	;wreg free
  3379  004464  B0D8               	btfsc	status,0,c
  3380  004466  EF37  F022         	goto	u12131
  3381  00446A  EF39  F022         	goto	u12130
  3382  00446E                     u12131:
  3383  00446E  EFBD  F021         	goto	l9151
  3384  004472                     u12130:
  3385  004472  8A89               	bsf	137,5,c	;volatile
  3386  004474  EFBD  F021         	goto	l9151
  3387  004478                     l302:
  3388                           
  3389                           ; BSR set to: 0
  3390  004478  9A89               	bcf	137,5,c	;volatile
  3391  00447A                     
  3392                           ; BSR set to: 0
  3393                           ;main.c: 77:             lcd_draw_string(100,100,"POT= -----",0xFFFF,0x0000);
  3394  00447A  0E00               	movlw	0
  3395  00447C  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3396  00447E  0E64               	movlw	100
  3397  004480  6E23               	movwf	lcd_draw_string@x^0,c
  3398  004482  0E00               	movlw	0
  3399  004484  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3400  004486  0E64               	movlw	100
  3401  004488  6E25               	movwf	lcd_draw_string@y^0,c
  3402  00448A  0EA5               	movlw	low STR_3
  3403  00448C  6E27               	movwf	lcd_draw_string@pS^0,c
  3404  00448E  0EFF               	movlw	high STR_3
  3405  004490  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3406  004492  0EFF               	movlw	255
  3407  004494  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3408  004496  6829               	setf	lcd_draw_string@fg_color^0,c
  3409  004498  0E00               	movlw	0
  3410  00449A  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3411  00449C  0E00               	movlw	0
  3412  00449E  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3413  0044A0  ECC5  F023         	call	_lcd_draw_string	;wreg free
  3414  0044A4  EFBD  F021         	goto	l9151
  3415  0044A8  EF31  F000         	goto	start
  3416  0044AC                     __end_of_main:
  3417                           	opt callstack 0
  3418                           
  3419 ;; *************** function _snprintf *****************
  3420 ;; Defined at:
  3421 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  s               2  114[BANK0 ] PTR unsigned char 
  3424 ;;		 -> sPOT(100), 
  3425 ;;  n               2  116[BANK0 ] unsigned int 
  3426 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  3427 ;;		 -> STR_2(10), 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  ap              2    2[BANK1 ] PTR void [1]
  3430 ;;		 -> ?_snprintf(2), 
  3431 ;;  ret             2    0        int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2  114[BANK0 ] int 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3441 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;Total ram usage:       14 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:   12
  3448 ;; This function calls:
  3449 ;;		_vsnprintf
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text1
  3456  005AB2                     __ptext1:
  3457                           	opt callstack 0
  3458  005AB2                     _snprintf:
  3459                           	opt callstack 18
  3460  005AB2  0ED8               	movlw	low (?_snprintf+6)
  3461  005AB4  0101               	movlb	1	; () banked
  3462  005AB6  6FBD               	movwf	snprintf@ap& (0+255),b
  3463  005AB8  0E00               	movlw	high (?_snprintf+6)
  3464  005ABA  6FBE               	movwf	(snprintf@ap+1)& (0+255),b
  3465  005ABC                     
  3466                           ; BSR set to: 1
  3467  005ABC  C0D2  F0BC         	movff	snprintf@s,vsnprintf@s
  3468  005AC0  C0D3  F0BD         	movff	snprintf@s+1,vsnprintf@s+1
  3469  005AC4  C0D4  F0BE         	movff	snprintf@n,vsnprintf@n
  3470  005AC8  C0D5  F0BF         	movff	snprintf@n+1,vsnprintf@n+1
  3471  005ACC  C0D6  F0C0         	movff	snprintf@fmt,vsnprintf@fmt
  3472  005AD0  C0D7  F0C1         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3473  005AD4  0EBD               	movlw	low snprintf@ap
  3474  005AD6  0100               	movlb	0	; () banked
  3475  005AD8  6FC2               	movwf	vsnprintf@ap& (0+255),b
  3476  005ADA  0E01               	movlw	high snprintf@ap
  3477  005ADC  6FC3               	movwf	(vsnprintf@ap+1)& (0+255),b
  3478  005ADE  ECF1  F024         	call	_vsnprintf	;wreg free
  3479  005AE2  0012               	return		;funcret
  3480  005AE4                     __end_of_snprintf:
  3481                           	opt callstack 0
  3482                           
  3483 ;; *************** function _vsnprintf *****************
  3484 ;; Defined at:
  3485 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  s               2   92[BANK0 ] PTR unsigned char 
  3488 ;;		 -> sPOT(100), 
  3489 ;;  n               2   94[BANK0 ] unsigned int 
  3490 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  3491 ;;		 -> STR_2(10), 
  3492 ;;  ap              2   98[BANK0 ] PTR PTR void 
  3493 ;;		 -> snprintf@ap(2), 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  f               6  108[BANK0 ] struct _IO_FILE
  3496 ;;  cnt             2  106[BANK0 ] int 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   92[BANK0 ] int 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3506 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3507 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3508 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3509 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3510 ;;Total ram usage:       22 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:   11
  3513 ;; This function calls:
  3514 ;;		_vfprintf
  3515 ;; This function is called by:
  3516 ;;		_snprintf
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text2
  3521  0049E2                     __ptext2:
  3522                           	opt callstack 0
  3523  0049E2                     _vsnprintf:
  3524                           	opt callstack 18
  3525  0049E2  0E80               	movlw	128
  3526  0049E4  0100               	movlb	0	; () banked
  3527  0049E6  5DBF               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3528  0049E8  A0D8               	btfss	status,0,c
  3529  0049EA  EFF9  F024         	goto	u12071
  3530  0049EE  EFFB  F024         	goto	u12070
  3531  0049F2                     u12071:
  3532  0049F2  EF03  F025         	goto	l9107
  3533  0049F6                     u12070:
  3534  0049F6                     
  3535                           ; BSR set to: 0
  3536  0049F6  0E00               	movlw	0
  3537  0049F8  6FE9               	movwf	(_errno+1)& (0+255),b
  3538  0049FA  0E4B               	movlw	75
  3539  0049FC  6FE8               	movwf	_errno& (0+255),b
  3540  0049FE                     
  3541                           ; BSR set to: 0
  3542  0049FE  69BC               	setf	?_vsnprintf& (0+255),b
  3543  004A00  69BD               	setf	(?_vsnprintf+1)& (0+255),b
  3544  004A02  EF78  F025         	goto	l1676
  3545  004A06                     l9107:
  3546                           
  3547                           ; BSR set to: 0
  3548  004A06  C0BC  F0CC         	movff	vsnprintf@s,vsnprintf@f
  3549  004A0A  C0BD  F0CD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3550  004A0E  51BF               	movf	(vsnprintf@n+1)& (0+255),w,b
  3551  004A10  E109               	bnz	u12080
  3552  004A12  0E02               	movlw	2
  3553  004A14  5DBE               	subwf	vsnprintf@n& (0+255),w,b
  3554  004A16  A0D8               	btfss	status,0,c
  3555  004A18  EF10  F025         	goto	u12081
  3556  004A1C  EF12  F025         	goto	u12080
  3557  004A20                     u12081:
  3558  004A20  EF1E  F025         	goto	l9113
  3559  004A24                     u12080:
  3560  004A24                     
  3561                           ; BSR set to: 0
  3562  004A24  0EFF               	movlw	255
  3563  004A26  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3564  004A28  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3565  004A2A  0EFF               	movlw	255
  3566  004A2C  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3567  004A2E  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3568  004A30                     
  3569                           ; BSR set to: 0
  3570  004A30  0E00               	movlw	0
  3571  004A32  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3572  004A34  0E00               	movlw	0
  3573  004A36  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3574  004A38  EF26  F025         	goto	l9115
  3575  004A3C                     l9113:
  3576                           
  3577                           ; BSR set to: 0
  3578  004A3C  0E00               	movlw	0
  3579  004A3E  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3580  004A40  0E01               	movlw	1
  3581  004A42  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3582  004A44  0E00               	movlw	0
  3583  004A46  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3584  004A48  0E01               	movlw	1
  3585  004A4A  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3586  004A4C                     l9115:
  3587                           
  3588                           ; BSR set to: 0
  3589  004A4C  0ECC               	movlw	low vsnprintf@f
  3590  004A4E  6E50               	movwf	vfprintf@fp^0,c
  3591  004A50  0E00               	movlw	high vsnprintf@f
  3592  004A52  6E51               	movwf	(vfprintf@fp+1)^0,c
  3593  004A54  C0C0  F052         	movff	vsnprintf@fmt,vfprintf@fmt
  3594  004A58  C0C1  F053         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3595  004A5C  C0C2  F054         	movff	vsnprintf@ap,vfprintf@ap
  3596  004A60  C0C3  F055         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3597  004A64  EC4D  F02A         	call	_vfprintf	;wreg free
  3598  004A68  C050  F0CA         	movff	?_vfprintf,vsnprintf@cnt
  3599  004A6C  C051  F0CB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3600  004A70  0100               	movlb	0	; () banked
  3601  004A72  51BE               	movf	vsnprintf@n& (0+255),w,b
  3602  004A74  11BF               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3603  004A76  B4D8               	btfsc	status,2,c
  3604  004A78  EF40  F025         	goto	u12091
  3605  004A7C  EF42  F025         	goto	u12090
  3606  004A80                     u12091:
  3607  004A80  EF74  F025         	goto	l9127
  3608  004A84                     u12090:
  3609  004A84                     
  3610                           ; BSR set to: 0
  3611  004A84  BFCB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3612  004A86  EF47  F025         	goto	u12101
  3613  004A8A  EF49  F025         	goto	u12100
  3614  004A8E                     u12101:
  3615  004A8E  EF74  F025         	goto	l9127
  3616  004A92                     u12100:
  3617  004A92                     
  3618                           ; BSR set to: 0
  3619  004A92  0EFF               	movlw	255
  3620  004A94  6FC4               	movwf	??_vsnprintf& (0+255),b
  3621  004A96  0EFF               	movlw	255
  3622  004A98  6FC5               	movwf	(??_vsnprintf+1)& (0+255),b
  3623  004A9A  C0BE  F0C6         	movff	vsnprintf@n,??_vsnprintf+2
  3624  004A9E  C0BF  F0C7         	movff	vsnprintf@n+1,??_vsnprintf+3
  3625  004AA2  51C4               	movf	??_vsnprintf& (0+255),w,b
  3626  004AA4  27C6               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3627  004AA6  51C5               	movf	(??_vsnprintf+1)& (0+255),w,b
  3628  004AA8  23C7               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3629  004AAA  51C6               	movf	(??_vsnprintf+2)& (0+255),w,b
  3630  004AAC  5DCA               	subwf	vsnprintf@cnt& (0+255),w,b
  3631  004AAE  51C7               	movf	(??_vsnprintf+3)& (0+255),w,b
  3632  004AB0  59CB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3633  004AB2  A0D8               	btfss	status,0,c
  3634  004AB4  EF5E  F025         	goto	u12111
  3635  004AB8  EF60  F025         	goto	u12110
  3636  004ABC                     u12111:
  3637  004ABC  EF68  F025         	goto	l1681
  3638  004AC0                     u12110:
  3639  004AC0                     
  3640                           ; BSR set to: 0
  3641  004AC0  0EFF               	movlw	255
  3642  004AC2  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3643  004AC4  6FC8               	movwf	_vsnprintf$2209& (0+255),b
  3644  004AC6  0EFF               	movlw	255
  3645  004AC8  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3646  004ACA  6FC9               	movwf	(_vsnprintf$2209+1)& (0+255),b
  3647  004ACC  EF6C  F025         	goto	l9125
  3648  004AD0                     l1681:
  3649                           
  3650                           ; BSR set to: 0
  3651  004AD0  C0CA  F0C8         	movff	vsnprintf@cnt,_vsnprintf$2209
  3652  004AD4  C0CB  F0C9         	movff	vsnprintf@cnt+1,_vsnprintf$2209+1
  3653  004AD8                     l9125:
  3654                           
  3655                           ; BSR set to: 0
  3656  004AD8  51C8               	movf	_vsnprintf$2209& (0+255),w,b
  3657  004ADA  25BC               	addwf	vsnprintf@s& (0+255),w,b
  3658  004ADC  6ED9               	movwf	fsr2l,c
  3659  004ADE  51C9               	movf	(_vsnprintf$2209+1)& (0+255),w,b
  3660  004AE0  21BD               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3661  004AE2  6EDA               	movwf	fsr2h,c
  3662  004AE4  0E00               	movlw	0
  3663  004AE6  6EDF               	movwf	indf2,c
  3664  004AE8                     l9127:
  3665                           
  3666                           ; BSR set to: 0
  3667  004AE8  C0CA  F0BC         	movff	vsnprintf@cnt,?_vsnprintf
  3668  004AEC  C0CB  F0BD         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3669  004AF0                     l1676:
  3670                           
  3671                           ; BSR set to: 0
  3672  004AF0  0012               	return		;funcret
  3673  004AF2                     __end_of_vsnprintf:
  3674                           	opt callstack 0
  3675                           
  3676 ;; *************** function _vfprintf *****************
  3677 ;; Defined at:
  3678 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3681 ;;		 -> vsnprintf@f(6), 
  3682 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3683 ;;		 -> STR_2(10), 
  3684 ;;  ap              2   83[COMRAM] PTR PTR void 
  3685 ;;		 -> snprintf@ap(2), 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3688 ;;		 -> STR_2(10), 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  2   79[COMRAM] int 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3698 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3702 ;;Total ram usage:        8 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:   10
  3705 ;; This function calls:
  3706 ;;		_vfpfcnvrt
  3707 ;; This function is called by:
  3708 ;;		_vsnprintf
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text3
  3713  00549A                     __ptext3:
  3714                           	opt callstack 0
  3715  00549A                     _vfprintf:
  3716                           	opt callstack 18
  3717  00549A                     
  3718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3719  00549A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3720  00549E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3721  0054A2                     
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3723  0054A2  0E00               	movlw	0
  3724  0054A4  0100               	movlb	0	; () banked
  3725  0054A6  6FEB               	movwf	(_nout+1)& (0+255),b
  3726  0054A8  0E00               	movlw	0
  3727  0054AA  6FEA               	movwf	_nout& (0+255),b
  3728                           
  3729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3730  0054AC  EF6B  F02A         	goto	l9097
  3731  0054B0                     l9095:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3735  0054B0  C050  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  3736  0054B4  C051  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3737  0054B8  0E56               	movlw	low vfprintf@cfmt
  3738  0054BA  6E48               	movwf	vfpfcnvrt@fmt^0,c
  3739  0054BC  0E00               	movlw	high vfprintf@cfmt
  3740  0054BE  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3741  0054C0  C054  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  3742  0054C4  C055  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3743  0054C8  EC33  F000         	call	_vfpfcnvrt	;wreg free
  3744  0054CC  5046               	movf	?_vfpfcnvrt^0,w,c
  3745  0054CE  0100               	movlb	0	; () banked
  3746  0054D0  27EA               	addwf	_nout& (0+255),f,b
  3747  0054D2  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  3748  0054D4  23EB               	addwfc	(_nout+1)& (0+255),f,b
  3749  0054D6                     l9097:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3753  0054D6  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3754  0054DA  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3755  0054DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3756  0054DE  6AF8               	clrf	tblptru,c
  3757  0054E0                     	endif
  3758  0054E0                     	if	0	;tblptru may be non-zero
  3759  0054E0                     	endif
  3760  0054E0  0008               	tblrd		*
  3761  0054E2  50F5               	movf	tablat,w,c
  3762  0054E4  0900               	iorlw	0
  3763  0054E6  A4D8               	btfss	status,2,c
  3764  0054E8  EF78  F02A         	goto	u12061
  3765  0054EC  EF7A  F02A         	goto	u12060
  3766  0054F0                     u12061:
  3767  0054F0  EF58  F02A         	goto	l9095
  3768  0054F4                     u12060:
  3769  0054F4                     
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3772  0054F4  C0EA  F050         	movff	_nout,?_vfprintf
  3773  0054F8  C0EB  F051         	movff	_nout+1,?_vfprintf+1
  3774  0054FC                     
  3775                           ; BSR set to: 0
  3776  0054FC  0012               	return		;funcret
  3777  0054FE                     __end_of_vfprintf:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _vfpfcnvrt *****************
  3781 ;; Defined at:
  3782 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3785 ;;		 -> vsnprintf@f(6), 
  3786 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  3787 ;;		 -> vfprintf@cfmt(2), 
  3788 ;;  ap              2   73[COMRAM] PTR PTR void 
  3789 ;;		 -> snprintf@ap(2), 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  llu             8   84[BANK0 ] unsigned long long 
  3792 ;;  ll              8   73[BANK0 ] long long 
  3793 ;;  f               4   66[BANK0 ] long long 
  3794 ;;  ct              3   70[BANK0 ] unsigned char [3]
  3795 ;;  vp              2   81[BANK0 ] PTR void 
  3796 ;;		 -> ?_snprintf(2), 
  3797 ;;  done            2   58[BANK0 ] int 
  3798 ;;  cp              2   56[BANK0 ] PTR unsigned char 
  3799 ;;		 -> ?_snprintf(2), 
  3800 ;;  i               2    0        int 
  3801 ;;  c               1   83[BANK0 ] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2   69[COMRAM] int 
  3804 ;; Registers used:
  3805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3811 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Totals:        10      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;Total ram usage:       46 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    9
  3818 ;; This function calls:
  3819 ;;		_atoi
  3820 ;;		_ctoa
  3821 ;;		_dtoa
  3822 ;;		_efgtoa
  3823 ;;		_fputc
  3824 ;;		_isdigit
  3825 ;;		_isupper
  3826 ;;		_otoa
  3827 ;;		_stoa
  3828 ;;		_strncmp
  3829 ;;		_tolower
  3830 ;;		_utoa
  3831 ;;		_xtoa
  3832 ;; This function is called by:
  3833 ;;		_vfprintf
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text4
  3838  000066                     __ptext4:
  3839                           	opt callstack 0
  3840  000066                     _vfpfcnvrt:
  3841                           	opt callstack 18
  3842  000066                     
  3843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3844  000066  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3845  00006A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3846  00006E  CFDE FFF6          	movff	postinc2,tblptrl
  3847  000072  CFDD FFF7          	movff	postdec2,tblptrh
  3848  000076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3849  000076  6AF8               	clrf	tblptru,c
  3850  000078                     	endif
  3851  000078                     	if	0	;tblptru may be non-zero
  3852  000078                     	endif
  3853  000078  0008               	tblrd		*
  3854  00007A  50F5               	movf	tablat,w,c
  3855  00007C  0A25               	xorlw	37
  3856  00007E  A4D8               	btfss	status,2,c
  3857  000080  EF44  F000         	goto	u11541
  3858  000084  EF46  F000         	goto	u11540
  3859  000088                     u11541:
  3860  000088  EF88  F00A         	goto	l9077
  3861  00008C                     u11540:
  3862  00008C                     
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3864  00008C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3865  000090  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3866  000094  2ADE               	incf	postinc2,f,c
  3867  000096  0E00               	movlw	0
  3868  000098  22DD               	addwfc	postdec2,f,c
  3869  00009A                     
  3870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3871  00009A  0E00               	movlw	0
  3872  00009C  0100               	movlb	0	; () banked
  3873  00009E  6FED               	movwf	(_width+1)& (0+255),b
  3874  0000A0  0E00               	movlw	0
  3875  0000A2  6FEC               	movwf	_width& (0+255),b
  3876  0000A4  C0EC  F0EE         	movff	_width,_flags
  3877  0000A8  C0ED  F0EF         	movff	_width+1,_flags+1
  3878  0000AC                     
  3879                           ; BSR set to: 0
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3881  0000AC  6858               	setf	_prec^0,c
  3882  0000AE  6859               	setf	(_prec+1)^0,c
  3883  0000B0                     
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3886  0000B0  0E00               	movlw	0
  3887  0000B2  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3888  0000B4  0E00               	movlw	0
  3889  0000B6  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  3890                           
  3891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3892  0000B8  EFA5  F000         	goto	l8757
  3893  0000BC                     l8731:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3897  0000BC  81EE               	bsf	_flags& (0+255),0,b
  3898  0000BE                     l8733:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3902  0000BE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3903  0000C2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3904  0000C6  2ADE               	incf	postinc2,f,c
  3905  0000C8  0E00               	movlw	0
  3906  0000CA  22DD               	addwfc	postdec2,f,c
  3907                           
  3908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3909  0000CC  EFA5  F000         	goto	l8757
  3910  0000D0                     l8735:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3914  0000D0  83EE               	bsf	_flags& (0+255),1,b
  3915  0000D2  EF5F  F000         	goto	l8733
  3916  0000D6                     l8739:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3920  0000D6  85EE               	bsf	_flags& (0+255),2,b
  3921  0000D8  EF5F  F000         	goto	l8733
  3922  0000DC                     l8743:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3926  0000DC  87EE               	bsf	_flags& (0+255),3,b
  3927  0000DE  EF5F  F000         	goto	l8733
  3928  0000E2                     l8747:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3932  0000E2  89EE               	bsf	_flags& (0+255),4,b
  3933  0000E4  EF5F  F000         	goto	l8733
  3934  0000E8                     l8751:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3938  0000E8  0E00               	movlw	0
  3939  0000EA  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3940  0000EC  0E01               	movlw	1
  3941  0000EE  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  3942                           
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3944  0000F0  EFA5  F000         	goto	l8757
  3945  0000F4                     l8755:
  3946                           
  3947                           ; BSR set to: 0
  3948  0000F4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3949  0000F8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3950  0000FC  CFDE FFF6          	movff	postinc2,tblptrl
  3951  000100  CFDD FFF7          	movff	postdec2,tblptrh
  3952  000104                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3953  000104  6AF8               	clrf	tblptru,c
  3954  000106                     	endif
  3955  000106                     	if	0	;tblptru may be non-zero
  3956  000106                     	endif
  3957  000106  0008               	tblrd		*
  3958  000108  50F5               	movf	tablat,w,c
  3959  00010A  6E4C               	movwf	??_vfpfcnvrt^0,c
  3960  00010C  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  3961                           
  3962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3963                           ; Switch size 1, requested type "simple"
  3964                           ; Number of cases is 1, Range of values is 0 to 0
  3965                           ; switch strategies available:
  3966                           ; Name         Instructions Cycles
  3967                           ; simple_byte            4     3 (average)
  3968                           ;	Chosen strategy is simple_byte
  3969  00010E  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  3970  000110  0A00               	xorlw	0	; case 0
  3971  000112  B4D8               	btfsc	status,2,c
  3972  000114  EF8E  F000         	goto	l9215
  3973  000118  EF74  F000         	goto	l8751
  3974  00011C                     l9215:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ; Switch size 1, requested type "simple"
  3978                           ; Number of cases is 5, Range of values is 32 to 48
  3979                           ; switch strategies available:
  3980                           ; Name         Instructions Cycles
  3981                           ; simple_byte           16     9 (average)
  3982                           ;	Chosen strategy is simple_byte
  3983  00011C  504C               	movf	??_vfpfcnvrt^0,w,c
  3984  00011E  0A20               	xorlw	32	; case 32
  3985  000120  B4D8               	btfsc	status,2,c
  3986  000122  EF6E  F000         	goto	l8743
  3987  000126  0A03               	xorlw	3	; case 35
  3988  000128  B4D8               	btfsc	status,2,c
  3989  00012A  EF71  F000         	goto	l8747
  3990  00012E  0A08               	xorlw	8	; case 43
  3991  000130  B4D8               	btfsc	status,2,c
  3992  000132  EF6B  F000         	goto	l8739
  3993  000136  0A06               	xorlw	6	; case 45
  3994  000138  B4D8               	btfsc	status,2,c
  3995  00013A  EF5E  F000         	goto	l8731
  3996  00013E  0A1D               	xorlw	29	; case 48
  3997  000140  B4D8               	btfsc	status,2,c
  3998  000142  EF68  F000         	goto	l8735
  3999  000146  EF74  F000         	goto	l8751
  4000  00014A                     l8757:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4004  00014A  519A               	movf	vfpfcnvrt@done& (0+255),w,b
  4005  00014C  119B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4006  00014E  B4D8               	btfsc	status,2,c
  4007  000150  EFAC  F000         	goto	u11551
  4008  000154  EFAE  F000         	goto	u11550
  4009  000158                     u11551:
  4010  000158  EF7A  F000         	goto	l8755
  4011  00015C                     u11550:
  4012  00015C                     
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4015  00015C  A1EE               	btfss	_flags& (0+255),0,b
  4016  00015E  EFB3  F000         	goto	u11561
  4017  000162  EFB5  F000         	goto	u11560
  4018  000166                     u11561:
  4019  000166  EFB6  F000         	goto	l8761
  4020  00016A                     u11560:
  4021  00016A                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4024  00016A  93EE               	bcf	_flags& (0+255),1,b
  4025  00016C                     l8761:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4029  00016C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4030  000170  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4031  000174  CFDE FFF6          	movff	postinc2,tblptrl
  4032  000178  CFDD FFF7          	movff	postdec2,tblptrh
  4033  00017C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4034  00017C  6AF8               	clrf	tblptru,c
  4035  00017E                     	endif
  4036  00017E                     	if	0	;tblptru may be non-zero
  4037  00017E                     	endif
  4038  00017E  0008               	tblrd		*
  4039  000180  50F5               	movf	tablat,w,c
  4040  000182  0A2A               	xorlw	42
  4041  000184  A4D8               	btfss	status,2,c
  4042  000186  EFC7  F000         	goto	u11571
  4043  00018A  EFC9  F000         	goto	u11570
  4044  00018E                     u11571:
  4045  00018E  EFF2  F000         	goto	l8769
  4046  000192                     u11570:
  4047  000192                     
  4048                           ; BSR set to: 0
  4049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4050  000192  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4051  000196  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4052  00019A  2ADE               	incf	postinc2,f,c
  4053  00019C  0E00               	movlw	0
  4054  00019E  22DD               	addwfc	postdec2,f,c
  4055                           
  4056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4057  0001A0  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4058  0001A4  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4059  0001A8  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4060  0001AC  0E02               	movlw	2
  4061  0001AE  26DE               	addwf	postinc2,f,c
  4062  0001B0  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4063  0001B4  0E00               	movlw	0
  4064  0001B6  22DD               	addwfc	postdec2,f,c
  4065  0001B8  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4066  0001BC  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4067  0001C0  CFDE F0EC          	movff	postinc2,_width
  4068  0001C4  CFDD F0ED          	movff	postdec2,_width+1
  4069  0001C8                     
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4072  0001C8  BFED               	btfsc	(_width+1)& (0+255),7,b
  4073  0001CA  EFEB  F000         	goto	u11580
  4074  0001CE  EFE9  F000         	goto	u11581
  4075  0001D2                     u11581:
  4076  0001D2  EF37  F001         	goto	l8779
  4077  0001D6                     u11580:
  4078  0001D6                     
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4081  0001D6  81EE               	bsf	_flags& (0+255),0,b
  4082                           
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4084  0001D8  6DEC               	negf	_width& (0+255),b
  4085  0001DA  1FED               	comf	(_width+1)& (0+255),f,b
  4086  0001DC  B0D8               	btfsc	status,0,c
  4087  0001DE  2BED               	incf	(_width+1)& (0+255),f,b
  4088  0001E0  EF37  F001         	goto	l8779
  4089  0001E4                     l8769:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4093  0001E4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4094  0001E8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4095  0001EC  CFDE F00B          	movff	postinc2,atoi@s
  4096  0001F0  CFDD F00C          	movff	postdec2,atoi@s+1
  4097  0001F4  EC40  F01F         	call	_atoi	;wreg free
  4098  0001F8  C00B  F0EC         	movff	?_atoi,_width
  4099  0001FC  C00C  F0ED         	movff	?_atoi+1,_width+1
  4100                           
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4102  000200  EF09  F001         	goto	l8773
  4103  000204                     l8771:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4107  000204  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4108  000208  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4109  00020C  2ADE               	incf	postinc2,f,c
  4110  00020E  0E00               	movlw	0
  4111  000210  22DD               	addwfc	postdec2,f,c
  4112  000212                     l8773:
  4113  000212  0ED0               	movlw	208
  4114  000214  6E4C               	movwf	??_vfpfcnvrt^0,c
  4115  000216  0EFF               	movlw	255
  4116  000218  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4117  00021A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4118  00021E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4119  000222  CFDE FFF6          	movff	postinc2,tblptrl
  4120  000226  CFDD FFF7          	movff	postdec2,tblptrh
  4121  00022A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4122  00022A  6AF8               	clrf	tblptru,c
  4123  00022C                     	endif
  4124  00022C                     	if	0	;tblptru may be non-zero
  4125  00022C                     	endif
  4126  00022C  0008               	tblrd		*
  4127  00022E  50F5               	movf	tablat,w,c
  4128  000230  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4129  000232  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4130  000234  504C               	movf	??_vfpfcnvrt^0,w,c
  4131  000236  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4132  000238  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4133  00023A  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4134  00023C  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4135  00023E  E10A               	bnz	u11590
  4136  000240  0E0A               	movlw	10
  4137  000242  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4138  000244  A0D8               	btfss	status,0,c
  4139  000246  EF27  F001         	goto	u11591
  4140  00024A  EF2A  F001         	goto	u11590
  4141  00024E                     u11591:
  4142  00024E  0E01               	movlw	1
  4143  000250  EF2B  F001         	goto	u11600
  4144  000254                     u11590:
  4145  000254  0E00               	movlw	0
  4146  000256                     u11600:
  4147  000256  0100               	movlb	0	; () banked
  4148  000258  6F9C               	movwf	_vfpfcnvrt$1456& (0+255),b
  4149  00025A  6B9D               	clrf	(_vfpfcnvrt$1456+1)& (0+255),b
  4150  00025C                     
  4151                           ; BSR set to: 0
  4152  00025C  519C               	movf	_vfpfcnvrt$1456& (0+255),w,b
  4153  00025E  119D               	iorwf	(_vfpfcnvrt$1456+1)& (0+255),w,b
  4154  000260  A4D8               	btfss	status,2,c
  4155  000262  EF35  F001         	goto	u11611
  4156  000266  EF37  F001         	goto	u11610
  4157  00026A                     u11611:
  4158  00026A  EF02  F001         	goto	l8771
  4159  00026E                     u11610:
  4160  00026E                     l8779:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4164  00026E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4165  000272  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4166  000276  CFDE FFF6          	movff	postinc2,tblptrl
  4167  00027A  CFDD FFF7          	movff	postdec2,tblptrh
  4168  00027E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4169  00027E  6AF8               	clrf	tblptru,c
  4170  000280                     	endif
  4171  000280                     	if	0	;tblptru may be non-zero
  4172  000280                     	endif
  4173  000280  0008               	tblrd		*
  4174  000282  50F5               	movf	tablat,w,c
  4175  000284  0A2E               	xorlw	46
  4176  000286  A4D8               	btfss	status,2,c
  4177  000288  EF48  F001         	goto	u11621
  4178  00028C  EF4A  F001         	goto	u11620
  4179  000290                     u11621:
  4180  000290  EFCA  F001         	goto	l8799
  4181  000294                     u11620:
  4182  000294                     
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4185  000294  0E00               	movlw	0
  4186  000296  6E59               	movwf	(_prec+1)^0,c
  4187  000298  0E00               	movlw	0
  4188  00029A  6E58               	movwf	_prec^0,c
  4189  00029C                     
  4190                           ; BSR set to: 0
  4191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4192  00029C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4193  0002A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4194  0002A4  2ADE               	incf	postinc2,f,c
  4195  0002A6  0E00               	movlw	0
  4196  0002A8  22DD               	addwfc	postdec2,f,c
  4197  0002AA                     
  4198                           ; BSR set to: 0
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4200  0002AA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4201  0002AE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4202  0002B2  CFDE FFF6          	movff	postinc2,tblptrl
  4203  0002B6  CFDD FFF7          	movff	postdec2,tblptrh
  4204  0002BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4205  0002BA  6AF8               	clrf	tblptru,c
  4206  0002BC                     	endif
  4207  0002BC                     	if	0	;tblptru may be non-zero
  4208  0002BC                     	endif
  4209  0002BC  0008               	tblrd		*
  4210  0002BE  50F5               	movf	tablat,w,c
  4211  0002C0  0A2A               	xorlw	42
  4212  0002C2  A4D8               	btfss	status,2,c
  4213  0002C4  EF66  F001         	goto	u11631
  4214  0002C8  EF68  F001         	goto	u11630
  4215  0002CC                     u11631:
  4216  0002CC  EF85  F001         	goto	l8789
  4217  0002D0                     u11630:
  4218  0002D0                     
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4221  0002D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4222  0002D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4223  0002D8  2ADE               	incf	postinc2,f,c
  4224  0002DA  0E00               	movlw	0
  4225  0002DC  22DD               	addwfc	postdec2,f,c
  4226                           
  4227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4228  0002DE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4229  0002E2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4230  0002E6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4231  0002EA  0E02               	movlw	2
  4232  0002EC  26DE               	addwf	postinc2,f,c
  4233  0002EE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4234  0002F2  0E00               	movlw	0
  4235  0002F4  22DD               	addwfc	postdec2,f,c
  4236  0002F6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4237  0002FA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4238  0002FE  CFDE F058          	movff	postinc2,_prec
  4239  000302  CFDD F059          	movff	postdec2,_prec+1
  4240                           
  4241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4242  000306  EFCA  F001         	goto	l8799
  4243  00030A                     l8789:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4247  00030A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4248  00030E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4249  000312  CFDE F00B          	movff	postinc2,atoi@s
  4250  000316  CFDD F00C          	movff	postdec2,atoi@s+1
  4251  00031A  EC40  F01F         	call	_atoi	;wreg free
  4252  00031E  C00B  F058         	movff	?_atoi,_prec
  4253  000322  C00C  F059         	movff	?_atoi+1,_prec+1
  4254                           
  4255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4256  000326  EF9C  F001         	goto	l8793
  4257  00032A                     l8791:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4261  00032A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4262  00032E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4263  000332  2ADE               	incf	postinc2,f,c
  4264  000334  0E00               	movlw	0
  4265  000336  22DD               	addwfc	postdec2,f,c
  4266  000338                     l8793:
  4267  000338  0ED0               	movlw	208
  4268  00033A  6E4C               	movwf	??_vfpfcnvrt^0,c
  4269  00033C  0EFF               	movlw	255
  4270  00033E  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4271  000340  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4272  000344  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4273  000348  CFDE FFF6          	movff	postinc2,tblptrl
  4274  00034C  CFDD FFF7          	movff	postdec2,tblptrh
  4275  000350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4276  000350  6AF8               	clrf	tblptru,c
  4277  000352                     	endif
  4278  000352                     	if	0	;tblptru may be non-zero
  4279  000352                     	endif
  4280  000352  0008               	tblrd		*
  4281  000354  50F5               	movf	tablat,w,c
  4282  000356  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4283  000358  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4284  00035A  504C               	movf	??_vfpfcnvrt^0,w,c
  4285  00035C  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4286  00035E  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4287  000360  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4288  000362  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4289  000364  E10A               	bnz	u11640
  4290  000366  0E0A               	movlw	10
  4291  000368  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4292  00036A  A0D8               	btfss	status,0,c
  4293  00036C  EFBA  F001         	goto	u11641
  4294  000370  EFBD  F001         	goto	u11640
  4295  000374                     u11641:
  4296  000374  0E01               	movlw	1
  4297  000376  EFBE  F001         	goto	u11650
  4298  00037A                     u11640:
  4299  00037A  0E00               	movlw	0
  4300  00037C                     u11650:
  4301  00037C  0100               	movlb	0	; () banked
  4302  00037E  6F9E               	movwf	_vfpfcnvrt$1457& (0+255),b
  4303  000380  6B9F               	clrf	(_vfpfcnvrt$1457+1)& (0+255),b
  4304  000382                     
  4305                           ; BSR set to: 0
  4306  000382  519E               	movf	_vfpfcnvrt$1457& (0+255),w,b
  4307  000384  119F               	iorwf	(_vfpfcnvrt$1457+1)& (0+255),w,b
  4308  000386  A4D8               	btfss	status,2,c
  4309  000388  EFC8  F001         	goto	u11661
  4310  00038C  EFCA  F001         	goto	u11660
  4311  000390                     u11661:
  4312  000390  EF95  F001         	goto	l8791
  4313  000394                     u11660:
  4314  000394                     l8799:
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4318  000394  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4319  000398  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4320  00039C  CFDE FFF6          	movff	postinc2,tblptrl
  4321  0003A0  CFDD FFF7          	movff	postdec2,tblptrh
  4322  0003A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4323  0003A4  6AF8               	clrf	tblptru,c
  4324  0003A6                     	endif
  4325  0003A6                     	if	0	;tblptru may be non-zero
  4326  0003A6                     	endif
  4327  0003A6  0008               	tblrd		*
  4328  0003A8  50F5               	movf	tablat,w,c
  4329  0003AA  6E0A               	movwf	tolower@c^0,c
  4330  0003AC  6A0B               	clrf	(tolower@c+1)^0,c
  4331  0003AE  EC7F  F02A         	call	_tolower	;wreg free
  4332  0003B2  500A               	movf	?_tolower^0,w,c
  4333  0003B4  0100               	movlb	0	; () banked
  4334  0003B6  6FA6               	movwf	vfpfcnvrt@ct& (0+255),b
  4335  0003B8                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4338  0003B8  51A6               	movf	vfpfcnvrt@ct& (0+255),w,b
  4339  0003BA  B4D8               	btfsc	status,2,c
  4340  0003BC  EFE2  F001         	goto	u11671
  4341  0003C0  EFE4  F001         	goto	u11670
  4342  0003C4                     u11671:
  4343  0003C4  EF20  F002         	goto	l8809
  4344  0003C8                     u11670:
  4345  0003C8                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4348  0003C8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4349  0003CC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4350  0003D0  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4351  0003D4  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4352  0003D8  0E01               	movlw	1
  4353  0003DA  264C               	addwf	??_vfpfcnvrt^0,f,c
  4354  0003DC  0E00               	movlw	0
  4355  0003DE  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4356  0003E0  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4357  0003E4  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4358  0003E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4359  0003E8  6AF8               	clrf	tblptru,c
  4360  0003EA                     	endif
  4361  0003EA                     	if	0	;tblptru may be non-zero
  4362  0003EA                     	endif
  4363  0003EA  0008               	tblrd		*
  4364  0003EC  50F5               	movf	tablat,w,c
  4365  0003EE  6E0A               	movwf	tolower@c^0,c
  4366  0003F0  6A0B               	clrf	(tolower@c+1)^0,c
  4367  0003F2  EC7F  F02A         	call	_tolower	;wreg free
  4368  0003F6  500A               	movf	?_tolower^0,w,c
  4369  0003F8  0100               	movlb	0	; () banked
  4370  0003FA  6FA7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4371  0003FC                     
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4374  0003FC  51A7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4375  0003FE  B4D8               	btfsc	status,2,c
  4376  000400  EF04  F002         	goto	u11681
  4377  000404  EF06  F002         	goto	u11680
  4378  000408                     u11681:
  4379  000408  EF20  F002         	goto	l8809
  4380  00040C                     u11680:
  4381  00040C                     
  4382                           ; BSR set to: 0
  4383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4384  00040C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4385  000410  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4386  000414  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4387  000418  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4388  00041C  0E02               	movlw	2
  4389  00041E  264C               	addwf	??_vfpfcnvrt^0,f,c
  4390  000420  0E00               	movlw	0
  4391  000422  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4392  000424  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4393  000428  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4394  00042C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4395  00042C  6AF8               	clrf	tblptru,c
  4396  00042E                     	endif
  4397  00042E                     	if	0	;tblptru may be non-zero
  4398  00042E                     	endif
  4399  00042E  0008               	tblrd		*
  4400  000430  50F5               	movf	tablat,w,c
  4401  000432  6E0A               	movwf	tolower@c^0,c
  4402  000434  6A0B               	clrf	(tolower@c+1)^0,c
  4403  000436  EC7F  F02A         	call	_tolower	;wreg free
  4404  00043A  500A               	movf	?_tolower^0,w,c
  4405  00043C  0100               	movlb	0	; () banked
  4406  00043E  6FA8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4407  000440                     l8809:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4411  000440  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4412  000444  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4413  000448  CFDE FFF6          	movff	postinc2,tblptrl
  4414  00044C  CFDD FFF7          	movff	postdec2,tblptrh
  4415  000450                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4416  000450  6AF8               	clrf	tblptru,c
  4417  000452                     	endif
  4418  000452                     	if	0	;tblptru may be non-zero
  4419  000452                     	endif
  4420  000452  0008               	tblrd		*
  4421  000454  50F5               	movf	tablat,w,c
  4422  000456  0A63               	xorlw	99
  4423  000458  A4D8               	btfss	status,2,c
  4424  00045A  EF31  F002         	goto	u11691
  4425  00045E  EF33  F002         	goto	u11690
  4426  000462                     u11691:
  4427  000462  EF5A  F002         	goto	l8817
  4428  000466                     u11690:
  4429  000466                     
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4432  000466  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4433  00046A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4434  00046E  2ADE               	incf	postinc2,f,c
  4435  000470  0E00               	movlw	0
  4436  000472  22DD               	addwfc	postdec2,f,c
  4437                           
  4438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4439  000474  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4440  000478  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4441  00047C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4442  000480  0E02               	movlw	2
  4443  000482  26DE               	addwf	postinc2,f,c
  4444  000484  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4445  000488  0E00               	movlw	0
  4446  00048A  22DD               	addwfc	postdec2,f,c
  4447  00048C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4448  000490  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4449  000494  50DF               	movf	indf2,w,c
  4450  000496  6FB3               	movwf	vfpfcnvrt@c& (0+255),b
  4451  000498                     
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4454  000498  C046  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  4455  00049C  C047  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4456  0004A0  C0B3  F021         	movff	vfpfcnvrt@c,ctoa@c
  4457  0004A4  EC0D  F02B         	call	_ctoa	;wreg free
  4458  0004A8  C01F  F046         	movff	?_ctoa,?_vfpfcnvrt
  4459  0004AC  C020  F047         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4460  0004B0  EFA4  F00A         	goto	l770
  4461  0004B4                     l8817:
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4465  0004B4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4466  0004B8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4467  0004BC  CFDE F004          	movff	postinc2,strncmp@_l
  4468  0004C0  CFDD F005          	movff	postdec2,strncmp@_l+1
  4469  0004C4  0EC6               	movlw	low STR_12
  4470  0004C6  6E06               	movwf	strncmp@_r^0,c
  4471  0004C8  0EFF               	movlw	high STR_12
  4472  0004CA  6E07               	movwf	(strncmp@_r+1)^0,c
  4473  0004CC  0E00               	movlw	0
  4474  0004CE  6E09               	movwf	(strncmp@n+1)^0,c
  4475  0004D0  0E03               	movlw	3
  4476  0004D2  6E08               	movwf	strncmp@n^0,c
  4477  0004D4  EC5E  F024         	call	_strncmp	;wreg free
  4478  0004D8  5004               	movf	?_strncmp^0,w,c
  4479  0004DA  1005               	iorwf	(?_strncmp+1)^0,w,c
  4480  0004DC  B4D8               	btfsc	status,2,c
  4481  0004DE  EF73  F002         	goto	u11701
  4482  0004E2  EF75  F002         	goto	u11700
  4483  0004E6                     u11701:
  4484  0004E6  EF90  F002         	goto	l8821
  4485  0004EA                     u11700:
  4486  0004EA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4487  0004EE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4488  0004F2  CFDE F004          	movff	postinc2,strncmp@_l
  4489  0004F6  CFDD F005          	movff	postdec2,strncmp@_l+1
  4490  0004FA  0ECE               	movlw	low STR_16
  4491  0004FC  6E06               	movwf	strncmp@_r^0,c
  4492  0004FE  0EFF               	movlw	high STR_16
  4493  000500  6E07               	movwf	(strncmp@_r+1)^0,c
  4494  000502  0E00               	movlw	0
  4495  000504  6E09               	movwf	(strncmp@n+1)^0,c
  4496  000506  0E03               	movlw	3
  4497  000508  6E08               	movwf	strncmp@n^0,c
  4498  00050A  EC5E  F024         	call	_strncmp	;wreg free
  4499  00050E  5004               	movf	?_strncmp^0,w,c
  4500  000510  1005               	iorwf	(?_strncmp+1)^0,w,c
  4501  000512  A4D8               	btfss	status,2,c
  4502  000514  EF8E  F002         	goto	u11711
  4503  000518  EF90  F002         	goto	u11710
  4504  00051C                     u11711:
  4505  00051C  EFD1  F002         	goto	l8827
  4506  000520                     u11710:
  4507  000520                     l8821:
  4508                           
  4509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4510  000520  0E03               	movlw	3
  4511  000522  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4512  000526  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4513  00052A  26DE               	addwf	postinc2,f,c
  4514  00052C  0E00               	movlw	0
  4515  00052E  22DD               	addwfc	postdec2,f,c
  4516                           
  4517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4518  000530  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4519  000534  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4520  000538  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4521  00053C  0E02               	movlw	2
  4522  00053E  26DE               	addwf	postinc2,f,c
  4523  000540  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4524  000544  0E00               	movlw	0
  4525  000546  22DD               	addwfc	postdec2,f,c
  4526  000548  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4527  00054C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4528  000550  50DF               	movf	indf2,w,c
  4529  000552  0100               	movlb	0	; () banked
  4530  000554  6FA9               	movwf	vfpfcnvrt@ll& (0+255),b
  4531  000556  0E00               	movlw	0
  4532  000558  BFA9               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4533  00055A  0EFF               	movlw	-1
  4534  00055C  6FAA               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4535  00055E  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4536  000560  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4537  000562  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4538  000564  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4539  000566  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4540  000568  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4541  00056A                     l8823:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4545  00056A  C046  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4546  00056E  C047  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4547  000572  C0A9  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4548  000576  C0AA  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4549  00057A  C0AB  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4550  00057E  C0AC  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4551  000582  C0AD  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4552  000586  C0AE  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4553  00058A  C0AF  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4554  00058E  C0B0  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4555  000592  EC82  F018         	call	_dtoa	;wreg free
  4556  000596  C01F  F046         	movff	?_dtoa,?_vfpfcnvrt
  4557  00059A  C020  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4558  00059E  EFA4  F00A         	goto	l770
  4559  0005A2                     l8827:
  4560                           
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4562  0005A2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4563  0005A6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4564  0005AA  CFDE F004          	movff	postinc2,strncmp@_l
  4565  0005AE  CFDD F005          	movff	postdec2,strncmp@_l+1
  4566  0005B2  0EC7               	movlw	low (STR_12+1)
  4567  0005B4  6E06               	movwf	strncmp@_r^0,c
  4568  0005B6  0EFF               	movlw	high (STR_12+1)
  4569  0005B8  6E07               	movwf	(strncmp@_r+1)^0,c
  4570  0005BA  0E00               	movlw	0
  4571  0005BC  6E09               	movwf	(strncmp@n+1)^0,c
  4572  0005BE  0E02               	movlw	2
  4573  0005C0  6E08               	movwf	strncmp@n^0,c
  4574  0005C2  EC5E  F024         	call	_strncmp	;wreg free
  4575  0005C6  5004               	movf	?_strncmp^0,w,c
  4576  0005C8  1005               	iorwf	(?_strncmp+1)^0,w,c
  4577  0005CA  B4D8               	btfsc	status,2,c
  4578  0005CC  EFEA  F002         	goto	u11721
  4579  0005D0  EFEC  F002         	goto	u11720
  4580  0005D4                     u11721:
  4581  0005D4  EF07  F003         	goto	l8831
  4582  0005D8                     u11720:
  4583  0005D8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4584  0005DC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4585  0005E0  CFDE F004          	movff	postinc2,strncmp@_l
  4586  0005E4  CFDD F005          	movff	postdec2,strncmp@_l+1
  4587  0005E8  0ECF               	movlw	low (STR_16+1)
  4588  0005EA  6E06               	movwf	strncmp@_r^0,c
  4589  0005EC  0EFF               	movlw	high (STR_16+1)
  4590  0005EE  6E07               	movwf	(strncmp@_r+1)^0,c
  4591  0005F0  0E00               	movlw	0
  4592  0005F2  6E09               	movwf	(strncmp@n+1)^0,c
  4593  0005F4  0E02               	movlw	2
  4594  0005F6  6E08               	movwf	strncmp@n^0,c
  4595  0005F8  EC5E  F024         	call	_strncmp	;wreg free
  4596  0005FC  5004               	movf	?_strncmp^0,w,c
  4597  0005FE  1005               	iorwf	(?_strncmp+1)^0,w,c
  4598  000600  A4D8               	btfss	status,2,c
  4599  000602  EF05  F003         	goto	u11731
  4600  000606  EF07  F003         	goto	u11730
  4601  00060A                     u11731:
  4602  00060A  EF2F  F003         	goto	l8837
  4603  00060E                     u11730:
  4604  00060E                     l8831:
  4605                           
  4606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4607  00060E  0E02               	movlw	2
  4608  000610  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4609  000614  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4610  000618  26DE               	addwf	postinc2,f,c
  4611  00061A  0E00               	movlw	0
  4612  00061C  22DD               	addwfc	postdec2,f,c
  4613                           
  4614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4615  00061E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4616  000622  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4617  000626  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4618  00062A  0E02               	movlw	2
  4619  00062C  26DE               	addwf	postinc2,f,c
  4620  00062E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4621  000632  0E00               	movlw	0
  4622  000634  22DD               	addwfc	postdec2,f,c
  4623  000636  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4624  00063A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4625  00063E  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4626  000642  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4627  000646  0100               	movlb	0	; () banked
  4628  000648  0E00               	movlw	0
  4629  00064A  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4630  00064C  0EFF               	movlw	-1
  4631  00064E  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4632  000650  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4633  000652  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4634  000654  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4635  000656  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4636  000658  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4637  00065A  EFB5  F002         	goto	l8823
  4638  00065E                     l8837:
  4639                           
  4640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4641  00065E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4642  000662  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4643  000666  CFDE FFF6          	movff	postinc2,tblptrl
  4644  00066A  CFDD FFF7          	movff	postdec2,tblptrh
  4645  00066E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4646  00066E  6AF8               	clrf	tblptru,c
  4647  000670                     	endif
  4648  000670                     	if	0	;tblptru may be non-zero
  4649  000670                     	endif
  4650  000670  0008               	tblrd		*
  4651  000672  50F5               	movf	tablat,w,c
  4652  000674  0A64               	xorlw	100
  4653  000676  B4D8               	btfsc	status,2,c
  4654  000678  EF40  F003         	goto	u11741
  4655  00067C  EF42  F003         	goto	u11740
  4656  000680                     u11741:
  4657  000680  EF55  F003         	goto	l8841
  4658  000684                     u11740:
  4659  000684  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4660  000688  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4661  00068C  CFDE FFF6          	movff	postinc2,tblptrl
  4662  000690  CFDD FFF7          	movff	postdec2,tblptrh
  4663  000694                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4664  000694  6AF8               	clrf	tblptru,c
  4665  000696                     	endif
  4666  000696                     	if	0	;tblptru may be non-zero
  4667  000696                     	endif
  4668  000696  0008               	tblrd		*
  4669  000698  50F5               	movf	tablat,w,c
  4670  00069A  0A69               	xorlw	105
  4671  00069C  A4D8               	btfss	status,2,c
  4672  00069E  EF53  F003         	goto	u11751
  4673  0006A2  EF55  F003         	goto	u11750
  4674  0006A6                     u11751:
  4675  0006A6  EF7C  F003         	goto	l8847
  4676  0006AA                     u11750:
  4677  0006AA                     l8841:
  4678                           
  4679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4680  0006AA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4681  0006AE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4682  0006B2  2ADE               	incf	postinc2,f,c
  4683  0006B4  0E00               	movlw	0
  4684  0006B6  22DD               	addwfc	postdec2,f,c
  4685                           
  4686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4687  0006B8  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4688  0006BC  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4689  0006C0  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4690  0006C4  0E02               	movlw	2
  4691  0006C6  26DE               	addwf	postinc2,f,c
  4692  0006C8  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4693  0006CC  0E00               	movlw	0
  4694  0006CE  22DD               	addwfc	postdec2,f,c
  4695  0006D0  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4696  0006D4  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4697  0006D8  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4698  0006DC  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4699  0006E0  0100               	movlb	0	; () banked
  4700  0006E2  0E00               	movlw	0
  4701  0006E4  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4702  0006E6  0EFF               	movlw	-1
  4703  0006E8  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4704  0006EA  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4705  0006EC  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4706  0006EE  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4707  0006F0  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4708  0006F2  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4709  0006F4  EFB5  F002         	goto	l8823
  4710  0006F8                     l8847:
  4711                           
  4712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4713  0006F8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4714  0006FC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4715  000700  CFDE F004          	movff	postinc2,strncmp@_l
  4716  000704  CFDD F005          	movff	postdec2,strncmp@_l+1
  4717  000708  0EE9               	movlw	low STR_30
  4718  00070A  6E06               	movwf	strncmp@_r^0,c
  4719  00070C  0EFF               	movlw	high STR_30
  4720  00070E  6E07               	movwf	(strncmp@_r+1)^0,c
  4721  000710  0E00               	movlw	0
  4722  000712  6E09               	movwf	(strncmp@n+1)^0,c
  4723  000714  0E02               	movlw	2
  4724  000716  6E08               	movwf	strncmp@n^0,c
  4725  000718  EC5E  F024         	call	_strncmp	;wreg free
  4726  00071C  5004               	movf	?_strncmp^0,w,c
  4727  00071E  1005               	iorwf	(?_strncmp+1)^0,w,c
  4728  000720  B4D8               	btfsc	status,2,c
  4729  000722  EF95  F003         	goto	u11761
  4730  000726  EF97  F003         	goto	u11760
  4731  00072A                     u11761:
  4732  00072A  EFB2  F003         	goto	l8851
  4733  00072E                     u11760:
  4734  00072E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4735  000732  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4736  000736  CFDE F004          	movff	postinc2,strncmp@_l
  4737  00073A  CFDD F005          	movff	postdec2,strncmp@_l+1
  4738  00073E  0EEF               	movlw	low STR_34
  4739  000740  6E06               	movwf	strncmp@_r^0,c
  4740  000742  0EFF               	movlw	high STR_34
  4741  000744  6E07               	movwf	(strncmp@_r+1)^0,c
  4742  000746  0E00               	movlw	0
  4743  000748  6E09               	movwf	(strncmp@n+1)^0,c
  4744  00074A  0E02               	movlw	2
  4745  00074C  6E08               	movwf	strncmp@n^0,c
  4746  00074E  EC5E  F024         	call	_strncmp	;wreg free
  4747  000752  5004               	movf	?_strncmp^0,w,c
  4748  000754  1005               	iorwf	(?_strncmp+1)^0,w,c
  4749  000756  A4D8               	btfss	status,2,c
  4750  000758  EFB0  F003         	goto	u11771
  4751  00075C  EFB2  F003         	goto	u11770
  4752  000760                     u11771:
  4753  000760  EFDB  F003         	goto	l8857
  4754  000764                     u11770:
  4755  000764                     l8851:
  4756                           
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4758  000764  0E02               	movlw	2
  4759  000766  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4760  00076A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4761  00076E  26DE               	addwf	postinc2,f,c
  4762  000770  0E00               	movlw	0
  4763  000772  22DD               	addwfc	postdec2,f,c
  4764                           
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4766  000774  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4767  000778  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4768  00077C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4769  000780  0E02               	movlw	2
  4770  000782  26DE               	addwf	postinc2,f,c
  4771  000784  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4772  000788  0E00               	movlw	0
  4773  00078A  22DD               	addwfc	postdec2,f,c
  4774  00078C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4775  000790  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4776  000794  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4777  000798  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4778  00079C  C04E  F0A9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4779  0007A0  C04F  F0AA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4780  0007A4  0100               	movlb	0	; () banked
  4781  0007A6  6BAB               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4782  0007A8  6BAC               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4783  0007AA  6BAD               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4784  0007AC  6BAE               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4785  0007AE  6BAF               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4786  0007B0  6BB0               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4787  0007B2  EFB5  F002         	goto	l8823
  4788  0007B6                     l8857:
  4789                           
  4790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4791  0007B6  0E66               	movlw	102
  4792  0007B8  0100               	movlb	0	; () banked
  4793  0007BA  19A6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4794  0007BC  A4D8               	btfss	status,2,c
  4795  0007BE  EFE3  F003         	goto	u11781
  4796  0007C2  EFE5  F003         	goto	u11780
  4797  0007C6                     u11781:
  4798  0007C6  EF26  F004         	goto	l8869
  4799  0007CA                     u11780:
  4800  0007CA                     
  4801                           ; BSR set to: 0
  4802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4803  0007CA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4804  0007CE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4805  0007D2  CFDE FFF6          	movff	postinc2,tblptrl
  4806  0007D6  CFDD FFF7          	movff	postdec2,tblptrh
  4807  0007DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4808  0007DA  6AF8               	clrf	tblptru,c
  4809  0007DC                     	endif
  4810  0007DC                     	if	0	;tblptru may be non-zero
  4811  0007DC                     	endif
  4812  0007DC  0008               	tblrd		*
  4813  0007DE  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4814  0007E2                     
  4815                           ; BSR set to: 0
  4816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4817  0007E2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4818  0007E6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4819  0007EA  2ADE               	incf	postinc2,f,c
  4820  0007EC  0E00               	movlw	0
  4821  0007EE  22DD               	addwfc	postdec2,f,c
  4822  0007F0                     
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4825  0007F0  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4826  0007F4  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4827  0007F8  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4828  0007FC  0E04               	movlw	4
  4829  0007FE  26DE               	addwf	postinc2,f,c
  4830  000800  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4831  000804  0E00               	movlw	0
  4832  000806  22DD               	addwfc	postdec2,f,c
  4833  000808  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4834  00080C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4835  000810  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  4836  000814  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  4837  000818  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  4838  00081C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  4839  000820                     l8865:
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4843  000820  C046  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  4844  000824  C047  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4845  000828  C0A2  F039         	movff	vfpfcnvrt@f,efgtoa@f
  4846  00082C  C0A3  F03A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4847  000830  C0A4  F03B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4848  000834  C0A5  F03C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4849  000838  C0B3  F03D         	movff	vfpfcnvrt@c,efgtoa@c
  4850  00083C  ECA5  F00A         	call	_efgtoa	;wreg free
  4851  000840  C037  F046         	movff	?_efgtoa,?_vfpfcnvrt
  4852  000844  C038  F047         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4853  000848  EFA4  F00A         	goto	l770
  4854  00084C                     l8869:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4858  00084C  0EA6               	movlw	low vfpfcnvrt@ct
  4859  00084E  6E04               	movwf	strncmp@_l^0,c
  4860  000850  0E00               	movlw	high vfpfcnvrt@ct
  4861  000852  6E05               	movwf	(strncmp@_l+1)^0,c
  4862  000854  0EEC               	movlw	low STR_39
  4863  000856  6E06               	movwf	strncmp@_r^0,c
  4864  000858  0EFF               	movlw	high STR_39
  4865  00085A  6E07               	movwf	(strncmp@_r+1)^0,c
  4866  00085C  0E00               	movlw	0
  4867  00085E  6E09               	movwf	(strncmp@n+1)^0,c
  4868  000860  0E02               	movlw	2
  4869  000862  6E08               	movwf	strncmp@n^0,c
  4870  000864  EC5E  F024         	call	_strncmp	;wreg free
  4871  000868  5004               	movf	?_strncmp^0,w,c
  4872  00086A  1005               	iorwf	(?_strncmp+1)^0,w,c
  4873  00086C  A4D8               	btfss	status,2,c
  4874  00086E  EF3B  F004         	goto	u11791
  4875  000872  EF3D  F004         	goto	u11790
  4876  000876                     u11791:
  4877  000876  EFBB  F004         	goto	l8885
  4878  00087A                     u11790:
  4879  00087A                     
  4880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4881  00087A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4882  00087E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4883  000882  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4884  000886  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4885  00088A  0E01               	movlw	1
  4886  00088C  264C               	addwf	??_vfpfcnvrt^0,f,c
  4887  00088E  0E00               	movlw	0
  4888  000890  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4889  000892  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4890  000896  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4891  00089A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4892  00089A  6AF8               	clrf	tblptru,c
  4893  00089C                     	endif
  4894  00089C                     	if	0	;tblptru may be non-zero
  4895  00089C                     	endif
  4896  00089C  0008               	tblrd		*
  4897  00089E  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4898  0008A2  0EBF               	movlw	191
  4899  0008A4  6E4C               	movwf	??_vfpfcnvrt^0,c
  4900  0008A6  0EFF               	movlw	255
  4901  0008A8  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4902  0008AA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4903  0008AE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4904  0008B2  CFDE FFF6          	movff	postinc2,tblptrl
  4905  0008B6  CFDD FFF7          	movff	postdec2,tblptrh
  4906  0008BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4907  0008BA  6AF8               	clrf	tblptru,c
  4908  0008BC                     	endif
  4909  0008BC                     	if	0	;tblptru may be non-zero
  4910  0008BC                     	endif
  4911  0008BC  0008               	tblrd		*
  4912  0008BE  50F5               	movf	tablat,w,c
  4913  0008C0  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4914  0008C2  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4915  0008C4  504C               	movf	??_vfpfcnvrt^0,w,c
  4916  0008C6  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4917  0008C8  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4918  0008CA  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4919  0008CC  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4920  0008CE  E10A               	bnz	u11800
  4921  0008D0  0E1A               	movlw	26
  4922  0008D2  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4923  0008D4  A0D8               	btfss	status,0,c
  4924  0008D6  EF6F  F004         	goto	u11801
  4925  0008DA  EF72  F004         	goto	u11800
  4926  0008DE                     u11801:
  4927  0008DE  0E01               	movlw	1
  4928  0008E0  EF73  F004         	goto	u11810
  4929  0008E4                     u11800:
  4930  0008E4  0E00               	movlw	0
  4931  0008E6                     u11810:
  4932  0008E6  0100               	movlb	0	; () banked
  4933  0008E8  6FA0               	movwf	_vfpfcnvrt$1478& (0+255),b
  4934  0008EA  6BA1               	clrf	(_vfpfcnvrt$1478+1)& (0+255),b
  4935  0008EC                     
  4936                           ; BSR set to: 0
  4937  0008EC  51A0               	movf	_vfpfcnvrt$1478& (0+255),w,b
  4938  0008EE  11A1               	iorwf	(_vfpfcnvrt$1478+1)& (0+255),w,b
  4939  0008F0  B4D8               	btfsc	status,2,c
  4940  0008F2  EF7D  F004         	goto	u11821
  4941  0008F6  EF7F  F004         	goto	u11820
  4942  0008FA                     u11821:
  4943  0008FA  EF99  F004         	goto	l8879
  4944  0008FE                     u11820:
  4945  0008FE                     
  4946                           ; BSR set to: 0
  4947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4948  0008FE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4949  000902  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4950  000906  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4951  00090A  0E04               	movlw	4
  4952  00090C  26DE               	addwf	postinc2,f,c
  4953  00090E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4954  000912  0E00               	movlw	0
  4955  000914  22DD               	addwfc	postdec2,f,c
  4956  000916  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4957  00091A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4958  00091E  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  4959  000922  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  4960  000926  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  4961  00092A  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  4962                           
  4963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4964  00092E  EFB1  F004         	goto	l790
  4965  000932                     l8879:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4969  000932  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4970  000936  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4971  00093A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4972  00093E  0E04               	movlw	4
  4973  000940  26DE               	addwf	postinc2,f,c
  4974  000942  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4975  000946  0E00               	movlw	0
  4976  000948  22DD               	addwfc	postdec2,f,c
  4977  00094A  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4978  00094E  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4979  000952  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  4980  000956  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  4981  00095A  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  4982  00095E  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  4983  000962                     l790:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4987  000962  0E02               	movlw	2
  4988  000964  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4989  000968  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4990  00096C  26DE               	addwf	postinc2,f,c
  4991  00096E  0E00               	movlw	0
  4992  000970  22DD               	addwfc	postdec2,f,c
  4993  000972  EF10  F004         	goto	l8865
  4994  000976                     l8885:
  4995                           
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4997  000976  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4998  00097A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4999  00097E  CFDE F004          	movff	postinc2,strncmp@_l
  5000  000982  CFDD F005          	movff	postdec2,strncmp@_l+1
  5001  000986  0EDA               	movlw	low STR_44
  5002  000988  6E06               	movwf	strncmp@_r^0,c
  5003  00098A  0EFF               	movlw	high STR_44
  5004  00098C  6E07               	movwf	(strncmp@_r+1)^0,c
  5005  00098E  0E00               	movlw	0
  5006  000990  6E09               	movwf	(strncmp@n+1)^0,c
  5007  000992  0E03               	movlw	3
  5008  000994  6E08               	movwf	strncmp@n^0,c
  5009  000996  EC5E  F024         	call	_strncmp	;wreg free
  5010  00099A  5004               	movf	?_strncmp^0,w,c
  5011  00099C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5012  00099E  A4D8               	btfss	status,2,c
  5013  0009A0  EFD4  F004         	goto	u11831
  5014  0009A4  EFD6  F004         	goto	u11830
  5015  0009A8                     u11831:
  5016  0009A8  EF16  F005         	goto	l8893
  5017  0009AC                     u11830:
  5018  0009AC                     
  5019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5020  0009AC  0E03               	movlw	3
  5021  0009AE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5022  0009B2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5023  0009B6  26DE               	addwf	postinc2,f,c
  5024  0009B8  0E00               	movlw	0
  5025  0009BA  22DD               	addwfc	postdec2,f,c
  5026                           
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5028  0009BC  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5029  0009C0  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5030  0009C4  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5031  0009C8  0E02               	movlw	2
  5032  0009CA  26DE               	addwf	postinc2,f,c
  5033  0009CC  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5034  0009D0  0E00               	movlw	0
  5035  0009D2  22DD               	addwfc	postdec2,f,c
  5036  0009D4  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5037  0009D8  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5038  0009DC  50DF               	movf	indf2,w,c
  5039  0009DE  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5040  0009E0  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5041  0009E2  0100               	movlb	0	; () banked
  5042  0009E4  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5043  0009E6  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5044  0009E8  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5045  0009EA  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5046  0009EC  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5047  0009EE  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5048  0009F0  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5049  0009F2  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5050  0009F4                     l8889:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5054  0009F4  C046  F01F         	movff	vfpfcnvrt@fp,otoa@fp
  5055  0009F8  C047  F020         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5056  0009FC  C0B4  F021         	movff	vfpfcnvrt@llu,otoa@d
  5057  000A00  C0B5  F022         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5058  000A04  C0B6  F023         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5059  000A08  C0B7  F024         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5060  000A0C  C0B8  F025         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5061  000A10  C0B9  F026         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5062  000A14  C0BA  F027         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5063  000A18  C0BB  F028         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5064  000A1C  EC6E  F01D         	call	_otoa	;wreg free
  5065  000A20  C01F  F046         	movff	?_otoa,?_vfpfcnvrt
  5066  000A24  C020  F047         	movff	?_otoa+1,?_vfpfcnvrt+1
  5067  000A28  EFA4  F00A         	goto	l770
  5068  000A2C                     l8893:
  5069                           
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5071  000A2C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5072  000A30  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5073  000A34  CFDE F004          	movff	postinc2,strncmp@_l
  5074  000A38  CFDD F005          	movff	postdec2,strncmp@_l+1
  5075  000A3C  0EDB               	movlw	low (STR_44+1)
  5076  000A3E  6E06               	movwf	strncmp@_r^0,c
  5077  000A40  0EFF               	movlw	high (STR_44+1)
  5078  000A42  6E07               	movwf	(strncmp@_r+1)^0,c
  5079  000A44  0E00               	movlw	0
  5080  000A46  6E09               	movwf	(strncmp@n+1)^0,c
  5081  000A48  0E02               	movlw	2
  5082  000A4A  6E08               	movwf	strncmp@n^0,c
  5083  000A4C  EC5E  F024         	call	_strncmp	;wreg free
  5084  000A50  5004               	movf	?_strncmp^0,w,c
  5085  000A52  1005               	iorwf	(?_strncmp+1)^0,w,c
  5086  000A54  A4D8               	btfss	status,2,c
  5087  000A56  EF2F  F005         	goto	u11841
  5088  000A5A  EF31  F005         	goto	u11840
  5089  000A5E                     u11841:
  5090  000A5E  EF5A  F005         	goto	l8901
  5091  000A62                     u11840:
  5092  000A62                     
  5093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5094  000A62  0E02               	movlw	2
  5095  000A64  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5096  000A68  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5097  000A6C  26DE               	addwf	postinc2,f,c
  5098  000A6E  0E00               	movlw	0
  5099  000A70  22DD               	addwfc	postdec2,f,c
  5100                           
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5102  000A72  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5103  000A76  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5104  000A7A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5105  000A7E  0E02               	movlw	2
  5106  000A80  26DE               	addwf	postinc2,f,c
  5107  000A82  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5108  000A86  0E00               	movlw	0
  5109  000A88  22DD               	addwfc	postdec2,f,c
  5110  000A8A  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5111  000A8E  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5112  000A92  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5113  000A96  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5114  000A9A  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5115  000A9E  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5116  000AA2  0100               	movlb	0	; () banked
  5117  000AA4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5118  000AA6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5119  000AA8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5120  000AAA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5121  000AAC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5122  000AAE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5123  000AB0  EFFA  F004         	goto	l8889
  5124  000AB4                     l8901:
  5125                           
  5126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5127  000AB4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5128  000AB8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5129  000ABC  CFDE FFF6          	movff	postinc2,tblptrl
  5130  000AC0  CFDD FFF7          	movff	postdec2,tblptrh
  5131  000AC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5132  000AC4  6AF8               	clrf	tblptru,c
  5133  000AC6                     	endif
  5134  000AC6                     	if	0	;tblptru may be non-zero
  5135  000AC6                     	endif
  5136  000AC6  0008               	tblrd		*
  5137  000AC8  50F5               	movf	tablat,w,c
  5138  000ACA  0A6F               	xorlw	111
  5139  000ACC  A4D8               	btfss	status,2,c
  5140  000ACE  EF6B  F005         	goto	u11851
  5141  000AD2  EF6D  F005         	goto	u11850
  5142  000AD6                     u11851:
  5143  000AD6  EF95  F005         	goto	l8909
  5144  000ADA                     u11850:
  5145  000ADA                     
  5146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5147  000ADA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5148  000ADE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5149  000AE2  2ADE               	incf	postinc2,f,c
  5150  000AE4  0E00               	movlw	0
  5151  000AE6  22DD               	addwfc	postdec2,f,c
  5152                           
  5153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5154  000AE8  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5155  000AEC  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5156  000AF0  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5157  000AF4  0E02               	movlw	2
  5158  000AF6  26DE               	addwf	postinc2,f,c
  5159  000AF8  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5160  000AFC  0E00               	movlw	0
  5161  000AFE  22DD               	addwfc	postdec2,f,c
  5162  000B00  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5163  000B04  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5164  000B08  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5165  000B0C  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5166  000B10  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5167  000B14  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5168  000B18  0100               	movlb	0	; () banked
  5169  000B1A  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5170  000B1C  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5171  000B1E  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5172  000B20  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5173  000B22  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5174  000B24  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5175  000B26  EFFA  F004         	goto	l8889
  5176  000B2A                     l8909:
  5177                           
  5178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5179  000B2A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5180  000B2E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5181  000B32  CFDE F004          	movff	postinc2,strncmp@_l
  5182  000B36  CFDD F005          	movff	postdec2,strncmp@_l+1
  5183  000B3A  0EF5               	movlw	low STR_54
  5184  000B3C  6E06               	movwf	strncmp@_r^0,c
  5185  000B3E  0EFF               	movlw	high STR_54
  5186  000B40  6E07               	movwf	(strncmp@_r+1)^0,c
  5187  000B42  0E00               	movlw	0
  5188  000B44  6E09               	movwf	(strncmp@n+1)^0,c
  5189  000B46  0E02               	movlw	2
  5190  000B48  6E08               	movwf	strncmp@n^0,c
  5191  000B4A  EC5E  F024         	call	_strncmp	;wreg free
  5192  000B4E  5004               	movf	?_strncmp^0,w,c
  5193  000B50  1005               	iorwf	(?_strncmp+1)^0,w,c
  5194  000B52  A4D8               	btfss	status,2,c
  5195  000B54  EFAE  F005         	goto	u11861
  5196  000B58  EFB0  F005         	goto	u11860
  5197  000B5C                     u11861:
  5198  000B5C  EFD9  F005         	goto	l8917
  5199  000B60                     u11860:
  5200  000B60                     
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5202  000B60  0E02               	movlw	2
  5203  000B62  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5204  000B66  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5205  000B6A  26DE               	addwf	postinc2,f,c
  5206  000B6C  0E00               	movlw	0
  5207  000B6E  22DD               	addwfc	postdec2,f,c
  5208                           
  5209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5210  000B70  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5211  000B74  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5212  000B78  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5213  000B7C  0E02               	movlw	2
  5214  000B7E  26DE               	addwf	postinc2,f,c
  5215  000B80  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5216  000B84  0E00               	movlw	0
  5217  000B86  22DD               	addwfc	postdec2,f,c
  5218  000B88  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5219  000B8C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5220  000B90  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5221  000B94  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5222  000B98  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5223  000B9C  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5224  000BA0  0100               	movlb	0	; () banked
  5225  000BA2  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5226  000BA4  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5227  000BA6  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5228  000BA8  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5229  000BAA  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5230  000BAC  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5231  000BAE  EFFA  F004         	goto	l8889
  5232  000BB2                     l8917:
  5233                           
  5234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5235  000BB2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5236  000BB6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5237  000BBA  CFDE F004          	movff	postinc2,strncmp@_l
  5238  000BBE  CFDD F005          	movff	postdec2,strncmp@_l+1
  5239  000BC2  0ED6               	movlw	low STR_59
  5240  000BC4  6E06               	movwf	strncmp@_r^0,c
  5241  000BC6  0EFF               	movlw	high STR_59
  5242  000BC8  6E07               	movwf	(strncmp@_r+1)^0,c
  5243  000BCA  0E00               	movlw	0
  5244  000BCC  6E09               	movwf	(strncmp@n+1)^0,c
  5245  000BCE  0E03               	movlw	3
  5246  000BD0  6E08               	movwf	strncmp@n^0,c
  5247  000BD2  EC5E  F024         	call	_strncmp	;wreg free
  5248  000BD6  5004               	movf	?_strncmp^0,w,c
  5249  000BD8  1005               	iorwf	(?_strncmp+1)^0,w,c
  5250  000BDA  A4D8               	btfss	status,2,c
  5251  000BDC  EFF2  F005         	goto	u11871
  5252  000BE0  EFF4  F005         	goto	u11870
  5253  000BE4                     u11871:
  5254  000BE4  EF1C  F006         	goto	l8927
  5255  000BE8                     u11870:
  5256  000BE8                     
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5258  000BE8  0E03               	movlw	3
  5259  000BEA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5260  000BEE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5261  000BF2  26DE               	addwf	postinc2,f,c
  5262  000BF4  0E00               	movlw	0
  5263  000BF6  22DD               	addwfc	postdec2,f,c
  5264                           
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5266  000BF8  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5267  000BFC  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5268  000C00  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5269  000C04  0E02               	movlw	2
  5270  000C06  26DE               	addwf	postinc2,f,c
  5271  000C08  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5272  000C0C  0E00               	movlw	0
  5273  000C0E  22DD               	addwfc	postdec2,f,c
  5274  000C10  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5275  000C14  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5276  000C18  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5277  000C1C  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5278  000C20                     
  5279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5280  000C20  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5281  000C24  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5282  000C28  C0EA  FFDF         	movff	_nout,indf2
  5283  000C2C                     l8923:
  5284                           
  5285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5286  000C2C  0E00               	movlw	0
  5287  000C2E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  5288  000C30  0E00               	movlw	0
  5289  000C32  6E46               	movwf	?_vfpfcnvrt^0,c
  5290  000C34  EFA4  F00A         	goto	l770
  5291  000C38                     l8927:
  5292                           
  5293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5294  000C38  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5295  000C3C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5296  000C40  CFDE F004          	movff	postinc2,strncmp@_l
  5297  000C44  CFDD F005          	movff	postdec2,strncmp@_l+1
  5298  000C48  0ED7               	movlw	low (STR_59+1)
  5299  000C4A  6E06               	movwf	strncmp@_r^0,c
  5300  000C4C  0EFF               	movlw	high (STR_59+1)
  5301  000C4E  6E07               	movwf	(strncmp@_r+1)^0,c
  5302  000C50  0E00               	movlw	0
  5303  000C52  6E09               	movwf	(strncmp@n+1)^0,c
  5304  000C54  0E02               	movlw	2
  5305  000C56  6E08               	movwf	strncmp@n^0,c
  5306  000C58  EC5E  F024         	call	_strncmp	;wreg free
  5307  000C5C  5004               	movf	?_strncmp^0,w,c
  5308  000C5E  1005               	iorwf	(?_strncmp+1)^0,w,c
  5309  000C60  A4D8               	btfss	status,2,c
  5310  000C62  EF35  F006         	goto	u11881
  5311  000C66  EF37  F006         	goto	u11880
  5312  000C6A                     u11881:
  5313  000C6A  EF5D  F006         	goto	l8937
  5314  000C6E                     u11880:
  5315  000C6E                     
  5316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5317  000C6E  0E02               	movlw	2
  5318  000C70  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5319  000C74  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5320  000C78  26DE               	addwf	postinc2,f,c
  5321  000C7A  0E00               	movlw	0
  5322  000C7C  22DD               	addwfc	postdec2,f,c
  5323                           
  5324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5325  000C7E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5326  000C82  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5327  000C86  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5328  000C8A  0E02               	movlw	2
  5329  000C8C  26DE               	addwf	postinc2,f,c
  5330  000C8E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5331  000C92  0E00               	movlw	0
  5332  000C94  22DD               	addwfc	postdec2,f,c
  5333  000C96  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5334  000C9A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5335  000C9E  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5336  000CA2  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5337  000CA6                     
  5338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5339  000CA6  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5340  000CAA  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5341  000CAE  C0EA  FFDE         	movff	_nout,postinc2
  5342  000CB2  C0EB  FFDD         	movff	_nout+1,postdec2
  5343  000CB6  EF16  F006         	goto	l8923
  5344  000CBA                     l8937:
  5345                           
  5346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5347  000CBA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5348  000CBE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5349  000CC2  CFDE FFF6          	movff	postinc2,tblptrl
  5350  000CC6  CFDD FFF7          	movff	postdec2,tblptrh
  5351  000CCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5352  000CCA  6AF8               	clrf	tblptru,c
  5353  000CCC                     	endif
  5354  000CCC                     	if	0	;tblptru may be non-zero
  5355  000CCC                     	endif
  5356  000CCC  0008               	tblrd		*
  5357  000CCE  50F5               	movf	tablat,w,c
  5358  000CD0  0A6E               	xorlw	110
  5359  000CD2  A4D8               	btfss	status,2,c
  5360  000CD4  EF6E  F006         	goto	u11891
  5361  000CD8  EF70  F006         	goto	u11890
  5362  000CDC                     u11891:
  5363  000CDC  EF95  F006         	goto	l8947
  5364  000CE0                     u11890:
  5365  000CE0                     
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5367  000CE0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5368  000CE4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5369  000CE8  2ADE               	incf	postinc2,f,c
  5370  000CEA  0E00               	movlw	0
  5371  000CEC  22DD               	addwfc	postdec2,f,c
  5372                           
  5373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5374  000CEE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5375  000CF2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5376  000CF6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5377  000CFA  0E02               	movlw	2
  5378  000CFC  26DE               	addwf	postinc2,f,c
  5379  000CFE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5380  000D02  0E00               	movlw	0
  5381  000D04  22DD               	addwfc	postdec2,f,c
  5382  000D06  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5383  000D0A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5384  000D0E  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5385  000D12  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5386  000D16                     
  5387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5388  000D16  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5389  000D1A  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5390  000D1E  C0EA  FFDE         	movff	_nout,postinc2
  5391  000D22  C0EB  FFDD         	movff	_nout+1,postdec2
  5392  000D26  EF16  F006         	goto	l8923
  5393  000D2A                     l8947:
  5394                           
  5395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5396  000D2A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5397  000D2E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5398  000D32  CFDE F004          	movff	postinc2,strncmp@_l
  5399  000D36  CFDD F005          	movff	postdec2,strncmp@_l+1
  5400  000D3A  0EF2               	movlw	low STR_69
  5401  000D3C  6E06               	movwf	strncmp@_r^0,c
  5402  000D3E  0EFF               	movlw	high STR_69
  5403  000D40  6E07               	movwf	(strncmp@_r+1)^0,c
  5404  000D42  0E00               	movlw	0
  5405  000D44  6E09               	movwf	(strncmp@n+1)^0,c
  5406  000D46  0E02               	movlw	2
  5407  000D48  6E08               	movwf	strncmp@n^0,c
  5408  000D4A  EC5E  F024         	call	_strncmp	;wreg free
  5409  000D4E  5004               	movf	?_strncmp^0,w,c
  5410  000D50  1005               	iorwf	(?_strncmp+1)^0,w,c
  5411  000D52  A4D8               	btfss	status,2,c
  5412  000D54  EFAE  F006         	goto	u11901
  5413  000D58  EFB0  F006         	goto	u11900
  5414  000D5C                     u11901:
  5415  000D5C  EFD6  F006         	goto	l8957
  5416  000D60                     u11900:
  5417  000D60                     
  5418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5419  000D60  0E02               	movlw	2
  5420  000D62  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5421  000D66  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5422  000D6A  26DE               	addwf	postinc2,f,c
  5423  000D6C  0E00               	movlw	0
  5424  000D6E  22DD               	addwfc	postdec2,f,c
  5425                           
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5427  000D70  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5428  000D74  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5429  000D78  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5430  000D7C  0E02               	movlw	2
  5431  000D7E  26DE               	addwf	postinc2,f,c
  5432  000D80  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5433  000D84  0E00               	movlw	0
  5434  000D86  22DD               	addwfc	postdec2,f,c
  5435  000D88  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5436  000D8C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5437  000D90  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5438  000D94  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5439  000D98                     
  5440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5441  000D98  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5442  000D9C  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5443  000DA0  C0EA  FFDE         	movff	_nout,postinc2
  5444  000DA4  C0EB  FFDD         	movff	_nout+1,postdec2
  5445  000DA8  EF16  F006         	goto	l8923
  5446  000DAC                     l8957:
  5447                           
  5448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5449  000DAC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5450  000DB0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5451  000DB4  CFDE FFF6          	movff	postinc2,tblptrl
  5452  000DB8  CFDD FFF7          	movff	postdec2,tblptrh
  5453  000DBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5454  000DBC  6AF8               	clrf	tblptru,c
  5455  000DBE                     	endif
  5456  000DBE                     	if	0	;tblptru may be non-zero
  5457  000DBE                     	endif
  5458  000DBE  0008               	tblrd		*
  5459  000DC0  50F5               	movf	tablat,w,c
  5460  000DC2  0A70               	xorlw	112
  5461  000DC4  A4D8               	btfss	status,2,c
  5462  000DC6  EFE7  F006         	goto	u11911
  5463  000DCA  EFE9  F006         	goto	u11910
  5464  000DCE                     u11911:
  5465  000DCE  EF2D  F007         	goto	l8965
  5466  000DD2                     u11910:
  5467  000DD2                     
  5468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5469  000DD2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5470  000DD6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5471  000DDA  2ADE               	incf	postinc2,f,c
  5472  000DDC  0E00               	movlw	0
  5473  000DDE  22DD               	addwfc	postdec2,f,c
  5474                           
  5475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5476  000DE0  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5477  000DE4  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5478  000DE8  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5479  000DEC  0E02               	movlw	2
  5480  000DEE  26DE               	addwf	postinc2,f,c
  5481  000DF0  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5482  000DF4  0E00               	movlw	0
  5483  000DF6  22DD               	addwfc	postdec2,f,c
  5484  000DF8  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5485  000DFC  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5486  000E00  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5487  000E04  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5488  000E08  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5489  000E0C  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5490  000E10  0100               	movlb	0	; () banked
  5491  000E12  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5492  000E14  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5493  000E16  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5494  000E18  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5495  000E1A  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5496  000E1C  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5497  000E1E                     
  5498                           ; BSR set to: 0
  5499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5500  000E1E  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  5501  000E22  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5502  000E26  C0B4  F021         	movff	vfpfcnvrt@llu,xtoa@d
  5503  000E2A  C0B5  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5504  000E2E  C0B6  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5505  000E32  C0B7  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5506  000E36  C0B8  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5507  000E3A  C0B9  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5508  000E3E  C0BA  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5509  000E42  C0BB  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5510  000E46  0E78               	movlw	120
  5511  000E48  6E29               	movwf	xtoa@x^0,c
  5512  000E4A  ECF5  F019         	call	_xtoa	;wreg free
  5513  000E4E  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  5514  000E52  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5515  000E56  EFA4  F00A         	goto	l770
  5516  000E5A                     l8965:
  5517                           
  5518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5519  000E5A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5520  000E5E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5521  000E62  CFDE FFF6          	movff	postinc2,tblptrl
  5522  000E66  CFDD FFF7          	movff	postdec2,tblptrh
  5523  000E6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5524  000E6A  6AF8               	clrf	tblptru,c
  5525  000E6C                     	endif
  5526  000E6C                     	if	0	;tblptru may be non-zero
  5527  000E6C                     	endif
  5528  000E6C  0008               	tblrd		*
  5529  000E6E  50F5               	movf	tablat,w,c
  5530  000E70  0A73               	xorlw	115
  5531  000E72  A4D8               	btfss	status,2,c
  5532  000E74  EF3E  F007         	goto	u11921
  5533  000E78  EF40  F007         	goto	u11920
  5534  000E7C                     u11921:
  5535  000E7C  EF6B  F007         	goto	l8973
  5536  000E80                     u11920:
  5537  000E80                     
  5538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5539  000E80  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5540  000E84  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5541  000E88  2ADE               	incf	postinc2,f,c
  5542  000E8A  0E00               	movlw	0
  5543  000E8C  22DD               	addwfc	postdec2,f,c
  5544                           
  5545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5546  000E8E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5547  000E92  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5548  000E96  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5549  000E9A  0E02               	movlw	2
  5550  000E9C  26DE               	addwf	postinc2,f,c
  5551  000E9E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5552  000EA2  0E00               	movlw	0
  5553  000EA4  22DD               	addwfc	postdec2,f,c
  5554  000EA6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5555  000EAA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5556  000EAE  CFDE F098          	movff	postinc2,vfpfcnvrt@cp
  5557  000EB2  CFDD F099          	movff	postdec2,vfpfcnvrt@cp+1
  5558  000EB6                     
  5559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5560  000EB6  C046  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  5561  000EBA  C047  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5562  000EBE  C098  F00F         	movff	vfpfcnvrt@cp,stoa@s
  5563  000EC2  C099  F010         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5564  000EC6  ECD1  F020         	call	_stoa	;wreg free
  5565  000ECA  C00D  F046         	movff	?_stoa,?_vfpfcnvrt
  5566  000ECE  C00E  F047         	movff	?_stoa+1,?_vfpfcnvrt+1
  5567  000ED2  EFA4  F00A         	goto	l770
  5568  000ED6                     l8973:
  5569                           
  5570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5571  000ED6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5572  000EDA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5573  000EDE  CFDE F004          	movff	postinc2,strncmp@_l
  5574  000EE2  CFDD F005          	movff	postdec2,strncmp@_l+1
  5575  000EE6  0EDE               	movlw	low STR_74
  5576  000EE8  6E06               	movwf	strncmp@_r^0,c
  5577  000EEA  0EFF               	movlw	high STR_74
  5578  000EEC  6E07               	movwf	(strncmp@_r+1)^0,c
  5579  000EEE  0E00               	movlw	0
  5580  000EF0  6E09               	movwf	(strncmp@n+1)^0,c
  5581  000EF2  0E03               	movlw	3
  5582  000EF4  6E08               	movwf	strncmp@n^0,c
  5583  000EF6  EC5E  F024         	call	_strncmp	;wreg free
  5584  000EFA  5004               	movf	?_strncmp^0,w,c
  5585  000EFC  1005               	iorwf	(?_strncmp+1)^0,w,c
  5586  000EFE  A4D8               	btfss	status,2,c
  5587  000F00  EF84  F007         	goto	u11931
  5588  000F04  EF86  F007         	goto	u11930
  5589  000F08                     u11931:
  5590  000F08  EFC6  F007         	goto	l8981
  5591  000F0C                     u11930:
  5592  000F0C                     
  5593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5594  000F0C  0E03               	movlw	3
  5595  000F0E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5596  000F12  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5597  000F16  26DE               	addwf	postinc2,f,c
  5598  000F18  0E00               	movlw	0
  5599  000F1A  22DD               	addwfc	postdec2,f,c
  5600                           
  5601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5602  000F1C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5603  000F20  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5604  000F24  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5605  000F28  0E02               	movlw	2
  5606  000F2A  26DE               	addwf	postinc2,f,c
  5607  000F2C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5608  000F30  0E00               	movlw	0
  5609  000F32  22DD               	addwfc	postdec2,f,c
  5610  000F34  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5611  000F38  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5612  000F3C  50DF               	movf	indf2,w,c
  5613  000F3E  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5614  000F40  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5615  000F42  0100               	movlb	0	; () banked
  5616  000F44  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5617  000F46  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5618  000F48  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5619  000F4A  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5620  000F4C  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5621  000F4E  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5622  000F50  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5623  000F52  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5624  000F54                     l8977:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5628  000F54  C046  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  5629  000F58  C047  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5630  000F5C  C0B4  F021         	movff	vfpfcnvrt@llu,utoa@d
  5631  000F60  C0B5  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5632  000F64  C0B6  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5633  000F68  C0B7  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5634  000F6C  C0B8  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5635  000F70  C0B9  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5636  000F74  C0BA  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5637  000F78  C0BB  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5638  000F7C  EC6C  F01C         	call	_utoa	;wreg free
  5639  000F80  C01F  F046         	movff	?_utoa,?_vfpfcnvrt
  5640  000F84  C020  F047         	movff	?_utoa+1,?_vfpfcnvrt+1
  5641  000F88  EFA4  F00A         	goto	l770
  5642  000F8C                     l8981:
  5643                           
  5644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5645  000F8C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5646  000F90  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5647  000F94  CFDE F004          	movff	postinc2,strncmp@_l
  5648  000F98  CFDD F005          	movff	postdec2,strncmp@_l+1
  5649  000F9C  0EDF               	movlw	low (STR_74+1)
  5650  000F9E  6E06               	movwf	strncmp@_r^0,c
  5651  000FA0  0EFF               	movlw	high (STR_74+1)
  5652  000FA2  6E07               	movwf	(strncmp@_r+1)^0,c
  5653  000FA4  0E00               	movlw	0
  5654  000FA6  6E09               	movwf	(strncmp@n+1)^0,c
  5655  000FA8  0E02               	movlw	2
  5656  000FAA  6E08               	movwf	strncmp@n^0,c
  5657  000FAC  EC5E  F024         	call	_strncmp	;wreg free
  5658  000FB0  5004               	movf	?_strncmp^0,w,c
  5659  000FB2  1005               	iorwf	(?_strncmp+1)^0,w,c
  5660  000FB4  A4D8               	btfss	status,2,c
  5661  000FB6  EFDF  F007         	goto	u11941
  5662  000FBA  EFE1  F007         	goto	u11940
  5663  000FBE                     u11941:
  5664  000FBE  EF0A  F008         	goto	l8989
  5665  000FC2                     u11940:
  5666  000FC2                     
  5667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5668  000FC2  0E02               	movlw	2
  5669  000FC4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5670  000FC8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5671  000FCC  26DE               	addwf	postinc2,f,c
  5672  000FCE  0E00               	movlw	0
  5673  000FD0  22DD               	addwfc	postdec2,f,c
  5674                           
  5675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5676  000FD2  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5677  000FD6  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5678  000FDA  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5679  000FDE  0E02               	movlw	2
  5680  000FE0  26DE               	addwf	postinc2,f,c
  5681  000FE2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5682  000FE6  0E00               	movlw	0
  5683  000FE8  22DD               	addwfc	postdec2,f,c
  5684  000FEA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5685  000FEE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5686  000FF2  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5687  000FF6  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5688  000FFA  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5689  000FFE  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5690  001002  0100               	movlb	0	; () banked
  5691  001004  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5692  001006  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5693  001008  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5694  00100A  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5695  00100C  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5696  00100E  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5697  001010  EFAA  F007         	goto	l8977
  5698  001014                     l8989:
  5699                           
  5700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5701  001014  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5702  001018  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5703  00101C  CFDE FFF6          	movff	postinc2,tblptrl
  5704  001020  CFDD FFF7          	movff	postdec2,tblptrh
  5705  001024                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5706  001024  6AF8               	clrf	tblptru,c
  5707  001026                     	endif
  5708  001026                     	if	0	;tblptru may be non-zero
  5709  001026                     	endif
  5710  001026  0008               	tblrd		*
  5711  001028  50F5               	movf	tablat,w,c
  5712  00102A  0A75               	xorlw	117
  5713  00102C  A4D8               	btfss	status,2,c
  5714  00102E  EF1B  F008         	goto	u11951
  5715  001032  EF1D  F008         	goto	u11950
  5716  001036                     u11951:
  5717  001036  EF45  F008         	goto	l8997
  5718  00103A                     u11950:
  5719  00103A                     
  5720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5721  00103A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5722  00103E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5723  001042  2ADE               	incf	postinc2,f,c
  5724  001044  0E00               	movlw	0
  5725  001046  22DD               	addwfc	postdec2,f,c
  5726                           
  5727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5728  001048  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5729  00104C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5730  001050  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5731  001054  0E02               	movlw	2
  5732  001056  26DE               	addwf	postinc2,f,c
  5733  001058  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5734  00105C  0E00               	movlw	0
  5735  00105E  22DD               	addwfc	postdec2,f,c
  5736  001060  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5737  001064  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5738  001068  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5739  00106C  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5740  001070  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5741  001074  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5742  001078  0100               	movlb	0	; () banked
  5743  00107A  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5744  00107C  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5745  00107E  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5746  001080  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5747  001082  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5748  001084  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5749  001086  EFAA  F007         	goto	l8977
  5750  00108A                     l8997:
  5751                           
  5752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5753  00108A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5754  00108E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5755  001092  CFDE F004          	movff	postinc2,strncmp@_l
  5756  001096  CFDD F005          	movff	postdec2,strncmp@_l+1
  5757  00109A  0EF8               	movlw	low STR_84
  5758  00109C  6E06               	movwf	strncmp@_r^0,c
  5759  00109E  0EFF               	movlw	high STR_84
  5760  0010A0  6E07               	movwf	(strncmp@_r+1)^0,c
  5761  0010A2  0E00               	movlw	0
  5762  0010A4  6E09               	movwf	(strncmp@n+1)^0,c
  5763  0010A6  0E02               	movlw	2
  5764  0010A8  6E08               	movwf	strncmp@n^0,c
  5765  0010AA  EC5E  F024         	call	_strncmp	;wreg free
  5766  0010AE  5004               	movf	?_strncmp^0,w,c
  5767  0010B0  1005               	iorwf	(?_strncmp+1)^0,w,c
  5768  0010B2  A4D8               	btfss	status,2,c
  5769  0010B4  EF5E  F008         	goto	u11961
  5770  0010B8  EF60  F008         	goto	u11960
  5771  0010BC                     u11961:
  5772  0010BC  EF89  F008         	goto	l9005
  5773  0010C0                     u11960:
  5774  0010C0                     
  5775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5776  0010C0  0E02               	movlw	2
  5777  0010C2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5778  0010C6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5779  0010CA  26DE               	addwf	postinc2,f,c
  5780  0010CC  0E00               	movlw	0
  5781  0010CE  22DD               	addwfc	postdec2,f,c
  5782                           
  5783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5784  0010D0  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5785  0010D4  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5786  0010D8  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5787  0010DC  0E02               	movlw	2
  5788  0010DE  26DE               	addwf	postinc2,f,c
  5789  0010E0  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5790  0010E4  0E00               	movlw	0
  5791  0010E6  22DD               	addwfc	postdec2,f,c
  5792  0010E8  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5793  0010EC  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5794  0010F0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5795  0010F4  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5796  0010F8  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5797  0010FC  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5798  001100  0100               	movlb	0	; () banked
  5799  001102  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5800  001104  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5801  001106  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5802  001108  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5803  00110A  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5804  00110C  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5805  00110E  EFAA  F007         	goto	l8977
  5806  001112                     l9005:
  5807                           
  5808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5809  001112  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5810  001116  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5811  00111A  CFDE F004          	movff	postinc2,strncmp@_l
  5812  00111E  CFDD F005          	movff	postdec2,strncmp@_l+1
  5813  001122  0EE2               	movlw	low STR_89
  5814  001124  6E06               	movwf	strncmp@_r^0,c
  5815  001126  0EFF               	movlw	high STR_89
  5816  001128  6E07               	movwf	(strncmp@_r+1)^0,c
  5817  00112A  0E00               	movlw	0
  5818  00112C  6E09               	movwf	(strncmp@n+1)^0,c
  5819  00112E  0E03               	movlw	3
  5820  001130  6E08               	movwf	strncmp@n^0,c
  5821  001132  EC5E  F024         	call	_strncmp	;wreg free
  5822  001136  5004               	movf	?_strncmp^0,w,c
  5823  001138  1005               	iorwf	(?_strncmp+1)^0,w,c
  5824  00113A  B4D8               	btfsc	status,2,c
  5825  00113C  EFA2  F008         	goto	u11971
  5826  001140  EFA4  F008         	goto	u11970
  5827  001144                     u11971:
  5828  001144  EFBF  F008         	goto	l9009
  5829  001148                     u11970:
  5830  001148  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5831  00114C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5832  001150  CFDE F004          	movff	postinc2,strncmp@_l
  5833  001154  CFDD F005          	movff	postdec2,strncmp@_l+1
  5834  001158  0EC2               	movlw	low STR_93
  5835  00115A  6E06               	movwf	strncmp@_r^0,c
  5836  00115C  0EFF               	movlw	high STR_93
  5837  00115E  6E07               	movwf	(strncmp@_r+1)^0,c
  5838  001160  0E00               	movlw	0
  5839  001162  6E09               	movwf	(strncmp@n+1)^0,c
  5840  001164  0E03               	movlw	3
  5841  001166  6E08               	movwf	strncmp@n^0,c
  5842  001168  EC5E  F024         	call	_strncmp	;wreg free
  5843  00116C  5004               	movf	?_strncmp^0,w,c
  5844  00116E  1005               	iorwf	(?_strncmp+1)^0,w,c
  5845  001170  A4D8               	btfss	status,2,c
  5846  001172  EFBD  F008         	goto	u11981
  5847  001176  EFBF  F008         	goto	u11980
  5848  00117A                     u11981:
  5849  00117A  EF15  F009         	goto	l9019
  5850  00117E                     u11980:
  5851  00117E                     l9009:
  5852                           
  5853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5854  00117E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5855  001182  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5856  001186  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5857  00118A  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5858  00118E  0E02               	movlw	2
  5859  001190  264C               	addwf	??_vfpfcnvrt^0,f,c
  5860  001192  0E00               	movlw	0
  5861  001194  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5862  001196  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5863  00119A  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5864  00119E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5865  00119E  6AF8               	clrf	tblptru,c
  5866  0011A0                     	endif
  5867  0011A0                     	if	0	;tblptru may be non-zero
  5868  0011A0                     	endif
  5869  0011A0  0008               	tblrd		*
  5870  0011A2  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  5871  0011A6                     
  5872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5873  0011A6  0E03               	movlw	3
  5874  0011A8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5875  0011AC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5876  0011B0  26DE               	addwf	postinc2,f,c
  5877  0011B2  0E00               	movlw	0
  5878  0011B4  22DD               	addwfc	postdec2,f,c
  5879  0011B6                     
  5880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5881  0011B6  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5882  0011BA  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5883  0011BE  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5884  0011C2  0E02               	movlw	2
  5885  0011C4  26DE               	addwf	postinc2,f,c
  5886  0011C6  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5887  0011CA  0E00               	movlw	0
  5888  0011CC  22DD               	addwfc	postdec2,f,c
  5889  0011CE  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5890  0011D2  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5891  0011D6  50DF               	movf	indf2,w,c
  5892  0011D8  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5893  0011DA  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5894  0011DC  0100               	movlb	0	; () banked
  5895  0011DE  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5896  0011E0  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5897  0011E2  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5898  0011E4  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5899  0011E6  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5900  0011E8  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5901  0011EA  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5902  0011EC  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5903  0011EE                     l9015:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  5907  0011EE  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  5908  0011F2  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5909  0011F6  C0B4  F021         	movff	vfpfcnvrt@llu,xtoa@d
  5910  0011FA  C0B5  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5911  0011FE  C0B6  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5912  001202  C0B7  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5913  001206  C0B8  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5914  00120A  C0B9  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5915  00120E  C0BA  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5916  001212  C0BB  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5917  001216  C0B3  F029         	movff	vfpfcnvrt@c,xtoa@x
  5918  00121A  ECF5  F019         	call	_xtoa	;wreg free
  5919  00121E  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  5920  001222  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5921  001226  EFA4  F00A         	goto	l770
  5922  00122A                     l9019:
  5923                           
  5924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  5925  00122A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5926  00122E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5927  001232  CFDE F004          	movff	postinc2,strncmp@_l
  5928  001236  CFDD F005          	movff	postdec2,strncmp@_l+1
  5929  00123A  0EE3               	movlw	low (STR_89+1)
  5930  00123C  6E06               	movwf	strncmp@_r^0,c
  5931  00123E  0EFF               	movlw	high (STR_89+1)
  5932  001240  6E07               	movwf	(strncmp@_r+1)^0,c
  5933  001242  0E00               	movlw	0
  5934  001244  6E09               	movwf	(strncmp@n+1)^0,c
  5935  001246  0E02               	movlw	2
  5936  001248  6E08               	movwf	strncmp@n^0,c
  5937  00124A  EC5E  F024         	call	_strncmp	;wreg free
  5938  00124E  5004               	movf	?_strncmp^0,w,c
  5939  001250  1005               	iorwf	(?_strncmp+1)^0,w,c
  5940  001252  B4D8               	btfsc	status,2,c
  5941  001254  EF2E  F009         	goto	u11991
  5942  001258  EF30  F009         	goto	u11990
  5943  00125C                     u11991:
  5944  00125C  EF4B  F009         	goto	l9023
  5945  001260                     u11990:
  5946  001260  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5947  001264  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5948  001268  CFDE F004          	movff	postinc2,strncmp@_l
  5949  00126C  CFDD F005          	movff	postdec2,strncmp@_l+1
  5950  001270  0EC3               	movlw	low (STR_93+1)
  5951  001272  6E06               	movwf	strncmp@_r^0,c
  5952  001274  0EFF               	movlw	high (STR_93+1)
  5953  001276  6E07               	movwf	(strncmp@_r+1)^0,c
  5954  001278  0E00               	movlw	0
  5955  00127A  6E09               	movwf	(strncmp@n+1)^0,c
  5956  00127C  0E02               	movlw	2
  5957  00127E  6E08               	movwf	strncmp@n^0,c
  5958  001280  EC5E  F024         	call	_strncmp	;wreg free
  5959  001284  5004               	movf	?_strncmp^0,w,c
  5960  001286  1005               	iorwf	(?_strncmp+1)^0,w,c
  5961  001288  A4D8               	btfss	status,2,c
  5962  00128A  EF49  F009         	goto	u12001
  5963  00128E  EF4B  F009         	goto	u12000
  5964  001292                     u12001:
  5965  001292  EF88  F009         	goto	l9033
  5966  001296                     u12000:
  5967  001296                     l9023:
  5968                           
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  5970  001296  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5971  00129A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5972  00129E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5973  0012A2  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5974  0012A6  0E01               	movlw	1
  5975  0012A8  264C               	addwf	??_vfpfcnvrt^0,f,c
  5976  0012AA  0E00               	movlw	0
  5977  0012AC  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5978  0012AE  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5979  0012B2  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5980  0012B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5981  0012B6  6AF8               	clrf	tblptru,c
  5982  0012B8                     	endif
  5983  0012B8                     	if	0	;tblptru may be non-zero
  5984  0012B8                     	endif
  5985  0012B8  0008               	tblrd		*
  5986  0012BA  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  5987  0012BE                     
  5988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5989  0012BE  0E02               	movlw	2
  5990  0012C0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5991  0012C4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5992  0012C8  26DE               	addwf	postinc2,f,c
  5993  0012CA  0E00               	movlw	0
  5994  0012CC  22DD               	addwfc	postdec2,f,c
  5995  0012CE                     
  5996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5997  0012CE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5998  0012D2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5999  0012D6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6000  0012DA  0E02               	movlw	2
  6001  0012DC  26DE               	addwf	postinc2,f,c
  6002  0012DE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6003  0012E2  0E00               	movlw	0
  6004  0012E4  22DD               	addwfc	postdec2,f,c
  6005  0012E6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6006  0012EA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6007  0012EE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6008  0012F2  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6009  0012F6  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6010  0012FA  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6011  0012FE  0100               	movlb	0	; () banked
  6012  001300  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6013  001302  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6014  001304  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6015  001306  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6016  001308  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6017  00130A  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6018  00130C  EFF7  F008         	goto	l9015
  6019  001310                     l9033:
  6020                           
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6022  001310  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6023  001314  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6024  001318  CFDE FFF6          	movff	postinc2,tblptrl
  6025  00131C  CFDD FFF7          	movff	postdec2,tblptrh
  6026  001320                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6027  001320  6AF8               	clrf	tblptru,c
  6028  001322                     	endif
  6029  001322                     	if	0	;tblptru may be non-zero
  6030  001322                     	endif
  6031  001322  0008               	tblrd		*
  6032  001324  50F5               	movf	tablat,w,c
  6033  001326  0A78               	xorlw	120
  6034  001328  B4D8               	btfsc	status,2,c
  6035  00132A  EF99  F009         	goto	u12011
  6036  00132E  EF9B  F009         	goto	u12010
  6037  001332                     u12011:
  6038  001332  EFAE  F009         	goto	l9037
  6039  001336                     u12010:
  6040  001336  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6041  00133A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6042  00133E  CFDE FFF6          	movff	postinc2,tblptrl
  6043  001342  CFDD FFF7          	movff	postdec2,tblptrh
  6044  001346                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6045  001346  6AF8               	clrf	tblptru,c
  6046  001348                     	endif
  6047  001348                     	if	0	;tblptru may be non-zero
  6048  001348                     	endif
  6049  001348  0008               	tblrd		*
  6050  00134A  50F5               	movf	tablat,w,c
  6051  00134C  0A58               	xorlw	88
  6052  00134E  A4D8               	btfss	status,2,c
  6053  001350  EFAC  F009         	goto	u12021
  6054  001354  EFAE  F009         	goto	u12020
  6055  001358                     u12021:
  6056  001358  EFE2  F009         	goto	l9047
  6057  00135C                     u12020:
  6058  00135C                     l9037:
  6059                           
  6060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6061  00135C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6062  001360  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6063  001364  CFDE FFF6          	movff	postinc2,tblptrl
  6064  001368  CFDD FFF7          	movff	postdec2,tblptrh
  6065  00136C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6066  00136C  6AF8               	clrf	tblptru,c
  6067  00136E                     	endif
  6068  00136E                     	if	0	;tblptru may be non-zero
  6069  00136E                     	endif
  6070  00136E  0008               	tblrd		*
  6071  001370  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6072  001374                     
  6073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6074  001374  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6075  001378  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6076  00137C  2ADE               	incf	postinc2,f,c
  6077  00137E  0E00               	movlw	0
  6078  001380  22DD               	addwfc	postdec2,f,c
  6079  001382                     
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6081  001382  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6082  001386  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6083  00138A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6084  00138E  0E02               	movlw	2
  6085  001390  26DE               	addwf	postinc2,f,c
  6086  001392  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6087  001396  0E00               	movlw	0
  6088  001398  22DD               	addwfc	postdec2,f,c
  6089  00139A  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6090  00139E  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6091  0013A2  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6092  0013A6  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6093  0013AA  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6094  0013AE  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6095  0013B2  0100               	movlb	0	; () banked
  6096  0013B4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6097  0013B6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6098  0013B8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6099  0013BA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6100  0013BC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6101  0013BE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6102  0013C0  EFF7  F008         	goto	l9015
  6103  0013C4                     l9047:
  6104                           
  6105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6106  0013C4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6107  0013C8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6108  0013CC  CFDE F004          	movff	postinc2,strncmp@_l
  6109  0013D0  CFDD F005          	movff	postdec2,strncmp@_l+1
  6110  0013D4  0EFB               	movlw	low STR_107
  6111  0013D6  6E06               	movwf	strncmp@_r^0,c
  6112  0013D8  0EFF               	movlw	high STR_107
  6113  0013DA  6E07               	movwf	(strncmp@_r+1)^0,c
  6114  0013DC  0E00               	movlw	0
  6115  0013DE  6E09               	movwf	(strncmp@n+1)^0,c
  6116  0013E0  0E02               	movlw	2
  6117  0013E2  6E08               	movwf	strncmp@n^0,c
  6118  0013E4  EC5E  F024         	call	_strncmp	;wreg free
  6119  0013E8  5004               	movf	?_strncmp^0,w,c
  6120  0013EA  1005               	iorwf	(?_strncmp+1)^0,w,c
  6121  0013EC  B4D8               	btfsc	status,2,c
  6122  0013EE  EFFB  F009         	goto	u12031
  6123  0013F2  EFFD  F009         	goto	u12030
  6124  0013F6                     u12031:
  6125  0013F6  EF18  F00A         	goto	l9051
  6126  0013FA                     u12030:
  6127  0013FA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6128  0013FE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6129  001402  CFDE F004          	movff	postinc2,strncmp@_l
  6130  001406  CFDD F005          	movff	postdec2,strncmp@_l+1
  6131  00140A  0EE6               	movlw	low STR_111
  6132  00140C  6E06               	movwf	strncmp@_r^0,c
  6133  00140E  0EFF               	movlw	high STR_111
  6134  001410  6E07               	movwf	(strncmp@_r+1)^0,c
  6135  001412  0E00               	movlw	0
  6136  001414  6E09               	movwf	(strncmp@n+1)^0,c
  6137  001416  0E02               	movlw	2
  6138  001418  6E08               	movwf	strncmp@n^0,c
  6139  00141A  EC5E  F024         	call	_strncmp	;wreg free
  6140  00141E  5004               	movf	?_strncmp^0,w,c
  6141  001420  1005               	iorwf	(?_strncmp+1)^0,w,c
  6142  001422  A4D8               	btfss	status,2,c
  6143  001424  EF16  F00A         	goto	u12041
  6144  001428  EF18  F00A         	goto	u12040
  6145  00142C                     u12041:
  6146  00142C  EF55  F00A         	goto	l9061
  6147  001430                     u12040:
  6148  001430                     l9051:
  6149                           
  6150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6151  001430  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6152  001434  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6153  001438  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  6154  00143C  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  6155  001440  0E01               	movlw	1
  6156  001442  264C               	addwf	??_vfpfcnvrt^0,f,c
  6157  001444  0E00               	movlw	0
  6158  001446  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6159  001448  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6160  00144C  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6161  001450                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6162  001450  6AF8               	clrf	tblptru,c
  6163  001452                     	endif
  6164  001452                     	if	0	;tblptru may be non-zero
  6165  001452                     	endif
  6166  001452  0008               	tblrd		*
  6167  001454  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6168  001458                     
  6169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6170  001458  0E02               	movlw	2
  6171  00145A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6172  00145E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6173  001462  26DE               	addwf	postinc2,f,c
  6174  001464  0E00               	movlw	0
  6175  001466  22DD               	addwfc	postdec2,f,c
  6176  001468                     
  6177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6178  001468  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6179  00146C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6180  001470  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6181  001474  0E02               	movlw	2
  6182  001476  26DE               	addwf	postinc2,f,c
  6183  001478  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6184  00147C  0E00               	movlw	0
  6185  00147E  22DD               	addwfc	postdec2,f,c
  6186  001480  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6187  001484  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6188  001488  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6189  00148C  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6190  001490  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6191  001494  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6192  001498  0100               	movlb	0	; () banked
  6193  00149A  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6194  00149C  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6195  00149E  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6196  0014A0  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6197  0014A2  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6198  0014A4  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6199  0014A6  EFF7  F008         	goto	l9015
  6200  0014AA                     l9061:
  6201                           
  6202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6203  0014AA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6204  0014AE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6205  0014B2  CFDE FFF6          	movff	postinc2,tblptrl
  6206  0014B6  CFDD FFF7          	movff	postdec2,tblptrh
  6207  0014BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6208  0014BA  6AF8               	clrf	tblptru,c
  6209  0014BC                     	endif
  6210  0014BC                     	if	0	;tblptru may be non-zero
  6211  0014BC                     	endif
  6212  0014BC  0008               	tblrd		*
  6213  0014BE  50F5               	movf	tablat,w,c
  6214  0014C0  0A25               	xorlw	37
  6215  0014C2  A4D8               	btfss	status,2,c
  6216  0014C4  EF66  F00A         	goto	u12051
  6217  0014C8  EF68  F00A         	goto	u12050
  6218  0014CC                     u12051:
  6219  0014CC  EF7F  F00A         	goto	l9071
  6220  0014D0                     u12050:
  6221  0014D0                     
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6223  0014D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6224  0014D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6225  0014D8  2ADE               	incf	postinc2,f,c
  6226  0014DA  0E00               	movlw	0
  6227  0014DC  22DD               	addwfc	postdec2,f,c
  6228  0014DE                     
  6229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6230  0014DE  0E00               	movlw	0
  6231  0014E0  6E05               	movwf	(fputc@c+1)^0,c
  6232  0014E2  0E25               	movlw	37
  6233  0014E4  6E04               	movwf	fputc@c^0,c
  6234  0014E6  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6235  0014EA  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6236  0014EE  ECDD  F027         	call	_fputc	;wreg free
  6237  0014F2                     l9067:
  6238                           
  6239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6240  0014F2  0E00               	movlw	0
  6241  0014F4  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  6242  0014F6  0E01               	movlw	1
  6243  0014F8  6E46               	movwf	?_vfpfcnvrt^0,c
  6244  0014FA  EFA4  F00A         	goto	l770
  6245  0014FE                     l9071:
  6246                           
  6247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6248  0014FE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6249  001502  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6250  001506  2ADE               	incf	postinc2,f,c
  6251  001508  0E00               	movlw	0
  6252  00150A  22DD               	addwfc	postdec2,f,c
  6253  00150C  EF16  F006         	goto	l8923
  6254  001510                     l9077:
  6255                           
  6256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6257  001510  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6258  001514  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6259  001518  CFDE FFF6          	movff	postinc2,tblptrl
  6260  00151C  CFDD FFF7          	movff	postdec2,tblptrh
  6261  001520                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6262  001520  6AF8               	clrf	tblptru,c
  6263  001522                     	endif
  6264  001522                     	if	0	;tblptru may be non-zero
  6265  001522                     	endif
  6266  001522  0008               	tblrd		*
  6267  001524  50F5               	movf	tablat,w,c
  6268  001526  6E04               	movwf	fputc@c^0,c
  6269  001528  6A05               	clrf	(fputc@c+1)^0,c
  6270  00152A  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6271  00152E  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6272  001532  ECDD  F027         	call	_fputc	;wreg free
  6273  001536                     
  6274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6275  001536  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6276  00153A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6277  00153E  2ADE               	incf	postinc2,f,c
  6278  001540  0E00               	movlw	0
  6279  001542  22DD               	addwfc	postdec2,f,c
  6280  001544  EF79  F00A         	goto	l9067
  6281  001548                     l770:
  6282  001548  0012               	return		;funcret
  6283  00154A                     __end_of_vfpfcnvrt:
  6284                           	opt callstack 0
  6285                           
  6286 ;; *************** function _xtoa *****************
  6287 ;; Defined at:
  6288 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6291 ;;		 -> vsnprintf@f(6), 
  6292 ;;  d               8   32[COMRAM] unsigned long long 
  6293 ;;  x               1   40[COMRAM] unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  n               8   57[COMRAM] unsigned long long 
  6296 ;;  c               2   67[COMRAM] int 
  6297 ;;  i               2   65[COMRAM] int 
  6298 ;;  w               2   55[COMRAM] int 
  6299 ;;  p               2   53[COMRAM] int 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  2   30[COMRAM] int 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6309 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6310 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6311 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6312 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6313 ;;Total ram usage:       39 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    8
  6316 ;; This function calls:
  6317 ;;		_isalpha
  6318 ;;		_isupper
  6319 ;;		_pad
  6320 ;;		_toupper
  6321 ;; This function is called by:
  6322 ;;		_vfpfcnvrt
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text5
  6327  0033EA                     __ptext5:
  6328                           	opt callstack 0
  6329  0033EA                     _xtoa:
  6330                           	opt callstack 18
  6331  0033EA                     
  6332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6333  0033EA  BE59               	btfsc	(_prec+1)^0,7,c
  6334  0033EC  EFFA  F019         	goto	u11231
  6335  0033F0  EFFC  F019         	goto	u11230
  6336  0033F4                     u11231:
  6337  0033F4  EFFE  F019         	goto	l8597
  6338  0033F8                     u11230:
  6339  0033F8                     
  6340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6341  0033F8  0100               	movlb	0	; () banked
  6342  0033FA  93EE               	bcf	_flags& (0+255),1,b
  6343  0033FC                     l8597:
  6344                           
  6345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6346  0033FC  BE59               	btfsc	(_prec+1)^0,7,c
  6347  0033FE  EF0B  F01A         	goto	u11240
  6348  003402  5059               	movf	(_prec+1)^0,w,c
  6349  003404  E106               	bnz	u11241
  6350  003406  0458               	decf	_prec^0,w,c
  6351  003408  B0D8               	btfsc	status,0,c
  6352  00340A  EF09  F01A         	goto	u11241
  6353  00340E  EF0B  F01A         	goto	u11240
  6354  003412                     u11241:
  6355  003412  EF11  F01A         	goto	l706
  6356  003416                     u11240:
  6357  003416  0E00               	movlw	0
  6358  003418  6E37               	movwf	(xtoa@p+1)^0,c
  6359  00341A  0E01               	movlw	1
  6360  00341C  6E36               	movwf	xtoa@p^0,c
  6361  00341E  EF15  F01A         	goto	l708
  6362  003422                     l706:
  6363  003422  C058  F036         	movff	_prec,xtoa@p
  6364  003426  C059  F037         	movff	_prec+1,xtoa@p+1
  6365  00342A                     l708:
  6366                           
  6367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6368  00342A  C0EC  F038         	movff	_width,xtoa@w
  6369  00342E  C0ED  F039         	movff	_width+1,xtoa@w+1
  6370                           
  6371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6372  003432  0100               	movlb	0	; () banked
  6373  003434  A9EE               	btfss	_flags& (0+255),4,b
  6374  003436  EF1F  F01A         	goto	u11251
  6375  00343A  EF21  F01A         	goto	u11250
  6376  00343E                     u11251:
  6377  00343E  EF25  F01A         	goto	l8603
  6378  003442                     u11250:
  6379  003442                     
  6380                           ; BSR set to: 0
  6381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6382  003442  0EFE               	movlw	254
  6383  003444  2638               	addwf	xtoa@w^0,f,c
  6384  003446  0EFF               	movlw	255
  6385  003448  2239               	addwfc	(xtoa@w+1)^0,f,c
  6386  00344A                     l8603:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6390  00344A  C021  F03A         	movff	xtoa@d,xtoa@n
  6391  00344E  C022  F03B         	movff	xtoa@d+1,xtoa@n+1
  6392  003452  C023  F03C         	movff	xtoa@d+2,xtoa@n+2
  6393  003456  C024  F03D         	movff	xtoa@d+3,xtoa@n+3
  6394  00345A  C025  F03E         	movff	xtoa@d+4,xtoa@n+4
  6395  00345E  C026  F03F         	movff	xtoa@d+5,xtoa@n+5
  6396  003462  C027  F040         	movff	xtoa@d+6,xtoa@n+6
  6397  003466  C028  F041         	movff	xtoa@d+7,xtoa@n+7
  6398  00346A                     
  6399                           ; BSR set to: 0
  6400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6401  00346A  0E00               	movlw	0
  6402  00346C  6E43               	movwf	(xtoa@i+1)^0,c
  6403  00346E  0E4F               	movlw	79
  6404  003470  6E42               	movwf	xtoa@i^0,c
  6405  003472                     
  6406                           ; BSR set to: 0
  6407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6408  003472  0E00               	movlw	0
  6409  003474  0101               	movlb	1	; () banked
  6410  003476  6FB3               	movwf	(_dbuf+79)& (0+255),b
  6411                           
  6412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6413  003478  EFF1  F01A         	goto	l8639
  6414  00347C                     l8609:
  6415                           
  6416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6417  00347C  0642               	decf	xtoa@i^0,f,c
  6418  00347E  A0D8               	btfss	status,0,c
  6419  003480  0643               	decf	(xtoa@i+1)^0,f,c
  6420  003482                     
  6421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6422  003482  0E0F               	movlw	15
  6423  003484  143A               	andwf	xtoa@n^0,w,c
  6424  003486  6E44               	movwf	xtoa@c^0,c
  6425  003488  6A45               	clrf	(xtoa@c+1)^0,c
  6426  00348A                     
  6427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6428  00348A  BE45               	btfsc	(xtoa@c+1)^0,7,c
  6429  00348C  EF51  F01A         	goto	u11261
  6430  003490  5045               	movf	(xtoa@c+1)^0,w,c
  6431  003492  E109               	bnz	u11260
  6432  003494  0E0A               	movlw	10
  6433  003496  5C44               	subwf	xtoa@c^0,w,c
  6434  003498  A0D8               	btfss	status,0,c
  6435  00349A  EF51  F01A         	goto	u11261
  6436  00349E  EF53  F01A         	goto	u11260
  6437  0034A2                     u11261:
  6438  0034A2  EF5B  F01A         	goto	l8617
  6439  0034A6                     u11260:
  6440  0034A6  0E57               	movlw	87
  6441  0034A8  2444               	addwf	xtoa@c^0,w,c
  6442  0034AA  6E44               	movwf	xtoa@c^0,c
  6443  0034AC  0E00               	movlw	0
  6444  0034AE  2045               	addwfc	(xtoa@c+1)^0,w,c
  6445  0034B0  6E45               	movwf	(xtoa@c+1)^0,c
  6446  0034B2  EF61  F01A         	goto	l715
  6447  0034B6                     l8617:
  6448  0034B6  0E30               	movlw	48
  6449  0034B8  2444               	addwf	xtoa@c^0,w,c
  6450  0034BA  6E44               	movwf	xtoa@c^0,c
  6451  0034BC  0E00               	movlw	0
  6452  0034BE  2045               	addwfc	(xtoa@c+1)^0,w,c
  6453  0034C0  6E45               	movwf	(xtoa@c+1)^0,c
  6454  0034C2                     l715:
  6455  0034C2  0EBF               	movlw	191
  6456  0034C4  6E2A               	movwf	??_xtoa^0,c
  6457  0034C6  0EFF               	movlw	255
  6458  0034C8  6E2B               	movwf	(??_xtoa+1)^0,c
  6459  0034CA  5029               	movf	xtoa@x^0,w,c
  6460  0034CC  6E2C               	movwf	(??_xtoa+2)^0,c
  6461  0034CE  6A2D               	clrf	(??_xtoa+3)^0,c
  6462  0034D0  502A               	movf	??_xtoa^0,w,c
  6463  0034D2  262C               	addwf	(??_xtoa+2)^0,f,c
  6464  0034D4  502B               	movf	(??_xtoa+1)^0,w,c
  6465  0034D6  222D               	addwfc	(??_xtoa+3)^0,f,c
  6466  0034D8  502D               	movf	(??_xtoa+3)^0,w,c
  6467  0034DA  E10A               	bnz	u11270
  6468  0034DC  0E1A               	movlw	26
  6469  0034DE  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6470  0034E0  A0D8               	btfss	status,0,c
  6471  0034E2  EF75  F01A         	goto	u11271
  6472  0034E6  EF78  F01A         	goto	u11270
  6473  0034EA                     u11271:
  6474  0034EA  0E01               	movlw	1
  6475  0034EC  EF79  F01A         	goto	u11280
  6476  0034F0                     u11270:
  6477  0034F0  0E00               	movlw	0
  6478  0034F2                     u11280:
  6479  0034F2  6E32               	movwf	_xtoa$1441^0,c
  6480  0034F4  6A33               	clrf	(_xtoa$1441+1)^0,c
  6481  0034F6  5032               	movf	_xtoa$1441^0,w,c
  6482  0034F8  1033               	iorwf	(_xtoa$1441+1)^0,w,c
  6483  0034FA  B4D8               	btfsc	status,2,c
  6484  0034FC  EF82  F01A         	goto	u11291
  6485  003500  EF84  F01A         	goto	u11290
  6486  003504                     u11291:
  6487  003504  EFB4  F01A         	goto	l8631
  6488  003508                     u11290:
  6489  003508  0E9F               	movlw	159
  6490  00350A  6E2A               	movwf	??_xtoa^0,c
  6491  00350C  0EFF               	movlw	255
  6492  00350E  6E2B               	movwf	(??_xtoa+1)^0,c
  6493  003510  0E20               	movlw	32
  6494  003512  1044               	iorwf	xtoa@c^0,w,c
  6495  003514  6E2C               	movwf	(??_xtoa+2)^0,c
  6496  003516  0E00               	movlw	0
  6497  003518  1045               	iorwf	(xtoa@c+1)^0,w,c
  6498  00351A  6E2D               	movwf	(??_xtoa+3)^0,c
  6499  00351C  502A               	movf	??_xtoa^0,w,c
  6500  00351E  262C               	addwf	(??_xtoa+2)^0,f,c
  6501  003520  502B               	movf	(??_xtoa+1)^0,w,c
  6502  003522  222D               	addwfc	(??_xtoa+3)^0,f,c
  6503  003524  502D               	movf	(??_xtoa+3)^0,w,c
  6504  003526  E10A               	bnz	u11300
  6505  003528  0E1A               	movlw	26
  6506  00352A  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6507  00352C  A0D8               	btfss	status,0,c
  6508  00352E  EF9B  F01A         	goto	u11301
  6509  003532  EF9E  F01A         	goto	u11300
  6510  003536                     u11301:
  6511  003536  0E01               	movlw	1
  6512  003538  EF9F  F01A         	goto	u11310
  6513  00353C                     u11300:
  6514  00353C  0E00               	movlw	0
  6515  00353E                     u11310:
  6516  00353E  6E34               	movwf	_xtoa$1442^0,c
  6517  003540  6A35               	clrf	(_xtoa$1442+1)^0,c
  6518  003542  5034               	movf	_xtoa$1442^0,w,c
  6519  003544  1035               	iorwf	(_xtoa$1442+1)^0,w,c
  6520  003546  B4D8               	btfsc	status,2,c
  6521  003548  EFA8  F01A         	goto	u11321
  6522  00354C  EFAA  F01A         	goto	u11320
  6523  003550                     u11321:
  6524  003550  EFB4  F01A         	goto	l8631
  6525  003554                     u11320:
  6526  003554                     
  6527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6528  003554  C044  F00A         	movff	xtoa@c,toupper@c
  6529  003558  C045  F00B         	movff	xtoa@c+1,toupper@c+1
  6530  00355C  ECAF  F02A         	call	_toupper	;wreg free
  6531  003560  C00A  F044         	movff	?_toupper,xtoa@c
  6532  003564  C00B  F045         	movff	?_toupper+1,xtoa@c+1
  6533  003568                     l8631:
  6534                           
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6536  003568  0E64               	movlw	low _dbuf
  6537  00356A  2442               	addwf	xtoa@i^0,w,c
  6538  00356C  6ED9               	movwf	fsr2l,c
  6539  00356E  0E01               	movlw	high _dbuf
  6540  003570  2043               	addwfc	(xtoa@i+1)^0,w,c
  6541  003572  6EDA               	movwf	fsr2h,c
  6542  003574  C044  FFDF         	movff	xtoa@c,indf2
  6543  003578                     
  6544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6545  003578  0636               	decf	xtoa@p^0,f,c
  6546  00357A  A0D8               	btfss	status,0,c
  6547  00357C  0637               	decf	(xtoa@p+1)^0,f,c
  6548  00357E                     
  6549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6550  00357E  0638               	decf	xtoa@w^0,f,c
  6551  003580  A0D8               	btfss	status,0,c
  6552  003582  0639               	decf	(xtoa@w+1)^0,f,c
  6553  003584                     
  6554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6555  003584  C03A  F02A         	movff	xtoa@n,??_xtoa
  6556  003588  C03B  F02B         	movff	xtoa@n+1,??_xtoa+1
  6557  00358C  C03C  F02C         	movff	xtoa@n+2,??_xtoa+2
  6558  003590  C03D  F02D         	movff	xtoa@n+3,??_xtoa+3
  6559  003594  C03E  F02E         	movff	xtoa@n+4,??_xtoa+4
  6560  003598  C03F  F02F         	movff	xtoa@n+5,??_xtoa+5
  6561  00359C  C040  F030         	movff	xtoa@n+6,??_xtoa+6
  6562  0035A0  C041  F031         	movff	xtoa@n+7,??_xtoa+7
  6563  0035A4  0E05               	movlw	5
  6564  0035A6  EFDE  F01A         	goto	u11330
  6565  0035AA                     u11335:
  6566  0035AA  90D8               	bcf	status,0,c
  6567  0035AC  3231               	rrcf	(??_xtoa+7)^0,f,c
  6568  0035AE  3230               	rrcf	(??_xtoa+6)^0,f,c
  6569  0035B0  322F               	rrcf	(??_xtoa+5)^0,f,c
  6570  0035B2  322E               	rrcf	(??_xtoa+4)^0,f,c
  6571  0035B4  322D               	rrcf	(??_xtoa+3)^0,f,c
  6572  0035B6  322C               	rrcf	(??_xtoa+2)^0,f,c
  6573  0035B8  322B               	rrcf	(??_xtoa+1)^0,f,c
  6574  0035BA  322A               	rrcf	??_xtoa^0,f,c
  6575  0035BC                     u11330:
  6576  0035BC  2EE8               	decfsz	wreg,f,c
  6577  0035BE  EFD5  F01A         	goto	u11335
  6578  0035C2  C02A  F03A         	movff	??_xtoa,xtoa@n
  6579  0035C6  C02B  F03B         	movff	??_xtoa+1,xtoa@n+1
  6580  0035CA  C02C  F03C         	movff	??_xtoa+2,xtoa@n+2
  6581  0035CE  C02D  F03D         	movff	??_xtoa+3,xtoa@n+3
  6582  0035D2  C02E  F03E         	movff	??_xtoa+4,xtoa@n+4
  6583  0035D6  C02F  F03F         	movff	??_xtoa+5,xtoa@n+5
  6584  0035DA  C030  F040         	movff	??_xtoa+6,xtoa@n+6
  6585  0035DE  C031  F041         	movff	??_xtoa+7,xtoa@n+7
  6586  0035E2                     l8639:
  6587                           
  6588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6589  0035E2  BE43               	btfsc	(xtoa@i+1)^0,7,c
  6590  0035E4  EFFD  F01A         	goto	u11341
  6591  0035E8  5043               	movf	(xtoa@i+1)^0,w,c
  6592  0035EA  E109               	bnz	u11340
  6593  0035EC  0E02               	movlw	2
  6594  0035EE  5C42               	subwf	xtoa@i^0,w,c
  6595  0035F0  A0D8               	btfss	status,0,c
  6596  0035F2  EFFD  F01A         	goto	u11341
  6597  0035F6  EFFF  F01A         	goto	u11340
  6598  0035FA                     u11341:
  6599  0035FA  EF30  F01B         	goto	l729
  6600  0035FE                     u11340:
  6601  0035FE  503A               	movf	xtoa@n^0,w,c
  6602  003600  103B               	iorwf	(xtoa@n+1)^0,w,c
  6603  003602  103C               	iorwf	(xtoa@n+2)^0,w,c
  6604  003604  103D               	iorwf	(xtoa@n+3)^0,w,c
  6605  003606  103E               	iorwf	(xtoa@n+4)^0,w,c
  6606  003608  103F               	iorwf	(xtoa@n+5)^0,w,c
  6607  00360A  1040               	iorwf	(xtoa@n+6)^0,w,c
  6608  00360C  1041               	iorwf	(xtoa@n+7)^0,w,c
  6609  00360E  A4D8               	btfss	status,2,c
  6610  003610  EF0C  F01B         	goto	u11351
  6611  003614  EF0E  F01B         	goto	u11350
  6612  003618                     u11351:
  6613  003618  EF3E  F01A         	goto	l8609
  6614  00361C                     u11350:
  6615  00361C  BE37               	btfsc	(xtoa@p+1)^0,7,c
  6616  00361E  EF1B  F01B         	goto	u11360
  6617  003622  5037               	movf	(xtoa@p+1)^0,w,c
  6618  003624  E106               	bnz	u11361
  6619  003626  0436               	decf	xtoa@p^0,w,c
  6620  003628  B0D8               	btfsc	status,0,c
  6621  00362A  EF19  F01B         	goto	u11361
  6622  00362E  EF1B  F01B         	goto	u11360
  6623  003632                     u11361:
  6624  003632  EF3E  F01A         	goto	l8609
  6625  003636                     u11360:
  6626  003636  BE39               	btfsc	(xtoa@w+1)^0,7,c
  6627  003638  EF26  F01B         	goto	u11371
  6628  00363C  5039               	movf	(xtoa@w+1)^0,w,c
  6629  00363E  E108               	bnz	u11370
  6630  003640  0438               	decf	xtoa@w^0,w,c
  6631  003642  A0D8               	btfss	status,0,c
  6632  003644  EF26  F01B         	goto	u11371
  6633  003648  EF28  F01B         	goto	u11370
  6634  00364C                     u11371:
  6635  00364C  EF30  F01B         	goto	l729
  6636  003650                     u11370:
  6637  003650  0100               	movlb	0	; () banked
  6638  003652  B3EE               	btfsc	_flags& (0+255),1,b
  6639  003654  EF2E  F01B         	goto	u11381
  6640  003658  EF30  F01B         	goto	u11380
  6641  00365C                     u11381:
  6642  00365C  EF3E  F01A         	goto	l8609
  6643  003660                     u11380:
  6644  003660                     l729:
  6645                           
  6646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6647  003660  0100               	movlb	0	; () banked
  6648  003662  A9EE               	btfss	_flags& (0+255),4,b
  6649  003664  EF36  F01B         	goto	u11391
  6650  003668  EF38  F01B         	goto	u11390
  6651  00366C                     u11391:
  6652  00366C  EF4E  F01B         	goto	l8655
  6653  003670                     u11390:
  6654  003670                     
  6655                           ; BSR set to: 0
  6656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6657  003670  0642               	decf	xtoa@i^0,f,c
  6658  003672  A0D8               	btfss	status,0,c
  6659  003674  0643               	decf	(xtoa@i+1)^0,f,c
  6660  003676                     
  6661                           ; BSR set to: 0
  6662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6663  003676  0E64               	movlw	low _dbuf
  6664  003678  2442               	addwf	xtoa@i^0,w,c
  6665  00367A  6ED9               	movwf	fsr2l,c
  6666  00367C  0E01               	movlw	high _dbuf
  6667  00367E  2043               	addwfc	(xtoa@i+1)^0,w,c
  6668  003680  6EDA               	movwf	fsr2h,c
  6669  003682  C029  FFDF         	movff	xtoa@x,indf2
  6670  003686                     
  6671                           ; BSR set to: 0
  6672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6673  003686  0642               	decf	xtoa@i^0,f,c
  6674  003688  A0D8               	btfss	status,0,c
  6675  00368A  0643               	decf	(xtoa@i+1)^0,f,c
  6676                           
  6677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6678  00368C  0E64               	movlw	low _dbuf
  6679  00368E  2442               	addwf	xtoa@i^0,w,c
  6680  003690  6ED9               	movwf	fsr2l,c
  6681  003692  0E01               	movlw	high _dbuf
  6682  003694  2043               	addwfc	(xtoa@i+1)^0,w,c
  6683  003696  6EDA               	movwf	fsr2h,c
  6684  003698  0E30               	movlw	48
  6685  00369A  6EDF               	movwf	indf2,c
  6686  00369C                     l8655:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6690  00369C  C01F  F014         	movff	xtoa@fp,pad@fp
  6691  0036A0  C020  F015         	movff	xtoa@fp+1,pad@fp+1
  6692  0036A4  0E64               	movlw	low _dbuf
  6693  0036A6  2442               	addwf	xtoa@i^0,w,c
  6694  0036A8  6E16               	movwf	pad@buf^0,c
  6695  0036AA  0E01               	movlw	high _dbuf
  6696  0036AC  2043               	addwfc	(xtoa@i+1)^0,w,c
  6697  0036AE  6E17               	movwf	(pad@buf+1)^0,c
  6698  0036B0  C038  F018         	movff	xtoa@w,pad@p
  6699  0036B4  C039  F019         	movff	xtoa@w+1,pad@p+1
  6700  0036B8  EC42  F028         	call	_pad	;wreg free
  6701  0036BC  C014  F01F         	movff	?_pad,?_xtoa
  6702  0036C0  C015  F020         	movff	?_pad+1,?_xtoa+1
  6703  0036C4  0012               	return		;funcret
  6704  0036C6                     __end_of_xtoa:
  6705                           	opt callstack 0
  6706                           
  6707 ;; *************** function _toupper *****************
  6708 ;; Defined at:
  6709 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  c               2    9[COMRAM] int 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;		None
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  2    9[COMRAM] int 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6725 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6726 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6727 ;;Total ram usage:        8 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    5
  6730 ;; This function calls:
  6731 ;;		_islower
  6732 ;; This function is called by:
  6733 ;;		_xtoa
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text6
  6738  00555E                     __ptext6:
  6739                           	opt callstack 0
  6740  00555E                     _toupper:
  6741                           	opt callstack 20
  6742  00555E  0E9F               	movlw	159
  6743  005560  6E0C               	movwf	??_toupper^0,c
  6744  005562  0EFF               	movlw	255
  6745  005564  6E0D               	movwf	(??_toupper+1)^0,c
  6746  005566  C00A  F00E         	movff	toupper@c,??_toupper+2
  6747  00556A  C00B  F00F         	movff	toupper@c+1,??_toupper+3
  6748  00556E  500C               	movf	??_toupper^0,w,c
  6749  005570  260E               	addwf	(??_toupper+2)^0,f,c
  6750  005572  500D               	movf	(??_toupper+1)^0,w,c
  6751  005574  220F               	addwfc	(??_toupper+3)^0,f,c
  6752  005576  500F               	movf	(??_toupper+3)^0,w,c
  6753  005578  E10A               	bnz	u9320
  6754  00557A  0E1A               	movlw	26
  6755  00557C  5C0E               	subwf	(??_toupper+2)^0,w,c
  6756  00557E  A0D8               	btfss	status,0,c
  6757  005580  EFC4  F02A         	goto	u9321
  6758  005584  EFC7  F02A         	goto	u9320
  6759  005588                     u9321:
  6760  005588  0E01               	movlw	1
  6761  00558A  EFC8  F02A         	goto	u9330
  6762  00558E                     u9320:
  6763  00558E  0E00               	movlw	0
  6764  005590                     u9330:
  6765  005590  6E10               	movwf	_toupper$2177^0,c
  6766  005592  6A11               	clrf	(_toupper$2177+1)^0,c
  6767  005594  5010               	movf	_toupper$2177^0,w,c
  6768  005596  1011               	iorwf	(_toupper$2177+1)^0,w,c
  6769  005598  B4D8               	btfsc	status,2,c
  6770  00559A  EFD1  F02A         	goto	u9341
  6771  00559E  EFD3  F02A         	goto	u9340
  6772  0055A2                     u9341:
  6773  0055A2  EFD9  F02A         	goto	l1654
  6774  0055A6                     u9340:
  6775  0055A6  0E5F               	movlw	95
  6776  0055A8  140A               	andwf	toupper@c^0,w,c
  6777  0055AA  6E0A               	movwf	?_toupper^0,c
  6778  0055AC  6A0B               	clrf	(?_toupper+1)^0,c
  6779  0055AE  EFDD  F02A         	goto	l1659
  6780  0055B2                     l1654:
  6781  0055B2  C00A  F00A         	movff	toupper@c,?_toupper
  6782  0055B6  C00B  F00B         	movff	toupper@c+1,?_toupper+1
  6783  0055BA                     l1659:
  6784  0055BA  0012               	return		;funcret
  6785  0055BC                     __end_of_toupper:
  6786                           	opt callstack 0
  6787                           
  6788 ;; *************** function _islower *****************
  6789 ;; Defined at:
  6790 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  c               2    3[COMRAM] int 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  2    3[COMRAM] int 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2, status,0
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6808 ;;Total ram usage:        6 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    4
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_toupper
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text7
  6819  005966                     __ptext7:
  6820                           	opt callstack 0
  6821  005966                     _islower:
  6822                           	opt callstack 20
  6823  005966  0E9F               	movlw	159
  6824  005968  6E06               	movwf	??_islower^0,c
  6825  00596A  0EFF               	movlw	255
  6826  00596C  6E07               	movwf	(??_islower+1)^0,c
  6827  00596E  C004  F008         	movff	islower@c,??_islower+2
  6828  005972  C005  F009         	movff	islower@c+1,??_islower+3
  6829  005976  5006               	movf	??_islower^0,w,c
  6830  005978  2608               	addwf	(??_islower+2)^0,f,c
  6831  00597A  5007               	movf	(??_islower+1)^0,w,c
  6832  00597C  2209               	addwfc	(??_islower+3)^0,f,c
  6833  00597E  5009               	movf	(??_islower+3)^0,w,c
  6834  005980  E10A               	bnz	u9010
  6835  005982  0E1A               	movlw	26
  6836  005984  5C08               	subwf	(??_islower+2)^0,w,c
  6837  005986  A0D8               	btfss	status,0,c
  6838  005988  EFC8  F02C         	goto	u9011
  6839  00598C  EFCB  F02C         	goto	u9010
  6840  005990                     u9011:
  6841  005990  0E01               	movlw	1
  6842  005992  EFCC  F02C         	goto	u9020
  6843  005996                     u9010:
  6844  005996  0E00               	movlw	0
  6845  005998                     u9020:
  6846  005998  6E04               	movwf	?_islower^0,c
  6847  00599A  6A05               	clrf	(?_islower+1)^0,c
  6848  00599C  0012               	return		;funcret
  6849  00599E                     __end_of_islower:
  6850                           	opt callstack 0
  6851                           
  6852 ;; *************** function _isalpha *****************
  6853 ;; Defined at:
  6854 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  c               2    3[COMRAM] int 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  2    3[COMRAM] int 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6870 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6872 ;;Total ram usage:        6 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    4
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_xtoa
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text8
  6883  0058F0                     __ptext8:
  6884                           	opt callstack 0
  6885  0058F0                     _isalpha:
  6886                           	opt callstack 21
  6887  0058F0  0E9F               	movlw	159
  6888  0058F2  6E06               	movwf	??_isalpha^0,c
  6889  0058F4  0EFF               	movlw	255
  6890  0058F6  6E07               	movwf	(??_isalpha+1)^0,c
  6891  0058F8  0E20               	movlw	32
  6892  0058FA  1004               	iorwf	isalpha@c^0,w,c
  6893  0058FC  6E08               	movwf	(??_isalpha+2)^0,c
  6894  0058FE  0E00               	movlw	0
  6895  005900  1005               	iorwf	(isalpha@c+1)^0,w,c
  6896  005902  6E09               	movwf	(??_isalpha+3)^0,c
  6897  005904  5006               	movf	??_isalpha^0,w,c
  6898  005906  2608               	addwf	(??_isalpha+2)^0,f,c
  6899  005908  5007               	movf	(??_isalpha+1)^0,w,c
  6900  00590A  2209               	addwfc	(??_isalpha+3)^0,f,c
  6901  00590C  5009               	movf	(??_isalpha+3)^0,w,c
  6902  00590E  E10A               	bnz	u9300
  6903  005910  0E1A               	movlw	26
  6904  005912  5C08               	subwf	(??_isalpha+2)^0,w,c
  6905  005914  A0D8               	btfss	status,0,c
  6906  005916  EF8F  F02C         	goto	u9301
  6907  00591A  EF92  F02C         	goto	u9300
  6908  00591E                     u9301:
  6909  00591E  0E01               	movlw	1
  6910  005920  EF93  F02C         	goto	u9310
  6911  005924                     u9300:
  6912  005924  0E00               	movlw	0
  6913  005926                     u9310:
  6914  005926  6E04               	movwf	?_isalpha^0,c
  6915  005928  6A05               	clrf	(?_isalpha+1)^0,c
  6916  00592A  0012               	return		;funcret
  6917  00592C                     __end_of_isalpha:
  6918                           	opt callstack 0
  6919                           
  6920 ;; *************** function _utoa *****************
  6921 ;; Defined at:
  6922 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6925 ;;		 -> vsnprintf@f(6), 
  6926 ;;  d               8   32[COMRAM] unsigned long long 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  n               8   52[COMRAM] unsigned long long 
  6929 ;;  i               2   60[COMRAM] int 
  6930 ;;  w               2   50[COMRAM] int 
  6931 ;;  p               2   48[COMRAM] int 
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  2   30[COMRAM] int 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6941 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6944 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6945 ;;Total ram usage:       32 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    8
  6948 ;; This function calls:
  6949 ;;		___lodiv
  6950 ;;		___lomod
  6951 ;;		_pad
  6952 ;; This function is called by:
  6953 ;;		_vfpfcnvrt
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text9
  6958  0038D8                     __ptext9:
  6959                           	opt callstack 0
  6960  0038D8                     _utoa:
  6961                           	opt callstack 18
  6962  0038D8                     
  6963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6964  0038D8  BE59               	btfsc	(_prec+1)^0,7,c
  6965  0038DA  EF71  F01C         	goto	u11161
  6966  0038DE  EF73  F01C         	goto	u11160
  6967  0038E2                     u11161:
  6968  0038E2  EF75  F01C         	goto	l8561
  6969  0038E6                     u11160:
  6970  0038E6                     
  6971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6972  0038E6  0100               	movlb	0	; () banked
  6973  0038E8  93EE               	bcf	_flags& (0+255),1,b
  6974  0038EA                     l8561:
  6975                           
  6976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6977  0038EA  BE59               	btfsc	(_prec+1)^0,7,c
  6978  0038EC  EF82  F01C         	goto	u11170
  6979  0038F0  5059               	movf	(_prec+1)^0,w,c
  6980  0038F2  E106               	bnz	u11171
  6981  0038F4  0458               	decf	_prec^0,w,c
  6982  0038F6  B0D8               	btfsc	status,0,c
  6983  0038F8  EF80  F01C         	goto	u11171
  6984  0038FC  EF82  F01C         	goto	u11170
  6985  003900                     u11171:
  6986  003900  EF88  F01C         	goto	l691
  6987  003904                     u11170:
  6988  003904  0E00               	movlw	0
  6989  003906  6E32               	movwf	(utoa@p+1)^0,c
  6990  003908  0E01               	movlw	1
  6991  00390A  6E31               	movwf	utoa@p^0,c
  6992  00390C  EF8C  F01C         	goto	l693
  6993  003910                     l691:
  6994  003910  C058  F031         	movff	_prec,utoa@p
  6995  003914  C059  F032         	movff	_prec+1,utoa@p+1
  6996  003918                     l693:
  6997                           
  6998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6999  003918  C0EC  F033         	movff	_width,utoa@w
  7000  00391C  C0ED  F034         	movff	_width+1,utoa@w+1
  7001                           
  7002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7003  003920  C021  F035         	movff	utoa@d,utoa@n
  7004  003924  C022  F036         	movff	utoa@d+1,utoa@n+1
  7005  003928  C023  F037         	movff	utoa@d+2,utoa@n+2
  7006  00392C  C024  F038         	movff	utoa@d+3,utoa@n+3
  7007  003930  C025  F039         	movff	utoa@d+4,utoa@n+4
  7008  003934  C026  F03A         	movff	utoa@d+5,utoa@n+5
  7009  003938  C027  F03B         	movff	utoa@d+6,utoa@n+6
  7010  00393C  C028  F03C         	movff	utoa@d+7,utoa@n+7
  7011  003940                     
  7012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7013  003940  0E00               	movlw	0
  7014  003942  6E3E               	movwf	(utoa@i+1)^0,c
  7015  003944  0E4F               	movlw	79
  7016  003946  6E3D               	movwf	utoa@i^0,c
  7017  003948                     
  7018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7019  003948  0E00               	movlw	0
  7020  00394A  0101               	movlb	1	; () banked
  7021  00394C  6FB3               	movwf	(_dbuf+79)& (0+255),b
  7022                           
  7023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7024  00394E  EF1F  F01D         	goto	l8579
  7025  003952                     l8569:
  7026                           
  7027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7028  003952  063D               	decf	utoa@i^0,f,c
  7029  003954  A0D8               	btfss	status,0,c
  7030  003956  063E               	decf	(utoa@i+1)^0,f,c
  7031  003958                     
  7032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7033  003958  0E64               	movlw	low _dbuf
  7034  00395A  243D               	addwf	utoa@i^0,w,c
  7035  00395C  6ED9               	movwf	fsr2l,c
  7036  00395E  0E01               	movlw	high _dbuf
  7037  003960  203E               	addwfc	(utoa@i+1)^0,w,c
  7038  003962  6EDA               	movwf	fsr2h,c
  7039  003964  C035  F004         	movff	utoa@n,___lomod@dividend
  7040  003968  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  7041  00396C  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  7042  003970  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  7043  003974  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  7044  003978  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  7045  00397C  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  7046  003980  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  7047  003984  0E0A               	movlw	10
  7048  003986  6E0C               	movwf	___lomod@divisor^0,c
  7049  003988  0E00               	movlw	0
  7050  00398A  6E0D               	movwf	(___lomod@divisor+1)^0,c
  7051  00398C  0E00               	movlw	0
  7052  00398E  6E0E               	movwf	(___lomod@divisor+2)^0,c
  7053  003990  0E00               	movlw	0
  7054  003992  6E0F               	movwf	(___lomod@divisor+3)^0,c
  7055  003994  0E00               	movlw	0
  7056  003996  6E10               	movwf	(___lomod@divisor+4)^0,c
  7057  003998  0E00               	movlw	0
  7058  00399A  6E11               	movwf	(___lomod@divisor+5)^0,c
  7059  00399C  0E00               	movlw	0
  7060  00399E  6E12               	movwf	(___lomod@divisor+6)^0,c
  7061  0039A0  0E00               	movlw	0
  7062  0039A2  6E13               	movwf	(___lomod@divisor+7)^0,c
  7063  0039A4  EC75  F027         	call	___lomod	;wreg free
  7064  0039A8  C004  F029         	movff	?___lomod,??_utoa
  7065  0039AC  C005  F02A         	movff	?___lomod+1,??_utoa+1
  7066  0039B0  C006  F02B         	movff	?___lomod+2,??_utoa+2
  7067  0039B4  C007  F02C         	movff	?___lomod+3,??_utoa+3
  7068  0039B8  C008  F02D         	movff	?___lomod+4,??_utoa+4
  7069  0039BC  C009  F02E         	movff	?___lomod+5,??_utoa+5
  7070  0039C0  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  7071  0039C4  C00B  F030         	movff	?___lomod+7,??_utoa+7
  7072  0039C8  5029               	movf	??_utoa^0,w,c
  7073  0039CA  0F30               	addlw	48
  7074  0039CC  6EDF               	movwf	indf2,c
  7075  0039CE                     
  7076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7077  0039CE  0631               	decf	utoa@p^0,f,c
  7078  0039D0  A0D8               	btfss	status,0,c
  7079  0039D2  0632               	decf	(utoa@p+1)^0,f,c
  7080  0039D4                     
  7081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7082  0039D4  0633               	decf	utoa@w^0,f,c
  7083  0039D6  A0D8               	btfss	status,0,c
  7084  0039D8  0634               	decf	(utoa@w+1)^0,f,c
  7085  0039DA                     
  7086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7087  0039DA  C035  F004         	movff	utoa@n,___lodiv@dividend
  7088  0039DE  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  7089  0039E2  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  7090  0039E6  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  7091  0039EA  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  7092  0039EE  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  7093  0039F2  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  7094  0039F6  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  7095  0039FA  0E0A               	movlw	10
  7096  0039FC  6E0C               	movwf	___lodiv@divisor^0,c
  7097  0039FE  0E00               	movlw	0
  7098  003A00  6E0D               	movwf	(___lodiv@divisor+1)^0,c
  7099  003A02  0E00               	movlw	0
  7100  003A04  6E0E               	movwf	(___lodiv@divisor+2)^0,c
  7101  003A06  0E00               	movlw	0
  7102  003A08  6E0F               	movwf	(___lodiv@divisor+3)^0,c
  7103  003A0A  0E00               	movlw	0
  7104  003A0C  6E10               	movwf	(___lodiv@divisor+4)^0,c
  7105  003A0E  0E00               	movlw	0
  7106  003A10  6E11               	movwf	(___lodiv@divisor+5)^0,c
  7107  003A12  0E00               	movlw	0
  7108  003A14  6E12               	movwf	(___lodiv@divisor+6)^0,c
  7109  003A16  0E00               	movlw	0
  7110  003A18  6E13               	movwf	(___lodiv@divisor+7)^0,c
  7111  003A1A  ECFD  F026         	call	___lodiv	;wreg free
  7112  003A1E  C004  F035         	movff	?___lodiv,utoa@n
  7113  003A22  C005  F036         	movff	?___lodiv+1,utoa@n+1
  7114  003A26  C006  F037         	movff	?___lodiv+2,utoa@n+2
  7115  003A2A  C007  F038         	movff	?___lodiv+3,utoa@n+3
  7116  003A2E  C008  F039         	movff	?___lodiv+4,utoa@n+4
  7117  003A32  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  7118  003A36  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  7119  003A3A  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  7120  003A3E                     l8579:
  7121                           
  7122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7123  003A3E  503D               	movf	utoa@i^0,w,c
  7124  003A40  103E               	iorwf	(utoa@i+1)^0,w,c
  7125  003A42  B4D8               	btfsc	status,2,c
  7126  003A44  EF26  F01D         	goto	u11181
  7127  003A48  EF28  F01D         	goto	u11180
  7128  003A4C                     u11181:
  7129  003A4C  EF59  F01D         	goto	l8589
  7130  003A50                     u11180:
  7131  003A50  5035               	movf	utoa@n^0,w,c
  7132  003A52  1036               	iorwf	(utoa@n+1)^0,w,c
  7133  003A54  1037               	iorwf	(utoa@n+2)^0,w,c
  7134  003A56  1038               	iorwf	(utoa@n+3)^0,w,c
  7135  003A58  1039               	iorwf	(utoa@n+4)^0,w,c
  7136  003A5A  103A               	iorwf	(utoa@n+5)^0,w,c
  7137  003A5C  103B               	iorwf	(utoa@n+6)^0,w,c
  7138  003A5E  103C               	iorwf	(utoa@n+7)^0,w,c
  7139  003A60  A4D8               	btfss	status,2,c
  7140  003A62  EF35  F01D         	goto	u11191
  7141  003A66  EF37  F01D         	goto	u11190
  7142  003A6A                     u11191:
  7143  003A6A  EFA9  F01C         	goto	l8569
  7144  003A6E                     u11190:
  7145  003A6E  BE32               	btfsc	(utoa@p+1)^0,7,c
  7146  003A70  EF44  F01D         	goto	u11200
  7147  003A74  5032               	movf	(utoa@p+1)^0,w,c
  7148  003A76  E106               	bnz	u11201
  7149  003A78  0431               	decf	utoa@p^0,w,c
  7150  003A7A  B0D8               	btfsc	status,0,c
  7151  003A7C  EF42  F01D         	goto	u11201
  7152  003A80  EF44  F01D         	goto	u11200
  7153  003A84                     u11201:
  7154  003A84  EFA9  F01C         	goto	l8569
  7155  003A88                     u11200:
  7156  003A88  BE34               	btfsc	(utoa@w+1)^0,7,c
  7157  003A8A  EF4F  F01D         	goto	u11211
  7158  003A8E  5034               	movf	(utoa@w+1)^0,w,c
  7159  003A90  E108               	bnz	u11210
  7160  003A92  0433               	decf	utoa@w^0,w,c
  7161  003A94  A0D8               	btfss	status,0,c
  7162  003A96  EF4F  F01D         	goto	u11211
  7163  003A9A  EF51  F01D         	goto	u11210
  7164  003A9E                     u11211:
  7165  003A9E  EF59  F01D         	goto	l8589
  7166  003AA2                     u11210:
  7167  003AA2  0100               	movlb	0	; () banked
  7168  003AA4  B3EE               	btfsc	_flags& (0+255),1,b
  7169  003AA6  EF57  F01D         	goto	u11221
  7170  003AAA  EF59  F01D         	goto	u11220
  7171  003AAE                     u11221:
  7172  003AAE  EFA9  F01C         	goto	l8569
  7173  003AB2                     u11220:
  7174  003AB2                     l8589:
  7175                           
  7176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7177  003AB2  C01F  F014         	movff	utoa@fp,pad@fp
  7178  003AB6  C020  F015         	movff	utoa@fp+1,pad@fp+1
  7179  003ABA  0E64               	movlw	low _dbuf
  7180  003ABC  243D               	addwf	utoa@i^0,w,c
  7181  003ABE  6E16               	movwf	pad@buf^0,c
  7182  003AC0  0E01               	movlw	high _dbuf
  7183  003AC2  203E               	addwfc	(utoa@i+1)^0,w,c
  7184  003AC4  6E17               	movwf	(pad@buf+1)^0,c
  7185  003AC6  C033  F018         	movff	utoa@w,pad@p
  7186  003ACA  C034  F019         	movff	utoa@w+1,pad@p+1
  7187  003ACE  EC42  F028         	call	_pad	;wreg free
  7188  003AD2  C014  F01F         	movff	?_pad,?_utoa
  7189  003AD6  C015  F020         	movff	?_pad+1,?_utoa+1
  7190  003ADA  0012               	return		;funcret
  7191  003ADC                     __end_of_utoa:
  7192                           	opt callstack 0
  7193                           
  7194 ;; *************** function ___lomod *****************
  7195 ;; Defined at:
  7196 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  dividend        8    3[COMRAM] unsigned long long 
  7199 ;;  divisor         8   11[COMRAM] unsigned long long 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  counter         1   19[COMRAM] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  8    3[COMRAM] unsigned long long 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7211 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;Total ram usage:       17 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    4
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_utoa
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text10
  7226  004EEA                     __ptext10:
  7227                           	opt callstack 0
  7228  004EEA                     ___lomod:
  7229                           	opt callstack 21
  7230  004EEA  500C               	movf	___lomod@divisor^0,w,c
  7231  004EEC  100D               	iorwf	(___lomod@divisor+1)^0,w,c
  7232  004EEE  100E               	iorwf	(___lomod@divisor+2)^0,w,c
  7233  004EF0  100F               	iorwf	(___lomod@divisor+3)^0,w,c
  7234  004EF2  1010               	iorwf	(___lomod@divisor+4)^0,w,c
  7235  004EF4  1011               	iorwf	(___lomod@divisor+5)^0,w,c
  7236  004EF6  1012               	iorwf	(___lomod@divisor+6)^0,w,c
  7237  004EF8  1013               	iorwf	(___lomod@divisor+7)^0,w,c
  7238  004EFA  B4D8               	btfsc	status,2,c
  7239  004EFC  EF82  F027         	goto	u10241
  7240  004F00  EF84  F027         	goto	u10240
  7241  004F04                     u10241:
  7242  004F04  EFCC  F027         	goto	l1274
  7243  004F08                     u10240:
  7244  004F08  0E01               	movlw	1
  7245  004F0A  6E14               	movwf	___lomod@counter^0,c
  7246  004F0C  EF92  F027         	goto	l8071
  7247  004F10                     l8069:
  7248  004F10  90D8               	bcf	status,0,c
  7249  004F12  360C               	rlcf	___lomod@divisor^0,f,c
  7250  004F14  360D               	rlcf	(___lomod@divisor+1)^0,f,c
  7251  004F16  360E               	rlcf	(___lomod@divisor+2)^0,f,c
  7252  004F18  360F               	rlcf	(___lomod@divisor+3)^0,f,c
  7253  004F1A  3610               	rlcf	(___lomod@divisor+4)^0,f,c
  7254  004F1C  3611               	rlcf	(___lomod@divisor+5)^0,f,c
  7255  004F1E  3612               	rlcf	(___lomod@divisor+6)^0,f,c
  7256  004F20  3613               	rlcf	(___lomod@divisor+7)^0,f,c
  7257  004F22  2A14               	incf	___lomod@counter^0,f,c
  7258  004F24                     l8071:
  7259  004F24  AE13               	btfss	(___lomod@divisor+7)^0,7,c
  7260  004F26  EF97  F027         	goto	u10251
  7261  004F2A  EF99  F027         	goto	u10250
  7262  004F2E                     u10251:
  7263  004F2E  EF88  F027         	goto	l8069
  7264  004F32                     u10250:
  7265  004F32                     l8073:
  7266  004F32  500C               	movf	___lomod@divisor^0,w,c
  7267  004F34  5C04               	subwf	___lomod@dividend^0,w,c
  7268  004F36  500D               	movf	(___lomod@divisor+1)^0,w,c
  7269  004F38  5805               	subwfb	(___lomod@dividend+1)^0,w,c
  7270  004F3A  500E               	movf	(___lomod@divisor+2)^0,w,c
  7271  004F3C  5806               	subwfb	(___lomod@dividend+2)^0,w,c
  7272  004F3E  500F               	movf	(___lomod@divisor+3)^0,w,c
  7273  004F40  5807               	subwfb	(___lomod@dividend+3)^0,w,c
  7274  004F42  5010               	movf	(___lomod@divisor+4)^0,w,c
  7275  004F44  5808               	subwfb	(___lomod@dividend+4)^0,w,c
  7276  004F46  5011               	movf	(___lomod@divisor+5)^0,w,c
  7277  004F48  5809               	subwfb	(___lomod@dividend+5)^0,w,c
  7278  004F4A  5012               	movf	(___lomod@divisor+6)^0,w,c
  7279  004F4C  580A               	subwfb	(___lomod@dividend+6)^0,w,c
  7280  004F4E  5013               	movf	(___lomod@divisor+7)^0,w,c
  7281  004F50  580B               	subwfb	(___lomod@dividend+7)^0,w,c
  7282  004F52  A0D8               	btfss	status,0,c
  7283  004F54  EFAE  F027         	goto	u10261
  7284  004F58  EFB0  F027         	goto	u10260
  7285  004F5C                     u10261:
  7286  004F5C  EFC0  F027         	goto	l8077
  7287  004F60                     u10260:
  7288  004F60  500C               	movf	___lomod@divisor^0,w,c
  7289  004F62  5E04               	subwf	___lomod@dividend^0,f,c
  7290  004F64  500D               	movf	(___lomod@divisor+1)^0,w,c
  7291  004F66  5A05               	subwfb	(___lomod@dividend+1)^0,f,c
  7292  004F68  500E               	movf	(___lomod@divisor+2)^0,w,c
  7293  004F6A  5A06               	subwfb	(___lomod@dividend+2)^0,f,c
  7294  004F6C  500F               	movf	(___lomod@divisor+3)^0,w,c
  7295  004F6E  5A07               	subwfb	(___lomod@dividend+3)^0,f,c
  7296  004F70  5010               	movf	(___lomod@divisor+4)^0,w,c
  7297  004F72  5A08               	subwfb	(___lomod@dividend+4)^0,f,c
  7298  004F74  5011               	movf	(___lomod@divisor+5)^0,w,c
  7299  004F76  5A09               	subwfb	(___lomod@dividend+5)^0,f,c
  7300  004F78  5012               	movf	(___lomod@divisor+6)^0,w,c
  7301  004F7A  5A0A               	subwfb	(___lomod@dividend+6)^0,f,c
  7302  004F7C  5013               	movf	(___lomod@divisor+7)^0,w,c
  7303  004F7E  5A0B               	subwfb	(___lomod@dividend+7)^0,f,c
  7304  004F80                     l8077:
  7305  004F80  90D8               	bcf	status,0,c
  7306  004F82  3213               	rrcf	(___lomod@divisor+7)^0,f,c
  7307  004F84  3212               	rrcf	(___lomod@divisor+6)^0,f,c
  7308  004F86  3211               	rrcf	(___lomod@divisor+5)^0,f,c
  7309  004F88  3210               	rrcf	(___lomod@divisor+4)^0,f,c
  7310  004F8A  320F               	rrcf	(___lomod@divisor+3)^0,f,c
  7311  004F8C  320E               	rrcf	(___lomod@divisor+2)^0,f,c
  7312  004F8E  320D               	rrcf	(___lomod@divisor+1)^0,f,c
  7313  004F90  320C               	rrcf	___lomod@divisor^0,f,c
  7314  004F92  2E14               	decfsz	___lomod@counter^0,f,c
  7315  004F94  EF99  F027         	goto	l8073
  7316  004F98                     l1274:
  7317  004F98  C004  F004         	movff	___lomod@dividend,?___lomod
  7318  004F9C  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  7319  004FA0  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  7320  004FA4  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  7321  004FA8  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  7322  004FAC  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  7323  004FB0  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  7324  004FB4  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  7325  004FB8  0012               	return		;funcret
  7326  004FBA                     __end_of___lomod:
  7327                           	opt callstack 0
  7328                           
  7329 ;; *************** function ___lodiv *****************
  7330 ;; Defined at:
  7331 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  dividend        8    3[COMRAM] unsigned long long 
  7334 ;;  divisor         8   11[COMRAM] unsigned long long 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  quotient        8   19[COMRAM] unsigned long long 
  7337 ;;  counter         1   27[COMRAM] unsigned char 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  8    3[COMRAM] unsigned long long 
  7340 ;; Registers used:
  7341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7347 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7350 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7351 ;;Total ram usage:       25 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    4
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_utoa
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text11
  7362  004DFA                     __ptext11:
  7363                           	opt callstack 0
  7364  004DFA                     ___lodiv:
  7365                           	opt callstack 21
  7366  004DFA  EE20  F014         	lfsr	2,___lodiv@quotient
  7367  004DFE  0E07               	movlw	7
  7368  004E00                     u10201:
  7369  004E00  6ADE               	clrf	postinc2,c
  7370  004E02  06E8               	decf	wreg,f,c
  7371  004E04  E2FD               	bc	u10201
  7372  004E06  500C               	movf	___lodiv@divisor^0,w,c
  7373  004E08  100D               	iorwf	(___lodiv@divisor+1)^0,w,c
  7374  004E0A  100E               	iorwf	(___lodiv@divisor+2)^0,w,c
  7375  004E0C  100F               	iorwf	(___lodiv@divisor+3)^0,w,c
  7376  004E0E  1010               	iorwf	(___lodiv@divisor+4)^0,w,c
  7377  004E10  1011               	iorwf	(___lodiv@divisor+5)^0,w,c
  7378  004E12  1012               	iorwf	(___lodiv@divisor+6)^0,w,c
  7379  004E14  1013               	iorwf	(___lodiv@divisor+7)^0,w,c
  7380  004E16  B4D8               	btfsc	status,2,c
  7381  004E18  EF10  F027         	goto	u10211
  7382  004E1C  EF12  F027         	goto	u10210
  7383  004E20                     u10211:
  7384  004E20  EF64  F027         	goto	l1264
  7385  004E24                     u10210:
  7386  004E24  0E01               	movlw	1
  7387  004E26  6E1C               	movwf	___lodiv@counter^0,c
  7388  004E28  EF20  F027         	goto	l8051
  7389  004E2C                     l8049:
  7390  004E2C  90D8               	bcf	status,0,c
  7391  004E2E  360C               	rlcf	___lodiv@divisor^0,f,c
  7392  004E30  360D               	rlcf	(___lodiv@divisor+1)^0,f,c
  7393  004E32  360E               	rlcf	(___lodiv@divisor+2)^0,f,c
  7394  004E34  360F               	rlcf	(___lodiv@divisor+3)^0,f,c
  7395  004E36  3610               	rlcf	(___lodiv@divisor+4)^0,f,c
  7396  004E38  3611               	rlcf	(___lodiv@divisor+5)^0,f,c
  7397  004E3A  3612               	rlcf	(___lodiv@divisor+6)^0,f,c
  7398  004E3C  3613               	rlcf	(___lodiv@divisor+7)^0,f,c
  7399  004E3E  2A1C               	incf	___lodiv@counter^0,f,c
  7400  004E40                     l8051:
  7401  004E40  AE13               	btfss	(___lodiv@divisor+7)^0,7,c
  7402  004E42  EF25  F027         	goto	u10221
  7403  004E46  EF27  F027         	goto	u10220
  7404  004E4A                     u10221:
  7405  004E4A  EF16  F027         	goto	l8049
  7406  004E4E                     u10220:
  7407  004E4E                     l8053:
  7408  004E4E  90D8               	bcf	status,0,c
  7409  004E50  3614               	rlcf	___lodiv@quotient^0,f,c
  7410  004E52  3615               	rlcf	(___lodiv@quotient+1)^0,f,c
  7411  004E54  3616               	rlcf	(___lodiv@quotient+2)^0,f,c
  7412  004E56  3617               	rlcf	(___lodiv@quotient+3)^0,f,c
  7413  004E58  3618               	rlcf	(___lodiv@quotient+4)^0,f,c
  7414  004E5A  3619               	rlcf	(___lodiv@quotient+5)^0,f,c
  7415  004E5C  361A               	rlcf	(___lodiv@quotient+6)^0,f,c
  7416  004E5E  361B               	rlcf	(___lodiv@quotient+7)^0,f,c
  7417  004E60  500C               	movf	___lodiv@divisor^0,w,c
  7418  004E62  5C04               	subwf	___lodiv@dividend^0,w,c
  7419  004E64  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7420  004E66  5805               	subwfb	(___lodiv@dividend+1)^0,w,c
  7421  004E68  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7422  004E6A  5806               	subwfb	(___lodiv@dividend+2)^0,w,c
  7423  004E6C  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7424  004E6E  5807               	subwfb	(___lodiv@dividend+3)^0,w,c
  7425  004E70  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7426  004E72  5808               	subwfb	(___lodiv@dividend+4)^0,w,c
  7427  004E74  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7428  004E76  5809               	subwfb	(___lodiv@dividend+5)^0,w,c
  7429  004E78  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7430  004E7A  580A               	subwfb	(___lodiv@dividend+6)^0,w,c
  7431  004E7C  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7432  004E7E  580B               	subwfb	(___lodiv@dividend+7)^0,w,c
  7433  004E80  A0D8               	btfss	status,0,c
  7434  004E82  EF45  F027         	goto	u10231
  7435  004E86  EF47  F027         	goto	u10230
  7436  004E8A                     u10231:
  7437  004E8A  EF58  F027         	goto	l8061
  7438  004E8E                     u10230:
  7439  004E8E  500C               	movf	___lodiv@divisor^0,w,c
  7440  004E90  5E04               	subwf	___lodiv@dividend^0,f,c
  7441  004E92  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7442  004E94  5A05               	subwfb	(___lodiv@dividend+1)^0,f,c
  7443  004E96  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7444  004E98  5A06               	subwfb	(___lodiv@dividend+2)^0,f,c
  7445  004E9A  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7446  004E9C  5A07               	subwfb	(___lodiv@dividend+3)^0,f,c
  7447  004E9E  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7448  004EA0  5A08               	subwfb	(___lodiv@dividend+4)^0,f,c
  7449  004EA2  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7450  004EA4  5A09               	subwfb	(___lodiv@dividend+5)^0,f,c
  7451  004EA6  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7452  004EA8  5A0A               	subwfb	(___lodiv@dividend+6)^0,f,c
  7453  004EAA  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7454  004EAC  5A0B               	subwfb	(___lodiv@dividend+7)^0,f,c
  7455  004EAE  8014               	bsf	___lodiv@quotient^0,0,c
  7456  004EB0                     l8061:
  7457  004EB0  90D8               	bcf	status,0,c
  7458  004EB2  3213               	rrcf	(___lodiv@divisor+7)^0,f,c
  7459  004EB4  3212               	rrcf	(___lodiv@divisor+6)^0,f,c
  7460  004EB6  3211               	rrcf	(___lodiv@divisor+5)^0,f,c
  7461  004EB8  3210               	rrcf	(___lodiv@divisor+4)^0,f,c
  7462  004EBA  320F               	rrcf	(___lodiv@divisor+3)^0,f,c
  7463  004EBC  320E               	rrcf	(___lodiv@divisor+2)^0,f,c
  7464  004EBE  320D               	rrcf	(___lodiv@divisor+1)^0,f,c
  7465  004EC0  320C               	rrcf	___lodiv@divisor^0,f,c
  7466  004EC2  2E1C               	decfsz	___lodiv@counter^0,f,c
  7467  004EC4  EF27  F027         	goto	l8053
  7468  004EC8                     l1264:
  7469  004EC8  C014  F004         	movff	___lodiv@quotient,?___lodiv
  7470  004ECC  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  7471  004ED0  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  7472  004ED4  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  7473  004ED8  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  7474  004EDC  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  7475  004EE0  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  7476  004EE4  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  7477  004EE8  0012               	return		;funcret
  7478  004EEA                     __end_of___lodiv:
  7479                           	opt callstack 0
  7480                           
  7481 ;; *************** function _strncmp *****************
  7482 ;; Defined at:
  7483 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  7486 ;;		 -> vfpfcnvrt@ct(3), STR_2(10), 
  7487 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  7488 ;;		 -> STR_113(3), STR_109(3), STR_104(3), STR_100(3), 
  7489 ;;		 -> STR_95(4), STR_91(4), STR_86(3), STR_81(3), 
  7490 ;;		 -> STR_76(4), STR_71(3), STR_66(3), STR_61(4), 
  7491 ;;		 -> STR_56(3), STR_51(3), STR_46(4), STR_41(3), 
  7492 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  7493 ;;		 -> STR_18(4), STR_14(4), 
  7494 ;;  n               2    7[COMRAM] unsigned int 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  r               2   12[COMRAM] PTR const unsigned char 
  7497 ;;		 -> STR_113(3), STR_109(3), STR_104(3), STR_100(3), 
  7498 ;;		 -> STR_95(4), STR_91(4), STR_86(3), STR_81(3), 
  7499 ;;		 -> STR_76(4), STR_71(3), STR_66(3), STR_61(4), 
  7500 ;;		 -> STR_56(3), STR_51(3), STR_46(4), STR_41(3), 
  7501 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  7502 ;;		 -> STR_18(4), STR_14(4), 
  7503 ;;  l               2   10[COMRAM] PTR const unsigned char 
  7504 ;;		 -> vfpfcnvrt@ct(3), STR_2(10), 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  2    3[COMRAM] int 
  7507 ;; Registers used:
  7508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7514 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;Total ram usage:       11 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    4
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_vfpfcnvrt
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text12
  7529  0048BC                     __ptext12:
  7530                           	opt callstack 0
  7531  0048BC                     _strncmp:
  7532                           	opt callstack 22
  7533  0048BC  C004  F00B         	movff	strncmp@_l,strncmp@l
  7534  0048C0  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  7535  0048C4  C006  F00D         	movff	strncmp@_r,strncmp@r
  7536  0048C8  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  7537  0048CC  0608               	decf	strncmp@n^0,f,c
  7538  0048CE  A0D8               	btfss	status,0,c
  7539  0048D0  0609               	decf	(strncmp@n+1)^0,f,c
  7540  0048D2  2808               	incf	strncmp@n^0,w,c
  7541  0048D4  E106               	bnz	u11471
  7542  0048D6  2809               	incf	(strncmp@n+1)^0,w,c
  7543  0048D8  A4D8               	btfss	status,2,c
  7544  0048DA  EF71  F024         	goto	u11471
  7545  0048DE  EF73  F024         	goto	u11470
  7546  0048E2                     u11471:
  7547  0048E2  EF80  F024         	goto	l8709
  7548  0048E6                     u11470:
  7549  0048E6  0E00               	movlw	0
  7550  0048E8  6E05               	movwf	(?_strncmp+1)^0,c
  7551  0048EA  0E00               	movlw	0
  7552  0048EC  6E04               	movwf	?_strncmp^0,c
  7553  0048EE  EFF0  F024         	goto	l1631
  7554  0048F2                     l8707:
  7555  0048F2  4A0B               	infsnz	strncmp@l^0,f,c
  7556  0048F4  2A0C               	incf	(strncmp@l+1)^0,f,c
  7557  0048F6  4A0D               	infsnz	strncmp@r^0,f,c
  7558  0048F8  2A0E               	incf	(strncmp@r+1)^0,f,c
  7559  0048FA  0608               	decf	strncmp@n^0,f,c
  7560  0048FC  A0D8               	btfss	status,0,c
  7561  0048FE  0609               	decf	(strncmp@n+1)^0,f,c
  7562  004900                     l8709:
  7563  004900  C00B  FFF6         	movff	strncmp@l,tblptrl
  7564  004904  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7565  004908  0E00               	movlw	low (__mediumconst shr (0+16))
  7566  00490A  6EF8               	movwf	tblptru,c
  7567  00490C  0E0E               	movlw	(high __ramtop+-1)
  7568  00490E  64F7               	cpfsgt	tblptrh,c
  7569  004910  D003               	bra	u11487
  7570  004912  0008               	tblrd		*
  7571  004914  50F5               	movf	tablat,w,c
  7572  004916  D005               	bra	u11480
  7573  004918                     u11487:
  7574  004918  CFF6 FFE1          	movff	tblptrl,fsr1l
  7575  00491C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7576  004920  50E7               	movf	indf1,w,c
  7577  004922                     u11480:
  7578  004922  0900               	iorlw	0
  7579  004924  B4D8               	btfsc	status,2,c
  7580  004926  EF97  F024         	goto	u11491
  7581  00492A  EF99  F024         	goto	u11490
  7582  00492E                     u11491:
  7583  00492E  EFD2  F024         	goto	l8717
  7584  004932                     u11490:
  7585  004932  C00D  FFF6         	movff	strncmp@r,tblptrl
  7586  004936  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7587  00493A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7588  00493A  6AF8               	clrf	tblptru,c
  7589  00493C                     	endif
  7590  00493C                     	if	0	;tblptru may be non-zero
  7591  00493C                     	endif
  7592  00493C  0008               	tblrd		*
  7593  00493E  50F5               	movf	tablat,w,c
  7594  004940  0900               	iorlw	0
  7595  004942  B4D8               	btfsc	status,2,c
  7596  004944  EFA6  F024         	goto	u11501
  7597  004948  EFA8  F024         	goto	u11500
  7598  00494C                     u11501:
  7599  00494C  EFD2  F024         	goto	l8717
  7600  004950                     u11500:
  7601  004950  5008               	movf	strncmp@n^0,w,c
  7602  004952  1009               	iorwf	(strncmp@n+1)^0,w,c
  7603  004954  B4D8               	btfsc	status,2,c
  7604  004956  EFAF  F024         	goto	u11511
  7605  00495A  EFB1  F024         	goto	u11510
  7606  00495E                     u11511:
  7607  00495E  EFD2  F024         	goto	l8717
  7608  004962                     u11510:
  7609  004962  C00D  FFF6         	movff	strncmp@r,tblptrl
  7610  004966  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7611  00496A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7612  00496A  6AF8               	clrf	tblptru,c
  7613  00496C                     	endif
  7614  00496C                     	if	0	;tblptru may be non-zero
  7615  00496C                     	endif
  7616  00496C  0008               	tblrd		*
  7617  00496E  CFF5 F00A          	movff	tablat,??_strncmp
  7618  004972  C00B  FFF6         	movff	strncmp@l,tblptrl
  7619  004976  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7620  00497A  0E00               	movlw	low (__mediumconst shr (0+16))
  7621  00497C  6EF8               	movwf	tblptru,c
  7622  00497E  0E0E               	movlw	(high __ramtop+-1)
  7623  004980  64F7               	cpfsgt	tblptrh,c
  7624  004982  D003               	bra	u11527
  7625  004984  0008               	tblrd		*
  7626  004986  50F5               	movf	tablat,w,c
  7627  004988  D005               	bra	u11525
  7628  00498A                     u11527:
  7629  00498A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7630  00498E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7631  004992  50E7               	movf	indf1,w,c
  7632  004994                     u11525:
  7633  004994  180A               	xorwf	??_strncmp^0,w,c
  7634  004996  B4D8               	btfsc	status,2,c
  7635  004998  EFD0  F024         	goto	u11521
  7636  00499C  EFD2  F024         	goto	u11520
  7637  0049A0                     u11521:
  7638  0049A0  EF79  F024         	goto	l8707
  7639  0049A4                     u11520:
  7640  0049A4                     l8717:
  7641  0049A4  C00B  FFF6         	movff	strncmp@l,tblptrl
  7642  0049A8  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7643  0049AC  0E00               	movlw	low (__mediumconst shr (0+16))
  7644  0049AE  6EF8               	movwf	tblptru,c
  7645  0049B0  0E0E               	movlw	(high __ramtop+-1)
  7646  0049B2  64F7               	cpfsgt	tblptrh,c
  7647  0049B4  D003               	bra	u11537
  7648  0049B6  0008               	tblrd		*
  7649  0049B8  50F5               	movf	tablat,w,c
  7650  0049BA  D005               	bra	u11530
  7651  0049BC                     u11537:
  7652  0049BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7653  0049C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7654  0049C4  50E7               	movf	indf1,w,c
  7655  0049C6                     u11530:
  7656  0049C6  6E0A               	movwf	??_strncmp^0,c
  7657  0049C8  C00D  FFF6         	movff	strncmp@r,tblptrl
  7658  0049CC  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7659  0049D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7660  0049D0  6AF8               	clrf	tblptru,c
  7661  0049D2                     	endif
  7662  0049D2                     	if	0	;tblptru may be non-zero
  7663  0049D2                     	endif
  7664  0049D2  0008               	tblrd		*
  7665  0049D4  50F5               	movf	tablat,w,c
  7666  0049D6  5C0A               	subwf	??_strncmp^0,w,c
  7667  0049D8  6E04               	movwf	?_strncmp^0,c
  7668  0049DA  6A05               	clrf	(?_strncmp+1)^0,c
  7669  0049DC  A0D8               	btfss	status,0,c
  7670  0049DE  0605               	decf	(?_strncmp+1)^0,f,c
  7671  0049E0                     l1631:
  7672  0049E0  0012               	return		;funcret
  7673  0049E2                     __end_of_strncmp:
  7674                           	opt callstack 0
  7675                           
  7676 ;; *************** function _stoa *****************
  7677 ;; Defined at:
  7678 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7681 ;;		 -> vsnprintf@f(6), 
  7682 ;;  s               2   14[COMRAM] PTR unsigned char 
  7683 ;;		 -> ?_snprintf(2), 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;  nuls            7   17[COMRAM] unsigned char [7]
  7686 ;;  l               2   32[COMRAM] int 
  7687 ;;  p               2   30[COMRAM] int 
  7688 ;;  cp              2   28[COMRAM] PTR unsigned char 
  7689 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7690 ;;  w               2   26[COMRAM] int 
  7691 ;;  i               2   24[COMRAM] int 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  2   12[COMRAM] int 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7702 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7704 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;Total ram usage:       22 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    6
  7708 ;; This function calls:
  7709 ;;		_fputc
  7710 ;;		_strlen
  7711 ;; This function is called by:
  7712 ;;		_vfpfcnvrt
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text13
  7717  0041A2                     __ptext13:
  7718                           	opt callstack 0
  7719  0041A2                     _stoa:
  7720                           	opt callstack 20
  7721  0041A2                     
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7723  0041A2  EE21  F0B4         	lfsr	2,stoa@F1174
  7724  0041A6  EE10  F012         	lfsr	1,stoa@nuls
  7725  0041AA  0E06               	movlw	6
  7726  0041AC                     u11071:
  7727  0041AC  CFDB FFE3          	movff	plusw2,plusw1
  7728  0041B0  06E8               	decf	wreg,f,c
  7729  0041B2  E2FC               	bc	u11071
  7730  0041B4                     
  7731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7732  0041B4  C00F  F01D         	movff	stoa@s,stoa@cp
  7733  0041B8  C010  F01E         	movff	stoa@s+1,stoa@cp+1
  7734  0041BC                     
  7735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7736  0041BC  501D               	movf	stoa@cp^0,w,c
  7737  0041BE  101E               	iorwf	(stoa@cp+1)^0,w,c
  7738  0041C0  A4D8               	btfss	status,2,c
  7739  0041C2  EFE5  F020         	goto	u11081
  7740  0041C6  EFE7  F020         	goto	u11080
  7741  0041CA                     u11081:
  7742  0041CA  EFEB  F020         	goto	l8523
  7743  0041CE                     u11080:
  7744  0041CE                     
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7746  0041CE  0E12               	movlw	low stoa@nuls
  7747  0041D0  6E1D               	movwf	stoa@cp^0,c
  7748  0041D2  0E00               	movlw	high stoa@nuls
  7749  0041D4  6E1E               	movwf	(stoa@cp+1)^0,c
  7750  0041D6                     l8523:
  7751                           
  7752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7753  0041D6  C01D  F004         	movff	stoa@cp,strlen@s
  7754  0041DA  C01E  F005         	movff	stoa@cp+1,strlen@s+1
  7755  0041DE  EC23  F02D         	call	_strlen	;wreg free
  7756  0041E2  C004  F021         	movff	?_strlen,stoa@l
  7757  0041E6  C005  F022         	movff	?_strlen+1,stoa@l+1
  7758  0041EA                     
  7759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7760  0041EA  C058  F01F         	movff	_prec,stoa@p
  7761  0041EE  C059  F020         	movff	_prec+1,stoa@p+1
  7762  0041F2                     
  7763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7764  0041F2  BE20               	btfsc	(stoa@p+1)^0,7,c
  7765  0041F4  EFFE  F020         	goto	u11091
  7766  0041F8  EF00  F021         	goto	u11090
  7767  0041FC                     u11091:
  7768  0041FC  EF15  F021         	goto	l672
  7769  004200                     u11090:
  7770  004200  5021               	movf	stoa@l^0,w,c
  7771  004202  5C1F               	subwf	stoa@p^0,w,c
  7772  004204  5020               	movf	(stoa@p+1)^0,w,c
  7773  004206  0A80               	xorlw	128
  7774  004208  6E11               	movwf	??_stoa^0,c
  7775  00420A  5022               	movf	(stoa@l+1)^0,w,c
  7776  00420C  0A80               	xorlw	128
  7777  00420E  5811               	subwfb	??_stoa^0,w,c
  7778  004210  A0D8               	btfss	status,0,c
  7779  004212  EF0D  F021         	goto	u11101
  7780  004216  EF0F  F021         	goto	u11100
  7781  00421A                     u11101:
  7782  00421A  EF11  F021         	goto	l670
  7783  00421E                     u11100:
  7784  00421E  EF15  F021         	goto	l672
  7785  004222                     l670:
  7786  004222  C01F  F021         	movff	stoa@p,stoa@l
  7787  004226  C020  F022         	movff	stoa@p+1,stoa@l+1
  7788  00422A                     l672:
  7789                           
  7790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7791  00422A  C021  F01F         	movff	stoa@l,stoa@p
  7792  00422E  C022  F020         	movff	stoa@l+1,stoa@p+1
  7793                           
  7794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7795  004232  C0EC  F01B         	movff	_width,stoa@w
  7796  004236  C0ED  F01C         	movff	_width+1,stoa@w+1
  7797                           
  7798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7799  00423A  0100               	movlb	0	; () banked
  7800  00423C  B1EE               	btfsc	_flags& (0+255),0,b
  7801  00423E  EF23  F021         	goto	u11111
  7802  004242  EF25  F021         	goto	u11110
  7803  004246                     u11111:
  7804  004246  EF42  F021         	goto	l8539
  7805  00424A                     u11110:
  7806  00424A  EF33  F021         	goto	l8537
  7807  00424E                     l8533:
  7808                           
  7809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7810  00424E  0E00               	movlw	0
  7811  004250  6E05               	movwf	(fputc@c+1)^0,c
  7812  004252  0E20               	movlw	32
  7813  004254  6E04               	movwf	fputc@c^0,c
  7814  004256  C00D  F006         	movff	stoa@fp,fputc@fp
  7815  00425A  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7816  00425E  ECDD  F027         	call	_fputc	;wreg free
  7817  004262                     
  7818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7819  004262  4A21               	infsnz	stoa@l^0,f,c
  7820  004264  2A22               	incf	(stoa@l+1)^0,f,c
  7821  004266                     l8537:
  7822                           
  7823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7824  004266  501B               	movf	stoa@w^0,w,c
  7825  004268  5C21               	subwf	stoa@l^0,w,c
  7826  00426A  5022               	movf	(stoa@l+1)^0,w,c
  7827  00426C  0A80               	xorlw	128
  7828  00426E  6E11               	movwf	??_stoa^0,c
  7829  004270  501C               	movf	(stoa@w+1)^0,w,c
  7830  004272  0A80               	xorlw	128
  7831  004274  5811               	subwfb	??_stoa^0,w,c
  7832  004276  A0D8               	btfss	status,0,c
  7833  004278  EF40  F021         	goto	u11121
  7834  00427C  EF42  F021         	goto	u11120
  7835  004280                     u11121:
  7836  004280  EF27  F021         	goto	l8533
  7837  004284                     u11120:
  7838  004284                     l8539:
  7839                           
  7840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7841  004284  0E00               	movlw	0
  7842  004286  6E1A               	movwf	(stoa@i+1)^0,c
  7843  004288  0E00               	movlw	0
  7844  00428A  6E19               	movwf	stoa@i^0,c
  7845                           
  7846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7847  00428C  EF5B  F021         	goto	l8547
  7848  004290                     l8541:
  7849                           
  7850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7851  004290  C01D  FFD9         	movff	stoa@cp,fsr2l
  7852  004294  C01E  FFDA         	movff	stoa@cp+1,fsr2h
  7853  004298  50DF               	movf	indf2,w,c
  7854  00429A  6E11               	movwf	??_stoa^0,c
  7855  00429C  5011               	movf	??_stoa^0,w,c
  7856  00429E  6E04               	movwf	fputc@c^0,c
  7857  0042A0  6A05               	clrf	(fputc@c+1)^0,c
  7858  0042A2  C00D  F006         	movff	stoa@fp,fputc@fp
  7859  0042A6  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7860  0042AA  ECDD  F027         	call	_fputc	;wreg free
  7861  0042AE                     
  7862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7863  0042AE  4A1D               	infsnz	stoa@cp^0,f,c
  7864  0042B0  2A1E               	incf	(stoa@cp+1)^0,f,c
  7865  0042B2                     
  7866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7867  0042B2  4A19               	infsnz	stoa@i^0,f,c
  7868  0042B4  2A1A               	incf	(stoa@i+1)^0,f,c
  7869  0042B6                     l8547:
  7870                           
  7871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7872  0042B6  501F               	movf	stoa@p^0,w,c
  7873  0042B8  5C19               	subwf	stoa@i^0,w,c
  7874  0042BA  501A               	movf	(stoa@i+1)^0,w,c
  7875  0042BC  0A80               	xorlw	128
  7876  0042BE  6E11               	movwf	??_stoa^0,c
  7877  0042C0  5020               	movf	(stoa@p+1)^0,w,c
  7878  0042C2  0A80               	xorlw	128
  7879  0042C4  5811               	subwfb	??_stoa^0,w,c
  7880  0042C6  A0D8               	btfss	status,0,c
  7881  0042C8  EF68  F021         	goto	u11131
  7882  0042CC  EF6A  F021         	goto	u11130
  7883  0042D0                     u11131:
  7884  0042D0  EF48  F021         	goto	l8541
  7885  0042D4                     u11130:
  7886  0042D4                     
  7887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7888  0042D4  0100               	movlb	0	; () banked
  7889  0042D6  A1EE               	btfss	_flags& (0+255),0,b
  7890  0042D8  EF70  F021         	goto	u11141
  7891  0042DC  EF72  F021         	goto	u11140
  7892  0042E0                     u11141:
  7893  0042E0  EF8F  F021         	goto	l682
  7894  0042E4                     u11140:
  7895  0042E4  EF80  F021         	goto	l8555
  7896  0042E8                     l8551:
  7897                           
  7898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7899  0042E8  0E00               	movlw	0
  7900  0042EA  6E05               	movwf	(fputc@c+1)^0,c
  7901  0042EC  0E20               	movlw	32
  7902  0042EE  6E04               	movwf	fputc@c^0,c
  7903  0042F0  C00D  F006         	movff	stoa@fp,fputc@fp
  7904  0042F4  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7905  0042F8  ECDD  F027         	call	_fputc	;wreg free
  7906  0042FC                     
  7907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7908  0042FC  4A21               	infsnz	stoa@l^0,f,c
  7909  0042FE  2A22               	incf	(stoa@l+1)^0,f,c
  7910  004300                     l8555:
  7911                           
  7912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7913  004300  501B               	movf	stoa@w^0,w,c
  7914  004302  5C21               	subwf	stoa@l^0,w,c
  7915  004304  5022               	movf	(stoa@l+1)^0,w,c
  7916  004306  0A80               	xorlw	128
  7917  004308  6E11               	movwf	??_stoa^0,c
  7918  00430A  501C               	movf	(stoa@w+1)^0,w,c
  7919  00430C  0A80               	xorlw	128
  7920  00430E  5811               	subwfb	??_stoa^0,w,c
  7921  004310  A0D8               	btfss	status,0,c
  7922  004312  EF8D  F021         	goto	u11151
  7923  004316  EF8F  F021         	goto	u11150
  7924  00431A                     u11151:
  7925  00431A  EF74  F021         	goto	l8551
  7926  00431E                     u11150:
  7927  00431E                     l682:
  7928                           
  7929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7930  00431E  C021  F00D         	movff	stoa@l,?_stoa
  7931  004322  C022  F00E         	movff	stoa@l+1,?_stoa+1
  7932  004326  0012               	return		;funcret
  7933  004328                     __end_of_stoa:
  7934                           	opt callstack 0
  7935                           
  7936 ;; *************** function _otoa *****************
  7937 ;; Defined at:
  7938 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7941 ;;		 -> vsnprintf@f(6), 
  7942 ;;  d               8   32[COMRAM] unsigned long long 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  n               8   54[COMRAM] unsigned long long 
  7945 ;;  i               2   62[COMRAM] int 
  7946 ;;  w               2   52[COMRAM] int 
  7947 ;;  t               2   50[COMRAM] int 
  7948 ;;  p               2   48[COMRAM] int 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  2   30[COMRAM] int 
  7951 ;; Registers used:
  7952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7958 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7959 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7960 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7962 ;;Total ram usage:       34 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    8
  7965 ;; This function calls:
  7966 ;;		_pad
  7967 ;; This function is called by:
  7968 ;;		_vfpfcnvrt
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text14
  7973  003ADC                     __ptext14:
  7974                           	opt callstack 0
  7975  003ADC                     _otoa:
  7976                           	opt callstack 18
  7977  003ADC                     
  7978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7979  003ADC  BE59               	btfsc	(_prec+1)^0,7,c
  7980  003ADE  EF73  F01D         	goto	u10971
  7981  003AE2  EF75  F01D         	goto	u10970
  7982  003AE6                     u10971:
  7983  003AE6  EF77  F01D         	goto	l8471
  7984  003AEA                     u10970:
  7985  003AEA                     
  7986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7987  003AEA  0100               	movlb	0	; () banked
  7988  003AEC  93EE               	bcf	_flags& (0+255),1,b
  7989  003AEE                     l8471:
  7990                           
  7991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7992  003AEE  BE59               	btfsc	(_prec+1)^0,7,c
  7993  003AF0  EF84  F01D         	goto	u10980
  7994  003AF4  5059               	movf	(_prec+1)^0,w,c
  7995  003AF6  E106               	bnz	u10981
  7996  003AF8  0458               	decf	_prec^0,w,c
  7997  003AFA  B0D8               	btfsc	status,0,c
  7998  003AFC  EF82  F01D         	goto	u10981
  7999  003B00  EF84  F01D         	goto	u10980
  8000  003B04                     u10981:
  8001  003B04  EF8A  F01D         	goto	l652
  8002  003B08                     u10980:
  8003  003B08  0E00               	movlw	0
  8004  003B0A  6E32               	movwf	(otoa@p+1)^0,c
  8005  003B0C  0E01               	movlw	1
  8006  003B0E  6E31               	movwf	otoa@p^0,c
  8007  003B10  EF8E  F01D         	goto	l654
  8008  003B14                     l652:
  8009  003B14  C058  F031         	movff	_prec,otoa@p
  8010  003B18  C059  F032         	movff	_prec+1,otoa@p+1
  8011  003B1C                     l654:
  8012                           
  8013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8014  003B1C  C0EC  F035         	movff	_width,otoa@w
  8015  003B20  C0ED  F036         	movff	_width+1,otoa@w+1
  8016                           
  8017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8018  003B24  C021  F037         	movff	otoa@d,otoa@n
  8019  003B28  C022  F038         	movff	otoa@d+1,otoa@n+1
  8020  003B2C  C023  F039         	movff	otoa@d+2,otoa@n+2
  8021  003B30  C024  F03A         	movff	otoa@d+3,otoa@n+3
  8022  003B34  C025  F03B         	movff	otoa@d+4,otoa@n+4
  8023  003B38  C026  F03C         	movff	otoa@d+5,otoa@n+5
  8024  003B3C  C027  F03D         	movff	otoa@d+6,otoa@n+6
  8025  003B40  C028  F03E         	movff	otoa@d+7,otoa@n+7
  8026  003B44                     
  8027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8028  003B44  0E00               	movlw	0
  8029  003B46  6E40               	movwf	(otoa@i+1)^0,c
  8030  003B48  0E4F               	movlw	79
  8031  003B4A  6E3F               	movwf	otoa@i^0,c
  8032  003B4C                     
  8033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8034  003B4C  0E00               	movlw	0
  8035  003B4E  0101               	movlb	1	; () banked
  8036  003B50  6FB3               	movwf	(_dbuf+79)& (0+255),b
  8037  003B52                     
  8038                           ; BSR set to: 1
  8039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8040  003B52  0E00               	movlw	0
  8041  003B54  6E34               	movwf	(otoa@t+1)^0,c
  8042  003B56  0E00               	movlw	0
  8043  003B58  6E33               	movwf	otoa@t^0,c
  8044                           
  8045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8046  003B5A  EFF4  F01D         	goto	l8493
  8047  003B5E                     l8481:
  8048                           
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8050  003B5E  063F               	decf	otoa@i^0,f,c
  8051  003B60  A0D8               	btfss	status,0,c
  8052  003B62  0640               	decf	(otoa@i+1)^0,f,c
  8053  003B64                     
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8055  003B64  0E07               	movlw	7
  8056  003B66  1437               	andwf	otoa@n^0,w,c
  8057  003B68  6E33               	movwf	otoa@t^0,c
  8058  003B6A  6A34               	clrf	(otoa@t+1)^0,c
  8059  003B6C                     
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8061  003B6C  0E64               	movlw	low _dbuf
  8062  003B6E  243F               	addwf	otoa@i^0,w,c
  8063  003B70  6ED9               	movwf	fsr2l,c
  8064  003B72  0E01               	movlw	high _dbuf
  8065  003B74  2040               	addwfc	(otoa@i+1)^0,w,c
  8066  003B76  6EDA               	movwf	fsr2h,c
  8067  003B78  5033               	movf	otoa@t^0,w,c
  8068  003B7A  0F30               	addlw	48
  8069  003B7C  6EDF               	movwf	indf2,c
  8070  003B7E                     
  8071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8072  003B7E  0631               	decf	otoa@p^0,f,c
  8073  003B80  A0D8               	btfss	status,0,c
  8074  003B82  0632               	decf	(otoa@p+1)^0,f,c
  8075  003B84                     
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8077  003B84  0635               	decf	otoa@w^0,f,c
  8078  003B86  A0D8               	btfss	status,0,c
  8079  003B88  0636               	decf	(otoa@w+1)^0,f,c
  8080  003B8A                     
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8082  003B8A  C037  F029         	movff	otoa@n,??_otoa
  8083  003B8E  C038  F02A         	movff	otoa@n+1,??_otoa+1
  8084  003B92  C039  F02B         	movff	otoa@n+2,??_otoa+2
  8085  003B96  C03A  F02C         	movff	otoa@n+3,??_otoa+3
  8086  003B9A  C03B  F02D         	movff	otoa@n+4,??_otoa+4
  8087  003B9E  C03C  F02E         	movff	otoa@n+5,??_otoa+5
  8088  003BA2  C03D  F02F         	movff	otoa@n+6,??_otoa+6
  8089  003BA6  C03E  F030         	movff	otoa@n+7,??_otoa+7
  8090  003BAA  0E04               	movlw	4
  8091  003BAC  EFE1  F01D         	goto	u10990
  8092  003BB0                     u10995:
  8093  003BB0  90D8               	bcf	status,0,c
  8094  003BB2  3230               	rrcf	(??_otoa+7)^0,f,c
  8095  003BB4  322F               	rrcf	(??_otoa+6)^0,f,c
  8096  003BB6  322E               	rrcf	(??_otoa+5)^0,f,c
  8097  003BB8  322D               	rrcf	(??_otoa+4)^0,f,c
  8098  003BBA  322C               	rrcf	(??_otoa+3)^0,f,c
  8099  003BBC  322B               	rrcf	(??_otoa+2)^0,f,c
  8100  003BBE  322A               	rrcf	(??_otoa+1)^0,f,c
  8101  003BC0  3229               	rrcf	??_otoa^0,f,c
  8102  003BC2                     u10990:
  8103  003BC2  2EE8               	decfsz	wreg,f,c
  8104  003BC4  EFD8  F01D         	goto	u10995
  8105  003BC8  C029  F037         	movff	??_otoa,otoa@n
  8106  003BCC  C02A  F038         	movff	??_otoa+1,otoa@n+1
  8107  003BD0  C02B  F039         	movff	??_otoa+2,otoa@n+2
  8108  003BD4  C02C  F03A         	movff	??_otoa+3,otoa@n+3
  8109  003BD8  C02D  F03B         	movff	??_otoa+4,otoa@n+4
  8110  003BDC  C02E  F03C         	movff	??_otoa+5,otoa@n+5
  8111  003BE0  C02F  F03D         	movff	??_otoa+6,otoa@n+6
  8112  003BE4  C030  F03E         	movff	??_otoa+7,otoa@n+7
  8113  003BE8                     l8493:
  8114                           
  8115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8116  003BE8  BE40               	btfsc	(otoa@i+1)^0,7,c
  8117  003BEA  EFFF  F01D         	goto	u11001
  8118  003BEE  5040               	movf	(otoa@i+1)^0,w,c
  8119  003BF0  E108               	bnz	u11000
  8120  003BF2  043F               	decf	otoa@i^0,w,c
  8121  003BF4  A0D8               	btfss	status,0,c
  8122  003BF6  EFFF  F01D         	goto	u11001
  8123  003BFA  EF01  F01E         	goto	u11000
  8124  003BFE                     u11001:
  8125  003BFE  EF32  F01E         	goto	l661
  8126  003C02                     u11000:
  8127  003C02  5037               	movf	otoa@n^0,w,c
  8128  003C04  1038               	iorwf	(otoa@n+1)^0,w,c
  8129  003C06  1039               	iorwf	(otoa@n+2)^0,w,c
  8130  003C08  103A               	iorwf	(otoa@n+3)^0,w,c
  8131  003C0A  103B               	iorwf	(otoa@n+4)^0,w,c
  8132  003C0C  103C               	iorwf	(otoa@n+5)^0,w,c
  8133  003C0E  103D               	iorwf	(otoa@n+6)^0,w,c
  8134  003C10  103E               	iorwf	(otoa@n+7)^0,w,c
  8135  003C12  A4D8               	btfss	status,2,c
  8136  003C14  EF0E  F01E         	goto	u11011
  8137  003C18  EF10  F01E         	goto	u11010
  8138  003C1C                     u11011:
  8139  003C1C  EFAF  F01D         	goto	l8481
  8140  003C20                     u11010:
  8141  003C20  BE32               	btfsc	(otoa@p+1)^0,7,c
  8142  003C22  EF1D  F01E         	goto	u11020
  8143  003C26  5032               	movf	(otoa@p+1)^0,w,c
  8144  003C28  E106               	bnz	u11021
  8145  003C2A  0431               	decf	otoa@p^0,w,c
  8146  003C2C  B0D8               	btfsc	status,0,c
  8147  003C2E  EF1B  F01E         	goto	u11021
  8148  003C32  EF1D  F01E         	goto	u11020
  8149  003C36                     u11021:
  8150  003C36  EFAF  F01D         	goto	l8481
  8151  003C3A                     u11020:
  8152  003C3A  BE36               	btfsc	(otoa@w+1)^0,7,c
  8153  003C3C  EF28  F01E         	goto	u11031
  8154  003C40  5036               	movf	(otoa@w+1)^0,w,c
  8155  003C42  E108               	bnz	u11030
  8156  003C44  0435               	decf	otoa@w^0,w,c
  8157  003C46  A0D8               	btfss	status,0,c
  8158  003C48  EF28  F01E         	goto	u11031
  8159  003C4C  EF2A  F01E         	goto	u11030
  8160  003C50                     u11031:
  8161  003C50  EF32  F01E         	goto	l661
  8162  003C54                     u11030:
  8163  003C54  0100               	movlb	0	; () banked
  8164  003C56  B3EE               	btfsc	_flags& (0+255),1,b
  8165  003C58  EF30  F01E         	goto	u11041
  8166  003C5C  EF32  F01E         	goto	u11040
  8167  003C60                     u11041:
  8168  003C60  EFAF  F01D         	goto	l8481
  8169  003C64                     u11040:
  8170  003C64                     l661:
  8171                           
  8172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8173  003C64  0100               	movlb	0	; () banked
  8174  003C66  A9EE               	btfss	_flags& (0+255),4,b
  8175  003C68  EF38  F01E         	goto	u11051
  8176  003C6C  EF3A  F01E         	goto	u11050
  8177  003C70                     u11051:
  8178  003C70  EF51  F01E         	goto	l8511
  8179  003C74                     u11050:
  8180  003C74                     
  8181                           ; BSR set to: 0
  8182  003C74  5033               	movf	otoa@t^0,w,c
  8183  003C76  1034               	iorwf	(otoa@t+1)^0,w,c
  8184  003C78  B4D8               	btfsc	status,2,c
  8185  003C7A  EF41  F01E         	goto	u11061
  8186  003C7E  EF43  F01E         	goto	u11060
  8187  003C82                     u11061:
  8188  003C82  EF51  F01E         	goto	l8511
  8189  003C86                     u11060:
  8190  003C86                     
  8191                           ; BSR set to: 0
  8192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8193  003C86  063F               	decf	otoa@i^0,f,c
  8194  003C88  A0D8               	btfss	status,0,c
  8195  003C8A  0640               	decf	(otoa@i+1)^0,f,c
  8196  003C8C                     
  8197                           ; BSR set to: 0
  8198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8199  003C8C  0E64               	movlw	low _dbuf
  8200  003C8E  243F               	addwf	otoa@i^0,w,c
  8201  003C90  6ED9               	movwf	fsr2l,c
  8202  003C92  0E01               	movlw	high _dbuf
  8203  003C94  2040               	addwfc	(otoa@i+1)^0,w,c
  8204  003C96  6EDA               	movwf	fsr2h,c
  8205  003C98  0E30               	movlw	48
  8206  003C9A  6EDF               	movwf	indf2,c
  8207  003C9C                     
  8208                           ; BSR set to: 0
  8209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8210  003C9C  0635               	decf	otoa@w^0,f,c
  8211  003C9E  A0D8               	btfss	status,0,c
  8212  003CA0  0636               	decf	(otoa@w+1)^0,f,c
  8213  003CA2                     l8511:
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8217  003CA2  C01F  F014         	movff	otoa@fp,pad@fp
  8218  003CA6  C020  F015         	movff	otoa@fp+1,pad@fp+1
  8219  003CAA  0E64               	movlw	low _dbuf
  8220  003CAC  243F               	addwf	otoa@i^0,w,c
  8221  003CAE  6E16               	movwf	pad@buf^0,c
  8222  003CB0  0E01               	movlw	high _dbuf
  8223  003CB2  2040               	addwfc	(otoa@i+1)^0,w,c
  8224  003CB4  6E17               	movwf	(pad@buf+1)^0,c
  8225  003CB6  C035  F018         	movff	otoa@w,pad@p
  8226  003CBA  C036  F019         	movff	otoa@w+1,pad@p+1
  8227  003CBE  EC42  F028         	call	_pad	;wreg free
  8228  003CC2  C014  F01F         	movff	?_pad,?_otoa
  8229  003CC6  C015  F020         	movff	?_pad+1,?_otoa+1
  8230  003CCA  0012               	return		;funcret
  8231  003CCC                     __end_of_otoa:
  8232                           	opt callstack 0
  8233                           
  8234 ;; *************** function _efgtoa *****************
  8235 ;; Defined at:
  8236 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  8239 ;;		 -> vsnprintf@f(6), 
  8240 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  8241 ;;  c               1   60[COMRAM] unsigned char 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  u               4   52[BANK0 ] unsigned char 
  8244 ;;  g               4   44[BANK0 ] unsigned char 
  8245 ;;  l               4   38[BANK0 ] unsigned char 
  8246 ;;  h               4   34[BANK0 ] unsigned char 
  8247 ;;  ou              4    0[BANK0 ] unsigned char 
  8248 ;;  n               2   50[BANK0 ] int 
  8249 ;;  e               2   48[BANK0 ] int 
  8250 ;;  i               2   42[BANK0 ] int 
  8251 ;;  w               2   31[BANK0 ] int 
  8252 ;;  p               2   28[BANK0 ] int 
  8253 ;;  sign            2   26[BANK0 ] int 
  8254 ;;  d               2   24[BANK0 ] int 
  8255 ;;  ne              2   22[BANK0 ] int 
  8256 ;;  m               2   20[BANK0 ] int 
  8257 ;;  pp              2   18[BANK0 ] int 
  8258 ;;  t               2   16[BANK0 ] int 
  8259 ;;  mode            1   33[BANK0 ] unsigned char 
  8260 ;;  nmode           1   30[BANK0 ] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  2   54[COMRAM] int 
  8263 ;; Registers used:
  8264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8270 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8271 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8273 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8274 ;;Total ram usage:       68 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    8
  8277 ;; This function calls:
  8278 ;;		___awdiv
  8279 ;;		___awmod
  8280 ;;		___fladd
  8281 ;;		___fldiv
  8282 ;;		___fleq
  8283 ;;		___flge
  8284 ;;		___flmul
  8285 ;;		___flneg
  8286 ;;		___flsub
  8287 ;;		___fltol
  8288 ;;		___fpclassifyf
  8289 ;;		_floorf
  8290 ;;		_isupper
  8291 ;;		_pad
  8292 ;;		_strcpy
  8293 ;;		_tolower
  8294 ;; This function is called by:
  8295 ;;		_vfpfcnvrt
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text15
  8300  00154A                     __ptext15:
  8301                           	opt callstack 0
  8302  00154A                     _efgtoa:
  8303                           	opt callstack 18
  8304  00154A                     
  8305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8306  00154A  0E00               	movlw	0
  8307  00154C  0100               	movlb	0	; () banked
  8308  00154E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8309  001550  0E00               	movlw	0
  8310  001552  6F7A               	movwf	efgtoa@sign& (0+255),b
  8311  001554                     
  8312                           ; BSR set to: 0
  8313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8314  001554  C039  F08C         	movff	efgtoa@f,efgtoa@g
  8315  001558  C03A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  8316  00155C  C03B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  8317  001560  C03C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  8318  001564                     
  8319                           ; BSR set to: 0
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8321  001564  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8322  001566  EFB9  F00A         	goto	u10450
  8323  00156A  EFB7  F00A         	goto	u10451
  8324  00156E                     u10451:
  8325  00156E  EFCF  F00A         	goto	l8179
  8326  001572                     u10450:
  8327  001572                     
  8328                           ; BSR set to: 0
  8329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8330  001572  0E00               	movlw	0
  8331  001574  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8332  001576  0E01               	movlw	1
  8333  001578  6F7A               	movwf	efgtoa@sign& (0+255),b
  8334  00157A                     
  8335                           ; BSR set to: 0
  8336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8337  00157A  C08C  F004         	movff	efgtoa@g,___flneg@f1
  8338  00157E  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  8339  001582  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  8340  001586  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  8341  00158A  ECEB  F02C         	call	___flneg	;wreg free
  8342  00158E  C004  F08C         	movff	?___flneg,efgtoa@g
  8343  001592  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  8344  001596  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  8345  00159A  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  8346  00159E                     l8179:
  8347                           
  8348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8349  00159E  0E00               	movlw	0
  8350  0015A0  0100               	movlb	0	; () banked
  8351  0015A2  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  8352  0015A4  0E00               	movlw	0
  8353  0015A6  6F92               	movwf	efgtoa@n& (0+255),b
  8354  0015A8                     
  8355                           ; BSR set to: 0
  8356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8357  0015A8  C0EC  F07F         	movff	_width,efgtoa@w
  8358  0015AC  C0ED  F080         	movff	_width+1,efgtoa@w+1
  8359  0015B0                     
  8360                           ; BSR set to: 0
  8361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8362  0015B0  517A               	movf	efgtoa@sign& (0+255),w,b
  8363  0015B2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8364  0015B4  A4D8               	btfss	status,2,c
  8365  0015B6  EFDF  F00A         	goto	u10461
  8366  0015BA  EFE1  F00A         	goto	u10460
  8367  0015BE                     u10461:
  8368  0015BE  EFE8  F00A         	goto	l8187
  8369  0015C2                     u10460:
  8370  0015C2                     
  8371                           ; BSR set to: 0
  8372  0015C2  A5EE               	btfss	_flags& (0+255),2,b
  8373  0015C4  EFE6  F00A         	goto	u10471
  8374  0015C8  EFE8  F00A         	goto	u10470
  8375  0015CC                     u10471:
  8376  0015CC  EF02  F00B         	goto	l8199
  8377  0015D0                     u10470:
  8378  0015D0                     l8187:
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8382  0015D0  517A               	movf	efgtoa@sign& (0+255),w,b
  8383  0015D2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8384  0015D4  A4D8               	btfss	status,2,c
  8385  0015D6  EFEF  F00A         	goto	u10481
  8386  0015DA  EFF1  F00A         	goto	u10480
  8387  0015DE                     u10481:
  8388  0015DE  EFF7  F00A         	goto	l8191
  8389  0015E2                     u10480:
  8390  0015E2                     
  8391                           ; BSR set to: 0
  8392  0015E2  0E00               	movlw	0
  8393  0015E4  6F65               	movwf	(_efgtoa$1394+1)& (0+255),b
  8394  0015E6  0E2B               	movlw	43
  8395  0015E8  6F64               	movwf	_efgtoa$1394& (0+255),b
  8396  0015EA  EFFB  F00A         	goto	l8193
  8397  0015EE                     l8191:
  8398                           
  8399                           ; BSR set to: 0
  8400  0015EE  0E00               	movlw	0
  8401  0015F0  6F65               	movwf	(_efgtoa$1394+1)& (0+255),b
  8402  0015F2  0E2D               	movlw	45
  8403  0015F4  6F64               	movwf	_efgtoa$1394& (0+255),b
  8404  0015F6                     l8193:
  8405                           
  8406                           ; BSR set to: 0
  8407  0015F6  C064  F164         	movff	_efgtoa$1394,_dbuf
  8408  0015FA                     
  8409                           ; BSR set to: 0
  8410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8411  0015FA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  8412  0015FC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  8413  0015FE                     
  8414                           ; BSR set to: 0
  8415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8416  0015FE  077F               	decf	efgtoa@w& (0+255),f,b
  8417  001600  A0D8               	btfss	status,0,c
  8418  001602  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  8419  001604                     l8199:
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8423  001604  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  8424  001608  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8425  00160C  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8426  001610  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8427  001614  EC7E  F026         	call	___fpclassifyf	;wreg free
  8428  001618  0404               	decf	?___fpclassifyf^0,w,c
  8429  00161A  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8430  00161C  A4D8               	btfss	status,2,c
  8431  00161E  EF13  F00B         	goto	u10491
  8432  001622  EF15  F00B         	goto	u10490
  8433  001626                     u10491:
  8434  001626  EF6C  F00B         	goto	l8217
  8435  00162A                     u10490:
  8436  00162A  0EBF               	movlw	191
  8437  00162C  6E3E               	movwf	??_efgtoa^0,c
  8438  00162E  0EFF               	movlw	255
  8439  001630  6E3F               	movwf	(??_efgtoa+1)^0,c
  8440  001632  503D               	movf	efgtoa@c^0,w,c
  8441  001634  6E40               	movwf	(??_efgtoa+2)^0,c
  8442  001636  6A41               	clrf	(??_efgtoa+3)^0,c
  8443  001638  503E               	movf	??_efgtoa^0,w,c
  8444  00163A  2640               	addwf	(??_efgtoa+2)^0,f,c
  8445  00163C  503F               	movf	(??_efgtoa+1)^0,w,c
  8446  00163E  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8447  001640  5041               	movf	(??_efgtoa+3)^0,w,c
  8448  001642  E10A               	bnz	u10500
  8449  001644  0E1A               	movlw	26
  8450  001646  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8451  001648  A0D8               	btfss	status,0,c
  8452  00164A  EF29  F00B         	goto	u10501
  8453  00164E  EF2C  F00B         	goto	u10500
  8454  001652                     u10501:
  8455  001652  0E01               	movlw	1
  8456  001654  EF2D  F00B         	goto	u10510
  8457  001658                     u10500:
  8458  001658  0E00               	movlw	0
  8459  00165A                     u10510:
  8460  00165A  0100               	movlb	0	; () banked
  8461  00165C  6F66               	movwf	_efgtoa$1395& (0+255),b
  8462  00165E  6B67               	clrf	(_efgtoa$1395+1)& (0+255),b
  8463  001660                     
  8464                           ; BSR set to: 0
  8465  001660  5166               	movf	_efgtoa$1395& (0+255),w,b
  8466  001662  1167               	iorwf	(_efgtoa$1395+1)& (0+255),w,b
  8467  001664  B4D8               	btfsc	status,2,c
  8468  001666  EF37  F00B         	goto	u10521
  8469  00166A  EF39  F00B         	goto	u10520
  8470  00166E                     u10521:
  8471  00166E  EF47  F00B         	goto	l8209
  8472  001672                     u10520:
  8473  001672                     
  8474                           ; BSR set to: 0
  8475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8476  001672  0E64               	movlw	low _dbuf
  8477  001674  2592               	addwf	efgtoa@n& (0+255),w,b
  8478  001676  6E04               	movwf	strcpy@dest^0,c
  8479  001678  0E01               	movlw	high _dbuf
  8480  00167A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8481  00167C  6E05               	movwf	(strcpy@dest+1)^0,c
  8482  00167E  0EBA               	movlw	low STR_4
  8483  001680  6E06               	movwf	strcpy@src^0,c
  8484  001682  0EFF               	movlw	high STR_4
  8485  001684  6E07               	movwf	(strcpy@src+1)^0,c
  8486  001686  ECDE  F02A         	call	_strcpy	;wreg free
  8487                           
  8488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8489  00168A  EF53  F00B         	goto	l8211
  8490  00168E                     l8209:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8494  00168E  0E64               	movlw	low _dbuf
  8495  001690  2592               	addwf	efgtoa@n& (0+255),w,b
  8496  001692  6E04               	movwf	strcpy@dest^0,c
  8497  001694  0E01               	movlw	high _dbuf
  8498  001696  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8499  001698  6E05               	movwf	(strcpy@dest+1)^0,c
  8500  00169A  0ECA               	movlw	low STR_5
  8501  00169C  6E06               	movwf	strcpy@src^0,c
  8502  00169E  0EFF               	movlw	high STR_5
  8503  0016A0  6E07               	movwf	(strcpy@src+1)^0,c
  8504  0016A2  ECDE  F02A         	call	_strcpy	;wreg free
  8505  0016A6                     l8211:
  8506                           
  8507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8508  0016A6  0100               	movlb	0	; () banked
  8509  0016A8  0EFD               	movlw	253
  8510  0016AA  277F               	addwf	efgtoa@w& (0+255),f,b
  8511  0016AC  0EFF               	movlw	255
  8512  0016AE  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8513  0016B0                     l8213:
  8514                           
  8515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8516  0016B0  C037  F014         	movff	efgtoa@fp,pad@fp
  8517  0016B4  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  8518  0016B8  0E64               	movlw	low _dbuf
  8519  0016BA  6E16               	movwf	pad@buf^0,c
  8520  0016BC  0E01               	movlw	high _dbuf
  8521  0016BE  6E17               	movwf	(pad@buf+1)^0,c
  8522  0016C0  C07F  F018         	movff	efgtoa@w,pad@p
  8523  0016C4  C080  F019         	movff	efgtoa@w+1,pad@p+1
  8524  0016C8  EC42  F028         	call	_pad	;wreg free
  8525  0016CC  C014  F037         	movff	?_pad,?_efgtoa
  8526  0016D0  C015  F038         	movff	?_pad+1,?_efgtoa+1
  8527  0016D4  EF7C  F010         	goto	l574
  8528  0016D8                     l8217:
  8529                           
  8530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8531  0016D8  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  8532  0016DC  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8533  0016E0  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8534  0016E4  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8535  0016E8  EC7E  F026         	call	___fpclassifyf	;wreg free
  8536  0016EC  5004               	movf	?___fpclassifyf^0,w,c
  8537  0016EE  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8538  0016F0  A4D8               	btfss	status,2,c
  8539  0016F2  EF7D  F00B         	goto	u10531
  8540  0016F6  EF7F  F00B         	goto	u10530
  8541  0016FA                     u10531:
  8542  0016FA  EFBF  F00B         	goto	l8235
  8543  0016FE                     u10530:
  8544  0016FE  0EBF               	movlw	191
  8545  001700  6E3E               	movwf	??_efgtoa^0,c
  8546  001702  0EFF               	movlw	255
  8547  001704  6E3F               	movwf	(??_efgtoa+1)^0,c
  8548  001706  503D               	movf	efgtoa@c^0,w,c
  8549  001708  6E40               	movwf	(??_efgtoa+2)^0,c
  8550  00170A  6A41               	clrf	(??_efgtoa+3)^0,c
  8551  00170C  503E               	movf	??_efgtoa^0,w,c
  8552  00170E  2640               	addwf	(??_efgtoa+2)^0,f,c
  8553  001710  503F               	movf	(??_efgtoa+1)^0,w,c
  8554  001712  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8555  001714  5041               	movf	(??_efgtoa+3)^0,w,c
  8556  001716  E10A               	bnz	u10540
  8557  001718  0E1A               	movlw	26
  8558  00171A  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8559  00171C  A0D8               	btfss	status,0,c
  8560  00171E  EF93  F00B         	goto	u10541
  8561  001722  EF96  F00B         	goto	u10540
  8562  001726                     u10541:
  8563  001726  0E01               	movlw	1
  8564  001728  EF97  F00B         	goto	u10550
  8565  00172C                     u10540:
  8566  00172C  0E00               	movlw	0
  8567  00172E                     u10550:
  8568  00172E  0100               	movlb	0	; () banked
  8569  001730  6F68               	movwf	_efgtoa$1399& (0+255),b
  8570  001732  6B69               	clrf	(_efgtoa$1399+1)& (0+255),b
  8571  001734                     
  8572                           ; BSR set to: 0
  8573  001734  5168               	movf	_efgtoa$1399& (0+255),w,b
  8574  001736  1169               	iorwf	(_efgtoa$1399+1)& (0+255),w,b
  8575  001738  B4D8               	btfsc	status,2,c
  8576  00173A  EFA1  F00B         	goto	u10561
  8577  00173E  EFA3  F00B         	goto	u10560
  8578  001742                     u10561:
  8579  001742  EFB1  F00B         	goto	l8227
  8580  001746                     u10560:
  8581  001746                     
  8582                           ; BSR set to: 0
  8583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8584  001746  0E64               	movlw	low _dbuf
  8585  001748  2592               	addwf	efgtoa@n& (0+255),w,b
  8586  00174A  6E04               	movwf	strcpy@dest^0,c
  8587  00174C  0E01               	movlw	high _dbuf
  8588  00174E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8589  001750  6E05               	movwf	(strcpy@dest+1)^0,c
  8590  001752  0EBE               	movlw	low STR_8
  8591  001754  6E06               	movwf	strcpy@src^0,c
  8592  001756  0EFF               	movlw	high STR_8
  8593  001758  6E07               	movwf	(strcpy@src+1)^0,c
  8594  00175A  ECDE  F02A         	call	_strcpy	;wreg free
  8595                           
  8596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8597  00175E  EF53  F00B         	goto	l8211
  8598  001762                     l8227:
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8602  001762  0E64               	movlw	low _dbuf
  8603  001764  2592               	addwf	efgtoa@n& (0+255),w,b
  8604  001766  6E04               	movwf	strcpy@dest^0,c
  8605  001768  0E01               	movlw	high _dbuf
  8606  00176A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8607  00176C  6E05               	movwf	(strcpy@dest+1)^0,c
  8608  00176E  0ED2               	movlw	low STR_9
  8609  001770  6E06               	movwf	strcpy@src^0,c
  8610  001772  0EFF               	movlw	high STR_9
  8611  001774  6E07               	movwf	(strcpy@src+1)^0,c
  8612  001776  ECDE  F02A         	call	_strcpy	;wreg free
  8613  00177A  EF53  F00B         	goto	l8211
  8614  00177E                     l8235:
  8615                           
  8616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8617  00177E  0E00               	movlw	0
  8618  001780  0100               	movlb	0	; () banked
  8619  001782  6F94               	movwf	efgtoa@u& (0+255),b
  8620  001784  0E00               	movlw	0
  8621  001786  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  8622  001788  0E80               	movlw	128
  8623  00178A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  8624  00178C  0E3F               	movlw	63
  8625  00178E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  8626                           
  8627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8628  001790  0E00               	movlw	0
  8629  001792  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  8630  001794  0E00               	movlw	0
  8631  001796  6F90               	movwf	efgtoa@e& (0+255),b
  8632  001798                     
  8633                           ; BSR set to: 0
  8634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8635  001798  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  8636  00179C  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  8637  0017A0  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  8638  0017A4  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  8639  0017A8  0E00               	movlw	0
  8640  0017AA  6E08               	movwf	___fleq@ff2^0,c
  8641  0017AC  0E00               	movlw	0
  8642  0017AE  6E09               	movwf	(___fleq@ff2+1)^0,c
  8643  0017B0  0E00               	movlw	0
  8644  0017B2  6E0A               	movwf	(___fleq@ff2+2)^0,c
  8645  0017B4  0E00               	movlw	0
  8646  0017B6  6E0B               	movwf	(___fleq@ff2+3)^0,c
  8647  0017B8  ECB7  F029         	call	___fleq	;wreg free
  8648  0017BC  B0D8               	btfsc	status,0,c
  8649  0017BE  EFE3  F00B         	goto	u10571
  8650  0017C2  EFE5  F00B         	goto	u10570
  8651  0017C6                     u10571:
  8652  0017C6  EF68  F00C         	goto	l8253
  8653  0017CA                     u10570:
  8654  0017CA  EF04  F00C         	goto	l8245
  8655  0017CE                     l8241:
  8656                           
  8657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8658  0017CE  C094  F012         	movff	efgtoa@u,___flmul@b
  8659  0017D2  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  8660  0017D6  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  8661  0017DA  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  8662  0017DE  0E00               	movlw	0
  8663  0017E0  6E16               	movwf	___flmul@a^0,c
  8664  0017E2  0E00               	movlw	0
  8665  0017E4  6E17               	movwf	(___flmul@a+1)^0,c
  8666  0017E6  0E20               	movlw	32
  8667  0017E8  6E18               	movwf	(___flmul@a+2)^0,c
  8668  0017EA  0E41               	movlw	65
  8669  0017EC  6E19               	movwf	(___flmul@a+3)^0,c
  8670  0017EE  ECDD  F012         	call	___flmul	;wreg free
  8671  0017F2  C012  F094         	movff	?___flmul,efgtoa@u
  8672  0017F6  C013  F095         	movff	?___flmul+1,efgtoa@u+1
  8673  0017FA  C014  F096         	movff	?___flmul+2,efgtoa@u+2
  8674  0017FE  C015  F097         	movff	?___flmul+3,efgtoa@u+3
  8675  001802                     
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8677  001802  0100               	movlb	0	; () banked
  8678  001804  4B90               	infsnz	efgtoa@e& (0+255),f,b
  8679  001806  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  8680  001808                     l8245:
  8681                           
  8682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8683  001808  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  8684  00180C  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  8685  001810  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  8686  001814  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  8687  001818  0E00               	movlw	0
  8688  00181A  6E16               	movwf	___flmul@a^0,c
  8689  00181C  0E00               	movlw	0
  8690  00181E  6E17               	movwf	(___flmul@a+1)^0,c
  8691  001820  0E20               	movlw	32
  8692  001822  6E18               	movwf	(___flmul@a+2)^0,c
  8693  001824  0E41               	movlw	65
  8694  001826  6E19               	movwf	(___flmul@a+3)^0,c
  8695  001828  C094  F012         	movff	efgtoa@u,___flmul@b
  8696  00182C  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  8697  001830  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  8698  001834  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  8699  001838  ECDD  F012         	call	___flmul	;wreg free
  8700  00183C  C012  F02F         	movff	?___flmul,___flge@ff2
  8701  001840  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  8702  001844  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  8703  001848  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  8704  00184C  ECFC  F025         	call	___flge	;wreg free
  8705  001850  B0D8               	btfsc	status,0,c
  8706  001852  EF2D  F00C         	goto	u10581
  8707  001856  EF2F  F00C         	goto	u10580
  8708  00185A                     u10581:
  8709  00185A  EFE7  F00B         	goto	l8241
  8710  00185E                     u10580:
  8711  00185E  EF4F  F00C         	goto	l8251
  8712  001862                     l8247:
  8713                           
  8714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8715  001862  C094  F004         	movff	efgtoa@u,___fldiv@b
  8716  001866  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  8717  00186A  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  8718  00186E  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  8719  001872  0E00               	movlw	0
  8720  001874  6E08               	movwf	___fldiv@a^0,c
  8721  001876  0E00               	movlw	0
  8722  001878  6E09               	movwf	(___fldiv@a+1)^0,c
  8723  00187A  0E20               	movlw	32
  8724  00187C  6E0A               	movwf	(___fldiv@a+2)^0,c
  8725  00187E  0E41               	movlw	65
  8726  001880  6E0B               	movwf	(___fldiv@a+3)^0,c
  8727  001882  ECF2  F014         	call	___fldiv	;wreg free
  8728  001886  C004  F094         	movff	?___fldiv,efgtoa@u
  8729  00188A  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  8730  00188E  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  8731  001892  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  8732  001896                     
  8733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  8734  001896  0100               	movlb	0	; () banked
  8735  001898  0790               	decf	efgtoa@e& (0+255),f,b
  8736  00189A  A0D8               	btfss	status,0,c
  8737  00189C  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  8738  00189E                     l8251:
  8739                           
  8740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  8741  00189E  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  8742  0018A2  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  8743  0018A6  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  8744  0018AA  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  8745  0018AE  C094  F02F         	movff	efgtoa@u,___flge@ff2
  8746  0018B2  C095  F030         	movff	efgtoa@u+1,___flge@ff2+1
  8747  0018B6  C096  F031         	movff	efgtoa@u+2,___flge@ff2+2
  8748  0018BA  C097  F032         	movff	efgtoa@u+3,___flge@ff2+3
  8749  0018BE  ECFC  F025         	call	___flge	;wreg free
  8750  0018C2  A0D8               	btfss	status,0,c
  8751  0018C4  EF66  F00C         	goto	u10591
  8752  0018C8  EF68  F00C         	goto	u10590
  8753  0018CC                     u10591:
  8754  0018CC  EF31  F00C         	goto	l8247
  8755  0018D0                     u10590:
  8756  0018D0                     l8253:
  8757                           
  8758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  8759  0018D0  C03D  F00A         	movff	efgtoa@c,tolower@c
  8760  0018D4  6A0B               	clrf	(tolower@c+1)^0,c
  8761  0018D6  EC7F  F02A         	call	_tolower	;wreg free
  8762  0018DA  500A               	movf	?_tolower^0,w,c
  8763  0018DC  0100               	movlb	0	; () banked
  8764  0018DE  6F81               	movwf	efgtoa@mode& (0+255),b
  8765  0018E0                     
  8766                           ; BSR set to: 0
  8767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  8768  0018E0  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  8769  0018E4                     
  8770                           ; BSR set to: 0
  8771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  8772  0018E4  0E67               	movlw	103
  8773  0018E6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8774  0018E8  A4D8               	btfss	status,2,c
  8775  0018EA  EF79  F00C         	goto	u10601
  8776  0018EE  EF7B  F00C         	goto	u10600
  8777  0018F2                     u10601:
  8778  0018F2  EFA1  F00C         	goto	l8267
  8779  0018F6                     u10600:
  8780  0018F6                     
  8781                           ; BSR set to: 0
  8782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  8783  0018F6  5058               	movf	_prec^0,w,c
  8784  0018F8  1059               	iorwf	(_prec+1)^0,w,c
  8785  0018FA  A4D8               	btfss	status,2,c
  8786  0018FC  EF82  F00C         	goto	u10611
  8787  001900  EF84  F00C         	goto	u10610
  8788  001904                     u10611:
  8789  001904  EF88  F00C         	goto	l8263
  8790  001908                     u10610:
  8791  001908                     
  8792                           ; BSR set to: 0
  8793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  8794  001908  0E00               	movlw	0
  8795  00190A  6E59               	movwf	(_prec+1)^0,c
  8796  00190C  0E01               	movlw	1
  8797  00190E  6E58               	movwf	_prec^0,c
  8798  001910                     l8263:
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  8802  001910  BE59               	btfsc	(_prec+1)^0,7,c
  8803  001912  EF95  F00C         	goto	u10620
  8804  001916  5059               	movf	(_prec+1)^0,w,c
  8805  001918  E106               	bnz	u10621
  8806  00191A  0458               	decf	_prec^0,w,c
  8807  00191C  B0D8               	btfsc	status,0,c
  8808  00191E  EF93  F00C         	goto	u10621
  8809  001922  EF95  F00C         	goto	u10620
  8810  001926                     u10621:
  8811  001926  EF9B  F00C         	goto	l592
  8812  00192A                     u10620:
  8813  00192A                     l8265:
  8814                           
  8815                           ; BSR set to: 0
  8816  00192A  0E00               	movlw	0
  8817  00192C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  8818  00192E  0E06               	movlw	6
  8819  001930  6F7C               	movwf	efgtoa@p& (0+255),b
  8820  001932  EFAA  F00C         	goto	l8273
  8821  001936                     l592:
  8822                           
  8823                           ; BSR set to: 0
  8824  001936  C058  F07C         	movff	_prec,efgtoa@p
  8825  00193A  C059  F07D         	movff	_prec+1,efgtoa@p+1
  8826  00193E  EFAA  F00C         	goto	l8273
  8827  001942                     l8267:
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  8831  001942  BE59               	btfsc	(_prec+1)^0,7,c
  8832  001944  EFA6  F00C         	goto	u10631
  8833  001948  EFA8  F00C         	goto	u10630
  8834  00194C                     u10631:
  8835  00194C  EF95  F00C         	goto	l8265
  8836  001950                     u10630:
  8837  001950  EF9B  F00C         	goto	l592
  8838  001954                     l8273:
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  8842  001954  0E67               	movlw	103
  8843  001956  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8844  001958  A4D8               	btfss	status,2,c
  8845  00195A  EFB1  F00C         	goto	u10641
  8846  00195E  EFB3  F00C         	goto	u10640
  8847  001962                     u10641:
  8848  001962  EFE2  F00C         	goto	l8283
  8849  001966                     u10640:
  8850  001966                     
  8851                           ; BSR set to: 0
  8852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  8853  001966  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  8854  001968  EFC1  F00C         	goto	u10650
  8855  00196C  0EFC               	movlw	252
  8856  00196E  5D90               	subwf	efgtoa@e& (0+255),w,b
  8857  001970  0EFF               	movlw	255
  8858  001972  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8859  001974  A0D8               	btfss	status,0,c
  8860  001976  EFBF  F00C         	goto	u10651
  8861  00197A  EFC1  F00C         	goto	u10650
  8862  00197E                     u10651:
  8863  00197E  EFE0  F00C         	goto	l8281
  8864  001982                     u10650:
  8865  001982                     
  8866                           ; BSR set to: 0
  8867  001982  0EFF               	movlw	255
  8868  001984  6E3E               	movwf	??_efgtoa^0,c
  8869  001986  0EFF               	movlw	255
  8870  001988  6E3F               	movwf	(??_efgtoa+1)^0,c
  8871  00198A  C07C  F040         	movff	efgtoa@p,??_efgtoa+2
  8872  00198E  C07D  F041         	movff	efgtoa@p+1,??_efgtoa+3
  8873  001992  503E               	movf	??_efgtoa^0,w,c
  8874  001994  2640               	addwf	(??_efgtoa+2)^0,f,c
  8875  001996  503F               	movf	(??_efgtoa+1)^0,w,c
  8876  001998  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8877  00199A  5190               	movf	efgtoa@e& (0+255),w,b
  8878  00199C  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8879  00199E  5041               	movf	(??_efgtoa+3)^0,w,c
  8880  0019A0  0A80               	xorlw	128
  8881  0019A2  6E42               	movwf	(??_efgtoa+4)^0,c
  8882  0019A4  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  8883  0019A6  0A80               	xorlw	128
  8884  0019A8  5842               	subwfb	(??_efgtoa+4)^0,w,c
  8885  0019AA  A0D8               	btfss	status,0,c
  8886  0019AC  EFDA  F00C         	goto	u10661
  8887  0019B0  EFDC  F00C         	goto	u10660
  8888  0019B4                     u10661:
  8889  0019B4  EFE0  F00C         	goto	l8281
  8890  0019B8                     u10660:
  8891  0019B8                     
  8892                           ; BSR set to: 0
  8893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  8894  0019B8  0E66               	movlw	102
  8895  0019BA  6F7E               	movwf	efgtoa@nmode& (0+255),b
  8896                           
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  8898  0019BC  EFE2  F00C         	goto	l8283
  8899  0019C0                     l8281:
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  8903  0019C0  0E65               	movlw	101
  8904  0019C2  6F7E               	movwf	efgtoa@nmode& (0+255),b
  8905  0019C4                     l8283:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  8909  0019C4  C07C  F074         	movff	efgtoa@p,efgtoa@m
  8910  0019C8  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  8911  0019CC                     
  8912                           ; BSR set to: 0
  8913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  8914  0019CC  0E67               	movlw	103
  8915  0019CE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8916  0019D0  A4D8               	btfss	status,2,c
  8917  0019D2  EFED  F00C         	goto	u10671
  8918  0019D6  EFEF  F00C         	goto	u10670
  8919  0019DA                     u10671:
  8920  0019DA  EFFF  F00C         	goto	l8291
  8921  0019DE                     u10670:
  8922  0019DE                     
  8923                           ; BSR set to: 0
  8924  0019DE  0E66               	movlw	102
  8925  0019E0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  8926  0019E2  A4D8               	btfss	status,2,c
  8927  0019E4  EFF6  F00C         	goto	u10681
  8928  0019E8  EFF8  F00C         	goto	u10680
  8929  0019EC                     u10681:
  8930  0019EC  EF01  F00D         	goto	l8293
  8931  0019F0                     u10680:
  8932  0019F0                     
  8933                           ; BSR set to: 0
  8934  0019F0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8935  0019F2  EFFF  F00C         	goto	u10690
  8936  0019F6  EFFD  F00C         	goto	u10691
  8937  0019FA                     u10691:
  8938  0019FA  EF01  F00D         	goto	l8293
  8939  0019FE                     u10690:
  8940  0019FE                     l8291:
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  8944  0019FE  4B74               	infsnz	efgtoa@m& (0+255),f,b
  8945  001A00  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  8946  001A02                     l8293:
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  8950  001A02  0E66               	movlw	102
  8951  001A04  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  8952  001A06  A4D8               	btfss	status,2,c
  8953  001A08  EF08  F00D         	goto	u10701
  8954  001A0C  EF0A  F00D         	goto	u10700
  8955  001A10                     u10701:
  8956  001A10  EF2A  F00D         	goto	l8303
  8957  001A14                     u10700:
  8958  001A14                     
  8959                           ; BSR set to: 0
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  8961  001A14  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8962  001A16  EF11  F00D         	goto	u10710
  8963  001A1A  EF0F  F00D         	goto	u10711
  8964  001A1E                     u10711:
  8965  001A1E  EF1D  F00D         	goto	l8299
  8966  001A22                     u10710:
  8967  001A22                     
  8968                           ; BSR set to: 0
  8969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  8970  001A22  0E00               	movlw	0
  8971  001A24  6F94               	movwf	efgtoa@u& (0+255),b
  8972  001A26  0E00               	movlw	0
  8973  001A28  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  8974  001A2A  0E80               	movlw	128
  8975  001A2C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  8976  001A2E  0E3F               	movlw	63
  8977  001A30  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  8978                           
  8979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  8980  001A32  0E00               	movlw	0
  8981  001A34  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  8982  001A36  0E00               	movlw	0
  8983  001A38  6F90               	movwf	efgtoa@e& (0+255),b
  8984  001A3A                     l8299:
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  8988  001A3A  0E67               	movlw	103
  8989  001A3C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8990  001A3E  B4D8               	btfsc	status,2,c
  8991  001A40  EF24  F00D         	goto	u10721
  8992  001A44  EF26  F00D         	goto	u10720
  8993  001A48                     u10721:
  8994  001A48  EF2A  F00D         	goto	l8303
  8995  001A4C                     u10720:
  8996  001A4C                     
  8997                           ; BSR set to: 0
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  8999  001A4C  5190               	movf	efgtoa@e& (0+255),w,b
  9000  001A4E  2774               	addwf	efgtoa@m& (0+255),f,b
  9001  001A50  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  9002  001A52  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9003  001A54                     l8303:
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9007  001A54  0E00               	movlw	0
  9008  001A56  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9009  001A58  0E00               	movlw	0
  9010  001A5A  6F8A               	movwf	efgtoa@i& (0+255),b
  9011  001A5C                     
  9012                           ; BSR set to: 0
  9013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9014  001A5C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  9015  001A60  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  9016  001A64  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  9017  001A68  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  9018  001A6C                     
  9019                           ; BSR set to: 0
  9020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9021  001A6C  C094  F060         	movff	efgtoa@u,efgtoa@ou
  9022  001A70  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  9023  001A74  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  9024  001A78  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  9025                           
  9026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9027  001A7C  EFBB  F00D         	goto	l8317
  9028  001A80                     l8309:
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9032  001A80  C082  F004         	movff	efgtoa@h,___fldiv@b
  9033  001A84  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  9034  001A88  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  9035  001A8C  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  9036  001A90  C094  F008         	movff	efgtoa@u,___fldiv@a
  9037  001A94  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  9038  001A98  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  9039  001A9C  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  9040  001AA0  ECF2  F014         	call	___fldiv	;wreg free
  9041  001AA4  C004  F01D         	movff	?___fldiv,floorf@x
  9042  001AA8  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  9043  001AAC  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  9044  001AB0  C007  F020         	movff	?___fldiv+3,floorf@x+3
  9045  001AB4  EC63  F01B         	call	_floorf	;wreg free
  9046  001AB8  C01D  F086         	movff	?_floorf,efgtoa@l
  9047  001ABC  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  9048  001AC0  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  9049  001AC4  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  9050                           
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9052  001AC8  C086  F004         	movff	efgtoa@l,___fltol@f1
  9053  001ACC  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9054  001AD0  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9055  001AD4  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9056  001AD8  EC79  F025         	call	___fltol	;wreg free
  9057  001ADC  C004  F078         	movff	?___fltol,efgtoa@d
  9058  001AE0  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  9059  001AE4                     
  9060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9061  001AE4  C082  F02B         	movff	efgtoa@h,___flsub@b
  9062  001AE8  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  9063  001AEC  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  9064  001AF0  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  9065  001AF4  C094  F016         	movff	efgtoa@u,___flmul@a
  9066  001AF8  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  9067  001AFC  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  9068  001B00  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  9069  001B04  C086  F012         	movff	efgtoa@l,___flmul@b
  9070  001B08  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  9071  001B0C  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  9072  001B10  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  9073  001B14  ECDD  F012         	call	___flmul	;wreg free
  9074  001B18  C012  F02F         	movff	?___flmul,___flsub@a
  9075  001B1C  C013  F030         	movff	?___flmul+1,___flsub@a+1
  9076  001B20  C014  F031         	movff	?___flmul+2,___flsub@a+2
  9077  001B24  C015  F032         	movff	?___flmul+3,___flsub@a+3
  9078  001B28  ECCF  F02B         	call	___flsub	;wreg free
  9079  001B2C  C02B  F082         	movff	?___flsub,efgtoa@h
  9080  001B30  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  9081  001B34  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  9082  001B38  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  9083  001B3C                     
  9084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9085  001B3C  C094  F004         	movff	efgtoa@u,___fldiv@b
  9086  001B40  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  9087  001B44  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  9088  001B48  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  9089  001B4C  0E00               	movlw	0
  9090  001B4E  6E08               	movwf	___fldiv@a^0,c
  9091  001B50  0E00               	movlw	0
  9092  001B52  6E09               	movwf	(___fldiv@a+1)^0,c
  9093  001B54  0E20               	movlw	32
  9094  001B56  6E0A               	movwf	(___fldiv@a+2)^0,c
  9095  001B58  0E41               	movlw	65
  9096  001B5A  6E0B               	movwf	(___fldiv@a+3)^0,c
  9097  001B5C  ECF2  F014         	call	___fldiv	;wreg free
  9098  001B60  C004  F094         	movff	?___fldiv,efgtoa@u
  9099  001B64  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  9100  001B68  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  9101  001B6C  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  9102  001B70                     
  9103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9104  001B70  0100               	movlb	0	; () banked
  9105  001B72  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9106  001B74  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9107  001B76                     l8317:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9111  001B76  5174               	movf	efgtoa@m& (0+255),w,b
  9112  001B78  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9113  001B7A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9114  001B7C  0A80               	xorlw	128
  9115  001B7E  6E3E               	movwf	??_efgtoa^0,c
  9116  001B80  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9117  001B82  0A80               	xorlw	128
  9118  001B84  583E               	subwfb	??_efgtoa^0,w,c
  9119  001B86  A0D8               	btfss	status,0,c
  9120  001B88  EFC8  F00D         	goto	u10731
  9121  001B8C  EFCA  F00D         	goto	u10730
  9122  001B90                     u10731:
  9123  001B90  EF40  F00D         	goto	l8309
  9124  001B94                     u10730:
  9125  001B94                     
  9126                           ; BSR set to: 0
  9127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9128  001B94  C094  F012         	movff	efgtoa@u,___flmul@b
  9129  001B98  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  9130  001B9C  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  9131  001BA0  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  9132  001BA4  0E00               	movlw	0
  9133  001BA6  6E16               	movwf	___flmul@a^0,c
  9134  001BA8  0E00               	movlw	0
  9135  001BAA  6E17               	movwf	(___flmul@a+1)^0,c
  9136  001BAC  0EA0               	movlw	160
  9137  001BAE  6E18               	movwf	(___flmul@a+2)^0,c
  9138  001BB0  0E40               	movlw	64
  9139  001BB2  6E19               	movwf	(___flmul@a+3)^0,c
  9140  001BB4  ECDD  F012         	call	___flmul	;wreg free
  9141  001BB8  C012  F086         	movff	?___flmul,efgtoa@l
  9142  001BBC  C013  F087         	movff	?___flmul+1,efgtoa@l+1
  9143  001BC0  C014  F088         	movff	?___flmul+2,efgtoa@l+2
  9144  001BC4  C015  F089         	movff	?___flmul+3,efgtoa@l+3
  9145  001BC8                     
  9146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9147  001BC8  C082  F02B         	movff	efgtoa@h,___flge@ff1
  9148  001BCC  C083  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  9149  001BD0  C084  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  9150  001BD4  C085  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  9151  001BD8  C086  F02F         	movff	efgtoa@l,___flge@ff2
  9152  001BDC  C087  F030         	movff	efgtoa@l+1,___flge@ff2+1
  9153  001BE0  C088  F031         	movff	efgtoa@l+2,___flge@ff2+2
  9154  001BE4  C089  F032         	movff	efgtoa@l+3,___flge@ff2+3
  9155  001BE8  ECFC  F025         	call	___flge	;wreg free
  9156  001BEC  B0D8               	btfsc	status,0,c
  9157  001BEE  EFFB  F00D         	goto	u10741
  9158  001BF2  EFFD  F00D         	goto	u10740
  9159  001BF6                     u10741:
  9160  001BF6  EF08  F00E         	goto	l8325
  9161  001BFA                     u10740:
  9162  001BFA                     
  9163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9164  001BFA  0E00               	movlw	0
  9165  001BFC  0100               	movlb	0	; () banked
  9166  001BFE  6F86               	movwf	efgtoa@l& (0+255),b
  9167  001C00  0E00               	movlw	0
  9168  001C02  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9169  001C04  0E00               	movlw	0
  9170  001C06  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9171  001C08  0E00               	movlw	0
  9172  001C0A  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9173                           
  9174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9175  001C0C  EF31  F00E         	goto	l8331
  9176  001C10                     l8325:
  9177                           
  9178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9179  001C10  C082  F004         	movff	efgtoa@h,___fleq@ff1
  9180  001C14  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  9181  001C18  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  9182  001C1C  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  9183  001C20  C086  F008         	movff	efgtoa@l,___fleq@ff2
  9184  001C24  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  9185  001C28  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  9186  001C2C  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  9187  001C30  ECB7  F029         	call	___fleq	;wreg free
  9188  001C34  A0D8               	btfss	status,0,c
  9189  001C36  EF1F  F00E         	goto	u10751
  9190  001C3A  EF21  F00E         	goto	u10750
  9191  001C3E                     u10751:
  9192  001C3E  EF31  F00E         	goto	l8331
  9193  001C42                     u10750:
  9194  001C42  0100               	movlb	0	; () banked
  9195  001C44  B178               	btfsc	efgtoa@d& (0+255),0,b
  9196  001C46  EF27  F00E         	goto	u10761
  9197  001C4A  EF29  F00E         	goto	u10760
  9198  001C4E                     u10761:
  9199  001C4E  EF31  F00E         	goto	l8331
  9200  001C52                     u10760:
  9201  001C52                     
  9202                           ; BSR set to: 0
  9203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9204  001C52  0E00               	movlw	0
  9205  001C54  6F86               	movwf	efgtoa@l& (0+255),b
  9206  001C56  0E00               	movlw	0
  9207  001C58  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9208  001C5A  0E00               	movlw	0
  9209  001C5C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9210  001C5E  0E00               	movlw	0
  9211  001C60  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9212  001C62                     l8331:
  9213                           
  9214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9215  001C62  C08C  F004         	movff	efgtoa@g,___fladd@b
  9216  001C66  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  9217  001C6A  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  9218  001C6E  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  9219  001C72  C086  F008         	movff	efgtoa@l,___fladd@a
  9220  001C76  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  9221  001C7A  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  9222  001C7E  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  9223  001C82  EC7D  F010         	call	___fladd	;wreg free
  9224  001C86  C004  F082         	movff	?___fladd,efgtoa@h
  9225  001C8A  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  9226  001C8E  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  9227  001C92  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  9228  001C96                     
  9229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9230  001C96  C060  F094         	movff	efgtoa@ou,efgtoa@u
  9231  001C9A  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  9232  001C9E  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  9233  001CA2  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  9234  001CA6                     
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9236  001CA6  0E65               	movlw	101
  9237  001CA8  0100               	movlb	0	; () banked
  9238  001CAA  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9239  001CAC  B4D8               	btfsc	status,2,c
  9240  001CAE  EF5B  F00E         	goto	u10771
  9241  001CB2  EF5D  F00E         	goto	u10770
  9242  001CB6                     u10771:
  9243  001CB6  EF63  F00E         	goto	l8339
  9244  001CBA                     u10770:
  9245  001CBA                     
  9246                           ; BSR set to: 0
  9247  001CBA  C090  F076         	movff	efgtoa@e,efgtoa@ne
  9248  001CBE  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  9249  001CC2  EF67  F00E         	goto	l618
  9250  001CC6                     l8339:
  9251                           
  9252                           ; BSR set to: 0
  9253  001CC6  0E00               	movlw	0
  9254  001CC8  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  9255  001CCA  0E00               	movlw	0
  9256  001CCC  6F76               	movwf	efgtoa@ne& (0+255),b
  9257  001CCE                     l618:
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9261  001CCE  0E00               	movlw	0
  9262  001CD0  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9263  001CD2  0E00               	movlw	0
  9264  001CD4  6F72               	movwf	efgtoa@pp& (0+255),b
  9265                           
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9267  001CD6  0E00               	movlw	0
  9268  001CD8  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  9269  001CDA  0E00               	movlw	0
  9270  001CDC  6F70               	movwf	efgtoa@t& (0+255),b
  9271                           
  9272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9273  001CDE  0E00               	movlw	0
  9274  001CE0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9275  001CE2  0E00               	movlw	0
  9276  001CE4  6F8A               	movwf	efgtoa@i& (0+255),b
  9277                           
  9278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9279  001CE6  EF62  F00F         	goto	l8389
  9280  001CEA                     l8341:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9284  001CEA  C082  F004         	movff	efgtoa@h,___fldiv@b
  9285  001CEE  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  9286  001CF2  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  9287  001CF6  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  9288  001CFA  C094  F008         	movff	efgtoa@u,___fldiv@a
  9289  001CFE  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  9290  001D02  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  9291  001D06  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  9292  001D0A  ECF2  F014         	call	___fldiv	;wreg free
  9293  001D0E  C004  F01D         	movff	?___fldiv,floorf@x
  9294  001D12  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  9295  001D16  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  9296  001D1A  C007  F020         	movff	?___fldiv+3,floorf@x+3
  9297  001D1E  EC63  F01B         	call	_floorf	;wreg free
  9298  001D22  C01D  F086         	movff	?_floorf,efgtoa@l
  9299  001D26  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  9300  001D2A  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  9301  001D2E  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  9302                           
  9303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9304  001D32  C086  F004         	movff	efgtoa@l,___fltol@f1
  9305  001D36  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9306  001D3A  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9307  001D3E  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9308  001D42  EC79  F025         	call	___fltol	;wreg free
  9309  001D46  C004  F078         	movff	?___fltol,efgtoa@d
  9310  001D4A  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  9311  001D4E                     
  9312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9313  001D4E  0100               	movlb	0	; () banked
  9314  001D50  B9EE               	btfsc	_flags& (0+255),4,b
  9315  001D52  EFAD  F00E         	goto	u10781
  9316  001D56  EFAF  F00E         	goto	u10780
  9317  001D5A                     u10781:
  9318  001D5A  EFCC  F00E         	goto	l8353
  9319  001D5E                     u10780:
  9320  001D5E                     
  9321                           ; BSR set to: 0
  9322  001D5E  5178               	movf	efgtoa@d& (0+255),w,b
  9323  001D60  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9324  001D62  A4D8               	btfss	status,2,c
  9325  001D64  EFB6  F00E         	goto	u10791
  9326  001D68  EFB8  F00E         	goto	u10790
  9327  001D6C                     u10791:
  9328  001D6C  EFCC  F00E         	goto	l8353
  9329  001D70                     u10790:
  9330  001D70                     
  9331                           ; BSR set to: 0
  9332  001D70  0E67               	movlw	103
  9333  001D72  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9334  001D74  A4D8               	btfss	status,2,c
  9335  001D76  EFBF  F00E         	goto	u10801
  9336  001D7A  EFC1  F00E         	goto	u10800
  9337  001D7E                     u10801:
  9338  001D7E  EFCC  F00E         	goto	l8353
  9339  001D82                     u10800:
  9340  001D82                     
  9341                           ; BSR set to: 0
  9342  001D82  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9343  001D84  EFC8  F00E         	goto	u10810
  9344  001D88  EFC6  F00E         	goto	u10811
  9345  001D8C                     u10811:
  9346  001D8C  EFCC  F00E         	goto	l8353
  9347  001D90                     u10810:
  9348  001D90                     
  9349                           ; BSR set to: 0
  9350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9351  001D90  4B70               	infsnz	efgtoa@t& (0+255),f,b
  9352  001D92  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  9353                           
  9354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9355  001D94  EF16  F00F         	goto	l8381
  9356  001D98                     l8353:
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9360  001D98  5172               	movf	efgtoa@pp& (0+255),w,b
  9361  001D9A  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9362  001D9C  A4D8               	btfss	status,2,c
  9363  001D9E  EFD3  F00E         	goto	u10821
  9364  001DA2  EFD5  F00E         	goto	u10820
  9365  001DA6                     u10821:
  9366  001DA6  EFFF  F00E         	goto	l8373
  9367  001DAA                     u10820:
  9368  001DAA                     
  9369                           ; BSR set to: 0
  9370  001DAA  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9371  001DAC  EFDC  F00E         	goto	u10830
  9372  001DB0  EFDA  F00E         	goto	u10831
  9373  001DB4                     u10831:
  9374  001DB4  EFFF  F00E         	goto	l8373
  9375  001DB8                     u10830:
  9376  001DB8                     
  9377                           ; BSR set to: 0
  9378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9379  001DB8  0E64               	movlw	low _dbuf
  9380  001DBA  2592               	addwf	efgtoa@n& (0+255),w,b
  9381  001DBC  6ED9               	movwf	fsr2l,c
  9382  001DBE  0E01               	movlw	high _dbuf
  9383  001DC0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9384  001DC2  6EDA               	movwf	fsr2h,c
  9385  001DC4  0E2E               	movlw	46
  9386  001DC6  6EDF               	movwf	indf2,c
  9387  001DC8                     
  9388                           ; BSR set to: 0
  9389  001DC8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9390  001DCA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9391  001DCC                     
  9392                           ; BSR set to: 0
  9393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9394  001DCC  077F               	decf	efgtoa@w& (0+255),f,b
  9395  001DCE  A0D8               	btfss	status,0,c
  9396  001DD0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9397  001DD2                     
  9398                           ; BSR set to: 0
  9399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9400  001DD2  0E00               	movlw	0
  9401  001DD4  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9402  001DD6  0E01               	movlw	1
  9403  001DD8  6F72               	movwf	efgtoa@pp& (0+255),b
  9404  001DDA  EFFF  F00E         	goto	l8373
  9405  001DDE                     l8365:
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9409  001DDE  0E64               	movlw	low _dbuf
  9410  001DE0  2592               	addwf	efgtoa@n& (0+255),w,b
  9411  001DE2  6ED9               	movwf	fsr2l,c
  9412  001DE4  0E01               	movlw	high _dbuf
  9413  001DE6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9414  001DE8  6EDA               	movwf	fsr2h,c
  9415  001DEA  0E30               	movlw	48
  9416  001DEC  6EDF               	movwf	indf2,c
  9417  001DEE                     
  9418                           ; BSR set to: 0
  9419  001DEE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9420  001DF0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9421  001DF2                     
  9422                           ; BSR set to: 0
  9423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9424  001DF2  077F               	decf	efgtoa@w& (0+255),f,b
  9425  001DF4  A0D8               	btfss	status,0,c
  9426  001DF6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9427  001DF8                     
  9428                           ; BSR set to: 0
  9429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9430  001DF8  0770               	decf	efgtoa@t& (0+255),f,b
  9431  001DFA  A0D8               	btfss	status,0,c
  9432  001DFC  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  9433  001DFE                     l8373:
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9437  001DFE  5170               	movf	efgtoa@t& (0+255),w,b
  9438  001E00  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9439  001E02  A4D8               	btfss	status,2,c
  9440  001E04  EF06  F00F         	goto	u10841
  9441  001E08  EF08  F00F         	goto	u10840
  9442  001E0C                     u10841:
  9443  001E0C  EFEF  F00E         	goto	l8365
  9444  001E10                     u10840:
  9445  001E10                     
  9446                           ; BSR set to: 0
  9447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9448  001E10  0E64               	movlw	low _dbuf
  9449  001E12  2592               	addwf	efgtoa@n& (0+255),w,b
  9450  001E14  6ED9               	movwf	fsr2l,c
  9451  001E16  0E01               	movlw	high _dbuf
  9452  001E18  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9453  001E1A  6EDA               	movwf	fsr2h,c
  9454  001E1C  5178               	movf	efgtoa@d& (0+255),w,b
  9455  001E1E  0F30               	addlw	48
  9456  001E20  6EDF               	movwf	indf2,c
  9457  001E22                     
  9458                           ; BSR set to: 0
  9459  001E22  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9460  001E24  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9461  001E26                     
  9462                           ; BSR set to: 0
  9463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9464  001E26  077F               	decf	efgtoa@w& (0+255),f,b
  9465  001E28  A0D8               	btfss	status,0,c
  9466  001E2A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9467  001E2C                     l8381:
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9471  001E2C  C082  F02B         	movff	efgtoa@h,___flsub@b
  9472  001E30  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  9473  001E34  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  9474  001E38  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  9475  001E3C  C094  F016         	movff	efgtoa@u,___flmul@a
  9476  001E40  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  9477  001E44  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  9478  001E48  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  9479  001E4C  C086  F012         	movff	efgtoa@l,___flmul@b
  9480  001E50  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  9481  001E54  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  9482  001E58  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  9483  001E5C  ECDD  F012         	call	___flmul	;wreg free
  9484  001E60  C012  F02F         	movff	?___flmul,___flsub@a
  9485  001E64  C013  F030         	movff	?___flmul+1,___flsub@a+1
  9486  001E68  C014  F031         	movff	?___flmul+2,___flsub@a+2
  9487  001E6C  C015  F032         	movff	?___flmul+3,___flsub@a+3
  9488  001E70  ECCF  F02B         	call	___flsub	;wreg free
  9489  001E74  C02B  F082         	movff	?___flsub,efgtoa@h
  9490  001E78  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  9491  001E7C  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  9492  001E80  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  9493  001E84                     
  9494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9495  001E84  C094  F004         	movff	efgtoa@u,___fldiv@b
  9496  001E88  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  9497  001E8C  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  9498  001E90  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  9499  001E94  0E00               	movlw	0
  9500  001E96  6E08               	movwf	___fldiv@a^0,c
  9501  001E98  0E00               	movlw	0
  9502  001E9A  6E09               	movwf	(___fldiv@a+1)^0,c
  9503  001E9C  0E20               	movlw	32
  9504  001E9E  6E0A               	movwf	(___fldiv@a+2)^0,c
  9505  001EA0  0E41               	movlw	65
  9506  001EA2  6E0B               	movwf	(___fldiv@a+3)^0,c
  9507  001EA4  ECF2  F014         	call	___fldiv	;wreg free
  9508  001EA8  C004  F094         	movff	?___fldiv,efgtoa@u
  9509  001EAC  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  9510  001EB0  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  9511  001EB4  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  9512  001EB8                     
  9513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9514  001EB8  0100               	movlb	0	; () banked
  9515  001EBA  0776               	decf	efgtoa@ne& (0+255),f,b
  9516  001EBC  A0D8               	btfss	status,0,c
  9517  001EBE  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  9518  001EC0                     
  9519                           ; BSR set to: 0
  9520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9521  001EC0  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9522  001EC2  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9523  001EC4                     l8389:
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9527  001EC4  5174               	movf	efgtoa@m& (0+255),w,b
  9528  001EC6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9529  001EC8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9530  001ECA  0A80               	xorlw	128
  9531  001ECC  6E3E               	movwf	??_efgtoa^0,c
  9532  001ECE  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9533  001ED0  0A80               	xorlw	128
  9534  001ED2  583E               	subwfb	??_efgtoa^0,w,c
  9535  001ED4  B0D8               	btfsc	status,0,c
  9536  001ED6  EF6F  F00F         	goto	u10851
  9537  001EDA  EF71  F00F         	goto	u10850
  9538  001EDE                     u10851:
  9539  001EDE  EF7F  F00F         	goto	l8393
  9540  001EE2                     u10850:
  9541  001EE2                     
  9542                           ; BSR set to: 0
  9543  001EE2  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9544  001EE4  EF7D  F00F         	goto	u10861
  9545  001EE8  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  9546  001EEA  E109               	bnz	u10860
  9547  001EEC  0E4B               	movlw	75
  9548  001EEE  5D92               	subwf	efgtoa@n& (0+255),w,b
  9549  001EF0  A0D8               	btfss	status,0,c
  9550  001EF2  EF7D  F00F         	goto	u10861
  9551  001EF6  EF7F  F00F         	goto	u10860
  9552  001EFA                     u10861:
  9553  001EFA  EF75  F00E         	goto	l8341
  9554  001EFE                     u10860:
  9555  001EFE                     l8393:
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9559  001EFE  5172               	movf	efgtoa@pp& (0+255),w,b
  9560  001F00  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9561  001F02  A4D8               	btfss	status,2,c
  9562  001F04  EF86  F00F         	goto	u10871
  9563  001F08  EF88  F00F         	goto	u10870
  9564  001F0C                     u10871:
  9565  001F0C  EF99  F00F         	goto	l8401
  9566  001F10                     u10870:
  9567  001F10                     
  9568                           ; BSR set to: 0
  9569  001F10  A9EE               	btfss	_flags& (0+255),4,b
  9570  001F12  EF8D  F00F         	goto	u10881
  9571  001F16  EF8F  F00F         	goto	u10880
  9572  001F1A                     u10881:
  9573  001F1A  EF99  F00F         	goto	l8401
  9574  001F1E                     u10880:
  9575  001F1E                     
  9576                           ; BSR set to: 0
  9577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9578  001F1E  0E64               	movlw	low _dbuf
  9579  001F20  2592               	addwf	efgtoa@n& (0+255),w,b
  9580  001F22  6ED9               	movwf	fsr2l,c
  9581  001F24  0E01               	movlw	high _dbuf
  9582  001F26  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9583  001F28  6EDA               	movwf	fsr2h,c
  9584  001F2A  0E2E               	movlw	46
  9585  001F2C  6EDF               	movwf	indf2,c
  9586  001F2E                     
  9587                           ; BSR set to: 0
  9588  001F2E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9589  001F30  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9590  001F32                     l8401:
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9594  001F32  0E64               	movlw	low _dbuf
  9595  001F34  2592               	addwf	efgtoa@n& (0+255),w,b
  9596  001F36  6ED9               	movwf	fsr2l,c
  9597  001F38  0E01               	movlw	high _dbuf
  9598  001F3A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9599  001F3C  6EDA               	movwf	fsr2h,c
  9600  001F3E  0E00               	movlw	0
  9601  001F40  6EDF               	movwf	indf2,c
  9602  001F42                     
  9603                           ; BSR set to: 0
  9604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9605  001F42  0E65               	movlw	101
  9606  001F44  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9607  001F46  A4D8               	btfss	status,2,c
  9608  001F48  EFA8  F00F         	goto	u10891
  9609  001F4C  EFAA  F00F         	goto	u10890
  9610  001F50                     u10891:
  9611  001F50  EF58  F00B         	goto	l8213
  9612  001F54                     u10890:
  9613  001F54                     
  9614                           ; BSR set to: 0
  9615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9616  001F54  0E00               	movlw	0
  9617  001F56  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9618  001F58  0E4F               	movlw	79
  9619  001F5A  6F8A               	movwf	efgtoa@i& (0+255),b
  9620  001F5C                     
  9621                           ; BSR set to: 0
  9622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9623  001F5C  0E64               	movlw	low _dbuf
  9624  001F5E  258A               	addwf	efgtoa@i& (0+255),w,b
  9625  001F60  6ED9               	movwf	fsr2l,c
  9626  001F62  0E01               	movlw	high _dbuf
  9627  001F64  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9628  001F66  6EDA               	movwf	fsr2h,c
  9629  001F68  0E00               	movlw	0
  9630  001F6A  6EDF               	movwf	indf2,c
  9631  001F6C                     
  9632                           ; BSR set to: 0
  9633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9634  001F6C  0E00               	movlw	0
  9635  001F6E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9636  001F70  0E00               	movlw	0
  9637  001F72  6F7A               	movwf	efgtoa@sign& (0+255),b
  9638  001F74                     
  9639                           ; BSR set to: 0
  9640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9641  001F74  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9642  001F76  EFC1  F00F         	goto	u10900
  9643  001F7A  EFBF  F00F         	goto	u10901
  9644  001F7E                     u10901:
  9645  001F7E  EFC9  F00F         	goto	l8417
  9646  001F82                     u10900:
  9647  001F82                     
  9648                           ; BSR set to: 0
  9649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9650  001F82  0E00               	movlw	0
  9651  001F84  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9652  001F86  0E01               	movlw	1
  9653  001F88  6F7A               	movwf	efgtoa@sign& (0+255),b
  9654  001F8A                     
  9655                           ; BSR set to: 0
  9656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9657  001F8A  6D90               	negf	efgtoa@e& (0+255),b
  9658  001F8C  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  9659  001F8E  B0D8               	btfsc	status,0,c
  9660  001F90  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  9661  001F92                     l8417:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9665  001F92  0E00               	movlw	0
  9666  001F94  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  9667  001F96  0E02               	movlw	2
  9668  001F98  6F7C               	movwf	efgtoa@p& (0+255),b
  9669                           
  9670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9671  001F9A  EFFA  F00F         	goto	l8429
  9672  001F9E                     l8419:
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9676  001F9E  078A               	decf	efgtoa@i& (0+255),f,b
  9677  001FA0  A0D8               	btfss	status,0,c
  9678  001FA2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9679  001FA4                     
  9680                           ; BSR set to: 0
  9681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9682  001FA4  0E64               	movlw	low _dbuf
  9683  001FA6  258A               	addwf	efgtoa@i& (0+255),w,b
  9684  001FA8  6ED9               	movwf	fsr2l,c
  9685  001FAA  0E01               	movlw	high _dbuf
  9686  001FAC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9687  001FAE  6EDA               	movwf	fsr2h,c
  9688  001FB0  C090  F004         	movff	efgtoa@e,___awmod@dividend
  9689  001FB4  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  9690  001FB8  0E00               	movlw	0
  9691  001FBA  6E07               	movwf	(___awmod@divisor+1)^0,c
  9692  001FBC  0E0A               	movlw	10
  9693  001FBE  6E06               	movwf	___awmod@divisor^0,c
  9694  001FC0  EC07  F029         	call	___awmod	;wreg free
  9695  001FC4  5004               	movf	?___awmod^0,w,c
  9696  001FC6  0F30               	addlw	48
  9697  001FC8  6EDF               	movwf	indf2,c
  9698  001FCA                     
  9699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9700  001FCA  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  9701  001FCE  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  9702  001FD2  0E00               	movlw	0
  9703  001FD4  6E07               	movwf	(___awdiv@divisor+1)^0,c
  9704  001FD6  0E0A               	movlw	10
  9705  001FD8  6E06               	movwf	___awdiv@divisor^0,c
  9706  001FDA  ECA5  F028         	call	___awdiv	;wreg free
  9707  001FDE  C004  F090         	movff	?___awdiv,efgtoa@e
  9708  001FE2  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  9709  001FE6                     
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9711  001FE6  0100               	movlb	0	; () banked
  9712  001FE8  077C               	decf	efgtoa@p& (0+255),f,b
  9713  001FEA  A0D8               	btfss	status,0,c
  9714  001FEC  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  9715  001FEE                     
  9716                           ; BSR set to: 0
  9717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  9718  001FEE  077F               	decf	efgtoa@w& (0+255),f,b
  9719  001FF0  A0D8               	btfss	status,0,c
  9720  001FF2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9721  001FF4                     l8429:
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9725  001FF4  5190               	movf	efgtoa@e& (0+255),w,b
  9726  001FF6  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9727  001FF8  A4D8               	btfss	status,2,c
  9728  001FFA  EF01  F010         	goto	u10911
  9729  001FFE  EF03  F010         	goto	u10910
  9730  002002                     u10911:
  9731  002002  EFCF  F00F         	goto	l8419
  9732  002006                     u10910:
  9733  002006                     
  9734                           ; BSR set to: 0
  9735  002006  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9736  002008  EF10  F010         	goto	u10920
  9737  00200C  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  9738  00200E  E106               	bnz	u10921
  9739  002010  057C               	decf	efgtoa@p& (0+255),w,b
  9740  002012  B0D8               	btfsc	status,0,c
  9741  002014  EF0E  F010         	goto	u10921
  9742  002018  EF10  F010         	goto	u10920
  9743  00201C                     u10921:
  9744  00201C  EFCF  F00F         	goto	l8419
  9745  002020                     u10920:
  9746  002020                     
  9747                           ; BSR set to: 0
  9748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  9749  002020  078A               	decf	efgtoa@i& (0+255),f,b
  9750  002022  A0D8               	btfss	status,0,c
  9751  002024  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9752  002026                     
  9753                           ; BSR set to: 0
  9754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  9755  002026  517A               	movf	efgtoa@sign& (0+255),w,b
  9756  002028  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9757  00202A  A4D8               	btfss	status,2,c
  9758  00202C  EF1A  F010         	goto	u10931
  9759  002030  EF1C  F010         	goto	u10930
  9760  002034                     u10931:
  9761  002034  EF22  F010         	goto	l8439
  9762  002038                     u10930:
  9763  002038                     
  9764                           ; BSR set to: 0
  9765  002038  0E00               	movlw	0
  9766  00203A  6F6B               	movwf	(_efgtoa$1403+1)& (0+255),b
  9767  00203C  0E2B               	movlw	43
  9768  00203E  6F6A               	movwf	_efgtoa$1403& (0+255),b
  9769  002040  EF26  F010         	goto	l8441
  9770  002044                     l8439:
  9771                           
  9772                           ; BSR set to: 0
  9773  002044  0E00               	movlw	0
  9774  002046  6F6B               	movwf	(_efgtoa$1403+1)& (0+255),b
  9775  002048  0E2D               	movlw	45
  9776  00204A  6F6A               	movwf	_efgtoa$1403& (0+255),b
  9777  00204C                     l8441:
  9778                           
  9779                           ; BSR set to: 0
  9780  00204C  0E64               	movlw	low _dbuf
  9781  00204E  258A               	addwf	efgtoa@i& (0+255),w,b
  9782  002050  6ED9               	movwf	fsr2l,c
  9783  002052  0E01               	movlw	high _dbuf
  9784  002054  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9785  002056  6EDA               	movwf	fsr2h,c
  9786  002058  C06A  FFDF         	movff	_efgtoa$1403,indf2
  9787  00205C                     
  9788                           ; BSR set to: 0
  9789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  9790  00205C  077F               	decf	efgtoa@w& (0+255),f,b
  9791  00205E  A0D8               	btfss	status,0,c
  9792  002060  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9793  002062                     
  9794                           ; BSR set to: 0
  9795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9796  002062  078A               	decf	efgtoa@i& (0+255),f,b
  9797  002064  A0D8               	btfss	status,0,c
  9798  002066  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9799  002068                     
  9800                           ; BSR set to: 0
  9801  002068  0EBF               	movlw	191
  9802  00206A  6E3E               	movwf	??_efgtoa^0,c
  9803  00206C  0EFF               	movlw	255
  9804  00206E  6E3F               	movwf	(??_efgtoa+1)^0,c
  9805  002070  503D               	movf	efgtoa@c^0,w,c
  9806  002072  6E40               	movwf	(??_efgtoa+2)^0,c
  9807  002074  6A41               	clrf	(??_efgtoa+3)^0,c
  9808  002076  503E               	movf	??_efgtoa^0,w,c
  9809  002078  2640               	addwf	(??_efgtoa+2)^0,f,c
  9810  00207A  503F               	movf	(??_efgtoa+1)^0,w,c
  9811  00207C  2241               	addwfc	(??_efgtoa+3)^0,f,c
  9812  00207E  5041               	movf	(??_efgtoa+3)^0,w,c
  9813  002080  E10A               	bnz	u10940
  9814  002082  0E1A               	movlw	26
  9815  002084  5C40               	subwf	(??_efgtoa+2)^0,w,c
  9816  002086  A0D8               	btfss	status,0,c
  9817  002088  EF48  F010         	goto	u10941
  9818  00208C  EF4B  F010         	goto	u10940
  9819  002090                     u10941:
  9820  002090  0E01               	movlw	1
  9821  002092  EF4C  F010         	goto	u10950
  9822  002096                     u10940:
  9823  002096  0E00               	movlw	0
  9824  002098                     u10950:
  9825  002098  6F6E               	movwf	_efgtoa$1405& (0+255),b
  9826  00209A  6B6F               	clrf	(_efgtoa$1405+1)& (0+255),b
  9827  00209C                     
  9828                           ; BSR set to: 0
  9829  00209C  516E               	movf	_efgtoa$1405& (0+255),w,b
  9830  00209E  116F               	iorwf	(_efgtoa$1405+1)& (0+255),w,b
  9831  0020A0  A4D8               	btfss	status,2,c
  9832  0020A2  EF55  F010         	goto	u10961
  9833  0020A6  EF57  F010         	goto	u10960
  9834  0020AA                     u10961:
  9835  0020AA  EF5D  F010         	goto	l8455
  9836  0020AE                     u10960:
  9837  0020AE                     
  9838                           ; BSR set to: 0
  9839  0020AE  0E00               	movlw	0
  9840  0020B0  6F6D               	movwf	(_efgtoa$1404+1)& (0+255),b
  9841  0020B2  0E65               	movlw	101
  9842  0020B4  6F6C               	movwf	_efgtoa$1404& (0+255),b
  9843  0020B6  EF61  F010         	goto	l8457
  9844  0020BA                     l8455:
  9845                           
  9846                           ; BSR set to: 0
  9847  0020BA  0E00               	movlw	0
  9848  0020BC  6F6D               	movwf	(_efgtoa$1404+1)& (0+255),b
  9849  0020BE  0E45               	movlw	69
  9850  0020C0  6F6C               	movwf	_efgtoa$1404& (0+255),b
  9851  0020C2                     l8457:
  9852                           
  9853                           ; BSR set to: 0
  9854  0020C2  0E64               	movlw	low _dbuf
  9855  0020C4  258A               	addwf	efgtoa@i& (0+255),w,b
  9856  0020C6  6ED9               	movwf	fsr2l,c
  9857  0020C8  0E01               	movlw	high _dbuf
  9858  0020CA  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9859  0020CC  6EDA               	movwf	fsr2h,c
  9860  0020CE  C06C  FFDF         	movff	_efgtoa$1404,indf2
  9861  0020D2                     
  9862                           ; BSR set to: 0
  9863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  9864  0020D2  077F               	decf	efgtoa@w& (0+255),f,b
  9865  0020D4  A0D8               	btfss	status,0,c
  9866  0020D6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9867  0020D8                     
  9868                           ; BSR set to: 0
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  9870  0020D8  0E64               	movlw	low _dbuf
  9871  0020DA  2592               	addwf	efgtoa@n& (0+255),w,b
  9872  0020DC  6E04               	movwf	strcpy@dest^0,c
  9873  0020DE  0E01               	movlw	high _dbuf
  9874  0020E0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9875  0020E2  6E05               	movwf	(strcpy@dest+1)^0,c
  9876  0020E4  0E64               	movlw	low _dbuf
  9877  0020E6  258A               	addwf	efgtoa@i& (0+255),w,b
  9878  0020E8  6E06               	movwf	strcpy@src^0,c
  9879  0020EA  0E01               	movlw	high _dbuf
  9880  0020EC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9881  0020EE  6E07               	movwf	(strcpy@src+1)^0,c
  9882  0020F0  ECDE  F02A         	call	_strcpy	;wreg free
  9883  0020F4  EF58  F00B         	goto	l8213
  9884  0020F8                     l574:
  9885  0020F8  0012               	return		;funcret
  9886  0020FA                     __end_of_efgtoa:
  9887                           	opt callstack 0
  9888                           
  9889 ;; *************** function _tolower *****************
  9890 ;; Defined at:
  9891 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  c               2    9[COMRAM] int 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;		None
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  2    9[COMRAM] int 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9908 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9909 ;;Total ram usage:        8 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    5
  9912 ;; This function calls:
  9913 ;;		_isupper
  9914 ;; This function is called by:
  9915 ;;		_efgtoa
  9916 ;;		_vfpfcnvrt
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text16
  9921  0054FE                     __ptext16:
  9922                           	opt callstack 0
  9923  0054FE                     _tolower:
  9924                           	opt callstack 21
  9925  0054FE  0EBF               	movlw	191
  9926  005500  6E0C               	movwf	??_tolower^0,c
  9927  005502  0EFF               	movlw	255
  9928  005504  6E0D               	movwf	(??_tolower+1)^0,c
  9929  005506  C00A  F00E         	movff	tolower@c,??_tolower+2
  9930  00550A  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  9931  00550E  500C               	movf	??_tolower^0,w,c
  9932  005510  260E               	addwf	(??_tolower+2)^0,f,c
  9933  005512  500D               	movf	(??_tolower+1)^0,w,c
  9934  005514  220F               	addwfc	(??_tolower+3)^0,f,c
  9935  005516  500F               	movf	(??_tolower+3)^0,w,c
  9936  005518  E10A               	bnz	u9170
  9937  00551A  0E1A               	movlw	26
  9938  00551C  5C0E               	subwf	(??_tolower+2)^0,w,c
  9939  00551E  A0D8               	btfss	status,0,c
  9940  005520  EF94  F02A         	goto	u9171
  9941  005524  EF97  F02A         	goto	u9170
  9942  005528                     u9171:
  9943  005528  0E01               	movlw	1
  9944  00552A  EF98  F02A         	goto	u9180
  9945  00552E                     u9170:
  9946  00552E  0E00               	movlw	0
  9947  005530                     u9180:
  9948  005530  6E10               	movwf	_tolower$2162^0,c
  9949  005532  6A11               	clrf	(_tolower$2162+1)^0,c
  9950  005534  5010               	movf	_tolower$2162^0,w,c
  9951  005536  1011               	iorwf	(_tolower$2162+1)^0,w,c
  9952  005538  B4D8               	btfsc	status,2,c
  9953  00553A  EFA1  F02A         	goto	u9191
  9954  00553E  EFA3  F02A         	goto	u9190
  9955  005542                     u9191:
  9956  005542  EFAA  F02A         	goto	l1641
  9957  005546                     u9190:
  9958  005546  0E20               	movlw	32
  9959  005548  100A               	iorwf	tolower@c^0,w,c
  9960  00554A  6E0A               	movwf	?_tolower^0,c
  9961  00554C  500B               	movf	(tolower@c+1)^0,w,c
  9962  00554E  6E0B               	movwf	(?_tolower+1)^0,c
  9963  005550  EFAE  F02A         	goto	l1646
  9964  005554                     l1641:
  9965  005554  C00A  F00A         	movff	tolower@c,?_tolower
  9966  005558  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  9967  00555C                     l1646:
  9968  00555C  0012               	return		;funcret
  9969  00555E                     __end_of_tolower:
  9970                           	opt callstack 0
  9971                           
  9972 ;; *************** function _isupper *****************
  9973 ;; Defined at:
  9974 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  c               2    3[COMRAM] int 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  2    3[COMRAM] int 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;Total ram usage:        6 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    4
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_efgtoa
  9999 ;;		_xtoa
 10000 ;;		_vfpfcnvrt
 10001 ;;		_tolower
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text17
 10006  00599E                     __ptext17:
 10007                           	opt callstack 0
 10008  00599E                     _isupper:
 10009                           	opt callstack 21
 10010  00599E  0EBF               	movlw	191
 10011  0059A0  6E06               	movwf	??_isupper^0,c
 10012  0059A2  0EFF               	movlw	255
 10013  0059A4  6E07               	movwf	(??_isupper+1)^0,c
 10014  0059A6  C004  F008         	movff	isupper@c,??_isupper+2
 10015  0059AA  C005  F009         	movff	isupper@c+1,??_isupper+3
 10016  0059AE  5006               	movf	??_isupper^0,w,c
 10017  0059B0  2608               	addwf	(??_isupper+2)^0,f,c
 10018  0059B2  5007               	movf	(??_isupper+1)^0,w,c
 10019  0059B4  2209               	addwfc	(??_isupper+3)^0,f,c
 10020  0059B6  5009               	movf	(??_isupper+3)^0,w,c
 10021  0059B8  E10A               	bnz	u8600
 10022  0059BA  0E1A               	movlw	26
 10023  0059BC  5C08               	subwf	(??_isupper+2)^0,w,c
 10024  0059BE  A0D8               	btfss	status,0,c
 10025  0059C0  EFE4  F02C         	goto	u8601
 10026  0059C4  EFE7  F02C         	goto	u8600
 10027  0059C8                     u8601:
 10028  0059C8  0E01               	movlw	1
 10029  0059CA  EFE8  F02C         	goto	u8610
 10030  0059CE                     u8600:
 10031  0059CE  0E00               	movlw	0
 10032  0059D0                     u8610:
 10033  0059D0  6E04               	movwf	?_isupper^0,c
 10034  0059D2  6A05               	clrf	(?_isupper+1)^0,c
 10035  0059D4  0012               	return		;funcret
 10036  0059D6                     __end_of_isupper:
 10037                           	opt callstack 0
 10038                           
 10039 ;; *************** function _strcpy *****************
 10040 ;; Defined at:
 10041 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  dest            2    3[COMRAM] PTR unsigned char 
 10044 ;;		 -> dbuf(80), 
 10045 ;;  src             2    5[COMRAM] PTR const unsigned char 
 10046 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 10047 ;;		 -> dbuf(80), 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  d               2   11[COMRAM] PTR unsigned char 
 10050 ;;		 -> dbuf(80), 
 10051 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10052 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 10053 ;;		 -> dbuf(80), 
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  2    3[COMRAM] PTR unsigned char 
 10056 ;; Registers used:
 10057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10064 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10066 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10067 ;;Total ram usage:       10 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; Hardware stack levels required when called:    4
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_efgtoa
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text18
 10078  0055BC                     __ptext18:
 10079                           	opt callstack 0
 10080  0055BC                     _strcpy:
 10081                           	opt callstack 21
 10082  0055BC  C006  F00A         	movff	strcpy@src,strcpy@s
 10083  0055C0  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
 10084  0055C4  C004  F00C         	movff	strcpy@dest,strcpy@d
 10085  0055C8  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
 10086  0055CC                     l7455:
 10087  0055CC  500A               	movf	strcpy@s^0,w,c
 10088  0055CE  6E08               	movwf	??_strcpy^0,c
 10089  0055D0  500B               	movf	(strcpy@s+1)^0,w,c
 10090  0055D2  6E09               	movwf	(??_strcpy+1)^0,c
 10091  0055D4  4A0A               	infsnz	strcpy@s^0,f,c
 10092  0055D6  2A0B               	incf	(strcpy@s+1)^0,f,c
 10093  0055D8  C008  FFF6         	movff	??_strcpy,tblptrl
 10094  0055DC  C009  FFF7         	movff	??_strcpy+1,tblptrh
 10095  0055E0  0E00               	movlw	low (__mediumconst shr (0+16))
 10096  0055E2  6EF8               	movwf	tblptru,c
 10097  0055E4  C00C  FFD9         	movff	strcpy@d,fsr2l
 10098  0055E8  C00D  FFDA         	movff	strcpy@d+1,fsr2h
 10099  0055EC  4A0C               	infsnz	strcpy@d^0,f,c
 10100  0055EE  2A0D               	incf	(strcpy@d+1)^0,f,c
 10101  0055F0  0E0E               	movlw	(high __ramtop+-1)
 10102  0055F2  64F7               	cpfsgt	tblptrh,c
 10103  0055F4  D003               	bra	u9157
 10104  0055F6  0008               	tblrd		*
 10105  0055F8  50F5               	movf	tablat,w,c
 10106  0055FA  D005               	bra	u9150
 10107  0055FC                     u9157:
 10108  0055FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10109  005600  CFF7 FFE2          	movff	tblptrh,fsr1h
 10110  005604  50E7               	movf	indf1,w,c
 10111  005606                     u9150:
 10112  005606  6EDF               	movwf	indf2,c
 10113  005608  50DF               	movf	indf2,w,c
 10114  00560A  A4D8               	btfss	status,2,c
 10115  00560C  EF0A  F02B         	goto	u9161
 10116  005610  EF0C  F02B         	goto	u9160
 10117  005614                     u9161:
 10118  005614  EFE6  F02A         	goto	l7455
 10119  005618                     u9160:
 10120  005618  0012               	return		;funcret
 10121  00561A                     __end_of_strcpy:
 10122                           	opt callstack 0
 10123                           
 10124 ;; *************** function _floorf *****************
 10125 ;; Defined at:
 10126 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  x               4   28[COMRAM] float 
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;  u               4   44[COMRAM] struct .
 10131 ;;  m               4   38[COMRAM] unsigned long 
 10132 ;;  e               2   42[COMRAM] int 
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  4   28[COMRAM] float 
 10135 ;; Registers used:
 10136 ;;		wreg, status,2, status,0
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10143 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10144 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10145 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10146 ;;Total ram usage:       20 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    4
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_efgtoa
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text19
 10157  0036C6                     __ptext19:
 10158                           	opt callstack 0
 10159  0036C6                     _floorf:
 10160                           	opt callstack 21
 10161  0036C6  C0DC  F02D         	movff	floorf@F524,floorf@u
 10162  0036CA  C0DD  F02E         	movff	floorf@F524+1,floorf@u+1
 10163  0036CE  C0DE  F02F         	movff	floorf@F524+2,floorf@u+2
 10164  0036D2  C0DF  F030         	movff	floorf@F524+3,floorf@u+3
 10165  0036D6  C01D  F02D         	movff	floorf@x,floorf@u
 10166  0036DA  C01E  F02E         	movff	floorf@x+1,floorf@u+1
 10167  0036DE  C01F  F02F         	movff	floorf@x+2,floorf@u+2
 10168  0036E2  C020  F030         	movff	floorf@x+3,floorf@u+3
 10169  0036E6  0E81               	movlw	129
 10170  0036E8  6E21               	movwf	??_floorf^0,c
 10171  0036EA  0EFF               	movlw	255
 10172  0036EC  6E22               	movwf	(??_floorf+1)^0,c
 10173  0036EE  C02D  F023         	movff	floorf@u,??_floorf+2
 10174  0036F2  C02E  F024         	movff	floorf@u+1,??_floorf+3
 10175  0036F6  C02F  F025         	movff	floorf@u+2,??_floorf+4
 10176  0036FA  C030  F026         	movff	floorf@u+3,??_floorf+5
 10177  0036FE  0E18               	movlw	24
 10178  003700  EF87  F01B         	goto	u9200
 10179  003704                     u9205:
 10180  003704  90D8               	bcf	status,0,c
 10181  003706  3226               	rrcf	(??_floorf+5)^0,f,c
 10182  003708  3225               	rrcf	(??_floorf+4)^0,f,c
 10183  00370A  3224               	rrcf	(??_floorf+3)^0,f,c
 10184  00370C  3223               	rrcf	(??_floorf+2)^0,f,c
 10185  00370E                     u9200:
 10186  00370E  2EE8               	decfsz	wreg,f,c
 10187  003710  EF82  F01B         	goto	u9205
 10188  003714  5023               	movf	(??_floorf+2)^0,w,c
 10189  003716  2421               	addwf	??_floorf^0,w,c
 10190  003718  6E2B               	movwf	floorf@e^0,c
 10191  00371A  0E00               	movlw	0
 10192  00371C  2022               	addwfc	(??_floorf+1)^0,w,c
 10193  00371E  6E2C               	movwf	(floorf@e+1)^0,c
 10194  003720  BE2C               	btfsc	(floorf@e+1)^0,7,c
 10195  003722  EF9C  F01B         	goto	u9211
 10196  003726  502C               	movf	(floorf@e+1)^0,w,c
 10197  003728  E109               	bnz	u9210
 10198  00372A  0E17               	movlw	23
 10199  00372C  5C2B               	subwf	floorf@e^0,w,c
 10200  00372E  A0D8               	btfss	status,0,c
 10201  003730  EF9C  F01B         	goto	u9211
 10202  003734  EF9E  F01B         	goto	u9210
 10203  003738                     u9211:
 10204  003738  EFA8  F01B         	goto	l7473
 10205  00373C                     u9210:
 10206  00373C                     l7471:
 10207  00373C  C01D  F01D         	movff	floorf@x,?_floorf
 10208  003740  C01E  F01E         	movff	floorf@x+1,?_floorf+1
 10209  003744  C01F  F01F         	movff	floorf@x+2,?_floorf+2
 10210  003748  C020  F020         	movff	floorf@x+3,?_floorf+3
 10211  00374C  EF6B  F01C         	goto	l1552
 10212  003750                     l7473:
 10213  003750  BE2C               	btfsc	(floorf@e+1)^0,7,c
 10214  003752  EFAD  F01B         	goto	u9221
 10215  003756  EFAF  F01B         	goto	u9220
 10216  00375A                     u9221:
 10217  00375A  EF1F  F01C         	goto	l7483
 10218  00375E                     u9220:
 10219  00375E  C02B  F021         	movff	floorf@e,??_floorf
 10220  003762  0EFF               	movlw	255
 10221  003764  6E22               	movwf	(??_floorf+1)^0,c
 10222  003766  0EFF               	movlw	255
 10223  003768  6E23               	movwf	(??_floorf+2)^0,c
 10224  00376A  0E7F               	movlw	127
 10225  00376C  6E24               	movwf	(??_floorf+3)^0,c
 10226  00376E  0E00               	movlw	0
 10227  003770  6E25               	movwf	(??_floorf+4)^0,c
 10228  003772                     u9235:
 10229  003772  6621               	tstfsz	??_floorf^0,c
 10230  003774  EFBE  F01B         	goto	u9236
 10231  003778  EFC6  F01B         	goto	u9237
 10232  00377C                     u9236:
 10233  00377C  3425               	rlcf	(??_floorf+4)^0,w,c
 10234  00377E  3225               	rrcf	(??_floorf+4)^0,f,c
 10235  003780  3224               	rrcf	(??_floorf+3)^0,f,c
 10236  003782  3223               	rrcf	(??_floorf+2)^0,f,c
 10237  003784  3222               	rrcf	(??_floorf+1)^0,f,c
 10238  003786  2E21               	decfsz	??_floorf^0,f,c
 10239  003788  EFB9  F01B         	goto	u9235
 10240  00378C                     u9237:
 10241  00378C  C022  F027         	movff	??_floorf+1,floorf@m
 10242  003790  C023  F028         	movff	??_floorf+2,floorf@m+1
 10243  003794  C024  F029         	movff	??_floorf+3,floorf@m+2
 10244  003798  C025  F02A         	movff	??_floorf+4,floorf@m+3
 10245  00379C  5027               	movf	floorf@m^0,w,c
 10246  00379E  142D               	andwf	floorf@u^0,w,c
 10247  0037A0  6E21               	movwf	??_floorf^0,c
 10248  0037A2  5028               	movf	(floorf@m+1)^0,w,c
 10249  0037A4  142E               	andwf	(floorf@u+1)^0,w,c
 10250  0037A6  6E22               	movwf	(??_floorf+1)^0,c
 10251  0037A8  5029               	movf	(floorf@m+2)^0,w,c
 10252  0037AA  142F               	andwf	(floorf@u+2)^0,w,c
 10253  0037AC  6E23               	movwf	(??_floorf+2)^0,c
 10254  0037AE  502A               	movf	(floorf@m+3)^0,w,c
 10255  0037B0  1430               	andwf	(floorf@u+3)^0,w,c
 10256  0037B2  6E24               	movwf	(??_floorf+3)^0,c
 10257  0037B4  5021               	movf	??_floorf^0,w,c
 10258  0037B6  1022               	iorwf	(??_floorf+1)^0,w,c
 10259  0037B8  1023               	iorwf	(??_floorf+2)^0,w,c
 10260  0037BA  1024               	iorwf	(??_floorf+3)^0,w,c
 10261  0037BC  A4D8               	btfss	status,2,c
 10262  0037BE  EFE3  F01B         	goto	u9241
 10263  0037C2  EFE5  F01B         	goto	u9240
 10264  0037C6                     u9241:
 10265  0037C6  EFE7  F01B         	goto	l7479
 10266  0037CA                     u9240:
 10267  0037CA  EF9E  F01B         	goto	l7471
 10268  0037CE                     l7479:
 10269  0037CE  C02D  F021         	movff	floorf@u,??_floorf
 10270  0037D2  C02E  F022         	movff	floorf@u+1,??_floorf+1
 10271  0037D6  C02F  F023         	movff	floorf@u+2,??_floorf+2
 10272  0037DA  C030  F024         	movff	floorf@u+3,??_floorf+3
 10273  0037DE  0E20               	movlw	32
 10274  0037E0  EFF7  F01B         	goto	u9250
 10275  0037E4                     u9255:
 10276  0037E4  90D8               	bcf	status,0,c
 10277  0037E6  3224               	rrcf	(??_floorf+3)^0,f,c
 10278  0037E8  3223               	rrcf	(??_floorf+2)^0,f,c
 10279  0037EA  3222               	rrcf	(??_floorf+1)^0,f,c
 10280  0037EC  3221               	rrcf	??_floorf^0,f,c
 10281  0037EE                     u9250:
 10282  0037EE  2EE8               	decfsz	wreg,f,c
 10283  0037F0  EFF2  F01B         	goto	u9255
 10284  0037F4  5021               	movf	??_floorf^0,w,c
 10285  0037F6  1022               	iorwf	(??_floorf+1)^0,w,c
 10286  0037F8  1023               	iorwf	(??_floorf+2)^0,w,c
 10287  0037FA  1024               	iorwf	(??_floorf+3)^0,w,c
 10288  0037FC  B4D8               	btfsc	status,2,c
 10289  0037FE  EF03  F01C         	goto	u9261
 10290  003802  EF05  F01C         	goto	u9260
 10291  003806                     u9261:
 10292  003806  EF0D  F01C         	goto	l1555
 10293  00380A                     u9260:
 10294  00380A  5027               	movf	floorf@m^0,w,c
 10295  00380C  262D               	addwf	floorf@u^0,f,c
 10296  00380E  5028               	movf	(floorf@m+1)^0,w,c
 10297  003810  222E               	addwfc	(floorf@u+1)^0,f,c
 10298  003812  5029               	movf	(floorf@m+2)^0,w,c
 10299  003814  222F               	addwfc	(floorf@u+2)^0,f,c
 10300  003816  502A               	movf	(floorf@m+3)^0,w,c
 10301  003818  2230               	addwfc	(floorf@u+3)^0,f,c
 10302  00381A                     l1555:
 10303  00381A  1C27               	comf	floorf@m^0,w,c
 10304  00381C  6E21               	movwf	??_floorf^0,c
 10305  00381E  1C28               	comf	(floorf@m+1)^0,w,c
 10306  003820  6E22               	movwf	(??_floorf+1)^0,c
 10307  003822  1C29               	comf	(floorf@m+2)^0,w,c
 10308  003824  6E23               	movwf	(??_floorf+2)^0,c
 10309  003826  1C2A               	comf	(floorf@m+3)^0,w,c
 10310  003828  6E24               	movwf	(??_floorf+3)^0,c
 10311  00382A  5021               	movf	??_floorf^0,w,c
 10312  00382C  162D               	andwf	floorf@u^0,f,c
 10313  00382E  5022               	movf	(??_floorf+1)^0,w,c
 10314  003830  162E               	andwf	(floorf@u+1)^0,f,c
 10315  003832  5023               	movf	(??_floorf+2)^0,w,c
 10316  003834  162F               	andwf	(floorf@u+2)^0,f,c
 10317  003836  5024               	movf	(??_floorf+3)^0,w,c
 10318  003838  1630               	andwf	(floorf@u+3)^0,f,c
 10319  00383A  EF63  F01C         	goto	l7491
 10320  00383E                     l7483:
 10321  00383E  C02D  F021         	movff	floorf@u,??_floorf
 10322  003842  C02E  F022         	movff	floorf@u+1,??_floorf+1
 10323  003846  C02F  F023         	movff	floorf@u+2,??_floorf+2
 10324  00384A  C030  F024         	movff	floorf@u+3,??_floorf+3
 10325  00384E  0E20               	movlw	32
 10326  003850  EF2F  F01C         	goto	u9270
 10327  003854                     u9275:
 10328  003854  90D8               	bcf	status,0,c
 10329  003856  3224               	rrcf	(??_floorf+3)^0,f,c
 10330  003858  3223               	rrcf	(??_floorf+2)^0,f,c
 10331  00385A  3222               	rrcf	(??_floorf+1)^0,f,c
 10332  00385C  3221               	rrcf	??_floorf^0,f,c
 10333  00385E                     u9270:
 10334  00385E  2EE8               	decfsz	wreg,f,c
 10335  003860  EF2A  F01C         	goto	u9275
 10336  003864  5021               	movf	??_floorf^0,w,c
 10337  003866  1022               	iorwf	(??_floorf+1)^0,w,c
 10338  003868  1023               	iorwf	(??_floorf+2)^0,w,c
 10339  00386A  1024               	iorwf	(??_floorf+3)^0,w,c
 10340  00386C  A4D8               	btfss	status,2,c
 10341  00386E  EF3B  F01C         	goto	u9281
 10342  003872  EF3D  F01C         	goto	u9280
 10343  003876                     u9281:
 10344  003876  EF47  F01C         	goto	l7487
 10345  00387A                     u9280:
 10346  00387A  0E00               	movlw	0
 10347  00387C  6E2D               	movwf	floorf@u^0,c
 10348  00387E  0E00               	movlw	0
 10349  003880  6E2E               	movwf	(floorf@u+1)^0,c
 10350  003882  0E00               	movlw	0
 10351  003884  6E2F               	movwf	(floorf@u+2)^0,c
 10352  003886  0E00               	movlw	0
 10353  003888  6E30               	movwf	(floorf@u+3)^0,c
 10354  00388A  EF63  F01C         	goto	l7491
 10355  00388E                     l7487:
 10356  00388E  90D8               	bcf	status,0,c
 10357  003890  342D               	rlcf	floorf@u^0,w,c
 10358  003892  6E21               	movwf	??_floorf^0,c
 10359  003894  342E               	rlcf	(floorf@u+1)^0,w,c
 10360  003896  6E22               	movwf	(??_floorf+1)^0,c
 10361  003898  342F               	rlcf	(floorf@u+2)^0,w,c
 10362  00389A  6E23               	movwf	(??_floorf+2)^0,c
 10363  00389C  3430               	rlcf	(floorf@u+3)^0,w,c
 10364  00389E  6E24               	movwf	(??_floorf+3)^0,c
 10365  0038A0  5021               	movf	??_floorf^0,w,c
 10366  0038A2  1022               	iorwf	(??_floorf+1)^0,w,c
 10367  0038A4  1023               	iorwf	(??_floorf+2)^0,w,c
 10368  0038A6  1024               	iorwf	(??_floorf+3)^0,w,c
 10369  0038A8  B4D8               	btfsc	status,2,c
 10370  0038AA  EF59  F01C         	goto	u9291
 10371  0038AE  EF5B  F01C         	goto	u9290
 10372  0038B2                     u9291:
 10373  0038B2  EF63  F01C         	goto	l7491
 10374  0038B6                     u9290:
 10375  0038B6  0E00               	movlw	0
 10376  0038B8  6E2D               	movwf	floorf@u^0,c
 10377  0038BA  0E00               	movlw	0
 10378  0038BC  6E2E               	movwf	(floorf@u+1)^0,c
 10379  0038BE  0E80               	movlw	128
 10380  0038C0  6E2F               	movwf	(floorf@u+2)^0,c
 10381  0038C2  0EBF               	movlw	191
 10382  0038C4  6E30               	movwf	(floorf@u+3)^0,c
 10383  0038C6                     l7491:
 10384  0038C6  C02D  F01D         	movff	floorf@u,?_floorf
 10385  0038CA  C02E  F01E         	movff	floorf@u+1,?_floorf+1
 10386  0038CE  C02F  F01F         	movff	floorf@u+2,?_floorf+2
 10387  0038D2  C030  F020         	movff	floorf@u+3,?_floorf+3
 10388  0038D6                     l1552:
 10389  0038D6  0012               	return		;funcret
 10390  0038D8                     __end_of_floorf:
 10391                           	opt callstack 0
 10392                           
 10393 ;; *************** function ___fpclassifyf *****************
 10394 ;; Defined at:
 10395 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  x               4    3[COMRAM] float 
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;  u               4   13[COMRAM] struct .
 10400 ;;  e               2   11[COMRAM] int 
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  2    3[COMRAM] int 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10413 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10414 ;;Total ram usage:       14 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:    4
 10417 ;; This function calls:
 10418 ;;		Nothing
 10419 ;; This function is called by:
 10420 ;;		_efgtoa
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text20
 10425  004CFC                     __ptext20:
 10426                           	opt callstack 0
 10427  004CFC                     ___fpclassifyf:
 10428                           	opt callstack 21
 10429  004CFC  C0E0  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10430  004D00  C0E1  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10431  004D04  C0E2  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10432  004D08  C0E3  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10433  004D0C  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
 10434  004D10  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10435  004D14  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10436  004D18  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10437  004D1C  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10438  004D20  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10439  004D24  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10440  004D28  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10441  004D2C  0E18               	movlw	24
 10442  004D2E  EF9E  F026         	goto	u9080
 10443  004D32                     u9085:
 10444  004D32  90D8               	bcf	status,0,c
 10445  004D34  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
 10446  004D36  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
 10447  004D38  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
 10448  004D3A  3208               	rrcf	??___fpclassifyf^0,f,c
 10449  004D3C                     u9080:
 10450  004D3C  2EE8               	decfsz	wreg,f,c
 10451  004D3E  EF99  F026         	goto	u9085
 10452  004D42  5008               	movf	??___fpclassifyf^0,w,c
 10453  004D44  6E0C               	movwf	___fpclassifyf@e^0,c
 10454  004D46  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
 10455  004D48  500C               	movf	___fpclassifyf@e^0,w,c
 10456  004D4A  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10457  004D4C  A4D8               	btfss	status,2,c
 10458  004D4E  EFAB  F026         	goto	u9091
 10459  004D52  EFAD  F026         	goto	u9090
 10460  004D56                     u9091:
 10461  004D56  EFCD  F026         	goto	l7443
 10462  004D5A                     u9090:
 10463  004D5A  90D8               	bcf	status,0,c
 10464  004D5C  340E               	rlcf	___fpclassifyf@u^0,w,c
 10465  004D5E  6E08               	movwf	??___fpclassifyf^0,c
 10466  004D60  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10467  004D62  6E09               	movwf	(??___fpclassifyf+1)^0,c
 10468  004D64  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10469  004D66  6E0A               	movwf	(??___fpclassifyf+2)^0,c
 10470  004D68  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10471  004D6A  6E0B               	movwf	(??___fpclassifyf+3)^0,c
 10472  004D6C  5008               	movf	??___fpclassifyf^0,w,c
 10473  004D6E  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10474  004D70  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10475  004D72  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10476  004D74  A4D8               	btfss	status,2,c
 10477  004D76  EFBF  F026         	goto	u9101
 10478  004D7A  EFC1  F026         	goto	u9100
 10479  004D7E                     u9101:
 10480  004D7E  EFC7  F026         	goto	l7439
 10481  004D82                     u9100:
 10482  004D82  0E00               	movlw	0
 10483  004D84  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10484  004D86  0E02               	movlw	2
 10485  004D88  6E04               	movwf	?___fpclassifyf^0,c
 10486  004D8A  EFFC  F026         	goto	l1507
 10487  004D8E                     l7439:
 10488  004D8E  0E00               	movlw	0
 10489  004D90  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10490  004D92  0E03               	movlw	3
 10491  004D94  6E04               	movwf	?___fpclassifyf^0,c
 10492  004D96  EFFC  F026         	goto	l1507
 10493  004D9A                     l7443:
 10494  004D9A  280C               	incf	___fpclassifyf@e^0,w,c
 10495  004D9C  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10496  004D9E  A4D8               	btfss	status,2,c
 10497  004DA0  EFD4  F026         	goto	u9111
 10498  004DA4  EFD6  F026         	goto	u9110
 10499  004DA8                     u9111:
 10500  004DA8  EFF8  F026         	goto	l7449
 10501  004DAC                     u9110:
 10502  004DAC  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10503  004DB0  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10504  004DB4  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10505  004DB8  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10506  004DBC  0E09               	movlw	9
 10507  004DBE                     u9125:
 10508  004DBE  90D8               	bcf	status,0,c
 10509  004DC0  3608               	rlcf	??___fpclassifyf^0,f,c
 10510  004DC2  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
 10511  004DC4  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
 10512  004DC6  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
 10513  004DC8  2EE8               	decfsz	wreg,f,c
 10514  004DCA  EFDF  F026         	goto	u9125
 10515  004DCE  5008               	movf	??___fpclassifyf^0,w,c
 10516  004DD0  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10517  004DD2  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10518  004DD4  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10519  004DD6  B4D8               	btfsc	status,2,c
 10520  004DD8  EFF0  F026         	goto	u9131
 10521  004DDC  EFF3  F026         	goto	u9130
 10522  004DE0                     u9131:
 10523  004DE0  0E01               	movlw	1
 10524  004DE2  EFF4  F026         	goto	u9140
 10525  004DE6                     u9130:
 10526  004DE6  0E00               	movlw	0
 10527  004DE8                     u9140:
 10528  004DE8  6E04               	movwf	?___fpclassifyf^0,c
 10529  004DEA  6A05               	clrf	(?___fpclassifyf+1)^0,c
 10530  004DEC  EFFC  F026         	goto	l1507
 10531  004DF0                     l7449:
 10532  004DF0  0E00               	movlw	0
 10533  004DF2  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10534  004DF4  0E04               	movlw	4
 10535  004DF6  6E04               	movwf	?___fpclassifyf^0,c
 10536  004DF8                     l1507:
 10537  004DF8  0012               	return		;funcret
 10538  004DFA                     __end_of___fpclassifyf:
 10539                           	opt callstack 0
 10540                           
 10541 ;; *************** function ___fltol *****************
 10542 ;; Defined at:
 10543 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  f1              4    3[COMRAM] int 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  exp1            1   12[COMRAM] unsigned char 
 10548 ;;  sign1           1   11[COMRAM] unsigned char 
 10549 ;; Return value:  Size  Location     Type
 10550 ;;                  4    3[COMRAM] long 
 10551 ;; Registers used:
 10552 ;;		wreg, status,2, status,0
 10553 ;; Tracked objects:
 10554 ;;		On entry : 0/0
 10555 ;;		On exit  : 0/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10560 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10561 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10562 ;;Total ram usage:       10 bytes
 10563 ;; Hardware stack levels used:    1
 10564 ;; Hardware stack levels required when called:    4
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_efgtoa
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           	psect	text21
 10573  004AF2                     __ptext21:
 10574                           	opt callstack 0
 10575  004AF2                     ___fltol:
 10576                           	opt callstack 21
 10577  004AF2  3406               	rlcf	(___fltol@f1+2)^0,w,c
 10578  004AF4  3407               	rlcf	(___fltol@f1+3)^0,w,c
 10579  004AF6  6E0D               	movwf	___fltol@exp1^0,c
 10580  004AF8  500D               	movf	___fltol@exp1^0,w,c
 10581  004AFA  A4D8               	btfss	status,2,c
 10582  004AFC  EF82  F025         	goto	u10131
 10583  004B00  EF84  F025         	goto	u10130
 10584  004B04                     u10131:
 10585  004B04  EF8E  F025         	goto	l8005
 10586  004B08                     u10130:
 10587  004B08                     l8001:
 10588  004B08  0E00               	movlw	0
 10589  004B0A  6E04               	movwf	?___fltol^0,c
 10590  004B0C  0E00               	movlw	0
 10591  004B0E  6E05               	movwf	(?___fltol+1)^0,c
 10592  004B10  0E00               	movlw	0
 10593  004B12  6E06               	movwf	(?___fltol+2)^0,c
 10594  004B14  0E00               	movlw	0
 10595  004B16  6E07               	movwf	(?___fltol+3)^0,c
 10596  004B18  EFFB  F025         	goto	l1123
 10597  004B1C                     l8005:
 10598  004B1C  C004  F008         	movff	___fltol@f1,??___fltol
 10599  004B20  C005  F009         	movff	___fltol@f1+1,??___fltol+1
 10600  004B24  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
 10601  004B28  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
 10602  004B2C  0E20               	movlw	32
 10603  004B2E  EF9E  F025         	goto	u10140
 10604  004B32                     u10145:
 10605  004B32  90D8               	bcf	status,0,c
 10606  004B34  320B               	rrcf	(??___fltol+3)^0,f,c
 10607  004B36  320A               	rrcf	(??___fltol+2)^0,f,c
 10608  004B38  3209               	rrcf	(??___fltol+1)^0,f,c
 10609  004B3A  3208               	rrcf	??___fltol^0,f,c
 10610  004B3C                     u10140:
 10611  004B3C  2EE8               	decfsz	wreg,f,c
 10612  004B3E  EF99  F025         	goto	u10145
 10613  004B42  5008               	movf	??___fltol^0,w,c
 10614  004B44  6E0C               	movwf	___fltol@sign1^0,c
 10615  004B46  8E06               	bsf	(___fltol@f1+2)^0,7,c
 10616  004B48  0EFF               	movlw	255
 10617  004B4A  1604               	andwf	___fltol@f1^0,f,c
 10618  004B4C  0EFF               	movlw	255
 10619  004B4E  1605               	andwf	(___fltol@f1+1)^0,f,c
 10620  004B50  0EFF               	movlw	255
 10621  004B52  1606               	andwf	(___fltol@f1+2)^0,f,c
 10622  004B54  0E00               	movlw	0
 10623  004B56  1607               	andwf	(___fltol@f1+3)^0,f,c
 10624  004B58  0E96               	movlw	150
 10625  004B5A  5E0D               	subwf	___fltol@exp1^0,f,c
 10626  004B5C  BE0D               	btfsc	___fltol@exp1^0,7,c
 10627  004B5E  EFB5  F025         	goto	u10150
 10628  004B62  EFB3  F025         	goto	u10151
 10629  004B66                     u10151:
 10630  004B66  EFCB  F025         	goto	l8025
 10631  004B6A                     u10150:
 10632  004B6A  500D               	movf	___fltol@exp1^0,w,c
 10633  004B6C  0A80               	xorlw	128
 10634  004B6E  0F97               	addlw	151
 10635  004B70  B0D8               	btfsc	status,0,c
 10636  004B72  EFBD  F025         	goto	u10161
 10637  004B76  EFBF  F025         	goto	u10160
 10638  004B7A                     u10161:
 10639  004B7A  EFC1  F025         	goto	l8021
 10640  004B7E                     u10160:
 10641  004B7E  EF84  F025         	goto	l8001
 10642  004B82                     l8021:
 10643  004B82  90D8               	bcf	status,0,c
 10644  004B84  3207               	rrcf	(___fltol@f1+3)^0,f,c
 10645  004B86  3206               	rrcf	(___fltol@f1+2)^0,f,c
 10646  004B88  3205               	rrcf	(___fltol@f1+1)^0,f,c
 10647  004B8A  3204               	rrcf	___fltol@f1^0,f,c
 10648  004B8C  3E0D               	incfsz	___fltol@exp1^0,f,c
 10649  004B8E  EFC1  F025         	goto	l8021
 10650  004B92  EFE3  F025         	goto	l8035
 10651  004B96                     l8025:
 10652  004B96  0E1F               	movlw	31
 10653  004B98  640D               	cpfsgt	___fltol@exp1^0,c
 10654  004B9A  EFD1  F025         	goto	u10171
 10655  004B9E  EFD3  F025         	goto	u10170
 10656  004BA2                     u10171:
 10657  004BA2  EFDB  F025         	goto	l8033
 10658  004BA6                     u10170:
 10659  004BA6  EF84  F025         	goto	l8001
 10660  004BAA                     l8031:
 10661  004BAA  90D8               	bcf	status,0,c
 10662  004BAC  3604               	rlcf	___fltol@f1^0,f,c
 10663  004BAE  3605               	rlcf	(___fltol@f1+1)^0,f,c
 10664  004BB0  3606               	rlcf	(___fltol@f1+2)^0,f,c
 10665  004BB2  3607               	rlcf	(___fltol@f1+3)^0,f,c
 10666  004BB4  060D               	decf	___fltol@exp1^0,f,c
 10667  004BB6                     l8033:
 10668  004BB6  500D               	movf	___fltol@exp1^0,w,c
 10669  004BB8  A4D8               	btfss	status,2,c
 10670  004BBA  EFE1  F025         	goto	u10181
 10671  004BBE  EFE3  F025         	goto	u10180
 10672  004BC2                     u10181:
 10673  004BC2  EFD5  F025         	goto	l8031
 10674  004BC6                     u10180:
 10675  004BC6                     l8035:
 10676  004BC6  500C               	movf	___fltol@sign1^0,w,c
 10677  004BC8  B4D8               	btfsc	status,2,c
 10678  004BCA  EFE9  F025         	goto	u10191
 10679  004BCE  EFEB  F025         	goto	u10190
 10680  004BD2                     u10191:
 10681  004BD2  EFF3  F025         	goto	l8039
 10682  004BD6                     u10190:
 10683  004BD6  1E07               	comf	(___fltol@f1+3)^0,f,c
 10684  004BD8  1E06               	comf	(___fltol@f1+2)^0,f,c
 10685  004BDA  1E05               	comf	(___fltol@f1+1)^0,f,c
 10686  004BDC  6C04               	negf	___fltol@f1^0,c
 10687  004BDE  0E00               	movlw	0
 10688  004BE0  2205               	addwfc	(___fltol@f1+1)^0,f,c
 10689  004BE2  2206               	addwfc	(___fltol@f1+2)^0,f,c
 10690  004BE4  2207               	addwfc	(___fltol@f1+3)^0,f,c
 10691  004BE6                     l8039:
 10692  004BE6  C004  F004         	movff	___fltol@f1,?___fltol
 10693  004BEA  C005  F005         	movff	___fltol@f1+1,?___fltol+1
 10694  004BEE  C006  F006         	movff	___fltol@f1+2,?___fltol+2
 10695  004BF2  C007  F007         	movff	___fltol@f1+3,?___fltol+3
 10696  004BF6                     l1123:
 10697  004BF6  0012               	return		;funcret
 10698  004BF8                     __end_of___fltol:
 10699                           	opt callstack 0
 10700                           
 10701 ;; *************** function ___flsub *****************
 10702 ;; Defined at:
 10703 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  b               4   42[COMRAM] long 
 10706 ;;  a               4   46[COMRAM] long 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  4   42[COMRAM] long 
 10711 ;; Registers used:
 10712 ;;		wreg, status,2, status,0, cstack
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10718 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10722 ;;Total ram usage:        8 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    5
 10725 ;; This function calls:
 10726 ;;		___fladd
 10727 ;; This function is called by:
 10728 ;;		_efgtoa
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	text22
 10733  00579E                     __ptext22:
 10734                           	opt callstack 0
 10735  00579E                     ___flsub:
 10736                           	opt callstack 20
 10737  00579E  0E00               	movlw	0
 10738  0057A0  1A2F               	xorwf	___flsub@a^0,f,c
 10739  0057A2  0E00               	movlw	0
 10740  0057A4  1A30               	xorwf	(___flsub@a+1)^0,f,c
 10741  0057A6  0E00               	movlw	0
 10742  0057A8  1A31               	xorwf	(___flsub@a+2)^0,f,c
 10743  0057AA  0E80               	movlw	128
 10744  0057AC  1A32               	xorwf	(___flsub@a+3)^0,f,c
 10745  0057AE  C02B  F004         	movff	___flsub@b,___fladd@b
 10746  0057B2  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
 10747  0057B6  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
 10748  0057BA  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
 10749  0057BE  C02F  F008         	movff	___flsub@a,___fladd@a
 10750  0057C2  C030  F009         	movff	___flsub@a+1,___fladd@a+1
 10751  0057C6  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
 10752  0057CA  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
 10753  0057CE  EC7D  F010         	call	___fladd	;wreg free
 10754  0057D2  C004  F02B         	movff	?___fladd,?___flsub
 10755  0057D6  C005  F02C         	movff	?___fladd+1,?___flsub+1
 10756  0057DA  C006  F02D         	movff	?___fladd+2,?___flsub+2
 10757  0057DE  C007  F02E         	movff	?___fladd+3,?___flsub+3
 10758  0057E2  0012               	return		;funcret
 10759  0057E4                     __end_of___flsub:
 10760                           	opt callstack 0
 10761                           
 10762 ;; *************** function ___fladd *****************
 10763 ;; Defined at:
 10764 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;  b               4    3[COMRAM] long 
 10767 ;;  a               4    7[COMRAM] long 
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  grs             1   18[COMRAM] unsigned char 
 10770 ;;  bexp            1   17[COMRAM] unsigned char 
 10771 ;;  aexp            1   16[COMRAM] unsigned char 
 10772 ;;  signs           1   15[COMRAM] unsigned char 
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  4    3[COMRAM] unsigned char 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10782 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10783 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10785 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10786 ;;Total ram usage:       16 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; Hardware stack levels required when called:    4
 10789 ;; This function calls:
 10790 ;;		Nothing
 10791 ;; This function is called by:
 10792 ;;		_efgtoa
 10793 ;;		___flsub
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text23
 10798  0020FA                     __ptext23:
 10799                           	opt callstack 0
 10800  0020FA                     ___fladd:
 10801                           	opt callstack 20
 10802  0020FA  5007               	movf	(___fladd@b+3)^0,w,c
 10803  0020FC  0B80               	andlw	128
 10804  0020FE  6E10               	movwf	___fladd@signs^0,c
 10805  002100  5007               	movf	(___fladd@b+3)^0,w,c
 10806  002102  2407               	addwf	(___fladd@b+3)^0,w,c
 10807  002104  6E12               	movwf	___fladd@bexp^0,c
 10808  002106  AE06               	btfss	(___fladd@b+2)^0,7,c
 10809  002108  EF88  F010         	goto	u8621
 10810  00210C  EF8A  F010         	goto	u8620
 10811  002110                     u8621:
 10812  002110  EF8B  F010         	goto	l7205
 10813  002114                     u8620:
 10814  002114  8012               	bsf	___fladd@bexp^0,0,c
 10815  002116                     l7205:
 10816  002116  5012               	movf	___fladd@bexp^0,w,c
 10817  002118  B4D8               	btfsc	status,2,c
 10818  00211A  EF91  F010         	goto	u8631
 10819  00211E  EF93  F010         	goto	u8630
 10820  002122                     u8631:
 10821  002122  EFA8  F010         	goto	l7215
 10822  002126                     u8630:
 10823  002126  2812               	incf	___fladd@bexp^0,w,c
 10824  002128  A4D8               	btfss	status,2,c
 10825  00212A  EF99  F010         	goto	u8641
 10826  00212E  EF9B  F010         	goto	u8640
 10827  002132                     u8641:
 10828  002132  EFA3  F010         	goto	l7211
 10829  002136                     u8640:
 10830  002136  0E00               	movlw	0
 10831  002138  6E04               	movwf	___fladd@b^0,c
 10832  00213A  0E00               	movlw	0
 10833  00213C  6E05               	movwf	(___fladd@b+1)^0,c
 10834  00213E  0E00               	movlw	0
 10835  002140  6E06               	movwf	(___fladd@b+2)^0,c
 10836  002142  0E00               	movlw	0
 10837  002144  6E07               	movwf	(___fladd@b+3)^0,c
 10838  002146                     l7211:
 10839  002146  8E06               	bsf	(___fladd@b+2)^0,7,c
 10840  002148  0E00               	movlw	0
 10841  00214A  6E07               	movwf	(___fladd@b+3)^0,c
 10842  00214C  EFB0  F010         	goto	l7217
 10843  002150                     l7215:
 10844  002150  0E00               	movlw	0
 10845  002152  6E04               	movwf	___fladd@b^0,c
 10846  002154  0E00               	movlw	0
 10847  002156  6E05               	movwf	(___fladd@b+1)^0,c
 10848  002158  0E00               	movlw	0
 10849  00215A  6E06               	movwf	(___fladd@b+2)^0,c
 10850  00215C  0E00               	movlw	0
 10851  00215E  6E07               	movwf	(___fladd@b+3)^0,c
 10852  002160                     l7217:
 10853  002160  500B               	movf	(___fladd@a+3)^0,w,c
 10854  002162  0B80               	andlw	128
 10855  002164  6E11               	movwf	___fladd@aexp^0,c
 10856  002166  5010               	movf	___fladd@signs^0,w,c
 10857  002168  1811               	xorwf	___fladd@aexp^0,w,c
 10858  00216A  B4D8               	btfsc	status,2,c
 10859  00216C  EFBA  F010         	goto	u8651
 10860  002170  EFBC  F010         	goto	u8650
 10861  002174                     u8651:
 10862  002174  EFBD  F010         	goto	l7223
 10863  002178                     u8650:
 10864  002178  8C10               	bsf	___fladd@signs^0,6,c
 10865  00217A                     l7223:
 10866  00217A  500B               	movf	(___fladd@a+3)^0,w,c
 10867  00217C  240B               	addwf	(___fladd@a+3)^0,w,c
 10868  00217E  6E11               	movwf	___fladd@aexp^0,c
 10869  002180  AE0A               	btfss	(___fladd@a+2)^0,7,c
 10870  002182  EFC5  F010         	goto	u8661
 10871  002186  EFC7  F010         	goto	u8660
 10872  00218A                     u8661:
 10873  00218A  EFC8  F010         	goto	l7229
 10874  00218E                     u8660:
 10875  00218E  8011               	bsf	___fladd@aexp^0,0,c
 10876  002190                     l7229:
 10877  002190  5011               	movf	___fladd@aexp^0,w,c
 10878  002192  B4D8               	btfsc	status,2,c
 10879  002194  EFCE  F010         	goto	u8671
 10880  002198  EFD0  F010         	goto	u8670
 10881  00219C                     u8671:
 10882  00219C  EFE5  F010         	goto	l7239
 10883  0021A0                     u8670:
 10884  0021A0  2811               	incf	___fladd@aexp^0,w,c
 10885  0021A2  A4D8               	btfss	status,2,c
 10886  0021A4  EFD6  F010         	goto	u8681
 10887  0021A8  EFD8  F010         	goto	u8680
 10888  0021AC                     u8681:
 10889  0021AC  EFE0  F010         	goto	l7235
 10890  0021B0                     u8680:
 10891  0021B0  0E00               	movlw	0
 10892  0021B2  6E08               	movwf	___fladd@a^0,c
 10893  0021B4  0E00               	movlw	0
 10894  0021B6  6E09               	movwf	(___fladd@a+1)^0,c
 10895  0021B8  0E00               	movlw	0
 10896  0021BA  6E0A               	movwf	(___fladd@a+2)^0,c
 10897  0021BC  0E00               	movlw	0
 10898  0021BE  6E0B               	movwf	(___fladd@a+3)^0,c
 10899  0021C0                     l7235:
 10900  0021C0  8E0A               	bsf	(___fladd@a+2)^0,7,c
 10901  0021C2  0E00               	movlw	0
 10902  0021C4  6E0B               	movwf	(___fladd@a+3)^0,c
 10903  0021C6  EFED  F010         	goto	l7241
 10904  0021CA                     l7239:
 10905  0021CA  0E00               	movlw	0
 10906  0021CC  6E08               	movwf	___fladd@a^0,c
 10907  0021CE  0E00               	movlw	0
 10908  0021D0  6E09               	movwf	(___fladd@a+1)^0,c
 10909  0021D2  0E00               	movlw	0
 10910  0021D4  6E0A               	movwf	(___fladd@a+2)^0,c
 10911  0021D6  0E00               	movlw	0
 10912  0021D8  6E0B               	movwf	(___fladd@a+3)^0,c
 10913  0021DA                     l7241:
 10914  0021DA  5012               	movf	___fladd@bexp^0,w,c
 10915  0021DC  5C11               	subwf	___fladd@aexp^0,w,c
 10916  0021DE  B0D8               	btfsc	status,0,c
 10917  0021E0  EFF4  F010         	goto	u8691
 10918  0021E4  EFF6  F010         	goto	u8690
 10919  0021E8                     u8691:
 10920  0021E8  EF1D  F011         	goto	l7277
 10921  0021EC                     u8690:
 10922  0021EC  AC10               	btfss	___fladd@signs^0,6,c
 10923  0021EE  EFFB  F010         	goto	u8701
 10924  0021F2  EFFD  F010         	goto	u8700
 10925  0021F6                     u8701:
 10926  0021F6  EFFF  F010         	goto	l7247
 10927  0021FA                     u8700:
 10928  0021FA  0E80               	movlw	128
 10929  0021FC  1A10               	xorwf	___fladd@signs^0,f,c
 10930  0021FE                     l7247:
 10931  0021FE  C012  F013         	movff	___fladd@bexp,___fladd@grs
 10932  002202  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 10933  002206  C013  F011         	movff	___fladd@grs,___fladd@aexp
 10934  00220A  C004  F013         	movff	___fladd@b,___fladd@grs
 10935  00220E  C008  F004         	movff	___fladd@a,___fladd@b
 10936  002212  C013  F008         	movff	___fladd@grs,___fladd@a
 10937  002216  C005  F013         	movff	___fladd@b+1,___fladd@grs
 10938  00221A  C009  F005         	movff	___fladd@a+1,___fladd@b+1
 10939  00221E  C013  F009         	movff	___fladd@grs,___fladd@a+1
 10940  002222  C006  F013         	movff	___fladd@b+2,___fladd@grs
 10941  002226  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
 10942  00222A  C013  F00A         	movff	___fladd@grs,___fladd@a+2
 10943  00222E  C007  F013         	movff	___fladd@b+3,___fladd@grs
 10944  002232  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
 10945  002236  C013  F00B         	movff	___fladd@grs,___fladd@a+3
 10946  00223A                     l7277:
 10947  00223A  0E00               	movlw	0
 10948  00223C  6E13               	movwf	___fladd@grs^0,c
 10949  00223E  5012               	movf	___fladd@bexp^0,w,c
 10950  002240  C011  F00C         	movff	___fladd@aexp,??___fladd
 10951  002244  6A0D               	clrf	(??___fladd+1)^0,c
 10952  002246  5E0C               	subwf	??___fladd^0,f,c
 10953  002248  0E00               	movlw	0
 10954  00224A  5A0D               	subwfb	(??___fladd+1)^0,f,c
 10955  00224C  BE0D               	btfsc	(??___fladd+1)^0,7,c
 10956  00224E  EF32  F011         	goto	u8711
 10957  002252  500D               	movf	(??___fladd+1)^0,w,c
 10958  002254  E109               	bnz	u8710
 10959  002256  0E1A               	movlw	26
 10960  002258  5C0C               	subwf	??___fladd^0,w,c
 10961  00225A  A0D8               	btfss	status,0,c
 10962  00225C  EF32  F011         	goto	u8711
 10963  002260  EF34  F011         	goto	u8710
 10964  002264                     u8711:
 10965  002264  EF6B  F011         	goto	l1355
 10966  002268                     u8710:
 10967  002268  5004               	movf	___fladd@b^0,w,c
 10968  00226A  1005               	iorwf	(___fladd@b+1)^0,w,c
 10969  00226C  1006               	iorwf	(___fladd@b+2)^0,w,c
 10970  00226E  1007               	iorwf	(___fladd@b+3)^0,w,c
 10971  002270  A4D8               	btfss	status,2,c
 10972  002272  EF3D  F011         	goto	u8721
 10973  002276  EF40  F011         	goto	u8720
 10974  00227A                     u8721:
 10975  00227A  0E01               	movlw	1
 10976  00227C  EF41  F011         	goto	u8730
 10977  002280                     u8720:
 10978  002280  0E00               	movlw	0
 10979  002282                     u8730:
 10980  002282  6E13               	movwf	___fladd@grs^0,c
 10981  002284  0E00               	movlw	0
 10982  002286  6E04               	movwf	___fladd@b^0,c
 10983  002288  0E00               	movlw	0
 10984  00228A  6E05               	movwf	(___fladd@b+1)^0,c
 10985  00228C  0E00               	movlw	0
 10986  00228E  6E06               	movwf	(___fladd@b+2)^0,c
 10987  002290  0E00               	movlw	0
 10988  002292  6E07               	movwf	(___fladd@b+3)^0,c
 10989  002294  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 10990  002298  EF74  F011         	goto	l1354
 10991  00229C                     l1356:
 10992  00229C  A013               	btfss	___fladd@grs^0,0,c
 10993  00229E  EF53  F011         	goto	u8741
 10994  0022A2  EF55  F011         	goto	u8740
 10995  0022A6                     u8741:
 10996  0022A6  EF5B  F011         	goto	l7289
 10997  0022AA                     u8740:
 10998  0022AA  90D8               	bcf	status,0,c
 10999  0022AC  3013               	rrcf	___fladd@grs^0,w,c
 11000  0022AE  0901               	iorlw	1
 11001  0022B0  6E13               	movwf	___fladd@grs^0,c
 11002  0022B2  EF5D  F011         	goto	l7291
 11003  0022B6                     l7289:
 11004  0022B6  90D8               	bcf	status,0,c
 11005  0022B8  3213               	rrcf	___fladd@grs^0,f,c
 11006  0022BA                     l7291:
 11007  0022BA  A004               	btfss	___fladd@b^0,0,c
 11008  0022BC  EF62  F011         	goto	u8751
 11009  0022C0  EF64  F011         	goto	u8750
 11010  0022C4                     u8751:
 11011  0022C4  EF65  F011         	goto	l7295
 11012  0022C8                     u8750:
 11013  0022C8  8E13               	bsf	___fladd@grs^0,7,c
 11014  0022CA                     l7295:
 11015  0022CA  3407               	rlcf	(___fladd@b+3)^0,w,c
 11016  0022CC  3207               	rrcf	(___fladd@b+3)^0,f,c
 11017  0022CE  3206               	rrcf	(___fladd@b+2)^0,f,c
 11018  0022D0  3205               	rrcf	(___fladd@b+1)^0,f,c
 11019  0022D2  3204               	rrcf	___fladd@b^0,f,c
 11020  0022D4  2A12               	incf	___fladd@bexp^0,f,c
 11021  0022D6                     l1355:
 11022  0022D6  5011               	movf	___fladd@aexp^0,w,c
 11023  0022D8  5C12               	subwf	___fladd@bexp^0,w,c
 11024  0022DA  A0D8               	btfss	status,0,c
 11025  0022DC  EF72  F011         	goto	u8761
 11026  0022E0  EF74  F011         	goto	u8760
 11027  0022E4                     u8761:
 11028  0022E4  EF4E  F011         	goto	l1356
 11029  0022E8                     u8760:
 11030  0022E8                     l1354:
 11031  0022E8  BC10               	btfsc	___fladd@signs^0,6,c
 11032  0022EA  EF79  F011         	goto	u8771
 11033  0022EE  EF7B  F011         	goto	u8770
 11034  0022F2                     u8771:
 11035  0022F2  EFBB  F011         	goto	l7323
 11036  0022F6                     u8770:
 11037  0022F6  5012               	movf	___fladd@bexp^0,w,c
 11038  0022F8  A4D8               	btfss	status,2,c
 11039  0022FA  EF81  F011         	goto	u8781
 11040  0022FE  EF83  F011         	goto	u8780
 11041  002302                     u8781:
 11042  002302  EF8D  F011         	goto	l7305
 11043  002306                     u8780:
 11044  002306  0E00               	movlw	0
 11045  002308  6E04               	movwf	?___fladd^0,c
 11046  00230A  0E00               	movlw	0
 11047  00230C  6E05               	movwf	(?___fladd+1)^0,c
 11048  00230E  0E00               	movlw	0
 11049  002310  6E06               	movwf	(?___fladd+2)^0,c
 11050  002312  0E00               	movlw	0
 11051  002314  6E07               	movwf	(?___fladd+3)^0,c
 11052  002316  EFDC  F012         	goto	l1363
 11053  00231A                     l7305:
 11054  00231A  5008               	movf	___fladd@a^0,w,c
 11055  00231C  2604               	addwf	___fladd@b^0,f,c
 11056  00231E  5009               	movf	(___fladd@a+1)^0,w,c
 11057  002320  2205               	addwfc	(___fladd@b+1)^0,f,c
 11058  002322  500A               	movf	(___fladd@a+2)^0,w,c
 11059  002324  2206               	addwfc	(___fladd@b+2)^0,f,c
 11060  002326  500B               	movf	(___fladd@a+3)^0,w,c
 11061  002328  2207               	addwfc	(___fladd@b+3)^0,f,c
 11062  00232A  A007               	btfss	(___fladd@b+3)^0,0,c
 11063  00232C  EF9A  F011         	goto	u8791
 11064  002330  EF9C  F011         	goto	u8790
 11065  002334                     u8791:
 11066  002334  EF48  F012         	goto	l7359
 11067  002338                     u8790:
 11068  002338  A013               	btfss	___fladd@grs^0,0,c
 11069  00233A  EFA1  F011         	goto	u8801
 11070  00233E  EFA3  F011         	goto	u8800
 11071  002342                     u8801:
 11072  002342  EFA9  F011         	goto	l7313
 11073  002346                     u8800:
 11074  002346  90D8               	bcf	status,0,c
 11075  002348  3013               	rrcf	___fladd@grs^0,w,c
 11076  00234A  0901               	iorlw	1
 11077  00234C  6E13               	movwf	___fladd@grs^0,c
 11078  00234E  EFAB  F011         	goto	l7315
 11079  002352                     l7313:
 11080  002352  90D8               	bcf	status,0,c
 11081  002354  3213               	rrcf	___fladd@grs^0,f,c
 11082  002356                     l7315:
 11083  002356  A004               	btfss	___fladd@b^0,0,c
 11084  002358  EFB0  F011         	goto	u8811
 11085  00235C  EFB2  F011         	goto	u8810
 11086  002360                     u8811:
 11087  002360  EFB3  F011         	goto	l7319
 11088  002364                     u8810:
 11089  002364  8E13               	bsf	___fladd@grs^0,7,c
 11090  002366                     l7319:
 11091  002366  3407               	rlcf	(___fladd@b+3)^0,w,c
 11092  002368  3207               	rrcf	(___fladd@b+3)^0,f,c
 11093  00236A  3206               	rrcf	(___fladd@b+2)^0,f,c
 11094  00236C  3205               	rrcf	(___fladd@b+1)^0,f,c
 11095  00236E  3204               	rrcf	___fladd@b^0,f,c
 11096  002370  2A12               	incf	___fladd@bexp^0,f,c
 11097  002372  EF48  F012         	goto	l7359
 11098  002376                     l7323:
 11099  002376  5008               	movf	___fladd@a^0,w,c
 11100  002378  5C04               	subwf	___fladd@b^0,w,c
 11101  00237A  5009               	movf	(___fladd@a+1)^0,w,c
 11102  00237C  5805               	subwfb	(___fladd@b+1)^0,w,c
 11103  00237E  500A               	movf	(___fladd@a+2)^0,w,c
 11104  002380  5806               	subwfb	(___fladd@b+2)^0,w,c
 11105  002382  5007               	movf	(___fladd@b+3)^0,w,c
 11106  002384  0A80               	xorlw	128
 11107  002386  6E0C               	movwf	??___fladd^0,c
 11108  002388  500B               	movf	(___fladd@a+3)^0,w,c
 11109  00238A  0A80               	xorlw	128
 11110  00238C  580C               	subwfb	??___fladd^0,w,c
 11111  00238E  B0D8               	btfsc	status,0,c
 11112  002390  EFCC  F011         	goto	u8821
 11113  002394  EFCE  F011         	goto	u8820
 11114  002398                     u8821:
 11115  002398  EFF9  F011         	goto	l7333
 11116  00239C                     u8820:
 11117  00239C  5004               	movf	___fladd@b^0,w,c
 11118  00239E  5C08               	subwf	___fladd@a^0,w,c
 11119  0023A0  6E0C               	movwf	??___fladd^0,c
 11120  0023A2  5005               	movf	(___fladd@b+1)^0,w,c
 11121  0023A4  5809               	subwfb	(___fladd@a+1)^0,w,c
 11122  0023A6  6E0D               	movwf	(??___fladd+1)^0,c
 11123  0023A8  5006               	movf	(___fladd@b+2)^0,w,c
 11124  0023AA  580A               	subwfb	(___fladd@a+2)^0,w,c
 11125  0023AC  6E0E               	movwf	(??___fladd+2)^0,c
 11126  0023AE  5007               	movf	(___fladd@b+3)^0,w,c
 11127  0023B0  580B               	subwfb	(___fladd@a+3)^0,w,c
 11128  0023B2  6E0F               	movwf	(??___fladd+3)^0,c
 11129  0023B4  0EFF               	movlw	255
 11130  0023B6  240C               	addwf	??___fladd^0,w,c
 11131  0023B8  6E04               	movwf	___fladd@b^0,c
 11132  0023BA  0EFF               	movlw	255
 11133  0023BC  200D               	addwfc	(??___fladd+1)^0,w,c
 11134  0023BE  6E05               	movwf	(___fladd@b+1)^0,c
 11135  0023C0  0EFF               	movlw	255
 11136  0023C2  200E               	addwfc	(??___fladd+2)^0,w,c
 11137  0023C4  6E06               	movwf	(___fladd@b+2)^0,c
 11138  0023C6  0EFF               	movlw	255
 11139  0023C8  200F               	addwfc	(??___fladd+3)^0,w,c
 11140  0023CA  6E07               	movwf	(___fladd@b+3)^0,c
 11141  0023CC  0E80               	movlw	128
 11142  0023CE  1A10               	xorwf	___fladd@signs^0,f,c
 11143  0023D0  6C13               	negf	___fladd@grs^0,c
 11144  0023D2  5013               	movf	___fladd@grs^0,w,c
 11145  0023D4  A4D8               	btfss	status,2,c
 11146  0023D6  EFEF  F011         	goto	u8831
 11147  0023DA  EFF1  F011         	goto	u8830
 11148  0023DE                     u8831:
 11149  0023DE  EF01  F012         	goto	l1371
 11150  0023E2                     u8830:
 11151  0023E2  0E01               	movlw	1
 11152  0023E4  2604               	addwf	___fladd@b^0,f,c
 11153  0023E6  0E00               	movlw	0
 11154  0023E8  2205               	addwfc	(___fladd@b+1)^0,f,c
 11155  0023EA  2206               	addwfc	(___fladd@b+2)^0,f,c
 11156  0023EC  2207               	addwfc	(___fladd@b+3)^0,f,c
 11157  0023EE  EF01  F012         	goto	l1371
 11158  0023F2                     l7333:
 11159  0023F2  5008               	movf	___fladd@a^0,w,c
 11160  0023F4  5E04               	subwf	___fladd@b^0,f,c
 11161  0023F6  5009               	movf	(___fladd@a+1)^0,w,c
 11162  0023F8  5A05               	subwfb	(___fladd@b+1)^0,f,c
 11163  0023FA  500A               	movf	(___fladd@a+2)^0,w,c
 11164  0023FC  5A06               	subwfb	(___fladd@b+2)^0,f,c
 11165  0023FE  500B               	movf	(___fladd@a+3)^0,w,c
 11166  002400  5A07               	subwfb	(___fladd@b+3)^0,f,c
 11167  002402                     l1371:
 11168  002402  5004               	movf	___fladd@b^0,w,c
 11169  002404  1005               	iorwf	(___fladd@b+1)^0,w,c
 11170  002406  1006               	iorwf	(___fladd@b+2)^0,w,c
 11171  002408  1007               	iorwf	(___fladd@b+3)^0,w,c
 11172  00240A  A4D8               	btfss	status,2,c
 11173  00240C  EF0A  F012         	goto	u8841
 11174  002410  EF0C  F012         	goto	u8840
 11175  002414                     u8841:
 11176  002414  EF41  F012         	goto	l7357
 11177  002418                     u8840:
 11178  002418  5013               	movf	___fladd@grs^0,w,c
 11179  00241A  A4D8               	btfss	status,2,c
 11180  00241C  EF12  F012         	goto	u8851
 11181  002420  EF14  F012         	goto	u8850
 11182  002424                     u8851:
 11183  002424  EF41  F012         	goto	l7357
 11184  002428                     u8850:
 11185  002428  0E00               	movlw	0
 11186  00242A  6E04               	movwf	?___fladd^0,c
 11187  00242C  0E00               	movlw	0
 11188  00242E  6E05               	movwf	(?___fladd+1)^0,c
 11189  002430  0E00               	movlw	0
 11190  002432  6E06               	movwf	(?___fladd+2)^0,c
 11191  002434  0E00               	movlw	0
 11192  002436  6E07               	movwf	(?___fladd+3)^0,c
 11193  002438  EFDC  F012         	goto	l1363
 11194  00243C                     l7341:
 11195  00243C  90D8               	bcf	status,0,c
 11196  00243E  3604               	rlcf	___fladd@b^0,f,c
 11197  002440  3605               	rlcf	(___fladd@b+1)^0,f,c
 11198  002442  3606               	rlcf	(___fladd@b+2)^0,f,c
 11199  002444  3607               	rlcf	(___fladd@b+3)^0,f,c
 11200  002446  AE13               	btfss	___fladd@grs^0,7,c
 11201  002448  EF28  F012         	goto	u8861
 11202  00244C  EF2A  F012         	goto	u8860
 11203  002450                     u8861:
 11204  002450  EF2B  F012         	goto	l7347
 11205  002454                     u8860:
 11206  002454  8004               	bsf	___fladd@b^0,0,c
 11207  002456                     l7347:
 11208  002456  A013               	btfss	___fladd@grs^0,0,c
 11209  002458  EF30  F012         	goto	u8871
 11210  00245C  EF32  F012         	goto	u8870
 11211  002460                     u8871:
 11212  002460  EF36  F012         	goto	l7351
 11213  002464                     u8870:
 11214  002464  80D8               	bsf	status,0,c
 11215  002466  3613               	rlcf	___fladd@grs^0,f,c
 11216  002468  EF38  F012         	goto	l7353
 11217  00246C                     l7351:
 11218  00246C  90D8               	bcf	status,0,c
 11219  00246E  3613               	rlcf	___fladd@grs^0,f,c
 11220  002470                     l7353:
 11221  002470  5012               	movf	___fladd@bexp^0,w,c
 11222  002472  B4D8               	btfsc	status,2,c
 11223  002474  EF3E  F012         	goto	u8881
 11224  002478  EF40  F012         	goto	u8880
 11225  00247C                     u8881:
 11226  00247C  EF41  F012         	goto	l7357
 11227  002480                     u8880:
 11228  002480  0612               	decf	___fladd@bexp^0,f,c
 11229  002482                     l7357:
 11230  002482  AE06               	btfss	(___fladd@b+2)^0,7,c
 11231  002484  EF46  F012         	goto	u8891
 11232  002488  EF48  F012         	goto	u8890
 11233  00248C                     u8891:
 11234  00248C  EF1E  F012         	goto	l7341
 11235  002490                     u8890:
 11236  002490                     l7359:
 11237  002490  0E00               	movlw	0
 11238  002492  6E11               	movwf	___fladd@aexp^0,c
 11239  002494  AE13               	btfss	___fladd@grs^0,7,c
 11240  002496  EF4F  F012         	goto	u8901
 11241  00249A  EF51  F012         	goto	u8900
 11242  00249E                     u8901:
 11243  00249E  EF69  F012         	goto	l1380
 11244  0024A2                     u8900:
 11245  0024A2  C013  F00C         	movff	___fladd@grs,??___fladd
 11246  0024A6  0E7F               	movlw	127
 11247  0024A8  160C               	andwf	??___fladd^0,f,c
 11248  0024AA  B4D8               	btfsc	status,2,c
 11249  0024AC  EF5A  F012         	goto	u8911
 11250  0024B0  EF5C  F012         	goto	u8910
 11251  0024B4                     u8911:
 11252  0024B4  EF60  F012         	goto	l1381
 11253  0024B8                     u8910:
 11254  0024B8                     l7365:
 11255  0024B8  0E01               	movlw	1
 11256  0024BA  6E11               	movwf	___fladd@aexp^0,c
 11257  0024BC  EF69  F012         	goto	l1380
 11258  0024C0                     l1381:
 11259  0024C0  A004               	btfss	___fladd@b^0,0,c
 11260  0024C2  EF65  F012         	goto	u8921
 11261  0024C6  EF67  F012         	goto	u8920
 11262  0024CA                     u8921:
 11263  0024CA  EF69  F012         	goto	l1380
 11264  0024CE                     u8920:
 11265  0024CE  EF5C  F012         	goto	l7365
 11266  0024D2                     l1380:
 11267  0024D2  5011               	movf	___fladd@aexp^0,w,c
 11268  0024D4  B4D8               	btfsc	status,2,c
 11269  0024D6  EF6F  F012         	goto	u8931
 11270  0024DA  EF71  F012         	goto	u8930
 11271  0024DE                     u8931:
 11272  0024DE  EF9C  F012         	goto	l7377
 11273  0024E2                     u8930:
 11274  0024E2  0E01               	movlw	1
 11275  0024E4  2604               	addwf	___fladd@b^0,f,c
 11276  0024E6  0E00               	movlw	0
 11277  0024E8  2205               	addwfc	(___fladd@b+1)^0,f,c
 11278  0024EA  2206               	addwfc	(___fladd@b+2)^0,f,c
 11279  0024EC  2207               	addwfc	(___fladd@b+3)^0,f,c
 11280  0024EE  A007               	btfss	(___fladd@b+3)^0,0,c
 11281  0024F0  EF7C  F012         	goto	u8941
 11282  0024F4  EF7E  F012         	goto	u8940
 11283  0024F8                     u8941:
 11284  0024F8  EF9C  F012         	goto	l7377
 11285  0024FC                     u8940:
 11286  0024FC  C004  F00C         	movff	___fladd@b,??___fladd
 11287  002500  C005  F00D         	movff	___fladd@b+1,??___fladd+1
 11288  002504  C006  F00E         	movff	___fladd@b+2,??___fladd+2
 11289  002508  C007  F00F         	movff	___fladd@b+3,??___fladd+3
 11290  00250C  340F               	rlcf	(??___fladd+3)^0,w,c
 11291  00250E  320F               	rrcf	(??___fladd+3)^0,f,c
 11292  002510  320E               	rrcf	(??___fladd+2)^0,f,c
 11293  002512  320D               	rrcf	(??___fladd+1)^0,f,c
 11294  002514  320C               	rrcf	??___fladd^0,f,c
 11295  002516  C00C  F004         	movff	??___fladd,___fladd@b
 11296  00251A  C00D  F005         	movff	??___fladd+1,___fladd@b+1
 11297  00251E  C00E  F006         	movff	??___fladd+2,___fladd@b+2
 11298  002522  C00F  F007         	movff	??___fladd+3,___fladd@b+3
 11299  002526  2812               	incf	___fladd@bexp^0,w,c
 11300  002528  B4D8               	btfsc	status,2,c
 11301  00252A  EF99  F012         	goto	u8951
 11302  00252E  EF9B  F012         	goto	u8950
 11303  002532                     u8951:
 11304  002532  EF9C  F012         	goto	l7377
 11305  002536                     u8950:
 11306  002536  2A12               	incf	___fladd@bexp^0,f,c
 11307  002538                     l7377:
 11308  002538  2812               	incf	___fladd@bexp^0,w,c
 11309  00253A  B4D8               	btfsc	status,2,c
 11310  00253C  EFA2  F012         	goto	u8961
 11311  002540  EFA4  F012         	goto	u8960
 11312  002544                     u8961:
 11313  002544  EFAC  F012         	goto	l7381
 11314  002548                     u8960:
 11315  002548  5012               	movf	___fladd@bexp^0,w,c
 11316  00254A  A4D8               	btfss	status,2,c
 11317  00254C  EFAA  F012         	goto	u8971
 11318  002550  EFAC  F012         	goto	u8970
 11319  002554                     u8971:
 11320  002554  EFBE  F012         	goto	l7385
 11321  002558                     u8970:
 11322  002558                     l7381:
 11323  002558  0E00               	movlw	0
 11324  00255A  6E04               	movwf	___fladd@b^0,c
 11325  00255C  0E00               	movlw	0
 11326  00255E  6E05               	movwf	(___fladd@b+1)^0,c
 11327  002560  0E00               	movlw	0
 11328  002562  6E06               	movwf	(___fladd@b+2)^0,c
 11329  002564  0E00               	movlw	0
 11330  002566  6E07               	movwf	(___fladd@b+3)^0,c
 11331  002568  5012               	movf	___fladd@bexp^0,w,c
 11332  00256A  A4D8               	btfss	status,2,c
 11333  00256C  EFBA  F012         	goto	u8981
 11334  002570  EFBC  F012         	goto	u8980
 11335  002574                     u8981:
 11336  002574  EFBE  F012         	goto	l7385
 11337  002578                     u8980:
 11338  002578  0E00               	movlw	0
 11339  00257A  6E10               	movwf	___fladd@signs^0,c
 11340  00257C                     l7385:
 11341  00257C  A012               	btfss	___fladd@bexp^0,0,c
 11342  00257E  EFC3  F012         	goto	u8991
 11343  002582  EFC5  F012         	goto	u8990
 11344  002586                     u8991:
 11345  002586  EFC8  F012         	goto	l7389
 11346  00258A                     u8990:
 11347  00258A  8E06               	bsf	(___fladd@b+2)^0,7,c
 11348  00258C  EFC9  F012         	goto	l7391
 11349  002590                     l7389:
 11350  002590  9E06               	bcf	(___fladd@b+2)^0,7,c
 11351  002592                     l7391:
 11352  002592  90D8               	bcf	status,0,c
 11353  002594  3012               	rrcf	___fladd@bexp^0,w,c
 11354  002596  6E07               	movwf	(___fladd@b+3)^0,c
 11355  002598  AE10               	btfss	___fladd@signs^0,7,c
 11356  00259A  EFD1  F012         	goto	u9001
 11357  00259E  EFD3  F012         	goto	u9000
 11358  0025A2                     u9001:
 11359  0025A2  EFD4  F012         	goto	l7397
 11360  0025A6                     u9000:
 11361  0025A6  8E07               	bsf	(___fladd@b+3)^0,7,c
 11362  0025A8                     l7397:
 11363  0025A8  C004  F004         	movff	___fladd@b,?___fladd
 11364  0025AC  C005  F005         	movff	___fladd@b+1,?___fladd+1
 11365  0025B0  C006  F006         	movff	___fladd@b+2,?___fladd+2
 11366  0025B4  C007  F007         	movff	___fladd@b+3,?___fladd+3
 11367  0025B8                     l1363:
 11368  0025B8  0012               	return		;funcret
 11369  0025BA                     __end_of___fladd:
 11370                           	opt callstack 0
 11371                           
 11372 ;; *************** function ___flneg *****************
 11373 ;; Defined at:
 11374 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  f1              4    3[COMRAM] unsigned char 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  4    3[COMRAM] unsigned char 
 11381 ;; Registers used:
 11382 ;;		wreg, status,2, status,0
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;Total ram usage:        4 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:    4
 11395 ;; This function calls:
 11396 ;;		Nothing
 11397 ;; This function is called by:
 11398 ;;		_efgtoa
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text24
 11403  0059D6                     __ptext24:
 11404                           	opt callstack 0
 11405  0059D6                     ___flneg:
 11406                           	opt callstack 21
 11407  0059D6  5004               	movf	___flneg@f1^0,w,c
 11408  0059D8  1005               	iorwf	(___flneg@f1+1)^0,w,c
 11409  0059DA  1006               	iorwf	(___flneg@f1+2)^0,w,c
 11410  0059DC  1007               	iorwf	(___flneg@f1+3)^0,w,c
 11411  0059DE  B4D8               	btfsc	status,2,c
 11412  0059E0  EFF4  F02C         	goto	u10121
 11413  0059E4  EFF6  F02C         	goto	u10120
 11414  0059E8                     u10121:
 11415  0059E8  EFFE  F02C         	goto	l7995
 11416  0059EC                     u10120:
 11417  0059EC  0E00               	movlw	0
 11418  0059EE  1A04               	xorwf	___flneg@f1^0,f,c
 11419  0059F0  0E00               	movlw	0
 11420  0059F2  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 11421  0059F4  0E00               	movlw	0
 11422  0059F6  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 11423  0059F8  0E80               	movlw	128
 11424  0059FA  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 11425  0059FC                     l7995:
 11426  0059FC  C004  F004         	movff	___flneg@f1,?___flneg
 11427  005A00  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 11428  005A04  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 11429  005A08  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 11430  005A0C  0012               	return		;funcret
 11431  005A0E                     __end_of___flneg:
 11432                           	opt callstack 0
 11433                           
 11434 ;; *************** function ___flmul *****************
 11435 ;; Defined at:
 11436 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;  b               4   17[COMRAM] unsigned char 
 11439 ;;  a               4   21[COMRAM] unsigned char 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;  prod            4   36[COMRAM] struct .
 11442 ;;  grs             4   31[COMRAM] unsigned long 
 11443 ;;  temp            2   40[COMRAM] struct .
 11444 ;;  bexp            1   35[COMRAM] unsigned char 
 11445 ;;  aexp            1   30[COMRAM] unsigned char 
 11446 ;;  sign            1   29[COMRAM] unsigned char 
 11447 ;; Return value:  Size  Location     Type
 11448 ;;                  4   17[COMRAM] unsigned char 
 11449 ;; Registers used:
 11450 ;;		wreg, status,2, status,0, prodl, prodh
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11456 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11457 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11458 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11459 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11460 ;;Total ram usage:       25 bytes
 11461 ;; Hardware stack levels used:    1
 11462 ;; Hardware stack levels required when called:    4
 11463 ;; This function calls:
 11464 ;;		Nothing
 11465 ;; This function is called by:
 11466 ;;		_main
 11467 ;;		_efgtoa
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           	psect	text25
 11472  0025BA                     __ptext25:
 11473                           	opt callstack 0
 11474  0025BA                     ___flmul:
 11475                           	opt callstack 21
 11476  0025BA  5015               	movf	(___flmul@b+3)^0,w,c
 11477  0025BC  0B80               	andlw	128
 11478  0025BE  6E1E               	movwf	___flmul@sign^0,c
 11479  0025C0  5015               	movf	(___flmul@b+3)^0,w,c
 11480  0025C2  2415               	addwf	(___flmul@b+3)^0,w,c
 11481  0025C4  6E24               	movwf	___flmul@bexp^0,c
 11482  0025C6  AE14               	btfss	(___flmul@b+2)^0,7,c
 11483  0025C8  EFE8  F012         	goto	u9731
 11484  0025CC  EFEA  F012         	goto	u9730
 11485  0025D0                     u9731:
 11486  0025D0  EFEB  F012         	goto	l7743
 11487  0025D4                     u9730:
 11488  0025D4  8024               	bsf	___flmul@bexp^0,0,c
 11489  0025D6                     l7743:
 11490  0025D6  5024               	movf	___flmul@bexp^0,w,c
 11491  0025D8  B4D8               	btfsc	status,2,c
 11492  0025DA  EFF1  F012         	goto	u9741
 11493  0025DE  EFF3  F012         	goto	u9740
 11494  0025E2                     u9741:
 11495  0025E2  EF06  F013         	goto	l7751
 11496  0025E6                     u9740:
 11497  0025E6  2824               	incf	___flmul@bexp^0,w,c
 11498  0025E8  A4D8               	btfss	status,2,c
 11499  0025EA  EFF9  F012         	goto	u9751
 11500  0025EE  EFFB  F012         	goto	u9750
 11501  0025F2                     u9751:
 11502  0025F2  EF03  F013         	goto	l7749
 11503  0025F6                     u9750:
 11504  0025F6  0E00               	movlw	0
 11505  0025F8  6E12               	movwf	___flmul@b^0,c
 11506  0025FA  0E00               	movlw	0
 11507  0025FC  6E13               	movwf	(___flmul@b+1)^0,c
 11508  0025FE  0E00               	movlw	0
 11509  002600  6E14               	movwf	(___flmul@b+2)^0,c
 11510  002602  0E00               	movlw	0
 11511  002604  6E15               	movwf	(___flmul@b+3)^0,c
 11512  002606                     l7749:
 11513  002606  8E14               	bsf	(___flmul@b+2)^0,7,c
 11514  002608  EF0E  F013         	goto	l7753
 11515  00260C                     l7751:
 11516  00260C  0E00               	movlw	0
 11517  00260E  6E12               	movwf	___flmul@b^0,c
 11518  002610  0E00               	movlw	0
 11519  002612  6E13               	movwf	(___flmul@b+1)^0,c
 11520  002614  0E00               	movlw	0
 11521  002616  6E14               	movwf	(___flmul@b+2)^0,c
 11522  002618  0E00               	movlw	0
 11523  00261A  6E15               	movwf	(___flmul@b+3)^0,c
 11524  00261C                     l7753:
 11525  00261C  5019               	movf	(___flmul@a+3)^0,w,c
 11526  00261E  0B80               	andlw	128
 11527  002620  1A1E               	xorwf	___flmul@sign^0,f,c
 11528  002622  5019               	movf	(___flmul@a+3)^0,w,c
 11529  002624  2419               	addwf	(___flmul@a+3)^0,w,c
 11530  002626  6E1F               	movwf	___flmul@aexp^0,c
 11531  002628  AE18               	btfss	(___flmul@a+2)^0,7,c
 11532  00262A  EF19  F013         	goto	u9761
 11533  00262E  EF1B  F013         	goto	u9760
 11534  002632                     u9761:
 11535  002632  EF1C  F013         	goto	l7761
 11536  002636                     u9760:
 11537  002636  801F               	bsf	___flmul@aexp^0,0,c
 11538  002638                     l7761:
 11539  002638  501F               	movf	___flmul@aexp^0,w,c
 11540  00263A  B4D8               	btfsc	status,2,c
 11541  00263C  EF22  F013         	goto	u9771
 11542  002640  EF24  F013         	goto	u9770
 11543  002644                     u9771:
 11544  002644  EF37  F013         	goto	l7769
 11545  002648                     u9770:
 11546  002648  281F               	incf	___flmul@aexp^0,w,c
 11547  00264A  A4D8               	btfss	status,2,c
 11548  00264C  EF2A  F013         	goto	u9781
 11549  002650  EF2C  F013         	goto	u9780
 11550  002654                     u9781:
 11551  002654  EF34  F013         	goto	l7767
 11552  002658                     u9780:
 11553  002658  0E00               	movlw	0
 11554  00265A  6E16               	movwf	___flmul@a^0,c
 11555  00265C  0E00               	movlw	0
 11556  00265E  6E17               	movwf	(___flmul@a+1)^0,c
 11557  002660  0E00               	movlw	0
 11558  002662  6E18               	movwf	(___flmul@a+2)^0,c
 11559  002664  0E00               	movlw	0
 11560  002666  6E19               	movwf	(___flmul@a+3)^0,c
 11561  002668                     l7767:
 11562  002668  8E18               	bsf	(___flmul@a+2)^0,7,c
 11563  00266A  EF3F  F013         	goto	l1440
 11564  00266E                     l7769:
 11565  00266E  0E00               	movlw	0
 11566  002670  6E16               	movwf	___flmul@a^0,c
 11567  002672  0E00               	movlw	0
 11568  002674  6E17               	movwf	(___flmul@a+1)^0,c
 11569  002676  0E00               	movlw	0
 11570  002678  6E18               	movwf	(___flmul@a+2)^0,c
 11571  00267A  0E00               	movlw	0
 11572  00267C  6E19               	movwf	(___flmul@a+3)^0,c
 11573  00267E                     l1440:
 11574  00267E  501F               	movf	___flmul@aexp^0,w,c
 11575  002680  B4D8               	btfsc	status,2,c
 11576  002682  EF45  F013         	goto	u9791
 11577  002686  EF47  F013         	goto	u9790
 11578  00268A                     u9791:
 11579  00268A  EF4F  F013         	goto	l7773
 11580  00268E                     u9790:
 11581  00268E  5024               	movf	___flmul@bexp^0,w,c
 11582  002690  A4D8               	btfss	status,2,c
 11583  002692  EF4D  F013         	goto	u9801
 11584  002696  EF4F  F013         	goto	u9800
 11585  00269A                     u9801:
 11586  00269A  EF59  F013         	goto	l7777
 11587  00269E                     u9800:
 11588  00269E                     l7773:
 11589  00269E  0E00               	movlw	0
 11590  0026A0  6E12               	movwf	?___flmul^0,c
 11591  0026A2  0E00               	movlw	0
 11592  0026A4  6E13               	movwf	(?___flmul+1)^0,c
 11593  0026A6  0E00               	movlw	0
 11594  0026A8  6E14               	movwf	(?___flmul+2)^0,c
 11595  0026AA  0E00               	movlw	0
 11596  0026AC  6E15               	movwf	(?___flmul+3)^0,c
 11597  0026AE  EFF1  F014         	goto	l1444
 11598  0026B2                     l7777:
 11599  0026B2  5018               	movf	(___flmul@a+2)^0,w,c
 11600  0026B4  0212               	mulwf	___flmul@b^0,c
 11601  0026B6  CFF3 F029          	movff	prodl,___flmul@temp
 11602  0026BA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11603  0026BE  5029               	movf	___flmul@temp^0,w,c
 11604  0026C0  6E20               	movwf	___flmul@grs^0,c
 11605  0026C2  6A21               	clrf	(___flmul@grs+1)^0,c
 11606  0026C4  6A22               	clrf	(___flmul@grs+2)^0,c
 11607  0026C6  6A23               	clrf	(___flmul@grs+3)^0,c
 11608  0026C8  502A               	movf	(___flmul@temp+1)^0,w,c
 11609  0026CA  6E25               	movwf	___flmul@prod^0,c
 11610  0026CC  6A26               	clrf	(___flmul@prod+1)^0,c
 11611  0026CE  6A27               	clrf	(___flmul@prod+2)^0,c
 11612  0026D0  6A28               	clrf	(___flmul@prod+3)^0,c
 11613  0026D2  5017               	movf	(___flmul@a+1)^0,w,c
 11614  0026D4  0213               	mulwf	(___flmul@b+1)^0,c
 11615  0026D6  CFF3 F029          	movff	prodl,___flmul@temp
 11616  0026DA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11617  0026DE  5029               	movf	___flmul@temp^0,w,c
 11618  0026E0  2620               	addwf	___flmul@grs^0,f,c
 11619  0026E2  0E00               	movlw	0
 11620  0026E4  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11621  0026E6  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11622  0026E8  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11623  0026EA  502A               	movf	(___flmul@temp+1)^0,w,c
 11624  0026EC  2625               	addwf	___flmul@prod^0,f,c
 11625  0026EE  0E00               	movlw	0
 11626  0026F0  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11627  0026F2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11628  0026F4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11629  0026F6  5016               	movf	___flmul@a^0,w,c
 11630  0026F8  0214               	mulwf	(___flmul@b+2)^0,c
 11631  0026FA  CFF3 F029          	movff	prodl,___flmul@temp
 11632  0026FE  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11633  002702  5029               	movf	___flmul@temp^0,w,c
 11634  002704  2620               	addwf	___flmul@grs^0,f,c
 11635  002706  0E00               	movlw	0
 11636  002708  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11637  00270A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11638  00270C  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11639  00270E  502A               	movf	(___flmul@temp+1)^0,w,c
 11640  002710  2625               	addwf	___flmul@prod^0,f,c
 11641  002712  0E00               	movlw	0
 11642  002714  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11643  002716  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11644  002718  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11645  00271A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11646  00271E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11647  002722  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11648  002726  6A20               	clrf	___flmul@grs^0,c
 11649  002728  5016               	movf	___flmul@a^0,w,c
 11650  00272A  0213               	mulwf	(___flmul@b+1)^0,c
 11651  00272C  CFF3 F029          	movff	prodl,___flmul@temp
 11652  002730  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11653  002734  5029               	movf	___flmul@temp^0,w,c
 11654  002736  2620               	addwf	___flmul@grs^0,f,c
 11655  002738  502A               	movf	(___flmul@temp+1)^0,w,c
 11656  00273A  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11657  00273C  0E00               	movlw	0
 11658  00273E  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11659  002740  0E00               	movlw	0
 11660  002742  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11661  002744  5017               	movf	(___flmul@a+1)^0,w,c
 11662  002746  0212               	mulwf	___flmul@b^0,c
 11663  002748  CFF3 F029          	movff	prodl,___flmul@temp
 11664  00274C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11665  002750  5029               	movf	___flmul@temp^0,w,c
 11666  002752  2620               	addwf	___flmul@grs^0,f,c
 11667  002754  502A               	movf	(___flmul@temp+1)^0,w,c
 11668  002756  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11669  002758  0E00               	movlw	0
 11670  00275A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11671  00275C  0E00               	movlw	0
 11672  00275E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11673  002760  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11674  002764  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11675  002768  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11676  00276C  6A20               	clrf	___flmul@grs^0,c
 11677  00276E  5016               	movf	___flmul@a^0,w,c
 11678  002770  0212               	mulwf	___flmul@b^0,c
 11679  002772  CFF3 F029          	movff	prodl,___flmul@temp
 11680  002776  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11681  00277A  5029               	movf	___flmul@temp^0,w,c
 11682  00277C  2620               	addwf	___flmul@grs^0,f,c
 11683  00277E  502A               	movf	(___flmul@temp+1)^0,w,c
 11684  002780  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11685  002782  0E00               	movlw	0
 11686  002784  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11687  002786  0E00               	movlw	0
 11688  002788  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11689  00278A  5018               	movf	(___flmul@a+2)^0,w,c
 11690  00278C  0213               	mulwf	(___flmul@b+1)^0,c
 11691  00278E  CFF3 F029          	movff	prodl,___flmul@temp
 11692  002792  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11693  002796  5029               	movf	___flmul@temp^0,w,c
 11694  002798  2625               	addwf	___flmul@prod^0,f,c
 11695  00279A  502A               	movf	(___flmul@temp+1)^0,w,c
 11696  00279C  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11697  00279E  0E00               	movlw	0
 11698  0027A0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11699  0027A2  0E00               	movlw	0
 11700  0027A4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11701  0027A6  5017               	movf	(___flmul@a+1)^0,w,c
 11702  0027A8  0214               	mulwf	(___flmul@b+2)^0,c
 11703  0027AA  CFF3 F029          	movff	prodl,___flmul@temp
 11704  0027AE  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11705  0027B2  5029               	movf	___flmul@temp^0,w,c
 11706  0027B4  2625               	addwf	___flmul@prod^0,f,c
 11707  0027B6  502A               	movf	(___flmul@temp+1)^0,w,c
 11708  0027B8  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11709  0027BA  0E00               	movlw	0
 11710  0027BC  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11711  0027BE  0E00               	movlw	0
 11712  0027C0  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11713  0027C2  5018               	movf	(___flmul@a+2)^0,w,c
 11714  0027C4  0214               	mulwf	(___flmul@b+2)^0,c
 11715  0027C6  CFF3 F029          	movff	prodl,___flmul@temp
 11716  0027CA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11717  0027CE  5029               	movf	___flmul@temp^0,w,c
 11718  0027D0  6E1A               	movwf	??___flmul^0,c
 11719  0027D2  502A               	movf	(___flmul@temp+1)^0,w,c
 11720  0027D4  6E1B               	movwf	(??___flmul+1)^0,c
 11721  0027D6  6A1C               	clrf	(??___flmul+2)^0,c
 11722  0027D8  6A1D               	clrf	(??___flmul+3)^0,c
 11723  0027DA  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 11724  0027DE  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 11725  0027E2  C01A  F01B         	movff	??___flmul,??___flmul+1
 11726  0027E6  6A1A               	clrf	??___flmul^0,c
 11727  0027E8  501A               	movf	??___flmul^0,w,c
 11728  0027EA  2625               	addwf	___flmul@prod^0,f,c
 11729  0027EC  501B               	movf	(??___flmul+1)^0,w,c
 11730  0027EE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11731  0027F0  501C               	movf	(??___flmul+2)^0,w,c
 11732  0027F2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11733  0027F4  501D               	movf	(??___flmul+3)^0,w,c
 11734  0027F6  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11735  0027F8  C020  F01A         	movff	___flmul@grs,??___flmul
 11736  0027FC  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
 11737  002800  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
 11738  002804  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
 11739  002808  0E19               	movlw	25
 11740  00280A  EF0C  F014         	goto	u9810
 11741  00280E                     u9815:
 11742  00280E  90D8               	bcf	status,0,c
 11743  002810  321D               	rrcf	(??___flmul+3)^0,f,c
 11744  002812  321C               	rrcf	(??___flmul+2)^0,f,c
 11745  002814  321B               	rrcf	(??___flmul+1)^0,f,c
 11746  002816  321A               	rrcf	??___flmul^0,f,c
 11747  002818                     u9810:
 11748  002818  2EE8               	decfsz	wreg,f,c
 11749  00281A  EF07  F014         	goto	u9815
 11750  00281E  501A               	movf	??___flmul^0,w,c
 11751  002820  2625               	addwf	___flmul@prod^0,f,c
 11752  002822  501B               	movf	(??___flmul+1)^0,w,c
 11753  002824  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11754  002826  501C               	movf	(??___flmul+2)^0,w,c
 11755  002828  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11756  00282A  501D               	movf	(??___flmul+3)^0,w,c
 11757  00282C  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11758  00282E  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11759  002832  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11760  002836  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11761  00283A  6A20               	clrf	___flmul@grs^0,c
 11762  00283C  501F               	movf	___flmul@aexp^0,w,c
 11763  00283E  C024  F01A         	movff	___flmul@bexp,??___flmul
 11764  002842  6A1B               	clrf	(??___flmul+1)^0,c
 11765  002844  261A               	addwf	??___flmul^0,f,c
 11766  002846  0E00               	movlw	0
 11767  002848  221B               	addwfc	(??___flmul+1)^0,f,c
 11768  00284A  0E82               	movlw	130
 11769  00284C  241A               	addwf	??___flmul^0,w,c
 11770  00284E  6E29               	movwf	___flmul@temp^0,c
 11771  002850  0EFF               	movlw	255
 11772  002852  201B               	addwfc	(??___flmul+1)^0,w,c
 11773  002854  6E2A               	movwf	(___flmul@temp+1)^0,c
 11774  002856  EF42  F014         	goto	l7825
 11775  00285A                     l7819:
 11776  00285A  90D8               	bcf	status,0,c
 11777  00285C  3625               	rlcf	___flmul@prod^0,f,c
 11778  00285E  3626               	rlcf	(___flmul@prod+1)^0,f,c
 11779  002860  3627               	rlcf	(___flmul@prod+2)^0,f,c
 11780  002862  3628               	rlcf	(___flmul@prod+3)^0,f,c
 11781  002864  AE23               	btfss	(___flmul@grs+3)^0,7,c
 11782  002866  EF37  F014         	goto	u9821
 11783  00286A  EF39  F014         	goto	u9820
 11784  00286E                     u9821:
 11785  00286E  EF3A  F014         	goto	l1447
 11786  002872                     u9820:
 11787  002872  8025               	bsf	___flmul@prod^0,0,c
 11788  002874                     l1447:
 11789  002874  90D8               	bcf	status,0,c
 11790  002876  3620               	rlcf	___flmul@grs^0,f,c
 11791  002878  3621               	rlcf	(___flmul@grs+1)^0,f,c
 11792  00287A  3622               	rlcf	(___flmul@grs+2)^0,f,c
 11793  00287C  3623               	rlcf	(___flmul@grs+3)^0,f,c
 11794  00287E  0629               	decf	___flmul@temp^0,f,c
 11795  002880  A0D8               	btfss	status,0,c
 11796  002882  062A               	decf	(___flmul@temp+1)^0,f,c
 11797  002884                     l7825:
 11798  002884  AE27               	btfss	(___flmul@prod+2)^0,7,c
 11799  002886  EF47  F014         	goto	u9831
 11800  00288A  EF49  F014         	goto	u9830
 11801  00288E                     u9831:
 11802  00288E  EF2D  F014         	goto	l7819
 11803  002892                     u9830:
 11804  002892  0E00               	movlw	0
 11805  002894  6E1F               	movwf	___flmul@aexp^0,c
 11806  002896  AE23               	btfss	(___flmul@grs+3)^0,7,c
 11807  002898  EF50  F014         	goto	u9841
 11808  00289C  EF52  F014         	goto	u9840
 11809  0028A0                     u9841:
 11810  0028A0  EF76  F014         	goto	l1449
 11811  0028A4                     u9840:
 11812  0028A4  0EFF               	movlw	255
 11813  0028A6  1420               	andwf	___flmul@grs^0,w,c
 11814  0028A8  6E1A               	movwf	??___flmul^0,c
 11815  0028AA  0EFF               	movlw	255
 11816  0028AC  1421               	andwf	(___flmul@grs+1)^0,w,c
 11817  0028AE  6E1B               	movwf	(??___flmul+1)^0,c
 11818  0028B0  0EFF               	movlw	255
 11819  0028B2  1422               	andwf	(___flmul@grs+2)^0,w,c
 11820  0028B4  6E1C               	movwf	(??___flmul+2)^0,c
 11821  0028B6  0E7F               	movlw	127
 11822  0028B8  1423               	andwf	(___flmul@grs+3)^0,w,c
 11823  0028BA  6E1D               	movwf	(??___flmul+3)^0,c
 11824  0028BC  501A               	movf	??___flmul^0,w,c
 11825  0028BE  101B               	iorwf	(??___flmul+1)^0,w,c
 11826  0028C0  101C               	iorwf	(??___flmul+2)^0,w,c
 11827  0028C2  101D               	iorwf	(??___flmul+3)^0,w,c
 11828  0028C4  B4D8               	btfsc	status,2,c
 11829  0028C6  EF67  F014         	goto	u9851
 11830  0028CA  EF69  F014         	goto	u9850
 11831  0028CE                     u9851:
 11832  0028CE  EF6D  F014         	goto	l1450
 11833  0028D2                     u9850:
 11834  0028D2                     l7833:
 11835  0028D2  0E01               	movlw	1
 11836  0028D4  6E1F               	movwf	___flmul@aexp^0,c
 11837  0028D6  EF76  F014         	goto	l1449
 11838  0028DA                     l1450:
 11839  0028DA  A025               	btfss	___flmul@prod^0,0,c
 11840  0028DC  EF72  F014         	goto	u9861
 11841  0028E0  EF74  F014         	goto	u9860
 11842  0028E4                     u9861:
 11843  0028E4  EF76  F014         	goto	l1449
 11844  0028E8                     u9860:
 11845  0028E8  EF69  F014         	goto	l7833
 11846  0028EC                     l1449:
 11847  0028EC  501F               	movf	___flmul@aexp^0,w,c
 11848  0028EE  B4D8               	btfsc	status,2,c
 11849  0028F0  EF7C  F014         	goto	u9871
 11850  0028F4  EF7E  F014         	goto	u9870
 11851  0028F8                     u9871:
 11852  0028F8  EFA2  F014         	goto	l7845
 11853  0028FC                     u9870:
 11854  0028FC  0E01               	movlw	1
 11855  0028FE  2625               	addwf	___flmul@prod^0,f,c
 11856  002900  0E00               	movlw	0
 11857  002902  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11858  002904  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11859  002906  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11860  002908  A028               	btfss	(___flmul@prod+3)^0,0,c
 11861  00290A  EF89  F014         	goto	u9881
 11862  00290E  EF8B  F014         	goto	u9880
 11863  002912                     u9881:
 11864  002912  EFA2  F014         	goto	l7845
 11865  002916                     u9880:
 11866  002916  C025  F01A         	movff	___flmul@prod,??___flmul
 11867  00291A  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 11868  00291E  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 11869  002922  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 11870  002926  341D               	rlcf	(??___flmul+3)^0,w,c
 11871  002928  321D               	rrcf	(??___flmul+3)^0,f,c
 11872  00292A  321C               	rrcf	(??___flmul+2)^0,f,c
 11873  00292C  321B               	rrcf	(??___flmul+1)^0,f,c
 11874  00292E  321A               	rrcf	??___flmul^0,f,c
 11875  002930  C01A  F025         	movff	??___flmul,___flmul@prod
 11876  002934  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 11877  002938  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 11878  00293C  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 11879  002940  4A29               	infsnz	___flmul@temp^0,f,c
 11880  002942  2A2A               	incf	(___flmul@temp+1)^0,f,c
 11881  002944                     l7845:
 11882  002944  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 11883  002946  EFAD  F014         	goto	u9891
 11884  00294A  502A               	movf	(___flmul@temp+1)^0,w,c
 11885  00294C  E108               	bnz	u9890
 11886  00294E  2829               	incf	___flmul@temp^0,w,c
 11887  002950  A0D8               	btfss	status,0,c
 11888  002952  EFAD  F014         	goto	u9891
 11889  002956  EFAF  F014         	goto	u9890
 11890  00295A                     u9891:
 11891  00295A  EFB9  F014         	goto	l7849
 11892  00295E                     u9890:
 11893  00295E  0E00               	movlw	0
 11894  002960  6E25               	movwf	___flmul@prod^0,c
 11895  002962  0E00               	movlw	0
 11896  002964  6E26               	movwf	(___flmul@prod+1)^0,c
 11897  002966  0E80               	movlw	128
 11898  002968  6E27               	movwf	(___flmul@prod+2)^0,c
 11899  00296A  0E7F               	movlw	127
 11900  00296C  6E28               	movwf	(___flmul@prod+3)^0,c
 11901  00296E  EFE7  F014         	goto	l7861
 11902  002972                     l7849:
 11903  002972  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 11904  002974  EFC6  F014         	goto	u9900
 11905  002978  502A               	movf	(___flmul@temp+1)^0,w,c
 11906  00297A  E106               	bnz	u9901
 11907  00297C  0429               	decf	___flmul@temp^0,w,c
 11908  00297E  B0D8               	btfsc	status,0,c
 11909  002980  EFC4  F014         	goto	u9901
 11910  002984  EFC6  F014         	goto	u9900
 11911  002988                     u9901:
 11912  002988  EFD2  F014         	goto	l1457
 11913  00298C                     u9900:
 11914  00298C  0E00               	movlw	0
 11915  00298E  6E25               	movwf	___flmul@prod^0,c
 11916  002990  0E00               	movlw	0
 11917  002992  6E26               	movwf	(___flmul@prod+1)^0,c
 11918  002994  0E00               	movlw	0
 11919  002996  6E27               	movwf	(___flmul@prod+2)^0,c
 11920  002998  0E00               	movlw	0
 11921  00299A  6E28               	movwf	(___flmul@prod+3)^0,c
 11922  00299C  0E00               	movlw	0
 11923  00299E  6E1E               	movwf	___flmul@sign^0,c
 11924  0029A0  EFE7  F014         	goto	l7861
 11925  0029A4                     l1457:
 11926  0029A4  C029  F024         	movff	___flmul@temp,___flmul@bexp
 11927  0029A8  0EFF               	movlw	255
 11928  0029AA  1625               	andwf	___flmul@prod^0,f,c
 11929  0029AC  0EFF               	movlw	255
 11930  0029AE  1626               	andwf	(___flmul@prod+1)^0,f,c
 11931  0029B0  0E7F               	movlw	127
 11932  0029B2  1627               	andwf	(___flmul@prod+2)^0,f,c
 11933  0029B4  0E00               	movlw	0
 11934  0029B6  1628               	andwf	(___flmul@prod+3)^0,f,c
 11935  0029B8  A024               	btfss	___flmul@bexp^0,0,c
 11936  0029BA  EFE1  F014         	goto	u9911
 11937  0029BE  EFE3  F014         	goto	u9910
 11938  0029C2                     u9911:
 11939  0029C2  EFE4  F014         	goto	l7859
 11940  0029C6                     u9910:
 11941  0029C6  8E27               	bsf	(___flmul@prod+2)^0,7,c
 11942  0029C8                     l7859:
 11943  0029C8  90D8               	bcf	status,0,c
 11944  0029CA  3024               	rrcf	___flmul@bexp^0,w,c
 11945  0029CC  6E28               	movwf	(___flmul@prod+3)^0,c
 11946  0029CE                     l7861:
 11947  0029CE  501E               	movf	___flmul@sign^0,w,c
 11948  0029D0  1228               	iorwf	(___flmul@prod+3)^0,f,c
 11949  0029D2  C025  F012         	movff	___flmul@prod,?___flmul
 11950  0029D6  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 11951  0029DA  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 11952  0029DE  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 11953  0029E2                     l1444:
 11954  0029E2  0012               	return		;funcret
 11955  0029E4                     __end_of___flmul:
 11956                           	opt callstack 0
 11957                           
 11958 ;; *************** function ___flge *****************
 11959 ;; Defined at:
 11960 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  ff1             4   42[COMRAM] unsigned char 
 11963 ;;  ff2             4   46[COMRAM] unsigned char 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;		None               void
 11968 ;; Registers used:
 11969 ;;		wreg, status,2, status,0
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11975 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11977 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11978 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11979 ;;Total ram usage:       12 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:    4
 11982 ;; This function calls:
 11983 ;;		Nothing
 11984 ;; This function is called by:
 11985 ;;		_main
 11986 ;;		_efgtoa
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990                           	psect	text26
 11991  004BF8                     __ptext26:
 11992                           	opt callstack 0
 11993  004BF8                     ___flge:
 11994                           	opt callstack 21
 11995  004BF8  0E00               	movlw	0
 11996  004BFA  142B               	andwf	___flge@ff1^0,w,c
 11997  004BFC  6E33               	movwf	??___flge^0,c
 11998  004BFE  0E00               	movlw	0
 11999  004C00  142C               	andwf	(___flge@ff1+1)^0,w,c
 12000  004C02  6E34               	movwf	(??___flge+1)^0,c
 12001  004C04  0E80               	movlw	128
 12002  004C06  142D               	andwf	(___flge@ff1+2)^0,w,c
 12003  004C08  6E35               	movwf	(??___flge+2)^0,c
 12004  004C0A  0E7F               	movlw	127
 12005  004C0C  142E               	andwf	(___flge@ff1+3)^0,w,c
 12006  004C0E  6E36               	movwf	(??___flge+3)^0,c
 12007  004C10  5033               	movf	??___flge^0,w,c
 12008  004C12  1034               	iorwf	(??___flge+1)^0,w,c
 12009  004C14  1035               	iorwf	(??___flge+2)^0,w,c
 12010  004C16  1036               	iorwf	(??___flge+3)^0,w,c
 12011  004C18  A4D8               	btfss	status,2,c
 12012  004C1A  EF11  F026         	goto	u10071
 12013  004C1E  EF13  F026         	goto	u10070
 12014  004C22                     u10071:
 12015  004C22  EF1B  F026         	goto	l7973
 12016  004C26                     u10070:
 12017  004C26  0E00               	movlw	0
 12018  004C28  6E2B               	movwf	___flge@ff1^0,c
 12019  004C2A  0E00               	movlw	0
 12020  004C2C  6E2C               	movwf	(___flge@ff1+1)^0,c
 12021  004C2E  0E00               	movlw	0
 12022  004C30  6E2D               	movwf	(___flge@ff1+2)^0,c
 12023  004C32  0E00               	movlw	0
 12024  004C34  6E2E               	movwf	(___flge@ff1+3)^0,c
 12025  004C36                     l7973:
 12026  004C36  0E00               	movlw	0
 12027  004C38  142F               	andwf	___flge@ff2^0,w,c
 12028  004C3A  6E33               	movwf	??___flge^0,c
 12029  004C3C  0E00               	movlw	0
 12030  004C3E  1430               	andwf	(___flge@ff2+1)^0,w,c
 12031  004C40  6E34               	movwf	(??___flge+1)^0,c
 12032  004C42  0E80               	movlw	128
 12033  004C44  1431               	andwf	(___flge@ff2+2)^0,w,c
 12034  004C46  6E35               	movwf	(??___flge+2)^0,c
 12035  004C48  0E7F               	movlw	127
 12036  004C4A  1432               	andwf	(___flge@ff2+3)^0,w,c
 12037  004C4C  6E36               	movwf	(??___flge+3)^0,c
 12038  004C4E  5033               	movf	??___flge^0,w,c
 12039  004C50  1034               	iorwf	(??___flge+1)^0,w,c
 12040  004C52  1035               	iorwf	(??___flge+2)^0,w,c
 12041  004C54  1036               	iorwf	(??___flge+3)^0,w,c
 12042  004C56  A4D8               	btfss	status,2,c
 12043  004C58  EF30  F026         	goto	u10081
 12044  004C5C  EF32  F026         	goto	u10080
 12045  004C60                     u10081:
 12046  004C60  EF3A  F026         	goto	l7977
 12047  004C64                     u10080:
 12048  004C64  0E00               	movlw	0
 12049  004C66  6E2F               	movwf	___flge@ff2^0,c
 12050  004C68  0E00               	movlw	0
 12051  004C6A  6E30               	movwf	(___flge@ff2+1)^0,c
 12052  004C6C  0E00               	movlw	0
 12053  004C6E  6E31               	movwf	(___flge@ff2+2)^0,c
 12054  004C70  0E00               	movlw	0
 12055  004C72  6E32               	movwf	(___flge@ff2+3)^0,c
 12056  004C74                     l7977:
 12057  004C74  AE2E               	btfss	(___flge@ff1+3)^0,7,c
 12058  004C76  EF3F  F026         	goto	u10091
 12059  004C7A  EF41  F026         	goto	u10090
 12060  004C7E                     u10091:
 12061  004C7E  EF4A  F026         	goto	l7981
 12062  004C82                     u10090:
 12063  004C82  6C2B               	negf	___flge@ff1^0,c
 12064  004C84  1E2C               	comf	(___flge@ff1+1)^0,f,c
 12065  004C86  B0D8               	btfsc	status,0,c
 12066  004C88  2A2C               	incf	(___flge@ff1+1)^0,f,c
 12067  004C8A  1E2D               	comf	(___flge@ff1+2)^0,f,c
 12068  004C8C  B0D8               	btfsc	status,0,c
 12069  004C8E  2A2D               	incf	(___flge@ff1+2)^0,f,c
 12070  004C90  0E80               	movlw	128
 12071  004C92  562E               	subfwb	(___flge@ff1+3)^0,f,c
 12072  004C94                     l7981:
 12073  004C94  AE32               	btfss	(___flge@ff2+3)^0,7,c
 12074  004C96  EF4F  F026         	goto	u10101
 12075  004C9A  EF51  F026         	goto	u10100
 12076  004C9E                     u10101:
 12077  004C9E  EF5A  F026         	goto	l1091
 12078  004CA2                     u10100:
 12079  004CA2  6C2F               	negf	___flge@ff2^0,c
 12080  004CA4  1E30               	comf	(___flge@ff2+1)^0,f,c
 12081  004CA6  B0D8               	btfsc	status,0,c
 12082  004CA8  2A30               	incf	(___flge@ff2+1)^0,f,c
 12083  004CAA  1E31               	comf	(___flge@ff2+2)^0,f,c
 12084  004CAC  B0D8               	btfsc	status,0,c
 12085  004CAE  2A31               	incf	(___flge@ff2+2)^0,f,c
 12086  004CB0  0E80               	movlw	128
 12087  004CB2  5632               	subfwb	(___flge@ff2+3)^0,f,c
 12088  004CB4                     l1091:
 12089  004CB4  0E00               	movlw	0
 12090  004CB6  1A2B               	xorwf	___flge@ff1^0,f,c
 12091  004CB8  0E00               	movlw	0
 12092  004CBA  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
 12093  004CBC  0E00               	movlw	0
 12094  004CBE  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
 12095  004CC0  0E80               	movlw	128
 12096  004CC2  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
 12097  004CC4  0E00               	movlw	0
 12098  004CC6  1A2F               	xorwf	___flge@ff2^0,f,c
 12099  004CC8  0E00               	movlw	0
 12100  004CCA  1A30               	xorwf	(___flge@ff2+1)^0,f,c
 12101  004CCC  0E00               	movlw	0
 12102  004CCE  1A31               	xorwf	(___flge@ff2+2)^0,f,c
 12103  004CD0  0E80               	movlw	128
 12104  004CD2  1A32               	xorwf	(___flge@ff2+3)^0,f,c
 12105  004CD4  502F               	movf	___flge@ff2^0,w,c
 12106  004CD6  5C2B               	subwf	___flge@ff1^0,w,c
 12107  004CD8  5030               	movf	(___flge@ff2+1)^0,w,c
 12108  004CDA  582C               	subwfb	(___flge@ff1+1)^0,w,c
 12109  004CDC  5031               	movf	(___flge@ff2+2)^0,w,c
 12110  004CDE  582D               	subwfb	(___flge@ff1+2)^0,w,c
 12111  004CE0  5032               	movf	(___flge@ff2+3)^0,w,c
 12112  004CE2  582E               	subwfb	(___flge@ff1+3)^0,w,c
 12113  004CE4  B0D8               	btfsc	status,0,c
 12114  004CE6  EF77  F026         	goto	u10111
 12115  004CEA  EF79  F026         	goto	u10110
 12116  004CEE                     u10111:
 12117  004CEE  EF7C  F026         	goto	l7987
 12118  004CF2                     u10110:
 12119  004CF2  90D8               	bcf	status,0,c
 12120  004CF4  EF7D  F026         	goto	l1096
 12121  004CF8                     l7987:
 12122  004CF8  80D8               	bsf	status,0,c
 12123  004CFA                     l1096:
 12124  004CFA  0012               	return		;funcret
 12125  004CFC                     __end_of___flge:
 12126                           	opt callstack 0
 12127                           
 12128 ;; *************** function ___fleq *****************
 12129 ;; Defined at:
 12130 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;  ff1             4    3[COMRAM] unsigned char 
 12133 ;;  ff2             4    7[COMRAM] unsigned char 
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;		None               void
 12138 ;; Registers used:
 12139 ;;		wreg, status,2, status,0
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12145 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12148 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12149 ;;Total ram usage:       12 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:    4
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_efgtoa
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text27
 12160  00536E                     __ptext27:
 12161                           	opt callstack 0
 12162  00536E                     ___fleq:
 12163                           	opt callstack 21
 12164  00536E  0E00               	movlw	0
 12165  005370  1404               	andwf	___fleq@ff1^0,w,c
 12166  005372  6E0C               	movwf	??___fleq^0,c
 12167  005374  0E00               	movlw	0
 12168  005376  1405               	andwf	(___fleq@ff1+1)^0,w,c
 12169  005378  6E0D               	movwf	(??___fleq+1)^0,c
 12170  00537A  0E80               	movlw	128
 12171  00537C  1406               	andwf	(___fleq@ff1+2)^0,w,c
 12172  00537E  6E0E               	movwf	(??___fleq+2)^0,c
 12173  005380  0E7F               	movlw	127
 12174  005382  1407               	andwf	(___fleq@ff1+3)^0,w,c
 12175  005384  6E0F               	movwf	(??___fleq+3)^0,c
 12176  005386  500C               	movf	??___fleq^0,w,c
 12177  005388  100D               	iorwf	(??___fleq+1)^0,w,c
 12178  00538A  100E               	iorwf	(??___fleq+2)^0,w,c
 12179  00538C  100F               	iorwf	(??___fleq+3)^0,w,c
 12180  00538E  A4D8               	btfss	status,2,c
 12181  005390  EFCC  F029         	goto	u10041
 12182  005394  EFCE  F029         	goto	u10040
 12183  005398                     u10041:
 12184  005398  EFD6  F029         	goto	l7957
 12185  00539C                     u10040:
 12186  00539C  0E00               	movlw	0
 12187  00539E  6E04               	movwf	___fleq@ff1^0,c
 12188  0053A0  0E00               	movlw	0
 12189  0053A2  6E05               	movwf	(___fleq@ff1+1)^0,c
 12190  0053A4  0E00               	movlw	0
 12191  0053A6  6E06               	movwf	(___fleq@ff1+2)^0,c
 12192  0053A8  0E00               	movlw	0
 12193  0053AA  6E07               	movwf	(___fleq@ff1+3)^0,c
 12194  0053AC                     l7957:
 12195  0053AC  0E00               	movlw	0
 12196  0053AE  1408               	andwf	___fleq@ff2^0,w,c
 12197  0053B0  6E0C               	movwf	??___fleq^0,c
 12198  0053B2  0E00               	movlw	0
 12199  0053B4  1409               	andwf	(___fleq@ff2+1)^0,w,c
 12200  0053B6  6E0D               	movwf	(??___fleq+1)^0,c
 12201  0053B8  0E80               	movlw	128
 12202  0053BA  140A               	andwf	(___fleq@ff2+2)^0,w,c
 12203  0053BC  6E0E               	movwf	(??___fleq+2)^0,c
 12204  0053BE  0E7F               	movlw	127
 12205  0053C0  140B               	andwf	(___fleq@ff2+3)^0,w,c
 12206  0053C2  6E0F               	movwf	(??___fleq+3)^0,c
 12207  0053C4  500C               	movf	??___fleq^0,w,c
 12208  0053C6  100D               	iorwf	(??___fleq+1)^0,w,c
 12209  0053C8  100E               	iorwf	(??___fleq+2)^0,w,c
 12210  0053CA  100F               	iorwf	(??___fleq+3)^0,w,c
 12211  0053CC  A4D8               	btfss	status,2,c
 12212  0053CE  EFEB  F029         	goto	u10051
 12213  0053D2  EFED  F029         	goto	u10050
 12214  0053D6                     u10051:
 12215  0053D6  EFF5  F029         	goto	l7961
 12216  0053DA                     u10050:
 12217  0053DA  0E00               	movlw	0
 12218  0053DC  6E08               	movwf	___fleq@ff2^0,c
 12219  0053DE  0E00               	movlw	0
 12220  0053E0  6E09               	movwf	(___fleq@ff2+1)^0,c
 12221  0053E2  0E00               	movlw	0
 12222  0053E4  6E0A               	movwf	(___fleq@ff2+2)^0,c
 12223  0053E6  0E00               	movlw	0
 12224  0053E8  6E0B               	movwf	(___fleq@ff2+3)^0,c
 12225  0053EA                     l7961:
 12226  0053EA  5008               	movf	___fleq@ff2^0,w,c
 12227  0053EC  1804               	xorwf	___fleq@ff1^0,w,c
 12228  0053EE  E10F               	bnz	u10060
 12229  0053F0  5009               	movf	(___fleq@ff2+1)^0,w,c
 12230  0053F2  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 12231  0053F4  E10C               	bnz	u10060
 12232  0053F6  500A               	movf	(___fleq@ff2+2)^0,w,c
 12233  0053F8  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 12234  0053FA  E109               	bnz	u10060
 12235  0053FC  500B               	movf	(___fleq@ff2+3)^0,w,c
 12236  0053FE  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 12237  005400  B4D8               	btfsc	status,2,c
 12238  005402  EF05  F02A         	goto	u10061
 12239  005406  EF07  F02A         	goto	u10060
 12240  00540A                     u10061:
 12241  00540A  EF0A  F02A         	goto	l7965
 12242  00540E                     u10060:
 12243  00540E  90D8               	bcf	status,0,c
 12244  005410  EF0B  F02A         	goto	l1085
 12245  005414                     l7965:
 12246  005414  80D8               	bsf	status,0,c
 12247  005416                     l1085:
 12248  005416  0012               	return		;funcret
 12249  005418                     __end_of___fleq:
 12250                           	opt callstack 0
 12251                           
 12252 ;; *************** function ___fldiv *****************
 12253 ;; Defined at:
 12254 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;  b               4    3[COMRAM] unsigned char 
 12257 ;;  a               4    7[COMRAM] unsigned char 
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;  grs             4   22[COMRAM] unsigned long 
 12260 ;;  rem             4   15[COMRAM] unsigned long 
 12261 ;;  new_exp         2   20[COMRAM] short 
 12262 ;;  aexp            1   27[COMRAM] unsigned char 
 12263 ;;  bexp            1   26[COMRAM] unsigned char 
 12264 ;;  sign            1   19[COMRAM] unsigned char 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  4    3[COMRAM] unsigned char 
 12267 ;; Registers used:
 12268 ;;		wreg, status,2, status,0
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12274 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12275 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12277 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12278 ;;Total ram usage:       25 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; Hardware stack levels required when called:    4
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_efgtoa
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288                           	psect	text28
 12289  0029E4                     __ptext28:
 12290                           	opt callstack 0
 12291  0029E4                     ___fldiv:
 12292                           	opt callstack 21
 12293  0029E4  5007               	movf	(___fldiv@b+3)^0,w,c
 12294  0029E6  0B80               	andlw	128
 12295  0029E8  6E14               	movwf	___fldiv@sign^0,c
 12296  0029EA  5007               	movf	(___fldiv@b+3)^0,w,c
 12297  0029EC  2407               	addwf	(___fldiv@b+3)^0,w,c
 12298  0029EE  6E1B               	movwf	___fldiv@bexp^0,c
 12299  0029F0  AE06               	btfss	(___fldiv@b+2)^0,7,c
 12300  0029F2  EFFD  F014         	goto	u9501
 12301  0029F6  EFFF  F014         	goto	u9500
 12302  0029FA                     u9501:
 12303  0029FA  EF00  F015         	goto	l7605
 12304  0029FE                     u9500:
 12305  0029FE  801B               	bsf	___fldiv@bexp^0,0,c
 12306  002A00                     l7605:
 12307  002A00  501B               	movf	___fldiv@bexp^0,w,c
 12308  002A02  B4D8               	btfsc	status,2,c
 12309  002A04  EF06  F015         	goto	u9511
 12310  002A08  EF08  F015         	goto	u9510
 12311  002A0C                     u9511:
 12312  002A0C  EF1D  F015         	goto	l7615
 12313  002A10                     u9510:
 12314  002A10  281B               	incf	___fldiv@bexp^0,w,c
 12315  002A12  A4D8               	btfss	status,2,c
 12316  002A14  EF0E  F015         	goto	u9521
 12317  002A18  EF10  F015         	goto	u9520
 12318  002A1C                     u9521:
 12319  002A1C  EF18  F015         	goto	l7611
 12320  002A20                     u9520:
 12321  002A20  0E00               	movlw	0
 12322  002A22  6E04               	movwf	___fldiv@b^0,c
 12323  002A24  0E00               	movlw	0
 12324  002A26  6E05               	movwf	(___fldiv@b+1)^0,c
 12325  002A28  0E00               	movlw	0
 12326  002A2A  6E06               	movwf	(___fldiv@b+2)^0,c
 12327  002A2C  0E00               	movlw	0
 12328  002A2E  6E07               	movwf	(___fldiv@b+3)^0,c
 12329  002A30                     l7611:
 12330  002A30  8E06               	bsf	(___fldiv@b+2)^0,7,c
 12331  002A32  0E00               	movlw	0
 12332  002A34  6E07               	movwf	(___fldiv@b+3)^0,c
 12333  002A36  EF25  F015         	goto	l7617
 12334  002A3A                     l7615:
 12335  002A3A  0E00               	movlw	0
 12336  002A3C  6E04               	movwf	___fldiv@b^0,c
 12337  002A3E  0E00               	movlw	0
 12338  002A40  6E05               	movwf	(___fldiv@b+1)^0,c
 12339  002A42  0E00               	movlw	0
 12340  002A44  6E06               	movwf	(___fldiv@b+2)^0,c
 12341  002A46  0E00               	movlw	0
 12342  002A48  6E07               	movwf	(___fldiv@b+3)^0,c
 12343  002A4A                     l7617:
 12344  002A4A  500B               	movf	(___fldiv@a+3)^0,w,c
 12345  002A4C  0B80               	andlw	128
 12346  002A4E  1A14               	xorwf	___fldiv@sign^0,f,c
 12347  002A50  500B               	movf	(___fldiv@a+3)^0,w,c
 12348  002A52  240B               	addwf	(___fldiv@a+3)^0,w,c
 12349  002A54  6E1C               	movwf	___fldiv@aexp^0,c
 12350  002A56  AE0A               	btfss	(___fldiv@a+2)^0,7,c
 12351  002A58  EF30  F015         	goto	u9531
 12352  002A5C  EF32  F015         	goto	u9530
 12353  002A60                     u9531:
 12354  002A60  EF33  F015         	goto	l7625
 12355  002A64                     u9530:
 12356  002A64  801C               	bsf	___fldiv@aexp^0,0,c
 12357  002A66                     l7625:
 12358  002A66  501C               	movf	___fldiv@aexp^0,w,c
 12359  002A68  B4D8               	btfsc	status,2,c
 12360  002A6A  EF39  F015         	goto	u9541
 12361  002A6E  EF3B  F015         	goto	u9540
 12362  002A72                     u9541:
 12363  002A72  EF50  F015         	goto	l7635
 12364  002A76                     u9540:
 12365  002A76  281C               	incf	___fldiv@aexp^0,w,c
 12366  002A78  A4D8               	btfss	status,2,c
 12367  002A7A  EF41  F015         	goto	u9551
 12368  002A7E  EF43  F015         	goto	u9550
 12369  002A82                     u9551:
 12370  002A82  EF4B  F015         	goto	l7631
 12371  002A86                     u9550:
 12372  002A86  0E00               	movlw	0
 12373  002A88  6E08               	movwf	___fldiv@a^0,c
 12374  002A8A  0E00               	movlw	0
 12375  002A8C  6E09               	movwf	(___fldiv@a+1)^0,c
 12376  002A8E  0E00               	movlw	0
 12377  002A90  6E0A               	movwf	(___fldiv@a+2)^0,c
 12378  002A92  0E00               	movlw	0
 12379  002A94  6E0B               	movwf	(___fldiv@a+3)^0,c
 12380  002A96                     l7631:
 12381  002A96  8E0A               	bsf	(___fldiv@a+2)^0,7,c
 12382  002A98  0E00               	movlw	0
 12383  002A9A  6E0B               	movwf	(___fldiv@a+3)^0,c
 12384  002A9C  EF58  F015         	goto	l7637
 12385  002AA0                     l7635:
 12386  002AA0  0E00               	movlw	0
 12387  002AA2  6E08               	movwf	___fldiv@a^0,c
 12388  002AA4  0E00               	movlw	0
 12389  002AA6  6E09               	movwf	(___fldiv@a+1)^0,c
 12390  002AA8  0E00               	movlw	0
 12391  002AAA  6E0A               	movwf	(___fldiv@a+2)^0,c
 12392  002AAC  0E00               	movlw	0
 12393  002AAE  6E0B               	movwf	(___fldiv@a+3)^0,c
 12394  002AB0                     l7637:
 12395  002AB0  5008               	movf	___fldiv@a^0,w,c
 12396  002AB2  1009               	iorwf	(___fldiv@a+1)^0,w,c
 12397  002AB4  100A               	iorwf	(___fldiv@a+2)^0,w,c
 12398  002AB6  100B               	iorwf	(___fldiv@a+3)^0,w,c
 12399  002AB8  A4D8               	btfss	status,2,c
 12400  002ABA  EF61  F015         	goto	u9561
 12401  002ABE  EF63  F015         	goto	u9560
 12402  002AC2                     u9561:
 12403  002AC2  EF7B  F015         	goto	l7649
 12404  002AC6                     u9560:
 12405  002AC6  0E00               	movlw	0
 12406  002AC8  6E04               	movwf	___fldiv@b^0,c
 12407  002ACA  0E00               	movlw	0
 12408  002ACC  6E05               	movwf	(___fldiv@b+1)^0,c
 12409  002ACE  0E00               	movlw	0
 12410  002AD0  6E06               	movwf	(___fldiv@b+2)^0,c
 12411  002AD2  0E00               	movlw	0
 12412  002AD4  6E07               	movwf	(___fldiv@b+3)^0,c
 12413  002AD6  0E80               	movlw	128
 12414  002AD8  1206               	iorwf	(___fldiv@b+2)^0,f,c
 12415  002ADA  0E7F               	movlw	127
 12416  002ADC  1207               	iorwf	(___fldiv@b+3)^0,f,c
 12417  002ADE                     l7643:
 12418  002ADE  5014               	movf	___fldiv@sign^0,w,c
 12419  002AE0  1207               	iorwf	(___fldiv@b+3)^0,f,c
 12420  002AE2  C004  F004         	movff	___fldiv@b,?___fldiv
 12421  002AE6  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
 12422  002AEA  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
 12423  002AEE  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
 12424  002AF2  EFBE  F016         	goto	l1408
 12425  002AF6                     l7649:
 12426  002AF6  501B               	movf	___fldiv@bexp^0,w,c
 12427  002AF8  A4D8               	btfss	status,2,c
 12428  002AFA  EF81  F015         	goto	u9571
 12429  002AFE  EF83  F015         	goto	u9570
 12430  002B02                     u9571:
 12431  002B02  EF8D  F015         	goto	l7657
 12432  002B06                     u9570:
 12433  002B06  0E00               	movlw	0
 12434  002B08  6E04               	movwf	?___fldiv^0,c
 12435  002B0A  0E00               	movlw	0
 12436  002B0C  6E05               	movwf	(?___fldiv+1)^0,c
 12437  002B0E  0E00               	movlw	0
 12438  002B10  6E06               	movwf	(?___fldiv+2)^0,c
 12439  002B12  0E00               	movlw	0
 12440  002B14  6E07               	movwf	(?___fldiv+3)^0,c
 12441  002B16  EFBE  F016         	goto	l1408
 12442  002B1A                     l7657:
 12443  002B1A  501C               	movf	___fldiv@aexp^0,w,c
 12444  002B1C  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
 12445  002B20  6A0D               	clrf	(??___fldiv+1)^0,c
 12446  002B22  5E0C               	subwf	??___fldiv^0,f,c
 12447  002B24  0E00               	movlw	0
 12448  002B26  5A0D               	subwfb	(??___fldiv+1)^0,f,c
 12449  002B28  0E7F               	movlw	127
 12450  002B2A  240C               	addwf	??___fldiv^0,w,c
 12451  002B2C  6E15               	movwf	___fldiv@new_exp^0,c
 12452  002B2E  0E00               	movlw	0
 12453  002B30  200D               	addwfc	(??___fldiv+1)^0,w,c
 12454  002B32  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12455  002B34  C004  F010         	movff	___fldiv@b,___fldiv@rem
 12456  002B38  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
 12457  002B3C  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
 12458  002B40  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
 12459  002B44  0E00               	movlw	0
 12460  002B46  6E04               	movwf	___fldiv@b^0,c
 12461  002B48  0E00               	movlw	0
 12462  002B4A  6E05               	movwf	(___fldiv@b+1)^0,c
 12463  002B4C  0E00               	movlw	0
 12464  002B4E  6E06               	movwf	(___fldiv@b+2)^0,c
 12465  002B50  0E00               	movlw	0
 12466  002B52  6E07               	movwf	(___fldiv@b+3)^0,c
 12467  002B54  0E00               	movlw	0
 12468  002B56  6E17               	movwf	___fldiv@grs^0,c
 12469  002B58  0E00               	movlw	0
 12470  002B5A  6E18               	movwf	(___fldiv@grs+1)^0,c
 12471  002B5C  0E00               	movlw	0
 12472  002B5E  6E19               	movwf	(___fldiv@grs+2)^0,c
 12473  002B60  0E00               	movlw	0
 12474  002B62  6E1A               	movwf	(___fldiv@grs+3)^0,c
 12475  002B64  0E00               	movlw	0
 12476  002B66  6E1C               	movwf	___fldiv@aexp^0,c
 12477  002B68  EFEE  F015         	goto	l1410
 12478  002B6C                     l7667:
 12479  002B6C  501C               	movf	___fldiv@aexp^0,w,c
 12480  002B6E  B4D8               	btfsc	status,2,c
 12481  002B70  EFBC  F015         	goto	u9581
 12482  002B74  EFBE  F015         	goto	u9580
 12483  002B78                     u9581:
 12484  002B78  EFD5  F015         	goto	l7675
 12485  002B7C                     u9580:
 12486  002B7C  90D8               	bcf	status,0,c
 12487  002B7E  3610               	rlcf	___fldiv@rem^0,f,c
 12488  002B80  3611               	rlcf	(___fldiv@rem+1)^0,f,c
 12489  002B82  3612               	rlcf	(___fldiv@rem+2)^0,f,c
 12490  002B84  3613               	rlcf	(___fldiv@rem+3)^0,f,c
 12491  002B86  90D8               	bcf	status,0,c
 12492  002B88  3604               	rlcf	___fldiv@b^0,f,c
 12493  002B8A  3605               	rlcf	(___fldiv@b+1)^0,f,c
 12494  002B8C  3606               	rlcf	(___fldiv@b+2)^0,f,c
 12495  002B8E  3607               	rlcf	(___fldiv@b+3)^0,f,c
 12496  002B90  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12497  002B92  EFCD  F015         	goto	u9591
 12498  002B96  EFCF  F015         	goto	u9590
 12499  002B9A                     u9591:
 12500  002B9A  EFD0  F015         	goto	l1413
 12501  002B9E                     u9590:
 12502  002B9E  8004               	bsf	___fldiv@b^0,0,c
 12503  002BA0                     l1413:
 12504  002BA0  90D8               	bcf	status,0,c
 12505  002BA2  3617               	rlcf	___fldiv@grs^0,f,c
 12506  002BA4  3618               	rlcf	(___fldiv@grs+1)^0,f,c
 12507  002BA6  3619               	rlcf	(___fldiv@grs+2)^0,f,c
 12508  002BA8  361A               	rlcf	(___fldiv@grs+3)^0,f,c
 12509  002BAA                     l7675:
 12510  002BAA  5008               	movf	___fldiv@a^0,w,c
 12511  002BAC  5C10               	subwf	___fldiv@rem^0,w,c
 12512  002BAE  5009               	movf	(___fldiv@a+1)^0,w,c
 12513  002BB0  5811               	subwfb	(___fldiv@rem+1)^0,w,c
 12514  002BB2  500A               	movf	(___fldiv@a+2)^0,w,c
 12515  002BB4  5812               	subwfb	(___fldiv@rem+2)^0,w,c
 12516  002BB6  500B               	movf	(___fldiv@a+3)^0,w,c
 12517  002BB8  5813               	subwfb	(___fldiv@rem+3)^0,w,c
 12518  002BBA  A0D8               	btfss	status,0,c
 12519  002BBC  EFE2  F015         	goto	u9601
 12520  002BC0  EFE4  F015         	goto	u9600
 12521  002BC4                     u9601:
 12522  002BC4  EFED  F015         	goto	l7681
 12523  002BC8                     u9600:
 12524  002BC8  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
 12525  002BCA  5008               	movf	___fldiv@a^0,w,c
 12526  002BCC  5E10               	subwf	___fldiv@rem^0,f,c
 12527  002BCE  5009               	movf	(___fldiv@a+1)^0,w,c
 12528  002BD0  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
 12529  002BD2  500A               	movf	(___fldiv@a+2)^0,w,c
 12530  002BD4  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
 12531  002BD6  500B               	movf	(___fldiv@a+3)^0,w,c
 12532  002BD8  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
 12533  002BDA                     l7681:
 12534  002BDA  2A1C               	incf	___fldiv@aexp^0,f,c
 12535  002BDC                     l1410:
 12536  002BDC  0E19               	movlw	25
 12537  002BDE  641C               	cpfsgt	___fldiv@aexp^0,c
 12538  002BE0  EFF4  F015         	goto	u9611
 12539  002BE4  EFF6  F015         	goto	u9610
 12540  002BE8                     u9611:
 12541  002BE8  EFB6  F015         	goto	l7667
 12542  002BEC                     u9610:
 12543  002BEC  5010               	movf	___fldiv@rem^0,w,c
 12544  002BEE  1011               	iorwf	(___fldiv@rem+1)^0,w,c
 12545  002BF0  1012               	iorwf	(___fldiv@rem+2)^0,w,c
 12546  002BF2  1013               	iorwf	(___fldiv@rem+3)^0,w,c
 12547  002BF4  B4D8               	btfsc	status,2,c
 12548  002BF6  EFFF  F015         	goto	u9621
 12549  002BFA  EF01  F016         	goto	u9620
 12550  002BFE                     u9621:
 12551  002BFE  EF19  F016         	goto	l7693
 12552  002C02                     u9620:
 12553  002C02  8017               	bsf	___fldiv@grs^0,0,c
 12554  002C04  EF19  F016         	goto	l7693
 12555  002C08                     l7687:
 12556  002C08  90D8               	bcf	status,0,c
 12557  002C0A  3604               	rlcf	___fldiv@b^0,f,c
 12558  002C0C  3605               	rlcf	(___fldiv@b+1)^0,f,c
 12559  002C0E  3606               	rlcf	(___fldiv@b+2)^0,f,c
 12560  002C10  3607               	rlcf	(___fldiv@b+3)^0,f,c
 12561  002C12  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12562  002C14  EF0E  F016         	goto	u9631
 12563  002C18  EF10  F016         	goto	u9630
 12564  002C1C                     u9631:
 12565  002C1C  EF11  F016         	goto	l1419
 12566  002C20                     u9630:
 12567  002C20  8004               	bsf	___fldiv@b^0,0,c
 12568  002C22                     l1419:
 12569  002C22  90D8               	bcf	status,0,c
 12570  002C24  3617               	rlcf	___fldiv@grs^0,f,c
 12571  002C26  3618               	rlcf	(___fldiv@grs+1)^0,f,c
 12572  002C28  3619               	rlcf	(___fldiv@grs+2)^0,f,c
 12573  002C2A  361A               	rlcf	(___fldiv@grs+3)^0,f,c
 12574  002C2C  0615               	decf	___fldiv@new_exp^0,f,c
 12575  002C2E  A0D8               	btfss	status,0,c
 12576  002C30  0616               	decf	(___fldiv@new_exp+1)^0,f,c
 12577  002C32                     l7693:
 12578  002C32  AE06               	btfss	(___fldiv@b+2)^0,7,c
 12579  002C34  EF1E  F016         	goto	u9641
 12580  002C38  EF20  F016         	goto	u9640
 12581  002C3C                     u9641:
 12582  002C3C  EF04  F016         	goto	l7687
 12583  002C40                     u9640:
 12584  002C40  0E00               	movlw	0
 12585  002C42  6E1C               	movwf	___fldiv@aexp^0,c
 12586  002C44  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12587  002C46  EF27  F016         	goto	u9651
 12588  002C4A  EF29  F016         	goto	u9650
 12589  002C4E                     u9651:
 12590  002C4E  EF4D  F016         	goto	l1421
 12591  002C52                     u9650:
 12592  002C52  0EFF               	movlw	255
 12593  002C54  1417               	andwf	___fldiv@grs^0,w,c
 12594  002C56  6E0C               	movwf	??___fldiv^0,c
 12595  002C58  0EFF               	movlw	255
 12596  002C5A  1418               	andwf	(___fldiv@grs+1)^0,w,c
 12597  002C5C  6E0D               	movwf	(??___fldiv+1)^0,c
 12598  002C5E  0EFF               	movlw	255
 12599  002C60  1419               	andwf	(___fldiv@grs+2)^0,w,c
 12600  002C62  6E0E               	movwf	(??___fldiv+2)^0,c
 12601  002C64  0E7F               	movlw	127
 12602  002C66  141A               	andwf	(___fldiv@grs+3)^0,w,c
 12603  002C68  6E0F               	movwf	(??___fldiv+3)^0,c
 12604  002C6A  500C               	movf	??___fldiv^0,w,c
 12605  002C6C  100D               	iorwf	(??___fldiv+1)^0,w,c
 12606  002C6E  100E               	iorwf	(??___fldiv+2)^0,w,c
 12607  002C70  100F               	iorwf	(??___fldiv+3)^0,w,c
 12608  002C72  B4D8               	btfsc	status,2,c
 12609  002C74  EF3E  F016         	goto	u9661
 12610  002C78  EF40  F016         	goto	u9660
 12611  002C7C                     u9661:
 12612  002C7C  EF44  F016         	goto	l1422
 12613  002C80                     u9660:
 12614  002C80                     l7701:
 12615  002C80  0E01               	movlw	1
 12616  002C82  6E1C               	movwf	___fldiv@aexp^0,c
 12617  002C84  EF4D  F016         	goto	l1421
 12618  002C88                     l1422:
 12619  002C88  A004               	btfss	___fldiv@b^0,0,c
 12620  002C8A  EF49  F016         	goto	u9671
 12621  002C8E  EF4B  F016         	goto	u9670
 12622  002C92                     u9671:
 12623  002C92  EF4D  F016         	goto	l1421
 12624  002C96                     u9670:
 12625  002C96  EF40  F016         	goto	l7701
 12626  002C9A                     l1421:
 12627  002C9A  501C               	movf	___fldiv@aexp^0,w,c
 12628  002C9C  B4D8               	btfsc	status,2,c
 12629  002C9E  EF53  F016         	goto	u9681
 12630  002CA2  EF55  F016         	goto	u9680
 12631  002CA6                     u9681:
 12632  002CA6  EF79  F016         	goto	l7713
 12633  002CAA                     u9680:
 12634  002CAA  0E01               	movlw	1
 12635  002CAC  2604               	addwf	___fldiv@b^0,f,c
 12636  002CAE  0E00               	movlw	0
 12637  002CB0  2205               	addwfc	(___fldiv@b+1)^0,f,c
 12638  002CB2  2206               	addwfc	(___fldiv@b+2)^0,f,c
 12639  002CB4  2207               	addwfc	(___fldiv@b+3)^0,f,c
 12640  002CB6  A007               	btfss	(___fldiv@b+3)^0,0,c
 12641  002CB8  EF60  F016         	goto	u9691
 12642  002CBC  EF62  F016         	goto	u9690
 12643  002CC0                     u9691:
 12644  002CC0  EF79  F016         	goto	l7713
 12645  002CC4                     u9690:
 12646  002CC4  C004  F00C         	movff	___fldiv@b,??___fldiv
 12647  002CC8  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
 12648  002CCC  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
 12649  002CD0  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
 12650  002CD4  340F               	rlcf	(??___fldiv+3)^0,w,c
 12651  002CD6  320F               	rrcf	(??___fldiv+3)^0,f,c
 12652  002CD8  320E               	rrcf	(??___fldiv+2)^0,f,c
 12653  002CDA  320D               	rrcf	(??___fldiv+1)^0,f,c
 12654  002CDC  320C               	rrcf	??___fldiv^0,f,c
 12655  002CDE  C00C  F004         	movff	??___fldiv,___fldiv@b
 12656  002CE2  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
 12657  002CE6  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
 12658  002CEA  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
 12659  002CEE  4A15               	infsnz	___fldiv@new_exp^0,f,c
 12660  002CF0  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
 12661  002CF2                     l7713:
 12662  002CF2  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12663  002CF4  EF84  F016         	goto	u9701
 12664  002CF8  5016               	movf	(___fldiv@new_exp+1)^0,w,c
 12665  002CFA  E108               	bnz	u9700
 12666  002CFC  2815               	incf	___fldiv@new_exp^0,w,c
 12667  002CFE  A0D8               	btfss	status,0,c
 12668  002D00  EF84  F016         	goto	u9701
 12669  002D04  EF86  F016         	goto	u9700
 12670  002D08                     u9701:
 12671  002D08  EF91  F016         	goto	l7717
 12672  002D0C                     u9700:
 12673  002D0C  0E00               	movlw	0
 12674  002D0E  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12675  002D10  6815               	setf	___fldiv@new_exp^0,c
 12676  002D12  0E00               	movlw	0
 12677  002D14  6E04               	movwf	___fldiv@b^0,c
 12678  002D16  0E00               	movlw	0
 12679  002D18  6E05               	movwf	(___fldiv@b+1)^0,c
 12680  002D1A  0E00               	movlw	0
 12681  002D1C  6E06               	movwf	(___fldiv@b+2)^0,c
 12682  002D1E  0E00               	movlw	0
 12683  002D20  6E07               	movwf	(___fldiv@b+3)^0,c
 12684  002D22                     l7717:
 12685  002D22  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12686  002D24  EF9E  F016         	goto	u9710
 12687  002D28  5016               	movf	(___fldiv@new_exp+1)^0,w,c
 12688  002D2A  E106               	bnz	u9711
 12689  002D2C  0415               	decf	___fldiv@new_exp^0,w,c
 12690  002D2E  B0D8               	btfsc	status,0,c
 12691  002D30  EF9C  F016         	goto	u9711
 12692  002D34  EF9E  F016         	goto	u9710
 12693  002D38                     u9711:
 12694  002D38  EFAC  F016         	goto	l7721
 12695  002D3C                     u9710:
 12696  002D3C  0E00               	movlw	0
 12697  002D3E  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12698  002D40  0E00               	movlw	0
 12699  002D42  6E15               	movwf	___fldiv@new_exp^0,c
 12700  002D44  0E00               	movlw	0
 12701  002D46  6E04               	movwf	___fldiv@b^0,c
 12702  002D48  0E00               	movlw	0
 12703  002D4A  6E05               	movwf	(___fldiv@b+1)^0,c
 12704  002D4C  0E00               	movlw	0
 12705  002D4E  6E06               	movwf	(___fldiv@b+2)^0,c
 12706  002D50  0E00               	movlw	0
 12707  002D52  6E07               	movwf	(___fldiv@b+3)^0,c
 12708  002D54  0E00               	movlw	0
 12709  002D56  6E14               	movwf	___fldiv@sign^0,c
 12710  002D58                     l7721:
 12711  002D58  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
 12712  002D5C  A01B               	btfss	___fldiv@bexp^0,0,c
 12713  002D5E  EFB3  F016         	goto	u9721
 12714  002D62  EFB5  F016         	goto	u9720
 12715  002D66                     u9721:
 12716  002D66  EFB8  F016         	goto	l7727
 12717  002D6A                     u9720:
 12718  002D6A  8E06               	bsf	(___fldiv@b+2)^0,7,c
 12719  002D6C  EFB9  F016         	goto	l7729
 12720  002D70                     l7727:
 12721  002D70  9E06               	bcf	(___fldiv@b+2)^0,7,c
 12722  002D72                     l7729:
 12723  002D72  90D8               	bcf	status,0,c
 12724  002D74  301B               	rrcf	___fldiv@bexp^0,w,c
 12725  002D76  6E07               	movwf	(___fldiv@b+3)^0,c
 12726  002D78  EF6F  F015         	goto	l7643
 12727  002D7C                     l1408:
 12728  002D7C  0012               	return		;funcret
 12729  002D7E                     __end_of___fldiv:
 12730                           	opt callstack 0
 12731                           
 12732 ;; *************** function ___awmod *****************
 12733 ;; Defined at:
 12734 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;  dividend        2    3[COMRAM] int 
 12737 ;;  divisor         2    5[COMRAM] int 
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;  sign            1    8[COMRAM] unsigned char 
 12740 ;;  counter         1    7[COMRAM] unsigned char 
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  2    3[COMRAM] int 
 12743 ;; Registers used:
 12744 ;;		wreg, status,2, status,0
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12754 ;;Total ram usage:        6 bytes
 12755 ;; Hardware stack levels used:    1
 12756 ;; Hardware stack levels required when called:    4
 12757 ;; This function calls:
 12758 ;;		Nothing
 12759 ;; This function is called by:
 12760 ;;		_efgtoa
 12761 ;; This function uses a non-reentrant model
 12762 ;;
 12763                           
 12764                           	psect	text29
 12765  00520E                     __ptext29:
 12766                           	opt callstack 0
 12767  00520E                     ___awmod:
 12768                           	opt callstack 21
 12769  00520E  0E00               	movlw	0
 12770  005210  6E09               	movwf	___awmod@sign^0,c
 12771  005212  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
 12772  005214  EF10  F029         	goto	u9980
 12773  005218  EF0E  F029         	goto	u9981
 12774  00521C                     u9981:
 12775  00521C  EF16  F029         	goto	l7925
 12776  005220                     u9980:
 12777  005220  6C04               	negf	___awmod@dividend^0,c
 12778  005222  1E05               	comf	(___awmod@dividend+1)^0,f,c
 12779  005224  B0D8               	btfsc	status,0,c
 12780  005226  2A05               	incf	(___awmod@dividend+1)^0,f,c
 12781  005228  0E01               	movlw	1
 12782  00522A  6E09               	movwf	___awmod@sign^0,c
 12783  00522C                     l7925:
 12784  00522C  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
 12785  00522E  EF1D  F029         	goto	u9990
 12786  005232  EF1B  F029         	goto	u9991
 12787  005236                     u9991:
 12788  005236  EF21  F029         	goto	l7929
 12789  00523A                     u9990:
 12790  00523A  6C06               	negf	___awmod@divisor^0,c
 12791  00523C  1E07               	comf	(___awmod@divisor+1)^0,f,c
 12792  00523E  B0D8               	btfsc	status,0,c
 12793  005240  2A07               	incf	(___awmod@divisor+1)^0,f,c
 12794  005242                     l7929:
 12795  005242  5006               	movf	___awmod@divisor^0,w,c
 12796  005244  1007               	iorwf	(___awmod@divisor+1)^0,w,c
 12797  005246  B4D8               	btfsc	status,2,c
 12798  005248  EF28  F029         	goto	u10001
 12799  00524C  EF2A  F029         	goto	u10000
 12800  005250                     u10001:
 12801  005250  EF4E  F029         	goto	l7945
 12802  005254                     u10000:
 12803  005254  0E01               	movlw	1
 12804  005256  6E08               	movwf	___awmod@counter^0,c
 12805  005258  EF32  F029         	goto	l7935
 12806  00525C                     l7933:
 12807  00525C  90D8               	bcf	status,0,c
 12808  00525E  3606               	rlcf	___awmod@divisor^0,f,c
 12809  005260  3607               	rlcf	(___awmod@divisor+1)^0,f,c
 12810  005262  2A08               	incf	___awmod@counter^0,f,c
 12811  005264                     l7935:
 12812  005264  AE07               	btfss	(___awmod@divisor+1)^0,7,c
 12813  005266  EF37  F029         	goto	u10011
 12814  00526A  EF39  F029         	goto	u10010
 12815  00526E                     u10011:
 12816  00526E  EF2E  F029         	goto	l7933
 12817  005272                     u10010:
 12818  005272                     l7937:
 12819  005272  5006               	movf	___awmod@divisor^0,w,c
 12820  005274  5C04               	subwf	___awmod@dividend^0,w,c
 12821  005276  5007               	movf	(___awmod@divisor+1)^0,w,c
 12822  005278  5805               	subwfb	(___awmod@dividend+1)^0,w,c
 12823  00527A  A0D8               	btfss	status,0,c
 12824  00527C  EF42  F029         	goto	u10021
 12825  005280  EF44  F029         	goto	u10020
 12826  005284                     u10021:
 12827  005284  EF48  F029         	goto	l7941
 12828  005288                     u10020:
 12829  005288  5006               	movf	___awmod@divisor^0,w,c
 12830  00528A  5E04               	subwf	___awmod@dividend^0,f,c
 12831  00528C  5007               	movf	(___awmod@divisor+1)^0,w,c
 12832  00528E  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
 12833  005290                     l7941:
 12834  005290  90D8               	bcf	status,0,c
 12835  005292  3207               	rrcf	(___awmod@divisor+1)^0,f,c
 12836  005294  3206               	rrcf	___awmod@divisor^0,f,c
 12837  005296  2E08               	decfsz	___awmod@counter^0,f,c
 12838  005298  EF39  F029         	goto	l7937
 12839  00529C                     l7945:
 12840  00529C  5009               	movf	___awmod@sign^0,w,c
 12841  00529E  B4D8               	btfsc	status,2,c
 12842  0052A0  EF54  F029         	goto	u10031
 12843  0052A4  EF56  F029         	goto	u10030
 12844  0052A8                     u10031:
 12845  0052A8  EF5A  F029         	goto	l7949
 12846  0052AC                     u10030:
 12847  0052AC  6C04               	negf	___awmod@dividend^0,c
 12848  0052AE  1E05               	comf	(___awmod@dividend+1)^0,f,c
 12849  0052B0  B0D8               	btfsc	status,0,c
 12850  0052B2  2A05               	incf	(___awmod@dividend+1)^0,f,c
 12851  0052B4                     l7949:
 12852  0052B4  C004  F004         	movff	___awmod@dividend,?___awmod
 12853  0052B8  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
 12854  0052BC  0012               	return		;funcret
 12855  0052BE                     __end_of___awmod:
 12856                           	opt callstack 0
 12857                           
 12858 ;; *************** function ___awdiv *****************
 12859 ;; Defined at:
 12860 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;  dividend        2    3[COMRAM] int 
 12863 ;;  divisor         2    5[COMRAM] int 
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;  quotient        2    9[COMRAM] int 
 12866 ;;  sign            1    8[COMRAM] unsigned char 
 12867 ;;  counter         1    7[COMRAM] unsigned char 
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  2    3[COMRAM] int 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;Total ram usage:        8 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    4
 12884 ;; This function calls:
 12885 ;;		Nothing
 12886 ;; This function is called by:
 12887 ;;		_efgtoa
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text30
 12892  00514A                     __ptext30:
 12893                           	opt callstack 0
 12894  00514A                     ___awdiv:
 12895                           	opt callstack 21
 12896  00514A  0E00               	movlw	0
 12897  00514C  6E09               	movwf	___awdiv@sign^0,c
 12898  00514E  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
 12899  005150  EFAE  F028         	goto	u9920
 12900  005154  EFAC  F028         	goto	u9921
 12901  005158                     u9921:
 12902  005158  EFB4  F028         	goto	l7881
 12903  00515C                     u9920:
 12904  00515C  6C06               	negf	___awdiv@divisor^0,c
 12905  00515E  1E07               	comf	(___awdiv@divisor+1)^0,f,c
 12906  005160  B0D8               	btfsc	status,0,c
 12907  005162  2A07               	incf	(___awdiv@divisor+1)^0,f,c
 12908  005164  0E01               	movlw	1
 12909  005166  6E09               	movwf	___awdiv@sign^0,c
 12910  005168                     l7881:
 12911  005168  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
 12912  00516A  EFBB  F028         	goto	u9930
 12913  00516E  EFB9  F028         	goto	u9931
 12914  005172                     u9931:
 12915  005172  EFC1  F028         	goto	l7887
 12916  005176                     u9930:
 12917  005176  6C04               	negf	___awdiv@dividend^0,c
 12918  005178  1E05               	comf	(___awdiv@dividend+1)^0,f,c
 12919  00517A  B0D8               	btfsc	status,0,c
 12920  00517C  2A05               	incf	(___awdiv@dividend+1)^0,f,c
 12921  00517E  0E01               	movlw	1
 12922  005180  1A09               	xorwf	___awdiv@sign^0,f,c
 12923  005182                     l7887:
 12924  005182  0E00               	movlw	0
 12925  005184  6E0B               	movwf	(___awdiv@quotient+1)^0,c
 12926  005186  0E00               	movlw	0
 12927  005188  6E0A               	movwf	___awdiv@quotient^0,c
 12928  00518A  5006               	movf	___awdiv@divisor^0,w,c
 12929  00518C  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
 12930  00518E  B4D8               	btfsc	status,2,c
 12931  005190  EFCC  F028         	goto	u9941
 12932  005194  EFCE  F028         	goto	u9940
 12933  005198                     u9941:
 12934  005198  EFF6  F028         	goto	l7909
 12935  00519C                     u9940:
 12936  00519C  0E01               	movlw	1
 12937  00519E  6E08               	movwf	___awdiv@counter^0,c
 12938  0051A0  EFD6  F028         	goto	l7895
 12939  0051A4                     l7893:
 12940  0051A4  90D8               	bcf	status,0,c
 12941  0051A6  3606               	rlcf	___awdiv@divisor^0,f,c
 12942  0051A8  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
 12943  0051AA  2A08               	incf	___awdiv@counter^0,f,c
 12944  0051AC                     l7895:
 12945  0051AC  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
 12946  0051AE  EFDB  F028         	goto	u9951
 12947  0051B2  EFDD  F028         	goto	u9950
 12948  0051B6                     u9951:
 12949  0051B6  EFD2  F028         	goto	l7893
 12950  0051BA                     u9950:
 12951  0051BA                     l7897:
 12952  0051BA  90D8               	bcf	status,0,c
 12953  0051BC  360A               	rlcf	___awdiv@quotient^0,f,c
 12954  0051BE  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12955  0051C0  5006               	movf	___awdiv@divisor^0,w,c
 12956  0051C2  5C04               	subwf	___awdiv@dividend^0,w,c
 12957  0051C4  5007               	movf	(___awdiv@divisor+1)^0,w,c
 12958  0051C6  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
 12959  0051C8  A0D8               	btfss	status,0,c
 12960  0051CA  EFE9  F028         	goto	u9961
 12961  0051CE  EFEB  F028         	goto	u9960
 12962  0051D2                     u9961:
 12963  0051D2  EFF0  F028         	goto	l7905
 12964  0051D6                     u9960:
 12965  0051D6  5006               	movf	___awdiv@divisor^0,w,c
 12966  0051D8  5E04               	subwf	___awdiv@dividend^0,f,c
 12967  0051DA  5007               	movf	(___awdiv@divisor+1)^0,w,c
 12968  0051DC  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
 12969  0051DE  800A               	bsf	___awdiv@quotient^0,0,c
 12970  0051E0                     l7905:
 12971  0051E0  90D8               	bcf	status,0,c
 12972  0051E2  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
 12973  0051E4  3206               	rrcf	___awdiv@divisor^0,f,c
 12974  0051E6  2E08               	decfsz	___awdiv@counter^0,f,c
 12975  0051E8  EFDD  F028         	goto	l7897
 12976  0051EC                     l7909:
 12977  0051EC  5009               	movf	___awdiv@sign^0,w,c
 12978  0051EE  B4D8               	btfsc	status,2,c
 12979  0051F0  EFFC  F028         	goto	u9971
 12980  0051F4  EFFE  F028         	goto	u9970
 12981  0051F8                     u9971:
 12982  0051F8  EF02  F029         	goto	l7913
 12983  0051FC                     u9970:
 12984  0051FC  6C0A               	negf	___awdiv@quotient^0,c
 12985  0051FE  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
 12986  005200  B0D8               	btfsc	status,0,c
 12987  005202  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
 12988  005204                     l7913:
 12989  005204  C00A  F004         	movff	___awdiv@quotient,?___awdiv
 12990  005208  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
 12991  00520C  0012               	return		;funcret
 12992  00520E                     __end_of___awdiv:
 12993                           	opt callstack 0
 12994                           
 12995 ;; *************** function _dtoa *****************
 12996 ;; Defined at:
 12997 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 13000 ;;		 -> vsnprintf@f(6), 
 13001 ;;  d               8   32[COMRAM] long long 
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;  n               8   56[COMRAM] long long 
 13004 ;;  i               2   64[COMRAM] int 
 13005 ;;  s               2   54[COMRAM] int 
 13006 ;;  w               2   52[COMRAM] int 
 13007 ;;  p               2   50[COMRAM] int 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  2   30[COMRAM] int 
 13010 ;; Registers used:
 13011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13017 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13018 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13019 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13020 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13021 ;;Total ram usage:       36 bytes
 13022 ;; Hardware stack levels used:    1
 13023 ;; Hardware stack levels required when called:    8
 13024 ;; This function calls:
 13025 ;;		___aodiv
 13026 ;;		___aomod
 13027 ;;		_abs
 13028 ;;		_pad
 13029 ;; This function is called by:
 13030 ;;		_vfpfcnvrt
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           
 13034                           	psect	text31
 13035  003104                     __ptext31:
 13036                           	opt callstack 0
 13037  003104                     _dtoa:
 13038                           	opt callstack 18
 13039  003104                     
 13040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13041  003104  C021  F039         	movff	dtoa@d,dtoa@n
 13042  003108  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
 13043  00310C  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
 13044  003110  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
 13045  003114  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
 13046  003118  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
 13047  00311C  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
 13048  003120  C028  F040         	movff	dtoa@d+7,dtoa@n+7
 13049  003124                     
 13050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13051  003124  BE40               	btfsc	(dtoa@n+7)^0,7,c
 13052  003126  EF97  F018         	goto	u10301
 13053  00312A  EF9A  F018         	goto	u10300
 13054  00312E                     u10301:
 13055  00312E  0E01               	movlw	1
 13056  003130  EF9B  F018         	goto	u10310
 13057  003134                     u10300:
 13058  003134  0E00               	movlw	0
 13059  003136                     u10310:
 13060  003136  6E37               	movwf	dtoa@s^0,c
 13061  003138  6A38               	clrf	(dtoa@s+1)^0,c
 13062                           
 13063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13064  00313A  5037               	movf	dtoa@s^0,w,c
 13065  00313C  1038               	iorwf	(dtoa@s+1)^0,w,c
 13066  00313E  B4D8               	btfsc	status,2,c
 13067  003140  EFA4  F018         	goto	u10321
 13068  003144  EFA6  F018         	goto	u10320
 13069  003148                     u10321:
 13070  003148  EFB6  F018         	goto	l8113
 13071  00314C                     u10320:
 13072  00314C                     
 13073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13074  00314C  1E40               	comf	(dtoa@n+7)^0,f,c
 13075  00314E  1E3F               	comf	(dtoa@n+6)^0,f,c
 13076  003150  1E3E               	comf	(dtoa@n+5)^0,f,c
 13077  003152  1E3D               	comf	(dtoa@n+4)^0,f,c
 13078  003154  1E3C               	comf	(dtoa@n+3)^0,f,c
 13079  003156  1E3B               	comf	(dtoa@n+2)^0,f,c
 13080  003158  1E3A               	comf	(dtoa@n+1)^0,f,c
 13081  00315A  6C39               	negf	dtoa@n^0,c
 13082  00315C  0E00               	movlw	0
 13083  00315E  223A               	addwfc	(dtoa@n+1)^0,f,c
 13084  003160  223B               	addwfc	(dtoa@n+2)^0,f,c
 13085  003162  223C               	addwfc	(dtoa@n+3)^0,f,c
 13086  003164  223D               	addwfc	(dtoa@n+4)^0,f,c
 13087  003166  223E               	addwfc	(dtoa@n+5)^0,f,c
 13088  003168  223F               	addwfc	(dtoa@n+6)^0,f,c
 13089  00316A  2240               	addwfc	(dtoa@n+7)^0,f,c
 13090  00316C                     l8113:
 13091                           
 13092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13093  00316C  BE59               	btfsc	(_prec+1)^0,7,c
 13094  00316E  EFBB  F018         	goto	u10331
 13095  003172  EFBD  F018         	goto	u10330
 13096  003176                     u10331:
 13097  003176  EFBF  F018         	goto	l8117
 13098  00317A                     u10330:
 13099  00317A                     
 13100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13101  00317A  0100               	movlb	0	; () banked
 13102  00317C  93EE               	bcf	_flags& (0+255),1,b
 13103  00317E                     l8117:
 13104                           
 13105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13106  00317E  BE59               	btfsc	(_prec+1)^0,7,c
 13107  003180  EFCC  F018         	goto	u10340
 13108  003184  5059               	movf	(_prec+1)^0,w,c
 13109  003186  E106               	bnz	u10341
 13110  003188  0458               	decf	_prec^0,w,c
 13111  00318A  B0D8               	btfsc	status,0,c
 13112  00318C  EFCA  F018         	goto	u10341
 13113  003190  EFCC  F018         	goto	u10340
 13114  003194                     u10341:
 13115  003194  EFD2  F018         	goto	l536
 13116  003198                     u10340:
 13117  003198  0E00               	movlw	0
 13118  00319A  6E34               	movwf	(dtoa@p+1)^0,c
 13119  00319C  0E01               	movlw	1
 13120  00319E  6E33               	movwf	dtoa@p^0,c
 13121  0031A0  EFD6  F018         	goto	l538
 13122  0031A4                     l536:
 13123  0031A4  C058  F033         	movff	_prec,dtoa@p
 13124  0031A8  C059  F034         	movff	_prec+1,dtoa@p+1
 13125  0031AC                     l538:
 13126                           
 13127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13128  0031AC  C0EC  F035         	movff	_width,dtoa@w
 13129  0031B0  C0ED  F036         	movff	_width+1,dtoa@w+1
 13130  0031B4                     
 13131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13132  0031B4  5037               	movf	dtoa@s^0,w,c
 13133  0031B6  1038               	iorwf	(dtoa@s+1)^0,w,c
 13134  0031B8  A4D8               	btfss	status,2,c
 13135  0031BA  EFE1  F018         	goto	u10351
 13136  0031BE  EFE3  F018         	goto	u10350
 13137  0031C2                     u10351:
 13138  0031C2  EFEB  F018         	goto	l8125
 13139  0031C6                     u10350:
 13140  0031C6  0100               	movlb	0	; () banked
 13141  0031C8  A5EE               	btfss	_flags& (0+255),2,b
 13142  0031CA  EFE9  F018         	goto	u10361
 13143  0031CE  EFEB  F018         	goto	u10360
 13144  0031D2                     u10361:
 13145  0031D2  EFEE  F018         	goto	l8127
 13146  0031D6                     u10360:
 13147  0031D6                     l8125:
 13148                           
 13149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13150  0031D6  0635               	decf	dtoa@w^0,f,c
 13151  0031D8  A0D8               	btfss	status,0,c
 13152  0031DA  0636               	decf	(dtoa@w+1)^0,f,c
 13153  0031DC                     l8127:
 13154                           
 13155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13156  0031DC  0E00               	movlw	0
 13157  0031DE  6E42               	movwf	(dtoa@i+1)^0,c
 13158  0031E0  0E4F               	movlw	79
 13159  0031E2  6E41               	movwf	dtoa@i^0,c
 13160  0031E4                     
 13161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13162  0031E4  0E00               	movlw	0
 13163  0031E6  0101               	movlb	1	; () banked
 13164  0031E8  6FB3               	movwf	(_dbuf+79)& (0+255),b
 13165                           
 13166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13167  0031EA  EF73  F019         	goto	l8141
 13168  0031EE                     l8131:
 13169                           
 13170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13171  0031EE  0641               	decf	dtoa@i^0,f,c
 13172  0031F0  A0D8               	btfss	status,0,c
 13173  0031F2  0642               	decf	(dtoa@i+1)^0,f,c
 13174  0031F4                     
 13175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13176  0031F4  0E64               	movlw	low _dbuf
 13177  0031F6  2441               	addwf	dtoa@i^0,w,c
 13178  0031F8  6ED9               	movwf	fsr2l,c
 13179  0031FA  0E01               	movlw	high _dbuf
 13180  0031FC  2042               	addwfc	(dtoa@i+1)^0,w,c
 13181  0031FE  6EDA               	movwf	fsr2h,c
 13182  003200  C039  F004         	movff	dtoa@n,___aomod@dividend
 13183  003204  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
 13184  003208  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
 13185  00320C  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
 13186  003210  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
 13187  003214  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
 13188  003218  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
 13189  00321C  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
 13190  003220  0E0A               	movlw	10
 13191  003222  6E0C               	movwf	___aomod@divisor^0,c
 13192  003224  0E00               	movlw	0
 13193  003226  6E0D               	movwf	(___aomod@divisor+1)^0,c
 13194  003228  0E00               	movlw	0
 13195  00322A  6E0E               	movwf	(___aomod@divisor+2)^0,c
 13196  00322C  0E00               	movlw	0
 13197  00322E  6E0F               	movwf	(___aomod@divisor+3)^0,c
 13198  003230  0E00               	movlw	0
 13199  003232  6E10               	movwf	(___aomod@divisor+4)^0,c
 13200  003234  0E00               	movlw	0
 13201  003236  6E11               	movwf	(___aomod@divisor+5)^0,c
 13202  003238  0E00               	movlw	0
 13203  00323A  6E12               	movwf	(___aomod@divisor+6)^0,c
 13204  00323C  0E00               	movlw	0
 13205  00323E  6E13               	movwf	(___aomod@divisor+7)^0,c
 13206  003240  EC13  F023         	call	___aomod	;wreg free
 13207  003244  C004  F029         	movff	?___aomod,??_dtoa
 13208  003248  C005  F02A         	movff	?___aomod+1,??_dtoa+1
 13209  00324C  C006  F02B         	movff	?___aomod+2,??_dtoa+2
 13210  003250  C007  F02C         	movff	?___aomod+3,??_dtoa+3
 13211  003254  C008  F02D         	movff	?___aomod+4,??_dtoa+4
 13212  003258  C009  F02E         	movff	?___aomod+5,??_dtoa+5
 13213  00325C  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
 13214  003260  C00B  F030         	movff	?___aomod+7,??_dtoa+7
 13215  003264  C029  F016         	movff	??_dtoa,abs@a
 13216  003268  C02B  F017         	movff	??_dtoa+2,abs@a+1
 13217  00326C  EC58  F02C         	call	_abs	;wreg free
 13218  003270  5016               	movf	?_abs^0,w,c
 13219  003272  0F30               	addlw	48
 13220  003274  6EDF               	movwf	indf2,c
 13221  003276                     
 13222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13223  003276  0633               	decf	dtoa@p^0,f,c
 13224  003278  A0D8               	btfss	status,0,c
 13225  00327A  0634               	decf	(dtoa@p+1)^0,f,c
 13226  00327C                     
 13227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13228  00327C  0635               	decf	dtoa@w^0,f,c
 13229  00327E  A0D8               	btfss	status,0,c
 13230  003280  0636               	decf	(dtoa@w+1)^0,f,c
 13231  003282                     
 13232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13233  003282  C039  F004         	movff	dtoa@n,___aodiv@dividend
 13234  003286  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
 13235  00328A  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
 13236  00328E  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
 13237  003292  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
 13238  003296  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
 13239  00329A  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
 13240  00329E  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
 13241  0032A2  0E0A               	movlw	10
 13242  0032A4  6E0C               	movwf	___aodiv@divisor^0,c
 13243  0032A6  0E00               	movlw	0
 13244  0032A8  6E0D               	movwf	(___aodiv@divisor+1)^0,c
 13245  0032AA  0E00               	movlw	0
 13246  0032AC  6E0E               	movwf	(___aodiv@divisor+2)^0,c
 13247  0032AE  0E00               	movlw	0
 13248  0032B0  6E0F               	movwf	(___aodiv@divisor+3)^0,c
 13249  0032B2  0E00               	movlw	0
 13250  0032B4  6E10               	movwf	(___aodiv@divisor+4)^0,c
 13251  0032B6  0E00               	movlw	0
 13252  0032B8  6E11               	movwf	(___aodiv@divisor+5)^0,c
 13253  0032BA  0E00               	movlw	0
 13254  0032BC  6E12               	movwf	(___aodiv@divisor+6)^0,c
 13255  0032BE  0E00               	movlw	0
 13256  0032C0  6E13               	movwf	(___aodiv@divisor+7)^0,c
 13257  0032C2  EC0D  F020         	call	___aodiv	;wreg free
 13258  0032C6  C004  F039         	movff	?___aodiv,dtoa@n
 13259  0032CA  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
 13260  0032CE  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
 13261  0032D2  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
 13262  0032D6  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
 13263  0032DA  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
 13264  0032DE  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
 13265  0032E2  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
 13266  0032E6                     l8141:
 13267                           
 13268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13269  0032E6  BE42               	btfsc	(dtoa@i+1)^0,7,c
 13270  0032E8  EF7E  F019         	goto	u10371
 13271  0032EC  5042               	movf	(dtoa@i+1)^0,w,c
 13272  0032EE  E108               	bnz	u10370
 13273  0032F0  0441               	decf	dtoa@i^0,w,c
 13274  0032F2  A0D8               	btfss	status,0,c
 13275  0032F4  EF7E  F019         	goto	u10371
 13276  0032F8  EF80  F019         	goto	u10370
 13277  0032FC                     u10371:
 13278  0032FC  EFB1  F019         	goto	l8151
 13279  003300                     u10370:
 13280  003300  5039               	movf	dtoa@n^0,w,c
 13281  003302  103A               	iorwf	(dtoa@n+1)^0,w,c
 13282  003304  103B               	iorwf	(dtoa@n+2)^0,w,c
 13283  003306  103C               	iorwf	(dtoa@n+3)^0,w,c
 13284  003308  103D               	iorwf	(dtoa@n+4)^0,w,c
 13285  00330A  103E               	iorwf	(dtoa@n+5)^0,w,c
 13286  00330C  103F               	iorwf	(dtoa@n+6)^0,w,c
 13287  00330E  1040               	iorwf	(dtoa@n+7)^0,w,c
 13288  003310  A4D8               	btfss	status,2,c
 13289  003312  EF8D  F019         	goto	u10381
 13290  003316  EF8F  F019         	goto	u10380
 13291  00331A                     u10381:
 13292  00331A  EFF7  F018         	goto	l8131
 13293  00331E                     u10380:
 13294  00331E  BE34               	btfsc	(dtoa@p+1)^0,7,c
 13295  003320  EF9C  F019         	goto	u10390
 13296  003324  5034               	movf	(dtoa@p+1)^0,w,c
 13297  003326  E106               	bnz	u10391
 13298  003328  0433               	decf	dtoa@p^0,w,c
 13299  00332A  B0D8               	btfsc	status,0,c
 13300  00332C  EF9A  F019         	goto	u10391
 13301  003330  EF9C  F019         	goto	u10390
 13302  003334                     u10391:
 13303  003334  EFF7  F018         	goto	l8131
 13304  003338                     u10390:
 13305  003338  BE36               	btfsc	(dtoa@w+1)^0,7,c
 13306  00333A  EFA7  F019         	goto	u10401
 13307  00333E  5036               	movf	(dtoa@w+1)^0,w,c
 13308  003340  E108               	bnz	u10400
 13309  003342  0435               	decf	dtoa@w^0,w,c
 13310  003344  A0D8               	btfss	status,0,c
 13311  003346  EFA7  F019         	goto	u10401
 13312  00334A  EFA9  F019         	goto	u10400
 13313  00334E                     u10401:
 13314  00334E  EFB1  F019         	goto	l8151
 13315  003352                     u10400:
 13316  003352  0100               	movlb	0	; () banked
 13317  003354  B3EE               	btfsc	_flags& (0+255),1,b
 13318  003356  EFAF  F019         	goto	u10411
 13319  00335A  EFB1  F019         	goto	u10410
 13320  00335E                     u10411:
 13321  00335E  EFF7  F018         	goto	l8131
 13322  003362                     u10410:
 13323  003362                     l8151:
 13324                           
 13325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13326  003362  5037               	movf	dtoa@s^0,w,c
 13327  003364  1038               	iorwf	(dtoa@s+1)^0,w,c
 13328  003366  A4D8               	btfss	status,2,c
 13329  003368  EFB8  F019         	goto	u10421
 13330  00336C  EFBA  F019         	goto	u10420
 13331  003370                     u10421:
 13332  003370  EFC2  F019         	goto	l8155
 13333  003374                     u10420:
 13334  003374  0100               	movlb	0	; () banked
 13335  003376  A5EE               	btfss	_flags& (0+255),2,b
 13336  003378  EFC0  F019         	goto	u10431
 13337  00337C  EFC2  F019         	goto	u10430
 13338  003380                     u10431:
 13339  003380  EFE0  F019         	goto	l8165
 13340  003384                     u10430:
 13341  003384                     l8155:
 13342                           
 13343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13344  003384  0641               	decf	dtoa@i^0,f,c
 13345  003386  A0D8               	btfss	status,0,c
 13346  003388  0642               	decf	(dtoa@i+1)^0,f,c
 13347  00338A                     
 13348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13349  00338A  5037               	movf	dtoa@s^0,w,c
 13350  00338C  1038               	iorwf	(dtoa@s+1)^0,w,c
 13351  00338E  A4D8               	btfss	status,2,c
 13352  003390  EFCC  F019         	goto	u10441
 13353  003394  EFCE  F019         	goto	u10440
 13354  003398                     u10441:
 13355  003398  EFD4  F019         	goto	l8161
 13356  00339C                     u10440:
 13357  00339C  0E00               	movlw	0
 13358  00339E  6E32               	movwf	(_dtoa$1371+1)^0,c
 13359  0033A0  0E2B               	movlw	43
 13360  0033A2  6E31               	movwf	_dtoa$1371^0,c
 13361  0033A4  EFD8  F019         	goto	l8163
 13362  0033A8                     l8161:
 13363  0033A8  0E00               	movlw	0
 13364  0033AA  6E32               	movwf	(_dtoa$1371+1)^0,c
 13365  0033AC  0E2D               	movlw	45
 13366  0033AE  6E31               	movwf	_dtoa$1371^0,c
 13367  0033B0                     l8163:
 13368  0033B0  0E64               	movlw	low _dbuf
 13369  0033B2  2441               	addwf	dtoa@i^0,w,c
 13370  0033B4  6ED9               	movwf	fsr2l,c
 13371  0033B6  0E01               	movlw	high _dbuf
 13372  0033B8  2042               	addwfc	(dtoa@i+1)^0,w,c
 13373  0033BA  6EDA               	movwf	fsr2h,c
 13374  0033BC  C031  FFDF         	movff	_dtoa$1371,indf2
 13375  0033C0                     l8165:
 13376                           
 13377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13378  0033C0  C01F  F014         	movff	dtoa@fp,pad@fp
 13379  0033C4  C020  F015         	movff	dtoa@fp+1,pad@fp+1
 13380  0033C8  0E64               	movlw	low _dbuf
 13381  0033CA  2441               	addwf	dtoa@i^0,w,c
 13382  0033CC  6E16               	movwf	pad@buf^0,c
 13383  0033CE  0E01               	movlw	high _dbuf
 13384  0033D0  2042               	addwfc	(dtoa@i+1)^0,w,c
 13385  0033D2  6E17               	movwf	(pad@buf+1)^0,c
 13386  0033D4  C035  F018         	movff	dtoa@w,pad@p
 13387  0033D8  C036  F019         	movff	dtoa@w+1,pad@p+1
 13388  0033DC  EC42  F028         	call	_pad	;wreg free
 13389  0033E0  C014  F01F         	movff	?_pad,?_dtoa
 13390  0033E4  C015  F020         	movff	?_pad+1,?_dtoa+1
 13391  0033E8  0012               	return		;funcret
 13392  0033EA                     __end_of_dtoa:
 13393                           	opt callstack 0
 13394                           
 13395 ;; *************** function _abs *****************
 13396 ;; Defined at:
 13397 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;  a               2   21[COMRAM] int 
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;		None
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  2   21[COMRAM] int 
 13404 ;; Registers used:
 13405 ;;		wreg, status,2, status,0
 13406 ;; Tracked objects:
 13407 ;;		On entry : 0/0
 13408 ;;		On exit  : 0/0
 13409 ;;		Unchanged: 0/0
 13410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13415 ;;Total ram usage:        4 bytes
 13416 ;; Hardware stack levels used:    1
 13417 ;; Hardware stack levels required when called:    4
 13418 ;; This function calls:
 13419 ;;		Nothing
 13420 ;; This function is called by:
 13421 ;;		_dtoa
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           	psect	text32
 13426  0058B0                     __ptext32:
 13427                           	opt callstack 0
 13428  0058B0                     _abs:
 13429                           	opt callstack 21
 13430  0058B0  BE17               	btfsc	(abs@a+1)^0,7,c
 13431  0058B2  EF65  F02C         	goto	u9070
 13432  0058B6  5017               	movf	(abs@a+1)^0,w,c
 13433  0058B8  E106               	bnz	u9071
 13434  0058BA  0416               	decf	abs@a^0,w,c
 13435  0058BC  B0D8               	btfsc	status,0,c
 13436  0058BE  EF63  F02C         	goto	u9071
 13437  0058C2  EF65  F02C         	goto	u9070
 13438  0058C6                     u9071:
 13439  0058C6  EF73  F02C         	goto	l1512
 13440  0058CA                     u9070:
 13441  0058CA  C016  F018         	movff	abs@a,??_abs
 13442  0058CE  C017  F019         	movff	abs@a+1,??_abs+1
 13443  0058D2  1E18               	comf	??_abs^0,f,c
 13444  0058D4  1E19               	comf	(??_abs+1)^0,f,c
 13445  0058D6  4A18               	infsnz	??_abs^0,f,c
 13446  0058D8  2A19               	incf	(??_abs+1)^0,f,c
 13447  0058DA  C018  F016         	movff	??_abs,?_abs
 13448  0058DE  C019  F017         	movff	??_abs+1,?_abs+1
 13449  0058E2  EF77  F02C         	goto	l1515
 13450  0058E6                     l1512:
 13451  0058E6  C016  F016         	movff	abs@a,?_abs
 13452  0058EA  C017  F017         	movff	abs@a+1,?_abs+1
 13453  0058EE                     l1515:
 13454  0058EE  0012               	return		;funcret
 13455  0058F0                     __end_of_abs:
 13456                           	opt callstack 0
 13457                           
 13458 ;; *************** function ___aomod *****************
 13459 ;; Defined at:
 13460 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  dividend        8    3[COMRAM] long long 
 13463 ;;  divisor         8   11[COMRAM] long long 
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;  sign            1   20[COMRAM] unsigned char 
 13466 ;;  counter         1   19[COMRAM] unsigned char 
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  8    3[COMRAM] long long 
 13469 ;; Registers used:
 13470 ;;		wreg, status,2, status,0
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 0/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13476 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13479 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13480 ;;Total ram usage:       18 bytes
 13481 ;; Hardware stack levels used:    1
 13482 ;; Hardware stack levels required when called:    4
 13483 ;; This function calls:
 13484 ;;		Nothing
 13485 ;; This function is called by:
 13486 ;;		_dtoa
 13487 ;; This function uses a non-reentrant model
 13488 ;;
 13489                           
 13490                           	psect	text33
 13491  004626                     __ptext33:
 13492                           	opt callstack 0
 13493  004626                     ___aomod:
 13494                           	opt callstack 21
 13495  004626  0E00               	movlw	0
 13496  004628  6E15               	movwf	___aomod@sign^0,c
 13497  00462A  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
 13498  00462C  EF1C  F023         	goto	u9440
 13499  004630  EF1A  F023         	goto	u9441
 13500  004634                     u9441:
 13501  004634  EF2E  F023         	goto	l7571
 13502  004638                     u9440:
 13503  004638  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 13504  00463A  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 13505  00463C  1E09               	comf	(___aomod@dividend+5)^0,f,c
 13506  00463E  1E08               	comf	(___aomod@dividend+4)^0,f,c
 13507  004640  1E07               	comf	(___aomod@dividend+3)^0,f,c
 13508  004642  1E06               	comf	(___aomod@dividend+2)^0,f,c
 13509  004644  1E05               	comf	(___aomod@dividend+1)^0,f,c
 13510  004646  6C04               	negf	___aomod@dividend^0,c
 13511  004648  0E00               	movlw	0
 13512  00464A  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 13513  00464C  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 13514  00464E  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 13515  004650  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 13516  004652  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 13517  004654  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 13518  004656  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 13519  004658  0E01               	movlw	1
 13520  00465A  6E15               	movwf	___aomod@sign^0,c
 13521  00465C                     l7571:
 13522  00465C  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
 13523  00465E  EF35  F023         	goto	u9450
 13524  004662  EF33  F023         	goto	u9451
 13525  004666                     u9451:
 13526  004666  EF45  F023         	goto	l7575
 13527  00466A                     u9450:
 13528  00466A  1E13               	comf	(___aomod@divisor+7)^0,f,c
 13529  00466C  1E12               	comf	(___aomod@divisor+6)^0,f,c
 13530  00466E  1E11               	comf	(___aomod@divisor+5)^0,f,c
 13531  004670  1E10               	comf	(___aomod@divisor+4)^0,f,c
 13532  004672  1E0F               	comf	(___aomod@divisor+3)^0,f,c
 13533  004674  1E0E               	comf	(___aomod@divisor+2)^0,f,c
 13534  004676  1E0D               	comf	(___aomod@divisor+1)^0,f,c
 13535  004678  6C0C               	negf	___aomod@divisor^0,c
 13536  00467A  0E00               	movlw	0
 13537  00467C  220D               	addwfc	(___aomod@divisor+1)^0,f,c
 13538  00467E  220E               	addwfc	(___aomod@divisor+2)^0,f,c
 13539  004680  220F               	addwfc	(___aomod@divisor+3)^0,f,c
 13540  004682  2210               	addwfc	(___aomod@divisor+4)^0,f,c
 13541  004684  2211               	addwfc	(___aomod@divisor+5)^0,f,c
 13542  004686  2212               	addwfc	(___aomod@divisor+6)^0,f,c
 13543  004688  2213               	addwfc	(___aomod@divisor+7)^0,f,c
 13544  00468A                     l7575:
 13545  00468A  500C               	movf	___aomod@divisor^0,w,c
 13546  00468C  100D               	iorwf	(___aomod@divisor+1)^0,w,c
 13547  00468E  100E               	iorwf	(___aomod@divisor+2)^0,w,c
 13548  004690  100F               	iorwf	(___aomod@divisor+3)^0,w,c
 13549  004692  1010               	iorwf	(___aomod@divisor+4)^0,w,c
 13550  004694  1011               	iorwf	(___aomod@divisor+5)^0,w,c
 13551  004696  1012               	iorwf	(___aomod@divisor+6)^0,w,c
 13552  004698  1013               	iorwf	(___aomod@divisor+7)^0,w,c
 13553  00469A  B4D8               	btfsc	status,2,c
 13554  00469C  EF52  F023         	goto	u9461
 13555  0046A0  EF54  F023         	goto	u9460
 13556  0046A4                     u9461:
 13557  0046A4  EF9C  F023         	goto	l7591
 13558  0046A8                     u9460:
 13559  0046A8  0E01               	movlw	1
 13560  0046AA  6E14               	movwf	___aomod@counter^0,c
 13561  0046AC  EF62  F023         	goto	l7581
 13562  0046B0                     l7579:
 13563  0046B0  90D8               	bcf	status,0,c
 13564  0046B2  360C               	rlcf	___aomod@divisor^0,f,c
 13565  0046B4  360D               	rlcf	(___aomod@divisor+1)^0,f,c
 13566  0046B6  360E               	rlcf	(___aomod@divisor+2)^0,f,c
 13567  0046B8  360F               	rlcf	(___aomod@divisor+3)^0,f,c
 13568  0046BA  3610               	rlcf	(___aomod@divisor+4)^0,f,c
 13569  0046BC  3611               	rlcf	(___aomod@divisor+5)^0,f,c
 13570  0046BE  3612               	rlcf	(___aomod@divisor+6)^0,f,c
 13571  0046C0  3613               	rlcf	(___aomod@divisor+7)^0,f,c
 13572  0046C2  2A14               	incf	___aomod@counter^0,f,c
 13573  0046C4                     l7581:
 13574  0046C4  AE13               	btfss	(___aomod@divisor+7)^0,7,c
 13575  0046C6  EF67  F023         	goto	u9471
 13576  0046CA  EF69  F023         	goto	u9470
 13577  0046CE                     u9471:
 13578  0046CE  EF58  F023         	goto	l7579
 13579  0046D2                     u9470:
 13580  0046D2                     l7583:
 13581  0046D2  500C               	movf	___aomod@divisor^0,w,c
 13582  0046D4  5C04               	subwf	___aomod@dividend^0,w,c
 13583  0046D6  500D               	movf	(___aomod@divisor+1)^0,w,c
 13584  0046D8  5805               	subwfb	(___aomod@dividend+1)^0,w,c
 13585  0046DA  500E               	movf	(___aomod@divisor+2)^0,w,c
 13586  0046DC  5806               	subwfb	(___aomod@dividend+2)^0,w,c
 13587  0046DE  500F               	movf	(___aomod@divisor+3)^0,w,c
 13588  0046E0  5807               	subwfb	(___aomod@dividend+3)^0,w,c
 13589  0046E2  5010               	movf	(___aomod@divisor+4)^0,w,c
 13590  0046E4  5808               	subwfb	(___aomod@dividend+4)^0,w,c
 13591  0046E6  5011               	movf	(___aomod@divisor+5)^0,w,c
 13592  0046E8  5809               	subwfb	(___aomod@dividend+5)^0,w,c
 13593  0046EA  5012               	movf	(___aomod@divisor+6)^0,w,c
 13594  0046EC  580A               	subwfb	(___aomod@dividend+6)^0,w,c
 13595  0046EE  5013               	movf	(___aomod@divisor+7)^0,w,c
 13596  0046F0  580B               	subwfb	(___aomod@dividend+7)^0,w,c
 13597  0046F2  A0D8               	btfss	status,0,c
 13598  0046F4  EF7E  F023         	goto	u9481
 13599  0046F8  EF80  F023         	goto	u9480
 13600  0046FC                     u9481:
 13601  0046FC  EF90  F023         	goto	l7587
 13602  004700                     u9480:
 13603  004700  500C               	movf	___aomod@divisor^0,w,c
 13604  004702  5E04               	subwf	___aomod@dividend^0,f,c
 13605  004704  500D               	movf	(___aomod@divisor+1)^0,w,c
 13606  004706  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
 13607  004708  500E               	movf	(___aomod@divisor+2)^0,w,c
 13608  00470A  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
 13609  00470C  500F               	movf	(___aomod@divisor+3)^0,w,c
 13610  00470E  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
 13611  004710  5010               	movf	(___aomod@divisor+4)^0,w,c
 13612  004712  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
 13613  004714  5011               	movf	(___aomod@divisor+5)^0,w,c
 13614  004716  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
 13615  004718  5012               	movf	(___aomod@divisor+6)^0,w,c
 13616  00471A  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
 13617  00471C  5013               	movf	(___aomod@divisor+7)^0,w,c
 13618  00471E  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
 13619  004720                     l7587:
 13620  004720  90D8               	bcf	status,0,c
 13621  004722  3213               	rrcf	(___aomod@divisor+7)^0,f,c
 13622  004724  3212               	rrcf	(___aomod@divisor+6)^0,f,c
 13623  004726  3211               	rrcf	(___aomod@divisor+5)^0,f,c
 13624  004728  3210               	rrcf	(___aomod@divisor+4)^0,f,c
 13625  00472A  320F               	rrcf	(___aomod@divisor+3)^0,f,c
 13626  00472C  320E               	rrcf	(___aomod@divisor+2)^0,f,c
 13627  00472E  320D               	rrcf	(___aomod@divisor+1)^0,f,c
 13628  004730  320C               	rrcf	___aomod@divisor^0,f,c
 13629  004732  2E14               	decfsz	___aomod@counter^0,f,c
 13630  004734  EF69  F023         	goto	l7583
 13631  004738                     l7591:
 13632  004738  5015               	movf	___aomod@sign^0,w,c
 13633  00473A  B4D8               	btfsc	status,2,c
 13634  00473C  EFA2  F023         	goto	u9491
 13635  004740  EFA4  F023         	goto	u9490
 13636  004744                     u9491:
 13637  004744  EFB4  F023         	goto	l7595
 13638  004748                     u9490:
 13639  004748  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 13640  00474A  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 13641  00474C  1E09               	comf	(___aomod@dividend+5)^0,f,c
 13642  00474E  1E08               	comf	(___aomod@dividend+4)^0,f,c
 13643  004750  1E07               	comf	(___aomod@dividend+3)^0,f,c
 13644  004752  1E06               	comf	(___aomod@dividend+2)^0,f,c
 13645  004754  1E05               	comf	(___aomod@dividend+1)^0,f,c
 13646  004756  6C04               	negf	___aomod@dividend^0,c
 13647  004758  0E00               	movlw	0
 13648  00475A  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 13649  00475C  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 13650  00475E  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 13651  004760  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 13652  004762  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 13653  004764  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 13654  004766  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 13655  004768                     l7595:
 13656  004768  C004  F004         	movff	___aomod@dividend,?___aomod
 13657  00476C  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
 13658  004770  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
 13659  004774  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
 13660  004778  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
 13661  00477C  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
 13662  004780  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
 13663  004784  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
 13664  004788  0012               	return		;funcret
 13665  00478A                     __end_of___aomod:
 13666                           	opt callstack 0
 13667                           
 13668 ;; *************** function ___aodiv *****************
 13669 ;; Defined at:
 13670 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;  dividend        8    3[COMRAM] long long 
 13673 ;;  divisor         8   11[COMRAM] long long 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  quotient        8   21[COMRAM] long long 
 13676 ;;  sign            1   20[COMRAM] unsigned char 
 13677 ;;  counter         1   19[COMRAM] unsigned char 
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  8    3[COMRAM] long long 
 13680 ;; Registers used:
 13681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13687 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13688 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13690 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13691 ;;Total ram usage:       26 bytes
 13692 ;; Hardware stack levels used:    1
 13693 ;; Hardware stack levels required when called:    4
 13694 ;; This function calls:
 13695 ;;		Nothing
 13696 ;; This function is called by:
 13697 ;;		_dtoa
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text34
 13702  00401A                     __ptext34:
 13703                           	opt callstack 0
 13704  00401A                     ___aodiv:
 13705                           	opt callstack 21
 13706  00401A  0E00               	movlw	0
 13707  00401C  6E15               	movwf	___aodiv@sign^0,c
 13708  00401E  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
 13709  004020  EF16  F020         	goto	u9370
 13710  004024  EF14  F020         	goto	u9371
 13711  004028                     u9371:
 13712  004028  EF28  F020         	goto	l7527
 13713  00402C                     u9370:
 13714  00402C  1E13               	comf	(___aodiv@divisor+7)^0,f,c
 13715  00402E  1E12               	comf	(___aodiv@divisor+6)^0,f,c
 13716  004030  1E11               	comf	(___aodiv@divisor+5)^0,f,c
 13717  004032  1E10               	comf	(___aodiv@divisor+4)^0,f,c
 13718  004034  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
 13719  004036  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
 13720  004038  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
 13721  00403A  6C0C               	negf	___aodiv@divisor^0,c
 13722  00403C  0E00               	movlw	0
 13723  00403E  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
 13724  004040  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
 13725  004042  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
 13726  004044  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
 13727  004046  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
 13728  004048  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
 13729  00404A  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
 13730  00404C  0E01               	movlw	1
 13731  00404E  6E15               	movwf	___aodiv@sign^0,c
 13732  004050                     l7527:
 13733  004050  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
 13734  004052  EF2F  F020         	goto	u9380
 13735  004056  EF2D  F020         	goto	u9381
 13736  00405A                     u9381:
 13737  00405A  EF41  F020         	goto	l7533
 13738  00405E                     u9380:
 13739  00405E  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
 13740  004060  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
 13741  004062  1E09               	comf	(___aodiv@dividend+5)^0,f,c
 13742  004064  1E08               	comf	(___aodiv@dividend+4)^0,f,c
 13743  004066  1E07               	comf	(___aodiv@dividend+3)^0,f,c
 13744  004068  1E06               	comf	(___aodiv@dividend+2)^0,f,c
 13745  00406A  1E05               	comf	(___aodiv@dividend+1)^0,f,c
 13746  00406C  6C04               	negf	___aodiv@dividend^0,c
 13747  00406E  0E00               	movlw	0
 13748  004070  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
 13749  004072  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
 13750  004074  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
 13751  004076  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
 13752  004078  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
 13753  00407A  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
 13754  00407C  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
 13755  00407E  0E01               	movlw	1
 13756  004080  1A15               	xorwf	___aodiv@sign^0,f,c
 13757  004082                     l7533:
 13758  004082  EE20  F016         	lfsr	2,___aodiv@quotient
 13759  004086  0E07               	movlw	7
 13760  004088                     u9391:
 13761  004088  6ADE               	clrf	postinc2,c
 13762  00408A  06E8               	decf	wreg,f,c
 13763  00408C  E2FD               	bc	u9391
 13764  00408E  500C               	movf	___aodiv@divisor^0,w,c
 13765  004090  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
 13766  004092  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
 13767  004094  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
 13768  004096  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
 13769  004098  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
 13770  00409A  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
 13771  00409C  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
 13772  00409E  B4D8               	btfsc	status,2,c
 13773  0040A0  EF54  F020         	goto	u9401
 13774  0040A4  EF56  F020         	goto	u9400
 13775  0040A8                     u9401:
 13776  0040A8  EFA8  F020         	goto	l7555
 13777  0040AC                     u9400:
 13778  0040AC  0E01               	movlw	1
 13779  0040AE  6E14               	movwf	___aodiv@counter^0,c
 13780  0040B0  EF64  F020         	goto	l7541
 13781  0040B4                     l7539:
 13782  0040B4  90D8               	bcf	status,0,c
 13783  0040B6  360C               	rlcf	___aodiv@divisor^0,f,c
 13784  0040B8  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
 13785  0040BA  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
 13786  0040BC  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
 13787  0040BE  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
 13788  0040C0  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
 13789  0040C2  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
 13790  0040C4  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
 13791  0040C6  2A14               	incf	___aodiv@counter^0,f,c
 13792  0040C8                     l7541:
 13793  0040C8  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
 13794  0040CA  EF69  F020         	goto	u9411
 13795  0040CE  EF6B  F020         	goto	u9410
 13796  0040D2                     u9411:
 13797  0040D2  EF5A  F020         	goto	l7539
 13798  0040D6                     u9410:
 13799  0040D6                     l7543:
 13800  0040D6  90D8               	bcf	status,0,c
 13801  0040D8  3616               	rlcf	___aodiv@quotient^0,f,c
 13802  0040DA  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
 13803  0040DC  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
 13804  0040DE  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
 13805  0040E0  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
 13806  0040E2  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
 13807  0040E4  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
 13808  0040E6  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
 13809  0040E8  500C               	movf	___aodiv@divisor^0,w,c
 13810  0040EA  5C04               	subwf	___aodiv@dividend^0,w,c
 13811  0040EC  500D               	movf	(___aodiv@divisor+1)^0,w,c
 13812  0040EE  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
 13813  0040F0  500E               	movf	(___aodiv@divisor+2)^0,w,c
 13814  0040F2  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
 13815  0040F4  500F               	movf	(___aodiv@divisor+3)^0,w,c
 13816  0040F6  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
 13817  0040F8  5010               	movf	(___aodiv@divisor+4)^0,w,c
 13818  0040FA  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
 13819  0040FC  5011               	movf	(___aodiv@divisor+5)^0,w,c
 13820  0040FE  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
 13821  004100  5012               	movf	(___aodiv@divisor+6)^0,w,c
 13822  004102  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
 13823  004104  5013               	movf	(___aodiv@divisor+7)^0,w,c
 13824  004106  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
 13825  004108  A0D8               	btfss	status,0,c
 13826  00410A  EF89  F020         	goto	u9421
 13827  00410E  EF8B  F020         	goto	u9420
 13828  004112                     u9421:
 13829  004112  EF9C  F020         	goto	l7551
 13830  004116                     u9420:
 13831  004116  500C               	movf	___aodiv@divisor^0,w,c
 13832  004118  5E04               	subwf	___aodiv@dividend^0,f,c
 13833  00411A  500D               	movf	(___aodiv@divisor+1)^0,w,c
 13834  00411C  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
 13835  00411E  500E               	movf	(___aodiv@divisor+2)^0,w,c
 13836  004120  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
 13837  004122  500F               	movf	(___aodiv@divisor+3)^0,w,c
 13838  004124  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
 13839  004126  5010               	movf	(___aodiv@divisor+4)^0,w,c
 13840  004128  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
 13841  00412A  5011               	movf	(___aodiv@divisor+5)^0,w,c
 13842  00412C  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
 13843  00412E  5012               	movf	(___aodiv@divisor+6)^0,w,c
 13844  004130  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
 13845  004132  5013               	movf	(___aodiv@divisor+7)^0,w,c
 13846  004134  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
 13847  004136  8016               	bsf	___aodiv@quotient^0,0,c
 13848  004138                     l7551:
 13849  004138  90D8               	bcf	status,0,c
 13850  00413A  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
 13851  00413C  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
 13852  00413E  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
 13853  004140  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
 13854  004142  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
 13855  004144  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
 13856  004146  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
 13857  004148  320C               	rrcf	___aodiv@divisor^0,f,c
 13858  00414A  2E14               	decfsz	___aodiv@counter^0,f,c
 13859  00414C  EF6B  F020         	goto	l7543
 13860  004150                     l7555:
 13861  004150  5015               	movf	___aodiv@sign^0,w,c
 13862  004152  B4D8               	btfsc	status,2,c
 13863  004154  EFAE  F020         	goto	u9431
 13864  004158  EFB0  F020         	goto	u9430
 13865  00415C                     u9431:
 13866  00415C  EFC0  F020         	goto	l7559
 13867  004160                     u9430:
 13868  004160  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
 13869  004162  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
 13870  004164  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
 13871  004166  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
 13872  004168  1E19               	comf	(___aodiv@quotient+3)^0,f,c
 13873  00416A  1E18               	comf	(___aodiv@quotient+2)^0,f,c
 13874  00416C  1E17               	comf	(___aodiv@quotient+1)^0,f,c
 13875  00416E  6C16               	negf	___aodiv@quotient^0,c
 13876  004170  0E00               	movlw	0
 13877  004172  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
 13878  004174  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
 13879  004176  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
 13880  004178  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
 13881  00417A  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
 13882  00417C  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
 13883  00417E  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
 13884  004180                     l7559:
 13885  004180  C016  F004         	movff	___aodiv@quotient,?___aodiv
 13886  004184  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
 13887  004188  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
 13888  00418C  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
 13889  004190  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
 13890  004194  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
 13891  004198  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
 13892  00419C  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
 13893  0041A0  0012               	return		;funcret
 13894  0041A2                     __end_of___aodiv:
 13895                           	opt callstack 0
 13896                           
 13897 ;; *************** function _ctoa *****************
 13898 ;; Defined at:
 13899 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13900 ;; Parameters:    Size  Location     Type
 13901 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 13902 ;;		 -> vsnprintf@f(6), 
 13903 ;;  c               1   32[COMRAM] unsigned char 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  w               2   33[COMRAM] int 
 13906 ;;  l               2    0        int 
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  2   30[COMRAM] int 
 13909 ;; Registers used:
 13910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13917 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13919 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13920 ;;Total ram usage:        5 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; Hardware stack levels required when called:    8
 13923 ;; This function calls:
 13924 ;;		_pad
 13925 ;; This function is called by:
 13926 ;;		_vfpfcnvrt
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text35
 13931  00561A                     __ptext35:
 13932                           	opt callstack 0
 13933  00561A                     _ctoa:
 13934                           	opt callstack 18
 13935  00561A                     
 13936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 13937  00561A  0100               	movlb	0	; () banked
 13938  00561C  51EC               	movf	_width& (0+255),w,b
 13939  00561E  11ED               	iorwf	(_width+1)& (0+255),w,b
 13940  005620  A4D8               	btfss	status,2,c
 13941  005622  EF15  F02B         	goto	u10291
 13942  005626  EF17  F02B         	goto	u10290
 13943  00562A                     u10291:
 13944  00562A  EF1D  F02B         	goto	l8097
 13945  00562E                     u10290:
 13946  00562E                     
 13947                           ; BSR set to: 0
 13948  00562E  C0EC  F022         	movff	_width,ctoa@w
 13949  005632  C0ED  F023         	movff	_width+1,ctoa@w+1
 13950  005636  EF23  F02B         	goto	l8099
 13951  00563A                     l8097:
 13952                           
 13953                           ; BSR set to: 0
 13954  00563A  0EFF               	movlw	255
 13955  00563C  25EC               	addwf	_width& (0+255),w,b
 13956  00563E  6E22               	movwf	ctoa@w^0,c
 13957  005640  0EFF               	movlw	255
 13958  005642  21ED               	addwfc	(_width+1)& (0+255),w,b
 13959  005644  6E23               	movwf	(ctoa@w+1)^0,c
 13960  005646                     l8099:
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 13964  005646  C021  F164         	movff	ctoa@c,_dbuf
 13965  00564A                     
 13966                           ; BSR set to: 0
 13967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 13968  00564A  0E00               	movlw	0
 13969  00564C  0101               	movlb	1	; () banked
 13970  00564E  6F65               	movwf	(_dbuf+1)& (0+255),b
 13971  005650                     
 13972                           ; BSR set to: 1
 13973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13974  005650  C01F  F014         	movff	ctoa@fp,pad@fp
 13975  005654  C020  F015         	movff	ctoa@fp+1,pad@fp+1
 13976  005658  0E64               	movlw	low _dbuf
 13977  00565A  6E16               	movwf	pad@buf^0,c
 13978  00565C  0E01               	movlw	high _dbuf
 13979  00565E  6E17               	movwf	(pad@buf+1)^0,c
 13980  005660  C022  F018         	movff	ctoa@w,pad@p
 13981  005664  C023  F019         	movff	ctoa@w+1,pad@p+1
 13982  005668  EC42  F028         	call	_pad	;wreg free
 13983  00566C  C014  F01F         	movff	?_pad,?_ctoa
 13984  005670  C015  F020         	movff	?_pad+1,?_ctoa+1
 13985  005674  0012               	return		;funcret
 13986  005676                     __end_of_ctoa:
 13987                           	opt callstack 0
 13988                           
 13989 ;; *************** function _pad *****************
 13990 ;; Defined at:
 13991 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13992 ;; Parameters:    Size  Location     Type
 13993 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 13994 ;;		 -> vsnprintf@f(6), 
 13995 ;;  buf             2   21[COMRAM] PTR unsigned char 
 13996 ;;		 -> dbuf(80), 
 13997 ;;  p               2   23[COMRAM] int 
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;  w               2   28[COMRAM] int 
 14000 ;;  i               2   26[COMRAM] int 
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  2   19[COMRAM] int 
 14003 ;; Registers used:
 14004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14010 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14011 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14013 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14014 ;;Total ram usage:       11 bytes
 14015 ;; Hardware stack levels used:    1
 14016 ;; Hardware stack levels required when called:    7
 14017 ;; This function calls:
 14018 ;;		_fputc
 14019 ;;		_fputs
 14020 ;;		_strlen
 14021 ;; This function is called by:
 14022 ;;		_ctoa
 14023 ;;		_dtoa
 14024 ;;		_efgtoa
 14025 ;;		_otoa
 14026 ;;		_utoa
 14027 ;;		_xtoa
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           
 14031                           	psect	text36
 14032  005084                     __ptext36:
 14033                           	opt callstack 0
 14034  005084                     _pad:
 14035                           	opt callstack 18
 14036  005084                     
 14037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14038  005084  0100               	movlb	0	; () banked
 14039  005086  A1EE               	btfss	_flags& (0+255),0,b
 14040  005088  EF48  F028         	goto	u9031
 14041  00508C  EF4A  F028         	goto	u9030
 14042  005090                     u9031:
 14043  005090  EF54  F028         	goto	l7409
 14044  005094                     u9030:
 14045  005094                     
 14046                           ; BSR set to: 0
 14047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14048  005094  C016  F00D         	movff	pad@buf,fputs@s
 14049  005098  C017  F00E         	movff	pad@buf+1,fputs@s+1
 14050  00509C  C014  F00F         	movff	pad@fp,fputs@fp
 14051  0050A0  C015  F010         	movff	pad@fp+1,fputs@fp+1
 14052  0050A4  EC15  F02C         	call	_fputs	;wreg free
 14053  0050A8                     l7409:
 14054                           
 14055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14056  0050A8  BE19               	btfsc	(pad@p+1)^0,7,c
 14057  0050AA  EF59  F028         	goto	u9041
 14058  0050AE  EF5B  F028         	goto	u9040
 14059  0050B2                     u9041:
 14060  0050B2  EF61  F028         	goto	l7413
 14061  0050B6                     u9040:
 14062  0050B6  C018  F01D         	movff	pad@p,pad@w
 14063  0050BA  C019  F01E         	movff	pad@p+1,pad@w+1
 14064  0050BE  EF65  F028         	goto	l518
 14065  0050C2                     l7413:
 14066  0050C2  0E00               	movlw	0
 14067  0050C4  6E1E               	movwf	(pad@w+1)^0,c
 14068  0050C6  0E00               	movlw	0
 14069  0050C8  6E1D               	movwf	pad@w^0,c
 14070  0050CA                     l518:
 14071                           
 14072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14073  0050CA  0E00               	movlw	0
 14074  0050CC  6E1C               	movwf	(pad@i+1)^0,c
 14075  0050CE  0E00               	movlw	0
 14076  0050D0  6E1B               	movwf	pad@i^0,c
 14077                           
 14078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14079  0050D2  EF77  F028         	goto	l7419
 14080  0050D6                     l7415:
 14081                           
 14082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14083  0050D6  0E00               	movlw	0
 14084  0050D8  6E05               	movwf	(fputc@c+1)^0,c
 14085  0050DA  0E20               	movlw	32
 14086  0050DC  6E04               	movwf	fputc@c^0,c
 14087  0050DE  C014  F006         	movff	pad@fp,fputc@fp
 14088  0050E2  C015  F007         	movff	pad@fp+1,fputc@fp+1
 14089  0050E6  ECDD  F027         	call	_fputc	;wreg free
 14090  0050EA                     
 14091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14092  0050EA  4A1B               	infsnz	pad@i^0,f,c
 14093  0050EC  2A1C               	incf	(pad@i+1)^0,f,c
 14094  0050EE                     l7419:
 14095                           
 14096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14097  0050EE  501D               	movf	pad@w^0,w,c
 14098  0050F0  5C1B               	subwf	pad@i^0,w,c
 14099  0050F2  501C               	movf	(pad@i+1)^0,w,c
 14100  0050F4  0A80               	xorlw	128
 14101  0050F6  6E1A               	movwf	??_pad^0,c
 14102  0050F8  501E               	movf	(pad@w+1)^0,w,c
 14103  0050FA  0A80               	xorlw	128
 14104  0050FC  581A               	subwfb	??_pad^0,w,c
 14105  0050FE  A0D8               	btfss	status,0,c
 14106  005100  EF84  F028         	goto	u9051
 14107  005104  EF86  F028         	goto	u9050
 14108  005108                     u9051:
 14109  005108  EF6B  F028         	goto	l7415
 14110  00510C                     u9050:
 14111  00510C                     
 14112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14113  00510C  0100               	movlb	0	; () banked
 14114  00510E  B1EE               	btfsc	_flags& (0+255),0,b
 14115  005110  EF8C  F028         	goto	u9061
 14116  005114  EF8E  F028         	goto	u9060
 14117  005118                     u9061:
 14118  005118  EF98  F028         	goto	l7423
 14119  00511C                     u9060:
 14120  00511C                     
 14121                           ; BSR set to: 0
 14122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14123  00511C  C016  F00D         	movff	pad@buf,fputs@s
 14124  005120  C017  F00E         	movff	pad@buf+1,fputs@s+1
 14125  005124  C014  F00F         	movff	pad@fp,fputs@fp
 14126  005128  C015  F010         	movff	pad@fp+1,fputs@fp+1
 14127  00512C  EC15  F02C         	call	_fputs	;wreg free
 14128  005130                     l7423:
 14129                           
 14130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14131  005130  C016  F004         	movff	pad@buf,strlen@s
 14132  005134  C017  F005         	movff	pad@buf+1,strlen@s+1
 14133  005138  EC23  F02D         	call	_strlen	;wreg free
 14134  00513C  501D               	movf	pad@w^0,w,c
 14135  00513E  2404               	addwf	?_strlen^0,w,c
 14136  005140  6E14               	movwf	?_pad^0,c
 14137  005142  501E               	movf	(pad@w+1)^0,w,c
 14138  005144  2005               	addwfc	(?_strlen+1)^0,w,c
 14139  005146  6E15               	movwf	(?_pad+1)^0,c
 14140  005148  0012               	return		;funcret
 14141  00514A                     __end_of_pad:
 14142                           	opt callstack 0
 14143                           
 14144 ;; *************** function _strlen *****************
 14145 ;; Defined at:
 14146 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  s               2    3[COMRAM] PTR const unsigned char 
 14149 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  a               2    5[COMRAM] PTR const unsigned char 
 14152 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  2    3[COMRAM] unsigned int 
 14155 ;; Registers used:
 14156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14166 ;;Total ram usage:        4 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:    4
 14169 ;; This function calls:
 14170 ;;		Nothing
 14171 ;; This function is called by:
 14172 ;;		_pad
 14173 ;;		_stoa
 14174 ;; This function uses a non-reentrant model
 14175 ;;
 14176                           
 14177                           	psect	text37
 14178  005A46                     __ptext37:
 14179                           	opt callstack 0
 14180  005A46                     _strlen:
 14181                           	opt callstack 20
 14182  005A46  C004  F006         	movff	strlen@s,strlen@a
 14183  005A4A  C005  F007         	movff	strlen@s+1,strlen@a+1
 14184  005A4E  EF2B  F02D         	goto	l7189
 14185  005A52                     l7187:
 14186  005A52  4A04               	infsnz	strlen@s^0,f,c
 14187  005A54  2A05               	incf	(strlen@s+1)^0,f,c
 14188  005A56                     l7189:
 14189  005A56  C004  FFD9         	movff	strlen@s,fsr2l
 14190  005A5A  C005  FFDA         	movff	strlen@s+1,fsr2h
 14191  005A5E  50DF               	movf	indf2,w,c
 14192  005A60  A4D8               	btfss	status,2,c
 14193  005A62  EF35  F02D         	goto	u8591
 14194  005A66  EF37  F02D         	goto	u8590
 14195  005A6A                     u8591:
 14196  005A6A  EF29  F02D         	goto	l7187
 14197  005A6E                     u8590:
 14198  005A6E  5006               	movf	strlen@a^0,w,c
 14199  005A70  5C04               	subwf	strlen@s^0,w,c
 14200  005A72  6E04               	movwf	?_strlen^0,c
 14201  005A74  5007               	movf	(strlen@a+1)^0,w,c
 14202  005A76  5805               	subwfb	(strlen@s+1)^0,w,c
 14203  005A78  6E05               	movwf	(?_strlen+1)^0,c
 14204  005A7A  0012               	return		;funcret
 14205  005A7C                     __end_of_strlen:
 14206                           	opt callstack 0
 14207                           
 14208 ;; *************** function _fputs *****************
 14209 ;; Defined at:
 14210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;  s               2   12[COMRAM] PTR const unsigned char 
 14213 ;;		 -> dbuf(80), 
 14214 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 14215 ;;		 -> vsnprintf@f(6), 
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;  i               2   17[COMRAM] int 
 14218 ;;  c               1   16[COMRAM] unsigned char 
 14219 ;; Return value:  Size  Location     Type
 14220 ;;                  2   12[COMRAM] int 
 14221 ;; Registers used:
 14222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14223 ;; Tracked objects:
 14224 ;;		On entry : 0/0
 14225 ;;		On exit  : 0/0
 14226 ;;		Unchanged: 0/0
 14227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14228 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14229 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14231 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14232 ;;Total ram usage:        7 bytes
 14233 ;; Hardware stack levels used:    1
 14234 ;; Hardware stack levels required when called:    6
 14235 ;; This function calls:
 14236 ;;		_fputc
 14237 ;; This function is called by:
 14238 ;;		_pad
 14239 ;; This function uses a non-reentrant model
 14240 ;;
 14241                           
 14242                           	psect	text38
 14243  00582A                     __ptext38:
 14244                           	opt callstack 0
 14245  00582A                     _fputs:
 14246                           	opt callstack 18
 14247  00582A  0E00               	movlw	0
 14248  00582C  6E13               	movwf	(fputs@i+1)^0,c
 14249  00582E  0E00               	movlw	0
 14250  005830  6E12               	movwf	fputs@i^0,c
 14251  005832  EF26  F02C         	goto	l7183
 14252  005836                     l7179:
 14253  005836  C011  F004         	movff	fputs@c,fputc@c
 14254  00583A  6A05               	clrf	(fputc@c+1)^0,c
 14255  00583C  C00F  F006         	movff	fputs@fp,fputc@fp
 14256  005840  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 14257  005844  ECDD  F027         	call	_fputc	;wreg free
 14258  005848  4A12               	infsnz	fputs@i^0,f,c
 14259  00584A  2A13               	incf	(fputs@i+1)^0,f,c
 14260  00584C                     l7183:
 14261  00584C  5012               	movf	fputs@i^0,w,c
 14262  00584E  240D               	addwf	fputs@s^0,w,c
 14263  005850  6ED9               	movwf	fsr2l,c
 14264  005852  5013               	movf	(fputs@i+1)^0,w,c
 14265  005854  200E               	addwfc	(fputs@s+1)^0,w,c
 14266  005856  6EDA               	movwf	fsr2h,c
 14267  005858  50DF               	movf	indf2,w,c
 14268  00585A  6E11               	movwf	fputs@c^0,c
 14269  00585C  5011               	movf	fputs@c^0,w,c
 14270  00585E  A4D8               	btfss	status,2,c
 14271  005860  EF34  F02C         	goto	u8581
 14272  005864  EF36  F02C         	goto	u8580
 14273  005868                     u8581:
 14274  005868  EF1B  F02C         	goto	l7179
 14275  00586C                     u8580:
 14276  00586C  0012               	return		;funcret
 14277  00586E                     __end_of_fputs:
 14278                           	opt callstack 0
 14279                           
 14280 ;; *************** function _fputc *****************
 14281 ;; Defined at:
 14282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14283 ;; Parameters:    Size  Location     Type
 14284 ;;  c               2    3[COMRAM] int 
 14285 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 14286 ;;		 -> vsnprintf@f(6), 
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;		None
 14289 ;; Return value:  Size  Location     Type
 14290 ;;                  2    3[COMRAM] int 
 14291 ;; Registers used:
 14292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14300 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14301 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14302 ;;Total ram usage:        9 bytes
 14303 ;; Hardware stack levels used:    1
 14304 ;; Hardware stack levels required when called:    5
 14305 ;; This function calls:
 14306 ;;		_putch
 14307 ;; This function is called by:
 14308 ;;		_pad
 14309 ;;		_stoa
 14310 ;;		_vfpfcnvrt
 14311 ;;		_fputs
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           	psect	text39
 14316  004FBA                     __ptext39:
 14317                           	opt callstack 0
 14318  004FBA                     _fputc:
 14319                           	opt callstack 18
 14320  004FBA  5006               	movf	fputc@fp^0,w,c
 14321  004FBC  1007               	iorwf	(fputc@fp+1)^0,w,c
 14322  004FBE  B4D8               	btfsc	status,2,c
 14323  004FC0  EFE4  F027         	goto	u8541
 14324  004FC4  EFE6  F027         	goto	u8540
 14325  004FC8                     u8541:
 14326  004FC8  EFEF  F027         	goto	l7167
 14327  004FCC                     u8540:
 14328  004FCC  5006               	movf	fputc@fp^0,w,c
 14329  004FCE  1007               	iorwf	(fputc@fp+1)^0,w,c
 14330  004FD0  A4D8               	btfss	status,2,c
 14331  004FD2  EFED  F027         	goto	u8551
 14332  004FD6  EFEF  F027         	goto	u8550
 14333  004FDA                     u8551:
 14334  004FDA  EFF4  F027         	goto	l7169
 14335  004FDE                     u8550:
 14336  004FDE                     l7167:
 14337  004FDE  5004               	movf	fputc@c^0,w,c
 14338  004FE0  EC6F  F02E         	call	_putch
 14339  004FE4  EF41  F028         	goto	l1597
 14340  004FE8                     l7169:
 14341  004FE8  EE20 F004          	lfsr	2,4
 14342  004FEC  5006               	movf	fputc@fp^0,w,c
 14343  004FEE  26D9               	addwf	fsr2l,f,c
 14344  004FF0  5007               	movf	(fputc@fp+1)^0,w,c
 14345  004FF2  22DA               	addwfc	fsr2h,f,c
 14346  004FF4  50DE               	movf	postinc2,w,c
 14347  004FF6  10DE               	iorwf	postinc2,w,c
 14348  004FF8  B4D8               	btfsc	status,2,c
 14349  004FFA  EF01  F028         	goto	u8561
 14350  004FFE  EF03  F028         	goto	u8560
 14351  005002                     u8561:
 14352  005002  EF1E  F028         	goto	l7173
 14353  005006                     u8560:
 14354  005006  EE20 F004          	lfsr	2,4
 14355  00500A  5006               	movf	fputc@fp^0,w,c
 14356  00500C  26D9               	addwf	fsr2l,f,c
 14357  00500E  5007               	movf	(fputc@fp+1)^0,w,c
 14358  005010  22DA               	addwfc	fsr2h,f,c
 14359  005012  EE10 F002          	lfsr	1,2
 14360  005016  5006               	movf	fputc@fp^0,w,c
 14361  005018  26E1               	addwf	fsr1l,f,c
 14362  00501A  5007               	movf	(fputc@fp+1)^0,w,c
 14363  00501C  22E2               	addwfc	fsr1h,f,c
 14364  00501E  50DE               	movf	postinc2,w,c
 14365  005020  5CE6               	subwf	postinc1,w,c
 14366  005022  50E6               	movf	postinc1,w,c
 14367  005024  0A80               	xorlw	128
 14368  005026  6E0C               	movwf	(??_fputc+4)^0,c
 14369  005028  50DE               	movf	postinc2,w,c
 14370  00502A  0A80               	xorlw	128
 14371  00502C  580C               	subwfb	(??_fputc+4)^0,w,c
 14372  00502E  B0D8               	btfsc	status,0,c
 14373  005030  EF1C  F028         	goto	u8571
 14374  005034  EF1E  F028         	goto	u8570
 14375  005038                     u8571:
 14376  005038  EF41  F028         	goto	l1597
 14377  00503C                     u8570:
 14378  00503C                     l7173:
 14379  00503C  EE20 F002          	lfsr	2,2
 14380  005040  5006               	movf	fputc@fp^0,w,c
 14381  005042  26D9               	addwf	fsr2l,f,c
 14382  005044  5007               	movf	(fputc@fp+1)^0,w,c
 14383  005046  22DA               	addwfc	fsr2h,f,c
 14384  005048  CFDE F008          	movff	postinc2,??_fputc
 14385  00504C  CFDD F009          	movff	postdec2,??_fputc+1
 14386  005050  C006  FFD9         	movff	fputc@fp,fsr2l
 14387  005054  C007  FFDA         	movff	fputc@fp+1,fsr2h
 14388  005058  CFDE F00A          	movff	postinc2,??_fputc+2
 14389  00505C  CFDD F00B          	movff	postdec2,??_fputc+3
 14390  005060  5008               	movf	??_fputc^0,w,c
 14391  005062  240A               	addwf	(??_fputc+2)^0,w,c
 14392  005064  6ED9               	movwf	fsr2l,c
 14393  005066  5009               	movf	(??_fputc+1)^0,w,c
 14394  005068  200B               	addwfc	(??_fputc+3)^0,w,c
 14395  00506A  6EDA               	movwf	fsr2h,c
 14396  00506C  C004  FFDF         	movff	fputc@c,indf2
 14397  005070  EE20 F002          	lfsr	2,2
 14398  005074  5006               	movf	fputc@fp^0,w,c
 14399  005076  26D9               	addwf	fsr2l,f,c
 14400  005078  5007               	movf	(fputc@fp+1)^0,w,c
 14401  00507A  22DA               	addwfc	fsr2h,f,c
 14402  00507C  2ADE               	incf	postinc2,f,c
 14403  00507E  0E00               	movlw	0
 14404  005080  22DD               	addwfc	postdec2,f,c
 14405  005082                     l1597:
 14406  005082  0012               	return		;funcret
 14407  005084                     __end_of_fputc:
 14408                           	opt callstack 0
 14409                           
 14410 ;; *************** function _putch *****************
 14411 ;; Defined at:
 14412 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;  c               1    wreg     unsigned char 
 14415 ;; Auto vars:     Size  Location     Type
 14416 ;;  c               1    0[COMRAM] unsigned char 
 14417 ;; Return value:  Size  Location     Type
 14418 ;;                  1    wreg      void 
 14419 ;; Registers used:
 14420 ;;		wreg
 14421 ;; Tracked objects:
 14422 ;;		On entry : 0/0
 14423 ;;		On exit  : 0/0
 14424 ;;		Unchanged: 0/0
 14425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14430 ;;Total ram usage:        0 bytes
 14431 ;; Hardware stack levels used:    1
 14432 ;; Hardware stack levels required when called:    4
 14433 ;; This function calls:
 14434 ;;		Nothing
 14435 ;; This function is called by:
 14436 ;;		_fputc
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text40
 14441  005CDE                     __ptext40:
 14442                           	opt callstack 0
 14443  005CDE                     _putch:
 14444                           	opt callstack 18
 14445  005CDE  0012               	return		;funcret
 14446  005CE0                     __end_of_putch:
 14447                           	opt callstack 0
 14448                           
 14449 ;; *************** function _atoi *****************
 14450 ;; Defined at:
 14451 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;  s               2   10[COMRAM] PTR const unsigned char 
 14454 ;;		 -> STR_2(10), 
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;  n               2   23[COMRAM] int 
 14457 ;;  neg             2   16[COMRAM] int 
 14458 ;; Return value:  Size  Location     Type
 14459 ;;                  2   10[COMRAM] int 
 14460 ;; Registers used:
 14461 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14462 ;; Tracked objects:
 14463 ;;		On entry : 0/0
 14464 ;;		On exit  : 0/0
 14465 ;;		Unchanged: 0/0
 14466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14468 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14469 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14470 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14471 ;;Total ram usage:       15 bytes
 14472 ;; Hardware stack levels used:    1
 14473 ;; Hardware stack levels required when called:    5
 14474 ;; This function calls:
 14475 ;;		___wmul
 14476 ;;		_isdigit
 14477 ;;		_isspace
 14478 ;; This function is called by:
 14479 ;;		_vfpfcnvrt
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           	psect	text41
 14484  003E80                     __ptext41:
 14485                           	opt callstack 0
 14486  003E80                     _atoi:
 14487                           	opt callstack 21
 14488  003E80  0E00               	movlw	0
 14489  003E82  6E19               	movwf	(atoi@n+1)^0,c
 14490  003E84  0E00               	movlw	0
 14491  003E86  6E18               	movwf	atoi@n^0,c
 14492  003E88  0E00               	movlw	0
 14493  003E8A  6E12               	movwf	(atoi@neg+1)^0,c
 14494  003E8C  0E00               	movlw	0
 14495  003E8E  6E11               	movwf	atoi@neg^0,c
 14496  003E90  EF4C  F01F         	goto	l8663
 14497  003E94                     l8661:
 14498  003E94  4A0B               	infsnz	atoi@s^0,f,c
 14499  003E96  2A0C               	incf	(atoi@s+1)^0,f,c
 14500  003E98                     l8663:
 14501  003E98  0E01               	movlw	1
 14502  003E9A  6E17               	movwf	_atoi$2040^0,c
 14503  003E9C  C00B  FFF6         	movff	atoi@s,tblptrl
 14504  003EA0  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14505  003EA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14506  003EA4  6AF8               	clrf	tblptru,c
 14507  003EA6                     	endif
 14508  003EA6                     	if	0	;tblptru may be non-zero
 14509  003EA6                     	endif
 14510  003EA6  0008               	tblrd		*
 14511  003EA8  50F5               	movf	tablat,w,c
 14512  003EAA  0A20               	xorlw	32
 14513  003EAC  B4D8               	btfsc	status,2,c
 14514  003EAE  EF5B  F01F         	goto	u11401
 14515  003EB2  EF5D  F01F         	goto	u11400
 14516  003EB6                     u11401:
 14517  003EB6  EF7B  F01F         	goto	l8671
 14518  003EBA                     u11400:
 14519  003EBA  0EF7               	movlw	247
 14520  003EBC  6E0D               	movwf	??_atoi^0,c
 14521  003EBE  0EFF               	movlw	255
 14522  003EC0  6E0E               	movwf	(??_atoi+1)^0,c
 14523  003EC2  C00B  FFF6         	movff	atoi@s,tblptrl
 14524  003EC6  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14525  003ECA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14526  003ECA  6AF8               	clrf	tblptru,c
 14527  003ECC                     	endif
 14528  003ECC                     	if	0	;tblptru may be non-zero
 14529  003ECC                     	endif
 14530  003ECC  0008               	tblrd		*
 14531  003ECE  50F5               	movf	tablat,w,c
 14532  003ED0  6E0F               	movwf	(??_atoi+2)^0,c
 14533  003ED2  6A10               	clrf	(??_atoi+3)^0,c
 14534  003ED4  500D               	movf	??_atoi^0,w,c
 14535  003ED6  260F               	addwf	(??_atoi+2)^0,f,c
 14536  003ED8  500E               	movf	(??_atoi+1)^0,w,c
 14537  003EDA  2210               	addwfc	(??_atoi+3)^0,f,c
 14538  003EDC  5010               	movf	(??_atoi+3)^0,w,c
 14539  003EDE  E109               	bnz	u11410
 14540  003EE0  0E05               	movlw	5
 14541  003EE2  5C0F               	subwf	(??_atoi+2)^0,w,c
 14542  003EE4  A0D8               	btfss	status,0,c
 14543  003EE6  EF77  F01F         	goto	u11411
 14544  003EEA  EF79  F01F         	goto	u11410
 14545  003EEE                     u11411:
 14546  003EEE  EF7B  F01F         	goto	l8671
 14547  003EF2                     u11410:
 14548  003EF2  0E00               	movlw	0
 14549  003EF4  6E17               	movwf	_atoi$2040^0,c
 14550  003EF6                     l8671:
 14551  003EF6  C017  F013         	movff	_atoi$2040,_atoi$2039
 14552  003EFA  6A14               	clrf	(_atoi$2039+1)^0,c
 14553  003EFC  5013               	movf	_atoi$2039^0,w,c
 14554  003EFE  1014               	iorwf	(_atoi$2039+1)^0,w,c
 14555  003F00  A4D8               	btfss	status,2,c
 14556  003F02  EF85  F01F         	goto	u11421
 14557  003F06  EF87  F01F         	goto	u11420
 14558  003F0A                     u11421:
 14559  003F0A  EF4A  F01F         	goto	l8661
 14560  003F0E                     u11420:
 14561  003F0E  EF91  F01F         	goto	l8681
 14562  003F12                     l8677:
 14563  003F12  0E00               	movlw	0
 14564  003F14  6E12               	movwf	(atoi@neg+1)^0,c
 14565  003F16  0E01               	movlw	1
 14566  003F18  6E11               	movwf	atoi@neg^0,c
 14567  003F1A                     l8679:
 14568  003F1A  4A0B               	infsnz	atoi@s^0,f,c
 14569  003F1C  2A0C               	incf	(atoi@s+1)^0,f,c
 14570  003F1E  EFC8  F01F         	goto	l8687
 14571  003F22                     l8681:
 14572  003F22  C00B  FFF6         	movff	atoi@s,tblptrl
 14573  003F26  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14574  003F2A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14575  003F2A  6AF8               	clrf	tblptru,c
 14576  003F2C                     	endif
 14577  003F2C                     	if	0	;tblptru may be non-zero
 14578  003F2C                     	endif
 14579  003F2C  0008               	tblrd		*
 14580  003F2E  50F5               	movf	tablat,w,c
 14581  003F30  6E0D               	movwf	??_atoi^0,c
 14582  003F32  6A0E               	clrf	(??_atoi+1)^0,c
 14583                           
 14584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14585                           ; Switch size 1, requested type "simple"
 14586                           ; Number of cases is 1, Range of values is 0 to 0
 14587                           ; switch strategies available:
 14588                           ; Name         Instructions Cycles
 14589                           ; simple_byte            4     3 (average)
 14590                           ;	Chosen strategy is simple_byte
 14591  003F34  500E               	movf	(??_atoi+1)^0,w,c
 14592  003F36  0A00               	xorlw	0	; case 0
 14593  003F38  B4D8               	btfsc	status,2,c
 14594  003F3A  EFA1  F01F         	goto	l9217
 14595  003F3E  EFC8  F01F         	goto	l8687
 14596  003F42                     l9217:
 14597                           
 14598                           ; Switch size 1, requested type "simple"
 14599                           ; Number of cases is 2, Range of values is 43 to 45
 14600                           ; switch strategies available:
 14601                           ; Name         Instructions Cycles
 14602                           ; simple_byte            7     4 (average)
 14603                           ;	Chosen strategy is simple_byte
 14604  003F42  500D               	movf	??_atoi^0,w,c
 14605  003F44  0A2B               	xorlw	43	; case 43
 14606  003F46  B4D8               	btfsc	status,2,c
 14607  003F48  EF8D  F01F         	goto	l8679
 14608  003F4C  0A06               	xorlw	6	; case 45
 14609  003F4E  B4D8               	btfsc	status,2,c
 14610  003F50  EF89  F01F         	goto	l8677
 14611  003F54  EFC8  F01F         	goto	l8687
 14612  003F58                     l8683:
 14613  003F58  C018  F004         	movff	atoi@n,___wmul@multiplier
 14614  003F5C  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
 14615  003F60  0E00               	movlw	0
 14616  003F62  6E07               	movwf	(___wmul@multiplicand+1)^0,c
 14617  003F64  0E0A               	movlw	10
 14618  003F66  6E06               	movwf	___wmul@multiplicand^0,c
 14619  003F68  ECE2  F02D         	call	___wmul	;wreg free
 14620  003F6C  C00B  FFF6         	movff	atoi@s,tblptrl
 14621  003F70  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14622  003F74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14623  003F74  6AF8               	clrf	tblptru,c
 14624  003F76                     	endif
 14625  003F76                     	if	0	;tblptru may be non-zero
 14626  003F76                     	endif
 14627  003F76  0008               	tblrd		*
 14628  003F78  50F5               	movf	tablat,w,c
 14629  003F7A  5E04               	subwf	?___wmul^0,f,c
 14630  003F7C  0E00               	movlw	0
 14631  003F7E  5A05               	subwfb	(?___wmul+1)^0,f,c
 14632  003F80  0E30               	movlw	48
 14633  003F82  2404               	addwf	?___wmul^0,w,c
 14634  003F84  6E18               	movwf	atoi@n^0,c
 14635  003F86  0E00               	movlw	0
 14636  003F88  2005               	addwfc	(?___wmul+1)^0,w,c
 14637  003F8A  6E19               	movwf	(atoi@n+1)^0,c
 14638  003F8C  EF8D  F01F         	goto	l8679
 14639  003F90                     l8687:
 14640  003F90  0ED0               	movlw	208
 14641  003F92  6E0D               	movwf	??_atoi^0,c
 14642  003F94  0EFF               	movlw	255
 14643  003F96  6E0E               	movwf	(??_atoi+1)^0,c
 14644  003F98  C00B  FFF6         	movff	atoi@s,tblptrl
 14645  003F9C  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14646  003FA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14647  003FA0  6AF8               	clrf	tblptru,c
 14648  003FA2                     	endif
 14649  003FA2                     	if	0	;tblptru may be non-zero
 14650  003FA2                     	endif
 14651  003FA2  0008               	tblrd		*
 14652  003FA4  50F5               	movf	tablat,w,c
 14653  003FA6  6E0F               	movwf	(??_atoi+2)^0,c
 14654  003FA8  6A10               	clrf	(??_atoi+3)^0,c
 14655  003FAA  500D               	movf	??_atoi^0,w,c
 14656  003FAC  260F               	addwf	(??_atoi+2)^0,f,c
 14657  003FAE  500E               	movf	(??_atoi+1)^0,w,c
 14658  003FB0  2210               	addwfc	(??_atoi+3)^0,f,c
 14659  003FB2  5010               	movf	(??_atoi+3)^0,w,c
 14660  003FB4  E10A               	bnz	u11430
 14661  003FB6  0E0A               	movlw	10
 14662  003FB8  5C0F               	subwf	(??_atoi+2)^0,w,c
 14663  003FBA  A0D8               	btfss	status,0,c
 14664  003FBC  EFE2  F01F         	goto	u11431
 14665  003FC0  EFE5  F01F         	goto	u11430
 14666  003FC4                     u11431:
 14667  003FC4  0E01               	movlw	1
 14668  003FC6  EFE6  F01F         	goto	u11440
 14669  003FCA                     u11430:
 14670  003FCA  0E00               	movlw	0
 14671  003FCC                     u11440:
 14672  003FCC  6E15               	movwf	_atoi$2041^0,c
 14673  003FCE  6A16               	clrf	(_atoi$2041+1)^0,c
 14674  003FD0  5015               	movf	_atoi$2041^0,w,c
 14675  003FD2  1016               	iorwf	(_atoi$2041+1)^0,w,c
 14676  003FD4  A4D8               	btfss	status,2,c
 14677  003FD6  EFEF  F01F         	goto	u11451
 14678  003FDA  EFF1  F01F         	goto	u11450
 14679  003FDE                     u11451:
 14680  003FDE  EFAC  F01F         	goto	l8683
 14681  003FE2                     u11450:
 14682  003FE2  5011               	movf	atoi@neg^0,w,c
 14683  003FE4  1012               	iorwf	(atoi@neg+1)^0,w,c
 14684  003FE6  A4D8               	btfss	status,2,c
 14685  003FE8  EFF8  F01F         	goto	u11461
 14686  003FEC  EFFA  F01F         	goto	u11460
 14687  003FF0                     u11461:
 14688  003FF0  EF08  F020         	goto	l1543
 14689  003FF4                     u11460:
 14690  003FF4  C018  F00D         	movff	atoi@n,??_atoi
 14691  003FF8  C019  F00E         	movff	atoi@n+1,??_atoi+1
 14692  003FFC  1E0D               	comf	??_atoi^0,f,c
 14693  003FFE  1E0E               	comf	(??_atoi+1)^0,f,c
 14694  004000  4A0D               	infsnz	??_atoi^0,f,c
 14695  004002  2A0E               	incf	(??_atoi+1)^0,f,c
 14696  004004  C00D  F00B         	movff	??_atoi,?_atoi
 14697  004008  C00E  F00C         	movff	??_atoi+1,?_atoi+1
 14698  00400C  EF0C  F020         	goto	l1546
 14699  004010                     l1543:
 14700  004010  C018  F00B         	movff	atoi@n,?_atoi
 14701  004014  C019  F00C         	movff	atoi@n+1,?_atoi+1
 14702  004018                     l1546:
 14703  004018  0012               	return		;funcret
 14704  00401A                     __end_of_atoi:
 14705                           	opt callstack 0
 14706                           
 14707 ;; *************** function _isspace *****************
 14708 ;; Defined at:
 14709 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14710 ;; Parameters:    Size  Location     Type
 14711 ;;  c               2    3[COMRAM] int 
 14712 ;; Auto vars:     Size  Location     Type
 14713 ;;		None
 14714 ;; Return value:  Size  Location     Type
 14715 ;;                  2    3[COMRAM] int 
 14716 ;; Registers used:
 14717 ;;		wreg, status,2, status,0
 14718 ;; Tracked objects:
 14719 ;;		On entry : 0/0
 14720 ;;		On exit  : 0/0
 14721 ;;		Unchanged: 0/0
 14722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14725 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14726 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14727 ;;Total ram usage:        7 bytes
 14728 ;; Hardware stack levels used:    1
 14729 ;; Hardware stack levels required when called:    4
 14730 ;; This function calls:
 14731 ;;		Nothing
 14732 ;; This function is called by:
 14733 ;;		_atoi
 14734 ;; This function uses a non-reentrant model
 14735 ;;
 14736                           
 14737                           	psect	text42
 14738  005676                     __ptext42:
 14739                           	opt callstack 0
 14740  005676                     _isspace:
 14741                           	opt callstack 21
 14742  005676  0E01               	movlw	1
 14743  005678  6E0A               	movwf	_isspace$2079^0,c
 14744  00567A  0E20               	movlw	32
 14745  00567C  1804               	xorwf	isspace@c^0,w,c
 14746  00567E  1005               	iorwf	(isspace@c+1)^0,w,c
 14747  005680  B4D8               	btfsc	status,2,c
 14748  005682  EF45  F02B         	goto	u10271
 14749  005686  EF47  F02B         	goto	u10270
 14750  00568A                     u10271:
 14751  00568A  EF60  F02B         	goto	l8089
 14752  00568E                     u10270:
 14753  00568E  0EF7               	movlw	247
 14754  005690  6E06               	movwf	??_isspace^0,c
 14755  005692  0EFF               	movlw	255
 14756  005694  6E07               	movwf	(??_isspace+1)^0,c
 14757  005696  C004  F008         	movff	isspace@c,??_isspace+2
 14758  00569A  C005  F009         	movff	isspace@c+1,??_isspace+3
 14759  00569E  5006               	movf	??_isspace^0,w,c
 14760  0056A0  2608               	addwf	(??_isspace+2)^0,f,c
 14761  0056A2  5007               	movf	(??_isspace+1)^0,w,c
 14762  0056A4  2209               	addwfc	(??_isspace+3)^0,f,c
 14763  0056A6  5009               	movf	(??_isspace+3)^0,w,c
 14764  0056A8  E109               	bnz	u10280
 14765  0056AA  0E05               	movlw	5
 14766  0056AC  5C08               	subwf	(??_isspace+2)^0,w,c
 14767  0056AE  A0D8               	btfss	status,0,c
 14768  0056B0  EF5C  F02B         	goto	u10281
 14769  0056B4  EF5E  F02B         	goto	u10280
 14770  0056B8                     u10281:
 14771  0056B8  EF60  F02B         	goto	l8089
 14772  0056BC                     u10280:
 14773  0056BC  0E00               	movlw	0
 14774  0056BE  6E0A               	movwf	_isspace$2079^0,c
 14775  0056C0                     l8089:
 14776  0056C0  C00A  F004         	movff	_isspace$2079,?_isspace
 14777  0056C4  6A05               	clrf	(?_isspace+1)^0,c
 14778  0056C6  0012               	return		;funcret
 14779  0056C8                     __end_of_isspace:
 14780                           	opt callstack 0
 14781                           
 14782 ;; *************** function _isdigit *****************
 14783 ;; Defined at:
 14784 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  c               2    3[COMRAM] int 
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;		None
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  2    3[COMRAM] int 
 14791 ;; Registers used:
 14792 ;;		wreg, status,2, status,0
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14802 ;;Total ram usage:        6 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:    4
 14805 ;; This function calls:
 14806 ;;		Nothing
 14807 ;; This function is called by:
 14808 ;;		_vfpfcnvrt
 14809 ;;		_atoi
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text43
 14814  005A0E                     __ptext43:
 14815                           	opt callstack 0
 14816  005A0E                     _isdigit:
 14817                           	opt callstack 22
 14818  005A0E  0ED0               	movlw	208
 14819  005A10  6E06               	movwf	??_isdigit^0,c
 14820  005A12  0EFF               	movlw	255
 14821  005A14  6E07               	movwf	(??_isdigit+1)^0,c
 14822  005A16  C004  F008         	movff	isdigit@c,??_isdigit+2
 14823  005A1A  C005  F009         	movff	isdigit@c+1,??_isdigit+3
 14824  005A1E  5006               	movf	??_isdigit^0,w,c
 14825  005A20  2608               	addwf	(??_isdigit+2)^0,f,c
 14826  005A22  5007               	movf	(??_isdigit+1)^0,w,c
 14827  005A24  2209               	addwfc	(??_isdigit+3)^0,f,c
 14828  005A26  5009               	movf	(??_isdigit+3)^0,w,c
 14829  005A28  E10A               	bnz	u9350
 14830  005A2A  0E0A               	movlw	10
 14831  005A2C  5C08               	subwf	(??_isdigit+2)^0,w,c
 14832  005A2E  A0D8               	btfss	status,0,c
 14833  005A30  EF1C  F02D         	goto	u9351
 14834  005A34  EF1F  F02D         	goto	u9350
 14835  005A38                     u9351:
 14836  005A38  0E01               	movlw	1
 14837  005A3A  EF20  F02D         	goto	u9360
 14838  005A3E                     u9350:
 14839  005A3E  0E00               	movlw	0
 14840  005A40                     u9360:
 14841  005A40  6E04               	movwf	?_isdigit^0,c
 14842  005A42  6A05               	clrf	(?_isdigit+1)^0,c
 14843  005A44  0012               	return		;funcret
 14844  005A46                     __end_of_isdigit:
 14845                           	opt callstack 0
 14846                           
 14847 ;; *************** function ___wmul *****************
 14848 ;; Defined at:
 14849 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  multiplier      2    3[COMRAM] unsigned int 
 14852 ;;  multiplicand    2    5[COMRAM] unsigned int 
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;  product         2    7[COMRAM] unsigned int 
 14855 ;; Return value:  Size  Location     Type
 14856 ;;                  2    3[COMRAM] unsigned int 
 14857 ;; Registers used:
 14858 ;;		wreg, status,2, status,0, prodl, prodh
 14859 ;; Tracked objects:
 14860 ;;		On entry : 0/0
 14861 ;;		On exit  : 0/0
 14862 ;;		Unchanged: 0/0
 14863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;Total ram usage:        6 bytes
 14869 ;; Hardware stack levels used:    1
 14870 ;; Hardware stack levels required when called:    4
 14871 ;; This function calls:
 14872 ;;		Nothing
 14873 ;; This function is called by:
 14874 ;;		_atoi
 14875 ;; This function uses a non-reentrant model
 14876 ;;
 14877                           
 14878                           	psect	text44
 14879  005BC4                     __ptext44:
 14880                           	opt callstack 0
 14881  005BC4                     ___wmul:
 14882                           	opt callstack 21
 14883  005BC4  5004               	movf	___wmul@multiplier^0,w,c
 14884  005BC6  0206               	mulwf	___wmul@multiplicand^0,c
 14885  005BC8  CFF3 F008          	movff	prodl,___wmul@product
 14886  005BCC  CFF4 F009          	movff	prodh,___wmul@product+1
 14887  005BD0  5004               	movf	___wmul@multiplier^0,w,c
 14888  005BD2  0207               	mulwf	(___wmul@multiplicand+1)^0,c
 14889  005BD4  50F3               	movf	243,w,c
 14890  005BD6  2609               	addwf	(___wmul@product+1)^0,f,c
 14891  005BD8  5005               	movf	(___wmul@multiplier+1)^0,w,c
 14892  005BDA  0206               	mulwf	___wmul@multiplicand^0,c
 14893  005BDC  50F3               	movf	243,w,c
 14894  005BDE  2609               	addwf	(___wmul@product+1)^0,f,c
 14895  005BE0  C008  F004         	movff	___wmul@product,?___wmul
 14896  005BE4  C009  F005         	movff	___wmul@product+1,?___wmul+1
 14897  005BE8  0012               	return		;funcret
 14898  005BEA                     __end_of___wmul:
 14899                           	opt callstack 0
 14900                           
 14901 ;; *************** function _lcd_init *****************
 14902 ;; Defined at:
 14903 ;;		line 34 in file "lib_ili9341.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;		None
 14906 ;; Auto vars:     Size  Location     Type
 14907 ;;		None
 14908 ;; Return value:  Size  Location     Type
 14909 ;;                  1    wreg      void 
 14910 ;; Registers used:
 14911 ;;		wreg, status,2, status,0, cstack
 14912 ;; Tracked objects:
 14913 ;;		On entry : 0/0
 14914 ;;		On exit  : 0/0
 14915 ;;		Unchanged: 0/0
 14916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14921 ;;Total ram usage:        0 bytes
 14922 ;; Hardware stack levels used:    1
 14923 ;; Hardware stack levels required when called:    9
 14924 ;; This function calls:
 14925 ;;		_lcd_fill
 14926 ;;		_lcd_send
 14927 ;;		_msDelay
 14928 ;; This function is called by:
 14929 ;;		_main
 14930 ;; This function uses a non-reentrant model
 14931 ;;
 14932                           
 14933                           	psect	text45
 14934  002D7E                     __ptext45:
 14935                           	opt callstack 0
 14936  002D7E                     _lcd_init:
 14937                           	opt callstack 21
 14938  002D7E                     
 14939                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 14940  002D7E  0E01               	movlw	1
 14941  002D80  6E05               	movwf	lcd_send@value^0,c
 14942  002D82  0E00               	movlw	0
 14943  002D84  EC11  F02E         	call	_lcd_send
 14944  002D88                     
 14945                           ;lib_ili9341.c: 38:     msDelay(150);
 14946  002D88  0E96               	movlw	150
 14947  002D8A  EC72  F02D         	call	_msDelay
 14948  002D8E                     
 14949                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 14950  002D8E  0EEF               	movlw	239
 14951  002D90  6E05               	movwf	lcd_send@value^0,c
 14952  002D92  0E00               	movlw	0
 14953  002D94  EC11  F02E         	call	_lcd_send
 14954  002D98                     
 14955                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 14956  002D98  0E03               	movlw	3
 14957  002D9A  6E05               	movwf	lcd_send@value^0,c
 14958  002D9C  0E01               	movlw	1
 14959  002D9E  EC11  F02E         	call	_lcd_send
 14960  002DA2                     
 14961                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 14962  002DA2  0E80               	movlw	128
 14963  002DA4  6E05               	movwf	lcd_send@value^0,c
 14964  002DA6  0E01               	movlw	1
 14965  002DA8  EC11  F02E         	call	_lcd_send
 14966  002DAC                     
 14967                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 14968  002DAC  0E02               	movlw	2
 14969  002DAE  6E05               	movwf	lcd_send@value^0,c
 14970  002DB0  0E01               	movlw	1
 14971  002DB2  EC11  F02E         	call	_lcd_send
 14972  002DB6                     
 14973                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 14974  002DB6  0ECF               	movlw	207
 14975  002DB8  6E05               	movwf	lcd_send@value^0,c
 14976  002DBA  0E00               	movlw	0
 14977  002DBC  EC11  F02E         	call	_lcd_send
 14978  002DC0                     
 14979                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 14980  002DC0  0E00               	movlw	0
 14981  002DC2  6E05               	movwf	lcd_send@value^0,c
 14982  002DC4  0E01               	movlw	1
 14983  002DC6  EC11  F02E         	call	_lcd_send
 14984  002DCA                     
 14985                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 14986  002DCA  0EC1               	movlw	193
 14987  002DCC  6E05               	movwf	lcd_send@value^0,c
 14988  002DCE  0E01               	movlw	1
 14989  002DD0  EC11  F02E         	call	_lcd_send
 14990  002DD4                     
 14991                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 14992  002DD4  0E30               	movlw	48
 14993  002DD6  6E05               	movwf	lcd_send@value^0,c
 14994  002DD8  0E01               	movlw	1
 14995  002DDA  EC11  F02E         	call	_lcd_send
 14996  002DDE                     
 14997                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 14998  002DDE  0EED               	movlw	237
 14999  002DE0  6E05               	movwf	lcd_send@value^0,c
 15000  002DE2  0E00               	movlw	0
 15001  002DE4  EC11  F02E         	call	_lcd_send
 15002  002DE8                     
 15003                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 15004  002DE8  0E64               	movlw	100
 15005  002DEA  6E05               	movwf	lcd_send@value^0,c
 15006  002DEC  0E01               	movlw	1
 15007  002DEE  EC11  F02E         	call	_lcd_send
 15008  002DF2                     
 15009                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 15010  002DF2  0E03               	movlw	3
 15011  002DF4  6E05               	movwf	lcd_send@value^0,c
 15012  002DF6  0E01               	movlw	1
 15013  002DF8  EC11  F02E         	call	_lcd_send
 15014  002DFC                     
 15015                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 15016  002DFC  0E12               	movlw	18
 15017  002DFE  6E05               	movwf	lcd_send@value^0,c
 15018  002E00  0E01               	movlw	1
 15019  002E02  EC11  F02E         	call	_lcd_send
 15020  002E06                     
 15021                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 15022  002E06  0E81               	movlw	129
 15023  002E08  6E05               	movwf	lcd_send@value^0,c
 15024  002E0A  0E01               	movlw	1
 15025  002E0C  EC11  F02E         	call	_lcd_send
 15026  002E10                     
 15027                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 15028  002E10  0EE8               	movlw	232
 15029  002E12  6E05               	movwf	lcd_send@value^0,c
 15030  002E14  0E00               	movlw	0
 15031  002E16  EC11  F02E         	call	_lcd_send
 15032  002E1A                     
 15033                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 15034  002E1A  0E85               	movlw	133
 15035  002E1C  6E05               	movwf	lcd_send@value^0,c
 15036  002E1E  0E01               	movlw	1
 15037  002E20  EC11  F02E         	call	_lcd_send
 15038  002E24                     
 15039                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 15040  002E24  0E00               	movlw	0
 15041  002E26  6E05               	movwf	lcd_send@value^0,c
 15042  002E28  0E01               	movlw	1
 15043  002E2A  EC11  F02E         	call	_lcd_send
 15044  002E2E                     
 15045                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 15046  002E2E  0E78               	movlw	120
 15047  002E30  6E05               	movwf	lcd_send@value^0,c
 15048  002E32  0E01               	movlw	1
 15049  002E34  EC11  F02E         	call	_lcd_send
 15050  002E38                     
 15051                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 15052  002E38  0ECB               	movlw	203
 15053  002E3A  6E05               	movwf	lcd_send@value^0,c
 15054  002E3C  0E00               	movlw	0
 15055  002E3E  EC11  F02E         	call	_lcd_send
 15056  002E42                     
 15057                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 15058  002E42  0E39               	movlw	57
 15059  002E44  6E05               	movwf	lcd_send@value^0,c
 15060  002E46  0E01               	movlw	1
 15061  002E48  EC11  F02E         	call	_lcd_send
 15062  002E4C                     
 15063                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 15064  002E4C  0E2C               	movlw	44
 15065  002E4E  6E05               	movwf	lcd_send@value^0,c
 15066  002E50  0E01               	movlw	1
 15067  002E52  EC11  F02E         	call	_lcd_send
 15068  002E56                     
 15069                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 15070  002E56  0E00               	movlw	0
 15071  002E58  6E05               	movwf	lcd_send@value^0,c
 15072  002E5A  0E01               	movlw	1
 15073  002E5C  EC11  F02E         	call	_lcd_send
 15074  002E60                     
 15075                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 15076  002E60  0E34               	movlw	52
 15077  002E62  6E05               	movwf	lcd_send@value^0,c
 15078  002E64  0E01               	movlw	1
 15079  002E66  EC11  F02E         	call	_lcd_send
 15080  002E6A                     
 15081                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 15082  002E6A  0E02               	movlw	2
 15083  002E6C  6E05               	movwf	lcd_send@value^0,c
 15084  002E6E  0E01               	movlw	1
 15085  002E70  EC11  F02E         	call	_lcd_send
 15086  002E74                     
 15087                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 15088  002E74  0EF7               	movlw	247
 15089  002E76  6E05               	movwf	lcd_send@value^0,c
 15090  002E78  0E00               	movlw	0
 15091  002E7A  EC11  F02E         	call	_lcd_send
 15092  002E7E                     
 15093                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 15094  002E7E  0E20               	movlw	32
 15095  002E80  6E05               	movwf	lcd_send@value^0,c
 15096  002E82  0E01               	movlw	1
 15097  002E84  EC11  F02E         	call	_lcd_send
 15098  002E88                     
 15099                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 15100  002E88  0EEA               	movlw	234
 15101  002E8A  6E05               	movwf	lcd_send@value^0,c
 15102  002E8C  0E00               	movlw	0
 15103  002E8E  EC11  F02E         	call	_lcd_send
 15104  002E92                     
 15105                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 15106  002E92  0E00               	movlw	0
 15107  002E94  6E05               	movwf	lcd_send@value^0,c
 15108  002E96  0E01               	movlw	1
 15109  002E98  EC11  F02E         	call	_lcd_send
 15110  002E9C                     
 15111                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 15112  002E9C  0E00               	movlw	0
 15113  002E9E  6E05               	movwf	lcd_send@value^0,c
 15114  002EA0  0E01               	movlw	1
 15115  002EA2  EC11  F02E         	call	_lcd_send
 15116  002EA6                     
 15117                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 15118  002EA6  0EC0               	movlw	192
 15119  002EA8  6E05               	movwf	lcd_send@value^0,c
 15120  002EAA  0E00               	movlw	0
 15121  002EAC  EC11  F02E         	call	_lcd_send
 15122  002EB0                     
 15123                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 15124  002EB0  0E23               	movlw	35
 15125  002EB2  6E05               	movwf	lcd_send@value^0,c
 15126  002EB4  0E01               	movlw	1
 15127  002EB6  EC11  F02E         	call	_lcd_send
 15128  002EBA                     
 15129                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 15130  002EBA  0EC1               	movlw	193
 15131  002EBC  6E05               	movwf	lcd_send@value^0,c
 15132  002EBE  0E00               	movlw	0
 15133  002EC0  EC11  F02E         	call	_lcd_send
 15134  002EC4                     
 15135                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 15136  002EC4  0E10               	movlw	16
 15137  002EC6  6E05               	movwf	lcd_send@value^0,c
 15138  002EC8  0E01               	movlw	1
 15139  002ECA  EC11  F02E         	call	_lcd_send
 15140  002ECE                     
 15141                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 15142  002ECE  0EC5               	movlw	197
 15143  002ED0  6E05               	movwf	lcd_send@value^0,c
 15144  002ED2  0E00               	movlw	0
 15145  002ED4  EC11  F02E         	call	_lcd_send
 15146  002ED8                     
 15147                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 15148  002ED8  0E3E               	movlw	62
 15149  002EDA  6E05               	movwf	lcd_send@value^0,c
 15150  002EDC  0E01               	movlw	1
 15151  002EDE  EC11  F02E         	call	_lcd_send
 15152  002EE2                     
 15153                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 15154  002EE2  0E28               	movlw	40
 15155  002EE4  6E05               	movwf	lcd_send@value^0,c
 15156  002EE6  0E01               	movlw	1
 15157  002EE8  EC11  F02E         	call	_lcd_send
 15158  002EEC                     
 15159                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 15160  002EEC  0EC7               	movlw	199
 15161  002EEE  6E05               	movwf	lcd_send@value^0,c
 15162  002EF0  0E00               	movlw	0
 15163  002EF2  EC11  F02E         	call	_lcd_send
 15164  002EF6                     
 15165                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 15166  002EF6  0E86               	movlw	134
 15167  002EF8  6E05               	movwf	lcd_send@value^0,c
 15168  002EFA  0E01               	movlw	1
 15169  002EFC  EC11  F02E         	call	_lcd_send
 15170  002F00                     
 15171                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 15172  002F00  0E36               	movlw	54
 15173  002F02  6E05               	movwf	lcd_send@value^0,c
 15174  002F04  0E00               	movlw	0
 15175  002F06  EC11  F02E         	call	_lcd_send
 15176  002F0A                     
 15177                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 15178  002F0A  0E48               	movlw	72
 15179  002F0C  6E05               	movwf	lcd_send@value^0,c
 15180  002F0E  0E01               	movlw	1
 15181  002F10  EC11  F02E         	call	_lcd_send
 15182  002F14                     
 15183                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 15184  002F14  0E3A               	movlw	58
 15185  002F16  6E05               	movwf	lcd_send@value^0,c
 15186  002F18  0E00               	movlw	0
 15187  002F1A  EC11  F02E         	call	_lcd_send
 15188  002F1E                     
 15189                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 15190  002F1E  0E55               	movlw	85
 15191  002F20  6E05               	movwf	lcd_send@value^0,c
 15192  002F22  0E01               	movlw	1
 15193  002F24  EC11  F02E         	call	_lcd_send
 15194  002F28                     
 15195                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 15196  002F28  0EB1               	movlw	177
 15197  002F2A  6E05               	movwf	lcd_send@value^0,c
 15198  002F2C  0E00               	movlw	0
 15199  002F2E  EC11  F02E         	call	_lcd_send
 15200  002F32                     
 15201                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 15202  002F32  0E00               	movlw	0
 15203  002F34  6E05               	movwf	lcd_send@value^0,c
 15204  002F36  0E01               	movlw	1
 15205  002F38  EC11  F02E         	call	_lcd_send
 15206  002F3C                     
 15207                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 15208  002F3C  0E18               	movlw	24
 15209  002F3E  6E05               	movwf	lcd_send@value^0,c
 15210  002F40  0E01               	movlw	1
 15211  002F42  EC11  F02E         	call	_lcd_send
 15212  002F46                     
 15213                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 15214  002F46  0EB6               	movlw	182
 15215  002F48  6E05               	movwf	lcd_send@value^0,c
 15216  002F4A  0E00               	movlw	0
 15217  002F4C  EC11  F02E         	call	_lcd_send
 15218  002F50                     
 15219                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 15220  002F50  0E08               	movlw	8
 15221  002F52  6E05               	movwf	lcd_send@value^0,c
 15222  002F54  0E01               	movlw	1
 15223  002F56  EC11  F02E         	call	_lcd_send
 15224  002F5A                     
 15225                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 15226  002F5A  0E82               	movlw	130
 15227  002F5C  6E05               	movwf	lcd_send@value^0,c
 15228  002F5E  0E01               	movlw	1
 15229  002F60  EC11  F02E         	call	_lcd_send
 15230  002F64                     
 15231                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 15232  002F64  0E27               	movlw	39
 15233  002F66  6E05               	movwf	lcd_send@value^0,c
 15234  002F68  0E01               	movlw	1
 15235  002F6A  EC11  F02E         	call	_lcd_send
 15236  002F6E                     
 15237                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 15238  002F6E  0EF2               	movlw	242
 15239  002F70  6E05               	movwf	lcd_send@value^0,c
 15240  002F72  0E00               	movlw	0
 15241  002F74  EC11  F02E         	call	_lcd_send
 15242  002F78                     
 15243                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 15244  002F78  0E00               	movlw	0
 15245  002F7A  6E05               	movwf	lcd_send@value^0,c
 15246  002F7C  0E01               	movlw	1
 15247  002F7E  EC11  F02E         	call	_lcd_send
 15248  002F82                     
 15249                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 15250  002F82  0E26               	movlw	38
 15251  002F84  6E05               	movwf	lcd_send@value^0,c
 15252  002F86  0E00               	movlw	0
 15253  002F88  EC11  F02E         	call	_lcd_send
 15254  002F8C                     
 15255                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 15256  002F8C  0E01               	movlw	1
 15257  002F8E  6E05               	movwf	lcd_send@value^0,c
 15258  002F90  0E01               	movlw	1
 15259  002F92  EC11  F02E         	call	_lcd_send
 15260  002F96                     
 15261                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 15262  002F96  0EE0               	movlw	224
 15263  002F98  6E05               	movwf	lcd_send@value^0,c
 15264  002F9A  0E00               	movlw	0
 15265  002F9C  EC11  F02E         	call	_lcd_send
 15266  002FA0                     
 15267                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 15268  002FA0  0E0F               	movlw	15
 15269  002FA2  6E05               	movwf	lcd_send@value^0,c
 15270  002FA4  0E01               	movlw	1
 15271  002FA6  EC11  F02E         	call	_lcd_send
 15272  002FAA                     
 15273                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 15274  002FAA  0E31               	movlw	49
 15275  002FAC  6E05               	movwf	lcd_send@value^0,c
 15276  002FAE  0E01               	movlw	1
 15277  002FB0  EC11  F02E         	call	_lcd_send
 15278  002FB4                     
 15279                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 15280  002FB4  0E2B               	movlw	43
 15281  002FB6  6E05               	movwf	lcd_send@value^0,c
 15282  002FB8  0E01               	movlw	1
 15283  002FBA  EC11  F02E         	call	_lcd_send
 15284  002FBE                     
 15285                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 15286  002FBE  0E0C               	movlw	12
 15287  002FC0  6E05               	movwf	lcd_send@value^0,c
 15288  002FC2  0E01               	movlw	1
 15289  002FC4  EC11  F02E         	call	_lcd_send
 15290  002FC8                     
 15291                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 15292  002FC8  0E0E               	movlw	14
 15293  002FCA  6E05               	movwf	lcd_send@value^0,c
 15294  002FCC  0E01               	movlw	1
 15295  002FCE  EC11  F02E         	call	_lcd_send
 15296  002FD2                     
 15297                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 15298  002FD2  0E08               	movlw	8
 15299  002FD4  6E05               	movwf	lcd_send@value^0,c
 15300  002FD6  0E01               	movlw	1
 15301  002FD8  EC11  F02E         	call	_lcd_send
 15302  002FDC                     
 15303                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 15304  002FDC  0E4E               	movlw	78
 15305  002FDE  6E05               	movwf	lcd_send@value^0,c
 15306  002FE0  0E01               	movlw	1
 15307  002FE2  EC11  F02E         	call	_lcd_send
 15308  002FE6                     
 15309                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 15310  002FE6  0EF1               	movlw	241
 15311  002FE8  6E05               	movwf	lcd_send@value^0,c
 15312  002FEA  0E01               	movlw	1
 15313  002FEC  EC11  F02E         	call	_lcd_send
 15314  002FF0                     
 15315                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 15316  002FF0  0E37               	movlw	55
 15317  002FF2  6E05               	movwf	lcd_send@value^0,c
 15318  002FF4  0E01               	movlw	1
 15319  002FF6  EC11  F02E         	call	_lcd_send
 15320  002FFA                     
 15321                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 15322  002FFA  0E07               	movlw	7
 15323  002FFC  6E05               	movwf	lcd_send@value^0,c
 15324  002FFE  0E01               	movlw	1
 15325  003000  EC11  F02E         	call	_lcd_send
 15326  003004                     
 15327                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 15328  003004  0E10               	movlw	16
 15329  003006  6E05               	movwf	lcd_send@value^0,c
 15330  003008  0E01               	movlw	1
 15331  00300A  EC11  F02E         	call	_lcd_send
 15332  00300E                     
 15333                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 15334  00300E  0E03               	movlw	3
 15335  003010  6E05               	movwf	lcd_send@value^0,c
 15336  003012  0E01               	movlw	1
 15337  003014  EC11  F02E         	call	_lcd_send
 15338  003018                     
 15339                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 15340  003018  0E0E               	movlw	14
 15341  00301A  6E05               	movwf	lcd_send@value^0,c
 15342  00301C  0E01               	movlw	1
 15343  00301E  EC11  F02E         	call	_lcd_send
 15344  003022                     
 15345                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 15346  003022  0E09               	movlw	9
 15347  003024  6E05               	movwf	lcd_send@value^0,c
 15348  003026  0E01               	movlw	1
 15349  003028  EC11  F02E         	call	_lcd_send
 15350  00302C                     
 15351                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15352  00302C  0E00               	movlw	0
 15353  00302E  6E05               	movwf	lcd_send@value^0,c
 15354  003030  0E01               	movlw	1
 15355  003032  EC11  F02E         	call	_lcd_send
 15356  003036                     
 15357                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 15358  003036  0EE1               	movlw	225
 15359  003038  6E05               	movwf	lcd_send@value^0,c
 15360  00303A  0E00               	movlw	0
 15361  00303C  EC11  F02E         	call	_lcd_send
 15362  003040                     
 15363                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 15364  003040  0E00               	movlw	0
 15365  003042  6E05               	movwf	lcd_send@value^0,c
 15366  003044  0E01               	movlw	1
 15367  003046  EC11  F02E         	call	_lcd_send
 15368  00304A                     
 15369                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 15370  00304A  0E0E               	movlw	14
 15371  00304C  6E05               	movwf	lcd_send@value^0,c
 15372  00304E  0E01               	movlw	1
 15373  003050  EC11  F02E         	call	_lcd_send
 15374  003054                     
 15375                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 15376  003054  0E14               	movlw	20
 15377  003056  6E05               	movwf	lcd_send@value^0,c
 15378  003058  0E01               	movlw	1
 15379  00305A  EC11  F02E         	call	_lcd_send
 15380  00305E                     
 15381                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 15382  00305E  0E03               	movlw	3
 15383  003060  6E05               	movwf	lcd_send@value^0,c
 15384  003062  0E01               	movlw	1
 15385  003064  EC11  F02E         	call	_lcd_send
 15386  003068                     
 15387                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 15388  003068  0E11               	movlw	17
 15389  00306A  6E05               	movwf	lcd_send@value^0,c
 15390  00306C  0E01               	movlw	1
 15391  00306E  EC11  F02E         	call	_lcd_send
 15392  003072                     
 15393                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 15394  003072  0E07               	movlw	7
 15395  003074  6E05               	movwf	lcd_send@value^0,c
 15396  003076  0E01               	movlw	1
 15397  003078  EC11  F02E         	call	_lcd_send
 15398  00307C                     
 15399                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 15400  00307C  0E31               	movlw	49
 15401  00307E  6E05               	movwf	lcd_send@value^0,c
 15402  003080  0E01               	movlw	1
 15403  003082  EC11  F02E         	call	_lcd_send
 15404  003086                     
 15405                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 15406  003086  0EC1               	movlw	193
 15407  003088  6E05               	movwf	lcd_send@value^0,c
 15408  00308A  0E01               	movlw	1
 15409  00308C  EC11  F02E         	call	_lcd_send
 15410  003090                     
 15411                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 15412  003090  0E48               	movlw	72
 15413  003092  6E05               	movwf	lcd_send@value^0,c
 15414  003094  0E01               	movlw	1
 15415  003096  EC11  F02E         	call	_lcd_send
 15416  00309A                     
 15417                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 15418  00309A  0E08               	movlw	8
 15419  00309C  6E05               	movwf	lcd_send@value^0,c
 15420  00309E  0E01               	movlw	1
 15421  0030A0  EC11  F02E         	call	_lcd_send
 15422  0030A4                     
 15423                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 15424  0030A4  0E0F               	movlw	15
 15425  0030A6  6E05               	movwf	lcd_send@value^0,c
 15426  0030A8  0E01               	movlw	1
 15427  0030AA  EC11  F02E         	call	_lcd_send
 15428  0030AE                     
 15429                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 15430  0030AE  0E0C               	movlw	12
 15431  0030B0  6E05               	movwf	lcd_send@value^0,c
 15432  0030B2  0E01               	movlw	1
 15433  0030B4  EC11  F02E         	call	_lcd_send
 15434  0030B8                     
 15435                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 15436  0030B8  0E31               	movlw	49
 15437  0030BA  6E05               	movwf	lcd_send@value^0,c
 15438  0030BC  0E01               	movlw	1
 15439  0030BE  EC11  F02E         	call	_lcd_send
 15440  0030C2                     
 15441                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 15442  0030C2  0E36               	movlw	54
 15443  0030C4  6E05               	movwf	lcd_send@value^0,c
 15444  0030C6  0E01               	movlw	1
 15445  0030C8  EC11  F02E         	call	_lcd_send
 15446  0030CC                     
 15447                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 15448  0030CC  0E0F               	movlw	15
 15449  0030CE  6E05               	movwf	lcd_send@value^0,c
 15450  0030D0  0E01               	movlw	1
 15451  0030D2  EC11  F02E         	call	_lcd_send
 15452  0030D6                     
 15453                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 15454  0030D6  0E11               	movlw	17
 15455  0030D8  6E05               	movwf	lcd_send@value^0,c
 15456  0030DA  0E00               	movlw	0
 15457  0030DC  EC11  F02E         	call	_lcd_send
 15458                           
 15459                           ;lib_ili9341.c: 125:     msDelay(120);
 15460  0030E0  0E78               	movlw	120
 15461  0030E2  EC72  F02D         	call	_msDelay
 15462  0030E6                     
 15463                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 15464  0030E6  0E29               	movlw	41
 15465  0030E8  6E05               	movwf	lcd_send@value^0,c
 15466  0030EA  0E00               	movlw	0
 15467  0030EC  EC11  F02E         	call	_lcd_send
 15468  0030F0                     
 15469                           ;lib_ili9341.c: 127:     msDelay(120);
 15470  0030F0  0E78               	movlw	120
 15471  0030F2  EC72  F02D         	call	_msDelay
 15472  0030F6                     
 15473                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 15474  0030F6  0E00               	movlw	0
 15475  0030F8  6E0E               	movwf	(lcd_fill@bg_color+1)^0,c
 15476  0030FA  0E00               	movlw	0
 15477  0030FC  6E0D               	movwf	lcd_fill@bg_color^0,c
 15478  0030FE  EC0C  F02A         	call	_lcd_fill	;wreg free
 15479  003102  0012               	return		;funcret
 15480  003104                     __end_of_lcd_init:
 15481                           	opt callstack 0
 15482                           
 15483 ;; *************** function _msDelay *****************
 15484 ;; Defined at:
 15485 ;;		line 16 in file "lib_ili9341.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;  ms              1    wreg     unsigned char 
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;  ms              1    4[COMRAM] unsigned char 
 15490 ;;  k               1    5[COMRAM] unsigned char 
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		wreg, status,2, status,0
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15503 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15504 ;;Total ram usage:        3 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:    4
 15507 ;; This function calls:
 15508 ;;		Nothing
 15509 ;; This function is called by:
 15510 ;;		_lcd_init
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text46
 15515  005AE4                     __ptext46:
 15516                           	opt callstack 0
 15517  005AE4                     _msDelay:
 15518                           	opt callstack 25
 15519                           
 15520                           ;incstack = 0
 15521                           ;msDelay@ms stored from wreg
 15522  005AE4  6E05               	movwf	msDelay@ms^0,c
 15523  005AE6                     
 15524                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 15525  005AE6  0E00               	movlw	0
 15526  005AE8  6E06               	movwf	msDelay@k^0,c
 15527  005AEA  EF7F  F02D         	goto	l6513
 15528  005AEE                     l6509:
 15529                           
 15530                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 15531  005AEE  0E03               	movlw	3
 15532  005AF0  6E04               	movwf	??_msDelay^0,c
 15533  005AF2  0E98               	movlw	152
 15534  005AF4                     u12147:
 15535  005AF4  2EE8               	decfsz	wreg,f,c
 15536  005AF6  D7FE               	bra	u12147
 15537  005AF8  2E04               	decfsz	??_msDelay^0,f,c
 15538  005AFA  D7FC               	bra	u12147
 15539  005AFC                     
 15540                           ;lib_ili9341.c: 23:     }
 15541  005AFC  2A06               	incf	msDelay@k^0,f,c
 15542  005AFE                     l6513:
 15543  005AFE  5005               	movf	msDelay@ms^0,w,c
 15544  005B00  5C06               	subwf	msDelay@k^0,w,c
 15545  005B02  A0D8               	btfss	status,0,c
 15546  005B04  EF86  F02D         	goto	u7931
 15547  005B08  EF88  F02D         	goto	u7930
 15548  005B0C                     u7931:
 15549  005B0C  EF77  F02D         	goto	l6509
 15550  005B10                     u7930:
 15551  005B10  0012               	return		;funcret
 15552  005B12                     __end_of_msDelay:
 15553                           	opt callstack 0
 15554                           
 15555 ;; *************** function _lcd_fill *****************
 15556 ;; Defined at:
 15557 ;;		line 193 in file "lib_ili9341.c"
 15558 ;; Parameters:    Size  Location     Type
 15559 ;;  bg_color        2   12[COMRAM] unsigned short 
 15560 ;; Auto vars:     Size  Location     Type
 15561 ;;  width           2   16[COMRAM] unsigned short 
 15562 ;;  height          2   14[COMRAM] unsigned short 
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  1    wreg      void 
 15565 ;; Registers used:
 15566 ;;		wreg, status,2, status,0, cstack
 15567 ;; Tracked objects:
 15568 ;;		On entry : 0/0
 15569 ;;		On exit  : 0/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15573 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15575 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15576 ;;Total ram usage:        6 bytes
 15577 ;; Hardware stack levels used:    1
 15578 ;; Hardware stack levels required when called:    8
 15579 ;; This function calls:
 15580 ;;		_lcd_draw_pixel
 15581 ;;		_lcd_set_cursor
 15582 ;; This function is called by:
 15583 ;;		_lcd_init
 15584 ;; This function uses a non-reentrant model
 15585 ;;
 15586                           
 15587                           	psect	text47
 15588  005418                     __ptext47:
 15589                           	opt callstack 0
 15590  005418                     _lcd_fill:
 15591                           	opt callstack 21
 15592  005418                     
 15593                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 15594  005418  0E01               	movlw	1
 15595  00541A  6E12               	movwf	(lcd_fill@width+1)^0,c
 15596  00541C  0E40               	movlw	64
 15597  00541E  6E11               	movwf	lcd_fill@width^0,c
 15598  005420  0E00               	movlw	0
 15599  005422  6E10               	movwf	(lcd_fill@height+1)^0,c
 15600  005424  0EF0               	movlw	240
 15601  005426  6E0F               	movwf	lcd_fill@height^0,c
 15602  005428                     
 15603                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 15604  005428  0E00               	movlw	0
 15605  00542A  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 15606  00542C  0E00               	movlw	0
 15607  00542E  6E09               	movwf	lcd_set_cursor@x^0,c
 15608  005430  0E00               	movlw	0
 15609  005432  6E0C               	movwf	(lcd_set_cursor@y+1)^0,c
 15610  005434  0E00               	movlw	0
 15611  005436  6E0B               	movwf	lcd_set_cursor@y^0,c
 15612  005438  EC37  F02C         	call	_lcd_set_cursor	;wreg free
 15613  00543C  0900               	iorlw	0
 15614  00543E  B4D8               	btfsc	status,2,c
 15615  005440  EF24  F02A         	goto	u7941
 15616  005444  EF26  F02A         	goto	u7940
 15617  005448                     u7941:
 15618  005448  EF3F  F02A         	goto	l6527
 15619  00544C                     u7940:
 15620  00544C  EF4C  F02A         	goto	l369
 15621  005450                     l6521:
 15622                           
 15623                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 15624  005450  C00D  F007         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 15625  005454  C00E  F008         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 15626  005458  EC29  F02E         	call	_lcd_draw_pixel	;wreg free
 15627  00545C                     l6523:
 15628                           
 15629                           ;lib_ili9341.c: 204:         while(width--)
 15630  00545C  0611               	decf	lcd_fill@width^0,f,c
 15631  00545E  A0D8               	btfss	status,0,c
 15632  005460  0612               	decf	(lcd_fill@width+1)^0,f,c
 15633  005462  2811               	incf	lcd_fill@width^0,w,c
 15634  005464  E106               	bnz	u7951
 15635  005466  2812               	incf	(lcd_fill@width+1)^0,w,c
 15636  005468  A4D8               	btfss	status,2,c
 15637  00546A  EF39  F02A         	goto	u7951
 15638  00546E  EF3B  F02A         	goto	u7950
 15639  005472                     u7951:
 15640  005472  EF28  F02A         	goto	l6521
 15641  005476                     u7950:
 15642  005476                     
 15643                           ;lib_ili9341.c: 208:         width = 320;
 15644  005476  0E01               	movlw	1
 15645  005478  6E12               	movwf	(lcd_fill@width+1)^0,c
 15646  00547A  0E40               	movlw	64
 15647  00547C  6E11               	movwf	lcd_fill@width^0,c
 15648  00547E                     l6527:
 15649                           
 15650                           ;lib_ili9341.c: 202:     while(height--)
 15651  00547E  060F               	decf	lcd_fill@height^0,f,c
 15652  005480  A0D8               	btfss	status,0,c
 15653  005482  0610               	decf	(lcd_fill@height+1)^0,f,c
 15654  005484  280F               	incf	lcd_fill@height^0,w,c
 15655  005486  E106               	bnz	u7961
 15656  005488  2810               	incf	(lcd_fill@height+1)^0,w,c
 15657  00548A  A4D8               	btfss	status,2,c
 15658  00548C  EF4A  F02A         	goto	u7961
 15659  005490  EF4C  F02A         	goto	u7960
 15660  005494                     u7961:
 15661  005494  EF2E  F02A         	goto	l6523
 15662  005498                     u7960:
 15663  005498                     l369:
 15664  005498  0012               	return		;funcret
 15665  00549A                     __end_of_lcd_fill:
 15666                           	opt callstack 0
 15667                           
 15668 ;; *************** function _lcd_draw_string *****************
 15669 ;; Defined at:
 15670 ;;		line 380 in file "lib_ili9341.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;  x               2   34[COMRAM] unsigned short 
 15673 ;;  y               2   36[COMRAM] unsigned short 
 15674 ;;  pS              2   38[COMRAM] PTR const unsigned char 
 15675 ;;		 -> STR_3(11), sPOT(100), STR_1(12), 
 15676 ;;  fg_color        2   40[COMRAM] unsigned short 
 15677 ;;  bg_color        2   42[COMRAM] unsigned short 
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;  lIndex          2   50[COMRAM] unsigned short 
 15680 ;;  k               2   48[COMRAM] unsigned short 
 15681 ;; Return value:  Size  Location     Type
 15682 ;;                  1    wreg      void 
 15683 ;; Registers used:
 15684 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15685 ;; Tracked objects:
 15686 ;;		On entry : 0/0
 15687 ;;		On exit  : 0/0
 15688 ;;		Unchanged: 0/0
 15689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15690 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15691 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15694 ;;Total ram usage:       18 bytes
 15695 ;; Hardware stack levels used:    1
 15696 ;; Hardware stack levels required when called:    9
 15697 ;; This function calls:
 15698 ;;		_lcd_draw_char
 15699 ;; This function is called by:
 15700 ;;		_main
 15701 ;; This function uses a non-reentrant model
 15702 ;;
 15703                           
 15704                           	psect	text48
 15705  00478A                     __ptext48:
 15706                           	opt callstack 0
 15707  00478A                     _lcd_draw_string:
 15708                           	opt callstack 21
 15709  00478A                     
 15710                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 15711  00478A  EF44  F024         	goto	l6861
 15712  00478E                     l6847:
 15713                           
 15714                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 15715  00478E  0E00               	movlw	0
 15716  004790  6E34               	movwf	(lcd_draw_string@lIndex+1)^0,c
 15717  004792  0E00               	movlw	0
 15718  004794  6E33               	movwf	lcd_draw_string@lIndex^0,c
 15719                           
 15720                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 15721  004796  0E00               	movlw	0
 15722  004798  6E32               	movwf	(lcd_draw_string@k+1)^0,c
 15723  00479A  0E00               	movlw	0
 15724  00479C  6E31               	movwf	lcd_draw_string@k^0,c
 15725  00479E  EFF0  F023         	goto	l6853
 15726  0047A2                     l6849:
 15727                           
 15728                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 15729  0047A2  90D8               	bcf	status,0,c
 15730  0047A4  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 15731  0047A6  6EF6               	movwf	tblptrl,c
 15732  0047A8  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 15733  0047AA  6EF7               	movwf	tblptrh,c
 15734  0047AC  0EC9               	movlw	low _font
 15735  0047AE  26F6               	addwf	tblptrl,f,c
 15736  0047B0  0EF1               	movlw	high _font
 15737  0047B2  22F7               	addwfc	tblptrh,f,c
 15738  0047B4                     	if	1	;There are 3 active tblptr bytes
 15739  0047B4  6AF8               	clrf	tblptru,c
 15740  0047B6  0E00               	movlw	low (__mediumconst shr (0+16))
 15741  0047B8  22F8               	addwfc	tblptru,f,c
 15742  0047BA                     	endif
 15743  0047BA  0009               	tblrd		*+
 15744  0047BC  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 15745  0047C0  0009               	tblrd		*+
 15746  0047C2  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 15747  0047C6  90D8               	bcf	status,0,c
 15748  0047C8  362D               	rlcf	??_lcd_draw_string^0,f,c
 15749  0047CA  362E               	rlcf	(??_lcd_draw_string+1)^0,f,c
 15750  0047CC  0E01               	movlw	1
 15751  0047CE  262D               	addwf	??_lcd_draw_string^0,f,c
 15752  0047D0  0E00               	movlw	0
 15753  0047D2  222E               	addwfc	(??_lcd_draw_string+1)^0,f,c
 15754  0047D4  502D               	movf	??_lcd_draw_string^0,w,c
 15755  0047D6  2633               	addwf	lcd_draw_string@lIndex^0,f,c
 15756  0047D8  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15757  0047DA  2234               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 15758  0047DC                     
 15759                           ;lib_ili9341.c: 390:         }
 15760  0047DC  4A31               	infsnz	lcd_draw_string@k^0,f,c
 15761  0047DE  2A32               	incf	(lcd_draw_string@k+1)^0,f,c
 15762  0047E0                     l6853:
 15763  0047E0  0EE0               	movlw	224
 15764  0047E2  6E2D               	movwf	??_lcd_draw_string^0,c
 15765  0047E4  0EFF               	movlw	255
 15766  0047E6  6E2E               	movwf	(??_lcd_draw_string+1)^0,c
 15767  0047E8  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 15768  0047EC  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 15769  0047F0  0E00               	movlw	low (__mediumconst shr (0+16))
 15770  0047F2  6EF8               	movwf	tblptru,c
 15771  0047F4  0E0E               	movlw	(high __ramtop+-1)
 15772  0047F6  64F7               	cpfsgt	tblptrh,c
 15773  0047F8  D003               	bra	u8147
 15774  0047FA  0008               	tblrd		*
 15775  0047FC  50F5               	movf	tablat,w,c
 15776  0047FE  D005               	bra	u8140
 15777  004800                     u8147:
 15778  004800  CFF6 FFE1          	movff	tblptrl,fsr1l
 15779  004804  CFF7 FFE2          	movff	tblptrh,fsr1h
 15780  004808  50E7               	movf	indf1,w,c
 15781  00480A                     u8140:
 15782  00480A  6E2F               	movwf	(??_lcd_draw_string+2)^0,c
 15783  00480C  6A30               	clrf	(??_lcd_draw_string+3)^0,c
 15784  00480E  502D               	movf	??_lcd_draw_string^0,w,c
 15785  004810  262F               	addwf	(??_lcd_draw_string+2)^0,f,c
 15786  004812  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15787  004814  2230               	addwfc	(??_lcd_draw_string+3)^0,f,c
 15788  004816  502F               	movf	(??_lcd_draw_string+2)^0,w,c
 15789  004818  5C31               	subwf	lcd_draw_string@k^0,w,c
 15790  00481A  5030               	movf	(??_lcd_draw_string+3)^0,w,c
 15791  00481C  5832               	subwfb	(lcd_draw_string@k+1)^0,w,c
 15792  00481E  A0D8               	btfss	status,0,c
 15793  004820  EF14  F024         	goto	u8151
 15794  004824  EF16  F024         	goto	u8150
 15795  004828                     u8151:
 15796  004828  EFD1  F023         	goto	l6849
 15797  00482C                     u8150:
 15798  00482C                     
 15799                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 15800  00482C  C023  F00D         	movff	lcd_draw_string@x,lcd_draw_char@x
 15801  004830  C024  F00E         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 15802  004834  C025  F00F         	movff	lcd_draw_string@y,lcd_draw_char@y
 15803  004838  C026  F010         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 15804  00483C  C033  F011         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 15805  004840  C034  F012         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 15806  004844  C029  F013         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 15807  004848  C02A  F014         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 15808  00484C  C02B  F015         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 15809  004850  C02C  F016         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 15810  004854  EC56  F022         	call	_lcd_draw_char	;wreg free
 15811  004858                     
 15812                           ;lib_ili9341.c: 394:         x += font[lIndex];
 15813  004858  90D8               	bcf	status,0,c
 15814  00485A  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 15815  00485C  6EF6               	movwf	tblptrl,c
 15816  00485E  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 15817  004860  6EF7               	movwf	tblptrh,c
 15818  004862  0EC9               	movlw	low _font
 15819  004864  26F6               	addwf	tblptrl,f,c
 15820  004866  0EF1               	movlw	high _font
 15821  004868  22F7               	addwfc	tblptrh,f,c
 15822  00486A                     	if	1	;There are 3 active tblptr bytes
 15823  00486A  6AF8               	clrf	tblptru,c
 15824  00486C  0E00               	movlw	low (__mediumconst shr (0+16))
 15825  00486E  22F8               	addwfc	tblptru,f,c
 15826  004870                     	endif
 15827  004870  0009               	tblrd		*+
 15828  004872  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 15829  004876  0009               	tblrd		*+
 15830  004878  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 15831  00487C  502D               	movf	??_lcd_draw_string^0,w,c
 15832  00487E  2623               	addwf	lcd_draw_string@x^0,f,c
 15833  004880  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15834  004882  2224               	addwfc	(lcd_draw_string@x+1)^0,f,c
 15835  004884                     
 15836                           ;lib_ili9341.c: 396:         pS++;
 15837  004884  4A27               	infsnz	lcd_draw_string@pS^0,f,c
 15838  004886  2A28               	incf	(lcd_draw_string@pS+1)^0,f,c
 15839  004888                     l6861:
 15840                           
 15841                           ;lib_ili9341.c: 384:     while(*pS)
 15842  004888  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 15843  00488C  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 15844  004890  0E00               	movlw	low (__mediumconst shr (0+16))
 15845  004892  6EF8               	movwf	tblptru,c
 15846  004894  0E0E               	movlw	(high __ramtop+-1)
 15847  004896  64F7               	cpfsgt	tblptrh,c
 15848  004898  D003               	bra	u8167
 15849  00489A  0008               	tblrd		*
 15850  00489C  50F5               	movf	tablat,w,c
 15851  00489E  D005               	bra	u8160
 15852  0048A0                     u8167:
 15853  0048A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 15854  0048A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 15855  0048A8  50E7               	movf	indf1,w,c
 15856  0048AA                     u8160:
 15857  0048AA  0900               	iorlw	0
 15858  0048AC  A4D8               	btfss	status,2,c
 15859  0048AE  EF5B  F024         	goto	u8171
 15860  0048B2  EF5D  F024         	goto	u8170
 15861  0048B6                     u8171:
 15862  0048B6  EFC7  F023         	goto	l6847
 15863  0048BA                     u8170:
 15864  0048BA  0012               	return		;funcret
 15865  0048BC                     __end_of_lcd_draw_string:
 15866                           	opt callstack 0
 15867                           
 15868 ;; *************** function _lcd_draw_char *****************
 15869 ;; Defined at:
 15870 ;;		line 355 in file "lib_ili9341.c"
 15871 ;; Parameters:    Size  Location     Type
 15872 ;;  x               2   12[COMRAM] unsigned short 
 15873 ;;  y               2   14[COMRAM] unsigned short 
 15874 ;;  fIndex          2   16[COMRAM] unsigned short 
 15875 ;;  fg_color        2   18[COMRAM] unsigned short 
 15876 ;;  bg_color        2   20[COMRAM] unsigned short 
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;  i               1   33[COMRAM] unsigned char 
 15879 ;;  k               1   32[COMRAM] unsigned char 
 15880 ;;  j               1   31[COMRAM] unsigned char 
 15881 ;; Return value:  Size  Location     Type
 15882 ;;                  1    wreg      void 
 15883 ;; Registers used:
 15884 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15885 ;; Tracked objects:
 15886 ;;		On entry : 0/0
 15887 ;;		On exit  : 0/0
 15888 ;;		Unchanged: 0/0
 15889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15890 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15892 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15893 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15894 ;;Total ram usage:       22 bytes
 15895 ;; Hardware stack levels used:    1
 15896 ;; Hardware stack levels required when called:    8
 15897 ;; This function calls:
 15898 ;;		_lcd_draw_pixel
 15899 ;;		_lcd_set_cursor
 15900 ;; This function is called by:
 15901 ;;		_lcd_draw_string
 15902 ;; This function uses a non-reentrant model
 15903 ;;
 15904                           
 15905                           	psect	text49
 15906  0044AC                     __ptext49:
 15907                           	opt callstack 0
 15908  0044AC                     _lcd_draw_char:
 15909                           	opt callstack 21
 15910  0044AC                     
 15911                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 15912  0044AC  0E00               	movlw	0
 15913  0044AE  6E20               	movwf	lcd_draw_char@j^0,c
 15914  0044B0  EFF6  F022         	goto	l6565
 15915  0044B4                     l6535:
 15916                           
 15917                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 15918  0044B4  90D8               	bcf	status,0,c
 15919  0044B6  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 15920  0044B8  6EF6               	movwf	tblptrl,c
 15921  0044BA  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 15922  0044BC  6EF7               	movwf	tblptrh,c
 15923  0044BE  0EC9               	movlw	low _font
 15924  0044C0  26F6               	addwf	tblptrl,f,c
 15925  0044C2  0EF1               	movlw	high _font
 15926  0044C4  22F7               	addwfc	tblptrh,f,c
 15927  0044C6                     	if	1	;There are 3 active tblptr bytes
 15928  0044C6  6AF8               	clrf	tblptru,c
 15929  0044C8  0E00               	movlw	low (__mediumconst shr (0+16))
 15930  0044CA  22F8               	addwfc	tblptru,f,c
 15931  0044CC                     	endif
 15932  0044CC  0009               	tblrd		*+
 15933  0044CE  CFF5 F017          	movff	tablat,??_lcd_draw_char
 15934  0044D2  0009               	tblrd		*+
 15935  0044D4  CFF5 F018          	movff	tablat,??_lcd_draw_char+1
 15936  0044D8  5020               	movf	lcd_draw_char@j^0,w,c
 15937  0044DA  5E17               	subwf	??_lcd_draw_char^0,f,c
 15938  0044DC  0E00               	movlw	0
 15939  0044DE  5A18               	subwfb	(??_lcd_draw_char+1)^0,f,c
 15940  0044E0  500D               	movf	lcd_draw_char@x^0,w,c
 15941  0044E2  2417               	addwf	??_lcd_draw_char^0,w,c
 15942  0044E4  6E09               	movwf	lcd_set_cursor@x^0,c
 15943  0044E6  500E               	movf	(lcd_draw_char@x+1)^0,w,c
 15944  0044E8  2018               	addwfc	(??_lcd_draw_char+1)^0,w,c
 15945  0044EA  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 15946  0044EC  C00F  F00B         	movff	lcd_draw_char@y,lcd_set_cursor@y
 15947  0044F0  C010  F00C         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 15948  0044F4  EC37  F02C         	call	_lcd_set_cursor	;wreg free
 15949  0044F8                     
 15950                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 15951  0044F8  0E00               	movlw	0
 15952  0044FA  6E21               	movwf	lcd_draw_char@k^0,c
 15953  0044FC                     l6543:
 15954                           
 15955                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 15956  0044FC  0E00               	movlw	0
 15957  0044FE  6E22               	movwf	lcd_draw_char@i^0,c
 15958  004500                     l6549:
 15959                           
 15960                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 15961  004500  5020               	movf	lcd_draw_char@j^0,w,c
 15962  004502  6E17               	movwf	??_lcd_draw_char^0,c
 15963  004504  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 15964  004506  90D8               	bcf	status,0,c
 15965  004508  3617               	rlcf	??_lcd_draw_char^0,f,c
 15966  00450A  3618               	rlcf	(??_lcd_draw_char+1)^0,f,c
 15967  00450C  90D8               	bcf	status,0,c
 15968  00450E  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 15969  004510  6EF6               	movwf	tblptrl,c
 15970  004512  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 15971  004514  6EF7               	movwf	tblptrh,c
 15972  004516  0EC9               	movlw	low _font
 15973  004518  26F6               	addwf	tblptrl,f,c
 15974  00451A  0EF1               	movlw	high _font
 15975  00451C  22F7               	addwfc	tblptrh,f,c
 15976  00451E                     	if	1	;There are 3 active tblptr bytes
 15977  00451E  6AF8               	clrf	tblptru,c
 15978  004520  0E00               	movlw	low (__mediumconst shr (0+16))
 15979  004522  22F8               	addwfc	tblptru,f,c
 15980  004524                     	endif
 15981  004524  0009               	tblrd		*+
 15982  004526  CFF5 F019          	movff	tablat,??_lcd_draw_char+2
 15983  00452A  0009               	tblrd		*+
 15984  00452C  CFF5 F01A          	movff	tablat,??_lcd_draw_char+3
 15985  004530  90D8               	bcf	status,0,c
 15986  004532  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 15987  004534  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 15988  004536  5017               	movf	??_lcd_draw_char^0,w,c
 15989  004538  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 15990  00453A  5018               	movf	(??_lcd_draw_char+1)^0,w,c
 15991  00453C  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 15992  00453E  5021               	movf	lcd_draw_char@k^0,w,c
 15993  004540  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 15994  004542  0E00               	movlw	0
 15995  004544  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 15996  004546  5011               	movf	lcd_draw_char@fIndex^0,w,c
 15997  004548  2619               	addwf	(??_lcd_draw_char+2)^0,f,c
 15998  00454A  5012               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 15999  00454C  221A               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16000  00454E  90D8               	bcf	status,0,c
 16001  004550  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16002  004552  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16003  004554  0EC9               	movlw	low _font
 16004  004556  2419               	addwf	(??_lcd_draw_char+2)^0,w,c
 16005  004558  6EF6               	movwf	tblptrl,c
 16006  00455A  0EF1               	movlw	high _font
 16007  00455C  201A               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16008  00455E  6EF7               	movwf	tblptrh,c
 16009  004560                     	if	1	;There are 3 active tblptr bytes
 16010  004560  6AF8               	clrf	tblptru,c
 16011  004562  0E00               	movlw	low (__mediumconst shr (0+16))
 16012  004564  22F8               	addwfc	tblptru,f,c
 16013  004566                     	endif
 16014  004566  0009               	tblrd		*+
 16015  004568  CFF5 F01B          	movff	tablat,??_lcd_draw_char+4
 16016  00456C  0009               	tblrd		*+
 16017  00456E  CFF5 F01C          	movff	tablat,??_lcd_draw_char+5
 16018  004572  C022  F01D         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16019  004576  0E80               	movlw	128
 16020  004578  6E1E               	movwf	(??_lcd_draw_char+7)^0,c
 16021  00457A  0E00               	movlw	0
 16022  00457C  6E1F               	movwf	(??_lcd_draw_char+8)^0,c
 16023  00457E  2A1D               	incf	(??_lcd_draw_char+6)^0,f,c
 16024  004580  EFC5  F022         	goto	u7984
 16025  004584                     u7985:
 16026  004584  341F               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16027  004586  321F               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16028  004588  321E               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16029  00458A                     u7984:
 16030  00458A  2E1D               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16031  00458C  EFC2  F022         	goto	u7985
 16032  004590  501B               	movf	(??_lcd_draw_char+4)^0,w,c
 16033  004592  161E               	andwf	(??_lcd_draw_char+7)^0,f,c
 16034  004594  501C               	movf	(??_lcd_draw_char+5)^0,w,c
 16035  004596  161F               	andwf	(??_lcd_draw_char+8)^0,f,c
 16036  004598  501E               	movf	(??_lcd_draw_char+7)^0,w,c
 16037  00459A  101F               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16038  00459C  B4D8               	btfsc	status,2,c
 16039  00459E  EFD3  F022         	goto	u7991
 16040  0045A2  EFD5  F022         	goto	u7990
 16041  0045A6                     u7991:
 16042  0045A6  EFDD  F022         	goto	l6553
 16043  0045AA                     u7990:
 16044  0045AA                     
 16045                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 16046  0045AA  C013  F007         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16047  0045AE  C014  F008         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16048  0045B2  EC29  F02E         	call	_lcd_draw_pixel	;wreg free
 16049                           
 16050                           ;lib_ili9341.c: 370:                 }
 16051  0045B6  EFE3  F022         	goto	l6555
 16052  0045BA                     l6553:
 16053                           
 16054                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 16055  0045BA  C015  F007         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16056  0045BE  C016  F008         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16057  0045C2  EC29  F02E         	call	_lcd_draw_pixel	;wreg free
 16058  0045C6                     l6555:
 16059                           
 16060                           ;lib_ili9341.c: 375:             }
 16061  0045C6  2A22               	incf	lcd_draw_char@i^0,f,c
 16062  0045C8  0E07               	movlw	7
 16063  0045CA  6422               	cpfsgt	lcd_draw_char@i^0,c
 16064  0045CC  EFEA  F022         	goto	u8001
 16065  0045D0  EFEC  F022         	goto	u8000
 16066  0045D4                     u8001:
 16067  0045D4  EF80  F022         	goto	l6549
 16068  0045D8                     u8000:
 16069  0045D8                     
 16070                           ;lib_ili9341.c: 376:         }
 16071  0045D8  2A21               	incf	lcd_draw_char@k^0,f,c
 16072  0045DA  0E01               	movlw	1
 16073  0045DC  6421               	cpfsgt	lcd_draw_char@k^0,c
 16074  0045DE  EFF3  F022         	goto	u8011
 16075  0045E2  EFF5  F022         	goto	u8010
 16076  0045E6                     u8011:
 16077  0045E6  EF7E  F022         	goto	l6543
 16078  0045EA                     u8010:
 16079  0045EA                     
 16080                           ;lib_ili9341.c: 377:     }
 16081  0045EA  2A20               	incf	lcd_draw_char@j^0,f,c
 16082  0045EC                     l6565:
 16083  0045EC  90D8               	bcf	status,0,c
 16084  0045EE  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16085  0045F0  6EF6               	movwf	tblptrl,c
 16086  0045F2  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16087  0045F4  6EF7               	movwf	tblptrh,c
 16088  0045F6  0EC9               	movlw	low _font
 16089  0045F8  26F6               	addwf	tblptrl,f,c
 16090  0045FA  0EF1               	movlw	high _font
 16091  0045FC  22F7               	addwfc	tblptrh,f,c
 16092  0045FE                     	if	1	;There are 3 active tblptr bytes
 16093  0045FE  6AF8               	clrf	tblptru,c
 16094  004600  0E00               	movlw	low (__mediumconst shr (0+16))
 16095  004602  22F8               	addwfc	tblptru,f,c
 16096  004604                     	endif
 16097  004604  5020               	movf	lcd_draw_char@j^0,w,c
 16098  004606  6E17               	movwf	??_lcd_draw_char^0,c
 16099  004608  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 16100  00460A  0009               	tblrd		*+
 16101  00460C  50F5               	movf	tablat,w,c
 16102  00460E  5C17               	subwf	??_lcd_draw_char^0,w,c
 16103  004610  0009               	tblrd		*+
 16104  004612  50F5               	movf	tablat,w,c
 16105  004614  5818               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16106  004616  A0D8               	btfss	status,0,c
 16107  004618  EF10  F023         	goto	u8021
 16108  00461C  EF12  F023         	goto	u8020
 16109  004620                     u8021:
 16110  004620  EF5A  F022         	goto	l6535
 16111  004624                     u8020:
 16112  004624  0012               	return		;funcret
 16113  004626                     __end_of_lcd_draw_char:
 16114                           	opt callstack 0
 16115                           
 16116 ;; *************** function _lcd_set_cursor *****************
 16117 ;; Defined at:
 16118 ;;		line 144 in file "lib_ili9341.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;  x               2    8[COMRAM] unsigned short 
 16121 ;;  y               2   10[COMRAM] unsigned short 
 16122 ;; Auto vars:     Size  Location     Type
 16123 ;;		None
 16124 ;; Return value:  Size  Location     Type
 16125 ;;                  1    wreg      unsigned char 
 16126 ;; Registers used:
 16127 ;;		wreg, status,2, status,0, cstack
 16128 ;; Tracked objects:
 16129 ;;		On entry : 0/0
 16130 ;;		On exit  : 0/0
 16131 ;;		Unchanged: 0/0
 16132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16137 ;;Total ram usage:        4 bytes
 16138 ;; Hardware stack levels used:    1
 16139 ;; Hardware stack levels required when called:    7
 16140 ;; This function calls:
 16141 ;;		_lcd_set_cursor_x
 16142 ;;		_lcd_set_cursor_y
 16143 ;; This function is called by:
 16144 ;;		_lcd_fill
 16145 ;;		_lcd_draw_char
 16146 ;;		_lcd_draw_pixel_at
 16147 ;;		_lcd_fill_rect
 16148 ;; This function uses a non-reentrant model
 16149 ;;
 16150                           
 16151                           	psect	text50
 16152  00586E                     __ptext50:
 16153                           	opt callstack 0
 16154  00586E                     _lcd_set_cursor:
 16155                           	opt callstack 21
 16156  00586E                     
 16157                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16158  00586E  C009  F007         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16159  005872  C00A  F008         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16160  005876  EC88  F02B         	call	_lcd_set_cursor_x	;wreg free
 16161  00587A  0900               	iorlw	0
 16162  00587C  A4D8               	btfss	status,2,c
 16163  00587E  EF43  F02C         	goto	u7881
 16164  005882  EF45  F02C         	goto	u7880
 16165  005886                     u7881:
 16166  005886  EF53  F02C         	goto	l6443
 16167  00588A                     u7880:
 16168  00588A  C00B  F007         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16169  00588E  C00C  F008         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16170  005892  EC64  F02B         	call	_lcd_set_cursor_y	;wreg free
 16171  005896  0900               	iorlw	0
 16172  005898  B4D8               	btfsc	status,2,c
 16173  00589A  EF51  F02C         	goto	u7891
 16174  00589E  EF53  F02C         	goto	u7890
 16175  0058A2                     u7891:
 16176  0058A2  EF56  F02C         	goto	l6447
 16177  0058A6                     u7890:
 16178  0058A6                     l6443:
 16179                           
 16180                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 16181  0058A6  0E01               	movlw	1
 16182  0058A8  EF57  F02C         	goto	l354
 16183  0058AC                     l6447:
 16184                           
 16185                           ;lib_ili9341.c: 151:     return 0;
 16186  0058AC  0E00               	movlw	0
 16187  0058AE                     l354:
 16188  0058AE  0012               	return		;funcret
 16189  0058B0                     __end_of_lcd_set_cursor:
 16190                           	opt callstack 0
 16191                           
 16192 ;; *************** function _lcd_set_cursor_y *****************
 16193 ;; Defined at:
 16194 ;;		line 170 in file "lib_ili9341.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;  y               2    6[COMRAM] unsigned short 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;		None
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      unsigned char 
 16201 ;; Registers used:
 16202 ;;		wreg, status,2, status,0, cstack
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;Total ram usage:        2 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; Hardware stack levels required when called:    6
 16215 ;; This function calls:
 16216 ;;		_lcd_send
 16217 ;; This function is called by:
 16218 ;;		_lcd_set_cursor
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222                           	psect	text51
 16223  0056C8                     __ptext51:
 16224                           	opt callstack 0
 16225  0056C8                     _lcd_set_cursor_y:
 16226                           	opt callstack 21
 16227  0056C8                     
 16228                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 16229  0056C8  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16230  0056CA  E109               	bnz	u7320
 16231  0056CC  0EF0               	movlw	240
 16232  0056CE  5C07               	subwf	lcd_set_cursor_y@y^0,w,c
 16233  0056D0  A0D8               	btfss	status,0,c
 16234  0056D2  EF6D  F02B         	goto	u7321
 16235  0056D6  EF6F  F02B         	goto	u7320
 16236  0056DA                     u7321:
 16237  0056DA  EF72  F02B         	goto	l6049
 16238  0056DE                     u7320:
 16239  0056DE                     
 16240                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 16241  0056DE  0E01               	movlw	1
 16242  0056E0  EF87  F02B         	goto	l362
 16243  0056E4                     l6049:
 16244                           
 16245                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 16246  0056E4  0E2A               	movlw	42
 16247  0056E6  6E05               	movwf	lcd_send@value^0,c
 16248  0056E8  0E00               	movlw	0
 16249  0056EA  EC11  F02E         	call	_lcd_send
 16250                           
 16251                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 16252  0056EE  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16253  0056F0  6E05               	movwf	lcd_send@value^0,c
 16254  0056F2  0E01               	movlw	1
 16255  0056F4  EC11  F02E         	call	_lcd_send
 16256                           
 16257                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 16258  0056F8  C007  F005         	movff	lcd_set_cursor_y@y,lcd_send@value
 16259  0056FC  0E01               	movlw	1
 16260  0056FE  EC11  F02E         	call	_lcd_send
 16261                           
 16262                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 16263  005702  0E2C               	movlw	44
 16264  005704  6E05               	movwf	lcd_send@value^0,c
 16265  005706  0E00               	movlw	0
 16266  005708  EC11  F02E         	call	_lcd_send
 16267  00570C                     
 16268                           ;lib_ili9341.c: 182:     return 0;
 16269  00570C  0E00               	movlw	0
 16270  00570E                     l362:
 16271  00570E  0012               	return		;funcret
 16272  005710                     __end_of_lcd_set_cursor_y:
 16273                           	opt callstack 0
 16274                           
 16275 ;; *************** function _lcd_set_cursor_x *****************
 16276 ;; Defined at:
 16277 ;;		line 155 in file "lib_ili9341.c"
 16278 ;; Parameters:    Size  Location     Type
 16279 ;;  x               2    6[COMRAM] unsigned short 
 16280 ;; Auto vars:     Size  Location     Type
 16281 ;;		None
 16282 ;; Return value:  Size  Location     Type
 16283 ;;                  1    wreg      unsigned char 
 16284 ;; Registers used:
 16285 ;;		wreg, status,2, status,0, cstack
 16286 ;; Tracked objects:
 16287 ;;		On entry : 0/0
 16288 ;;		On exit  : 0/0
 16289 ;;		Unchanged: 0/0
 16290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16295 ;;Total ram usage:        2 bytes
 16296 ;; Hardware stack levels used:    1
 16297 ;; Hardware stack levels required when called:    6
 16298 ;; This function calls:
 16299 ;;		_lcd_send
 16300 ;; This function is called by:
 16301 ;;		_lcd_set_cursor
 16302 ;; This function uses a non-reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text52
 16306  005710                     __ptext52:
 16307                           	opt callstack 0
 16308  005710                     _lcd_set_cursor_x:
 16309                           	opt callstack 21
 16310  005710                     
 16311                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 16312  005710  0E40               	movlw	64
 16313  005712  5C07               	subwf	lcd_set_cursor_x@x^0,w,c
 16314  005714  0E01               	movlw	1
 16315  005716  5808               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16316  005718  A0D8               	btfss	status,0,c
 16317  00571A  EF91  F02B         	goto	u7311
 16318  00571E  EF93  F02B         	goto	u7310
 16319  005722                     u7311:
 16320  005722  EF96  F02B         	goto	l6037
 16321  005726                     u7310:
 16322  005726                     
 16323                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 16324  005726  0E01               	movlw	1
 16325  005728  EFAB  F02B         	goto	l358
 16326  00572C                     l6037:
 16327                           
 16328                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 16329  00572C  0E2B               	movlw	43
 16330  00572E  6E05               	movwf	lcd_send@value^0,c
 16331  005730  0E00               	movlw	0
 16332  005732  EC11  F02E         	call	_lcd_send
 16333                           
 16334                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 16335  005736  5008               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16336  005738  6E05               	movwf	lcd_send@value^0,c
 16337  00573A  0E01               	movlw	1
 16338  00573C  EC11  F02E         	call	_lcd_send
 16339                           
 16340                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 16341  005740  C007  F005         	movff	lcd_set_cursor_x@x,lcd_send@value
 16342  005744  0E01               	movlw	1
 16343  005746  EC11  F02E         	call	_lcd_send
 16344                           
 16345                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 16346  00574A  0E2C               	movlw	44
 16347  00574C  6E05               	movwf	lcd_send@value^0,c
 16348  00574E  0E00               	movlw	0
 16349  005750  EC11  F02E         	call	_lcd_send
 16350  005754                     
 16351                           ;lib_ili9341.c: 167:     return 0;
 16352  005754  0E00               	movlw	0
 16353  005756                     l358:
 16354  005756  0012               	return		;funcret
 16355  005758                     __end_of_lcd_set_cursor_x:
 16356                           	opt callstack 0
 16357                           
 16358 ;; *************** function _lcd_draw_pixel *****************
 16359 ;; Defined at:
 16360 ;;		line 185 in file "lib_ili9341.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  color           2    6[COMRAM] unsigned short 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;		None
 16365 ;; Return value:  Size  Location     Type
 16366 ;;                  1    wreg      unsigned char 
 16367 ;; Registers used:
 16368 ;;		wreg, status,2, cstack
 16369 ;; Tracked objects:
 16370 ;;		On entry : 0/0
 16371 ;;		On exit  : 0/0
 16372 ;;		Unchanged: 0/0
 16373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;Total ram usage:        2 bytes
 16379 ;; Hardware stack levels used:    1
 16380 ;; Hardware stack levels required when called:    6
 16381 ;; This function calls:
 16382 ;;		_lcd_send
 16383 ;; This function is called by:
 16384 ;;		_lcd_fill
 16385 ;;		_lcd_draw_char
 16386 ;;		_lcd_draw_pixel_at
 16387 ;;		_lcd_fill_rect
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           	psect	text53
 16392  005C52                     __ptext53:
 16393                           	opt callstack 0
 16394  005C52                     _lcd_draw_pixel:
 16395                           	opt callstack 22
 16396  005C52                     
 16397                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 16398  005C52  5008               	movf	(lcd_draw_pixel@color+1)^0,w,c
 16399  005C54  6E05               	movwf	lcd_send@value^0,c
 16400  005C56  0E01               	movlw	1
 16401  005C58  EC11  F02E         	call	_lcd_send
 16402                           
 16403                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 16404  005C5C  C007  F005         	movff	lcd_draw_pixel@color,lcd_send@value
 16405  005C60  0E01               	movlw	1
 16406  005C62  EC11  F02E         	call	_lcd_send
 16407  005C66  0012               	return		;funcret
 16408  005C68                     __end_of_lcd_draw_pixel:
 16409                           	opt callstack 0
 16410                           
 16411 ;; *************** function _lcd_send *****************
 16412 ;; Defined at:
 16413 ;;		line 134 in file "lib_ili9341.c"
 16414 ;; Parameters:    Size  Location     Type
 16415 ;;  dc              1    wreg     _Bool 
 16416 ;;  value           1    4[COMRAM] unsigned char 
 16417 ;; Auto vars:     Size  Location     Type
 16418 ;;  dc              1    5[COMRAM] _Bool 
 16419 ;; Return value:  Size  Location     Type
 16420 ;;                  1    wreg      void 
 16421 ;; Registers used:
 16422 ;;		wreg, status,2, cstack
 16423 ;; Tracked objects:
 16424 ;;		On entry : 0/0
 16425 ;;		On exit  : 0/0
 16426 ;;		Unchanged: 0/0
 16427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16428 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16432 ;;Total ram usage:        2 bytes
 16433 ;; Hardware stack levels used:    1
 16434 ;; Hardware stack levels required when called:    5
 16435 ;; This function calls:
 16436 ;;		_SPI_ExchangeByte
 16437 ;; This function is called by:
 16438 ;;		_lcd_init
 16439 ;;		_lcd_set_cursor_x
 16440 ;;		_lcd_set_cursor_y
 16441 ;;		_lcd_draw_pixel
 16442 ;; This function uses a non-reentrant model
 16443 ;;
 16444                           
 16445                           	psect	text54
 16446  005C22                     __ptext54:
 16447                           	opt callstack 0
 16448  005C22                     _lcd_send:
 16449                           	opt callstack 24
 16450                           
 16451                           ;incstack = 0
 16452                           ;lcd_send@dc stored from wreg
 16453  005C22  6E06               	movwf	lcd_send@dc^0,c
 16454  005C24                     
 16455                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 16456  005C24  B006               	btfsc	lcd_send@dc^0,0,c
 16457  005C26  D002               	bra	u6055
 16458  005C28  908D               	bcf	141,0,c	;volatile
 16459  005C2A  D001               	bra	u6056
 16460  005C2C                     u6055:
 16461  005C2C  808D               	bsf	141,0,c	;volatile
 16462  005C2E                     u6056:
 16463  005C2E                     
 16464                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 16465  005C2E  928D               	bcf	141,1,c	;volatile
 16466  005C30                     
 16467                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 16468  005C30  5005               	movf	lcd_send@value^0,w,c
 16469  005C32  EC04  F02E         	call	_SPI_ExchangeByte
 16470  005C36                     
 16471                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 16472  005C36  828D               	bsf	141,1,c	;volatile
 16473  005C38  0012               	return		;funcret
 16474  005C3A                     __end_of_lcd_send:
 16475                           	opt callstack 0
 16476                           
 16477 ;; *************** function _SPI_ExchangeByte *****************
 16478 ;; Defined at:
 16479 ;;		line 92 in file "mcc_generated_files/spi.c"
 16480 ;; Parameters:    Size  Location     Type
 16481 ;;  data            1    wreg     unsigned char 
 16482 ;; Auto vars:     Size  Location     Type
 16483 ;;  data            1    3[COMRAM] unsigned char 
 16484 ;; Return value:  Size  Location     Type
 16485 ;;                  1    wreg      unsigned char 
 16486 ;; Registers used:
 16487 ;;		wreg, status,2
 16488 ;; Tracked objects:
 16489 ;;		On entry : 0/0
 16490 ;;		On exit  : 0/0
 16491 ;;		Unchanged: 0/0
 16492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16497 ;;Total ram usage:        1 bytes
 16498 ;; Hardware stack levels used:    1
 16499 ;; Hardware stack levels required when called:    4
 16500 ;; This function calls:
 16501 ;;		Nothing
 16502 ;; This function is called by:
 16503 ;;		_lcd_send
 16504 ;;		_SPI_WriteBlock
 16505 ;;		_SPI_ReadBlock
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           	psect	text55
 16510  005C08                     __ptext55:
 16511                           	opt callstack 0
 16512  005C08                     _SPI_ExchangeByte:
 16513                           	opt callstack 24
 16514                           
 16515                           ;incstack = 0
 16516                           ;SPI_ExchangeByte@data stored from wreg
 16517  005C08  6E04               	movwf	SPI_ExchangeByte@data^0,c
 16518  005C0A                     
 16519                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 16520  005C0A  C004  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 16521  005C0E                     l136:
 16522  005C0E  A69E               	btfss	158,3,c	;volatile
 16523  005C10  EF0C  F02E         	goto	u4781
 16524  005C14  EF0E  F02E         	goto	u4780
 16525  005C18                     u4781:
 16526  005C18  EF07  F02E         	goto	l136
 16527  005C1C                     u4780:
 16528  005C1C                     
 16529                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 16530  005C1C  969E               	bcf	158,3,c	;volatile
 16531                           
 16532                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 16533  005C1E  50C9               	movf	201,w,c	;volatile
 16534  005C20  0012               	return		;funcret
 16535  005C22                     __end_of_SPI_ExchangeByte:
 16536                           	opt callstack 0
 16537                           
 16538 ;; *************** function ___xxtofl *****************
 16539 ;; Defined at:
 16540 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;  sign            1    wreg     unsigned char 
 16543 ;;  val             4    3[COMRAM] long 
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;  sign            1   11[COMRAM] unsigned char 
 16546 ;;  arg             4   13[COMRAM] unsigned long 
 16547 ;;  exp             1   12[COMRAM] unsigned char 
 16548 ;; Return value:  Size  Location     Type
 16549 ;;                  4    3[COMRAM] unsigned char 
 16550 ;; Registers used:
 16551 ;;		wreg, status,2, status,0
 16552 ;; Tracked objects:
 16553 ;;		On entry : 0/0
 16554 ;;		On exit  : 0/0
 16555 ;;		Unchanged: 0/0
 16556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16558 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16559 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16560 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16561 ;;Total ram usage:       14 bytes
 16562 ;; Hardware stack levels used:    1
 16563 ;; Hardware stack levels required when called:    4
 16564 ;; This function calls:
 16565 ;;		Nothing
 16566 ;; This function is called by:
 16567 ;;		_main
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571                           	psect	text56
 16572  003CCC                     __ptext56:
 16573                           	opt callstack 0
 16574  003CCC                     ___xxtofl:
 16575                           	opt callstack 26
 16576                           
 16577                           ;incstack = 0
 16578                           ;___xxtofl@sign stored from wreg
 16579  003CCC  6E0C               	movwf	___xxtofl@sign^0,c
 16580  003CCE  500C               	movf	___xxtofl@sign^0,w,c
 16581  003CD0  B4D8               	btfsc	status,2,c
 16582  003CD2  EF6D  F01E         	goto	u8261
 16583  003CD6  EF6F  F01E         	goto	u8260
 16584  003CDA                     u8261:
 16585  003CDA  EF91  F01E         	goto	l1481
 16586  003CDE                     u8260:
 16587  003CDE  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 16588  003CE0  EF76  F01E         	goto	u8270
 16589  003CE4  EF74  F01E         	goto	u8271
 16590  003CE8                     u8271:
 16591  003CE8  EF91  F01E         	goto	l1481
 16592  003CEC                     u8270:
 16593  003CEC  C004  F008         	movff	___xxtofl@val,??___xxtofl
 16594  003CF0  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
 16595  003CF4  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
 16596  003CF8  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
 16597  003CFC  1E08               	comf	??___xxtofl^0,f,c
 16598  003CFE  1E09               	comf	(??___xxtofl+1)^0,f,c
 16599  003D00  1E0A               	comf	(??___xxtofl+2)^0,f,c
 16600  003D02  1E0B               	comf	(??___xxtofl+3)^0,f,c
 16601  003D04  2A08               	incf	??___xxtofl^0,f,c
 16602  003D06  0E00               	movlw	0
 16603  003D08  2209               	addwfc	(??___xxtofl+1)^0,f,c
 16604  003D0A  220A               	addwfc	(??___xxtofl+2)^0,f,c
 16605  003D0C  220B               	addwfc	(??___xxtofl+3)^0,f,c
 16606  003D0E  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
 16607  003D12  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
 16608  003D16  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
 16609  003D1A  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
 16610  003D1E  EF99  F01E         	goto	l6913
 16611  003D22                     l1481:
 16612  003D22  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
 16613  003D26  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 16614  003D2A  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
 16615  003D2E  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
 16616  003D32                     l6913:
 16617  003D32  5004               	movf	___xxtofl@val^0,w,c
 16618  003D34  1005               	iorwf	(___xxtofl@val+1)^0,w,c
 16619  003D36  1006               	iorwf	(___xxtofl@val+2)^0,w,c
 16620  003D38  1007               	iorwf	(___xxtofl@val+3)^0,w,c
 16621  003D3A  A4D8               	btfss	status,2,c
 16622  003D3C  EFA2  F01E         	goto	u8281
 16623  003D40  EFA4  F01E         	goto	u8280
 16624  003D44                     u8281:
 16625  003D44  EFAE  F01E         	goto	l6919
 16626  003D48                     u8280:
 16627  003D48  0E00               	movlw	0
 16628  003D4A  6E04               	movwf	?___xxtofl^0,c
 16629  003D4C  0E00               	movlw	0
 16630  003D4E  6E05               	movwf	(?___xxtofl+1)^0,c
 16631  003D50  0E00               	movlw	0
 16632  003D52  6E06               	movwf	(?___xxtofl+2)^0,c
 16633  003D54  0E00               	movlw	0
 16634  003D56  6E07               	movwf	(?___xxtofl+3)^0,c
 16635  003D58  EF3F  F01F         	goto	l1484
 16636  003D5C                     l6919:
 16637  003D5C  0E96               	movlw	150
 16638  003D5E  6E0D               	movwf	___xxtofl@exp^0,c
 16639  003D60  EFB8  F01E         	goto	l6923
 16640  003D64                     l6921:
 16641  003D64  2A0D               	incf	___xxtofl@exp^0,f,c
 16642  003D66  90D8               	bcf	status,0,c
 16643  003D68  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 16644  003D6A  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 16645  003D6C  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 16646  003D6E  320E               	rrcf	___xxtofl@arg^0,f,c
 16647  003D70                     l6923:
 16648  003D70  0E00               	movlw	0
 16649  003D72  140E               	andwf	___xxtofl@arg^0,w,c
 16650  003D74  6E08               	movwf	??___xxtofl^0,c
 16651  003D76  0E00               	movlw	0
 16652  003D78  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 16653  003D7A  6E09               	movwf	(??___xxtofl+1)^0,c
 16654  003D7C  0E00               	movlw	0
 16655  003D7E  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 16656  003D80  6E0A               	movwf	(??___xxtofl+2)^0,c
 16657  003D82  0EFE               	movlw	254
 16658  003D84  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 16659  003D86  6E0B               	movwf	(??___xxtofl+3)^0,c
 16660  003D88  5008               	movf	??___xxtofl^0,w,c
 16661  003D8A  1009               	iorwf	(??___xxtofl+1)^0,w,c
 16662  003D8C  100A               	iorwf	(??___xxtofl+2)^0,w,c
 16663  003D8E  100B               	iorwf	(??___xxtofl+3)^0,w,c
 16664  003D90  A4D8               	btfss	status,2,c
 16665  003D92  EFCD  F01E         	goto	u8291
 16666  003D96  EFCF  F01E         	goto	u8290
 16667  003D9A                     u8291:
 16668  003D9A  EFB2  F01E         	goto	l6921
 16669  003D9E                     u8290:
 16670  003D9E  EFDD  F01E         	goto	l1488
 16671  003DA2                     l6925:
 16672  003DA2  2A0D               	incf	___xxtofl@exp^0,f,c
 16673  003DA4  0E01               	movlw	1
 16674  003DA6  260E               	addwf	___xxtofl@arg^0,f,c
 16675  003DA8  0E00               	movlw	0
 16676  003DAA  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
 16677  003DAC  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
 16678  003DAE  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
 16679  003DB0  90D8               	bcf	status,0,c
 16680  003DB2  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 16681  003DB4  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 16682  003DB6  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 16683  003DB8  320E               	rrcf	___xxtofl@arg^0,f,c
 16684  003DBA                     l1488:
 16685  003DBA  0E00               	movlw	0
 16686  003DBC  140E               	andwf	___xxtofl@arg^0,w,c
 16687  003DBE  6E08               	movwf	??___xxtofl^0,c
 16688  003DC0  0E00               	movlw	0
 16689  003DC2  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 16690  003DC4  6E09               	movwf	(??___xxtofl+1)^0,c
 16691  003DC6  0E00               	movlw	0
 16692  003DC8  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 16693  003DCA  6E0A               	movwf	(??___xxtofl+2)^0,c
 16694  003DCC  0EFF               	movlw	255
 16695  003DCE  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 16696  003DD0  6E0B               	movwf	(??___xxtofl+3)^0,c
 16697  003DD2  5008               	movf	??___xxtofl^0,w,c
 16698  003DD4  1009               	iorwf	(??___xxtofl+1)^0,w,c
 16699  003DD6  100A               	iorwf	(??___xxtofl+2)^0,w,c
 16700  003DD8  100B               	iorwf	(??___xxtofl+3)^0,w,c
 16701  003DDA  A4D8               	btfss	status,2,c
 16702  003DDC  EFF2  F01E         	goto	u8301
 16703  003DE0  EFF4  F01E         	goto	u8300
 16704  003DE4                     u8301:
 16705  003DE4  EFD1  F01E         	goto	l6925
 16706  003DE8                     u8300:
 16707  003DE8  EFFC  F01E         	goto	l6933
 16708  003DEC                     l6931:
 16709  003DEC  060D               	decf	___xxtofl@exp^0,f,c
 16710  003DEE  90D8               	bcf	status,0,c
 16711  003DF0  360E               	rlcf	___xxtofl@arg^0,f,c
 16712  003DF2  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
 16713  003DF4  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
 16714  003DF6  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
 16715  003DF8                     l6933:
 16716  003DF8  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
 16717  003DFA  EF01  F01F         	goto	u8311
 16718  003DFE  EF03  F01F         	goto	u8310
 16719  003E02                     u8311:
 16720  003E02  EF0B  F01F         	goto	l1495
 16721  003E06                     u8310:
 16722  003E06  0E02               	movlw	2
 16723  003E08  600D               	cpfslt	___xxtofl@exp^0,c
 16724  003E0A  EF09  F01F         	goto	u8321
 16725  003E0E  EF0B  F01F         	goto	u8320
 16726  003E12                     u8321:
 16727  003E12  EFF6  F01E         	goto	l6931
 16728  003E16                     u8320:
 16729  003E16                     l1495:
 16730  003E16  B00D               	btfsc	___xxtofl@exp^0,0,c
 16731  003E18  EF10  F01F         	goto	u8331
 16732  003E1C  EF12  F01F         	goto	u8330
 16733  003E20                     u8331:
 16734  003E20  EF13  F01F         	goto	l6939
 16735  003E24                     u8330:
 16736  003E24  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
 16737  003E26                     l6939:
 16738  003E26  90D8               	bcf	status,0,c
 16739  003E28  320D               	rrcf	___xxtofl@exp^0,f,c
 16740  003E2A  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
 16741  003E2E  6A09               	clrf	(??___xxtofl+1)^0,c
 16742  003E30  6A0A               	clrf	(??___xxtofl+2)^0,c
 16743  003E32  6A0B               	clrf	(??___xxtofl+3)^0,c
 16744  003E34  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
 16745  003E38  6A0A               	clrf	(??___xxtofl+2)^0,c
 16746  003E3A  6A09               	clrf	(??___xxtofl+1)^0,c
 16747  003E3C  6A08               	clrf	??___xxtofl^0,c
 16748  003E3E  5008               	movf	??___xxtofl^0,w,c
 16749  003E40  120E               	iorwf	___xxtofl@arg^0,f,c
 16750  003E42  5009               	movf	(??___xxtofl+1)^0,w,c
 16751  003E44  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
 16752  003E46  500A               	movf	(??___xxtofl+2)^0,w,c
 16753  003E48  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
 16754  003E4A  500B               	movf	(??___xxtofl+3)^0,w,c
 16755  003E4C  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
 16756  003E4E  500C               	movf	___xxtofl@sign^0,w,c
 16757  003E50  B4D8               	btfsc	status,2,c
 16758  003E52  EF2D  F01F         	goto	u8341
 16759  003E56  EF2F  F01F         	goto	u8340
 16760  003E5A                     u8341:
 16761  003E5A  EF37  F01F         	goto	l6949
 16762  003E5E                     u8340:
 16763  003E5E  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 16764  003E60  EF36  F01F         	goto	u8350
 16765  003E64  EF34  F01F         	goto	u8351
 16766  003E68                     u8351:
 16767  003E68  EF37  F01F         	goto	l6949
 16768  003E6C                     u8350:
 16769  003E6C  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
 16770  003E6E                     l6949:
 16771  003E6E  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
 16772  003E72  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
 16773  003E76  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
 16774  003E7A  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
 16775  003E7E                     l1484:
 16776  003E7E  0012               	return		;funcret
 16777  003E80                     __end_of___xxtofl:
 16778                           	opt callstack 0
 16779                           
 16780 ;; *************** function _SYSTEM_Initialize *****************
 16781 ;; Defined at:
 16782 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;		None
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;		None
 16787 ;; Return value:  Size  Location     Type
 16788 ;;                  1    wreg      void 
 16789 ;; Registers used:
 16790 ;;		wreg, status,2, status,0, cstack
 16791 ;; Tracked objects:
 16792 ;;		On entry : 0/0
 16793 ;;		On exit  : 0/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16800 ;;Total ram usage:        0 bytes
 16801 ;; Hardware stack levels used:    1
 16802 ;; Hardware stack levels required when called:    6
 16803 ;; This function calls:
 16804 ;;		_ADC_Initialize
 16805 ;;		_EXT_INT_Initialize
 16806 ;;		_INTERRUPT_Initialize
 16807 ;;		_OSCILLATOR_Initialize
 16808 ;;		_PIN_MANAGER_Initialize
 16809 ;;		_SPI_Initialize
 16810 ;;		_TMR1_Initialize
 16811 ;; This function is called by:
 16812 ;;		_main
 16813 ;; This function uses a non-reentrant model
 16814 ;;
 16815                           
 16816                           	psect	text57
 16817  005BEA                     __ptext57:
 16818                           	opt callstack 0
 16819  005BEA                     _SYSTEM_Initialize:
 16820                           	opt callstack 24
 16821  005BEA                     
 16822                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 16823  005BEA  EC6D  F02E         	call	_INTERRUPT_Initialize	;wreg free
 16824  005BEE                     
 16825                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 16826  005BEE  EC49  F02E         	call	_SPI_Initialize	;wreg free
 16827  005BF2                     
 16828                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 16829  005BF2  ECF2  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
 16830  005BF6                     
 16831                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 16832  005BF6  EC52  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 16833  005BFA                     
 16834                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 16835  005BFA  ECB7  F02D         	call	_TMR1_Initialize	;wreg free
 16836  005BFE                     
 16837                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 16838  005BFE  EC3F  F02E         	call	_EXT_INT_Initialize	;wreg free
 16839  005C02                     
 16840                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 16841  005C02  EC34  F02E         	call	_ADC_Initialize	;wreg free
 16842  005C06  0012               	return		;funcret
 16843  005C08                     __end_of_SYSTEM_Initialize:
 16844                           	opt callstack 0
 16845                           
 16846 ;; *************** function _TMR1_Initialize *****************
 16847 ;; Defined at:
 16848 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;		None
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;		None
 16853 ;; Return value:  Size  Location     Type
 16854 ;;                  1    wreg      void 
 16855 ;; Registers used:
 16856 ;;		wreg, status,2, status,0
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16866 ;;Total ram usage:        2 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:    4
 16869 ;; This function calls:
 16870 ;;		Nothing
 16871 ;; This function is called by:
 16872 ;;		_SYSTEM_Initialize
 16873 ;; This function uses a non-reentrant model
 16874 ;;
 16875                           
 16876                           	psect	text58
 16877  005B6E                     __ptext58:
 16878                           	opt callstack 0
 16879  005B6E                     _TMR1_Initialize:
 16880                           	opt callstack 25
 16881  005B6E                     
 16882                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 16883  005B6E  0E00               	movlw	0
 16884  005B70  6EAA               	movwf	170,c	;volatile
 16885                           
 16886                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 16887  005B72  0E0B               	movlw	11
 16888  005B74  6ECF               	movwf	207,c	;volatile
 16889                           
 16890                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 16891  005B76  0EDC               	movlw	220
 16892  005B78  6ECE               	movwf	206,c	;volatile
 16893  005B7A                     
 16894                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 16895  005B7A  909E               	bcf	158,0,c	;volatile
 16896  005B7C                     
 16897                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16898  005B7C  50CE               	movf	206,w,c	;volatile
 16899  005B7E  CFCF F004          	movff	4047,??_TMR1_Initialize	;volatile
 16900  005B82  6A05               	clrf	(??_TMR1_Initialize+1)^0,c
 16901  005B84  C004  F005         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 16902  005B88  6A04               	clrf	??_TMR1_Initialize^0,c
 16903  005B8A  1004               	iorwf	??_TMR1_Initialize^0,w,c
 16904  005B8C  0100               	movlb	0	; () banked
 16905  005B8E  6FFA               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 16906  005B90  5005               	movf	(??_TMR1_Initialize+1)^0,w,c
 16907  005B92  6FFB               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 16908  005B94                     
 16909                           ; BSR set to: 0
 16910                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 16911  005B94  0E31               	movlw	49
 16912  005B96  6ECD               	movwf	205,c	;volatile
 16913  005B98                     
 16914                           ; BSR set to: 0
 16915  005B98  0012               	return		;funcret
 16916  005B9A                     __end_of_TMR1_Initialize:
 16917                           	opt callstack 0
 16918                           
 16919 ;; *************** function _SPI_Initialize *****************
 16920 ;; Defined at:
 16921 ;;		line 62 in file "mcc_generated_files/spi.c"
 16922 ;; Parameters:    Size  Location     Type
 16923 ;;		None
 16924 ;; Auto vars:     Size  Location     Type
 16925 ;;		None
 16926 ;; Return value:  Size  Location     Type
 16927 ;;                  1    wreg      void 
 16928 ;; Registers used:
 16929 ;;		wreg, status,2
 16930 ;; Tracked objects:
 16931 ;;		On entry : 0/0
 16932 ;;		On exit  : 0/0
 16933 ;;		Unchanged: 0/0
 16934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16939 ;;Total ram usage:        0 bytes
 16940 ;; Hardware stack levels used:    1
 16941 ;; Hardware stack levels required when called:    4
 16942 ;; This function calls:
 16943 ;;		Nothing
 16944 ;; This function is called by:
 16945 ;;		_SYSTEM_Initialize
 16946 ;; This function uses a non-reentrant model
 16947 ;;
 16948                           
 16949                           	psect	text59
 16950  005C92                     __ptext59:
 16951                           	opt callstack 0
 16952  005C92                     _SPI_Initialize:
 16953                           	opt callstack 25
 16954  005C92                     
 16955                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 16956  005C92  0E40               	movlw	64
 16957  005C94  6EC7               	movwf	199,c	;volatile
 16958                           
 16959                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 16960  005C96  0E00               	movlw	0
 16961  005C98  6EC6               	movwf	198,c	;volatile
 16962                           
 16963                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 16964  005C9A  0E01               	movlw	1
 16965  005C9C  6EC8               	movwf	200,c	;volatile
 16966  005C9E                     
 16967                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 16968  005C9E  9694               	bcf	148,3,c	;volatile
 16969  005CA0                     
 16970                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 16971  005CA0  9AC6               	bcf	198,5,c	;volatile
 16972  005CA2  0012               	return		;funcret
 16973  005CA4                     __end_of_SPI_Initialize:
 16974                           	opt callstack 0
 16975                           
 16976 ;; *************** function _PIN_MANAGER_Initialize *****************
 16977 ;; Defined at:
 16978 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16979 ;; Parameters:    Size  Location     Type
 16980 ;;		None
 16981 ;; Auto vars:     Size  Location     Type
 16982 ;;		None
 16983 ;; Return value:  Size  Location     Type
 16984 ;;                  1    wreg      void 
 16985 ;; Registers used:
 16986 ;;		wreg, status,2, status,0, cstack
 16987 ;; Tracked objects:
 16988 ;;		On entry : 0/0
 16989 ;;		On exit  : 0/0
 16990 ;;		Unchanged: 0/0
 16991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16996 ;;Total ram usage:        0 bytes
 16997 ;; Hardware stack levels used:    1
 16998 ;; Hardware stack levels required when called:    5
 16999 ;; This function calls:
 17000 ;;		_IOCB4_SetInterruptHandler
 17001 ;; This function is called by:
 17002 ;;		_SYSTEM_Initialize
 17003 ;; This function uses a non-reentrant model
 17004 ;;
 17005                           
 17006                           	psect	text60
 17007  0057E4                     __ptext60:
 17008                           	opt callstack 0
 17009  0057E4                     _PIN_MANAGER_Initialize:
 17010                           	opt callstack 24
 17011  0057E4                     
 17012                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 17013  0057E4  0E00               	movlw	0
 17014  0057E6  6E8D               	movwf	141,c	;volatile
 17015                           
 17016                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17017  0057E8  0E00               	movlw	0
 17018  0057EA  6E8C               	movwf	140,c	;volatile
 17019                           
 17020                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17021  0057EC  0E00               	movlw	0
 17022  0057EE  6E89               	movwf	137,c	;volatile
 17023                           
 17024                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 17025  0057F0  0E00               	movlw	0
 17026  0057F2  6E8A               	movwf	138,c	;volatile
 17027                           
 17028                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 17029  0057F4  0E00               	movlw	0
 17030  0057F6  6E8B               	movwf	139,c	;volatile
 17031                           
 17032                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 17033  0057F8  0E04               	movlw	4
 17034  0057FA  6E96               	movwf	150,c	;volatile
 17035                           
 17036                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 17037  0057FC  0E0F               	movlw	15
 17038  0057FE  6E92               	movwf	146,c	;volatile
 17039  005800                     
 17040                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 17041  005800  6893               	setf	147,c	;volatile
 17042                           
 17043                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 17044  005802  0ED7               	movlw	215
 17045  005804  6E94               	movwf	148,c	;volatile
 17046  005806                     
 17047                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 17048  005806  6895               	setf	149,c	;volatile
 17049                           
 17050                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
 17051  005808  0E87               	movlw	135
 17052  00580A  010F               	movlb	15	; () banked
 17053  00580C  6F5D               	movwf	93,b	;volatile
 17054                           
 17055                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
 17056  00580E  0E79               	movlw	121
 17057  005810  6F5C               	movwf	92,b	;volatile
 17058                           
 17059                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17060  005812  0E00               	movlw	0
 17061  005814  6F5B               	movwf	91,b	;volatile
 17062  005816                     
 17063                           ; BSR set to: 15
 17064                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 17065  005816  8EF1               	bsf	241,7,c	;volatile
 17066  005818                     
 17067                           ; BSR set to: 15
 17068                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 17069  005818  895A               	bsf	90,4,b	;volatile
 17070  00581A                     
 17071                           ; BSR set to: 15
 17072                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 17073  00581A  0EE0               	movlw	low _IOCB4_DefaultInterruptHandler
 17074  00581C  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 17075  00581E  0E5C               	movlw	high _IOCB4_DefaultInterruptHandler
 17076  005820  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 17077  005822  EC5B  F02E         	call	_IOCB4_SetInterruptHandler	;wreg free
 17078  005826                     
 17079                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 17080  005826  86F2               	bsf	242,3,c	;volatile
 17081  005828  0012               	return		;funcret
 17082  00582A                     __end_of_PIN_MANAGER_Initialize:
 17083                           	opt callstack 0
 17084                           
 17085 ;; *************** function _IOCB4_SetInterruptHandler *****************
 17086 ;; Defined at:
 17087 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 17088 ;; Parameters:    Size  Location     Type
 17089 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
 17090 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 17091 ;; Auto vars:     Size  Location     Type
 17092 ;;		None
 17093 ;; Return value:  Size  Location     Type
 17094 ;;                  1    wreg      void 
 17095 ;; Registers used:
 17096 ;;		wreg, status,2, status,0
 17097 ;; Tracked objects:
 17098 ;;		On entry : 0/0
 17099 ;;		On exit  : 0/0
 17100 ;;		Unchanged: 0/0
 17101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17106 ;;Total ram usage:        2 bytes
 17107 ;; Hardware stack levels used:    1
 17108 ;; Hardware stack levels required when called:    4
 17109 ;; This function calls:
 17110 ;;		Nothing
 17111 ;; This function is called by:
 17112 ;;		_PIN_MANAGER_Initialize
 17113 ;;		_main
 17114 ;; This function uses a non-reentrant model
 17115 ;;
 17116                           
 17117                           	psect	text61
 17118  005CB6                     __ptext61:
 17119                           	opt callstack 0
 17120  005CB6                     _IOCB4_SetInterruptHandler:
 17121                           	opt callstack 24
 17122  005CB6                     
 17123                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 17124  005CB6  C004  F0FC         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 17125  005CBA  C005  F0FD         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 17126  005CBE  0012               	return		;funcret
 17127  005CC0                     __end_of_IOCB4_SetInterruptHandler:
 17128                           	opt callstack 0
 17129                           
 17130 ;; *************** function _OSCILLATOR_Initialize *****************
 17131 ;; Defined at:
 17132 ;;		line 62 in file "mcc_generated_files/mcc.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;		None
 17135 ;; Auto vars:     Size  Location     Type
 17136 ;;		None
 17137 ;; Return value:  Size  Location     Type
 17138 ;;                  1    wreg      void 
 17139 ;; Registers used:
 17140 ;;		wreg, status,2
 17141 ;; Tracked objects:
 17142 ;;		On entry : 0/0
 17143 ;;		On exit  : 0/0
 17144 ;;		Unchanged: 0/0
 17145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17150 ;;Total ram usage:        0 bytes
 17151 ;; Hardware stack levels used:    1
 17152 ;; Hardware stack levels required when called:    4
 17153 ;; This function calls:
 17154 ;;		Nothing
 17155 ;; This function is called by:
 17156 ;;		_SYSTEM_Initialize
 17157 ;; This function uses a non-reentrant model
 17158 ;;
 17159                           
 17160                           	psect	text62
 17161  005CA4                     __ptext62:
 17162                           	opt callstack 0
 17163  005CA4                     _OSCILLATOR_Initialize:
 17164                           	opt callstack 25
 17165  005CA4                     
 17166                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x62;
 17167  005CA4  0E62               	movlw	98
 17168  005CA6  6ED3               	movwf	211,c	;volatile
 17169                           
 17170                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
 17171  005CA8  0E00               	movlw	0
 17172  005CAA  6ED2               	movwf	210,c	;volatile
 17173                           
 17174                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 17175  005CAC  0E00               	movlw	0
 17176  005CAE  6E9B               	movwf	155,c	;volatile
 17177                           
 17178                           ;mcc_generated_files/mcc.c: 71:     REFOCON = 0x00;
 17179  005CB0  0E00               	movlw	0
 17180  005CB2  6E9A               	movwf	154,c	;volatile
 17181  005CB4  0012               	return		;funcret
 17182  005CB6                     __end_of_OSCILLATOR_Initialize:
 17183                           	opt callstack 0
 17184                           
 17185 ;; *************** function _INTERRUPT_Initialize *****************
 17186 ;; Defined at:
 17187 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17188 ;; Parameters:    Size  Location     Type
 17189 ;;		None
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;		None
 17192 ;; Return value:  Size  Location     Type
 17193 ;;                  1    wreg      void 
 17194 ;; Registers used:
 17195 ;;		None
 17196 ;; Tracked objects:
 17197 ;;		On entry : 0/0
 17198 ;;		On exit  : 0/0
 17199 ;;		Unchanged: 0/0
 17200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17205 ;;Total ram usage:        0 bytes
 17206 ;; Hardware stack levels used:    1
 17207 ;; Hardware stack levels required when called:    4
 17208 ;; This function calls:
 17209 ;;		Nothing
 17210 ;; This function is called by:
 17211 ;;		_SYSTEM_Initialize
 17212 ;; This function uses a non-reentrant model
 17213 ;;
 17214                           
 17215                           	psect	text63
 17216  005CDA                     __ptext63:
 17217                           	opt callstack 0
 17218  005CDA                     _INTERRUPT_Initialize:
 17219                           	opt callstack 25
 17220  005CDA                     
 17221                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 17222  005CDA  9ED0               	bcf	208,7,c	;volatile
 17223  005CDC  0012               	return		;funcret
 17224  005CDE                     __end_of_INTERRUPT_Initialize:
 17225                           	opt callstack 0
 17226                           
 17227 ;; *************** function _EXT_INT_Initialize *****************
 17228 ;; Defined at:
 17229 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 17230 ;; Parameters:    Size  Location     Type
 17231 ;;		None
 17232 ;; Auto vars:     Size  Location     Type
 17233 ;;		None
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  1    wreg      void 
 17236 ;; Registers used:
 17237 ;;		wreg, status,2, status,0, cstack
 17238 ;; Tracked objects:
 17239 ;;		On entry : 0/0
 17240 ;;		On exit  : 0/0
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17247 ;;Total ram usage:        0 bytes
 17248 ;; Hardware stack levels used:    1
 17249 ;; Hardware stack levels required when called:    5
 17250 ;; This function calls:
 17251 ;;		_INT0_SetInterruptHandler
 17252 ;; This function is called by:
 17253 ;;		_SYSTEM_Initialize
 17254 ;; This function uses a non-reentrant model
 17255 ;;
 17256                           
 17257                           	psect	text64
 17258  005C7E                     __ptext64:
 17259                           	opt callstack 0
 17260  005C7E                     _EXT_INT_Initialize:
 17261                           	opt callstack 24
 17262  005C7E                     
 17263                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
 17264  005C7E  92F2               	bcf	242,1,c	;volatile
 17265                           
 17266                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
 17267  005C80  9CF1               	bcf	241,6,c	;volatile
 17268  005C82                     
 17269                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
 17270  005C82  0EE2               	movlw	low _INT0_DefaultInterruptHandler
 17271  005C84  6E04               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
 17272  005C86  0E5C               	movlw	high _INT0_DefaultInterruptHandler
 17273  005C88  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
 17274  005C8A  EC60  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 17275  005C8E                     
 17276                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
 17277  005C8E  88F2               	bsf	242,4,c	;volatile
 17278  005C90  0012               	return		;funcret
 17279  005C92                     __end_of_EXT_INT_Initialize:
 17280                           	opt callstack 0
 17281                           
 17282 ;; *************** function _INT0_SetInterruptHandler *****************
 17283 ;; Defined at:
 17284 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 17285 ;; Parameters:    Size  Location     Type
 17286 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
 17287 ;;		 -> INT0_DefaultInterruptHandler(1), S3_toggle(1), 
 17288 ;; Auto vars:     Size  Location     Type
 17289 ;;		None
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  1    wreg      void 
 17292 ;; Registers used:
 17293 ;;		wreg, status,2, status,0
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17303 ;;Total ram usage:        2 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; Hardware stack levels required when called:    4
 17306 ;; This function calls:
 17307 ;;		Nothing
 17308 ;; This function is called by:
 17309 ;;		_main
 17310 ;;		_EXT_INT_Initialize
 17311 ;; This function uses a non-reentrant model
 17312 ;;
 17313                           
 17314                           	psect	text65
 17315  005CC0                     __ptext65:
 17316                           	opt callstack 0
 17317  005CC0                     _INT0_SetInterruptHandler:
 17318                           	opt callstack 24
 17319  005CC0                     
 17320                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
 17321  005CC0  C004  F0F8         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 17322  005CC4  C005  F0F9         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 17323  005CC8  0012               	return		;funcret
 17324  005CCA                     __end_of_INT0_SetInterruptHandler:
 17325                           	opt callstack 0
 17326                           
 17327 ;; *************** function _ADC_Initialize *****************
 17328 ;; Defined at:
 17329 ;;		line 62 in file "mcc_generated_files/adc.c"
 17330 ;; Parameters:    Size  Location     Type
 17331 ;;		None
 17332 ;; Auto vars:     Size  Location     Type
 17333 ;;		None
 17334 ;; Return value:  Size  Location     Type
 17335 ;;                  1    wreg      void 
 17336 ;; Registers used:
 17337 ;;		wreg, status,2
 17338 ;; Tracked objects:
 17339 ;;		On entry : 0/0
 17340 ;;		On exit  : 0/0
 17341 ;;		Unchanged: 0/0
 17342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17347 ;;Total ram usage:        0 bytes
 17348 ;; Hardware stack levels used:    1
 17349 ;; Hardware stack levels required when called:    4
 17350 ;; This function calls:
 17351 ;;		Nothing
 17352 ;; This function is called by:
 17353 ;;		_SYSTEM_Initialize
 17354 ;; This function uses a non-reentrant model
 17355 ;;
 17356                           
 17357                           	psect	text66
 17358  005C68                     __ptext66:
 17359                           	opt callstack 0
 17360  005C68                     _ADC_Initialize:
 17361                           	opt callstack 25
 17362  005C68                     
 17363                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 17364  005C68  0E01               	movlw	1
 17365  005C6A  6EC2               	movwf	194,c	;volatile
 17366                           
 17367                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 17368  005C6C  0E80               	movlw	128
 17369  005C6E  6EC1               	movwf	193,c	;volatile
 17370                           
 17371                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 17372  005C70  0EAD               	movlw	173
 17373  005C72  6EC0               	movwf	192,c	;volatile
 17374                           
 17375                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 17376  005C74  0E00               	movlw	0
 17377  005C76  6EC4               	movwf	196,c	;volatile
 17378                           
 17379                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 17380  005C78  0E00               	movlw	0
 17381  005C7A  6EC3               	movwf	195,c	;volatile
 17382  005C7C  0012               	return		;funcret
 17383  005C7E                     __end_of_ADC_Initialize:
 17384                           	opt callstack 0
 17385                           
 17386 ;; *************** function _SPI_Open *****************
 17387 ;; Defined at:
 17388 ;;		line 72 in file "mcc_generated_files/spi.c"
 17389 ;; Parameters:    Size  Location     Type
 17390 ;;  spiUniqueCon    1    wreg     enum E353
 17391 ;; Auto vars:     Size  Location     Type
 17392 ;;  spiUniqueCon    1    4[COMRAM] enum E353
 17393 ;; Return value:  Size  Location     Type
 17394 ;;                  1    wreg      _Bool 
 17395 ;; Registers used:
 17396 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17397 ;; Tracked objects:
 17398 ;;		On entry : 0/0
 17399 ;;		On exit  : 0/0
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17406 ;;Total ram usage:        2 bytes
 17407 ;; Hardware stack levels used:    1
 17408 ;; Hardware stack levels required when called:    4
 17409 ;; This function calls:
 17410 ;;		Nothing
 17411 ;; This function is called by:
 17412 ;;		_main
 17413 ;; This function uses a non-reentrant model
 17414 ;;
 17415                           
 17416                           	psect	text67
 17417  0052BE                     __ptext67:
 17418                           	opt callstack 0
 17419  0052BE                     _SPI_Open:
 17420                           	opt callstack 26
 17421                           
 17422                           ;incstack = 0
 17423                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 17424  0052BE  6E05               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 17425  0052C0                     
 17426                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 17427  0052C0  BAC6               	btfsc	198,5,c	;volatile
 17428  0052C2  EF65  F029         	goto	u8111
 17429  0052C6  EF67  F029         	goto	u8110
 17430  0052CA                     u8111:
 17431  0052CA  EFB6  F029         	goto	l130
 17432  0052CE                     u8110:
 17433  0052CE                     
 17434                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 17435  0052CE  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17436  0052D0  0D04               	mullw	4
 17437  0052D2  0E01               	movlw	1
 17438  0052D4  26F3               	addwf	243,f,c
 17439  0052D6  0E00               	movlw	0
 17440  0052D8  22F4               	addwfc	244,f,c
 17441  0052DA  0E95               	movlw	low _spi_configuration
 17442  0052DC  24F3               	addwf	243,w,c
 17443  0052DE  6EF6               	movwf	tblptrl,c
 17444  0052E0  0EFF               	movlw	high _spi_configuration
 17445  0052E2  20F4               	addwfc	244,w,c
 17446  0052E4  6EF7               	movwf	tblptrh,c
 17447  0052E6                     	if	1	;There are 3 active tblptr bytes
 17448  0052E6  6AF8               	clrf	tblptru,c
 17449  0052E8  0E00               	movlw	low (__mediumconst shr (0+16))
 17450  0052EA  22F8               	addwfc	tblptru,f,c
 17451  0052EC                     	endif
 17452  0052EC  0008               	tblrd		*
 17453  0052EE  CFF5 FFC7          	movff	tablat,4039	;volatile
 17454                           
 17455                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 17456  0052F2  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17457  0052F4  0D04               	mullw	4
 17458  0052F6  0E95               	movlw	low _spi_configuration
 17459  0052F8  24F3               	addwf	243,w,c
 17460  0052FA  6EF6               	movwf	tblptrl,c
 17461  0052FC  0EFF               	movlw	high _spi_configuration
 17462  0052FE  20F4               	addwfc	244,w,c
 17463  005300  6EF7               	movwf	tblptrh,c
 17464  005302                     	if	1	;There are 3 active tblptr bytes
 17465  005302  6AF8               	clrf	tblptru,c
 17466  005304  0E00               	movlw	low (__mediumconst shr (0+16))
 17467  005306  22F8               	addwfc	tblptru,f,c
 17468  005308                     	endif
 17469  005308  0008               	tblrd		*
 17470  00530A  CFF5 FFC6          	movff	tablat,4038	;volatile
 17471  00530E                     
 17472                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 17473  00530E  0E00               	movlw	0
 17474  005310  6EC5               	movwf	197,c	;volatile
 17475  005312                     
 17476                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 17477  005312  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17478  005314  0D04               	mullw	4
 17479  005316  0E02               	movlw	2
 17480  005318  26F3               	addwf	243,f,c
 17481  00531A  0E00               	movlw	0
 17482  00531C  22F4               	addwfc	244,f,c
 17483  00531E  0E95               	movlw	low _spi_configuration
 17484  005320  24F3               	addwf	243,w,c
 17485  005322  6EF6               	movwf	tblptrl,c
 17486  005324  0EFF               	movlw	high _spi_configuration
 17487  005326  20F4               	addwfc	244,w,c
 17488  005328  6EF7               	movwf	tblptrh,c
 17489  00532A                     	if	1	;There are 3 active tblptr bytes
 17490  00532A  6AF8               	clrf	tblptru,c
 17491  00532C  0E00               	movlw	low (__mediumconst shr (0+16))
 17492  00532E  22F8               	addwfc	tblptru,f,c
 17493  005330                     	endif
 17494  005330  0008               	tblrd		*
 17495  005332  CFF5 FFC8          	movff	tablat,4040	;volatile
 17496  005336                     
 17497                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 17498  005336  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17499  005338  0D04               	mullw	4
 17500  00533A  0E03               	movlw	3
 17501  00533C  26F3               	addwf	243,f,c
 17502  00533E  0E00               	movlw	0
 17503  005340  22F4               	addwfc	244,f,c
 17504  005342  0E95               	movlw	low _spi_configuration
 17505  005344  24F3               	addwf	243,w,c
 17506  005346  6EF6               	movwf	tblptrl,c
 17507  005348  0EFF               	movlw	high _spi_configuration
 17508  00534A  20F4               	addwfc	244,w,c
 17509  00534C  6EF7               	movwf	tblptrh,c
 17510  00534E                     	if	1	;There are 3 active tblptr bytes
 17511  00534E  6AF8               	clrf	tblptru,c
 17512  005350  0E00               	movlw	low (__mediumconst shr (0+16))
 17513  005352  22F8               	addwfc	tblptru,f,c
 17514  005354                     	endif
 17515  005354  0008               	tblrd		*
 17516  005356  CFF5 F004          	movff	tablat,??_SPI_Open
 17517  00535A  4604               	rlncf	??_SPI_Open^0,f,c
 17518  00535C  4604               	rlncf	??_SPI_Open^0,f,c
 17519  00535E  4604               	rlncf	??_SPI_Open^0,f,c
 17520  005360  5094               	movf	148,w,c	;volatile
 17521  005362  1804               	xorwf	??_SPI_Open^0,w,c
 17522  005364  0BF7               	andlw	-9
 17523  005366  1804               	xorwf	??_SPI_Open^0,w,c
 17524  005368  6E94               	movwf	148,c	;volatile
 17525  00536A                     
 17526                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 17527  00536A  8AC6               	bsf	198,5,c	;volatile
 17528  00536C                     l130:
 17529  00536C  0012               	return		;funcret
 17530  00536E                     __end_of_SPI_Open:
 17531                           	opt callstack 0
 17532                           
 17533 ;; *************** function _ADC_GetConversion *****************
 17534 ;; Defined at:
 17535 ;;		line 108 in file "mcc_generated_files/adc.c"
 17536 ;; Parameters:    Size  Location     Type
 17537 ;;  channel         1    wreg     enum E12385
 17538 ;; Auto vars:     Size  Location     Type
 17539 ;;  channel         1    7[COMRAM] enum E12385
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  2    3[COMRAM] unsigned short 
 17542 ;; Registers used:
 17543 ;;		wreg, status,2, status,0
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17553 ;;Total ram usage:        5 bytes
 17554 ;; Hardware stack levels used:    1
 17555 ;; Hardware stack levels required when called:    4
 17556 ;; This function calls:
 17557 ;;		Nothing
 17558 ;; This function is called by:
 17559 ;;		_main
 17560 ;; This function uses a non-reentrant model
 17561 ;;
 17562                           
 17563                           	psect	text68
 17564  00592C                     __ptext68:
 17565                           	opt callstack 0
 17566  00592C                     _ADC_GetConversion:
 17567                           	opt callstack 26
 17568                           
 17569                           ;incstack = 0
 17570                           ;ADC_GetConversion@channel stored from wreg
 17571  00592C  6E08               	movwf	ADC_GetConversion@channel^0,c
 17572  00592E                     
 17573                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 17574  00592E  C008  F006         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 17575  005932  4606               	rlncf	??_ADC_GetConversion^0,f,c
 17576  005934  4606               	rlncf	??_ADC_GetConversion^0,f,c
 17577  005936  50C2               	movf	194,w,c	;volatile
 17578  005938  1806               	xorwf	??_ADC_GetConversion^0,w,c
 17579  00593A  0B83               	andlw	-125
 17580  00593C  1806               	xorwf	??_ADC_GetConversion^0,w,c
 17581  00593E  6EC2               	movwf	194,c	;volatile
 17582  005940                     
 17583                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 17584  005940  80C2               	bsf	194,0,c	;volatile
 17585  005942                     
 17586                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 17587  005942  82C2               	bsf	194,1,c	;volatile
 17588  005944                     l197:
 17589                           
 17590                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 17591  005944  B2C2               	btfsc	194,1,c	;volatile
 17592  005946  EFA7  F02C         	goto	u8121
 17593  00594A  EFA9  F02C         	goto	u8120
 17594  00594E                     u8121:
 17595  00594E  EFA2  F02C         	goto	l197
 17596  005952                     u8120:
 17597  005952                     
 17598                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17599  005952  50C4               	movf	196,w,c	;volatile
 17600  005954  6E07               	movwf	(??_ADC_GetConversion+1)^0,c
 17601  005956  6A06               	clrf	??_ADC_GetConversion^0,c
 17602  005958  50C3               	movf	195,w,c	;volatile
 17603  00595A  2406               	addwf	??_ADC_GetConversion^0,w,c
 17604  00595C  6E04               	movwf	?_ADC_GetConversion^0,c
 17605  00595E  0E00               	movlw	0
 17606  005960  2007               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 17607  005962  6E05               	movwf	(?_ADC_GetConversion+1)^0,c
 17608  005964  0012               	return		;funcret
 17609  005966                     __end_of_ADC_GetConversion:
 17610                           	opt callstack 0
 17611                           
 17612 ;; *************** function _INTERRUPT_InterruptManager *****************
 17613 ;; Defined at:
 17614 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17615 ;; Parameters:    Size  Location     Type
 17616 ;;		None
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;		None
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  1    wreg      void 
 17621 ;; Registers used:
 17622 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17632 ;;Total ram usage:        2 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:    3
 17635 ;; This function calls:
 17636 ;;		_INT0_ISR
 17637 ;;		_PIN_MANAGER_IOC
 17638 ;; This function is called by:
 17639 ;;		Interrupt level 2
 17640 ;; This function uses a non-reentrant model
 17641 ;;
 17642                           
 17643                           	psect	intcode
 17644  000008                     __pintcode:
 17645                           	opt callstack 0
 17646  000008                     _INTERRUPT_InterruptManager:
 17647                           	opt callstack 18
 17648                           
 17649                           ;incstack = 0
 17650  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17651  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
 17652  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17653  000012                     
 17654                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
 17655  000012  A8F2               	btfss	242,4,c	;volatile
 17656  000014  EF0E  F000         	goto	i2u836_41
 17657  000018  EF10  F000         	goto	i2u836_40
 17658  00001C                     i2u836_41:
 17659  00001C  EF1B  F000         	goto	i2l44
 17660  000020                     i2u836_40:
 17661  000020  A2F2               	btfss	242,1,c	;volatile
 17662  000022  EF15  F000         	goto	i2u837_41
 17663  000026  EF17  F000         	goto	i2u837_40
 17664  00002A                     i2u837_41:
 17665  00002A  EF1B  F000         	goto	i2l44
 17666  00002E                     i2u837_40:
 17667  00002E                     
 17668                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
 17669  00002E  EC65  F02E         	call	_INT0_ISR	;wreg free
 17670                           
 17671                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 17672  000032  EF2B  F000         	goto	i2l48
 17673  000036                     i2l44:
 17674  000036  A6F2               	btfss	242,3,c	;volatile
 17675  000038  EF20  F000         	goto	i2u838_41
 17676  00003C  EF22  F000         	goto	i2u838_40
 17677  000040                     i2u838_41:
 17678  000040  EF2B  F000         	goto	i2l48
 17679  000044                     i2u838_40:
 17680  000044  A0F2               	btfss	242,0,c	;volatile
 17681  000046  EF27  F000         	goto	i2u839_41
 17682  00004A  EF29  F000         	goto	i2u839_40
 17683  00004E                     i2u839_41:
 17684  00004E  EF2B  F000         	goto	i2l48
 17685  000052                     i2u839_40:
 17686  000052                     
 17687                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 17688  000052  EC1D  F02E         	call	_PIN_MANAGER_IOC	;wreg free
 17689  000056                     i2l48:
 17690  000056  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17691  00005A  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17692  00005E  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17693  000060  0011               	retfie		f
 17694  000062                     __end_of_INTERRUPT_InterruptManager:
 17695                           	opt callstack 0
 17696                           
 17697 ;; *************** function _PIN_MANAGER_IOC *****************
 17698 ;; Defined at:
 17699 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;		None
 17702 ;; Auto vars:     Size  Location     Type
 17703 ;;		None
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  1    wreg      void 
 17706 ;; Registers used:
 17707 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17708 ;; Tracked objects:
 17709 ;;		On entry : 0/0
 17710 ;;		On exit  : 0/0
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17717 ;;Total ram usage:        0 bytes
 17718 ;; Hardware stack levels used:    1
 17719 ;; Hardware stack levels required when called:    2
 17720 ;; This function calls:
 17721 ;;		_IOCB4_ISR
 17722 ;; This function is called by:
 17723 ;;		_INTERRUPT_InterruptManager
 17724 ;; This function uses a non-reentrant model
 17725 ;;
 17726                           
 17727                           	psect	text70
 17728  005C3A                     __ptext70:
 17729                           	opt callstack 0
 17730  005C3A                     _PIN_MANAGER_IOC:
 17731                           	opt callstack 18
 17732  005C3A                     
 17733                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 17734  005C3A  010F               	movlb	15	; () banked
 17735  005C3C  A95A               	btfss	90,4,b	;volatile
 17736  005C3E  EF23  F02E         	goto	i2u810_41
 17737  005C42  EF25  F02E         	goto	i2u810_40
 17738  005C46                     i2u810_41:
 17739  005C46  EF27  F02E         	goto	i2l6625
 17740  005C4A                     i2u810_40:
 17741  005C4A                     
 17742                           ; BSR set to: 15
 17743                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 17744  005C4A  EC89  F02D         	call	_IOCB4_ISR	;wreg free
 17745  005C4E                     i2l6625:
 17746                           
 17747                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 17748  005C4E  90F2               	bcf	242,0,c	;volatile
 17749  005C50  0012               	return		;funcret
 17750  005C52                     __end_of_PIN_MANAGER_IOC:
 17751                           	opt callstack 0
 17752                           
 17753 ;; *************** function _IOCB4_ISR *****************
 17754 ;; Defined at:
 17755 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 17756 ;; Parameters:    Size  Location     Type
 17757 ;;		None
 17758 ;; Auto vars:     Size  Location     Type
 17759 ;;		None
 17760 ;; Return value:  Size  Location     Type
 17761 ;;                  1    wreg      void 
 17762 ;; Registers used:
 17763 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17764 ;; Tracked objects:
 17765 ;;		On entry : 0/0
 17766 ;;		On exit  : 0/0
 17767 ;;		Unchanged: 0/0
 17768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17773 ;;Total ram usage:        0 bytes
 17774 ;; Hardware stack levels used:    1
 17775 ;; Hardware stack levels required when called:    1
 17776 ;; This function calls:
 17777 ;;		Absolute function
 17778 ;;		_IOCB4_DefaultInterruptHandler
 17779 ;;		_IOCB4_InterruptCall
 17780 ;; This function is called by:
 17781 ;;		_PIN_MANAGER_IOC
 17782 ;; This function uses a non-reentrant model
 17783 ;;
 17784                           
 17785                           	psect	text71
 17786  005B12                     __ptext71:
 17787                           	opt callstack 0
 17788  005B12                     _IOCB4_ISR:
 17789                           	opt callstack 18
 17790  005B12                     
 17791                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 17792  005B12  0100               	movlb	0	; () banked
 17793  005B14  51FC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 17794  005B16  11FD               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 17795  005B18  B4D8               	btfsc	status,2,c
 17796  005B1A  EF91  F02D         	goto	i2u791_41
 17797  005B1E  EF93  F02D         	goto	i2u791_40
 17798  005B22                     i2u791_41:
 17799  005B22  EF9F  F02D         	goto	i2l99
 17800  005B26                     i2u791_40:
 17801  005B26                     
 17802                           ; BSR set to: 0
 17803                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 17804  005B26  D802               	call	i2u792_48
 17805  005B28  EF9F  F02D         	goto	i2u792_49
 17806  005B2C                     i2u792_48:
 17807  005B2C  0005               	push	
 17808  005B2E  6EFA               	movwf	pclath,c
 17809  005B30  51FC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 17810  005B32  6EFD               	movwf	tosl,c
 17811  005B34  51FD               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 17812  005B36  6EFE               	movwf	tosh,c
 17813  005B38  6AFF               	clrf	tosu,c
 17814  005B3A  50FA               	movf	pclath,w,c
 17815  005B3C  0012               	return		;indir
 17816  005B3E                     i2u792_49:
 17817  005B3E                     i2l99:
 17818  005B3E  0012               	return		;funcret
 17819  005B40                     __end_of_IOCB4_ISR:
 17820                           	opt callstack 0
 17821                           
 17822 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 17823 ;; Defined at:
 17824 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;		None
 17827 ;; Auto vars:     Size  Location     Type
 17828 ;;		None
 17829 ;; Return value:  Size  Location     Type
 17830 ;;                  1    wreg      void 
 17831 ;; Registers used:
 17832 ;;		None
 17833 ;; Tracked objects:
 17834 ;;		On entry : 0/0
 17835 ;;		On exit  : 0/0
 17836 ;;		Unchanged: 0/0
 17837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17842 ;;Total ram usage:        0 bytes
 17843 ;; Hardware stack levels used:    1
 17844 ;; This function calls:
 17845 ;;		Nothing
 17846 ;; This function is called by:
 17847 ;;		_PIN_MANAGER_Initialize
 17848 ;;		_IOCB4_ISR
 17849 ;; This function uses a non-reentrant model
 17850 ;;
 17851                           
 17852                           	psect	text72
 17853  005CE0                     __ptext72:
 17854                           	opt callstack 0
 17855  005CE0                     _IOCB4_DefaultInterruptHandler:
 17856                           	opt callstack 18
 17857  005CE0  0012               	return		;funcret
 17858  005CE2                     __end_of_IOCB4_DefaultInterruptHandler:
 17859                           	opt callstack 0
 17860                           
 17861 ;; *************** function _IOCB4_InterruptCall *****************
 17862 ;; Defined at:
 17863 ;;		line 19 in file "main.c"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;		None
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      void 
 17870 ;; Registers used:
 17871 ;;		wreg, status,2, status,0
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17881 ;;Total ram usage:        1 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; This function calls:
 17884 ;;		Nothing
 17885 ;; This function is called by:
 17886 ;;		_main
 17887 ;;		_IOCB4_ISR
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           	psect	text73
 17892  005A7C                     __ptext73:
 17893                           	opt callstack 0
 17894  005A7C                     _IOCB4_InterruptCall:
 17895                           	opt callstack 18
 17896  005A7C                     
 17897                           ;main.c: 21:     if(!PORTBbits.RB4){
 17898  005A7C  B881               	btfsc	129,4,c	;volatile
 17899  005A7E  EF43  F02D         	goto	i2u785_41
 17900  005A82  EF45  F02D         	goto	i2u785_40
 17901  005A86                     i2u785_41:
 17902  005A86  EF58  F02D         	goto	i2l286
 17903  005A8A                     i2u785_40:
 17904  005A8A  BC89               	btfsc	137,6,c	;volatile
 17905  005A8C  EF4A  F02D         	goto	i2u786_41
 17906  005A90  EF4D  F02D         	goto	i2u786_40
 17907  005A94                     i2u786_41:
 17908  005A94  0E01               	movlw	1
 17909  005A96  EF4E  F02D         	goto	i2u786_46
 17910  005A9A                     i2u786_40:
 17911  005A9A  0E00               	movlw	0
 17912  005A9C                     i2u786_46:
 17913  005A9C  0AFF               	xorlw	255
 17914  005A9E  6E01               	movwf	??_IOCB4_InterruptCall^0,c
 17915  005AA0  3A01               	swapf	??_IOCB4_InterruptCall^0,f,c
 17916  005AA2  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 17917  005AA4  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 17918  005AA6  5089               	movf	137,w,c	;volatile
 17919  005AA8  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 17920  005AAA  0BBF               	andlw	-65
 17921  005AAC  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 17922  005AAE  6E89               	movwf	137,c	;volatile
 17923  005AB0                     i2l286:
 17924  005AB0  0012               	return		;funcret
 17925  005AB2                     __end_of_IOCB4_InterruptCall:
 17926                           	opt callstack 0
 17927                           
 17928 ;; *************** function _INT0_ISR *****************
 17929 ;; Defined at:
 17930 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 17931 ;; Parameters:    Size  Location     Type
 17932 ;;		None
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;		None
 17935 ;; Return value:  Size  Location     Type
 17936 ;;                  1    wreg      void 
 17937 ;; Registers used:
 17938 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17939 ;; Tracked objects:
 17940 ;;		On entry : 0/0
 17941 ;;		On exit  : 0/0
 17942 ;;		Unchanged: 0/0
 17943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17948 ;;Total ram usage:        0 bytes
 17949 ;; Hardware stack levels used:    1
 17950 ;; Hardware stack levels required when called:    2
 17951 ;; This function calls:
 17952 ;;		_INT0_CallBack
 17953 ;; This function is called by:
 17954 ;;		_INTERRUPT_InterruptManager
 17955 ;; This function uses a non-reentrant model
 17956 ;;
 17957                           
 17958                           	psect	text74
 17959  005CCA                     __ptext74:
 17960                           	opt callstack 0
 17961  005CCA                     _INT0_ISR:
 17962                           	opt callstack 18
 17963  005CCA                     
 17964                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
 17965  005CCA  92F2               	bcf	242,1,c	;volatile
 17966  005CCC                     
 17967                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
 17968  005CCC  ECA0  F02D         	call	_INT0_CallBack	;wreg free
 17969  005CD0  0012               	return		;funcret
 17970  005CD2                     __end_of_INT0_ISR:
 17971                           	opt callstack 0
 17972                           
 17973 ;; *************** function _INT0_CallBack *****************
 17974 ;; Defined at:
 17975 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 17976 ;; Parameters:    Size  Location     Type
 17977 ;;		None
 17978 ;; Auto vars:     Size  Location     Type
 17979 ;;		None
 17980 ;; Return value:  Size  Location     Type
 17981 ;;                  1    wreg      void 
 17982 ;; Registers used:
 17983 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17984 ;; Tracked objects:
 17985 ;;		On entry : 0/0
 17986 ;;		On exit  : 0/0
 17987 ;;		Unchanged: 0/0
 17988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17993 ;;Total ram usage:        0 bytes
 17994 ;; Hardware stack levels used:    1
 17995 ;; Hardware stack levels required when called:    1
 17996 ;; This function calls:
 17997 ;;		Absolute function
 17998 ;;		_INT0_DefaultInterruptHandler
 17999 ;;		_S3_toggle
 18000 ;; This function is called by:
 18001 ;;		_INT0_ISR
 18002 ;; This function uses a non-reentrant model
 18003 ;;
 18004                           
 18005                           	psect	text75
 18006  005B40                     __ptext75:
 18007                           	opt callstack 0
 18008  005B40                     _INT0_CallBack:
 18009                           	opt callstack 18
 18010  005B40                     
 18011                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
 18012  005B40  0100               	movlb	0	; () banked
 18013  005B42  51F8               	movf	_INT0_InterruptHandler& (0+255),w,b
 18014  005B44  11F9               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 18015  005B46  B4D8               	btfsc	status,2,c
 18016  005B48  EFA8  F02D         	goto	i2u803_41
 18017  005B4C  EFAA  F02D         	goto	i2u803_40
 18018  005B50                     i2u803_41:
 18019  005B50  EFB6  F02D         	goto	i2l462
 18020  005B54                     i2u803_40:
 18021  005B54                     
 18022                           ; BSR set to: 0
 18023                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
 18024  005B54  D802               	call	i2u804_48
 18025  005B56  EFB6  F02D         	goto	i2u804_49
 18026  005B5A                     i2u804_48:
 18027  005B5A  0005               	push	
 18028  005B5C  6EFA               	movwf	pclath,c
 18029  005B5E  51F8               	movf	_INT0_InterruptHandler& (0+255),w,b
 18030  005B60  6EFD               	movwf	tosl,c
 18031  005B62  51F9               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 18032  005B64  6EFE               	movwf	tosh,c
 18033  005B66  6AFF               	clrf	tosu,c
 18034  005B68  50FA               	movf	pclath,w,c
 18035  005B6A  0012               	return		;indir
 18036  005B6C                     i2u804_49:
 18037  005B6C                     i2l462:
 18038  005B6C  0012               	return		;funcret
 18039  005B6E                     __end_of_INT0_CallBack:
 18040                           	opt callstack 0
 18041                           
 18042 ;; *************** function _INT0_DefaultInterruptHandler *****************
 18043 ;; Defined at:
 18044 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18045 ;; Parameters:    Size  Location     Type
 18046 ;;		None
 18047 ;; Auto vars:     Size  Location     Type
 18048 ;;		None
 18049 ;; Return value:  Size  Location     Type
 18050 ;;                  1    wreg      void 
 18051 ;; Registers used:
 18052 ;;		None
 18053 ;; Tracked objects:
 18054 ;;		On entry : 0/0
 18055 ;;		On exit  : 0/0
 18056 ;;		Unchanged: 0/0
 18057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18062 ;;Total ram usage:        0 bytes
 18063 ;; Hardware stack levels used:    1
 18064 ;; This function calls:
 18065 ;;		Nothing
 18066 ;; This function is called by:
 18067 ;;		_EXT_INT_Initialize
 18068 ;;		_INT0_CallBack
 18069 ;; This function uses a non-reentrant model
 18070 ;;
 18071                           
 18072                           	psect	text76
 18073  005CE2                     __ptext76:
 18074                           	opt callstack 0
 18075  005CE2                     _INT0_DefaultInterruptHandler:
 18076                           	opt callstack 18
 18077  005CE2  0012               	return		;funcret
 18078  005CE4                     __end_of_INT0_DefaultInterruptHandler:
 18079                           	opt callstack 0
 18080                           
 18081 ;; *************** function _S3_toggle *****************
 18082 ;; Defined at:
 18083 ;;		line 26 in file "main.c"
 18084 ;; Parameters:    Size  Location     Type
 18085 ;;		None
 18086 ;; Auto vars:     Size  Location     Type
 18087 ;;		None
 18088 ;; Return value:  Size  Location     Type
 18089 ;;                  1    wreg      void 
 18090 ;; Registers used:
 18091 ;;		wreg, status,2, status,0
 18092 ;; Tracked objects:
 18093 ;;		On entry : 0/0
 18094 ;;		On exit  : 0/0
 18095 ;;		Unchanged: 0/0
 18096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18101 ;;Total ram usage:        0 bytes
 18102 ;; Hardware stack levels used:    1
 18103 ;; This function calls:
 18104 ;;		Nothing
 18105 ;; This function is called by:
 18106 ;;		_main
 18107 ;;		_INT0_CallBack
 18108 ;; This function uses a non-reentrant model
 18109 ;;
 18110                           
 18111                           	psect	text77
 18112  005B9A                     __ptext77:
 18113                           	opt callstack 0
 18114  005B9A                     _S3_toggle:
 18115                           	opt callstack 18
 18116  005B9A                     
 18117                           ;main.c: 27:     if(!BUT_COMUT){
 18118  005B9A  0100               	movlb	0	; () banked
 18119  005B9C  51F4               	movf	_BUT_COMUT& (0+255),w,b
 18120  005B9E  11F5               	iorwf	(_BUT_COMUT+1)& (0+255),w,b
 18121  005BA0  A4D8               	btfss	status,2,c
 18122  005BA2  EFD5  F02D         	goto	i2u787_41
 18123  005BA6  EFD7  F02D         	goto	i2u787_40
 18124  005BAA                     i2u787_41:
 18125  005BAA  EFDD  F02D         	goto	i2l6435
 18126  005BAE                     i2u787_40:
 18127  005BAE                     
 18128                           ; BSR set to: 0
 18129                           ;main.c: 28:         BUT_COMUT=1;
 18130  005BAE  0E00               	movlw	0
 18131  005BB0  6FF5               	movwf	(_BUT_COMUT+1)& (0+255),b
 18132  005BB2  0E01               	movlw	1
 18133  005BB4  6FF4               	movwf	_BUT_COMUT& (0+255),b
 18134                           
 18135                           ;main.c: 29:     }
 18136  005BB6  EFE1  F02D         	goto	i2l291
 18137  005BBA                     i2l6435:
 18138                           
 18139                           ; BSR set to: 0
 18140                           ;main.c: 31:         BUT_COMUT=0;
 18141  005BBA  0E00               	movlw	0
 18142  005BBC  6FF5               	movwf	(_BUT_COMUT+1)& (0+255),b
 18143  005BBE  0E00               	movlw	0
 18144  005BC0  6FF4               	movwf	_BUT_COMUT& (0+255),b
 18145  005BC2                     i2l291:
 18146                           
 18147                           ; BSR set to: 0
 18148  005BC2  0012               	return		;funcret
 18149  005BC4                     __end_of_S3_toggle:
 18150                           	opt callstack 0
 18151                           
 18152                           	psect	text78
 18153  000000                     __ptext78:
 18154                           	opt callstack 0
 18155  000000                     
 18156                           	psect	rparam
 18157  0000                     
 18158                           	psect	temp
 18159  00005A                     btemp:
 18160                           	opt callstack 0
 18161  00005A                     	ds	1
 18162  0000                     int$flags	set	btemp
 18163  0000                     wtemp8	set	btemp+1
 18164  0000                     ttemp5	set	btemp+1
 18165  0000                     ttemp6	set	btemp+4
 18166  0000                     ttemp7	set	btemp+8
 18167                           tosu	equ	0xFFF
 18168                           tosh	equ	0xFFE
 18169                           tosl	equ	0xFFD
 18170                           stkptr	equ	0xFFC
 18171                           pclatu	equ	0xFFB
 18172                           pclath	equ	0xFFA
 18173                           pcl	equ	0xFF9
 18174                           tblptru	equ	0xFF8
 18175                           tblptrh	equ	0xFF7
 18176                           tblptrl	equ	0xFF6
 18177                           tablat	equ	0xFF5
 18178                           prodh	equ	0xFF4
 18179                           prodl	equ	0xFF3
 18180                           indf0	equ	0xFEF
 18181                           postinc0	equ	0xFEE
 18182                           postdec0	equ	0xFED
 18183                           preinc0	equ	0xFEC
 18184                           plusw0	equ	0xFEB
 18185                           fsr0h	equ	0xFEA
 18186                           fsr0l	equ	0xFE9
 18187                           wreg	equ	0xFE8
 18188                           indf1	equ	0xFE7
 18189                           postinc1	equ	0xFE6
 18190                           postdec1	equ	0xFE5
 18191                           preinc1	equ	0xFE4
 18192                           plusw1	equ	0xFE3
 18193                           fsr1h	equ	0xFE2
 18194                           fsr1l	equ	0xFE1
 18195                           bsr	equ	0xFE0
 18196                           indf2	equ	0xFDF
 18197                           postinc2	equ	0xFDE
 18198                           postdec2	equ	0xFDD
 18199                           preinc2	equ	0xFDC
 18200                           plusw2	equ	0xFDB
 18201                           fsr2h	equ	0xFDA
 18202                           fsr2l	equ	0xFD9
 18203                           status	equ	0xFD8


Data Sizes:
    Strings     101
    Constant    3536
    Data        7
    BSS         210
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      89
    BANK0           160    124     158
    BANK1           256      4     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_113(CODE[3]), STR_109(CODE[3]), STR_104(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[4]), STR_91(CODE[4]), STR_86(CODE[3]), STR_81(CODE[3]), 
		 -> STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), STR_41(CODE[3]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[4]), STR_14(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_113(CODE[3]), STR_109(CODE[3]), STR_104(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[4]), STR_91(CODE[4]), STR_86(CODE[3]), STR_81(CODE[3]), 
		 -> STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), STR_41(CODE[3]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[4]), STR_14(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S2092_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), S3_toggle(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), S3_toggle(), Absolute function(), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_3(CODE[11]), sPOT(BANK1[100]), STR_1(CODE[12]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_IOCB4_InterruptCall

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  160474
                  _ADC_GetConversion
           _INT0_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                             ___flge
                            ___flmul
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   97768
                                            114 BANK0     10     0     10
                                              0 BANK1      4     4      0
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   97193
                                             92 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   96156
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   95329
                                             69 COMRAM    10     4      6
                                             56 BANK0     36    36      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              9 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             12 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             30 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31927
                                             54 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             28 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             30 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             12 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25800
                                             34 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             12 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              8 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              4 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                           _INT0_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                          _S3_toggle *
 ---------------------------------------------------------------------------------
 (13) _S3_toggle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _INT0_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _S3_toggle *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      BF       8       74.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7C      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      59       1       94.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B6       6        0.0%
DATA                 0      0     1B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 28 13:37:12 2020

                           _SPI_Initialize 5C92                               ___fldiv@aexp 001C  
                             ___fldiv@bexp 001B                               ___fldiv@sign 0014  
                              _SSPSTATbits 000FC7                                         l25 5C06  
                                       l28 5CB4                                         l39 5CDC  
                                       l91 5828                               ___awdiv@sign 0009  
                      ___wmul@multiplicand 0006         __size_of_IOCB4_SetInterruptHandler 000A  
                              __CFG_BORV$3 000000                __end_of_IOCB4_InterruptCall 5AB2  
               ?_IOCB4_SetInterruptHandler 0004                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                                        l102 5CBE  
                                      l200 5964                                        l130 536C  
                                      l126 5CA2                                        l222 5B98  
                                      l302 4478                                        l136 5C0E  
                                      l138 5C1C                                        l139 5C20  
                                      l336 5B10                                        l185 5C7C  
                                      l345 3102                                        l521 510C  
                                      l362 570E                                        l354 58AE  
                                      l530 5674                                        l523 5148  
                                      l348 5C38                                        l197 5944  
                                      l365 5C66                                        l701 3ADA  
                                      l358 5756                                        l438 4624  
                                      l518 50CA                                        l471 5C90  
                                      l447 48BA                                        l536 31A4  
                                      l465 5CC8                                        l369 5498  
                                      l538 31AC                                        l618 1CCE  
                                      l706 3422                                        l731 36C4  
                                      l715 34C2                                        l299 4472  
                                      l556 33E8                                        l652 3B14  
                                      l708 342A                                        l661 3C64  
                                      l574 20F8                                        l654 3B1C  
                                      l670 4222                                        l822 54F4  
                                      l663 3CCA                                        l823 54FC  
                                      l592 1936                                        l672 422A  
                                      l681 42D4                                        l729 3660  
                                      l745 015C                                        l826 5BE8  
                                      l682 431E                                        l770 1548  
                                      l691 3910                                        l940 41A0  
                                      l693 3918                                        l686 4326  
                                      l790 0962                                        l953 4788  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
               ??_INT0_SetInterruptHandler 0006                            _timer1ReloadVal 00FA  
                                      _abs 58B0                                        _pad 5084  
                             ___awmod@sign 0009                                        tosl 000FFD  
                                      wreg 000FE8                              _INT0_CallBack 5B40  
                             ___flmul@aexp 001F                               ___flmul@bexp 0024  
                             ___flmul@sign 001E                               ___flmul@temp 0029  
                             ___flmul@prod 0025                            ?_lcd_set_cursor 0009  
                             ___fltol@exp1 000D                         __size_of_IOCB4_ISR 002E  
                                     l1100 5A0C                                       l1123 4BF6  
                                     ?_abs 0016                                       l1070 52BC  
                                     l1057 520C                                       l1410 2BDC  
                                     l1091 4CB4                                       l1421 2C9A  
                                     l1413 2BA0                                       l1085 5416  
                                     l1422 2C88                                       l1271 4EE8  
                                     l1512 58E6                                       l1408 2D7C  
                                     l1096 4CFA                                       l1440 267E  
                                     l1264 4EC8                                       l1281 4FB8  
                                     l1450 28DA                                       l1354 22E8  
                                     l1274 4F98                                       l1515 58EE  
                                     l1419 2C22                                       l1371 2402  
                                     l1363 25B8                                       l1355 22D6  
                                     l1507 4DF8                                       l1444 29E2  
                                     l1380 24D2                                       l1356 229C  
                                     l1605 586C                                       l1381 24C0  
                                     l1621 5618                                       l1543 4010  
                                     l1447 2874                                       l1631 49E0  
                                     l1615 5AE2                                       l1608 5CDE  
                                     l1552 38D6                                       l1481 3D22  
                                     l1457 29A4                                       l1449 28EC  
                                     l1641 5554                                       l1546 4018  
                                     l1562 592A                                       l1627 5A7A  
                                     l1555 381A                                       l1484 3E7E  
                                     l1396 57E2                                       l1582 59D4  
                                     l1646 555C                                       l1654 55B2  
                                     l1495 3E16                                       l1488 3DBA  
                                     l1568 5A44                                       l1576 56C6  
                                     l1665 599C                                       l1681 4AD0  
                                     l1659 55BA                                       l1676 4AF0  
                                     l1597 5082                                       l6031 5710  
                                     l5401 5C36                                       l6033 5726  
                                     l6051 570C                                       l6043 56C8  
                                     l6037 572C                                       l6045 56DE  
                                     ?_pad 0014                                       l6039 5754  
                                     l4705 5C0A                                       l6049 56E4  
                                     l7201 2106                                       l8001 4B08  
                                     l7211 2146                                       l7203 2114  
                                     l8011 4B58                                       l6501 5C68  
                                     l8101 564A                                       l7301 2306  
                                     l7221 2178                                       l7213 2148  
                                     l7205 2116                                       l8021 4B82  
                                     l8013 4B5C                                       l8005 4B1C  
                                     l6511 5AFC                                       l8103 5650  
                                     l8111 314C                                       l7311 2346  
                                     l7231 21A0                                       l7223 217A  
                                     l7207 2126                                       l7215 2150  
                                     l8031 4BAA                                       l8023 4B8C  
                                     l8015 4B6A                                       l8007 4B46  
                                     l6425 5CB6                                       l6441 588A  
                                     l6521 5450                                       l6513 5AFE  
                                     l8121 31B4                                       l8113 316C  
                                     l7321 2370                                       l7313 2352  
                                     l7305 231A                                       l7241 21DA  
                                     l7233 21B0                                       l7225 2180  
                                     l7217 2160                                       l7209 2136  
                                     l8033 4BB6                                       l8025 4B96  
                                     l8009 4B48                                       l8201 162A  
                                     l7401 5966                                       l6611 5BFA  
                                     l6603 5BEA                                       l5395 5C24  
                                     l6451 5C52                                       l6443 58A6  
                                     l6523 545C                                       l6515 5418  
                                     l6507 5AE6                                       l7171 5006  
                                     l7163 4FBA                                       l7411 50B6  
                                     l8131 31EE                                       l8123 31C6  
                                     l8115 317A                                       l8107 3104  
                                     l7331 23E2                                       l7315 2356  
                                     l7307 232A                                       l7323 2376  
                                     l7251 2206                                       l7243 21EC  
                                     l7235 21C0                                       l7227 218E  
                                     l7219 2166                                       l8035 4BC6  
                                     l8211 16A6                                       l8051 4E40  
                                     l8043 4DFA                                       l9011 11A6  
                                     l6437 5CC0                                       l6613 5BFE  
                                     l6605 5BEE                                       l5397 5C2E  
                                     l6533 44AC                                       l6525 5476  
                                     l6517 5428                                       l6509 5AEE  
                                     l6701 2E2E                                       l7173 503C  
                                     l7165 4FCC                                       l7181 5848  
                                     l7421 511C                                       l7413 50C2  
                                     l7405 5084                                       l8133 31F4  
                                     l8141 32E6                                       l8125 31D6  
                                     l8117 317E                                       l8109 3124  
                                     l7341 243C                                       l7325 239C  
                                     l7333 23F2                                       l7317 2364  
                                     l7309 2338                                       l7261 221A  
                                     l7253 220A                                       l7245 21FA  
                                     l7237 21C2                                       l7229 2190  
                                     l8037 4BD6                                       l8301 1A4C  
                                     l8213 16B0                                       l8205 1660  
                                     l8061 4EB0                                       l8053 4E4E  
                                     l8045 4E06                                       l9021 1260  
                                     l9013 11B6                                       l9005 1112  
                                     l9101 49F6                                       l6631 530E  
                                     l6463 5CDA                                       l6471 57E4  
                                     l6615 5C02                                       l6607 5BF2  
                                     l5399 5C30                                       l6447 58AC  
                                     l6439 586E                                       l6551 45AA  
                                     l6543 44FC                                       l6535 44B4  
                                     l6527 547E                                       l6711 2E60  
                                     l6703 2E38                                       l7167 4FDE  
                                     l7183 584C                                       l7191 5A6E  
                                     l7423 5130                                       l7415 50D6  
                                     l7407 5094                                       l8143 3300  
                                     l8151 3362                                       l8135 3276  
                                     l8127 31DC                                       l8119 3198  
                                     l7351 246C                                       l7343 2446  
                                     l7335 2418                                       l7327 23D0  
                                     l7319 2366                                       l7271 222E  
                                     l7263 221E                                       l7255 220E  
                                     l7247 21FE                                       l7239 21CA  
                                     l8039 4BE6                                       l7431 4CFC  
                                     l8311 1AE4                                       l8303 1A54  
                                     l8223 1734                                       l8207 1672  
                                     l8063 4EC2                                       l8055 4E60  
                                     l8047 4E24                                       l8071 4F24  
                                     l7503 5594                                       l9023 1296  
                                     l9015 11EE                                       l9007 1148  
                                     l9111 4A30                                       l9103 49FE  
                                     l6641 592E                                       l6633 5312  
                                     l6481 581A                                       l6473 5800  
                                     l6465 5C92                                       l6609 5BF6  
                                     l6561 45DA                                       l6553 45BA  
                                     l6537 44F8                                       l6801 3022  
                                     l6721 2E92                                       l6713 2E6A  
                                     l6705 2E42                                       l7513 5BC4  
                                     l8081 5676                                       l7169 4FE8  
                                     l7177 582A                                       l7185 5A46  
                                     l7417 50EA                                       l7409 50A8  
                                     l7521 401E                                       l8161 33A8  
                                     l8153 3374                                       l8145 331E  
                                     l8137 327C                                       l8129 31E4  
                                     l7601 29F0                                       l7361 2494  
                                     l7353 2470                                       l7345 2454  
                                     l7337 2428                                       l7329 23D2  
                                     l7281 2268                                       l7273 2232  
                                     l7265 2222                                       l7257 2212  
                                     l7249 2202                                       l7433 4D1C  
                                     l8401 1F32                                       l8321 1BC8  
                                     l8313 1B3C                                       l8305 1A5C  
                                     l8241 17CE                                       l8225 1746  
                                     l8209 168E                                       l8217 16D8  
                                     l8057 4E8E                                       l8049 4E2C  
                                     l8073 4F32                                       l8065 4EEA  
                                     l7505 55A6                                       l9041 1382  
                                     l9025 12BE                                       l9033 1310  
                                     l9009 117E                                       l9121 4A92  
                                     l9113 4A3C                                       l6643 5940  
                                     l6635 5336                                       l6627 52C0  
                                     l6483 5826                                       l6475 5806  
                                     l6467 5C9E                                       l6491 5B7C  
                                     l6563 45EA                                       l6555 45C6  
                                     l6811 3054                                       l6803 302C  
                                     l6731 2EC4                                       l6723 2E9C  
                                     l6715 2E74                                       l6707 2E4C  
                                     l7515 5BE0                                       l8083 567A  
                                     l7179 5836                                       l7187 5A52  
                                     l7419 50EE                                       l7531 407E  
                                     l7523 402C                                       l7427 58B0  
                                     l8163 33B0                                       l8155 3384  
                                     l8147 3338                                       l8139 3282  
                                     l7611 2A30                                       l7603 29FE  
                                     l7371 24EE                                       l7363 24A2  
                                     l7355 2480                                       l7347 2456  
                                     l7291 22BA                                       l7283 2284  
                                     l7275 2236                                       l7267 2226  
                                     l7259 2216                                       l7435 4D5A  
                                     l7443 4D9A                                       l7195 599E  
                                     l8411 1F74                                       l8403 1F42  
                                     l8331 1C62                                       l8323 1BFA  
                                     l8315 1B70                                       l8307 1A6C  
                                     l8251 189E                                       l8243 1802  
                                     l8227 1762                                       l8219 16FE  
                                     l8235 177E                                       l8171 1554  
                                     l8059 4EAE                                       l8075 4F60  
                                     l8067 4F08                                       l9051 1430  
                                     l9035 1336                                       l9027 12CE  
                                     l9019 122A                                       l9123 4AC0  
                                     l9115 4A4C                                       l9107 4A06  
                                     l9131 5AB2                                       l6645 5942  
                                     l6637 536A                                       l6629 52CE  
                                     l6485 5CA4                                       l6477 5816  
                                     l6469 5CA0                                       l6493 5B94  
                                     l6557 45C8                                       l6549 4500  
                                     l6565 45EC                                       l6821 3086  
                                     l6813 305E                                       l6805 3036  
                                     l6741 2EF6                                       l6733 2ECE  
                                     l6725 2EA6                                       l6717 2E7E  
                                     l6709 2E56                                       l7509 5A0E  
                                     l8085 568E                                       l7189 5A56  
                                     l8093 561A                                       l7541 40C8  
                                     l7533 4082                                       l7525 404C  
                                     l7429 58CA                                       l8157 338A  
                                     l8165 33C0                                       l8149 3352  
                                     l7701 2C80                                       l7621 2A56  
                                     l7613 2A32                                       l7605 2A00  
                                     l7381 2558                                       l7373 24FC  
                                     l7365 24B8                                       l7349 2464  
                                     l7357 2482                                       l7293 22C8  
                                     l7285 2294                                       l7269 222A  
                                     l7277 223A                                       l7445 4DAC  
                                     l7437 4D82                                       l7453 55BC  
                                     l7461 5534                                       l8421 1FA4  
                                     l8413 1F82                                       l8405 1F54  
                                     l8341 1CEA                                       l8333 1C96  
                                     l8325 1C10                                       l8309 1A80  
                                     l8317 1B76                                       l8261 1908  
                                     l8245 1808                                       l8253 18D0  
                                     l8237 1798                                       l8181 15A8  
                                     l8173 1564                                       l8501 3C54  
                                     l8077 4F80                                       l8069 4F10  
                                     l9053 1458                                       l9061 14AA  
                                     l9037 135C                                       l9125 4AD8  
                                     l9117 4A70                                       l9109 4A24  
                                     l9133 5ABC                                       l9141 4332  
                                     l6647 5952                                       l6495 5C7E  
                                     l6479 5818                                       l6487 5B6E  
                                     l6911 3CEC                                       l6559 45D8  
                                     l6831 30B8                                       l6823 3090  
                                     l6815 3068                                       l6807 3040  
                                     l6751 2F28                                       l6743 2F00  
                                     l6735 2ED8                                       l6727 2EB0  
                                     l6719 2E88                                       l6671 2D98  
                                     l8087 56BC                                       l8095 562E  
                                     l7551 4138                                       l7543 40D6  
                                     l7535 408E                                       l7527 4050  
                                     l7519 401A                                       l8159 339C  
                                     l7711 2CEE                                       l7631 2A96  
                                     l7623 2A64                                       l7607 2A10  
                                     l7615 2A3A                                       l7391 2592  
                                     l7383 2578                                       l7375 2536  
                                     l7359 2490                                       l7295 22CA  
                                     l7287 22AA                                       l7279 223E  
                                     l7199 20FA                                       l7439 4D8E  
                                     l7471 373C                                       l7455 55CC  
                                     l7463 5546                                       l8431 2006  
                                     l8423 1FCA                                       l8415 1F8A  
                                     l8407 1F5C                                       l8351 1D90  
                                     l8343 1D4E                                       l8335 1CA6  
                                     l8327 1C42                                       l8319 1B94  
                                     l8263 1910                                       l8255 18E0  
                                     l8247 1862                                       l8191 15EE  
                                     l8183 15B0                                       l8175 1572  
                                     l8503 3C74                                       l8511 3CA2  
                                     l8079 4F92                                       l9063 14D0  
                                     l9071 14FE                                       l9055 1468  
                                     l9039 1374                                       l9047 13C4  
                                     l9215 011C                                       l9119 4A84  
                                     l9127 4AE8                                       l9151 437A  
                                     l9143 4336                                       l6497 5C82  
                                     l6489 5B7A                                       l6921 3D64  
                                     l6913 3D32                                       l6841 30F0  
                                     l6833 30C2                                       l6825 309A  
                                     l6817 3072                                       l6809 304A  
                                     l6761 2F5A                                       l6753 2F32  
                                     l6745 2F0A                                       l6737 2EE2  
                                     l6729 2EBA                                       l6681 2DCA  
                                     l6673 2DA2                                       l6665 2D7E  
                                     l8089 56C0                                       l9217 3F42  
                                     l8097 563A                                       l7553 414A  
                                     l7545 40E8                                       l7537 40AC  
                                     l7529 405E                                       l7721 2D58  
                                     l7705 2CAA                                       l7713 2CF2  
                                     l7641 2AD6                                       l7633 2A98  
                                     l7625 2A66                                       l7617 2A4A  
                                     l7609 2A20                                       l7801 2760  
                                     l7393 2598                                       l7385 257C  
                                     l7369 24E2                                       l7377 2538  
                                     l7297 22D4                                       l7289 22B6  
                                     l7449 4DF0                                       l7481 380A  
                                     l7473 3750                                       l7457 54FE  
                                     l8441 204C                                       l8433 2020  
                                     l8425 1FE6                                       l8417 1F92  
                                     l8409 1F6C                                       l8361 1DCC  
                                     l8345 1D5E                                       l8353 1D98  
                                     l8337 1CBA                                       l8329 1C52  
                                     l8281 19C0                                       l8273 1954  
                                     l8265 192A                                       l8257 18E4  
                                     l8249 1896                                       l8193 15F6  
                                     l8185 15C2                                       l8177 157A  
                                     l8169 154A                                       l8505 3C86  
                                     l8521 41CE                                       l8601 3442  
                                     l9065 14DE                                       l9049 13FA  
                                     l9161 4440                                       l9153 438E  
                                     l9145 4342                                       l9137 4328  
                                     l6499 5C8E                                       l6931 3DEC  
                                     l6923 3D70                                       l6915 3D48  
                                     l6907 3CCE                                       l6851 47DC  
                                     l6843 30F6                                       l6835 30CC  
                                     l6827 30A4                                       l6819 307C  
                                     l6771 2F8C                                       l6763 2F64  
                                     l6755 2F3C                                       l6747 2F14  
                                     l6739 2EEC                                       l6691 2DFC  
                                     l6683 2DD4                                       l6675 2DAC  
                                     l6667 2D88                                       l8099 5646  
                                     l7547 4116                                       l7539 40B4  
                                     l7555 4150                                       l7571 465C  
                                     l7563 4626                                       l7723 2D5C  
                                     l7715 2D0C                                       l7707 2CB6  
                                     l7651 2B06                                       l7643 2ADE  
                                     l7627 2A76                                       l7635 2AA0  
                                     l7619 2A50                                       l7811 27CE  
                                     l7803 277A                                       l7395 25A6  
                                     l7387 258A                                       l7379 2548  
                                     l7299 22F6                                       l7491 38C6  
                                     l7475 375E                                       l7483 383E  
                                     l7467 36C6                                       l8451 209C  
                                     l8443 205C                                       l8435 2026  
                                     l8427 1FEE                                       l8419 1F9E  
                                     l8371 1DF8                                       l8363 1DD2  
                                     l8355 1DAA                                       l8347 1D70  
                                     l8339 1CC6                                       l8291 19FE  
                                     l8275 1966                                       l8283 19C4  
                                     l8259 18F6                                       l8267 1942  
                                     l8195 15FA                                       l8187 15D0  
                                     l8179 159E                                       l8507 3C8C  
                                     l8523 41D6                                       l8515 41A2  
                                     l8611 3482                                       l8603 344A  
                                     l9067 14F2                                       l9091 549A  
                                     l9163 447A                                       l9155 439C  
                                     l9147 434E                                       l9139 432C  
                                     l6941 3E2A                                       l6933 3DF8  
                                     l6925 3DA2                                       l6909 3CDE  
                                     l6853 47E0                                       l6861 4888  
                                     l6845 478A                                       l6837 30D6  
                                     l6829 30AE                                       l6781 2FBE  
                                     l6773 2F96                                       l6765 2F6E  
                                     l6757 2F46                                       l6749 2F1E  
                                     l6693 2E06                                       l6685 2DDE  
                                     l6677 2DB6                                       l6669 2D8E  
                                     l7557 4160                                       l7549 4136  
                                     l7581 46C4                                       l7573 466A  
                                     l7565 462A                                       l7901 51D6  
                                     l7725 2D6A                                       l7717 2D22  
                                     l7709 2CC4                                       l7661 2B44  
                                     l7653 2B06                                       l7645 2AE2  
                                     l7637 2AB0                                       l7629 2A86  
                                     l7821 2864                                       l7813 27F8  
                                     l7805 278A                                       l7741 25D4  
                                     l7397 25A8                                       l7389 2590  
                                     l7485 387A                                       l7469 36E6  
                                     l8461 20D8                                       l8453 20AE  
                                     l8445 2062                                       l8437 2038  
                                     l8429 1FF4                                       l8365 1DDE  
                                     l8357 1DB8                                       l8373 1DFE  
                                     l8381 1E2C                                       l8349 1D82  
                                     l8293 1A02                                       l8285 19CC  
                                     l8277 1982                                       l8197 15FE  
                                     l8189 15E2                                       l8509 3C9C  
                                     l8541 4290                                       l8533 424E  
                                     l8525 41EA                                       l8517 41B4  
                                     l8701 48BC                                       l8621 34F6  
                                     l8613 348A                                       l8605 346A  
                                     l9077 1510                                       l9093 54A2  
                                     l9157 43E8                                       l9149 4350  
                                     l6943 3E4E                                       l6935 3E06  
                                     l6927 3DA4                                       l6919 3D5C  
                                     l6855 482C                                       l6847 478E  
                                     l6839 30E6                                       l6791 2FF0  
                                     l6783 2FC8                                       l6775 2FA0  
                                     l6767 2F78                                       l6759 2F50  
                                     l6695 2E10                                       l6687 2DE8  
                                     l6679 2DC0                                       l7559 4180  
                                     l7583 46D2                                       l7591 4738  
                                     l7575 468A                                       l7567 4638  
                                     l7911 51FC                                       l7903 51DE  
                                     l7727 2D70                                       l7719 2D3C  
                                     l7671 2B90                                       l7663 2B54  
                                     l7639 2AC6                                       l7831 28A4  
                                     l7823 2872                                       l7815 282E  
                                     l7807 27A6                                       l7751 260C  
                                     l7743 25D6                                       l7487 388E  
                                     l7479 37CE                                       l8455 20BA  
                                     l8447 2068                                       l8439 2044  
                                     l8391 1EE2                                       l8383 1E84  
                                     l8375 1E10                                       l8367 1DEE  
                                     l8359 1DC8                                       l8295 1A14  
                                     l8287 19DE                                       l8279 19B8  
                                     l8199 1604                                       l8471 3AEE  
                                     l8551 42E8                                       l8543 42AE  
                                     l8535 4262                                       l8527 41F2  
                                     l8519 41BC                                       l8711 4932  
                                     l8703 48E6                                       l7495 58F0  
                                     l8623 3508                                       l8631 3568  
                                     l8615 34A6                                       l8607 3472  
                                     l9079 1536                                       l9095 54B0  
                                     l9159 4416                                       l6945 3E5E  
                                     l6937 3E24                                       l6929 3DB0  
                                     l6857 4858                                       l6849 47A2  
                                     l6793 2FFA                                       l6785 2FD2  
                                     l6777 2FAA                                       l6769 2F82  
                                     l6697 2E1A                                       l6689 2DF2  
                                     l7593 4748                                       l7585 4700  
                                     l7577 46A8                                       l7569 4658  
                                     l7913 5204                                       l7905 51E0  
                                     l7921 5220                                       l7729 2D72  
                                     l7681 2BDA                                       l7673 2B9E  
                                     l7665 2B64                                       l7657 2B1A  
                                     l7649 2AF6                                       l7841 2916  
                                     l7833 28D2                                       l7825 2884  
                                     l7817 283C                                       l7809 27B2  
                                     l7761 2638                                       l7753 261C  
                                     l7745 25E6                                       l7737 25BA  
                                     l7489 38B6                                       l8457 20C2  
                                     l8393 1EFE                                       l8385 1EB8  
                                     l8377 1E22                                       l8369 1DF2  
                                     l8297 1A22                                       l8289 19F0  
                                     l8481 3B5E                                       l8473 3B08  
                                     l8553 42FC                                       l8545 42B2  
                                     l8537 4266                                       l8529 4200  
                                     l8713 4950                                       l8561 38EA  
                                     l8641 35FE                                       l8633 3578  
                                     l8617 34B6                                       l8609 347C  
                                     l8801 03B8                                       l8721 0066  
                                     l9097 54D6                                       l6947 3E6C  
                                     l6939 3E26                                       l6859 4884  
                                     l6795 3004                                       l6787 2FDC  
                                     l6779 2FB4                                       l6699 2E24  
                                     l7595 4768                                       l7587 4720  
                                     l7579 46B0                                       l7907 51E6  
                                     l7931 5254                                       l7923 5228  
                                     l7691 2C20                                       l7683 2BEC  
                                     l7675 2BAA                                       l7667 2B6C  
                                     l7659 2B34                                       l7851 298C  
                                     l7843 2940                                       l7827 2892  
                                     l7819 285A                                       l7771 268E  
                                     l7763 2648                                       l7755 2622  
                                     l7747 25F6                                       l7739 25C6  
                                     l8459 20D2                                       l8395 1F10  
                                     l8387 1EC0                                       l8379 1E26  
                                     l8299 1A3A                                       l8491 3B8A  
                                     l8483 3B64                                       l8475 3B44  
                                     l8467 3ADC                                       l8555 4300  
                                     l8547 42B6                                       l8539 4284  
                                     l8715 4962                                       l8707 48F2  
                                     l8571 3958                                       l8563 3904  
                                     l7499 555E                                       l8651 3676  
                                     l8643 361C                                       l8635 357E  
                                     l8627 3542                                       l8811 0466  
                                     l8803 03C8                                       l8731 00BC  
                                     l8723 008C                                       l9099 49E2  
                                     l6949 3E6E                                       l6797 300E  
                                     l6789 2FE6                                       l8661 3E94  
                                     l7589 4732                                       l7909 51EC  
                                     l7941 5290                                       l7933 525C  
                                     l7925 522C                                       l7917 520E  
                                     l7685 2C02                                       l7693 2C32  
                                     l7677 2BC8                                       l7669 2B7C  
                                     l7853 29A8                                       l7861 29CE  
                                     l7837 28FC                                       l7845 2944  
                                     l7829 2896                                       l7781 26C8  
                                     l7773 269E                                       l7765 2658  
                                     l7757 2628                                       l7749 2606  
                                     l8397 1F1E                                       l8389 1EC4  
                                     l8485 3B6C                                       l8493 3BE8  
                                     l8477 3B4C                                       l8469 3AEA  
                                     l8717 49A4                                       l8709 4900  
                                     l8581 3A50                                       l8573 39CE  
                                     l8565 3940                                       l8557 38D8  
                                     l8653 3686                                       l8645 3636  
                                     l8637 3584                                       l8629 3554  
                                     l8901 0AB4                                       l8821 0520  
                                     l8813 0498                                       l8805 03FC  
                                     l8733 00BE                                       l8725 009A  
                                     l6799 3018                                       l8671 3EF6  
                                     l8663 3E98                                       l7943 5296  
                                     l7935 5264                                       l7927 523A  
                                     l7919 5212                                       l7695 2C40  
                                     l7687 2C08                                       l7679 2BCA  
                                     l7599 29E4                                       l7863 29D2  
                                     l7855 29B8                                       l7847 295E  
                                     l7839 2908                                       l7791 271A  
                                     l7783 26DE                                       l7767 2668  
                                     l7759 2636                                       l8399 1F2E  
                                     l8495 3C02                                       l8487 3B7E  
                                     l8479 3B52                                       l8583 3A6E  
                                     l8575 39D4                                       l8567 3948  
                                     l8559 38E6                                       l8655 369C  
                                     l8647 3650                                       l8639 35E2  
                                     l8911 0B60                                       l8903 0ADA  
                                     l8831 060E                                       l8823 056A  
                                     l8807 040C                                       l8751 00E8  
                                     l8743 00DC                                       l8735 00D0  
                                     l8727 00AC                                       l8681 3F22  
                                     l8665 3E9C                                       l7881 5168  
                                     l7873 514A                                       l7937 5272  
                                     l7945 529C                                       l7929 5242  
                                     l7697 2C44                                       l7689 2C12  
                                     l7961 53EA                                       l7953 536E  
                                     l7857 29C6                                       l7849 2972  
                                     l7793 2728                                       l7785 26EA  
                                     l7777 26B2                                       l7769 266E  
                                     l8497 3C20                                       l8489 3B84  
                                     l8585 3A88                                       l8577 39DA  
                                     l8569 3952                                       l8649 3670  
                                     l8593 33EA                                       l8921 0C20  
                                     l8841 06AA                                       l8817 04B4  
                                     l8809 0440                                       l8761 016C  
                                     l8729 00B0                                       l8691 3FD0  
                                     l8683 3F58                                       l8675 3EFC  
                                     l8667 3EBA                                       l8659 3E80  
                                     l7891 519C                                       l7883 5176  
                                     l7875 514E                                       l7947 52AC  
                                     l7939 5288                                       l7699 2C52  
                                     l7963 540E                                       l7955 539C  
                                     l7971 4C26                                       l7859 29C8  
                                     l7795 2734                                       l7787 2702  
                                     l7779 26BE                                       l7867 579E  
                                     l8499 3C3A                                       l8587 3AA2  
                                     l8579 3A3E                                       l8595 33F8  
                                     l8931 0CA6                                       l8923 0C2C  
                                     l8851 0764                                       l8827 05A2  
                                     l8819 04EA                                       l8771 0204  
                                     l8763 0192                                       l8755 00F4  
                                     l8747 00E2                                       l8739 00D6  
                                     l8693 3FE2                                       l8677 3F12  
                                     l8669 3EF2                                       l7893 51A4  
                                     l7885 517E                                       l7877 515C  
                                     l7949 52B4                                       l7965 5414  
                                     l7957 53AC                                       l7981 4C94  
                                     l7973 4C36                                       l7797 2744  
                                     l7789 270E                                       l7869 57AE  
                                     l8589 3AB2                                       l8597 33FC  
                                     l8941 0D16                                       l8917 0BB2  
                                     l8909 0B2A                                       l8861 07E2  
                                     l8837 065E                                       l8829 05D8  
                                     l8781 0294                                       l8773 0212  
                                     l8765 01C8                                       l8757 014A  
                                     l8695 3FF4                                       l8687 3F90  
                                     l8679 3F1A                                       l7895 51AC  
                                     l7887 5182                                       l7879 5164  
                                     l7959 53DA                                       l7983 4CA2  
                                     l7975 4C64                                       l7799 2750  
                                     l7991 59D6                                       l8599 3416  
                                     l8951 0D98                                       l8919 0BE8  
                                     l8927 0C38                                       l8871 087A  
                                     l8863 07F0                                       l8847 06F8  
                                     l8839 0684                                       l8791 032A  
                                     l8783 029C                                       l8767 01D6  
                                     l8759 016A                                       l7897 51BA  
                                     l7889 518A                                       l7985 4CF2  
                                     l7977 4C74                                       l7969 4BF8  
                                     l7993 59EC                                       l8961 0E1E  
                                     l8929 0C6E                                       l8937 0CBA  
                                     l8865 0820                                       l8857 07B6  
                                     l8849 072E                                       l8793 0338  
                                     l8785 02AA                                       l8777 025C  
                                     l8769 01E4                                       l7899 51C0  
                                     l7987 4CF8                                       l7979 4C82  
                                     l7995 59FC                                       l8939 0CE0  
                                     l8947 0D2A                                       l8875 08EC  
                                     l8859 07CA                                       l8787 02D0  
                                     l8779 026E                                       l8981 0F8C  
                                     l8973 0ED6                                       l8965 0E5A  
                                     l8949 0D60                                       l8957 0DAC  
                                     l8893 0A2C                                       l8877 08FE  
                                     l8885 0976                                       l8869 084C  
                                     l8797 0382                                       l8789 030A  
                                     l7999 4AF2                                       l8991 103A  
                                     l8983 0FC2                                       l8975 0F0C  
                                     l8967 0E80                                       l8959 0DD2  
                                     l8895 0A62                                       l8887 09AC  
                                     l8879 0932                                       l8799 0394  
                                     STR_1 FF99                                       STR_2 FFB0  
                                     l8977 0F54                                       l8969 0EB6  
                                     l8889 09F4                                       STR_3 FFA5  
                                     STR_4 FFBA                                       STR_5 FFCA  
                                     l8997 108A                                       l8989 1014  
                                     STR_8 FFBE                                       l8999 10C0  
                                     STR_9 FFD2                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u6055 5C2C                                       u6056 5C2E  
                                     u8000 45D8                                       u8001 45D4  
                                     u8010 45EA                                       u8011 45E6  
                                     u8020 4624                                       u8021 4620  
                                     u8110 52CE                                       u7310 5726  
                                     u8111 52CA                                       u7311 5722  
                                     u8120 5952                                       u7320 56DE  
                                     u9000 25A6                                       u8121 594E  
                                     u7321 56DA                                       u9001 25A2  
                                     u9010 5996                                       u9011 5990  
                                     i2l44 0036                                       u8300 3DE8  
                                     u4780 5C1C                                       u8140 480A  
                                     u9100 4D82                                       u9020 5998  
                                     u8301 3DE4                                       u4781 5C18  
                                     u9101 4D7E                                       u8310 3E06  
                                     u8150 482C                                       u9030 5094  
                                     u9110 4DAC                                       u8311 3E02  
                                     u8151 4828                                       u9031 5090  
                                     u9111 4DA8                                       i2l48 0056  
                                     u8320 3E16                                       u8160 48AA  
                                     u9040 50B6                                       u9200 370E  
                                     u8321 3E12                                       u9041 50B2  
                                     u8330 3E24                                       u8170 48BA  
                                     u9050 510C                                       u9130 4DE6  
                                     u9210 373C                                       u8331 3E20  
                                     u8171 48B6                                       u8147 4800  
                                     u9051 5108                                       u9131 4DE0  
                                     u9211 3738                                       u8340 3E5E  
                                     u8260 3CDE                                       u9060 511C  
                                     u9140 4DE8                                       u9220 375E  
                                     u9300 5924                                       u8341 3E5A  
                                     u8261 3CDA                                       u9061 5118  
                                     u9125 4DBE                                       u9221 375A  
                                     u9205 3704                                       u9301 591E  
                                     u8350 3E6C                                       u8270 3CEC  
                                     u9070 58CA                                       u9150 5606  
                                     u9310 5926                                       i2l95 5C50  
                                     u8351 3E68                                       u8271 3CE8  
                                     u8167 48A0                                       u9071 58C6  
                                     u8280 3D48                                       u9400 40AC  
                                     u9080 4D3C                                       u9240 37CA  
                                     u9160 5618                                       u8600 59CE  
                                     u9320 558E                                       u8281 3D44  
                                     u9401 40A8                                       u9241 37C6  
                                     u9161 5614                                       u8601 59C8  
                                     u9321 5588                                       u8290 3D9E  
                                     u9410 40D6                                       u9090 4D5A  
                                     u9250 37EE                                       u8610 59D0  
                                     u9170 552E                                       u9330 5590  
                                     i2l99 5B3E                                       u8291 3D9A  
                                     u9411 40D2                                       u9091 4D56  
                                     u9235 3772                                       u9171 5528  
                                     u8540 4FCC                                       u9420 4116  
                                     u9500 29FE                                       u8700 21FA  
                                     u8620 2114                                       u9260 380A  
                                     u9236 377C                                       u9180 5530  
                                     u9340 55A6                                       u8541 4FC8  
                                     u9421 4112                                       u9501 29FA  
                                     u8701 21F6                                       u8621 2110  
                                     u9085 4D32                                       u9261 3806  
                                     u9237 378C                                       u9157 55FC  
                                     u9341 55A2                                       u9350 5A3E  
                                     u8550 4FDE                                       u9430 4160  
                                     u9510 2A10                                       u8710 2268  
                                     u8630 2126                                       u9270 385E  
                                     u9190 5546                                       u9351 5A38  
                                     u8551 4FDA                                       u9431 415C  
                                     u9511 2A0C                                       u8711 2264  
                                     u8631 2122                                       u9255 37E4  
                                     u9191 5542                                       u9360 5A40  
                                     u8560 5006                                       u9440 4638  
                                     u9600 2BC8                                       u9520 2A20  
                                     u8800 2346                                       u8720 2280  
                                     u8640 2136                                       u9280 387A  
                                     u8561 5002                                       u9441 4634  
                                     u9601 2BC4                                       u9521 2A1C  
                                     u8801 2342                                       u8721 227A  
                                     u8641 2132                                       u9281 3876  
                                     u7930 5B10                                       u8570 503C  
                                     u9370 402C                                       u9450 466A  
                                     u9610 2BEC                                       u9530 2A64  
                                     u8810 2364                                       u8730 2282  
                                     u8650 2178                                       u9290 38B6  
                                     u7931 5B0C                                       u8571 5038  
                                     u9371 4028                                       u9451 4666  
                                     u9611 2BE8                                       u9531 2A60  
                                     u8811 2360                                       u8651 2174  
                                     u9291 38B2                                       u9275 3854  
                                     u7940 544C                                       u8580 586C  
                                     u9380 405E                                       u9460 46A8  
                                     u9700 2D0C                                       u9620 2C02  
                                     u9540 2A76                                       u8900 24A2  
                                     u8820 239C                                       u8740 22AA  
                                     u8660 218E                                       u7941 5448  
                                     u8581 5868                                       u9381 405A  
                                     u9461 46A4                                       u9701 2D08  
                                     u9621 2BFE                                       u9541 2A72  
                                     u8901 249E                                       u8821 2398  
                                     u8741 22A6                                       u8661 218A  
                                     u7950 5476                                       u8590 5A6E  
                                     u9470 46D2                                       u9710 2D3C  
                                     u9630 2C20                                       u9550 2A86  
                                     u8910 24B8                                       u8830 23E2  
                                     u8750 22C8                                       u8670 21A0  
                                     u7951 5472                                       u8591 5A6A  
                                     u9391 4088                                       u9471 46CE  
                                     u9711 2D38                                       u9631 2C1C  
                                     u9551 2A82                                       u8911 24B4  
                                     u8831 23DE                                       u8751 22C4  
                                     u8671 219C                                       u7880 588A  
                                     u7960 5498                                       u9480 4700  
                                     u9720 2D6A                                       u9640 2C40  
                                     u9560 2AC6                                       u9800 269E  
                                     u8920 24CE                                       u8840 2418  
                                     u8760 22E8                                       u8680 21B0  
                                     u7881 5886                                       u7961 5494  
                                     u9481 46FC                                       u9721 2D66  
                                     u9641 2C3C                                       u9561 2AC2  
                                     u9801 269A                                       u8921 24CA  
                                     u8841 2414                                       u8761 22E4  
                                     u8681 21AC                                       u7890 58A6  
                                     u9490 4748                                       u9650 2C52  
                                     u9570 2B06                                       u9810 2818  
                                     u9730 25D4                                       u8930 24E2  
                                     u8850 2428                                       u8770 22F6  
                                     u8690 21EC                                       u7891 58A2  
                                     u9491 4744                                       u9651 2C4E  
                                     u9571 2B02                                       u9731 25D0  
                                     u8931 24DE                                       u8851 2424  
                                     u8771 22F2                                       u8691 21E8  
                                     u9660 2C80                                       u9580 2B7C  
                                     u9900 298C                                       u9820 2872  
                                     u9740 25E6                                       u8940 24FC  
                                     u8860 2454                                       u8780 2306  
                                     u9661 2C7C                                       u9581 2B78  
                                     u9901 2988                                       u9821 286E  
                                     u9741 25E2                                       u8941 24F8  
                                     u8861 2450                                       u8781 2302  
                                     u7990 45AA                                       u9670 2C96  
                                     u9590 2B9E                                       u9910 29C6  
                                     u9830 2892                                       u9750 25F6  
                                     u8950 2536                                       u8870 2464  
                                     u8790 2338                                       u7991 45A6  
                                     u9671 2C92                                       u9591 2B9A  
                                     u9911 29C2                                       u9831 288E  
                                     u9815 280E                                       u9751 25F2  
                                     u8951 2532                                       u8871 2460  
                                     u8791 2334                                       u7984 458A  
                                     u9920 515C                                       u9680 2CAA  
                                     u9840 28A4                                       u9760 2636  
                                     u8960 2548                                       u8880 2480  
                                     u7985 4584                                       u9921 5158  
                                     u9681 2CA6                                       u9841 28A0  
                                     u9761 2632                                       u8961 2544  
                                     u8881 247C                                       u9930 5176  
                                     u9690 2CC4                                       u9850 28D2  
                                     u9770 2648                                       u8970 2558  
                                     u8890 2490                                       u9931 5172  
                                     u9691 2CC0                                       u9851 28CE  
                                     u9771 2644                                       u8971 2554  
                                     u8891 248C                                       u9940 519C  
                                     u9860 28E8                                       u9780 2658  
                                     u8980 2578                                       u9941 5198  
                                     u9861 28E4                                       u9781 2654  
                                     u8981 2574                                       u9950 51BA  
                                     u9870 28FC                                       u9790 268E  
                                     u8990 258A                                       u9951 51B6  
                                     u9871 28F8                                       u9791 268A  
                                     u8991 2586                                       u9960 51D6  
                                     u9880 2916                                       u9961 51D2  
                                     u9881 2912                                       u9970 51FC  
                                     u9890 295E                                       u9971 51F8  
                                     u9891 295A                                       u9980 5220  
                                     u9981 521C                                       u9990 523A  
                                     u9991 5236                                       _WPUB 000F5B  
                                     _sPOT 0100                                       abs@a 0016  
                                     _dbuf 0164                                       _atoi 3E80  
                                     _ctoa 561A                                       _main 4328  
                                     _dtoa 3104                                       _font F1C9  
                                     _prec 0058                                       _otoa 3ADC  
                                     _nout 00EA                                       pad@i 001B  
                                     pad@p 0018                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001D                                       fsr2l 000FD9  
                                     _stoa 41A2                                       btemp 005A  
                                     _utoa 38D8                                       _xtoa 33EA  
                            ___fpclassifyf 4CFC                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0062  
                            __CFG_IESO$OFF 000000                            ___fldiv@new_exp 0015  
                   __end_of_SPI_Initialize 5CA4                               _tolower$2162 0010  
                            lcd_fill@width 0011                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                      ??_abs 0018  
                                    ??_pad 001A                           __end_of_INT0_ISR 5CD2  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 5CB6  
                            ___fltol@sign1 000C                            __end_of___aodiv 41A2  
                                    ?_atoi 000B                                      ?_ctoa 001F  
                          __end_of___fladd 25BA                                      ?_main 0001  
                                    ?_dtoa 001F                            __end_of___aomod 478A  
                          __end_of___fldiv 2D7E                            __end_of___awdiv 520E  
                          __end_of___flneg 5A0E                                      STR_12 FFC6  
                                    STR_14 FFC6                                      STR_30 FFE9  
                                    STR_23 FFC7                                      STR_32 FFE9  
                                    STR_16 FFCE                                      STR_41 FFEC  
                                    STR_18 FFCE                                      STR_34 FFEF  
                                    STR_27 FFCF                                      STR_51 FFDB  
                                    STR_36 FFEF                                      STR_44 FFDA  
                          __end_of___awmod 52BE                                      STR_61 FFD6  
                                    STR_46 FFDA                                      STR_54 FFF5  
                                    STR_71 FFF2                                      STR_39 FFEC  
                                    STR_56 FFF5                                      STR_81 FFDF  
                                    STR_66 FFD7                                      STR_74 FFDE  
                                    STR_91 FFE2                                      STR_59 FFD6  
                                    STR_76 FFDE                                      STR_84 FFF8  
                                    STR_69 FFF2                                      STR_93 FFC2  
                                    STR_86 FFF8                                      STR_95 FFC2  
                          __end_of___flmul 29E4                                      STR_89 FFE2  
                                    ?_otoa 001F                            __end_of___flsub 57E4  
                          __end_of___fltol 4BF8          __end_of_IOCB4_SetInterruptHandler 5CC0  
                                    ?_stoa 000D                                      u10000 5254  
                                    u10001 5250                                      u10010 5272  
                                    u10011 526E                                      u10020 5288  
                                    u10100 4CA2                                      u10021 5284  
                                    u10101 4C9E                                      u10030 52AC  
                                    u10110 4CF2                                      u10031 52A8  
                                    u10111 4CEE                                      ?_utoa 001F  
                                    u10040 539C                                      u10120 59EC  
                                    u11000 3C02                                      u10041 5398  
                                    u10121 59E8                                      u11001 3BFE  
                                    u10201 4E00                                      u10050 53DA  
                                    u10130 4B08                                      u11010 3C20  
                                    u10210 4E24                                      u10051 53D6  
                                    u10131 4B04                                      u11011 3C1C  
                                    u10211 4E20                                      u10300 3134  
                                    u10060 540E                                      u10140 4B3C  
                                    u11020 3C3A                                      u11100 421E  
                                    u10220 4E4E                                      u10301 312E  
                                    u10061 540A                                      u11021 3C36  
                                    u11101 421A                                      u10221 4E4A  
                                    u10310 3136                                      u10070 4C26  
                                    u10150 4B6A                                      u11030 3C54  
                                    u11110 424A                                      u10230 4E8E  
                                    u10071 4C22                                      u10151 4B66  
                                    u11031 3C50                                      u11111 4246  
                                    u10231 4E8A                                      u10400 3352  
                                    u10320 314C                                      u10080 4C64  
                                    u10160 4B7E                                      u11040 3C64  
                                    u11120 4284                                      u10240 4F08  
                                    u11200 3A88                                      u12000 1296  
                                    u10401 334E                                      u10321 3148  
                                    u10081 4C60                                      u10161 4B7A  
                                    u10145 4B32                                      u11041 3C60  
                                    u11121 4280                                      u10241 4F04  
                                    u11201 3A84                                      u12001 1292  
                                    u10410 3362                                      u10330 317A  
                                    u10090 4C82                                      u10170 4BA6  
                                    u11050 3C74                                      u11130 42D4  
                                    u10250 4F32                                      u11210 3AA2  
                                    u12010 1336                                      u10411 335E  
                                    u10331 3176                                      u10091 4C7E  
                                    u10171 4BA2                                      u11051 3C70  
                                    u11131 42D0                                      u10251 4F2E  
                                    u11211 3A9E                                      u12011 1332  
                                    u10420 3374                                      u10340 3198  
                                    u10180 4BC6                                      u10500 1658  
                                    u11060 3C86                                      u11140 42E4  
                                    u10260 4F60                                      u11220 3AB2  
                                    u11300 353C                                      u12020 135C  
                                    u12100 4A92                                      u10421 3370  
                                    u10341 3194                                      u10181 4BC2  
                                    u10501 1652                                      u11061 3C82  
                                    u11141 42E0                                      u10261 4F5C  
                                    u11221 3AAE                                      u11301 3536  
                                    u12021 1358                                      u12101 4A8E  
                                    u10270 568E                                      u10430 3384  
                                    u10350 31C6                                      u10190 4BD6  
                                    u10510 165A                                      u11150 431E  
                                    u11310 353E                                      u11230 33F8  
                                    u12030 13FA                                      u12110 4AC0  
                                    u10271 568A                                      u10431 3380  
                                    u10351 31C2                                      u10191 4BD2  
                                    u11151 431A                                      u11071 41AC  
                                    u11231 33F4                                      u12031 13F6  
                                    u12111 4ABC                                      u10280 56BC  
                                    u11400 3EBA                                      u10440 339C  
                                    u10360 31D6                                      u10600 18F6  
                                    u10520 1672                                      u11080 41CE  
                                    u11160 38E6                                      u11320 3554  
                                    u11240 3416                                      u12040 1430  
                                    u12120 438E                                      u10281 56B8  
                                    u11401 3EB6                                      u10441 3398  
                                    u10361 31D2                                      u10601 18F2  
                                    u10521 166E                                      u11081 41CA  
                                    u11161 38E2                                      u11321 3550  
                                    u11241 3412                                      u12041 142C  
                                    u12121 438A                                      u11410 3EF2  
                                    u10290 562E                                      u10370 3300  
                                    u10610 1908                                      u10530 16FE  
                                    u10450 1572                                      u11090 4200  
                                    u11170 3904                                      u11330 35BC  
                                    u11250 3442                                      u12050 14D0  
                                    u12130 4472                                      u11411 3EEE  
                                    u10291 562A                                      u10371 32FC  
                                    u10611 1904                                      u10531 16FA  
                                    u10451 156E                                      u11091 41FC  
                          __end_of___lodiv 4EEA                                      u11171 3900  
                                    u11251 343E                                      u12051 14CC  
                                    u12131 446E                                      u11420 3F0E  
                                    u10380 331E                                      u10700 1A14  
                                    u10620 192A                                      u10540 172C  
                                    u10460 15C2                                      u11500 4950  
                                    u11180 3A50                                      u11340 35FE  
                                    u11260 34A6                                      u12060 54F4  
                          ___awdiv@divisor 0006                                      u11421 3F0A  
                                    u10381 331A                                      u10701 1A10  
                                    u10621 1926                                      u10541 1726  
                                    u10461 15BE                                      u11501 494C  
                                    u11181 3A4C                                      u11341 35FA  
                                    u11261 34A2                                      u12061 54F0  
                                    u11430 3FCA                                      u10390 3338  
                                    u10710 1A22                                      u10630 1950  
                                    u10550 172E                                      u10470 15D0  
                                    u11510 4962                                      u11190 3A6E  
                                    u11350 361C                                      u11270 34F0  
                                    u12070 49F6                                      u11431 3FC4  
                                    u10391 3334                                      u10711 1A1E  
                                    u10631 194C                                      u10471 15CC  
                                    u11511 495E                                      u11191 3A6A  
                                    u11351 3618                                      u11335 35AA  
                                    u11271 34EA                                      u12071 49F2  
                                    ?_xtoa 001F                                      u11440 3FCC  
                                    u10800 1D82                                      u10720 1A4C  
                                    u10640 1966                                      u10560 1746  
                                    u10480 15E2                                      u11520 49A4  
                                    u11360 3636                                      u11280 34F2  
                                    u11600 0256                                      u12080 4A24  
                                    _T1CON 000FCD                                      u10801 1D7E  
                                    u10721 1A48                                      u10641 1962  
                                    u10561 1742                                      u10481 15DE  
                                    u11521 49A0                                      u11361 3632  
                                    u12081 4A20                                      u11450 3FE2  
                                    u10810 1D90                                      u10730 1B94  
                                    u10650 1982                                      u10570 17CA  
                                    u10490 162A                                      u11530 49C6  
                                    u11370 3650                                      u11290 3508  
                                    u11610 026E                                      u12090 4A84  
                                    u12147 5AF4                                      u11451 3FDE  
                                    u10811 1D8C                                      u10731 1B90  
                                    u10651 197E                                      u10571 17C6  
                                    u10491 1626                                      u11371 364C  
                                    u11291 3504                                      u11611 026A  
                                    u12091 4A80                                      u11460 3FF4  
                                    u10900 1F82                                      u10820 1DAA  
                                    u10740 1BFA                                      u10660 19B8  
                                    u10580 185E                                      u11380 3660  
                                    u11700 04EA                                      u11620 0294  
                                    u11540 008C                                      u11461 3FF0  
                                    u10901 1F7E                                      u10821 1DA6  
                                    u10741 1BF6                                      u10661 19B4  
                                    u10581 185A                                      u11525 4994  
                                    u11381 365C                                      u11701 04E6  
                                    u11621 0290                                      u11541 0088  
                                    u10910 2006                                      u10830 1DB8  
                                    u10750 1C42                                      u10670 19DE  
                                    u10590 18D0                                      u11470 48E6  
                                    u11390 3670                                      u11710 0520  
                                    u11630 02D0                                      u11550 015C  
                                    u10911 2002                                      u10831 1DB4  
                                    u10751 1C3E                                      u10671 19DA  
                                    u10591 18CC                                      u11527 498A  
                                    u11471 48E2                                      u11391 366C  
                                    u11711 051C                                      u11631 02CC  
                                    u11551 0158                                      u10920 2020  
                                    u10840 1E10                                      u10760 1C52  
                                    u10680 19F0                                      u11480 4922  
                                    u11800 08E4                                      u11720 05D8  
                                    u11640 037A                                      u11560 016A  
                                    u10921 201C                                      u10841 1E0C  
                                    u10761 1C4E                                      u10681 19EC  
                                    u11537 49BC                                      u11801 08DE  
                                    u11721 05D4                                      u11641 0374  
                                    u11561 0166                                      u10930 2038  
                                    u10850 1EE2                                      u10770 1CBA  
                                    u10690 19FE                                      u11490 4932  
                                    u11810 08E6                                      u11730 060E  
                                    u11650 037C                                      u11570 0192  
                                    u10931 2034                                      u10851 1EDE  
                                    u10771 1CB6                                      u10691 19FA  
                                    u11491 492E                                      u11731 060A  
                                    u11571 018E                                      u10940 2096  
                                    u10860 1EFE                                      u10780 1D5E  
                                    u11900 0D60                                      u11820 08FE  
                                    u11740 0684                                      u11660 0394  
                                    u11580 01D6                                      u10941 2090  
                                    u10861 1EFA                                      u10781 1D5A  
                                    u11901 0D5C                                      u11821 08FA  
                                    u11741 0680                                      u11661 0390  
                                    u11581 01D2                                      u10950 2098  
                                    u10870 1F10                                      u10790 1D70  
                                    u11910 0DD2                                      u11830 09AC  
                                    u11750 06AA                                      u11670 03C8  
                                    u11590 0254                                      u10871 1F0C  
                                    u10791 1D6C                                      u11487 4918  
                                    u11911 0DCE                                      u11831 09A8  
                                    u11751 06A6                                      u11671 03C4  
                                    u11591 024E                                      u10960 20AE  
                                    u10880 1F1E                                      u11920 0E80  
                                    u11840 0A62                                      u11760 072E  
                                    u11680 040C                                      u10961 20AA  
                                    u10881 1F1A                                      u11921 0E7C  
                                    u11841 0A5E                                      u11761 072A  
                                    u11681 0408                                      u10890 1F54  
                                    u10970 3AEA                                      u11930 0F0C  
                                    u11850 0ADA                                      u11770 0764  
                                    u11690 0466                                      u10891 1F50  
                                    u10971 3AE6                                      u11931 0F08  
                                    u11851 0AD6                                      u11771 0760  
                                    u11691 0462                                      u10980 3B08  
                                    u11940 0FC2                                      u11860 0B60  
                                    u11780 07CA                                      u10981 3B04  
                                    u11941 0FBE                                      u11861 0B5C  
                                    u11781 07C6                                      u10990 3BC2  
                                    u11950 103A                                      u11870 0BE8  
                                    u11790 087A                                      u11951 1036  
                                    u11871 0BE4                                      u11791 0876  
                                    u11960 10C0                                      u11880 0C6E  
                          __end_of___lomod 4FBA                                      u11961 10BC  
                                    u11881 0C6A                                      u11970 1148  
                                    u11890 0CE0                                      u10995 3BB0  
                                    u11971 1144                                      u11891 0CDC  
                                    u11980 117E                                      u11981 117A  
                                    u11990 1260                                      u11991 125C  
                                    i2l105 5CE0                                      i2l291 5BC2  
                                    i2l462 5B6C                                      i2l286 5AB0  
                                    i2l458 5CD0                                      i2l468 5CE2  
                          ___awdiv@counter 0008                               vfpfcnvrt@fmt 0048  
                             vfpfcnvrt@llu 00B4                                      _TMR1H 000FCF  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                             ?_INT0_CallBack 0001  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_WRT0$OFF 000000  
                          ??_lcd_draw_char 0017                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                         __size_of_S3_toggle 002A  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_msDelay 5B12  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 5C52  
                                    _flags 00EE                                      _errno 00E8  
                                    _fputc 4FBA                            __end_of_isalpha 592C  
                                    _fputs 582A                            __end_of_isdigit 5A46  
                                    atoi@n 0018                                      pad@fp 0014  
                                    atoi@s 000B                                      _width 00EC  
                                    ctoa@c 0021                                      _putch 5CDE  
                                    ctoa@w 0022                                      dtoa@d 0021  
                                    dtoa@i 0041                                      dtoa@n 0039  
                                    dtoa@p 0033                                      dtoa@s 0037  
                                    dtoa@w 0035                           __end_of_SPI_Open 536E  
                          __end_of_islower 599E                            __end_of_isspace 56C8  
                  __end_of_TMR1_Initialize 5B9A                            __end_of_isupper 59D6  
                                    pclath 000FFA                                      tablat 000FF5  
                                    otoa@d 0021                                      otoa@i 003F  
                                    otoa@n 0037                                      otoa@p 0031  
                                    otoa@t 0033                                      otoa@w 0035  
                                    plusw1 000FE3                                      plusw2 000FDB  
                                    stoa@i 0019                                      stoa@l 0021  
                                    stoa@p 001F                                      stoa@s 000F  
                                    stoa@w 001B                                      ttemp5 005B  
                                    ttemp6 005E                                      ttemp7 0062  
                                    utoa@d 0021                                      utoa@i 003D  
                                    utoa@n 0035                                      utoa@p 0031  
                                    utoa@w 0033                                      status 000FD8  
                                    wtemp8 005B                             ?___fpclassifyf 0004  
                          __end_of_tolower 555E                                      xtoa@c 0044  
                                    xtoa@d 0021                                      xtoa@i 0042  
                                    xtoa@n 003A                                      xtoa@p 0036  
                                    xtoa@w 0038                                      xtoa@x 0029  
                          __end_of_strncmp 49E2                            __end_of_toupper 55BC  
                           lcd_fill@height 000F                           ___lodiv@dividend 0004  
                          ?_SPI_Initialize 0001            ??_IOCB4_DefaultInterruptHandler 0001  
                             _toupper$2177 0010                            __initialization 5758  
                             __end_of_atoi 401A                               __end_of_ctoa 5676  
                             __end_of_main 44AC                               __end_of_dtoa 33EA  
                             __end_of_font FF95                               __end_of_otoa 3CCC  
                             __end_of_stoa 4328                               __end_of_utoa 3ADC  
                             __end_of_xtoa 36C6                          __end_of_IOCB4_ISR 5B40  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 000D  
                                   ??_ctoa 0022                                     ??_main 0058  
                                   ??_dtoa 0029                          ?_lcd_set_cursor_x 0007  
                        ?_lcd_set_cursor_y 0007                              lcd_send@value 0005  
                                   ??_otoa 0029                                     ??_stoa 0011  
                                   ??_utoa 0029                                     ??_xtoa 002A  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0009  
                       ??_lcd_set_cursor_y 0009                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0014                             lcd_draw_char@i 0022  
                           lcd_draw_char@j 0020                             lcd_draw_char@k 0021  
                 __end_of_SPI_ExchangeByte 5C22                             lcd_draw_char@x 000D  
                           lcd_draw_char@y 000F                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0004                                     STR_100 FFE3  
                                   ?_fputs 000D                                     STR_111 FFE6  
                                   STR_104 FFC3                                     STR_113 FFE6  
                                   _ADRESH 000FC4                                     STR_107 FFFB  
                                   STR_109 FFFB                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 0004                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                           __CFG_WDTEN$OFF 000000                                     i2l6431 5B9A  
                                   i2l6503 5B12                                     i2l6433 5BAE  
                                   i2l6505 5B26                                     i2l6435 5BBA  
                                   i2l6427 5A7C                                     i2l6429 5A8A  
                                   i2l6621 5C3A                                     i2l6623 5C4A  
                                   i2l6617 5CCA                                     i2l6625 5C4E  
                                   i2l6619 5CCC                                     i2l6567 5B40  
                                   i2l6569 5B54                                     i2l6961 0052  
                                   i2l6953 0012                                     i2l6955 0020  
                                   i2l6957 002E                                     i2l6959 0044  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 009A  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                         __end_of___xxtofl 3E80                            _global_bg_color 00F0  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0009  
                         __end_of_lcd_fill 549A                               vfprintf@cfmt 0056  
                         __end_of_lcd_init 3104                          __end_of_S3_toggle 5BC4  
                         __end_of_lcd_send 5C3A                                     ___flge 4BF8  
                                   ___fleq 536E                                  ??___aodiv 0014  
                                ??___fladd 000C                                  ??___aomod 0014  
                                   ___wmul 5BC4                                  ??___fldiv 000C  
                                ??___awdiv 0008                                  ??___flneg 0008  
                           __CFG_STVREN$ON 000000                                  ??___awmod 0008  
                                ??___flmul 001A                                  ??___flsub 0033  
                                ??___fltol 0008                                  ??___lodiv 0014  
                                ??___lomod 0014                                     _efgtoa 154A  
                                   _floorf 36C6                                     clear_0 577E  
                                   clear_1 578A                           ___awdiv@quotient 000A  
                          ___awmod@divisor 0006                            ___awmod@counter 0008  
                                   pad@buf 0016                                     ctoa@fp 001F  
                          ??_INT0_CallBack 0001                                     dtoa@fp 001F  
                                   _strcpy 55BC                                     _strlen 5A46  
                                ??_msDelay 0004                                     fputc@c 0004  
                                   fputs@c 0011                                     fputs@i 0012  
                                   fputs@s 000D                                  ??_isalpha 0006  
                                ??_isdigit 0006                            ___fpclassifyf@e 000C  
                          ___fpclassifyf@u 000E                            ___fpclassifyf@x 0004  
                                ??_islower 0006                               __mediumconst F1C8  
                                ??_isspace 0006                                     otoa@fp 001F  
                                   tblptrh 000FF7                                  ??_isupper 0006  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0008                                     stoa@cp 001D  
                                   stoa@fp 000D                                     putch@c 0001  
                         __end_of_vfprintf 54FE                                     utoa@fp 001F  
 INT0_SetInterruptHandler@InterruptHandler 0004  IOCB4_SetInterruptHandler@InterruptHandler 0004  
                         ?_PIN_MANAGER_IOC 0001                           __end_of_snprintf 5AE4  
                                ??_tolower 000C                                     xtoa@fp 001F  
                                ??_strncmp 000A                                  ??_toupper 000C  
            __size_of_INTERRUPT_Initialize 0004                                 ___flge@ff1 002B  
                               ___flge@ff2 002F                            ??___fpclassifyf 0008  
                         ?_TMR1_Initialize 0001                               ___xxtofl@arg 000E  
                             ___xxtofl@exp 000D                          _SYSTEM_Initialize 5BEA  
                             ___xxtofl@val 0004                                 ___fleq@ff1 0004  
                               ___fleq@ff2 0008                                 __accesstop 0060  
                 __size_of_lcd_draw_string 0132                    __end_of__initialization 5794  
                                ?_INT0_ISR 0001                                 ___flneg@f1 0004  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0004                             __pcstackCOMRAM 0001  
                             __pidataBANK1 5CD2                        ??_SYSTEM_Initialize 0006  
                            __end_of_fputc 5084                              __end_of_fputs 586E  
    __end_of_IOCB4_DefaultInterruptHandler 5CE2     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 5CE0                              __end_of_putch 5CE0  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0006  
                         ??_lcd_set_cursor 000D                __size_of_EXT_INT_Initialize 0014  
                   fp__IOCB4_InterruptCall 0000                                    ??_fputc 0008  
                __end_of_SYSTEM_Initialize 5C08                                    ??_fputs 0011  
                                  ??_putch 0004                                 __pbssBANK0 00DC  
                               __pbssBANK1 0100                            __CFG_PLLCFG$OFF 000000  
                    _INT0_InterruptHandler 00F8                                 ??_INT0_ISR 0001  
                                  ?___flge 002B                                    ?___fleq 0004  
                               _code_digit 00F2                                    ?___wmul 0004  
                                  ?_efgtoa 0037                                    ?_floorf 001D  
                               ??_SPI_Open 0004                    __size_of_ADC_Initialize 0016  
                                  ?_strcpy 0004                                    ?_strlen 0004  
                         __CFG_CANMX$PORTB 000000                                  ?___xxtofl 0004  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 14E4                                    _OSCTUNE 000F9B  
             __size_of_IOCB4_InterruptCall 0036                                    _POT_VAL 00E4  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 000D                                  ?_lcd_init 0001  
                                ?_lcd_send 0005                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0004                           ??_SPI_Initialize 0004  
                _IOCB4_SetInterruptHandler 5CB6          __size_of_INT0_SetInterruptHandler 000A  
                ?_INT0_SetInterruptHandler 0004                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 00F6                                    __Hparam 0000  
                                  __Lparam 0000                         __size_of_vsnprintf 0110  
                        ??_lcd_draw_string 002D                            __size_of___flge 0104  
                          __size_of___fleq 00AA                                    ___aodiv 401A  
                                  ___fladd 20FA                                    ___aomod 4626  
                                  ___fldiv 29E4                                    ___awdiv 514A  
                                  ___flneg 59D6                                    ___awmod 520E  
                                  ___flmul 25BA                                    ___flsub 579E  
                                  ___fltol 4AF2                            __size_of___wmul 0026  
                                  ___lodiv 4DFA                                    ___lomod 4EEA  
                                ?_vfprintf 0050                            __size_of_efgtoa 0BB0  
                                ?_snprintf 00D2                            __size_of_floorf 0212  
                                  __pcinit 5758                                    __ramtop 0F00  
                                  __ptext0 4328                                    __ptext1 5AB2  
                                  __ptext2 49E2                                    __ptext3 549A  
                                  __ptext4 0066                                    __ptext5 33EA  
                                  __ptext6 555E                                    __ptext7 5966  
                                  __ptext8 58F0                                    __ptext9 38D8  
                                  _msDelay 5AE4                                  _IOCB4_ISR 5B12  
                          __size_of_strcpy 005E                            __size_of_strlen 0036  
                                _T1CONbits 000FCD                      _OSCILLATOR_Initialize 5CA4  
                             __size_of_abs 0040                               __size_of_pad 00C6  
                                  _isalpha 58F0                                    _isdigit 5A0E  
                               ??___xxtofl 0008                           ___awmod@dividend 0004  
                                  _islower 5966                   ??_PIN_MANAGER_Initialize 0006  
                                  _isspace 5676                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 599E                                    efgtoa@c 003D  
                                  efgtoa@d 0078                                    efgtoa@e 0090  
                                  efgtoa@f 0039                                    efgtoa@g 008C  
                                  efgtoa@h 0082                                    efgtoa@i 008A  
                                  efgtoa@l 0086                                    efgtoa@m 0074  
                                  efgtoa@n 0092                                    efgtoa@p 007C  
                                  efgtoa@t 0070                                    efgtoa@u 0094  
                                  efgtoa@w 007F                                    atoi@neg 0011  
                    __end_of_lcd_draw_char 4626                 __size_of_SYSTEM_Initialize 001E  
                               ??_lcd_fill 000F                                    _tolower 54FE  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 0013  
                                _BUT_COMUT 00F4                                 ??_lcd_send 0006  
                                  _strncmp 48BC                                    _toupper 555E  
                     end_of_initialization 5794                                    floorf@e 002B  
                                  floorf@m 0027                                    floorf@u 002D  
                                  floorf@x 001D                         ??_SPI_ExchangeByte 0004  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 0006                                    fputs@fp 000F  
                      lcd_draw_char@fIndex 0011                          __end_of_vfpfcnvrt 154A  
                               efgtoa@mode 0081                                 efgtoa@sign 007A  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                           lcd_fill@bg_color 000D  
                               ??_vfprintf 0056                                 ??_snprintf 0058  
                                  strcpy@d 000C                                    strlen@a 0006  
                                  strcpy@s 000A                                    strlen@s 0004  
                                _S3_toggle 5B9A                          lcd_draw_string@pS 0027  
                                _PORTBbits 000F81                          _spi_configuration FF95  
                               ?_IOCB4_ISR 0001                                ___fladd@grs 0013  
                         __CFG_FOSC$INTIO2 000000                              ___xxtofl@sign 000C  
                                _TRISCbits 000F94                          __end_of_vsnprintf 4AF2  
                              ___fldiv@grs 0017                                ___fldiv@rem 0010  
                              ___flmul@grs 0020                                 lcd_send@dc 0006  
                        __size_of_INT0_ISR 0008               __end_of_INTERRUPT_Initialize 5CDE  
                     SPI_ExchangeByte@data 0004                             __end_of___flge 4CFC  
                           __end_of___fleq 5418       __end_of_INT0_DefaultInterruptHandler 5CE4  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 5CE2  
                __end_of_spi_configuration FF99                                vfpfcnvrt@ap 004A  
                              vfpfcnvrt@cp 0098                                vfpfcnvrt@ct 00A6  
                              vfpfcnvrt@fp 0046                                vfpfcnvrt@ll 00A9  
                           __end_of___wmul 5BEA                                vfpfcnvrt@vp 00B1  
                               ?_S3_toggle 0001                             __end_of_efgtoa 20FA  
                           _ADC_Initialize 5C68                             __end_of_floorf 38D8  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 00DC  
                    __end_of_INT0_CallBack 5B6E                          __size_of_SPI_Open 00B0  
                           __end_of_strcpy 561A                             __end_of_strlen 5A7C  
                      start_initialization 5758                            ___lodiv@divisor 000C  
                          ___lodiv@counter 001C            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 58F0                                __end_of_pad 514A  
                    __end_of___fpclassifyf 4DFA                   __size_of_PIN_MANAGER_IOC 0018  
           SPI_Open@spiUniqueConfiguration 0005                   __size_of_TMR1_Initialize 002C  
                              vfprintf@fmt 0052                        _IOCB4_InterruptCall 5A7C  
                                 ??___flge 0033                                   ??___fleq 000C  
                                 ??___wmul 0008                                   ??_efgtoa 003E  
                   __end_of_ADC_Initialize 5C7E                                __pdataBANK1 01B4  
                                 ??_floorf 0021                 __end_of_EXT_INT_Initialize 5C92  
          fp__INT0_DefaultInterruptHandler 0000              ?_INT0_DefaultInterruptHandler 0001  
                                 ??_strcpy 0008                                   ??_strlen 0006  
                              ??_IOCB4_ISR 0002                                  ___fladd@a 0008  
                                ___fladd@b 0004                    __size_of_lcd_draw_pixel 0016  
                             vsnprintf@cnt 00CA                               vsnprintf@fmt 00C0  
                                ___fldiv@a 0008                                  ___fldiv@b 0004  
                                ___flmul@a 0016                                  ___flmul@b 0012  
                              __pbssCOMRAM 0058                                  ___flsub@a 002F  
                                ___flsub@b 002B           __end_of_INT0_SetInterruptHandler 5CCA  
                            __pcstackBANK0 0060                              __pcstackBANK1 01BB  
                         ___aodiv@dividend 0004                       ?_IOCB4_InterruptCall 0001  
                              snprintf@fmt 00D6                          __size_of___xxtofl 01B4  
                          _lcd_draw_string 478A                           _lcd_set_cursor_x 5710  
                         _lcd_set_cursor_y 56C8                          __size_of_lcd_fill 0082  
                        __size_of_lcd_init 0386                          __size_of_lcd_send 0018  
                                _atoi$2040 0017                                  _atoi$2041 0015  
                                _atoi$2039 0013                                  __pnvBANK0 00F8  
                              _efgtoa$1403 006A                                _efgtoa$1404 006C  
                              _efgtoa$1405 006E                                _efgtoa$1394 0064  
                              _efgtoa$1395 0066                                _efgtoa$1399 0068  
                   _PIN_MANAGER_Initialize 57E4                                  _dtoa$1371 0031  
                                __pintcode 0008                              __pmediumconst F1C8  
                                 ?___aodiv 0004                                   ?___fladd 0004  
                                 ?___aomod 0004                                   ?___fldiv 0004  
                                 ?___awdiv 0004                           ___aodiv@quotient 0016  
                                 ?___flneg 0004                                   ?___awmod 0004  
                                 ?___flmul 0012                                   ?___flsub 002B  
                                 ?___fltol 0004                                   ?___lodiv 0004  
                                 ?___lomod 0004                            ?_ADC_Initialize 0001  
                              ??_S3_toggle 0001               ??_INTERRUPT_InterruptManager 0002  
                        __size_of_vfprintf 0064                          __size_of_snprintf 0032  
                                 ?_msDelay 0001                            ___lomod@divisor 000C  
                          ___lomod@counter 0014                                   ?_isalpha 0004  
                                 ?_isdigit 0004                                   ?_islower 0004  
                    ??_IOCB4_InterruptCall 0001                                   ?_isspace 0004  
                                 ?_isupper 0004                                   ?_tolower 000A  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0004                                   ?_toupper 000A  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 5CDA  
                  __size_of_lcd_set_cursor 0042                                   _INT0_ISR 5CCA  
                           ___wmul@product 0008                                   _IOCBbits 000F5A  
                                 _LATAbits 000F89                                   _LATEbits 000F8D  
                          lcd_set_cursor@x 0009                            lcd_set_cursor@y 000B  
      __size_of_INTERRUPT_InterruptManager 005A                                   _PIR1bits 000F9E  
                                 i2u810_40 5C4A                                   i2u810_41 5C46  
                    lcd_draw_string@lIndex 0033                                   i2u803_40 5B54  
                                 i2u803_41 5B50                                   i2u804_48 5B5A  
                                 i2u804_49 5B6C                                   i2u836_40 0020  
                                 i2u836_41 001C                                   i2u837_40 002E  
                                 i2u837_41 002A                                   i2u838_40 0044  
                                 i2u838_41 0040                                   i2u791_40 5B26  
                                 i2u839_40 0052                                   i2u791_41 5B22  
                                 i2u839_41 004E                                   i2u785_40 5A8A  
                                 i2u792_48 5B2C                                   i2u785_41 5A86  
                                 i2u792_49 5B3E                                   i2u786_40 5A9A  
                                 i2u786_41 5A94                                   i2u786_46 5A9C  
                                 i2u787_40 5BAE                                   i2u787_41 5BAA  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001A  
                         lcd_draw_string@k 0031                           lcd_draw_string@x 0023  
                         lcd_draw_string@y 0025                          ??_PIN_MANAGER_IOC 0002  
                                _vfpfcnvrt 0066                                  _xtoa$1441 0032  
                                _xtoa$1442 0034                                   _SPI_Open 52BE  
                        ??_TMR1_Initialize 0004                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0004                           __CFG_SOSCSEL$DIG 000000  
                  __end_of_lcd_draw_string 48BC             ??_INT0_DefaultInterruptHandler 0001  
                             _isspace$2079 000A                                  msDelay@ms 0005  
                               vfpfcnvrt@c 00B3                                 vfpfcnvrt@f 00A2  
                              _INTCON2bits 000FF1                                  copy_data0 576C  
                    ?_INTERRUPT_Initialize 0001                   _INT0_SetInterruptHandler 5CC0  
                                _vsnprintf 49E2                               fp__S3_toggle 0000  
                      lcd_draw_pixel@color 0007                                   __Hrparam 0000  
                               vfprintf@ap 0054                                   __Lrparam 0000  
                               vfprintf@fp 0050                          _ADC_GetConversion 592C  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0004                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0004                           __size_of___aodiv 0188  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039A                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                              vsnprintf@ap 00C2                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0106  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 0046                                 snprintf@ap 01BD  
                          ___aodiv@divisor 000C                            ___aodiv@counter 0014  
                   _IOCB4_InterruptHandler 00FC                             _lcd_draw_pixel 5C52  
                       ___fpclassifyf@F463 00E0                        ??_ADC_GetConversion 0006  
                         __size_of_msDelay 002E                                   ___xxtofl 3CCC  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 4EEA                                   __ptext11 4DFA  
                                 __ptext20 4CFC                                   __ptext12 48BC  
                                 __ptext21 4AF2                                   __ptext13 41A2  
                               _T1GCONbits 000FAA                                   __ptext30 514A  
                                 __ptext22 579E                                   __ptext14 3ADC  
                                 __ptext31 3104                                   __ptext23 20FA  
                                 __ptext15 154A                                   __ptext40 5CDE  
                                 __ptext32 58B0                                   __ptext24 59D6  
                                 __ptext16 54FE                                   __ptext41 3E80  
                                 __ptext33 4626                                   __ptext25 25BA  
                                 __ptext17 599E                                   __ptext50 586E  
                                 __ptext42 5676                                   __ptext34 401A  
                                 __ptext26 4BF8                                   __ptext18 55BC  
                                 __ptext51 56C8                                   __ptext43 5A0E  
                                 __ptext35 561A                                   __ptext27 536E  
                                 __ptext19 36C6                                   __ptext60 57E4  
                                 __ptext52 5710                                   __ptext44 5BC4  
                                 __ptext36 5084                                   __ptext28 29E4  
                                 __ptext61 5CB6                                   __ptext53 5C52  
                                 __ptext45 2D7E                                   __ptext37 5A46  
                                 __ptext29 520E                                   __ptext70 5C3A  
                                 __ptext62 5CA4                                   __ptext54 5C22  
                                 __ptext46 5AE4                                   __ptext38 582A  
                                 __ptext71 5B12                                   __ptext63 5CDA  
                                 __ptext55 5C08                                   __ptext47 5418  
                                 __ptext39 4FBA                                   __ptext72 5CE0  
                                 __ptext64 5C7E                                   __ptext56 3CCC  
                                 __ptext48 478A                                   __ptext73 5A7C  
                                 __ptext65 5CC0                                   __ptext57 5BEA  
                                 __ptext49 44AC                                   __ptext74 5CCA  
                                 __ptext66 5C68                                   __ptext58 5B6E  
                                 __ptext75 5B40                                   __ptext67 52BE  
                                 __ptext59 5C92                                   __ptext76 5CE2  
                                 __ptext68 592C                                   __ptext77 5B9A  
                                 __ptext78 0000                           __size_of_isupper 0038  
                                 _lcd_fill 5418                                   _lcd_init 2D7E  
                                 _lcd_send 5C22                           __size_of_tolower 0060  
                               strcpy@dest 0004                           __size_of_strncmp 0126  
                         __size_of_toupper 005E                                 ?_vsnprintf 00BC  
                            __size_of_atoi 019A                              __size_of_ctoa 005C  
                            __size_of_main 0184                              __size_of_dtoa 02E6  
                            __size_of_otoa 01F0                              __size_of_stoa 0186  
                            __size_of_utoa 0204                              __size_of_xtoa 02DC  
                __end_of_ADC_GetConversion 5966                                   efgtoa@fp 0037  
                                 efgtoa@ne 0076                                   efgtoa@pp 0072  
                                 efgtoa@ou 0060                                  stoa@F1174 01B4  
                    lcd_draw_char@bg_color 0015                                   int$flags 005A  
                                 _vfprintf 549A                      lcd_draw_char@fg_color 0013  
       __end_of_INTERRUPT_InterruptManager 0062                 _INTERRUPT_InterruptManager 0008  
                   __end_of_lcd_draw_pixel 5C68                                   _snprintf 5AB2  
                 __end_of_lcd_set_cursor_x 5758                   __end_of_lcd_set_cursor_y 5710  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0006  
                         ___aomod@dividend 0004                             _vfpfcnvrt$1456 009C  
                           _vfpfcnvrt$1457 009E                             _vfpfcnvrt$1478 00A0  
                               _INTCONbits 000FF2                           ?_lcd_draw_string 0023  
                                 isalpha@c 0004                                   isdigit@c 0004  
                   ??_INTERRUPT_Initialize 0004                                 vsnprintf@f 00CC  
                               vsnprintf@n 00BE                                 vsnprintf@s 00BC  
                       _EXT_INT_Initialize 5C7E                              _lcd_draw_char 44AC  
                                snprintf@n 00D4                                  snprintf@s 00D2  
                                 intlevel2 0000                             _lcd_set_cursor 586E  
                        lcd_set_cursor_x@x 0007                          lcd_set_cursor_y@y 0007  
                                 islower@c 0004                                   isspace@c 0004  
                  ?_PIN_MANAGER_Initialize 0001                        ?_EXT_INT_Initialize 0001  
                                strcpy@src 0006                                   isupper@c 0004  
                                strncmp@_l 0004                                  strncmp@_r 0006  
                         ??_ADC_Initialize 0004                     __size_of_INT0_CallBack 002E  
                         _SPI_ExchangeByte 5C08                    lcd_draw_string@bg_color 002B  
                              efgtoa@nmode 007E                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 000C                    lcd_draw_string@fg_color 0029  
                          ?_lcd_draw_pixel 0007                                ??_vfpfcnvrt 004C  
                                 stoa@nuls 0012                            ___aomod@counter 0014  
                     ??_EXT_INT_Initialize 0006                                   tolower@c 000A  
                           _vsnprintf$2209 00C8                     __size_of___fpclassifyf 00FE  
                                 strncmp@l 000B                                   strncmp@n 0008  
                                 strncmp@r 000D                                   toupper@c 000A  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 58B0  
                           ?_lcd_draw_char 000D                              ___fladd@signs 0010  
                             ___aodiv@sign 0015             __end_of_PIN_MANAGER_Initialize 582A  
                              ??_vsnprintf 00C4                               ___fladd@aexp 0011  
                             ___fladd@bexp 0012                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 5C3A                 __size_of_ADC_GetConversion 003A  
                             ___aomod@sign 0015                            _TMR1_Initialize 5B6E  
