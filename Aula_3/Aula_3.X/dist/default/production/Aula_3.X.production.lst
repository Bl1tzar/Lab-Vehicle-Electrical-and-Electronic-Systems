

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 28 11:53:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           ; Version 2.10
    94                           ; Generated 31/07/2019 GMT
    95                           ; 
    96                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F46K80 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     
   128                           	psect	idataCOMRAM
   129  0043BA                     __pidataCOMRAM:
   130                           	opt callstack 0
   131                           
   132                           ;initializer for stoa@F1152
   133  0043BA  28                 	db	40
   134  0043BB  6E                 	db	110
   135  0043BC  75                 	db	117
   136  0043BD  6C                 	db	108
   137  0043BE  6C                 	db	108
   138  0043BF  29                 	db	41
   139  0043C0  00                 	db	0
   140                           
   141                           	psect	mediumconst
   142  00F1DE                     __pmediumconst:
   143                           	opt callstack 0
   144  00F1DE  00                 	db	0
   145  00F1DF                     _font:
   146                           	opt callstack 0
   147  00F1DF  0004               	dw	4
   148  00F1E1  0000               	dw	0
   149  00F1E3  0000               	dw	0
   150  00F1E5  0000               	dw	0
   151  00F1E7  0000               	dw	0
   152  00F1E9  0000               	dw	0
   153  00F1EB  0000               	dw	0
   154  00F1ED  0000               	dw	0
   155  00F1EF  0000               	dw	0
   156  00F1F1  0003               	dw	3
   157  00F1F3  0000               	dw	0
   158  00F1F5  0000               	dw	0
   159  00F1F7  00FE               	dw	254
   160  00F1F9  001B               	dw	27
   161  00F1FB  0000               	dw	0
   162  00F1FD  0000               	dw	0
   163  00F1FF  0005               	dw	5
   164  00F201  001E               	dw	30
   165  00F203  0000               	dw	0
   166  00F205  0000               	dw	0
   167  00F207  0000               	dw	0
   168  00F209  0000               	dw	0
   169  00F20B  0000               	dw	0
   170  00F20D  001E               	dw	30
   171  00F20F  0000               	dw	0
   172  00F211  0000               	dw	0
   173  00F213  0000               	dw	0
   174  00F215  000B               	dw	11
   175  00F217  0000               	dw	0
   176  00F219  0000               	dw	0
   177  00F21B  0010               	dw	16
   178  00F21D  0001               	dw	1
   179  00F21F  0010               	dw	16
   180  00F221  001D               	dw	29
   181  00F223  00F0               	dw	240
   182  00F225  0003               	dw	3
   183  00F227  001E               	dw	30
   184  00F229  0001               	dw	1
   185  00F22B  0010               	dw	16
   186  00F22D  0001               	dw	1
   187  00F22F  0010               	dw	16
   188  00F231  001D               	dw	29
   189  00F233  00F0               	dw	240
   190  00F235  0003               	dw	3
   191  00F237  001E               	dw	30
   192  00F239  0001               	dw	1
   193  00F23B  0010               	dw	16
   194  00F23D  0001               	dw	1
   195  00F23F  0000               	dw	0
   196  00F241  0000               	dw	0
   197  00F243  0009               	dw	9
   198  00F245  0000               	dw	0
   199  00F247  0004               	dw	4
   200  00F249  001C               	dw	28
   201  00F24B  0008               	dw	8
   202  00F24D  0022               	dw	34
   203  00F24F  0010               	dw	16
   204  00F251  0042               	dw	66
   205  00F253  0010               	dw	16
   206  00F255  00FF               	dw	255
   207  00F257  007F               	dw	127
   208  00F259  0042               	dw	66
   209  00F25B  0010               	dw	16
   210  00F25D  0084               	dw	132
   211  00F25F  0010               	dw	16
   212  00F261  0000               	dw	0
   213  00F263  000F               	dw	15
   214  00F265  0000               	dw	0
   215  00F267  0000               	dw	0
   216  00F269  000C               	dw	12
   217  00F26B  001C               	dw	28
   218  00F26D  0000               	dw	0
   219  00F26F  0022               	dw	34
   220  00F271  0010               	dw	16
   221  00F273  0022               	dw	34
   222  00F275  0008               	dw	8
   223  00F277  0022               	dw	34
   224  00F279  0006               	dw	6
   225  00F27B  001C               	dw	28
   226  00F27D  0001               	dw	1
   227  00F27F  00C0               	dw	192
   228  00F281  0000               	dw	0
   229  00F283  0020               	dw	32
   230  00F285  000E               	dw	14
   231  00F287  0018               	dw	24
   232  00F289  0011               	dw	17
   233  00F28B  0004               	dw	4
   234  00F28D  0011               	dw	17
   235  00F28F  0002               	dw	2
   236  00F291  0011               	dw	17
   237  00F293  0000               	dw	0
   238  00F295  000E               	dw	14
   239  00F297  0000               	dw	0
   240  00F299  0000               	dw	0
   241  00F29B  000B               	dw	11
   242  00F29D  0000               	dw	0
   243  00F29F  0000               	dw	0
   244  00F2A1  0000               	dw	0
   245  00F2A3  000E               	dw	14
   246  00F2A5  001C               	dw	28
   247  00F2A7  0011               	dw	17
   248  00F2A9  00A2               	dw	162
   249  00F2AB  0010               	dw	16
   250  00F2AD  00C2               	dw	194
   251  00F2AF  0010               	dw	16
   252  00F2B1  0022               	dw	34
   253  00F2B3  0011               	dw	17
   254  00F2B5  001C               	dw	28
   255  00F2B7  000A               	dw	10
   256  00F2B9  0000               	dw	0
   257  00F2BB  000C               	dw	12
   258  00F2BD  0000               	dw	0
   259  00F2BF  000C               	dw	12
   260  00F2C1  0000               	dw	0
   261  00F2C3  0012               	dw	18
   262  00F2C5  0000               	dw	0
   263  00F2C7  0000               	dw	0
   264  00F2C9  0003               	dw	3
   265  00F2CB  0000               	dw	0
   266  00F2CD  0000               	dw	0
   267  00F2CF  001E               	dw	30
   268  00F2D1  0000               	dw	0
   269  00F2D3  0000               	dw	0
   270  00F2D5  0000               	dw	0
   271  00F2D7  0006               	dw	6
   272  00F2D9  0000               	dw	0
   273  00F2DB  0000               	dw	0
   274  00F2DD  0000               	dw	0
   275  00F2DF  0000               	dw	0
   276  00F2E1  00E0               	dw	224
   277  00F2E3  001F               	dw	31
   278  00F2E5  001C               	dw	28
   279  00F2E7  0060               	dw	96
   280  00F2E9  0002               	dw	2
   281  00F2EB  0080               	dw	128
   282  00F2ED  0000               	dw	0
   283  00F2EF  0000               	dw	0
   284  00F2F1  0004               	dw	4
   285  00F2F3  0000               	dw	0
   286  00F2F5  0000               	dw	0
   287  00F2F7  0006               	dw	6
   288  00F2F9  00C0               	dw	192
   289  00F2FB  00F8               	dw	248
   290  00F2FD  003F               	dw	63
   291  00F2FF  0000               	dw	0
   292  00F301  0000               	dw	0
   293  00F303  0006               	dw	6
   294  00F305  0024               	dw	36
   295  00F307  0000               	dw	0
   296  00F309  0018               	dw	24
   297  00F30B  0000               	dw	0
   298  00F30D  007E               	dw	126
   299  00F30F  0000               	dw	0
   300  00F311  0018               	dw	24
   301  00F313  0000               	dw	0
   302  00F315  0024               	dw	36
   303  00F317  0000               	dw	0
   304  00F319  0000               	dw	0
   305  00F31B  0000               	dw	0
   306  00F31D  0009               	dw	9
   307  00F31F  0000               	dw	0
   308  00F321  0000               	dw	0
   309  00F323  0080               	dw	128
   310  00F325  0000               	dw	0
   311  00F327  0080               	dw	128
   312  00F329  0000               	dw	0
   313  00F32B  0080               	dw	128
   314  00F32D  0000               	dw	0
   315  00F32F  00F0               	dw	240
   316  00F331  0007               	dw	7
   317  00F333  0080               	dw	128
   318  00F335  0000               	dw	0
   319  00F337  0080               	dw	128
   320  00F339  0000               	dw	0
   321  00F33B  0080               	dw	128
   322  00F33D  0000               	dw	0
   323  00F33F  0000               	dw	0
   324  00F341  0000               	dw	0
   325  00F343  0004               	dw	4
   326  00F345  0000               	dw	0
   327  00F347  0000               	dw	0
   328  00F349  0000               	dw	0
   329  00F34B  0060               	dw	96
   330  00F34D  0000               	dw	0
   331  00F34F  0018               	dw	24
   332  00F351  0000               	dw	0
   333  00F353  0000               	dw	0
   334  00F355  0005               	dw	5
   335  00F357  0000               	dw	0
   336  00F359  0001               	dw	1
   337  00F35B  0000               	dw	0
   338  00F35D  0001               	dw	1
   339  00F35F  0000               	dw	0
   340  00F361  0001               	dw	1
   341  00F363  0000               	dw	0
   342  00F365  0001               	dw	1
   343  00F367  0000               	dw	0
   344  00F369  0000               	dw	0
   345  00F36B  0004               	dw	4
   346  00F36D  0000               	dw	0
   347  00F36F  0000               	dw	0
   348  00F371  0000               	dw	0
   349  00F373  0018               	dw	24
   350  00F375  0000               	dw	0
   351  00F377  0018               	dw	24
   352  00F379  0000               	dw	0
   353  00F37B  0000               	dw	0
   354  00F37D  0008               	dw	8
   355  00F37F  0000               	dw	0
   356  00F381  0000               	dw	0
   357  00F383  0000               	dw	0
   358  00F385  0040               	dw	64
   359  00F387  0000               	dw	0
   360  00F389  0038               	dw	56
   361  00F38B  0000               	dw	0
   362  00F38D  0007               	dw	7
   363  00F38F  00E0               	dw	224
   364  00F391  0000               	dw	0
   365  00F393  001C               	dw	28
   366  00F395  0000               	dw	0
   367  00F397  0002               	dw	2
   368  00F399  0000               	dw	0
   369  00F39B  0000               	dw	0
   370  00F39D  0000               	dw	0
   371  00F39F  0009               	dw	9
   372  00F3A1  00F8               	dw	248
   373  00F3A3  0007               	dw	7
   374  00F3A5  0004               	dw	4
   375  00F3A7  0008               	dw	8
   376  00F3A9  0002               	dw	2
   377  00F3AB  0010               	dw	16
   378  00F3AD  0002               	dw	2
   379  00F3AF  0010               	dw	16
   380  00F3B1  0002               	dw	2
   381  00F3B3  0010               	dw	16
   382  00F3B5  0002               	dw	2
   383  00F3B7  0010               	dw	16
   384  00F3B9  0004               	dw	4
   385  00F3BB  0008               	dw	8
   386  00F3BD  00F8               	dw	248
   387  00F3BF  0007               	dw	7
   388  00F3C1  0000               	dw	0
   389  00F3C3  0000               	dw	0
   390  00F3C5  0006               	dw	6
   391  00F3C7  0000               	dw	0
   392  00F3C9  0000               	dw	0
   393  00F3CB  0000               	dw	0
   394  00F3CD  0000               	dw	0
   395  00F3CF  0002               	dw	2
   396  00F3D1  0000               	dw	0
   397  00F3D3  0002               	dw	2
   398  00F3D5  0000               	dw	0
   399  00F3D7  00FE               	dw	254
   400  00F3D9  001F               	dw	31
   401  00F3DB  0000               	dw	0
   402  00F3DD  0000               	dw	0
   403  00F3DF  0009               	dw	9
   404  00F3E1  0018               	dw	24
   405  00F3E3  0010               	dw	16
   406  00F3E5  0004               	dw	4
   407  00F3E7  0018               	dw	24
   408  00F3E9  0002               	dw	2
   409  00F3EB  0014               	dw	20
   410  00F3ED  0002               	dw	2
   411  00F3EF  0012               	dw	18
   412  00F3F1  0002               	dw	2
   413  00F3F3  0011               	dw	17
   414  00F3F5  0082               	dw	130
   415  00F3F7  0010               	dw	16
   416  00F3F9  0044               	dw	68
   417  00F3FB  0010               	dw	16
   418  00F3FD  0038               	dw	56
   419  00F3FF  0010               	dw	16
   420  00F401  0000               	dw	0
   421  00F403  0000               	dw	0
   422  00F405  0009               	dw	9
   423  00F407  0008               	dw	8
   424  00F409  000C               	dw	12
   425  00F40B  0004               	dw	4
   426  00F40D  0010               	dw	16
   427  00F40F  0002               	dw	2
   428  00F411  0010               	dw	16
   429  00F413  0042               	dw	66
   430  00F415  0010               	dw	16
   431  00F417  0042               	dw	66
   432  00F419  0010               	dw	16
   433  00F41B  0044               	dw	68
   434  00F41D  0010               	dw	16
   435  00F41F  00B8               	dw	184
   436  00F421  0008               	dw	8
   437  00F423  0000               	dw	0
   438  00F425  0007               	dw	7
   439  00F427  0000               	dw	0
   440  00F429  0000               	dw	0
   441  00F42B  0009               	dw	9
   442  00F42D  0000               	dw	0
   443  00F42F  0002               	dw	2
   444  00F431  0000               	dw	0
   445  00F433  0003               	dw	3
   446  00F435  0080               	dw	128
   447  00F437  0002               	dw	2
   448  00F439  0060               	dw	96
   449  00F43B  0002               	dw	2
   450  00F43D  0010               	dw	16
   451  00F43F  0002               	dw	2
   452  00F441  0008               	dw	8
   453  00F443  0002               	dw	2
   454  00F445  00FE               	dw	254
   455  00F447  001F               	dw	31
   456  00F449  0000               	dw	0
   457  00F44B  0002               	dw	2
   458  00F44D  0000               	dw	0
   459  00F44F  0000               	dw	0
   460  00F451  0009               	dw	9
   461  00F453  0000               	dw	0
   462  00F455  0004               	dw	4
   463  00F457  0070               	dw	112
   464  00F459  0008               	dw	8
   465  00F45B  002E               	dw	46
   466  00F45D  0010               	dw	16
   467  00F45F  0022               	dw	34
   468  00F461  0010               	dw	16
   469  00F463  0022               	dw	34
   470  00F465  0010               	dw	16
   471  00F467  0022               	dw	34
   472  00F469  0010               	dw	16
   473  00F46B  0042               	dw	66
   474  00F46D  0008               	dw	8
   475  00F46F  0082               	dw	130
   476  00F471  0007               	dw	7
   477  00F473  0000               	dw	0
   478  00F475  0000               	dw	0
   479  00F477  0009               	dw	9
   480  00F479  0000               	dw	0
   481  00F47B  0000               	dw	0
   482  00F47D  0000               	dw	0
   483  00F47F  0007               	dw	7
   484  00F481  00C0               	dw	192
   485  00F483  0008               	dw	8
   486  00F485  0060               	dw	96
   487  00F487  0010               	dw	16
   488  00F489  0058               	dw	88
   489  00F48B  0010               	dw	16
   490  00F48D  0044               	dw	68
   491  00F48F  0010               	dw	16
   492  00F491  0082               	dw	130
   493  00F493  0008               	dw	8
   494  00F495  0000               	dw	0
   495  00F497  0007               	dw	7
   496  00F499  0000               	dw	0
   497  00F49B  0000               	dw	0
   498  00F49D  0009               	dw	9
   499  00F49F  0000               	dw	0
   500  00F4A1  0000               	dw	0
   501  00F4A3  0002               	dw	2
   502  00F4A5  0010               	dw	16
   503  00F4A7  0002               	dw	2
   504  00F4A9  000C               	dw	12
   505  00F4AB  0002               	dw	2
   506  00F4AD  0003               	dw	3
   507  00F4AF  00C2               	dw	194
   508  00F4B1  0000               	dw	0
   509  00F4B3  0032               	dw	50
   510  00F4B5  0000               	dw	0
   511  00F4B7  000E               	dw	14
   512  00F4B9  0000               	dw	0
   513  00F4BB  0002               	dw	2
   514  00F4BD  0000               	dw	0
   515  00F4BF  0000               	dw	0
   516  00F4C1  0000               	dw	0
   517  00F4C3  0009               	dw	9
   518  00F4C5  0000               	dw	0
   519  00F4C7  0007               	dw	7
   520  00F4C9  0098               	dw	152
   521  00F4CB  0008               	dw	8
   522  00F4CD  0064               	dw	100
   523  00F4CF  0010               	dw	16
   524  00F4D1  0042               	dw	66
   525  00F4D3  0010               	dw	16
   526  00F4D5  0042               	dw	66
   527  00F4D7  0010               	dw	16
   528  00F4D9  0064               	dw	100
   529  00F4DB  0010               	dw	16
   530  00F4DD  0098               	dw	152
   531  00F4DF  0008               	dw	8
   532  00F4E1  0000               	dw	0
   533  00F4E3  0007               	dw	7
   534  00F4E5  0000               	dw	0
   535  00F4E7  0000               	dw	0
   536  00F4E9  0009               	dw	9
   537  00F4EB  0000               	dw	0
   538  00F4ED  0000               	dw	0
   539  00F4EF  0038               	dw	56
   540  00F4F1  0000               	dw	0
   541  00F4F3  0044               	dw	68
   542  00F4F5  0010               	dw	16
   543  00F4F7  0082               	dw	130
   544  00F4F9  0008               	dw	8
   545  00F4FB  0082               	dw	130
   546  00F4FD  0004               	dw	4
   547  00F4FF  0082               	dw	130
   548  00F501  0003               	dw	3
   549  00F503  0084               	dw	132
   550  00F505  0000               	dw	0
   551  00F507  0078               	dw	120
   552  00F509  0000               	dw	0
   553  00F50B  0000               	dw	0
   554  00F50D  0000               	dw	0
   555  00F50F  0004               	dw	4
   556  00F511  0000               	dw	0
   557  00F513  0000               	dw	0
   558  00F515  0030               	dw	48
   559  00F517  0018               	dw	24
   560  00F519  0030               	dw	48
   561  00F51B  0018               	dw	24
   562  00F51D  0000               	dw	0
   563  00F51F  0000               	dw	0
   564  00F521  0004               	dw	4
   565  00F523  0000               	dw	0
   566  00F525  0000               	dw	0
   567  00F527  0030               	dw	48
   568  00F529  0060               	dw	96
   569  00F52B  0030               	dw	48
   570  00F52D  0018               	dw	24
   571  00F52F  0000               	dw	0
   572  00F531  0000               	dw	0
   573  00F533  000A               	dw	10
   574  00F535  0000               	dw	0
   575  00F537  0000               	dw	0
   576  00F539  0080               	dw	128
   577  00F53B  0000               	dw	0
   578  00F53D  0080               	dw	128
   579  00F53F  0000               	dw	0
   580  00F541  0040               	dw	64
   581  00F543  0001               	dw	1
   582  00F545  0020               	dw	32
   583  00F547  0002               	dw	2
   584  00F549  0020               	dw	32
   585  00F54B  0002               	dw	2
   586  00F54D  0010               	dw	16
   587  00F54F  0004               	dw	4
   588  00F551  0010               	dw	16
   589  00F553  0004               	dw	4
   590  00F555  0008               	dw	8
   591  00F557  0008               	dw	8
   592  00F559  0000               	dw	0
   593  00F55B  0000               	dw	0
   594  00F55D  000A               	dw	10
   595  00F55F  0000               	dw	0
   596  00F561  0000               	dw	0
   597  00F563  0020               	dw	32
   598  00F565  0001               	dw	1
   599  00F567  0020               	dw	32
   600  00F569  0001               	dw	1
   601  00F56B  0020               	dw	32
   602  00F56D  0001               	dw	1
   603  00F56F  0020               	dw	32
   604  00F571  0001               	dw	1
   605  00F573  0020               	dw	32
   606  00F575  0001               	dw	1
   607  00F577  0020               	dw	32
   608  00F579  0001               	dw	1
   609  00F57B  0020               	dw	32
   610  00F57D  0001               	dw	1
   611  00F57F  0020               	dw	32
   612  00F581  0001               	dw	1
   613  00F583  0000               	dw	0
   614  00F585  0000               	dw	0
   615  00F587  000A               	dw	10
   616  00F589  0000               	dw	0
   617  00F58B  0000               	dw	0
   618  00F58D  0008               	dw	8
   619  00F58F  0008               	dw	8
   620  00F591  0010               	dw	16
   621  00F593  0004               	dw	4
   622  00F595  0010               	dw	16
   623  00F597  0004               	dw	4
   624  00F599  0020               	dw	32
   625  00F59B  0002               	dw	2
   626  00F59D  0020               	dw	32
   627  00F59F  0002               	dw	2
   628  00F5A1  0040               	dw	64
   629  00F5A3  0001               	dw	1
   630  00F5A5  0080               	dw	128
   631  00F5A7  0000               	dw	0
   632  00F5A9  0080               	dw	128
   633  00F5AB  0000               	dw	0
   634  00F5AD  0000               	dw	0
   635  00F5AF  0000               	dw	0
   636  00F5B1  0008               	dw	8
   637  00F5B3  0000               	dw	0
   638  00F5B5  0000               	dw	0
   639  00F5B7  000C               	dw	12
   640  00F5B9  0000               	dw	0
   641  00F5BB  0082               	dw	130
   642  00F5BD  0001               	dw	1
   643  00F5BF  0042               	dw	66
   644  00F5C1  0002               	dw	2
   645  00F5C3  0022               	dw	34
   646  00F5C5  001A               	dw	26
   647  00F5C7  0022               	dw	34
   648  00F5C9  001A               	dw	26
   649  00F5CB  009C               	dw	156
   650  00F5CD  0001               	dw	1
   651  00F5CF  0000               	dw	0
   652  00F5D1  0000               	dw	0
   653  00F5D3  000E               	dw	14
   654  00F5D5  0000               	dw	0
   655  00F5D7  0000               	dw	0
   656  00F5D9  00F0               	dw	240
   657  00F5DB  0003               	dw	3
   658  00F5DD  0008               	dw	8
   659  00F5DF  0004               	dw	4
   660  00F5E1  0004               	dw	4
   661  00F5E3  0008               	dw	8
   662  00F5E5  00C2               	dw	194
   663  00F5E7  0011               	dw	17
   664  00F5E9  0022               	dw	34
   665  00F5EB  0012               	dw	18
   666  00F5ED  0012               	dw	18
   667  00F5EF  0012               	dw	18
   668  00F5F1  0012               	dw	18
   669  00F5F3  0012               	dw	18
   670  00F5F5  00E2               	dw	226
   671  00F5F7  0011               	dw	17
   672  00F5F9  0012               	dw	18
   673  00F5FB  0012               	dw	18
   674  00F5FD  0004               	dw	4
   675  00F5FF  0012               	dw	18
   676  00F601  0008               	dw	8
   677  00F603  0009               	dw	9
   678  00F605  00F0               	dw	240
   679  00F607  0004               	dw	4
   680  00F609  0000               	dw	0
   681  00F60B  0000               	dw	0
   682  00F60D  000D               	dw	13
   683  00F60F  0000               	dw	0
   684  00F611  0000               	dw	0
   685  00F613  0000               	dw	0
   686  00F615  0010               	dw	16
   687  00F617  0000               	dw	0
   688  00F619  000E               	dw	14
   689  00F61B  0080               	dw	128
   690  00F61D  0001               	dw	1
   691  00F61F  0060               	dw	96
   692  00F621  0001               	dw	1
   693  00F623  001C               	dw	28
   694  00F625  0001               	dw	1
   695  00F627  0002               	dw	2
   696  00F629  0001               	dw	1
   697  00F62B  001C               	dw	28
   698  00F62D  0001               	dw	1
   699  00F62F  0060               	dw	96
   700  00F631  0001               	dw	1
   701  00F633  0080               	dw	128
   702  00F635  0001               	dw	1
   703  00F637  0000               	dw	0
   704  00F639  000E               	dw	14
   705  00F63B  0000               	dw	0
   706  00F63D  0010               	dw	16
   707  00F63F  0000               	dw	0
   708  00F641  0000               	dw	0
   709  00F643  0009               	dw	9
   710  00F645  0000               	dw	0
   711  00F647  0000               	dw	0
   712  00F649  0000               	dw	0
   713  00F64B  0000               	dw	0
   714  00F64D  00FE               	dw	254
   715  00F64F  001F               	dw	31
   716  00F651  0042               	dw	66
   717  00F653  0010               	dw	16
   718  00F655  0042               	dw	66
   719  00F657  0010               	dw	16
   720  00F659  0064               	dw	100
   721  00F65B  0010               	dw	16
   722  00F65D  0098               	dw	152
   723  00F65F  0008               	dw	8
   724  00F661  0000               	dw	0
   725  00F663  0007               	dw	7
   726  00F665  0000               	dw	0
   727  00F667  0000               	dw	0
   728  00F669  000D               	dw	13
   729  00F66B  0000               	dw	0
   730  00F66D  0000               	dw	0
   731  00F66F  00F0               	dw	240
   732  00F671  0003               	dw	3
   733  00F673  0008               	dw	8
   734  00F675  0004               	dw	4
   735  00F677  0004               	dw	4
   736  00F679  0008               	dw	8
   737  00F67B  0002               	dw	2
   738  00F67D  0010               	dw	16
   739  00F67F  0002               	dw	2
   740  00F681  0010               	dw	16
   741  00F683  0002               	dw	2
   742  00F685  0010               	dw	16
   743  00F687  0002               	dw	2
   744  00F689  0010               	dw	16
   745  00F68B  0002               	dw	2
   746  00F68D  0010               	dw	16
   747  00F68F  0004               	dw	4
   748  00F691  0008               	dw	8
   749  00F693  0004               	dw	4
   750  00F695  0008               	dw	8
   751  00F697  0008               	dw	8
   752  00F699  0004               	dw	4
   753  00F69B  0000               	dw	0
   754  00F69D  0000               	dw	0
   755  00F69F  000C               	dw	12
   756  00F6A1  0000               	dw	0
   757  00F6A3  0000               	dw	0
   758  00F6A5  0000               	dw	0
   759  00F6A7  0000               	dw	0
   760  00F6A9  00FE               	dw	254
   761  00F6AB  001F               	dw	31
   762  00F6AD  0002               	dw	2
   763  00F6AF  0010               	dw	16
   764  00F6B1  0002               	dw	2
   765  00F6B3  0010               	dw	16
   766  00F6B5  0002               	dw	2
   767  00F6B7  0010               	dw	16
   768  00F6B9  0002               	dw	2
   769  00F6BB  0010               	dw	16
   770  00F6BD  0002               	dw	2
   771  00F6BF  0010               	dw	16
   772  00F6C1  0004               	dw	4
   773  00F6C3  0008               	dw	8
   774  00F6C5  0008               	dw	8
   775  00F6C7  0004               	dw	4
   776  00F6C9  00F0               	dw	240
   777  00F6CB  0003               	dw	3
   778  00F6CD  0000               	dw	0
   779  00F6CF  0000               	dw	0
   780  00F6D1  0009               	dw	9
   781  00F6D3  0000               	dw	0
   782  00F6D5  0000               	dw	0
   783  00F6D7  0000               	dw	0
   784  00F6D9  0000               	dw	0
   785  00F6DB  00FE               	dw	254
   786  00F6DD  001F               	dw	31
   787  00F6DF  0042               	dw	66
   788  00F6E1  0010               	dw	16
   789  00F6E3  0042               	dw	66
   790  00F6E5  0010               	dw	16
   791  00F6E7  0042               	dw	66
   792  00F6E9  0010               	dw	16
   793  00F6EB  0042               	dw	66
   794  00F6ED  0010               	dw	16
   795  00F6EF  0042               	dw	66
   796  00F6F1  0010               	dw	16
   797  00F6F3  0000               	dw	0
   798  00F6F5  0000               	dw	0
   799  00F6F7  0008               	dw	8
   800  00F6F9  0000               	dw	0
   801  00F6FB  0000               	dw	0
   802  00F6FD  0000               	dw	0
   803  00F6FF  0000               	dw	0
   804  00F701  00FE               	dw	254
   805  00F703  001F               	dw	31
   806  00F705  0042               	dw	66
   807  00F707  0000               	dw	0
   808  00F709  0042               	dw	66
   809  00F70B  0000               	dw	0
   810  00F70D  0042               	dw	66
   811  00F70F  0000               	dw	0
   812  00F711  0042               	dw	66
   813  00F713  0000               	dw	0
   814  00F715  0000               	dw	0
   815  00F717  0000               	dw	0
   816  00F719  000E               	dw	14
   817  00F71B  0000               	dw	0
   818  00F71D  0000               	dw	0
   819  00F71F  00F0               	dw	240
   820  00F721  0003               	dw	3
   821  00F723  0008               	dw	8
   822  00F725  0004               	dw	4
   823  00F727  0004               	dw	4
   824  00F729  0008               	dw	8
   825  00F72B  0002               	dw	2
   826  00F72D  0010               	dw	16
   827  00F72F  0002               	dw	2
   828  00F731  0010               	dw	16
   829  00F733  0002               	dw	2
   830  00F735  0010               	dw	16
   831  00F737  0002               	dw	2
   832  00F739  0010               	dw	16
   833  00F73B  0082               	dw	130
   834  00F73D  0010               	dw	16
   835  00F73F  0084               	dw	132
   836  00F741  0010               	dw	16
   837  00F743  0084               	dw	132
   838  00F745  0008               	dw	8
   839  00F747  0088               	dw	136
   840  00F749  0004               	dw	4
   841  00F74B  0080               	dw	128
   842  00F74D  0003               	dw	3
   843  00F74F  0000               	dw	0
   844  00F751  0000               	dw	0
   845  00F753  000A               	dw	10
   846  00F755  0000               	dw	0
   847  00F757  0000               	dw	0
   848  00F759  0000               	dw	0
   849  00F75B  0000               	dw	0
   850  00F75D  00FE               	dw	254
   851  00F75F  001F               	dw	31
   852  00F761  0040               	dw	64
   853  00F763  0000               	dw	0
   854  00F765  0040               	dw	64
   855  00F767  0000               	dw	0
   856  00F769  0040               	dw	64
   857  00F76B  0000               	dw	0
   858  00F76D  0040               	dw	64
   859  00F76F  0000               	dw	0
   860  00F771  0040               	dw	64
   861  00F773  0000               	dw	0
   862  00F775  00FE               	dw	254
   863  00F777  001F               	dw	31
   864  00F779  0000               	dw	0
   865  00F77B  0000               	dw	0
   866  00F77D  0004               	dw	4
   867  00F77F  0000               	dw	0
   868  00F781  0000               	dw	0
   869  00F783  0000               	dw	0
   870  00F785  0000               	dw	0
   871  00F787  00FE               	dw	254
   872  00F789  001F               	dw	31
   873  00F78B  0000               	dw	0
   874  00F78D  0000               	dw	0
   875  00F78F  0007               	dw	7
   876  00F791  0000               	dw	0
   877  00F793  0000               	dw	0
   878  00F795  0000               	dw	0
   879  00F797  0008               	dw	8
   880  00F799  0000               	dw	0
   881  00F79B  0010               	dw	16
   882  00F79D  0000               	dw	0
   883  00F79F  0010               	dw	16
   884  00F7A1  0000               	dw	0
   885  00F7A3  0008               	dw	8
   886  00F7A5  00FE               	dw	254
   887  00F7A7  0007               	dw	7
   888  00F7A9  0000               	dw	0
   889  00F7AB  0000               	dw	0
   890  00F7AD  0009               	dw	9
   891  00F7AF  0000               	dw	0
   892  00F7B1  0000               	dw	0
   893  00F7B3  0000               	dw	0
   894  00F7B5  0000               	dw	0
   895  00F7B7  00FE               	dw	254
   896  00F7B9  001F               	dw	31
   897  00F7BB  0060               	dw	96
   898  00F7BD  0000               	dw	0
   899  00F7BF  0090               	dw	144
   900  00F7C1  0001               	dw	1
   901  00F7C3  0008               	dw	8
   902  00F7C5  0002               	dw	2
   903  00F7C7  0004               	dw	4
   904  00F7C9  000C               	dw	12
   905  00F7CB  0002               	dw	2
   906  00F7CD  0010               	dw	16
   907  00F7CF  0000               	dw	0
   908  00F7D1  0000               	dw	0
   909  00F7D3  0008               	dw	8
   910  00F7D5  0000               	dw	0
   911  00F7D7  0000               	dw	0
   912  00F7D9  0000               	dw	0
   913  00F7DB  0000               	dw	0
   914  00F7DD  00FE               	dw	254
   915  00F7DF  001F               	dw	31
   916  00F7E1  0000               	dw	0
   917  00F7E3  0010               	dw	16
   918  00F7E5  0000               	dw	0
   919  00F7E7  0010               	dw	16
   920  00F7E9  0000               	dw	0
   921  00F7EB  0010               	dw	16
   922  00F7ED  0000               	dw	0
   923  00F7EF  0010               	dw	16
   924  00F7F1  0000               	dw	0
   925  00F7F3  0000               	dw	0
   926  00F7F5  000F               	dw	15
   927  00F7F7  0000               	dw	0
   928  00F7F9  0000               	dw	0
   929  00F7FB  0000               	dw	0
   930  00F7FD  001C               	dw	28
   931  00F7FF  00F8               	dw	248
   932  00F801  0003               	dw	3
   933  00F803  0006               	dw	6
   934  00F805  0000               	dw	0
   935  00F807  0038               	dw	56
   936  00F809  0000               	dw	0
   937  00F80B  00C0               	dw	192
   938  00F80D  0001               	dw	1
   939  00F80F  0000               	dw	0
   940  00F811  000E               	dw	14
   941  00F813  0000               	dw	0
   942  00F815  0010               	dw	16
   943  00F817  0000               	dw	0
   944  00F819  000E               	dw	14
   945  00F81B  00C0               	dw	192
   946  00F81D  0001               	dw	1
   947  00F81F  0038               	dw	56
   948  00F821  0000               	dw	0
   949  00F823  0006               	dw	6
   950  00F825  0000               	dw	0
   951  00F827  00F8               	dw	248
   952  00F829  0003               	dw	3
   953  00F82B  0000               	dw	0
   954  00F82D  001C               	dw	28
   955  00F82F  0000               	dw	0
   956  00F831  0000               	dw	0
   957  00F833  000B               	dw	11
   958  00F835  0000               	dw	0
   959  00F837  0000               	dw	0
   960  00F839  0000               	dw	0
   961  00F83B  0000               	dw	0
   962  00F83D  00FE               	dw	254
   963  00F83F  001F               	dw	31
   964  00F841  0008               	dw	8
   965  00F843  0000               	dw	0
   966  00F845  0030               	dw	48
   967  00F847  0000               	dw	0
   968  00F849  0040               	dw	64
   969  00F84B  0000               	dw	0
   970  00F84D  0080               	dw	128
   971  00F84F  0000               	dw	0
   972  00F851  0000               	dw	0
   973  00F853  0003               	dw	3
   974  00F855  0000               	dw	0
   975  00F857  0004               	dw	4
   976  00F859  00FE               	dw	254
   977  00F85B  001F               	dw	31
   978  00F85D  0000               	dw	0
   979  00F85F  0000               	dw	0
   980  00F861  000E               	dw	14
   981  00F863  0000               	dw	0
   982  00F865  0000               	dw	0
   983  00F867  00F0               	dw	240
   984  00F869  0003               	dw	3
   985  00F86B  0008               	dw	8
   986  00F86D  0004               	dw	4
   987  00F86F  0004               	dw	4
   988  00F871  0008               	dw	8
   989  00F873  0002               	dw	2
   990  00F875  0010               	dw	16
   991  00F877  0002               	dw	2
   992  00F879  0010               	dw	16
   993  00F87B  0002               	dw	2
   994  00F87D  0010               	dw	16
   995  00F87F  0002               	dw	2
   996  00F881  0010               	dw	16
   997  00F883  0002               	dw	2
   998  00F885  0010               	dw	16
   999  00F887  0002               	dw	2
  1000  00F889  0010               	dw	16
  1001  00F88B  0004               	dw	4
  1002  00F88D  0008               	dw	8
  1003  00F88F  0008               	dw	8
  1004  00F891  0004               	dw	4
  1005  00F893  00F0               	dw	240
  1006  00F895  0003               	dw	3
  1007  00F897  0000               	dw	0
  1008  00F899  0000               	dw	0
  1009  00F89B  0009               	dw	9
  1010  00F89D  0000               	dw	0
  1011  00F89F  0000               	dw	0
  1012  00F8A1  0000               	dw	0
  1013  00F8A3  0000               	dw	0
  1014  00F8A5  00FE               	dw	254
  1015  00F8A7  001F               	dw	31
  1016  00F8A9  0042               	dw	66
  1017  00F8AB  0000               	dw	0
  1018  00F8AD  0042               	dw	66
  1019  00F8AF  0000               	dw	0
  1020  00F8B1  0042               	dw	66
  1021  00F8B3  0000               	dw	0
  1022  00F8B5  0024               	dw	36
  1023  00F8B7  0000               	dw	0
  1024  00F8B9  0018               	dw	24
  1025  00F8BB  0000               	dw	0
  1026  00F8BD  0000               	dw	0
  1027  00F8BF  0000               	dw	0
  1028  00F8C1  000E               	dw	14
  1029  00F8C3  0000               	dw	0
  1030  00F8C5  0000               	dw	0
  1031  00F8C7  00F0               	dw	240
  1032  00F8C9  0003               	dw	3
  1033  00F8CB  0008               	dw	8
  1034  00F8CD  0004               	dw	4
  1035  00F8CF  0004               	dw	4
  1036  00F8D1  0008               	dw	8
  1037  00F8D3  0002               	dw	2
  1038  00F8D5  0010               	dw	16
  1039  00F8D7  0002               	dw	2
  1040  00F8D9  0010               	dw	16
  1041  00F8DB  0002               	dw	2
  1042  00F8DD  0010               	dw	16
  1043  00F8DF  0002               	dw	2
  1044  00F8E1  0011               	dw	17
  1045  00F8E3  0002               	dw	2
  1046  00F8E5  0012               	dw	18
  1047  00F8E7  0002               	dw	2
  1048  00F8E9  000C               	dw	12
  1049  00F8EB  0004               	dw	4
  1050  00F8ED  0008               	dw	8
  1051  00F8EF  0008               	dw	8
  1052  00F8F1  0016               	dw	22
  1053  00F8F3  00F0               	dw	240
  1054  00F8F5  0021               	dw	33
  1055  00F8F7  0000               	dw	0
  1056  00F8F9  0000               	dw	0
  1057  00F8FB  000A               	dw	10
  1058  00F8FD  0000               	dw	0
  1059  00F8FF  0000               	dw	0
  1060  00F901  0000               	dw	0
  1061  00F903  0000               	dw	0
  1062  00F905  00FE               	dw	254
  1063  00F907  001F               	dw	31
  1064  00F909  0042               	dw	66
  1065  00F90B  0000               	dw	0
  1066  00F90D  00C2               	dw	194
  1067  00F90F  0000               	dw	0
  1068  00F911  0042               	dw	66
  1069  00F913  0001               	dw	1
  1070  00F915  0042               	dw	66
  1071  00F917  0006               	dw	6
  1072  00F919  0024               	dw	36
  1073  00F91B  0008               	dw	8
  1074  00F91D  0018               	dw	24
  1075  00F91F  0010               	dw	16
  1076  00F921  0000               	dw	0
  1077  00F923  0000               	dw	0
  1078  00F925  0008               	dw	8
  1079  00F927  0000               	dw	0
  1080  00F929  0004               	dw	4
  1081  00F92B  0018               	dw	24
  1082  00F92D  0008               	dw	8
  1083  00F92F  0024               	dw	36
  1084  00F931  0010               	dw	16
  1085  00F933  0042               	dw	66
  1086  00F935  0010               	dw	16
  1087  00F937  0042               	dw	66
  1088  00F939  0010               	dw	16
  1089  00F93B  0084               	dw	132
  1090  00F93D  0008               	dw	8
  1091  00F93F  0008               	dw	8
  1092  00F941  0007               	dw	7
  1093  00F943  0000               	dw	0
  1094  00F945  0000               	dw	0
  1095  00F947  0008               	dw	8
  1096  00F949  0002               	dw	2
  1097  00F94B  0000               	dw	0
  1098  00F94D  0002               	dw	2
  1099  00F94F  0000               	dw	0
  1100  00F951  0002               	dw	2
  1101  00F953  0000               	dw	0
  1102  00F955  00FE               	dw	254
  1103  00F957  001F               	dw	31
  1104  00F959  0002               	dw	2
  1105  00F95B  0000               	dw	0
  1106  00F95D  0002               	dw	2
  1107  00F95F  0000               	dw	0
  1108  00F961  0002               	dw	2
  1109  00F963  0000               	dw	0
  1110  00F965  0000               	dw	0
  1111  00F967  0000               	dw	0
  1112  00F969  000A               	dw	10
  1113  00F96B  0000               	dw	0
  1114  00F96D  0000               	dw	0
  1115  00F96F  0000               	dw	0
  1116  00F971  0000               	dw	0
  1117  00F973  00FE               	dw	254
  1118  00F975  0007               	dw	7
  1119  00F977  0000               	dw	0
  1120  00F979  0008               	dw	8
  1121  00F97B  0000               	dw	0
  1122  00F97D  0010               	dw	16
  1123  00F97F  0000               	dw	0
  1124  00F981  0010               	dw	16
  1125  00F983  0000               	dw	0
  1126  00F985  0010               	dw	16
  1127  00F987  0000               	dw	0
  1128  00F989  0008               	dw	8
  1129  00F98B  00FE               	dw	254
  1130  00F98D  0007               	dw	7
  1131  00F98F  0000               	dw	0
  1132  00F991  0000               	dw	0
  1133  00F993  000C               	dw	12
  1134  00F995  0002               	dw	2
  1135  00F997  0000               	dw	0
  1136  00F999  001C               	dw	28
  1137  00F99B  0000               	dw	0
  1138  00F99D  0060               	dw	96
  1139  00F99F  0000               	dw	0
  1140  00F9A1  0080               	dw	128
  1141  00F9A3  0001               	dw	1
  1142  00F9A5  0000               	dw	0
  1143  00F9A7  000E               	dw	14
  1144  00F9A9  0000               	dw	0
  1145  00F9AB  0010               	dw	16
  1146  00F9AD  0000               	dw	0
  1147  00F9AF  000E               	dw	14
  1148  00F9B1  0080               	dw	128
  1149  00F9B3  0001               	dw	1
  1150  00F9B5  0060               	dw	96
  1151  00F9B7  0000               	dw	0
  1152  00F9B9  001C               	dw	28
  1153  00F9BB  0000               	dw	0
  1154  00F9BD  0002               	dw	2
  1155  00F9BF  0000               	dw	0
  1156  00F9C1  0000               	dw	0
  1157  00F9C3  0000               	dw	0
  1158  00F9C5  000F               	dw	15
  1159  00F9C7  0000               	dw	0
  1160  00F9C9  0000               	dw	0
  1161  00F9CB  0006               	dw	6
  1162  00F9CD  0000               	dw	0
  1163  00F9CF  0078               	dw	120
  1164  00F9D1  0000               	dw	0
  1165  00F9D3  0080               	dw	128
  1166  00F9D5  0007               	dw	7
  1167  00F9D7  0000               	dw	0
  1168  00F9D9  0018               	dw	24
  1169  00F9DB  0080               	dw	128
  1170  00F9DD  0007               	dw	7
  1171  00F9DF  0078               	dw	120
  1172  00F9E1  0000               	dw	0
  1173  00F9E3  0006               	dw	6
  1174  00F9E5  0000               	dw	0
  1175  00F9E7  0078               	dw	120
  1176  00F9E9  0000               	dw	0
  1177  00F9EB  0080               	dw	128
  1178  00F9ED  0007               	dw	7
  1179  00F9EF  0000               	dw	0
  1180  00F9F1  0018               	dw	24
  1181  00F9F3  0080               	dw	128
  1182  00F9F5  0007               	dw	7
  1183  00F9F7  0078               	dw	120
  1184  00F9F9  0000               	dw	0
  1185  00F9FB  0006               	dw	6
  1186  00F9FD  0000               	dw	0
  1187  00F9FF  0000               	dw	0
  1188  00FA01  0000               	dw	0
  1189  00FA03  0009               	dw	9
  1190  00FA05  0000               	dw	0
  1191  00FA07  0000               	dw	0
  1192  00FA09  0006               	dw	6
  1193  00FA0B  0018               	dw	24
  1194  00FA0D  0008               	dw	8
  1195  00FA0F  0004               	dw	4
  1196  00FA11  0030               	dw	48
  1197  00FA13  0003               	dw	3
  1198  00FA15  00C0               	dw	192
  1199  00FA17  0000               	dw	0
  1200  00FA19  0030               	dw	48
  1201  00FA1B  0003               	dw	3
  1202  00FA1D  0008               	dw	8
  1203  00FA1F  0004               	dw	4
  1204  00FA21  0006               	dw	6
  1205  00FA23  0018               	dw	24
  1206  00FA25  0000               	dw	0
  1207  00FA27  0000               	dw	0
  1208  00FA29  000B               	dw	11
  1209  00FA2B  0000               	dw	0
  1210  00FA2D  0000               	dw	0
  1211  00FA2F  0002               	dw	2
  1212  00FA31  0000               	dw	0
  1213  00FA33  0004               	dw	4
  1214  00FA35  0000               	dw	0
  1215  00FA37  0018               	dw	24
  1216  00FA39  0000               	dw	0
  1217  00FA3B  0060               	dw	96
  1218  00FA3D  0000               	dw	0
  1219  00FA3F  0080               	dw	128
  1220  00FA41  001F               	dw	31
  1221  00FA43  0060               	dw	96
  1222  00FA45  0000               	dw	0
  1223  00FA47  0018               	dw	24
  1224  00FA49  0000               	dw	0
  1225  00FA4B  0004               	dw	4
  1226  00FA4D  0000               	dw	0
  1227  00FA4F  0002               	dw	2
  1228  00FA51  0000               	dw	0
  1229  00FA53  0000               	dw	0
  1230  00FA55  0000               	dw	0
  1231  00FA57  0008               	dw	8
  1232  00FA59  0002               	dw	2
  1233  00FA5B  0010               	dw	16
  1234  00FA5D  0002               	dw	2
  1235  00FA5F  001C               	dw	28
  1236  00FA61  0002               	dw	2
  1237  00FA63  0013               	dw	19
  1238  00FA65  00C2               	dw	194
  1239  00FA67  0010               	dw	16
  1240  00FA69  0032               	dw	50
  1241  00FA6B  0010               	dw	16
  1242  00FA6D  000E               	dw	14
  1243  00FA6F  0010               	dw	16
  1244  00FA71  0002               	dw	2
  1245  00FA73  0010               	dw	16
  1246  00FA75  0000               	dw	0
  1247  00FA77  0000               	dw	0
  1248  00FA79  0006               	dw	6
  1249  00FA7B  0000               	dw	0
  1250  00FA7D  0000               	dw	0
  1251  00FA7F  0000               	dw	0
  1252  00FA81  0000               	dw	0
  1253  00FA83  00FE               	dw	254
  1254  00FA85  00FF               	dw	255
  1255  00FA87  0002               	dw	2
  1256  00FA89  0080               	dw	128
  1257  00FA8B  0002               	dw	2
  1258  00FA8D  0080               	dw	128
  1259  00FA8F  0000               	dw	0
  1260  00FA91  0000               	dw	0
  1261  00FA93  000A               	dw	10
  1262  00FA95  0002               	dw	2
  1263  00FA97  0000               	dw	0
  1264  00FA99  000C               	dw	12
  1265  00FA9B  0000               	dw	0
  1266  00FA9D  0010               	dw	16
  1267  00FA9F  0000               	dw	0
  1268  00FAA1  0060               	dw	96
  1269  00FAA3  0000               	dw	0
  1270  00FAA5  0080               	dw	128
  1271  00FAA7  0001               	dw	1
  1272  00FAA9  0000               	dw	0
  1273  00FAAB  0006               	dw	6
  1274  00FAAD  0000               	dw	0
  1275  00FAAF  0008               	dw	8
  1276  00FAB1  0000               	dw	0
  1277  00FAB3  0030               	dw	48
  1278  00FAB5  0000               	dw	0
  1279  00FAB7  0040               	dw	64
  1280  00FAB9  0000               	dw	0
  1281  00FABB  0000               	dw	0
  1282  00FABD  0005               	dw	5
  1283  00FABF  0000               	dw	0
  1284  00FAC1  0000               	dw	0
  1285  00FAC3  0002               	dw	2
  1286  00FAC5  0080               	dw	128
  1287  00FAC7  0002               	dw	2
  1288  00FAC9  0080               	dw	128
  1289  00FACB  00FE               	dw	254
  1290  00FACD  00FF               	dw	255
  1291  00FACF  0000               	dw	0
  1292  00FAD1  0000               	dw	0
  1293  00FAD3  000B               	dw	11
  1294  00FAD5  0000               	dw	0
  1295  00FAD7  0000               	dw	0
  1296  00FAD9  0000               	dw	0
  1297  00FADB  0002               	dw	2
  1298  00FADD  0080               	dw	128
  1299  00FADF  0001               	dw	1
  1300  00FAE1  0070               	dw	112
  1301  00FAE3  0000               	dw	0
  1302  00FAE5  000C               	dw	12
  1303  00FAE7  0000               	dw	0
  1304  00FAE9  0002               	dw	2
  1305  00FAEB  0000               	dw	0
  1306  00FAED  000C               	dw	12
  1307  00FAEF  0000               	dw	0
  1308  00FAF1  0070               	dw	112
  1309  00FAF3  0000               	dw	0
  1310  00FAF5  0080               	dw	128
  1311  00FAF7  0001               	dw	1
  1312  00FAF9  0000               	dw	0
  1313  00FAFB  0002               	dw	2
  1314  00FAFD  0000               	dw	0
  1315  00FAFF  0000               	dw	0
  1316  00FB01  0009               	dw	9
  1317  00FB03  0000               	dw	0
  1318  00FB05  0040               	dw	64
  1319  00FB07  0000               	dw	0
  1320  00FB09  0040               	dw	64
  1321  00FB0B  0000               	dw	0
  1322  00FB0D  0040               	dw	64
  1323  00FB0F  0000               	dw	0
  1324  00FB11  0040               	dw	64
  1325  00FB13  0000               	dw	0
  1326  00FB15  0040               	dw	64
  1327  00FB17  0000               	dw	0
  1328  00FB19  0040               	dw	64
  1329  00FB1B  0000               	dw	0
  1330  00FB1D  0040               	dw	64
  1331  00FB1F  0000               	dw	0
  1332  00FB21  0040               	dw	64
  1333  00FB23  0000               	dw	0
  1334  00FB25  0000               	dw	0
  1335  00FB27  0005               	dw	5
  1336  00FB29  0000               	dw	0
  1337  00FB2B  0000               	dw	0
  1338  00FB2D  0000               	dw	0
  1339  00FB2F  0000               	dw	0
  1340  00FB31  0002               	dw	2
  1341  00FB33  0000               	dw	0
  1342  00FB35  0004               	dw	4
  1343  00FB37  0000               	dw	0
  1344  00FB39  0000               	dw	0
  1345  00FB3B  0000               	dw	0
  1346  00FB3D  000B               	dw	11
  1347  00FB3F  0000               	dw	0
  1348  00FB41  0000               	dw	0
  1349  00FB43  00C0               	dw	192
  1350  00FB45  0007               	dw	7
  1351  00FB47  0020               	dw	32
  1352  00FB49  0008               	dw	8
  1353  00FB4B  0010               	dw	16
  1354  00FB4D  0010               	dw	16
  1355  00FB4F  0010               	dw	16
  1356  00FB51  0010               	dw	16
  1357  00FB53  0010               	dw	16
  1358  00FB55  0010               	dw	16
  1359  00FB57  0010               	dw	16
  1360  00FB59  0010               	dw	16
  1361  00FB5B  0010               	dw	16
  1362  00FB5D  0010               	dw	16
  1363  00FB5F  0020               	dw	32
  1364  00FB61  0008               	dw	8
  1365  00FB63  00F0               	dw	240
  1366  00FB65  001F               	dw	31
  1367  00FB67  0000               	dw	0
  1368  00FB69  0000               	dw	0
  1369  00FB6B  000B               	dw	11
  1370  00FB6D  0000               	dw	0
  1371  00FB6F  0000               	dw	0
  1372  00FB71  00FE               	dw	254
  1373  00FB73  001F               	dw	31
  1374  00FB75  0020               	dw	32
  1375  00FB77  0008               	dw	8
  1376  00FB79  0010               	dw	16
  1377  00FB7B  0010               	dw	16
  1378  00FB7D  0010               	dw	16
  1379  00FB7F  0010               	dw	16
  1380  00FB81  0010               	dw	16
  1381  00FB83  0010               	dw	16
  1382  00FB85  0010               	dw	16
  1383  00FB87  0010               	dw	16
  1384  00FB89  0010               	dw	16
  1385  00FB8B  0010               	dw	16
  1386  00FB8D  0020               	dw	32
  1387  00FB8F  0008               	dw	8
  1388  00FB91  00C0               	dw	192
  1389  00FB93  0007               	dw	7
  1390  00FB95  0000               	dw	0
  1391  00FB97  0000               	dw	0
  1392  00FB99  000A               	dw	10
  1393  00FB9B  0000               	dw	0
  1394  00FB9D  0000               	dw	0
  1395  00FB9F  00C0               	dw	192
  1396  00FBA1  0007               	dw	7
  1397  00FBA3  0020               	dw	32
  1398  00FBA5  0008               	dw	8
  1399  00FBA7  0010               	dw	16
  1400  00FBA9  0010               	dw	16
  1401  00FBAB  0010               	dw	16
  1402  00FBAD  0010               	dw	16
  1403  00FBAF  0010               	dw	16
  1404  00FBB1  0010               	dw	16
  1405  00FBB3  0010               	dw	16
  1406  00FBB5  0010               	dw	16
  1407  00FBB7  0020               	dw	32
  1408  00FBB9  0008               	dw	8
  1409  00FBBB  0040               	dw	64
  1410  00FBBD  0004               	dw	4
  1411  00FBBF  0000               	dw	0
  1412  00FBC1  0000               	dw	0
  1413  00FBC3  000B               	dw	11
  1414  00FBC5  0000               	dw	0
  1415  00FBC7  0000               	dw	0
  1416  00FBC9  00C0               	dw	192
  1417  00FBCB  0007               	dw	7
  1418  00FBCD  0020               	dw	32
  1419  00FBCF  0008               	dw	8
  1420  00FBD1  0010               	dw	16
  1421  00FBD3  0010               	dw	16
  1422  00FBD5  0010               	dw	16
  1423  00FBD7  0010               	dw	16
  1424  00FBD9  0010               	dw	16
  1425  00FBDB  0010               	dw	16
  1426  00FBDD  0010               	dw	16
  1427  00FBDF  0010               	dw	16
  1428  00FBE1  0010               	dw	16
  1429  00FBE3  0010               	dw	16
  1430  00FBE5  0020               	dw	32
  1431  00FBE7  0008               	dw	8
  1432  00FBE9  00FE               	dw	254
  1433  00FBEB  001F               	dw	31
  1434  00FBED  0000               	dw	0
  1435  00FBEF  0000               	dw	0
  1436  00FBF1  000A               	dw	10
  1437  00FBF3  0000               	dw	0
  1438  00FBF5  0000               	dw	0
  1439  00FBF7  00C0               	dw	192
  1440  00FBF9  0007               	dw	7
  1441  00FBFB  0020               	dw	32
  1442  00FBFD  0009               	dw	9
  1443  00FBFF  0010               	dw	16
  1444  00FC01  0011               	dw	17
  1445  00FC03  0010               	dw	16
  1446  00FC05  0011               	dw	17
  1447  00FC07  0010               	dw	16
  1448  00FC09  0011               	dw	17
  1449  00FC0B  0010               	dw	16
  1450  00FC0D  0011               	dw	17
  1451  00FC0F  0020               	dw	32
  1452  00FC11  0009               	dw	9
  1453  00FC13  00C0               	dw	192
  1454  00FC15  0005               	dw	5
  1455  00FC17  0000               	dw	0
  1456  00FC19  0000               	dw	0
  1457  00FC1B  0006               	dw	6
  1458  00FC1D  0000               	dw	0
  1459  00FC1F  0000               	dw	0
  1460  00FC21  0010               	dw	16
  1461  00FC23  0000               	dw	0
  1462  00FC25  00FC               	dw	252
  1463  00FC27  001F               	dw	31
  1464  00FC29  0012               	dw	18
  1465  00FC2B  0000               	dw	0
  1466  00FC2D  0012               	dw	18
  1467  00FC2F  0000               	dw	0
  1468  00FC31  0000               	dw	0
  1469  00FC33  0000               	dw	0
  1470  00FC35  000B               	dw	11
  1471  00FC37  0000               	dw	0
  1472  00FC39  0000               	dw	0
  1473  00FC3B  00C0               	dw	192
  1474  00FC3D  0027               	dw	39
  1475  00FC3F  0020               	dw	32
  1476  00FC41  0048               	dw	72
  1477  00FC43  0010               	dw	16
  1478  00FC45  0090               	dw	144
  1479  00FC47  0010               	dw	16
  1480  00FC49  0090               	dw	144
  1481  00FC4B  0010               	dw	16
  1482  00FC4D  0090               	dw	144
  1483  00FC4F  0010               	dw	16
  1484  00FC51  0090               	dw	144
  1485  00FC53  0010               	dw	16
  1486  00FC55  0090               	dw	144
  1487  00FC57  0020               	dw	32
  1488  00FC59  0048               	dw	72
  1489  00FC5B  00F0               	dw	240
  1490  00FC5D  003F               	dw	63
  1491  00FC5F  0000               	dw	0
  1492  00FC61  0000               	dw	0
  1493  00FC63  000A               	dw	10
  1494  00FC65  0000               	dw	0
  1495  00FC67  0000               	dw	0
  1496  00FC69  00FE               	dw	254
  1497  00FC6B  001F               	dw	31
  1498  00FC6D  0020               	dw	32
  1499  00FC6F  0000               	dw	0
  1500  00FC71  0010               	dw	16
  1501  00FC73  0000               	dw	0
  1502  00FC75  0010               	dw	16
  1503  00FC77  0000               	dw	0
  1504  00FC79  0010               	dw	16
  1505  00FC7B  0000               	dw	0
  1506  00FC7D  0010               	dw	16
  1507  00FC7F  0000               	dw	0
  1508  00FC81  0020               	dw	32
  1509  00FC83  0000               	dw	0
  1510  00FC85  00C0               	dw	192
  1511  00FC87  001F               	dw	31
  1512  00FC89  0000               	dw	0
  1513  00FC8B  0000               	dw	0
  1514  00FC8D  0003               	dw	3
  1515  00FC8F  0000               	dw	0
  1516  00FC91  0000               	dw	0
  1517  00FC93  00F6               	dw	246
  1518  00FC95  001F               	dw	31
  1519  00FC97  0000               	dw	0
  1520  00FC99  0000               	dw	0
  1521  00FC9B  0003               	dw	3
  1522  00FC9D  0000               	dw	0
  1523  00FC9F  0080               	dw	128
  1524  00FCA1  00F6               	dw	246
  1525  00FCA3  007F               	dw	127
  1526  00FCA5  0000               	dw	0
  1527  00FCA7  0000               	dw	0
  1528  00FCA9  0008               	dw	8
  1529  00FCAB  0000               	dw	0
  1530  00FCAD  0000               	dw	0
  1531  00FCAF  00FE               	dw	254
  1532  00FCB1  001F               	dw	31
  1533  00FCB3  0000               	dw	0
  1534  00FCB5  0001               	dw	1
  1535  00FCB7  0080               	dw	128
  1536  00FCB9  0002               	dw	2
  1537  00FCBB  0040               	dw	64
  1538  00FCBD  0004               	dw	4
  1539  00FCBF  0020               	dw	32
  1540  00FCC1  0008               	dw	8
  1541  00FCC3  0010               	dw	16
  1542  00FCC5  0010               	dw	16
  1543  00FCC7  0000               	dw	0
  1544  00FCC9  0000               	dw	0
  1545  00FCCB  0003               	dw	3
  1546  00FCCD  0000               	dw	0
  1547  00FCCF  0000               	dw	0
  1548  00FCD1  00FE               	dw	254
  1549  00FCD3  001F               	dw	31
  1550  00FCD5  0000               	dw	0
  1551  00FCD7  0000               	dw	0
  1552  00FCD9  000F               	dw	15
  1553  00FCDB  0000               	dw	0
  1554  00FCDD  0000               	dw	0
  1555  00FCDF  00F0               	dw	240
  1556  00FCE1  001F               	dw	31
  1557  00FCE3  0020               	dw	32
  1558  00FCE5  0000               	dw	0
  1559  00FCE7  0010               	dw	16
  1560  00FCE9  0000               	dw	0
  1561  00FCEB  0010               	dw	16
  1562  00FCED  0000               	dw	0
  1563  00FCEF  0010               	dw	16
  1564  00FCF1  0000               	dw	0
  1565  00FCF3  0020               	dw	32
  1566  00FCF5  0000               	dw	0
  1567  00FCF7  00C0               	dw	192
  1568  00FCF9  001F               	dw	31
  1569  00FCFB  0020               	dw	32
  1570  00FCFD  0000               	dw	0
  1571  00FCFF  0010               	dw	16
  1572  00FD01  0000               	dw	0
  1573  00FD03  0010               	dw	16
  1574  00FD05  0000               	dw	0
  1575  00FD07  0010               	dw	16
  1576  00FD09  0000               	dw	0
  1577  00FD0B  0020               	dw	32
  1578  00FD0D  0000               	dw	0
  1579  00FD0F  00C0               	dw	192
  1580  00FD11  001F               	dw	31
  1581  00FD13  0000               	dw	0
  1582  00FD15  0000               	dw	0
  1583  00FD17  000A               	dw	10
  1584  00FD19  0000               	dw	0
  1585  00FD1B  0000               	dw	0
  1586  00FD1D  00F0               	dw	240
  1587  00FD1F  001F               	dw	31
  1588  00FD21  0020               	dw	32
  1589  00FD23  0000               	dw	0
  1590  00FD25  0010               	dw	16
  1591  00FD27  0000               	dw	0
  1592  00FD29  0010               	dw	16
  1593  00FD2B  0000               	dw	0
  1594  00FD2D  0010               	dw	16
  1595  00FD2F  0000               	dw	0
  1596  00FD31  0010               	dw	16
  1597  00FD33  0000               	dw	0
  1598  00FD35  0020               	dw	32
  1599  00FD37  0000               	dw	0
  1600  00FD39  00C0               	dw	192
  1601  00FD3B  001F               	dw	31
  1602  00FD3D  0000               	dw	0
  1603  00FD3F  0000               	dw	0
  1604  00FD41  000A               	dw	10
  1605  00FD43  0000               	dw	0
  1606  00FD45  0000               	dw	0
  1607  00FD47  00C0               	dw	192
  1608  00FD49  0007               	dw	7
  1609  00FD4B  0020               	dw	32
  1610  00FD4D  0008               	dw	8
  1611  00FD4F  0010               	dw	16
  1612  00FD51  0010               	dw	16
  1613  00FD53  0010               	dw	16
  1614  00FD55  0010               	dw	16
  1615  00FD57  0010               	dw	16
  1616  00FD59  0010               	dw	16
  1617  00FD5B  0010               	dw	16
  1618  00FD5D  0010               	dw	16
  1619  00FD5F  0020               	dw	32
  1620  00FD61  0008               	dw	8
  1621  00FD63  00C0               	dw	192
  1622  00FD65  0007               	dw	7
  1623  00FD67  0000               	dw	0
  1624  00FD69  0000               	dw	0
  1625  00FD6B  000B               	dw	11
  1626  00FD6D  0000               	dw	0
  1627  00FD6F  0000               	dw	0
  1628  00FD71  00F0               	dw	240
  1629  00FD73  00FF               	dw	255
  1630  00FD75  0020               	dw	32
  1631  00FD77  0008               	dw	8
  1632  00FD79  0010               	dw	16
  1633  00FD7B  0010               	dw	16
  1634  00FD7D  0010               	dw	16
  1635  00FD7F  0010               	dw	16
  1636  00FD81  0010               	dw	16
  1637  00FD83  0010               	dw	16
  1638  00FD85  0010               	dw	16
  1639  00FD87  0010               	dw	16
  1640  00FD89  0010               	dw	16
  1641  00FD8B  0010               	dw	16
  1642  00FD8D  0020               	dw	32
  1643  00FD8F  0008               	dw	8
  1644  00FD91  00C0               	dw	192
  1645  00FD93  0007               	dw	7
  1646  00FD95  0000               	dw	0
  1647  00FD97  0000               	dw	0
  1648  00FD99  000B               	dw	11
  1649  00FD9B  0000               	dw	0
  1650  00FD9D  0000               	dw	0
  1651  00FD9F  00C0               	dw	192
  1652  00FDA1  0007               	dw	7
  1653  00FDA3  0020               	dw	32
  1654  00FDA5  0008               	dw	8
  1655  00FDA7  0010               	dw	16
  1656  00FDA9  0010               	dw	16
  1657  00FDAB  0010               	dw	16
  1658  00FDAD  0010               	dw	16
  1659  00FDAF  0010               	dw	16
  1660  00FDB1  0010               	dw	16
  1661  00FDB3  0010               	dw	16
  1662  00FDB5  0010               	dw	16
  1663  00FDB7  0010               	dw	16
  1664  00FDB9  0010               	dw	16
  1665  00FDBB  0020               	dw	32
  1666  00FDBD  0008               	dw	8
  1667  00FDBF  00F0               	dw	240
  1668  00FDC1  00FF               	dw	255
  1669  00FDC3  0000               	dw	0
  1670  00FDC5  0000               	dw	0
  1671  00FDC7  0006               	dw	6
  1672  00FDC9  0000               	dw	0
  1673  00FDCB  0000               	dw	0
  1674  00FDCD  00F0               	dw	240
  1675  00FDCF  001F               	dw	31
  1676  00FDD1  0020               	dw	32
  1677  00FDD3  0000               	dw	0
  1678  00FDD5  0010               	dw	16
  1679  00FDD7  0000               	dw	0
  1680  00FDD9  0010               	dw	16
  1681  00FDDB  0000               	dw	0
  1682  00FDDD  0000               	dw	0
  1683  00FDDF  0000               	dw	0
  1684  00FDE1  0006               	dw	6
  1685  00FDE3  0060               	dw	96
  1686  00FDE5  0008               	dw	8
  1687  00FDE7  0090               	dw	144
  1688  00FDE9  0010               	dw	16
  1689  00FDEB  0010               	dw	16
  1690  00FDED  0011               	dw	17
  1691  00FDEF  0010               	dw	16
  1692  00FDF1  0011               	dw	17
  1693  00FDF3  0020               	dw	32
  1694  00FDF5  000E               	dw	14
  1695  00FDF7  0000               	dw	0
  1696  00FDF9  0000               	dw	0
  1697  00FDFB  0007               	dw	7
  1698  00FDFD  0000               	dw	0
  1699  00FDFF  0000               	dw	0
  1700  00FE01  0010               	dw	16
  1701  00FE03  0000               	dw	0
  1702  00FE05  0010               	dw	16
  1703  00FE07  0000               	dw	0
  1704  00FE09  00FE               	dw	254
  1705  00FE0B  001F               	dw	31
  1706  00FE0D  0010               	dw	16
  1707  00FE0F  0000               	dw	0
  1708  00FE11  0010               	dw	16
  1709  00FE13  0000               	dw	0
  1710  00FE15  0000               	dw	0
  1711  00FE17  0000               	dw	0
  1712  00FE19  000A               	dw	10
  1713  00FE1B  0000               	dw	0
  1714  00FE1D  0000               	dw	0
  1715  00FE1F  00F0               	dw	240
  1716  00FE21  0007               	dw	7
  1717  00FE23  0000               	dw	0
  1718  00FE25  0008               	dw	8
  1719  00FE27  0000               	dw	0
  1720  00FE29  0010               	dw	16
  1721  00FE2B  0000               	dw	0
  1722  00FE2D  0010               	dw	16
  1723  00FE2F  0000               	dw	0
  1724  00FE31  0010               	dw	16
  1725  00FE33  0000               	dw	0
  1726  00FE35  0010               	dw	16
  1727  00FE37  0000               	dw	0
  1728  00FE39  0008               	dw	8
  1729  00FE3B  00F0               	dw	240
  1730  00FE3D  0007               	dw	7
  1731  00FE3F  0000               	dw	0
  1732  00FE41  0000               	dw	0
  1733  00FE43  000A               	dw	10
  1734  00FE45  0010               	dw	16
  1735  00FE47  0000               	dw	0
  1736  00FE49  0060               	dw	96
  1737  00FE4B  0000               	dw	0
  1738  00FE4D  0080               	dw	128
  1739  00FE4F  0003               	dw	3
  1740  00FE51  0000               	dw	0
  1741  00FE53  000C               	dw	12
  1742  00FE55  0000               	dw	0
  1743  00FE57  0010               	dw	16
  1744  00FE59  0000               	dw	0
  1745  00FE5B  000C               	dw	12
  1746  00FE5D  0080               	dw	128
  1747  00FE5F  0003               	dw	3
  1748  00FE61  0060               	dw	96
  1749  00FE63  0000               	dw	0
  1750  00FE65  0010               	dw	16
  1751  00FE67  0000               	dw	0
  1752  00FE69  0000               	dw	0
  1753  00FE6B  0000               	dw	0
  1754  00FE6D  000E               	dw	14
  1755  00FE6F  0010               	dw	16
  1756  00FE71  0000               	dw	0
  1757  00FE73  00E0               	dw	224
  1758  00FE75  0000               	dw	0
  1759  00FE77  0000               	dw	0
  1760  00FE79  0007               	dw	7
  1761  00FE7B  0000               	dw	0
  1762  00FE7D  0018               	dw	24
  1763  00FE7F  0000               	dw	0
  1764  00FE81  0007               	dw	7
  1765  00FE83  00E0               	dw	224
  1766  00FE85  0000               	dw	0
  1767  00FE87  0010               	dw	16
  1768  00FE89  0000               	dw	0
  1769  00FE8B  00E0               	dw	224
  1770  00FE8D  0000               	dw	0
  1771  00FE8F  0000               	dw	0
  1772  00FE91  0007               	dw	7
  1773  00FE93  0000               	dw	0
  1774  00FE95  0018               	dw	24
  1775  00FE97  0000               	dw	0
  1776  00FE99  0007               	dw	7
  1777  00FE9B  00E0               	dw	224
  1778  00FE9D  0000               	dw	0
  1779  00FE9F  0010               	dw	16
  1780  00FEA1  0000               	dw	0
  1781  00FEA3  0000               	dw	0
  1782  00FEA5  0000               	dw	0
  1783  00FEA7  0009               	dw	9
  1784  00FEA9  0010               	dw	16
  1785  00FEAB  0010               	dw	16
  1786  00FEAD  0020               	dw	32
  1787  00FEAF  0008               	dw	8
  1788  00FEB1  0040               	dw	64
  1789  00FEB3  0004               	dw	4
  1790  00FEB5  0080               	dw	128
  1791  00FEB7  0003               	dw	3
  1792  00FEB9  0080               	dw	128
  1793  00FEBB  0003               	dw	3
  1794  00FEBD  0040               	dw	64
  1795  00FEBF  0004               	dw	4
  1796  00FEC1  0020               	dw	32
  1797  00FEC3  0008               	dw	8
  1798  00FEC5  0010               	dw	16
  1799  00FEC7  0010               	dw	16
  1800  00FEC9  0000               	dw	0
  1801  00FECB  0000               	dw	0
  1802  00FECD  0009               	dw	9
  1803  00FECF  0010               	dw	16
  1804  00FED1  0000               	dw	0
  1805  00FED3  00E0               	dw	224
  1806  00FED5  0000               	dw	0
  1807  00FED7  0000               	dw	0
  1808  00FED9  0083               	dw	131
  1809  00FEDB  0000               	dw	0
  1810  00FEDD  007C               	dw	124
  1811  00FEDF  0000               	dw	0
  1812  00FEE1  000C               	dw	12
  1813  00FEE3  0000               	dw	0
  1814  00FEE5  0003               	dw	3
  1815  00FEE7  00E0               	dw	224
  1816  00FEE9  0000               	dw	0
  1817  00FEEB  0010               	dw	16
  1818  00FEED  0000               	dw	0
  1819  00FEEF  0000               	dw	0
  1820  00FEF1  0000               	dw	0
  1821  00FEF3  0008               	dw	8
  1822  00FEF5  0010               	dw	16
  1823  00FEF7  0010               	dw	16
  1824  00FEF9  0010               	dw	16
  1825  00FEFB  0018               	dw	24
  1826  00FEFD  0010               	dw	16
  1827  00FEFF  0016               	dw	22
  1828  00FF01  0010               	dw	16
  1829  00FF03  0011               	dw	17
  1830  00FF05  00D0               	dw	208
  1831  00FF07  0010               	dw	16
  1832  00FF09  0030               	dw	48
  1833  00FF0B  0010               	dw	16
  1834  00FF0D  0010               	dw	16
  1835  00FF0F  0010               	dw	16
  1836  00FF11  0000               	dw	0
  1837  00FF13  0000               	dw	0
  1838  00FF15  0007               	dw	7
  1839  00FF17  0000               	dw	0
  1840  00FF19  0000               	dw	0
  1841  00FF1B  0000               	dw	0
  1842  00FF1D  0001               	dw	1
  1843  00FF1F  0080               	dw	128
  1844  00FF21  0002               	dw	2
  1845  00FF23  00FC               	dw	252
  1846  00FF25  007E               	dw	126
  1847  00FF27  0002               	dw	2
  1848  00FF29  0080               	dw	128
  1849  00FF2B  0002               	dw	2
  1850  00FF2D  0080               	dw	128
  1851  00FF2F  0000               	dw	0
  1852  00FF31  0000               	dw	0
  1853  00FF33  0007               	dw	7
  1854  00FF35  0000               	dw	0
  1855  00FF37  0000               	dw	0
  1856  00FF39  0000               	dw	0
  1857  00FF3B  0000               	dw	0
  1858  00FF3D  0000               	dw	0
  1859  00FF3F  0000               	dw	0
  1860  00FF41  0000               	dw	0
  1861  00FF43  0000               	dw	0
  1862  00FF45  0000               	dw	0
  1863  00FF47  0000               	dw	0
  1864  00FF49  00FE               	dw	254
  1865  00FF4B  00FF               	dw	255
  1866  00FF4D  0000               	dw	0
  1867  00FF4F  0000               	dw	0
  1868  00FF51  0006               	dw	6
  1869  00FF53  0002               	dw	2
  1870  00FF55  0080               	dw	128
  1871  00FF57  0002               	dw	2
  1872  00FF59  0080               	dw	128
  1873  00FF5B  00FC               	dw	252
  1874  00FF5D  007E               	dw	126
  1875  00FF5F  0080               	dw	128
  1876  00FF61  0002               	dw	2
  1877  00FF63  0000               	dw	0
  1878  00FF65  0001               	dw	1
  1879  00FF67  0000               	dw	0
  1880  00FF69  0000               	dw	0
  1881  00FF6B  000A               	dw	10
  1882  00FF6D  0000               	dw	0
  1883  00FF6F  0000               	dw	0
  1884  00FF71  0080               	dw	128
  1885  00FF73  0000               	dw	0
  1886  00FF75  0040               	dw	64
  1887  00FF77  0000               	dw	0
  1888  00FF79  0040               	dw	64
  1889  00FF7B  0000               	dw	0
  1890  00FF7D  0040               	dw	64
  1891  00FF7F  0000               	dw	0
  1892  00FF81  0080               	dw	128
  1893  00FF83  0000               	dw	0
  1894  00FF85  0080               	dw	128
  1895  00FF87  0000               	dw	0
  1896  00FF89  0080               	dw	128
  1897  00FF8B  0000               	dw	0
  1898  00FF8D  0040               	dw	64
  1899  00FF8F  0000               	dw	0
  1900  00FF91  0000               	dw	0
  1901  00FF93  0000               	dw	0
  1902  00FF95  0005               	dw	5
  1903  00FF97  00FF               	dw	255
  1904  00FF99  000F               	dw	15
  1905  00FF9B  0001               	dw	1
  1906  00FF9D  0008               	dw	8
  1907  00FF9F  0001               	dw	1
  1908  00FFA1  0008               	dw	8
  1909  00FFA3  00FF               	dw	255
  1910  00FFA5  000F               	dw	15
  1911  00FFA7  0000               	dw	0
  1912  00FFA9  0000               	dw	0
  1913  00FFAB                     __end_of_font:
  1914                           	opt callstack 0
  1915  00FFAB                     _spi_configuration:
  1916                           	opt callstack 0
  1917  00FFAB  00                 	db	0
  1918  00FFAC  40                 	db	64
  1919  00FFAD  01                 	db	1
  1920  00FFAE  00                 	db	0
  1921  00FFAF                     __end_of_spi_configuration:
  1922                           	opt callstack 0
  1923  00FFAF                     STR_2:
  1924  00FFAF  48                 	db	72	;'H'
  1925  00FFB0  45                 	db	69	;'E'
  1926  00FFB1  4C                 	db	76	;'L'
  1927  00FFB2  4C                 	db	76	;'L'
  1928  00FFB3  4F                 	db	79	;'O'
  1929  00FFB4  20                 	db	32
  1930  00FFB5  57                 	db	87	;'W'
  1931  00FFB6  4F                 	db	79	;'O'
  1932  00FFB7  52                 	db	82	;'R'
  1933  00FFB8  4C                 	db	76	;'L'
  1934  00FFB9  44                 	db	68	;'D'
  1935  00FFBA  00                 	db	0
  1936  00FFBB                     STR_1:
  1937  00FFBB  2D                 	db	45
  1938  00FFBC  2D                 	db	45
  1939  00FFBD  2D                 	db	45
  1940  00FFBE  2D                 	db	45
  1941  00FFBF  2D                 	db	45
  1942  00FFC0  2D                 	db	45
  1943  00FFC1  2D                 	db	45
  1944  00FFC2  2D                 	db	45
  1945  00FFC3  2D                 	db	45
  1946  00FFC4  00                 	db	0
  1947  00FFC5                     STR_3:
  1948  00FFC5  50                 	db	80	;'P'
  1949  00FFC6  4F                 	db	79	;'O'
  1950  00FFC7  54                 	db	84	;'T'
  1951  00FFC8  20                 	db	32
  1952  00FFC9  25                 	db	37
  1953  00FFCA  64                 	db	100	;'d'
  1954  00FFCB  25                 	db	37
  1955  00FFCC  25                 	db	37
  1956  00FFCD  00                 	db	0
  1957  00FFCE                     STR_80:
  1958  00FFCE  68                 	db	104	;'h'
  1959  00FFCF  68                 	db	104	;'h'
  1960  00FFD0  58                 	db	88	;'X'
  1961  00FFD1  00                 	db	0
  1962  00FFD2                     STR_4:
  1963  00FFD2  68                 	db	104	;'h'
  1964  00FFD3  68                 	db	104	;'h'
  1965  00FFD4  64                 	db	100	;'d'
  1966  00FFD5  00                 	db	0
  1967  00FFD6                     STR_8:
  1968  00FFD6  68                 	db	104	;'h'
  1969  00FFD7  68                 	db	104	;'h'
  1970  00FFD8  69                 	db	105	;'i'
  1971  00FFD9  00                 	db	0
  1972  00FFDA                     STR_46:
  1973  00FFDA  68                 	db	104	;'h'
  1974  00FFDB  68                 	db	104	;'h'
  1975  00FFDC  6E                 	db	110	;'n'
  1976  00FFDD  00                 	db	0
  1977  00FFDE                     STR_31:
  1978  00FFDE  68                 	db	104	;'h'
  1979  00FFDF  68                 	db	104	;'h'
  1980  00FFE0  6F                 	db	111	;'o'
  1981  00FFE1  00                 	db	0
  1982  00FFE2                     STR_61:
  1983  00FFE2  68                 	db	104	;'h'
  1984  00FFE3  68                 	db	104	;'h'
  1985  00FFE4  75                 	db	117	;'u'
  1986  00FFE5  00                 	db	0
  1987  00FFE6                     STR_76:
  1988  00FFE6  68                 	db	104	;'h'
  1989  00FFE7  68                 	db	104	;'h'
  1990  00FFE8  78                 	db	120	;'x'
  1991  00FFE9  00                 	db	0
  1992  00FFEA                     STR_98:
  1993  00FFEA  7A                 	db	122	;'z'
  1994  00FFEB  58                 	db	88	;'X'
  1995  00FFEC  00                 	db	0
  1996  00FFED                     STR_22:
  1997  00FFED  7A                 	db	122	;'z'
  1998  00FFEE  64                 	db	100	;'d'
  1999  00FFEF  00                 	db	0
  2000  00FFF0                     STR_26:
  2001  00FFF0  7A                 	db	122	;'z'
  2002  00FFF1  69                 	db	105	;'i'
  2003  00FFF2  00                 	db	0
  2004  00FFF3                     STR_56:
  2005  00FFF3  7A                 	db	122	;'z'
  2006  00FFF4  6E                 	db	110	;'n'
  2007  00FFF5  00                 	db	0
  2008  00FFF6                     STR_41:
  2009  00FFF6  7A                 	db	122	;'z'
  2010  00FFF7  6F                 	db	111	;'o'
  2011  00FFF8  00                 	db	0
  2012  00FFF9                     STR_71:
  2013  00FFF9  7A                 	db	122	;'z'
  2014  00FFFA  75                 	db	117	;'u'
  2015  00FFFB  00                 	db	0
  2016  00FFFC                     STR_94:
  2017  00FFFC  7A                 	db	122	;'z'
  2018  00FFFD  78                 	db	120	;'x'
  2019  00FFFE  00                 	db	0
  2020  0000                     
  2021                           ; #config settings
  2022  00FFFF  00                 	db	0	; dummy byte at the end
  2023  0000                     
  2024                           	psect	nvCOMRAM
  2025  000041                     __pnvCOMRAM:
  2026                           	opt callstack 0
  2027  000041                     _INT0_InterruptHandler:
  2028                           	opt callstack 0
  2029  000041                     	ds	2
  2030  000043                     _timer1ReloadVal:
  2031                           	opt callstack 0
  2032  000043                     	ds	2
  2033  000045                     _IOCB4_InterruptHandler:
  2034                           	opt callstack 0
  2035  000045                     	ds	2
  2036  0000                     _IOCBbits	set	3930
  2037  0000                     _WPUB	set	3931
  2038  0000                     _ANCON1	set	3932
  2039  0000                     _ANCON0	set	3933
  2040  0000                     _LATEbits	set	3981
  2041  0000                     _SSPSTATbits	set	4039
  2042  0000                     _LATAbits	set	3977
  2043  0000                     _PORTBbits	set	3969
  2044  0000                     _T1GCONbits	set	4010
  2045  0000                     _T1CONbits	set	4045
  2046  0000                     _T1CON	set	4045
  2047  0000                     _TMR1L	set	4046
  2048  0000                     _TMR1H	set	4047
  2049  0000                     _T1GCON	set	4010
  2050  0000                     _ADCON0bits	set	4034
  2051  0000                     _ADRESL	set	4035
  2052  0000                     _ADRESH	set	4036
  2053  0000                     _ADCON2	set	4032
  2054  0000                     _ADCON1	set	4033
  2055  0000                     _ADCON0	set	4034
  2056  0000                     _PIR1bits	set	3998
  2057  0000                     _SSPBUF	set	4041
  2058  0000                     _SSPCON2	set	4037
  2059  0000                     _SSPCON1bits	set	4038
  2060  0000                     _TRISCbits	set	3988
  2061  0000                     _SSPADD	set	4040
  2062  0000                     _SSPCON1	set	4038
  2063  0000                     _SSPSTAT	set	4039
  2064  0000                     _INTCON2bits	set	4081
  2065  0000                     _TRISD	set	3989
  2066  0000                     _TRISC	set	3988
  2067  0000                     _TRISB	set	3987
  2068  0000                     _TRISA	set	3986
  2069  0000                     _TRISE	set	3990
  2070  0000                     _LATC	set	3979
  2071  0000                     _LATB	set	3978
  2072  0000                     _LATA	set	3977
  2073  0000                     _LATD	set	3980
  2074  0000                     _LATE	set	3981
  2075  0000                     _INTCONbits	set	4082
  2076  0000                     _RCONbits	set	4048
  2077  0000                     _REFOCON	set	3994
  2078  0000                     _OSCTUNE	set	3995
  2079  0000                     _OSCCON2	set	4050
  2080  0000                     _OSCCON	set	4051
  2081                           
  2082                           	psect	cinit
  2083  003D16                     __pcinit:
  2084                           	opt callstack 0
  2085  003D16                     start_initialization:
  2086                           	opt callstack 0
  2087  003D16                     __initialization:
  2088                           	opt callstack 0
  2089                           
  2090                           ; Initialize objects allocated to COMRAM (7 bytes)
  2091                           ; load TBLPTR registers with __pidataCOMRAM
  2092  003D16  0EBA               	movlw	low __pidataCOMRAM
  2093  003D18  6EF6               	movwf	tblptrl,c
  2094  003D1A  0E43               	movlw	high __pidataCOMRAM
  2095  003D1C  6EF7               	movwf	tblptrh,c
  2096  003D1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2097  003D20  6EF8               	movwf	tblptru,c
  2098  003D22  EE00  F03A         	lfsr	0,__pdataCOMRAM
  2099  003D26  EE10 F007          	lfsr	1,7
  2100  003D2A                     copy_data0:
  2101  003D2A  0009               	tblrd		*+
  2102  003D2C  CFF5 FFEE          	movff	tablat,postinc0
  2103  003D30  50E5               	movf	postdec1,w,c
  2104  003D32  50E1               	movf	fsr1l,w,c
  2105  003D34  E1FA               	bnz	copy_data0
  2106                           
  2107                           ; Clear objects allocated to BANK1 (132 bytes)
  2108  003D36  EE01  F000         	lfsr	0,__pbssBANK1
  2109  003D3A  0E84               	movlw	132
  2110  003D3C                     clear_0:
  2111  003D3C  6AEE               	clrf	postinc0,c
  2112  003D3E  06E8               	decf	wreg,f,c
  2113  003D40  E1FD               	bnz	clear_0
  2114                           
  2115                           ; Clear objects allocated to BANK0 (14 bytes)
  2116  003D42  EE00  F0F1         	lfsr	0,__pbssBANK0
  2117  003D46  0E0E               	movlw	14
  2118  003D48                     clear_1:
  2119  003D48  6AEE               	clrf	postinc0,c
  2120  003D4A  06E8               	decf	wreg,f,c
  2121  003D4C  E1FD               	bnz	clear_1
  2122                           
  2123                           ; Clear objects allocated to COMRAM (6 bytes)
  2124  003D4E  6A4C               	clrf	(__pbssCOMRAM+5)& (0+255),c
  2125  003D50  6A4B               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2126  003D52  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2127  003D54  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2128  003D56  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2129  003D58  6A47               	clrf	__pbssCOMRAM& (0+255),c
  2130  003D5A                     end_of_initialization:
  2131                           	opt callstack 0
  2132  003D5A                     __end_of__initialization:
  2133                           	opt callstack 0
  2134  003D5A  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2135  003D5C  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2136  003D5E  0100               	movlb	0
  2137  003D60  EFFE  F017         	goto	_main	;jump to C main() function
  2138                           
  2139                           	psect	bssCOMRAM
  2140  000047                     __pbssCOMRAM:
  2141                           	opt callstack 0
  2142  000047                     _errno:
  2143                           	opt callstack 0
  2144  000047                     	ds	2
  2145  000049                     _BUT_COMUT:
  2146                           	opt callstack 0
  2147  000049                     	ds	2
  2148  00004B                     _ADC_InterruptHandler:
  2149                           	opt callstack 0
  2150  00004B                     	ds	2
  2151                           
  2152                           	psect	dataCOMRAM
  2153  00003A                     __pdataCOMRAM:
  2154                           	opt callstack 0
  2155  00003A                     stoa@F1152:
  2156                           	opt callstack 0
  2157  00003A                     	ds	7
  2158                           
  2159                           	psect	bssBANK0
  2160  0000F1                     __pbssBANK0:
  2161                           	opt callstack 0
  2162  0000F1                     _nout:
  2163                           	opt callstack 0
  2164  0000F1                     	ds	2
  2165  0000F3                     _width:
  2166                           	opt callstack 0
  2167  0000F3                     	ds	2
  2168  0000F5                     _prec:
  2169                           	opt callstack 0
  2170  0000F5                     	ds	2
  2171  0000F7                     _flags:
  2172                           	opt callstack 0
  2173  0000F7                     	ds	2
  2174  0000F9                     _global_bg_color:
  2175                           	opt callstack 0
  2176  0000F9                     	ds	2
  2177  0000FB                     _POT_VAL:
  2178                           	opt callstack 0
  2179  0000FB                     	ds	2
  2180  0000FD                     _code_digit:
  2181                           	opt callstack 0
  2182  0000FD                     	ds	2
  2183                           
  2184                           	psect	bssBANK1
  2185  000100                     __pbssBANK1:
  2186                           	opt callstack 0
  2187  000100                     _sPOT:
  2188                           	opt callstack 0
  2189  000100                     	ds	100
  2190  000164                     _dbuf:
  2191                           	opt callstack 0
  2192  000164                     	ds	32
  2193                           
  2194                           	psect	cstackBANK0
  2195  000060                     __pcstackBANK0:
  2196                           	opt callstack 0
  2197  000060                     ??_TMR1_Initialize:
  2198  000060                     ??_SPI_Open:
  2199  000060                     ??_msDelay:
  2200  000060                     ?_strlen:
  2201                           	opt callstack 0
  2202  000060                     ?_isupper:
  2203                           	opt callstack 0
  2204  000060                     ?_isalpha:
  2205                           	opt callstack 0
  2206  000060                     ?_isdigit:
  2207                           	opt callstack 0
  2208  000060                     ?_strncmp:
  2209                           	opt callstack 0
  2210  000060                     ?_isspace:
  2211                           	opt callstack 0
  2212  000060                     ?_islower:
  2213                           	opt callstack 0
  2214  000060                     ?_ADC_GetConversion:
  2215                           	opt callstack 0
  2216  000060                     ?___wmul:
  2217                           	opt callstack 0
  2218  000060                     ?___xxtofl:
  2219                           	opt callstack 0
  2220  000060                     ?___aodiv:
  2221                           	opt callstack 0
  2222  000060                     ?___aomod:
  2223                           	opt callstack 0
  2224  000060                     ?___lodiv:
  2225                           	opt callstack 0
  2226  000060                     ?___lomod:
  2227                           	opt callstack 0
  2228  000060                     SPI_ExchangeByte@data:
  2229                           	opt callstack 0
  2230  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  2231                           	opt callstack 0
  2232  000060                     INT0_SetInterruptHandler@InterruptHandler:
  2233                           	opt callstack 0
  2234  000060                     ___wmul@multiplier:
  2235                           	opt callstack 0
  2236  000060                     isalpha@c:
  2237                           	opt callstack 0
  2238  000060                     isdigit@c:
  2239                           	opt callstack 0
  2240  000060                     isspace@c:
  2241                           	opt callstack 0
  2242  000060                     isupper@c:
  2243                           	opt callstack 0
  2244  000060                     fputc@c:
  2245                           	opt callstack 0
  2246  000060                     strlen@s:
  2247                           	opt callstack 0
  2248  000060                     strncmp@_l:
  2249                           	opt callstack 0
  2250  000060                     islower@c:
  2251                           	opt callstack 0
  2252  000060                     ___xxtofl@val:
  2253                           	opt callstack 0
  2254  000060                     ___aodiv@dividend:
  2255                           	opt callstack 0
  2256  000060                     ___aomod@dividend:
  2257                           	opt callstack 0
  2258  000060                     ___lodiv@dividend:
  2259                           	opt callstack 0
  2260  000060                     ___lomod@dividend:
  2261                           	opt callstack 0
  2262                           
  2263                           ; 8 bytes @ 0x0
  2264  000060                     	ds	1
  2265  000061                     SPI_Open@spiUniqueConfiguration:
  2266                           	opt callstack 0
  2267  000061                     msDelay@ms:
  2268                           	opt callstack 0
  2269  000061                     lcd_send@value:
  2270                           	opt callstack 0
  2271                           
  2272                           ; 1 bytes @ 0x1
  2273  000061                     	ds	1
  2274  000062                     ??_isupper:
  2275  000062                     ??_isalpha:
  2276  000062                     ??_isdigit:
  2277  000062                     ??_isspace:
  2278  000062                     ??_islower:
  2279  000062                     ??_ADC_GetConversion:
  2280  000062                     msDelay@k:
  2281                           	opt callstack 0
  2282  000062                     lcd_send@dc:
  2283                           	opt callstack 0
  2284  000062                     ___wmul@multiplicand:
  2285                           	opt callstack 0
  2286  000062                     fputc@fp:
  2287                           	opt callstack 0
  2288  000062                     strlen@a:
  2289                           	opt callstack 0
  2290  000062                     strncmp@_r:
  2291                           	opt callstack 0
  2292                           
  2293                           ; 2 bytes @ 0x2
  2294  000062                     	ds	1
  2295  000063                     lcd_set_cursor_x@x:
  2296                           	opt callstack 0
  2297  000063                     lcd_set_cursor_y@y:
  2298                           	opt callstack 0
  2299  000063                     lcd_draw_pixel@color:
  2300                           	opt callstack 0
  2301                           
  2302                           ; 2 bytes @ 0x3
  2303  000063                     	ds	1
  2304  000064                     ??_fputc:
  2305  000064                     ??___xxtofl:
  2306  000064                     ADC_GetConversion@channel:
  2307                           	opt callstack 0
  2308  000064                     ___wmul@product:
  2309                           	opt callstack 0
  2310  000064                     strncmp@n:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x4
  2314  000064                     	ds	1
  2315  000065                     lcd_set_cursor@x:
  2316                           	opt callstack 0
  2317                           
  2318                           ; 2 bytes @ 0x5
  2319  000065                     	ds	1
  2320  000066                     ??_strncmp:
  2321  000066                     ?_toupper:
  2322                           	opt callstack 0
  2323  000066                     _isspace$1998:
  2324                           	opt callstack 0
  2325  000066                     toupper@c:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x6
  2329  000066                     	ds	1
  2330  000067                     ?_atoi:
  2331                           	opt callstack 0
  2332  000067                     lcd_set_cursor@y:
  2333                           	opt callstack 0
  2334  000067                     atoi@s:
  2335                           	opt callstack 0
  2336  000067                     strncmp@l:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 2 bytes @ 0x7
  2340  000067                     	ds	1
  2341  000068                     ??_toupper:
  2342  000068                     ___xxtofl@sign:
  2343                           	opt callstack 0
  2344  000068                     ___aodiv@divisor:
  2345                           	opt callstack 0
  2346  000068                     ___aomod@divisor:
  2347                           	opt callstack 0
  2348  000068                     ___lodiv@divisor:
  2349                           	opt callstack 0
  2350  000068                     ___lomod@divisor:
  2351                           	opt callstack 0
  2352                           
  2353                           ; 8 bytes @ 0x8
  2354  000068                     	ds	1
  2355  000069                     ??_atoi:
  2356  000069                     ?_stoa:
  2357                           	opt callstack 0
  2358  000069                     ___xxtofl@exp:
  2359                           	opt callstack 0
  2360  000069                     lcd_fill@bg_color:
  2361                           	opt callstack 0
  2362  000069                     lcd_draw_char@x:
  2363                           	opt callstack 0
  2364  000069                     stoa@fp:
  2365                           	opt callstack 0
  2366  000069                     fputs@s:
  2367                           	opt callstack 0
  2368  000069                     strncmp@r:
  2369                           	opt callstack 0
  2370                           
  2371                           ; 2 bytes @ 0x9
  2372  000069                     	ds	1
  2373  00006A                     ___xxtofl@arg:
  2374                           	opt callstack 0
  2375                           
  2376                           ; 4 bytes @ 0xA
  2377  00006A                     	ds	1
  2378  00006B                     lcd_fill@height:
  2379                           	opt callstack 0
  2380  00006B                     lcd_draw_char@y:
  2381                           	opt callstack 0
  2382  00006B                     stoa@s:
  2383                           	opt callstack 0
  2384  00006B                     fputs@fp:
  2385                           	opt callstack 0
  2386                           
  2387                           ; 2 bytes @ 0xB
  2388  00006B                     	ds	1
  2389  00006C                     _toupper$2078:
  2390                           	opt callstack 0
  2391                           
  2392                           ; 2 bytes @ 0xC
  2393  00006C                     	ds	1
  2394  00006D                     ??_stoa:
  2395  00006D                     fputs@c:
  2396                           	opt callstack 0
  2397  00006D                     lcd_fill@width:
  2398                           	opt callstack 0
  2399  00006D                     lcd_draw_char@fIndex:
  2400                           	opt callstack 0
  2401  00006D                     atoi@neg:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0xD
  2405  00006D                     	ds	1
  2406  00006E                     ?___flmul:
  2407                           	opt callstack 0
  2408  00006E                     fputs@i:
  2409                           	opt callstack 0
  2410  00006E                     ___flmul@b:
  2411                           	opt callstack 0
  2412  00006E                     stoa@nuls:
  2413                           	opt callstack 0
  2414                           
  2415                           ; 7 bytes @ 0xE
  2416  00006E                     	ds	1
  2417  00006F                     lcd_draw_char@fg_color:
  2418                           	opt callstack 0
  2419  00006F                     _atoi$1971:
  2420                           	opt callstack 0
  2421                           
  2422                           ; 2 bytes @ 0xF
  2423  00006F                     	ds	1
  2424  000070                     ?_pad:
  2425                           	opt callstack 0
  2426  000070                     ___aodiv@counter:
  2427                           	opt callstack 0
  2428  000070                     ___aomod@counter:
  2429                           	opt callstack 0
  2430  000070                     ___lomod@counter:
  2431                           	opt callstack 0
  2432  000070                     pad@fp:
  2433                           	opt callstack 0
  2434  000070                     ___lodiv@quotient:
  2435                           	opt callstack 0
  2436                           
  2437                           ; 8 bytes @ 0x10
  2438  000070                     	ds	1
  2439  000071                     ___aodiv@sign:
  2440                           	opt callstack 0
  2441  000071                     ___aomod@sign:
  2442                           	opt callstack 0
  2443  000071                     lcd_draw_char@bg_color:
  2444                           	opt callstack 0
  2445  000071                     _atoi$1973:
  2446                           	opt callstack 0
  2447                           
  2448                           ; 2 bytes @ 0x11
  2449  000071                     	ds	1
  2450  000072                     ?_abs:
  2451                           	opt callstack 0
  2452  000072                     pad@buf:
  2453                           	opt callstack 0
  2454  000072                     abs@a:
  2455                           	opt callstack 0
  2456  000072                     ___flmul@a:
  2457                           	opt callstack 0
  2458  000072                     ___aodiv@quotient:
  2459                           	opt callstack 0
  2460                           
  2461                           ; 8 bytes @ 0x12
  2462  000072                     	ds	1
  2463  000073                     ??_lcd_draw_char:
  2464  000073                     _atoi$1972:
  2465                           	opt callstack 0
  2466                           
  2467                           ; 1 bytes @ 0x13
  2468  000073                     	ds	1
  2469  000074                     ??_abs:
  2470  000074                     pad@p:
  2471                           	opt callstack 0
  2472  000074                     atoi@n:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 2 bytes @ 0x14
  2476  000074                     	ds	1
  2477  000075                     stoa@i:
  2478                           	opt callstack 0
  2479                           
  2480                           ; 2 bytes @ 0x15
  2481  000075                     	ds	1
  2482  000076                     ??___flmul:
  2483  000076                     ??_pad:
  2484                           
  2485                           ; 1 bytes @ 0x16
  2486  000076                     	ds	1
  2487  000077                     pad@i:
  2488                           	opt callstack 0
  2489  000077                     stoa@w:
  2490                           	opt callstack 0
  2491                           
  2492                           ; 2 bytes @ 0x17
  2493  000077                     	ds	1
  2494  000078                     ___lodiv@counter:
  2495                           	opt callstack 0
  2496                           
  2497                           ; 1 bytes @ 0x18
  2498  000078                     	ds	1
  2499  000079                     pad@w:
  2500                           	opt callstack 0
  2501  000079                     stoa@cp:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 2 bytes @ 0x19
  2505  000079                     	ds	1
  2506  00007A                     ___flmul@sign:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 1 bytes @ 0x1A
  2510  00007A                     	ds	1
  2511  00007B                     ?_ctoa:
  2512                           	opt callstack 0
  2513  00007B                     ?_dtoa:
  2514                           	opt callstack 0
  2515  00007B                     ?_otoa:
  2516                           	opt callstack 0
  2517  00007B                     ?_utoa:
  2518                           	opt callstack 0
  2519  00007B                     ?_xtoa:
  2520                           	opt callstack 0
  2521  00007B                     ctoa@fp:
  2522                           	opt callstack 0
  2523  00007B                     dtoa@fp:
  2524                           	opt callstack 0
  2525  00007B                     otoa@fp:
  2526                           	opt callstack 0
  2527  00007B                     stoa@p:
  2528                           	opt callstack 0
  2529  00007B                     utoa@fp:
  2530                           	opt callstack 0
  2531  00007B                     xtoa@fp:
  2532                           	opt callstack 0
  2533  00007B                     ___flmul@grs:
  2534                           	opt callstack 0
  2535                           
  2536                           ; 4 bytes @ 0x1B
  2537  00007B                     	ds	1
  2538  00007C                     lcd_draw_char@j:
  2539                           	opt callstack 0
  2540                           
  2541                           ; 1 bytes @ 0x1C
  2542  00007C                     	ds	1
  2543  00007D                     lcd_draw_char@k:
  2544                           	opt callstack 0
  2545  00007D                     ctoa@c:
  2546                           	opt callstack 0
  2547  00007D                     stoa@l:
  2548                           	opt callstack 0
  2549  00007D                     dtoa@d:
  2550                           	opt callstack 0
  2551  00007D                     otoa@d:
  2552                           	opt callstack 0
  2553  00007D                     utoa@d:
  2554                           	opt callstack 0
  2555  00007D                     xtoa@d:
  2556                           	opt callstack 0
  2557                           
  2558                           ; 8 bytes @ 0x1D
  2559  00007D                     	ds	1
  2560  00007E                     lcd_draw_char@i:
  2561                           	opt callstack 0
  2562  00007E                     ctoa@w:
  2563                           	opt callstack 0
  2564                           
  2565                           ; 2 bytes @ 0x1E
  2566  00007E                     	ds	1
  2567  00007F                     ___flmul@aexp:
  2568                           	opt callstack 0
  2569  00007F                     lcd_draw_string@x:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x1F
  2573  00007F                     	ds	1
  2574  000080                     ___flmul@bexp:
  2575                           	opt callstack 0
  2576                           
  2577                           ; 1 bytes @ 0x20
  2578  000080                     	ds	1
  2579  000081                     lcd_draw_string@y:
  2580                           	opt callstack 0
  2581  000081                     ___flmul@prod:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 4 bytes @ 0x21
  2585  000081                     	ds	2
  2586  000083                     lcd_draw_string@pS:
  2587                           	opt callstack 0
  2588                           
  2589                           ; 2 bytes @ 0x23
  2590  000083                     	ds	2
  2591  000085                     ??_dtoa:
  2592  000085                     ??_otoa:
  2593  000085                     ??_utoa:
  2594  000085                     xtoa@x:
  2595                           	opt callstack 0
  2596  000085                     lcd_draw_string@fg_color:
  2597                           	opt callstack 0
  2598  000085                     ___flmul@temp:
  2599                           	opt callstack 0
  2600                           
  2601                           ; 2 bytes @ 0x25
  2602  000085                     	ds	1
  2603  000086                     ??_xtoa:
  2604                           
  2605                           ; 1 bytes @ 0x26
  2606  000086                     	ds	1
  2607  000087                     ?___fltol:
  2608                           	opt callstack 0
  2609  000087                     lcd_draw_string@bg_color:
  2610                           	opt callstack 0
  2611  000087                     ___fltol@f1:
  2612                           	opt callstack 0
  2613                           
  2614                           ; 4 bytes @ 0x27
  2615  000087                     	ds	2
  2616  000089                     ??_lcd_draw_string:
  2617                           
  2618                           ; 1 bytes @ 0x29
  2619  000089                     	ds	2
  2620  00008B                     ??___fltol:
  2621                           
  2622                           ; 1 bytes @ 0x2B
  2623  00008B                     	ds	2
  2624  00008D                     lcd_draw_string@k:
  2625                           	opt callstack 0
  2626  00008D                     _dtoa$1358:
  2627                           	opt callstack 0
  2628  00008D                     otoa@p:
  2629                           	opt callstack 0
  2630  00008D                     utoa@p:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x2D
  2634  00008D                     	ds	1
  2635  00008E                     _xtoa$1394:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 2 bytes @ 0x2E
  2639  00008E                     	ds	1
  2640  00008F                     ___fltol@sign1:
  2641                           	opt callstack 0
  2642  00008F                     lcd_draw_string@lIndex:
  2643                           	opt callstack 0
  2644  00008F                     dtoa@p:
  2645                           	opt callstack 0
  2646  00008F                     otoa@t:
  2647                           	opt callstack 0
  2648  00008F                     utoa@w:
  2649                           	opt callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x2F
  2652  00008F                     	ds	1
  2653  000090                     ___fltol@exp1:
  2654                           	opt callstack 0
  2655  000090                     _xtoa$1395:
  2656                           	opt callstack 0
  2657                           
  2658                           ; 2 bytes @ 0x30
  2659  000090                     	ds	1
  2660  000091                     dtoa@w:
  2661                           	opt callstack 0
  2662  000091                     otoa@w:
  2663                           	opt callstack 0
  2664  000091                     utoa@n:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 8 bytes @ 0x31
  2668  000091                     	ds	1
  2669  000092                     xtoa@p:
  2670                           	opt callstack 0
  2671                           
  2672                           ; 2 bytes @ 0x32
  2673  000092                     	ds	1
  2674  000093                     dtoa@s:
  2675                           	opt callstack 0
  2676  000093                     otoa@n:
  2677                           	opt callstack 0
  2678                           
  2679                           ; 8 bytes @ 0x33
  2680  000093                     	ds	1
  2681  000094                     xtoa@w:
  2682                           	opt callstack 0
  2683                           
  2684                           ; 2 bytes @ 0x34
  2685  000094                     	ds	1
  2686  000095                     dtoa@n:
  2687                           	opt callstack 0
  2688                           
  2689                           ; 8 bytes @ 0x35
  2690  000095                     	ds	1
  2691  000096                     xtoa@n:
  2692                           	opt callstack 0
  2693                           
  2694                           ; 8 bytes @ 0x36
  2695  000096                     	ds	3
  2696  000099                     utoa@i:
  2697                           	opt callstack 0
  2698                           
  2699                           ; 2 bytes @ 0x39
  2700  000099                     	ds	2
  2701  00009B                     otoa@i:
  2702                           	opt callstack 0
  2703                           
  2704                           ; 2 bytes @ 0x3B
  2705  00009B                     	ds	2
  2706  00009D                     dtoa@i:
  2707                           	opt callstack 0
  2708                           
  2709                           ; 2 bytes @ 0x3D
  2710  00009D                     	ds	1
  2711  00009E                     xtoa@i:
  2712                           	opt callstack 0
  2713                           
  2714                           ; 2 bytes @ 0x3E
  2715  00009E                     	ds	2
  2716  0000A0                     xtoa@c:
  2717                           	opt callstack 0
  2718                           
  2719                           ; 2 bytes @ 0x40
  2720  0000A0                     	ds	2
  2721  0000A2                     ?_vfpfcnvrt:
  2722                           	opt callstack 0
  2723  0000A2                     vfpfcnvrt@fp:
  2724                           	opt callstack 0
  2725                           
  2726                           ; 2 bytes @ 0x42
  2727  0000A2                     	ds	2
  2728  0000A4                     vfpfcnvrt@fmt:
  2729                           	opt callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x44
  2732  0000A4                     	ds	2
  2733  0000A6                     vfpfcnvrt@ap:
  2734                           	opt callstack 0
  2735                           
  2736                           ; 2 bytes @ 0x46
  2737  0000A6                     	ds	2
  2738  0000A8                     ??_vfpfcnvrt:
  2739                           
  2740                           ; 1 bytes @ 0x48
  2741  0000A8                     	ds	4
  2742  0000AC                     vfpfcnvrt@cp:
  2743                           	opt callstack 0
  2744                           
  2745                           ; 2 bytes @ 0x4C
  2746  0000AC                     	ds	2
  2747  0000AE                     vfpfcnvrt@done:
  2748                           	opt callstack 0
  2749                           
  2750                           ; 2 bytes @ 0x4E
  2751  0000AE                     	ds	2
  2752  0000B0                     _vfpfcnvrt$1409:
  2753                           	opt callstack 0
  2754                           
  2755                           ; 2 bytes @ 0x50
  2756  0000B0                     	ds	2
  2757  0000B2                     _vfpfcnvrt$1410:
  2758                           	opt callstack 0
  2759                           
  2760                           ; 2 bytes @ 0x52
  2761  0000B2                     	ds	2
  2762  0000B4                     vfpfcnvrt@ll:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 8 bytes @ 0x54
  2766  0000B4                     	ds	8
  2767  0000BC                     vfpfcnvrt@vp:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 2 bytes @ 0x5C
  2771  0000BC                     	ds	2
  2772  0000BE                     vfpfcnvrt@c:
  2773                           	opt callstack 0
  2774                           
  2775                           ; 1 bytes @ 0x5E
  2776  0000BE                     	ds	1
  2777  0000BF                     vfpfcnvrt@llu:
  2778                           	opt callstack 0
  2779                           
  2780                           ; 8 bytes @ 0x5F
  2781  0000BF                     	ds	8
  2782  0000C7                     ?_vfprintf:
  2783                           	opt callstack 0
  2784  0000C7                     vfprintf@fp:
  2785                           	opt callstack 0
  2786                           
  2787                           ; 2 bytes @ 0x67
  2788  0000C7                     	ds	2
  2789  0000C9                     vfprintf@fmt:
  2790                           	opt callstack 0
  2791                           
  2792                           ; 2 bytes @ 0x69
  2793  0000C9                     	ds	2
  2794  0000CB                     vfprintf@ap:
  2795                           	opt callstack 0
  2796                           
  2797                           ; 2 bytes @ 0x6B
  2798  0000CB                     	ds	2
  2799  0000CD                     vfprintf@cfmt:
  2800                           	opt callstack 0
  2801                           
  2802                           ; 2 bytes @ 0x6D
  2803  0000CD                     	ds	2
  2804  0000CF                     ?_vsnprintf:
  2805                           	opt callstack 0
  2806  0000CF                     vsnprintf@s:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 2 bytes @ 0x6F
  2810  0000CF                     	ds	2
  2811  0000D1                     vsnprintf@n:
  2812                           	opt callstack 0
  2813                           
  2814                           ; 2 bytes @ 0x71
  2815  0000D1                     	ds	2
  2816  0000D3                     vsnprintf@fmt:
  2817                           	opt callstack 0
  2818                           
  2819                           ; 2 bytes @ 0x73
  2820  0000D3                     	ds	2
  2821  0000D5                     vsnprintf@ap:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 2 bytes @ 0x75
  2825  0000D5                     	ds	2
  2826  0000D7                     ??_vsnprintf:
  2827                           
  2828                           ; 1 bytes @ 0x77
  2829  0000D7                     	ds	4
  2830  0000DB                     _vsnprintf$2110:
  2831                           	opt callstack 0
  2832                           
  2833                           ; 2 bytes @ 0x7B
  2834  0000DB                     	ds	2
  2835  0000DD                     vsnprintf@cnt:
  2836                           	opt callstack 0
  2837                           
  2838                           ; 2 bytes @ 0x7D
  2839  0000DD                     	ds	2
  2840  0000DF                     vsnprintf@f:
  2841                           	opt callstack 0
  2842                           
  2843                           ; 6 bytes @ 0x7F
  2844  0000DF                     	ds	6
  2845  0000E5                     ?_snprintf:
  2846                           	opt callstack 0
  2847  0000E5                     snprintf@s:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 2 bytes @ 0x85
  2851  0000E5                     	ds	2
  2852  0000E7                     snprintf@n:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 2 bytes @ 0x87
  2856  0000E7                     	ds	2
  2857  0000E9                     snprintf@fmt:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 2 bytes @ 0x89
  2861  0000E9                     	ds	4
  2862  0000ED                     
  2863                           ; 1 bytes @ 0x8D
  2864  0000ED                     	ds	2
  2865  0000EF                     snprintf@ap:
  2866                           	opt callstack 0
  2867                           
  2868                           ; 2 bytes @ 0x8F
  2869  0000EF                     	ds	2
  2870  0000F1                     
  2871                           ; 1 bytes @ 0x91
  2872                           
  2873                           	psect	cstackCOMRAM
  2874  000001                     __pcstackCOMRAM:
  2875                           	opt callstack 0
  2876  000001                     ??_IOCB4_InterruptCall:
  2877  000001                     i2SPI_ExchangeByte@data:
  2878                           	opt callstack 0
  2879                           
  2880                           ; 1 bytes @ 0x0
  2881  000001                     	ds	1
  2882  000002                     i2lcd_send@value:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 1 bytes @ 0x1
  2886  000002                     	ds	1
  2887  000003                     i2lcd_send@dc:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 1 bytes @ 0x2
  2891  000003                     	ds	1
  2892  000004                     i2lcd_set_cursor_x@x:
  2893                           	opt callstack 0
  2894  000004                     i2lcd_set_cursor_y@y:
  2895                           	opt callstack 0
  2896  000004                     i2lcd_draw_pixel@color:
  2897                           	opt callstack 0
  2898                           
  2899                           ; 2 bytes @ 0x3
  2900  000004                     	ds	2
  2901  000006                     i2lcd_set_cursor@x:
  2902                           	opt callstack 0
  2903                           
  2904                           ; 2 bytes @ 0x5
  2905  000006                     	ds	2
  2906  000008                     i2lcd_set_cursor@y:
  2907                           	opt callstack 0
  2908                           
  2909                           ; 2 bytes @ 0x7
  2910  000008                     	ds	2
  2911  00000A                     i2lcd_draw_char@x:
  2912                           	opt callstack 0
  2913                           
  2914                           ; 2 bytes @ 0x9
  2915  00000A                     	ds	2
  2916  00000C                     i2lcd_draw_char@y:
  2917                           	opt callstack 0
  2918                           
  2919                           ; 2 bytes @ 0xB
  2920  00000C                     	ds	2
  2921  00000E                     i2lcd_draw_char@fIndex:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 2 bytes @ 0xD
  2925  00000E                     	ds	2
  2926  000010                     i2lcd_draw_char@fg_color:
  2927                           	opt callstack 0
  2928                           
  2929                           ; 2 bytes @ 0xF
  2930  000010                     	ds	2
  2931  000012                     i2lcd_draw_char@bg_color:
  2932                           	opt callstack 0
  2933                           
  2934                           ; 2 bytes @ 0x11
  2935  000012                     	ds	2
  2936  000014                     ??i2_lcd_draw_char:
  2937                           
  2938                           ; 1 bytes @ 0x13
  2939  000014                     	ds	9
  2940  00001D                     i2lcd_draw_char@j:
  2941                           	opt callstack 0
  2942                           
  2943                           ; 1 bytes @ 0x1C
  2944  00001D                     	ds	1
  2945  00001E                     i2lcd_draw_char@k:
  2946                           	opt callstack 0
  2947                           
  2948                           ; 1 bytes @ 0x1D
  2949  00001E                     	ds	1
  2950  00001F                     i2lcd_draw_char@i:
  2951                           	opt callstack 0
  2952                           
  2953                           ; 1 bytes @ 0x1E
  2954  00001F                     	ds	1
  2955  000020                     i2lcd_draw_string@x:
  2956                           	opt callstack 0
  2957                           
  2958                           ; 2 bytes @ 0x1F
  2959  000020                     	ds	2
  2960  000022                     i2lcd_draw_string@y:
  2961                           	opt callstack 0
  2962                           
  2963                           ; 2 bytes @ 0x21
  2964  000022                     	ds	2
  2965  000024                     i2lcd_draw_string@pS:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 2 bytes @ 0x23
  2969  000024                     	ds	2
  2970  000026                     i2lcd_draw_string@fg_color:
  2971                           	opt callstack 0
  2972                           
  2973                           ; 2 bytes @ 0x25
  2974  000026                     	ds	2
  2975  000028                     i2lcd_draw_string@bg_color:
  2976                           	opt callstack 0
  2977                           
  2978                           ; 2 bytes @ 0x27
  2979  000028                     	ds	2
  2980  00002A                     ??i2_lcd_draw_string:
  2981                           
  2982                           ; 1 bytes @ 0x29
  2983  00002A                     	ds	4
  2984  00002E                     i2lcd_draw_string@k:
  2985                           	opt callstack 0
  2986                           
  2987                           ; 2 bytes @ 0x2D
  2988  00002E                     	ds	2
  2989  000030                     i2lcd_draw_string@lIndex:
  2990                           	opt callstack 0
  2991                           
  2992                           ; 2 bytes @ 0x2F
  2993  000030                     	ds	2
  2994  000032                     ??_INTERRUPT_InterruptManager:
  2995  000032                     
  2996                           ; 1 bytes @ 0x31
  2997  000032                     	ds	8
  2998                           
  2999 ;;
  3000 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3001 ;;
  3002 ;; *************** function _main *****************
  3003 ;; Defined at:
  3004 ;;		line 40 in file "main.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels required when called:   19
  3024 ;; This function calls:
  3025 ;;		_ADC_GetConversion
  3026 ;;		_INT0_SetInterruptHandler
  3027 ;;		_IOCB4_SetInterruptHandler
  3028 ;;		_SPI_Open
  3029 ;;		_SYSTEM_Initialize
  3030 ;;		___flmul
  3031 ;;		___fltol
  3032 ;;		___xxtofl
  3033 ;;		_lcd_draw_string
  3034 ;;		_lcd_init
  3035 ;;		_snprintf
  3036 ;; This function is called by:
  3037 ;;		Startup code after reset
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text0
  3042  002FFC                     __ptext0:
  3043                           	opt callstack 0
  3044  002FFC                     _main:
  3045                           	opt callstack 12
  3046  002FFC                     
  3047                           ;main.c: 43:     SYSTEM_Initialize();
  3048  002FFC  EC4E  F021         	call	_SYSTEM_Initialize	;wreg free
  3049  003000                     
  3050                           ;main.c: 44:     SPI_Open(SPI_DEFAULT);
  3051  003000  0E00               	movlw	0
  3052  003002  EC08  F01D         	call	_SPI_Open
  3053  003006                     
  3054                           ;main.c: 45:     lcd_init();
  3055  003006  EC8D  F009         	call	_lcd_init	;wreg free
  3056  00300A                     
  3057                           ;main.c: 47:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  3058  00300A  0E42               	movlw	low _IOCB4_InterruptCall
  3059  00300C  0100               	movlb	0	; () banked
  3060  00300E  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3061  003010  0E41               	movlw	high _IOCB4_InterruptCall
  3062  003012  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3063  003014  ECCF  F021         	call	_IOCB4_SetInterruptHandler	;wreg free
  3064  003018                     
  3065                           ;main.c: 48:     INT0_SetInterruptHandler(S3_toggle);
  3066  003018  0EC2               	movlw	low _S3_toggle
  3067  00301A  0100               	movlb	0	; () banked
  3068  00301C  6F60               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  3069  00301E  0E3C               	movlw	high _S3_toggle
  3070  003020  6F61               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3071  003022  ECD4  F021         	call	_INT0_SetInterruptHandler	;wreg free
  3072  003026                     
  3073                           ;main.c: 50:     (INTCONbits.GIE = 1);
  3074  003026  8EF2               	bsf	242,7,c	;volatile
  3075  003028                     
  3076                           ;main.c: 61:     lcd_draw_string(100,120,"HELLO WORLD",0xFFFF,0x0000);
  3077  003028  0E00               	movlw	0
  3078  00302A  0100               	movlb	0	; () banked
  3079  00302C  6F80               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3080  00302E  0E64               	movlw	100
  3081  003030  6F7F               	movwf	lcd_draw_string@x& (0+255),b
  3082  003032  0E00               	movlw	0
  3083  003034  6F82               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3084  003036  0E78               	movlw	120
  3085  003038  6F81               	movwf	lcd_draw_string@y& (0+255),b
  3086  00303A  0EAF               	movlw	low STR_2
  3087  00303C  6F83               	movwf	lcd_draw_string@pS& (0+255),b
  3088  00303E  0EFF               	movlw	high STR_2
  3089  003040  6F84               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3090  003042  0EFF               	movlw	255
  3091  003044  6F86               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3092  003046  6985               	setf	lcd_draw_string@fg_color& (0+255),b
  3093  003048  0E00               	movlw	0
  3094  00304A  6F88               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3095  00304C  0E00               	movlw	0
  3096  00304E  6F87               	movwf	lcd_draw_string@bg_color& (0+255),b
  3097  003050  ECA4  F018         	call	_lcd_draw_string	;wreg free
  3098  003054                     l5262:
  3099                           
  3100                           ;main.c: 64:     {;main.c: 66:         if(BUT_COMUT){
  3101  003054  5049               	movf	_BUT_COMUT^0,w,c
  3102  003056  104A               	iorwf	(_BUT_COMUT+1)^0,w,c
  3103  003058  B4D8               	btfsc	status,2,c
  3104  00305A  EF31  F018         	goto	u5321
  3105  00305E  EF33  F018         	goto	u5320
  3106  003062                     u5321:
  3107  003062  EF2A  F018         	goto	l5262
  3108  003066                     u5320:
  3109  003066                     
  3110                           ;main.c: 67:             code_digit=ADC_GetConversion(POT);
  3111  003066  0E00               	movlw	0
  3112  003068  ECD2  F01F         	call	_ADC_GetConversion
  3113  00306C  C060  F0FD         	movff	?_ADC_GetConversion,_code_digit
  3114  003070  C061  F0FE         	movff	?_ADC_GetConversion+1,_code_digit+1
  3115  003074                     
  3116                           ;main.c: 68:             POT_VAL=code_digit*0.0244200244200244;
  3117  003074  0E81               	movlw	129
  3118  003076  0100               	movlb	0	; () banked
  3119  003078  6F72               	movwf	___flmul@a& (0+255),b
  3120  00307A  0E0C               	movlw	12
  3121  00307C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3122  00307E  0EC8               	movlw	200
  3123  003080  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3124  003082  0E3C               	movlw	60
  3125  003084  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3126  003086  C0FD  F060         	movff	_code_digit,___xxtofl@val
  3127  00308A  C0FE  F061         	movff	_code_digit+1,___xxtofl@val+1
  3128  00308E  0E00               	movlw	0
  3129  003090  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3130  003092  0EFF               	movlw	-1
  3131  003094  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  3132  003096  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  3133  003098  0E01               	movlw	1
  3134  00309A  EC97  F012         	call	___xxtofl
  3135  00309E  C060  F06E         	movff	?___xxtofl,___flmul@b
  3136  0030A2  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  3137  0030A6  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  3138  0030AA  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  3139  0030AE  ECA8  F00B         	call	___flmul	;wreg free
  3140  0030B2  C06E  F087         	movff	?___flmul,___fltol@f1
  3141  0030B6  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  3142  0030BA  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  3143  0030BE  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  3144  0030C2  EC61  F01A         	call	___fltol	;wreg free
  3145  0030C6  C087  F0FB         	movff	?___fltol,_POT_VAL
  3146  0030CA  C088  F0FC         	movff	?___fltol+1,_POT_VAL+1
  3147  0030CE                     
  3148                           ;main.c: 69:             snprintf(sPOT,sizeof(sPOT),"POT %d%%",POT_VAL);
  3149  0030CE  0E00               	movlw	low _sPOT
  3150  0030D0  0100               	movlb	0	; () banked
  3151  0030D2  6FE5               	movwf	snprintf@s& (0+255),b
  3152  0030D4  0E01               	movlw	high _sPOT
  3153  0030D6  6FE6               	movwf	(snprintf@s+1)& (0+255),b
  3154  0030D8  0E00               	movlw	0
  3155  0030DA  6FE8               	movwf	(snprintf@n+1)& (0+255),b
  3156  0030DC  0E64               	movlw	100
  3157  0030DE  6FE7               	movwf	snprintf@n& (0+255),b
  3158  0030E0  0EC5               	movlw	low STR_3
  3159  0030E2  6FE9               	movwf	snprintf@fmt& (0+255),b
  3160  0030E4  0EFF               	movlw	high STR_3
  3161  0030E6  6FEA               	movwf	(snprintf@fmt+1)& (0+255),b
  3162  0030E8  C0FB  F0EB         	movff	_POT_VAL,?_snprintf+6
  3163  0030EC  C0FC  F0EC         	movff	_POT_VAL+1,?_snprintf+7
  3164  0030F0  ECBC  F020         	call	_snprintf	;wreg free
  3165  0030F4                     
  3166                           ;main.c: 70:             lcd_draw_string(100,100,sPOT,0xFFFF,0x0000);
  3167  0030F4  0E00               	movlw	0
  3168  0030F6  0100               	movlb	0	; () banked
  3169  0030F8  6F80               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3170  0030FA  0E64               	movlw	100
  3171  0030FC  6F7F               	movwf	lcd_draw_string@x& (0+255),b
  3172  0030FE  0E00               	movlw	0
  3173  003100  6F82               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3174  003102  0E64               	movlw	100
  3175  003104  6F81               	movwf	lcd_draw_string@y& (0+255),b
  3176  003106  0E00               	movlw	low _sPOT
  3177  003108  6F83               	movwf	lcd_draw_string@pS& (0+255),b
  3178  00310A  0E01               	movlw	high _sPOT
  3179  00310C  6F84               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3180  00310E  0EFF               	movlw	255
  3181  003110  6F86               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3182  003112  6985               	setf	lcd_draw_string@fg_color& (0+255),b
  3183  003114  0E00               	movlw	0
  3184  003116  6F88               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3185  003118  0E00               	movlw	0
  3186  00311A  6F87               	movwf	lcd_draw_string@bg_color& (0+255),b
  3187  00311C  ECA4  F018         	call	_lcd_draw_string	;wreg free
  3188  003120                     
  3189                           ;main.c: 71:             if (POT_VAL>=95){
  3190  003120  0100               	movlb	0	; () banked
  3191  003122  BFFC               	btfsc	(_POT_VAL+1)& (0+255),7,b
  3192  003124  EF9D  F018         	goto	u5331
  3193  003128  51FC               	movf	(_POT_VAL+1)& (0+255),w,b
  3194  00312A  E109               	bnz	u5330
  3195  00312C  0E5F               	movlw	95
  3196  00312E  5DFB               	subwf	_POT_VAL& (0+255),w,b
  3197  003130  A0D8               	btfss	status,0,c
  3198  003132  EF9D  F018         	goto	u5331
  3199  003136  EF9F  F018         	goto	u5330
  3200  00313A                     u5331:
  3201  00313A  EF2A  F018         	goto	l5262
  3202  00313E                     u5330:
  3203  00313E                     
  3204                           ; BSR set to: 0
  3205  00313E  8A89               	bsf	137,5,c	;volatile
  3206  003140  EF2A  F018         	goto	l5262
  3207  003144  EF49  F000         	goto	start
  3208  003148                     __end_of_main:
  3209                           	opt callstack 0
  3210                           
  3211 ;; *************** function _snprintf *****************
  3212 ;; Defined at:
  3213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  s               2  133[BANK0 ] PTR unsigned char 
  3216 ;;		 -> sPOT(100), 
  3217 ;;  n               2  135[BANK0 ] unsigned int 
  3218 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  3219 ;;		 -> STR_3(9), 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  ap              2  143[BANK0 ] PTR void [1]
  3222 ;;		 -> ?_snprintf(2), 
  3223 ;;  ret             2    0        int 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  2  133[BANK0 ] int 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3233 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;Total ram usage:       12 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:   18
  3240 ;; This function calls:
  3241 ;;		_vsnprintf
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text1
  3248  004178                     __ptext1:
  3249                           	opt callstack 0
  3250  004178                     _snprintf:
  3251                           	opt callstack 12
  3252  004178  0EEB               	movlw	low (?_snprintf+6)
  3253  00417A  0100               	movlb	0	; () banked
  3254  00417C  6FEF               	movwf	snprintf@ap& (0+255),b
  3255  00417E  0E00               	movlw	high (?_snprintf+6)
  3256  004180  6FF0               	movwf	(snprintf@ap+1)& (0+255),b
  3257  004182                     
  3258                           ; BSR set to: 0
  3259  004182  C0E5  F0CF         	movff	snprintf@s,vsnprintf@s
  3260  004186  C0E6  F0D0         	movff	snprintf@s+1,vsnprintf@s+1
  3261  00418A  C0E7  F0D1         	movff	snprintf@n,vsnprintf@n
  3262  00418E  C0E8  F0D2         	movff	snprintf@n+1,vsnprintf@n+1
  3263  004192  C0E9  F0D3         	movff	snprintf@fmt,vsnprintf@fmt
  3264  004196  C0EA  F0D4         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3265  00419A  0EEF               	movlw	low snprintf@ap
  3266  00419C  6FD5               	movwf	vsnprintf@ap& (0+255),b
  3267  00419E  0E00               	movlw	high snprintf@ap
  3268  0041A0  6FD6               	movwf	(vsnprintf@ap+1)& (0+255),b
  3269  0041A2  ECD9  F019         	call	_vsnprintf	;wreg free
  3270  0041A6  0012               	return		;funcret
  3271  0041A8                     __end_of_snprintf:
  3272                           	opt callstack 0
  3273                           
  3274 ;; *************** function _vsnprintf *****************
  3275 ;; Defined at:
  3276 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  s               2  111[BANK0 ] PTR unsigned char 
  3279 ;;		 -> sPOT(100), 
  3280 ;;  n               2  113[BANK0 ] unsigned int 
  3281 ;;  fmt             2  115[BANK0 ] PTR const unsigned char 
  3282 ;;		 -> STR_3(9), 
  3283 ;;  ap              2  117[BANK0 ] PTR PTR void 
  3284 ;;		 -> snprintf@ap(2), 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  f               6  127[BANK0 ] struct _IO_FILE
  3287 ;;  cnt             2  125[BANK0 ] int 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  2  111[BANK0 ] int 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3297 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3298 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;Total ram usage:       22 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:   17
  3304 ;; This function calls:
  3305 ;;		_vfprintf
  3306 ;; This function is called by:
  3307 ;;		_snprintf
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text2
  3312  0033B2                     __ptext2:
  3313                           	opt callstack 0
  3314  0033B2                     _vsnprintf:
  3315                           	opt callstack 12
  3316  0033B2  0E80               	movlw	128
  3317  0033B4  0100               	movlb	0	; () banked
  3318  0033B6  5DD2               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3319  0033B8  A0D8               	btfss	status,0,c
  3320  0033BA  EFE1  F019         	goto	u4711
  3321  0033BE  EFE3  F019         	goto	u4710
  3322  0033C2                     u4711:
  3323  0033C2  EFEB  F019         	goto	l4694
  3324  0033C6                     u4710:
  3325  0033C6                     
  3326                           ; BSR set to: 0
  3327  0033C6  0E00               	movlw	0
  3328  0033C8  6E48               	movwf	(_errno+1)^0,c
  3329  0033CA  0E4B               	movlw	75
  3330  0033CC  6E47               	movwf	_errno^0,c
  3331  0033CE                     
  3332                           ; BSR set to: 0
  3333  0033CE  69CF               	setf	?_vsnprintf& (0+255),b
  3334  0033D0  69D0               	setf	(?_vsnprintf+1)& (0+255),b
  3335  0033D2  EF60  F01A         	goto	l1523
  3336  0033D6                     l4694:
  3337                           
  3338                           ; BSR set to: 0
  3339  0033D6  C0CF  F0DF         	movff	vsnprintf@s,vsnprintf@f
  3340  0033DA  C0D0  F0E0         	movff	vsnprintf@s+1,vsnprintf@f+1
  3341  0033DE  51D2               	movf	(vsnprintf@n+1)& (0+255),w,b
  3342  0033E0  E109               	bnz	u4720
  3343  0033E2  0E02               	movlw	2
  3344  0033E4  5DD1               	subwf	vsnprintf@n& (0+255),w,b
  3345  0033E6  A0D8               	btfss	status,0,c
  3346  0033E8  EFF8  F019         	goto	u4721
  3347  0033EC  EFFA  F019         	goto	u4720
  3348  0033F0                     u4721:
  3349  0033F0  EF06  F01A         	goto	l4700
  3350  0033F4                     u4720:
  3351  0033F4                     
  3352                           ; BSR set to: 0
  3353  0033F4  0EFF               	movlw	255
  3354  0033F6  25D1               	addwf	vsnprintf@n& (0+255),w,b
  3355  0033F8  6FE3               	movwf	(vsnprintf@f+4)& (0+255),b
  3356  0033FA  0EFF               	movlw	255
  3357  0033FC  21D2               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3358  0033FE  6FE4               	movwf	(vsnprintf@f+5)& (0+255),b
  3359  003400                     
  3360                           ; BSR set to: 0
  3361  003400  0E00               	movlw	0
  3362  003402  6FE2               	movwf	(vsnprintf@f+3)& (0+255),b
  3363  003404  0E00               	movlw	0
  3364  003406  6FE1               	movwf	(vsnprintf@f+2)& (0+255),b
  3365  003408  EF0E  F01A         	goto	l4702
  3366  00340C                     l4700:
  3367                           
  3368                           ; BSR set to: 0
  3369  00340C  0E00               	movlw	0
  3370  00340E  6FE4               	movwf	(vsnprintf@f+5)& (0+255),b
  3371  003410  0E01               	movlw	1
  3372  003412  6FE3               	movwf	(vsnprintf@f+4)& (0+255),b
  3373  003414  0E00               	movlw	0
  3374  003416  6FE2               	movwf	(vsnprintf@f+3)& (0+255),b
  3375  003418  0E01               	movlw	1
  3376  00341A  6FE1               	movwf	(vsnprintf@f+2)& (0+255),b
  3377  00341C                     l4702:
  3378                           
  3379                           ; BSR set to: 0
  3380  00341C  0EDF               	movlw	low vsnprintf@f
  3381  00341E  6FC7               	movwf	vfprintf@fp& (0+255),b
  3382  003420  0E00               	movlw	high vsnprintf@f
  3383  003422  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  3384  003424  C0D3  F0C9         	movff	vsnprintf@fmt,vfprintf@fmt
  3385  003428  C0D4  F0CA         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3386  00342C  C0D5  F0CB         	movff	vsnprintf@ap,vfprintf@ap
  3387  003430  C0D6  F0CC         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3388  003434  ECA6  F01D         	call	_vfprintf	;wreg free
  3389  003438  C0C7  F0DD         	movff	?_vfprintf,vsnprintf@cnt
  3390  00343C  C0C8  F0DE         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3391  003440  0100               	movlb	0	; () banked
  3392  003442  51D1               	movf	vsnprintf@n& (0+255),w,b
  3393  003444  11D2               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3394  003446  B4D8               	btfsc	status,2,c
  3395  003448  EF28  F01A         	goto	u4731
  3396  00344C  EF2A  F01A         	goto	u4730
  3397  003450                     u4731:
  3398  003450  EF5C  F01A         	goto	l4714
  3399  003454                     u4730:
  3400  003454                     
  3401                           ; BSR set to: 0
  3402  003454  BFDE               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3403  003456  EF2F  F01A         	goto	u4741
  3404  00345A  EF31  F01A         	goto	u4740
  3405  00345E                     u4741:
  3406  00345E  EF5C  F01A         	goto	l4714
  3407  003462                     u4740:
  3408  003462                     
  3409                           ; BSR set to: 0
  3410  003462  0EFF               	movlw	255
  3411  003464  6FD7               	movwf	??_vsnprintf& (0+255),b
  3412  003466  0EFF               	movlw	255
  3413  003468  6FD8               	movwf	(??_vsnprintf+1)& (0+255),b
  3414  00346A  C0D1  F0D9         	movff	vsnprintf@n,??_vsnprintf+2
  3415  00346E  C0D2  F0DA         	movff	vsnprintf@n+1,??_vsnprintf+3
  3416  003472  51D7               	movf	??_vsnprintf& (0+255),w,b
  3417  003474  27D9               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3418  003476  51D8               	movf	(??_vsnprintf+1)& (0+255),w,b
  3419  003478  23DA               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3420  00347A  51D9               	movf	(??_vsnprintf+2)& (0+255),w,b
  3421  00347C  5DDD               	subwf	vsnprintf@cnt& (0+255),w,b
  3422  00347E  51DA               	movf	(??_vsnprintf+3)& (0+255),w,b
  3423  003480  59DE               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3424  003482  A0D8               	btfss	status,0,c
  3425  003484  EF46  F01A         	goto	u4751
  3426  003488  EF48  F01A         	goto	u4750
  3427  00348C                     u4751:
  3428  00348C  EF50  F01A         	goto	l1528
  3429  003490                     u4750:
  3430  003490                     
  3431                           ; BSR set to: 0
  3432  003490  0EFF               	movlw	255
  3433  003492  25D1               	addwf	vsnprintf@n& (0+255),w,b
  3434  003494  6FDB               	movwf	_vsnprintf$2110& (0+255),b
  3435  003496  0EFF               	movlw	255
  3436  003498  21D2               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3437  00349A  6FDC               	movwf	(_vsnprintf$2110+1)& (0+255),b
  3438  00349C  EF54  F01A         	goto	l4712
  3439  0034A0                     l1528:
  3440                           
  3441                           ; BSR set to: 0
  3442  0034A0  C0DD  F0DB         	movff	vsnprintf@cnt,_vsnprintf$2110
  3443  0034A4  C0DE  F0DC         	movff	vsnprintf@cnt+1,_vsnprintf$2110+1
  3444  0034A8                     l4712:
  3445                           
  3446                           ; BSR set to: 0
  3447  0034A8  51DB               	movf	_vsnprintf$2110& (0+255),w,b
  3448  0034AA  25CF               	addwf	vsnprintf@s& (0+255),w,b
  3449  0034AC  6ED9               	movwf	fsr2l,c
  3450  0034AE  51DC               	movf	(_vsnprintf$2110+1)& (0+255),w,b
  3451  0034B0  21D0               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3452  0034B2  6EDA               	movwf	fsr2h,c
  3453  0034B4  0E00               	movlw	0
  3454  0034B6  6EDF               	movwf	indf2,c
  3455  0034B8                     l4714:
  3456                           
  3457                           ; BSR set to: 0
  3458  0034B8  C0DD  F0CF         	movff	vsnprintf@cnt,?_vsnprintf
  3459  0034BC  C0DE  F0D0         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3460  0034C0                     l1523:
  3461                           
  3462                           ; BSR set to: 0
  3463  0034C0  0012               	return		;funcret
  3464  0034C2                     __end_of_vsnprintf:
  3465                           	opt callstack 0
  3466                           
  3467 ;; *************** function _vfprintf *****************
  3468 ;; Defined at:
  3469 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3472 ;;		 -> vsnprintf@f(6), 
  3473 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  3474 ;;		 -> STR_3(9), 
  3475 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3476 ;;		 -> snprintf@ap(2), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  3479 ;;		 -> STR_3(9), 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  2  103[BANK0 ] int 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3489 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;Total ram usage:        8 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:   16
  3496 ;; This function calls:
  3497 ;;		_vfpfcnvrt
  3498 ;; This function is called by:
  3499 ;;		_vsnprintf
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text3
  3504  003B4C                     __ptext3:
  3505                           	opt callstack 0
  3506  003B4C                     _vfprintf:
  3507                           	opt callstack 12
  3508  003B4C                     
  3509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3510  003B4C  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  3511  003B50  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3512  003B54                     
  3513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3514  003B54  0E00               	movlw	0
  3515  003B56  0100               	movlb	0	; () banked
  3516  003B58  6FF2               	movwf	(_nout+1)& (0+255),b
  3517  003B5A  0E00               	movlw	0
  3518  003B5C  6FF1               	movwf	_nout& (0+255),b
  3519                           
  3520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3521  003B5E  EFC4  F01D         	goto	l4580
  3522  003B62                     l4578:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3526  003B62  C0C7  F0A2         	movff	vfprintf@fp,vfpfcnvrt@fp
  3527  003B66  C0C8  F0A3         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3528  003B6A  0ECD               	movlw	low vfprintf@cfmt
  3529  003B6C  6FA4               	movwf	vfpfcnvrt@fmt& (0+255),b
  3530  003B6E  0E00               	movlw	high vfprintf@cfmt
  3531  003B70  6FA5               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3532  003B72  C0CB  F0A6         	movff	vfprintf@ap,vfpfcnvrt@ap
  3533  003B76  C0CC  F0A7         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3534  003B7A  EC4B  F000         	call	_vfpfcnvrt	;wreg free
  3535  003B7E  0100               	movlb	0	; () banked
  3536  003B80  51A2               	movf	?_vfpfcnvrt& (0+255),w,b
  3537  003B82  27F1               	addwf	_nout& (0+255),f,b
  3538  003B84  51A3               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3539  003B86  23F2               	addwfc	(_nout+1)& (0+255),f,b
  3540  003B88                     l4580:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3544  003B88  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  3545  003B8C  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3546  003B90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3547  003B90  6AF8               	clrf	tblptru,c
  3548  003B92                     	endif
  3549  003B92                     	if	0	;tblptru may be non-zero
  3550  003B92                     	endif
  3551  003B92  0008               	tblrd		*
  3552  003B94  50F5               	movf	tablat,w,c
  3553  003B96  0900               	iorlw	0
  3554  003B98  A4D8               	btfss	status,2,c
  3555  003B9A  EFD1  F01D         	goto	u4581
  3556  003B9E  EFD3  F01D         	goto	u4580
  3557  003BA2                     u4581:
  3558  003BA2  EFB1  F01D         	goto	l4578
  3559  003BA6                     u4580:
  3560  003BA6                     
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3563  003BA6  C0F1  F0C7         	movff	_nout,?_vfprintf
  3564  003BAA  C0F2  F0C8         	movff	_nout+1,?_vfprintf+1
  3565  003BAE                     
  3566                           ; BSR set to: 0
  3567  003BAE  0012               	return		;funcret
  3568  003BB0                     __end_of_vfprintf:
  3569                           	opt callstack 0
  3570                           
  3571 ;; *************** function _vfpfcnvrt *****************
  3572 ;; Defined at:
  3573 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  fp              2   66[BANK0 ] PTR struct _IO_FILE
  3576 ;;		 -> vsnprintf@f(6), 
  3577 ;;  fmt             2   68[BANK0 ] PTR PTR unsigned char 
  3578 ;;		 -> vfprintf@cfmt(2), 
  3579 ;;  ap              2   70[BANK0 ] PTR PTR void 
  3580 ;;		 -> snprintf@ap(2), 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  llu             8   95[BANK0 ] unsigned long long 
  3583 ;;  ll              8   84[BANK0 ] long long 
  3584 ;;  f               4    0        long long 
  3585 ;;  ct              3    0        unsigned char [3]
  3586 ;;  vp              2   92[BANK0 ] PTR void 
  3587 ;;		 -> ?_snprintf(2), 
  3588 ;;  done            2   78[BANK0 ] int 
  3589 ;;  cp              2   76[BANK0 ] PTR unsigned char 
  3590 ;;		 -> ?_snprintf(2), 
  3591 ;;  i               2    0        int 
  3592 ;;  c               1   94[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  2   66[BANK0 ] int 
  3595 ;; Registers used:
  3596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3602 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;Total ram usage:       37 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:   15
  3609 ;; This function calls:
  3610 ;;		_atoi
  3611 ;;		_ctoa
  3612 ;;		_dtoa
  3613 ;;		_fputc
  3614 ;;		_isdigit
  3615 ;;		_otoa
  3616 ;;		_stoa
  3617 ;;		_strncmp
  3618 ;;		_utoa
  3619 ;;		_xtoa
  3620 ;; This function is called by:
  3621 ;;		_vfprintf
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text4
  3626  000096                     __ptext4:
  3627                           	opt callstack 0
  3628  000096                     _vfpfcnvrt:
  3629                           	opt callstack 12
  3630  000096                     
  3631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3632  000096  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3633  00009A  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3634  00009E  CFDE FFF6          	movff	postinc2,tblptrl
  3635  0000A2  CFDD FFF7          	movff	postdec2,tblptrh
  3636  0000A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3637  0000A6  6AF8               	clrf	tblptru,c
  3638  0000A8                     	endif
  3639  0000A8                     	if	0	;tblptru may be non-zero
  3640  0000A8                     	endif
  3641  0000A8  0008               	tblrd		*
  3642  0000AA  50F5               	movf	tablat,w,c
  3643  0000AC  0A25               	xorlw	37
  3644  0000AE  A4D8               	btfss	status,2,c
  3645  0000B0  EF5C  F000         	goto	u4061
  3646  0000B4  EF5E  F000         	goto	u4060
  3647  0000B8                     u4061:
  3648  0000B8  EF6F  F009         	goto	l4512
  3649  0000BC                     u4060:
  3650  0000BC                     
  3651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3652  0000BC  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3653  0000C0  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3654  0000C4  2ADE               	incf	postinc2,f,c
  3655  0000C6  0E00               	movlw	0
  3656  0000C8  22DD               	addwfc	postdec2,f,c
  3657  0000CA                     
  3658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3659  0000CA  0E00               	movlw	0
  3660  0000CC  0100               	movlb	0	; () banked
  3661  0000CE  6FF4               	movwf	(_width+1)& (0+255),b
  3662  0000D0  0E00               	movlw	0
  3663  0000D2  6FF3               	movwf	_width& (0+255),b
  3664  0000D4  C0F3  F0F7         	movff	_width,_flags
  3665  0000D8  C0F4  F0F8         	movff	_width+1,_flags+1
  3666  0000DC                     
  3667                           ; BSR set to: 0
  3668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3669  0000DC  69F5               	setf	_prec& (0+255),b
  3670  0000DE  69F6               	setf	(_prec+1)& (0+255),b
  3671  0000E0                     
  3672                           ; BSR set to: 0
  3673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3674  0000E0  0E00               	movlw	0
  3675  0000E2  6FAF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3676  0000E4  0E00               	movlw	0
  3677  0000E6  6FAE               	movwf	vfpfcnvrt@done& (0+255),b
  3678                           
  3679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3680  0000E8  EFBD  F000         	goto	l4230
  3681  0000EC                     l4204:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3685  0000EC  81F7               	bsf	_flags& (0+255),0,b
  3686  0000EE                     l4206:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3690  0000EE  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3691  0000F2  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3692  0000F6  2ADE               	incf	postinc2,f,c
  3693  0000F8  0E00               	movlw	0
  3694  0000FA  22DD               	addwfc	postdec2,f,c
  3695                           
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3697  0000FC  EFBD  F000         	goto	l4230
  3698  000100                     l4208:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3702  000100  83F7               	bsf	_flags& (0+255),1,b
  3703  000102  EF77  F000         	goto	l4206
  3704  000106                     l4212:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3708  000106  85F7               	bsf	_flags& (0+255),2,b
  3709  000108  EF77  F000         	goto	l4206
  3710  00010C                     l4216:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3714  00010C  87F7               	bsf	_flags& (0+255),3,b
  3715  00010E  EF77  F000         	goto	l4206
  3716  000112                     l4220:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3720  000112  89F7               	bsf	_flags& (0+255),4,b
  3721  000114  EF77  F000         	goto	l4206
  3722  000118                     l4224:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3726  000118  0E00               	movlw	0
  3727  00011A  6FAF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3728  00011C  0E01               	movlw	1
  3729  00011E  6FAE               	movwf	vfpfcnvrt@done& (0+255),b
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3732  000120  EFBD  F000         	goto	l4230
  3733  000124                     l4228:
  3734                           
  3735                           ; BSR set to: 0
  3736  000124  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3737  000128  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3738  00012C  CFDE FFF6          	movff	postinc2,tblptrl
  3739  000130  CFDD FFF7          	movff	postdec2,tblptrh
  3740  000134                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3741  000134  6AF8               	clrf	tblptru,c
  3742  000136                     	endif
  3743  000136                     	if	0	;tblptru may be non-zero
  3744  000136                     	endif
  3745  000136  0008               	tblrd		*
  3746  000138  50F5               	movf	tablat,w,c
  3747  00013A  6FA8               	movwf	??_vfpfcnvrt& (0+255),b
  3748  00013C  6BA9               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3749                           
  3750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3751                           ; Switch size 1, requested type "simple"
  3752                           ; Number of cases is 1, Range of values is 0 to 0
  3753                           ; switch strategies available:
  3754                           ; Name         Instructions Cycles
  3755                           ; simple_byte            4     3 (average)
  3756                           ;	Chosen strategy is simple_byte
  3757  00013E  51A9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3758  000140  0A00               	xorlw	0	; case 0
  3759  000142  B4D8               	btfsc	status,2,c
  3760  000144  EFA6  F000         	goto	l5428
  3761  000148  EF8C  F000         	goto	l4224
  3762  00014C                     l5428:
  3763                           
  3764                           ; BSR set to: 0
  3765                           ; Switch size 1, requested type "simple"
  3766                           ; Number of cases is 5, Range of values is 32 to 48
  3767                           ; switch strategies available:
  3768                           ; Name         Instructions Cycles
  3769                           ; simple_byte           16     9 (average)
  3770                           ;	Chosen strategy is simple_byte
  3771  00014C  51A8               	movf	??_vfpfcnvrt& (0+255),w,b
  3772  00014E  0A20               	xorlw	32	; case 32
  3773  000150  B4D8               	btfsc	status,2,c
  3774  000152  EF86  F000         	goto	l4216
  3775  000156  0A03               	xorlw	3	; case 35
  3776  000158  B4D8               	btfsc	status,2,c
  3777  00015A  EF89  F000         	goto	l4220
  3778  00015E  0A08               	xorlw	8	; case 43
  3779  000160  B4D8               	btfsc	status,2,c
  3780  000162  EF83  F000         	goto	l4212
  3781  000166  0A06               	xorlw	6	; case 45
  3782  000168  B4D8               	btfsc	status,2,c
  3783  00016A  EF76  F000         	goto	l4204
  3784  00016E  0A1D               	xorlw	29	; case 48
  3785  000170  B4D8               	btfsc	status,2,c
  3786  000172  EF80  F000         	goto	l4208
  3787  000176  EF8C  F000         	goto	l4224
  3788  00017A                     l4230:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3792  00017A  51AE               	movf	vfpfcnvrt@done& (0+255),w,b
  3793  00017C  11AF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3794  00017E  B4D8               	btfsc	status,2,c
  3795  000180  EFC4  F000         	goto	u4071
  3796  000184  EFC6  F000         	goto	u4070
  3797  000188                     u4071:
  3798  000188  EF92  F000         	goto	l4228
  3799  00018C                     u4070:
  3800  00018C                     
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3803  00018C  A1F7               	btfss	_flags& (0+255),0,b
  3804  00018E  EFCB  F000         	goto	u4081
  3805  000192  EFCD  F000         	goto	u4080
  3806  000196                     u4081:
  3807  000196  EFCE  F000         	goto	l4234
  3808  00019A                     u4080:
  3809  00019A                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3812  00019A  93F7               	bcf	_flags& (0+255),1,b
  3813  00019C                     l4234:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3817  00019C  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3818  0001A0  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3819  0001A4  CFDE FFF6          	movff	postinc2,tblptrl
  3820  0001A8  CFDD FFF7          	movff	postdec2,tblptrh
  3821  0001AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3822  0001AC  6AF8               	clrf	tblptru,c
  3823  0001AE                     	endif
  3824  0001AE                     	if	0	;tblptru may be non-zero
  3825  0001AE                     	endif
  3826  0001AE  0008               	tblrd		*
  3827  0001B0  50F5               	movf	tablat,w,c
  3828  0001B2  0A2A               	xorlw	42
  3829  0001B4  A4D8               	btfss	status,2,c
  3830  0001B6  EFDF  F000         	goto	u4091
  3831  0001BA  EFE1  F000         	goto	u4090
  3832  0001BE                     u4091:
  3833  0001BE  EF0A  F001         	goto	l4242
  3834  0001C2                     u4090:
  3835  0001C2                     
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3838  0001C2  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3839  0001C6  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3840  0001CA  2ADE               	incf	postinc2,f,c
  3841  0001CC  0E00               	movlw	0
  3842  0001CE  22DD               	addwfc	postdec2,f,c
  3843                           
  3844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3845  0001D0  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3846  0001D4  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3847  0001D8  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  3848  0001DC  0E02               	movlw	2
  3849  0001DE  26DE               	addwf	postinc2,f,c
  3850  0001E0  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  3851  0001E4  0E00               	movlw	0
  3852  0001E6  22DD               	addwfc	postdec2,f,c
  3853  0001E8  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3854  0001EC  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3855  0001F0  CFDE F0F3          	movff	postinc2,_width
  3856  0001F4  CFDD F0F4          	movff	postdec2,_width+1
  3857  0001F8                     
  3858                           ; BSR set to: 0
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3860  0001F8  BFF4               	btfsc	(_width+1)& (0+255),7,b
  3861  0001FA  EF03  F001         	goto	u4100
  3862  0001FE  EF01  F001         	goto	u4101
  3863  000202                     u4101:
  3864  000202  EF4F  F001         	goto	l4252
  3865  000206                     u4100:
  3866  000206                     
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3869  000206  81F7               	bsf	_flags& (0+255),0,b
  3870                           
  3871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3872  000208  6DF3               	negf	_width& (0+255),b
  3873  00020A  1FF4               	comf	(_width+1)& (0+255),f,b
  3874  00020C  B0D8               	btfsc	status,0,c
  3875  00020E  2BF4               	incf	(_width+1)& (0+255),f,b
  3876  000210  EF4F  F001         	goto	l4252
  3877  000214                     l4242:
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3881  000214  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3882  000218  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3883  00021C  CFDE F067          	movff	postinc2,atoi@s
  3884  000220  CFDD F068          	movff	postdec2,atoi@s+1
  3885  000224  EC73  F013         	call	_atoi	;wreg free
  3886  000228  C067  F0F3         	movff	?_atoi,_width
  3887  00022C  C068  F0F4         	movff	?_atoi+1,_width+1
  3888                           
  3889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3890  000230  EF21  F001         	goto	l4246
  3891  000234                     l4244:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3895  000234  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3896  000238  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3897  00023C  2ADE               	incf	postinc2,f,c
  3898  00023E  0E00               	movlw	0
  3899  000240  22DD               	addwfc	postdec2,f,c
  3900  000242                     l4246:
  3901  000242  0ED0               	movlw	208
  3902  000244  0100               	movlb	0	; () banked
  3903  000246  6FA8               	movwf	??_vfpfcnvrt& (0+255),b
  3904  000248  0EFF               	movlw	255
  3905  00024A  6FA9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3906  00024C  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3907  000250  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3908  000254  CFDE FFF6          	movff	postinc2,tblptrl
  3909  000258  CFDD FFF7          	movff	postdec2,tblptrh
  3910  00025C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3911  00025C  6AF8               	clrf	tblptru,c
  3912  00025E                     	endif
  3913  00025E                     	if	0	;tblptru may be non-zero
  3914  00025E                     	endif
  3915  00025E  0008               	tblrd		*
  3916  000260  50F5               	movf	tablat,w,c
  3917  000262  6FAA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3918  000264  6BAB               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3919  000266  51A8               	movf	??_vfpfcnvrt& (0+255),w,b
  3920  000268  27AA               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3921  00026A  51A9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3922  00026C  23AB               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3923  00026E  51AB               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3924  000270  E10A               	bnz	u4110
  3925  000272  0E0A               	movlw	10
  3926  000274  5DAA               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3927  000276  A0D8               	btfss	status,0,c
  3928  000278  EF40  F001         	goto	u4111
  3929  00027C  EF43  F001         	goto	u4110
  3930  000280                     u4111:
  3931  000280  0E01               	movlw	1
  3932  000282  EF44  F001         	goto	u4120
  3933  000286                     u4110:
  3934  000286  0E00               	movlw	0
  3935  000288                     u4120:
  3936  000288  6FB0               	movwf	_vfpfcnvrt$1409& (0+255),b
  3937  00028A  6BB1               	clrf	(_vfpfcnvrt$1409+1)& (0+255),b
  3938  00028C                     
  3939                           ; BSR set to: 0
  3940  00028C  51B0               	movf	_vfpfcnvrt$1409& (0+255),w,b
  3941  00028E  11B1               	iorwf	(_vfpfcnvrt$1409+1)& (0+255),w,b
  3942  000290  A4D8               	btfss	status,2,c
  3943  000292  EF4D  F001         	goto	u4131
  3944  000296  EF4F  F001         	goto	u4130
  3945  00029A                     u4131:
  3946  00029A  EF1A  F001         	goto	l4244
  3947  00029E                     u4130:
  3948  00029E                     l4252:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3952  00029E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3953  0002A2  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3954  0002A6  CFDE FFF6          	movff	postinc2,tblptrl
  3955  0002AA  CFDD FFF7          	movff	postdec2,tblptrh
  3956  0002AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3957  0002AE  6AF8               	clrf	tblptru,c
  3958  0002B0                     	endif
  3959  0002B0                     	if	0	;tblptru may be non-zero
  3960  0002B0                     	endif
  3961  0002B0  0008               	tblrd		*
  3962  0002B2  50F5               	movf	tablat,w,c
  3963  0002B4  0A2E               	xorlw	46
  3964  0002B6  A4D8               	btfss	status,2,c
  3965  0002B8  EF60  F001         	goto	u4141
  3966  0002BC  EF62  F001         	goto	u4140
  3967  0002C0                     u4141:
  3968  0002C0  EFE2  F001         	goto	l4272
  3969  0002C4                     u4140:
  3970  0002C4                     
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3973  0002C4  0E00               	movlw	0
  3974  0002C6  6FF6               	movwf	(_prec+1)& (0+255),b
  3975  0002C8  0E00               	movlw	0
  3976  0002CA  6FF5               	movwf	_prec& (0+255),b
  3977  0002CC                     
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3980  0002CC  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3981  0002D0  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3982  0002D4  2ADE               	incf	postinc2,f,c
  3983  0002D6  0E00               	movlw	0
  3984  0002D8  22DD               	addwfc	postdec2,f,c
  3985  0002DA                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3988  0002DA  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3989  0002DE  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3990  0002E2  CFDE FFF6          	movff	postinc2,tblptrl
  3991  0002E6  CFDD FFF7          	movff	postdec2,tblptrh
  3992  0002EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3993  0002EA  6AF8               	clrf	tblptru,c
  3994  0002EC                     	endif
  3995  0002EC                     	if	0	;tblptru may be non-zero
  3996  0002EC                     	endif
  3997  0002EC  0008               	tblrd		*
  3998  0002EE  50F5               	movf	tablat,w,c
  3999  0002F0  0A2A               	xorlw	42
  4000  0002F2  A4D8               	btfss	status,2,c
  4001  0002F4  EF7E  F001         	goto	u4151
  4002  0002F8  EF80  F001         	goto	u4150
  4003  0002FC                     u4151:
  4004  0002FC  EF9D  F001         	goto	l4262
  4005  000300                     u4150:
  4006  000300                     
  4007                           ; BSR set to: 0
  4008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4009  000300  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4010  000304  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4011  000308  2ADE               	incf	postinc2,f,c
  4012  00030A  0E00               	movlw	0
  4013  00030C  22DD               	addwfc	postdec2,f,c
  4014                           
  4015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4016  00030E  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4017  000312  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4018  000316  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4019  00031A  0E02               	movlw	2
  4020  00031C  26DE               	addwf	postinc2,f,c
  4021  00031E  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4022  000322  0E00               	movlw	0
  4023  000324  22DD               	addwfc	postdec2,f,c
  4024  000326  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4025  00032A  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4026  00032E  CFDE F0F5          	movff	postinc2,_prec
  4027  000332  CFDD F0F6          	movff	postdec2,_prec+1
  4028                           
  4029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4030  000336  EFE2  F001         	goto	l4272
  4031  00033A                     l4262:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4035  00033A  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4036  00033E  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4037  000342  CFDE F067          	movff	postinc2,atoi@s
  4038  000346  CFDD F068          	movff	postdec2,atoi@s+1
  4039  00034A  EC73  F013         	call	_atoi	;wreg free
  4040  00034E  C067  F0F5         	movff	?_atoi,_prec
  4041  000352  C068  F0F6         	movff	?_atoi+1,_prec+1
  4042                           
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4044  000356  EFB4  F001         	goto	l4266
  4045  00035A                     l4264:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4049  00035A  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4050  00035E  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4051  000362  2ADE               	incf	postinc2,f,c
  4052  000364  0E00               	movlw	0
  4053  000366  22DD               	addwfc	postdec2,f,c
  4054  000368                     l4266:
  4055  000368  0ED0               	movlw	208
  4056  00036A  0100               	movlb	0	; () banked
  4057  00036C  6FA8               	movwf	??_vfpfcnvrt& (0+255),b
  4058  00036E  0EFF               	movlw	255
  4059  000370  6FA9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4060  000372  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4061  000376  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4062  00037A  CFDE FFF6          	movff	postinc2,tblptrl
  4063  00037E  CFDD FFF7          	movff	postdec2,tblptrh
  4064  000382                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4065  000382  6AF8               	clrf	tblptru,c
  4066  000384                     	endif
  4067  000384                     	if	0	;tblptru may be non-zero
  4068  000384                     	endif
  4069  000384  0008               	tblrd		*
  4070  000386  50F5               	movf	tablat,w,c
  4071  000388  6FAA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4072  00038A  6BAB               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4073  00038C  51A8               	movf	??_vfpfcnvrt& (0+255),w,b
  4074  00038E  27AA               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4075  000390  51A9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4076  000392  23AB               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4077  000394  51AB               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4078  000396  E10A               	bnz	u4160
  4079  000398  0E0A               	movlw	10
  4080  00039A  5DAA               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4081  00039C  A0D8               	btfss	status,0,c
  4082  00039E  EFD3  F001         	goto	u4161
  4083  0003A2  EFD6  F001         	goto	u4160
  4084  0003A6                     u4161:
  4085  0003A6  0E01               	movlw	1
  4086  0003A8  EFD7  F001         	goto	u4170
  4087  0003AC                     u4160:
  4088  0003AC  0E00               	movlw	0
  4089  0003AE                     u4170:
  4090  0003AE  6FB2               	movwf	_vfpfcnvrt$1410& (0+255),b
  4091  0003B0  6BB3               	clrf	(_vfpfcnvrt$1410+1)& (0+255),b
  4092  0003B2                     
  4093                           ; BSR set to: 0
  4094  0003B2  51B2               	movf	_vfpfcnvrt$1410& (0+255),w,b
  4095  0003B4  11B3               	iorwf	(_vfpfcnvrt$1410+1)& (0+255),w,b
  4096  0003B6  A4D8               	btfss	status,2,c
  4097  0003B8  EFE0  F001         	goto	u4181
  4098  0003BC  EFE2  F001         	goto	u4180
  4099  0003C0                     u4181:
  4100  0003C0  EFAD  F001         	goto	l4264
  4101  0003C4                     u4180:
  4102  0003C4                     l4272:
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4106  0003C4  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4107  0003C8  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4108  0003CC  CFDE FFF6          	movff	postinc2,tblptrl
  4109  0003D0  CFDD FFF7          	movff	postdec2,tblptrh
  4110  0003D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4111  0003D4  6AF8               	clrf	tblptru,c
  4112  0003D6                     	endif
  4113  0003D6                     	if	0	;tblptru may be non-zero
  4114  0003D6                     	endif
  4115  0003D6  0008               	tblrd		*
  4116  0003D8  50F5               	movf	tablat,w,c
  4117  0003DA  0A63               	xorlw	99
  4118  0003DC  A4D8               	btfss	status,2,c
  4119  0003DE  EFF3  F001         	goto	u4191
  4120  0003E2  EFF5  F001         	goto	u4190
  4121  0003E6                     u4191:
  4122  0003E6  EF1C  F002         	goto	l4280
  4123  0003EA                     u4190:
  4124  0003EA                     
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4127  0003EA  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4128  0003EE  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4129  0003F2  2ADE               	incf	postinc2,f,c
  4130  0003F4  0E00               	movlw	0
  4131  0003F6  22DD               	addwfc	postdec2,f,c
  4132                           
  4133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4134  0003F8  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4135  0003FC  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4136  000400  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4137  000404  0E02               	movlw	2
  4138  000406  26DE               	addwf	postinc2,f,c
  4139  000408  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4140  00040C  0E00               	movlw	0
  4141  00040E  22DD               	addwfc	postdec2,f,c
  4142  000410  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4143  000414  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4144  000418  50DF               	movf	indf2,w,c
  4145  00041A  6FBE               	movwf	vfpfcnvrt@c& (0+255),b
  4146  00041C                     
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4149  00041C  C0A2  F07B         	movff	vfpfcnvrt@fp,ctoa@fp
  4150  000420  C0A3  F07C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4151  000424  C0BE  F07D         	movff	vfpfcnvrt@c,ctoa@c
  4152  000428  EC08  F01E         	call	_ctoa	;wreg free
  4153  00042C  C07B  F0A2         	movff	?_ctoa,?_vfpfcnvrt
  4154  000430  C07C  F0A3         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4155  000434  EF8C  F009         	goto	l668
  4156  000438                     l4280:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4160  000438  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4161  00043C  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4162  000440  CFDE F060          	movff	postinc2,strncmp@_l
  4163  000444  CFDD F061          	movff	postdec2,strncmp@_l+1
  4164  000448  0ED2               	movlw	low STR_4
  4165  00044A  6F62               	movwf	strncmp@_r& (0+255),b
  4166  00044C  0EFF               	movlw	high STR_4
  4167  00044E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4168  000450  0E00               	movlw	0
  4169  000452  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4170  000454  0E03               	movlw	3
  4171  000456  6F64               	movwf	strncmp@n& (0+255),b
  4172  000458  EC5E  F01B         	call	_strncmp	;wreg free
  4173  00045C  0100               	movlb	0	; () banked
  4174  00045E  5160               	movf	?_strncmp& (0+255),w,b
  4175  000460  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4176  000462  B4D8               	btfsc	status,2,c
  4177  000464  EF36  F002         	goto	u4201
  4178  000468  EF38  F002         	goto	u4200
  4179  00046C                     u4201:
  4180  00046C  EF54  F002         	goto	l4284
  4181  000470                     u4200:
  4182  000470                     
  4183                           ; BSR set to: 0
  4184  000470  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4185  000474  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4186  000478  CFDE F060          	movff	postinc2,strncmp@_l
  4187  00047C  CFDD F061          	movff	postdec2,strncmp@_l+1
  4188  000480  0ED6               	movlw	low STR_8
  4189  000482  6F62               	movwf	strncmp@_r& (0+255),b
  4190  000484  0EFF               	movlw	high STR_8
  4191  000486  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4192  000488  0E00               	movlw	0
  4193  00048A  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4194  00048C  0E03               	movlw	3
  4195  00048E  6F64               	movwf	strncmp@n& (0+255),b
  4196  000490  EC5E  F01B         	call	_strncmp	;wreg free
  4197  000494  0100               	movlb	0	; () banked
  4198  000496  5160               	movf	?_strncmp& (0+255),w,b
  4199  000498  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4200  00049A  A4D8               	btfss	status,2,c
  4201  00049C  EF52  F002         	goto	u4211
  4202  0004A0  EF54  F002         	goto	u4210
  4203  0004A4                     u4211:
  4204  0004A4  EF94  F002         	goto	l4290
  4205  0004A8                     u4210:
  4206  0004A8                     l4284:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4210  0004A8  0E03               	movlw	3
  4211  0004AA  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4212  0004AE  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4213  0004B2  26DE               	addwf	postinc2,f,c
  4214  0004B4  0E00               	movlw	0
  4215  0004B6  22DD               	addwfc	postdec2,f,c
  4216                           
  4217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4218  0004B8  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4219  0004BC  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4220  0004C0  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4221  0004C4  0E02               	movlw	2
  4222  0004C6  26DE               	addwf	postinc2,f,c
  4223  0004C8  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4224  0004CC  0E00               	movlw	0
  4225  0004CE  22DD               	addwfc	postdec2,f,c
  4226  0004D0  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4227  0004D4  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4228  0004D8  50DF               	movf	indf2,w,c
  4229  0004DA  6FB4               	movwf	vfpfcnvrt@ll& (0+255),b
  4230  0004DC  0E00               	movlw	0
  4231  0004DE  BFB4               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4232  0004E0  0EFF               	movlw	-1
  4233  0004E2  6FB5               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4234  0004E4  6FB6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4235  0004E6  6FB7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4236  0004E8  6FB8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4237  0004EA  6FB9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4238  0004EC  6FBA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4239  0004EE  6FBB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4240  0004F0                     l4286:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4244  0004F0  C0A2  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  4245  0004F4  C0A3  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4246  0004F8  C0B4  F07D         	movff	vfpfcnvrt@ll,dtoa@d
  4247  0004FC  C0B5  F07E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4248  000500  C0B6  F07F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4249  000504  C0B7  F080         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4250  000508  C0B8  F081         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4251  00050C  C0B9  F082         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4252  000510  C0BA  F083         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4253  000514  C0BB  F084         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4254  000518  ECBE  F00D         	call	_dtoa	;wreg free
  4255  00051C  C07B  F0A2         	movff	?_dtoa,?_vfpfcnvrt
  4256  000520  C07C  F0A3         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4257  000524  EF8C  F009         	goto	l668
  4258  000528                     l4290:
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4262  000528  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4263  00052C  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4264  000530  CFDE F060          	movff	postinc2,strncmp@_l
  4265  000534  CFDD F061          	movff	postdec2,strncmp@_l+1
  4266  000538  0ED3               	movlw	low (STR_4+1)
  4267  00053A  6F62               	movwf	strncmp@_r& (0+255),b
  4268  00053C  0EFF               	movlw	high (STR_4+1)
  4269  00053E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4270  000540  0E00               	movlw	0
  4271  000542  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4272  000544  0E02               	movlw	2
  4273  000546  6F64               	movwf	strncmp@n& (0+255),b
  4274  000548  EC5E  F01B         	call	_strncmp	;wreg free
  4275  00054C  0100               	movlb	0	; () banked
  4276  00054E  5160               	movf	?_strncmp& (0+255),w,b
  4277  000550  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4278  000552  B4D8               	btfsc	status,2,c
  4279  000554  EFAE  F002         	goto	u4221
  4280  000558  EFB0  F002         	goto	u4220
  4281  00055C                     u4221:
  4282  00055C  EFCC  F002         	goto	l4294
  4283  000560                     u4220:
  4284  000560                     
  4285                           ; BSR set to: 0
  4286  000560  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4287  000564  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4288  000568  CFDE F060          	movff	postinc2,strncmp@_l
  4289  00056C  CFDD F061          	movff	postdec2,strncmp@_l+1
  4290  000570  0ED7               	movlw	low (STR_8+1)
  4291  000572  6F62               	movwf	strncmp@_r& (0+255),b
  4292  000574  0EFF               	movlw	high (STR_8+1)
  4293  000576  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4294  000578  0E00               	movlw	0
  4295  00057A  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4296  00057C  0E02               	movlw	2
  4297  00057E  6F64               	movwf	strncmp@n& (0+255),b
  4298  000580  EC5E  F01B         	call	_strncmp	;wreg free
  4299  000584  0100               	movlb	0	; () banked
  4300  000586  5160               	movf	?_strncmp& (0+255),w,b
  4301  000588  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4302  00058A  A4D8               	btfss	status,2,c
  4303  00058C  EFCA  F002         	goto	u4231
  4304  000590  EFCC  F002         	goto	u4230
  4305  000594                     u4231:
  4306  000594  EFF3  F002         	goto	l4300
  4307  000598                     u4230:
  4308  000598                     l4294:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4312  000598  0E02               	movlw	2
  4313  00059A  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4314  00059E  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4315  0005A2  26DE               	addwf	postinc2,f,c
  4316  0005A4  0E00               	movlw	0
  4317  0005A6  22DD               	addwfc	postdec2,f,c
  4318                           
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4320  0005A8  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4321  0005AC  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4322  0005B0  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4323  0005B4  0E02               	movlw	2
  4324  0005B6  26DE               	addwf	postinc2,f,c
  4325  0005B8  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4326  0005BC  0E00               	movlw	0
  4327  0005BE  22DD               	addwfc	postdec2,f,c
  4328  0005C0  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4329  0005C4  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4330  0005C8  CFDE F0B4          	movff	postinc2,vfpfcnvrt@ll
  4331  0005CC  CFDD F0B5          	movff	postdec2,vfpfcnvrt@ll+1
  4332  0005D0  0E00               	movlw	0
  4333  0005D2  BFB5               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4334  0005D4  0EFF               	movlw	-1
  4335  0005D6  6FB6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4336  0005D8  6FB7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4337  0005DA  6FB8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4338  0005DC  6FB9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4339  0005DE  6FBA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4340  0005E0  6FBB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4341  0005E2  EF78  F002         	goto	l4286
  4342  0005E6                     l4300:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4346  0005E6  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4347  0005EA  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4348  0005EE  CFDE FFF6          	movff	postinc2,tblptrl
  4349  0005F2  CFDD FFF7          	movff	postdec2,tblptrh
  4350  0005F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4351  0005F6  6AF8               	clrf	tblptru,c
  4352  0005F8                     	endif
  4353  0005F8                     	if	0	;tblptru may be non-zero
  4354  0005F8                     	endif
  4355  0005F8  0008               	tblrd		*
  4356  0005FA  50F5               	movf	tablat,w,c
  4357  0005FC  0A64               	xorlw	100
  4358  0005FE  B4D8               	btfsc	status,2,c
  4359  000600  EF04  F003         	goto	u4241
  4360  000604  EF06  F003         	goto	u4240
  4361  000608                     u4241:
  4362  000608  EF19  F003         	goto	l4304
  4363  00060C                     u4240:
  4364  00060C                     
  4365                           ; BSR set to: 0
  4366  00060C  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4367  000610  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4368  000614  CFDE FFF6          	movff	postinc2,tblptrl
  4369  000618  CFDD FFF7          	movff	postdec2,tblptrh
  4370  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4371  00061C  6AF8               	clrf	tblptru,c
  4372  00061E                     	endif
  4373  00061E                     	if	0	;tblptru may be non-zero
  4374  00061E                     	endif
  4375  00061E  0008               	tblrd		*
  4376  000620  50F5               	movf	tablat,w,c
  4377  000622  0A69               	xorlw	105
  4378  000624  A4D8               	btfss	status,2,c
  4379  000626  EF17  F003         	goto	u4251
  4380  00062A  EF19  F003         	goto	u4250
  4381  00062E                     u4251:
  4382  00062E  EF3F  F003         	goto	l4310
  4383  000632                     u4250:
  4384  000632                     l4304:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4388  000632  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4389  000636  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4390  00063A  2ADE               	incf	postinc2,f,c
  4391  00063C  0E00               	movlw	0
  4392  00063E  22DD               	addwfc	postdec2,f,c
  4393                           
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4395  000640  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4396  000644  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4397  000648  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4398  00064C  0E02               	movlw	2
  4399  00064E  26DE               	addwf	postinc2,f,c
  4400  000650  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4401  000654  0E00               	movlw	0
  4402  000656  22DD               	addwfc	postdec2,f,c
  4403  000658  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4404  00065C  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4405  000660  CFDE F0B4          	movff	postinc2,vfpfcnvrt@ll
  4406  000664  CFDD F0B5          	movff	postdec2,vfpfcnvrt@ll+1
  4407  000668  0E00               	movlw	0
  4408  00066A  BFB5               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4409  00066C  0EFF               	movlw	-1
  4410  00066E  6FB6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4411  000670  6FB7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4412  000672  6FB8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4413  000674  6FB9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4414  000676  6FBA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4415  000678  6FBB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4416  00067A  EF78  F002         	goto	l4286
  4417  00067E                     l4310:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4421  00067E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4422  000682  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4423  000686  CFDE F060          	movff	postinc2,strncmp@_l
  4424  00068A  CFDD F061          	movff	postdec2,strncmp@_l+1
  4425  00068E  0EED               	movlw	low STR_22
  4426  000690  6F62               	movwf	strncmp@_r& (0+255),b
  4427  000692  0EFF               	movlw	high STR_22
  4428  000694  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4429  000696  0E00               	movlw	0
  4430  000698  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4431  00069A  0E02               	movlw	2
  4432  00069C  6F64               	movwf	strncmp@n& (0+255),b
  4433  00069E  EC5E  F01B         	call	_strncmp	;wreg free
  4434  0006A2  0100               	movlb	0	; () banked
  4435  0006A4  5160               	movf	?_strncmp& (0+255),w,b
  4436  0006A6  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4437  0006A8  B4D8               	btfsc	status,2,c
  4438  0006AA  EF59  F003         	goto	u4261
  4439  0006AE  EF5B  F003         	goto	u4260
  4440  0006B2                     u4261:
  4441  0006B2  EF77  F003         	goto	l4314
  4442  0006B6                     u4260:
  4443  0006B6                     
  4444                           ; BSR set to: 0
  4445  0006B6  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4446  0006BA  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4447  0006BE  CFDE F060          	movff	postinc2,strncmp@_l
  4448  0006C2  CFDD F061          	movff	postdec2,strncmp@_l+1
  4449  0006C6  0EF0               	movlw	low STR_26
  4450  0006C8  6F62               	movwf	strncmp@_r& (0+255),b
  4451  0006CA  0EFF               	movlw	high STR_26
  4452  0006CC  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4453  0006CE  0E00               	movlw	0
  4454  0006D0  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4455  0006D2  0E02               	movlw	2
  4456  0006D4  6F64               	movwf	strncmp@n& (0+255),b
  4457  0006D6  EC5E  F01B         	call	_strncmp	;wreg free
  4458  0006DA  0100               	movlb	0	; () banked
  4459  0006DC  5160               	movf	?_strncmp& (0+255),w,b
  4460  0006DE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4461  0006E0  A4D8               	btfss	status,2,c
  4462  0006E2  EF75  F003         	goto	u4271
  4463  0006E6  EF77  F003         	goto	u4270
  4464  0006EA                     u4271:
  4465  0006EA  EF9F  F003         	goto	l4320
  4466  0006EE                     u4270:
  4467  0006EE                     l4314:
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4471  0006EE  0E02               	movlw	2
  4472  0006F0  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4473  0006F4  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4474  0006F8  26DE               	addwf	postinc2,f,c
  4475  0006FA  0E00               	movlw	0
  4476  0006FC  22DD               	addwfc	postdec2,f,c
  4477                           
  4478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4479  0006FE  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4480  000702  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4481  000706  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4482  00070A  0E02               	movlw	2
  4483  00070C  26DE               	addwf	postinc2,f,c
  4484  00070E  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4485  000712  0E00               	movlw	0
  4486  000714  22DD               	addwfc	postdec2,f,c
  4487  000716  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4488  00071A  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4489  00071E  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  4490  000722  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  4491  000726  C0AA  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4492  00072A  C0AB  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4493  00072E  6BB6               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4494  000730  6BB7               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4495  000732  6BB8               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4496  000734  6BB9               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4497  000736  6BBA               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4498  000738  6BBB               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4499  00073A  EF78  F002         	goto	l4286
  4500  00073E                     l4320:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4504  00073E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4505  000742  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4506  000746  CFDE F060          	movff	postinc2,strncmp@_l
  4507  00074A  CFDD F061          	movff	postdec2,strncmp@_l+1
  4508  00074E  0EDE               	movlw	low STR_31
  4509  000750  6F62               	movwf	strncmp@_r& (0+255),b
  4510  000752  0EFF               	movlw	high STR_31
  4511  000754  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4512  000756  0E00               	movlw	0
  4513  000758  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4514  00075A  0E03               	movlw	3
  4515  00075C  6F64               	movwf	strncmp@n& (0+255),b
  4516  00075E  EC5E  F01B         	call	_strncmp	;wreg free
  4517  000762  0100               	movlb	0	; () banked
  4518  000764  5160               	movf	?_strncmp& (0+255),w,b
  4519  000766  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4520  000768  A4D8               	btfss	status,2,c
  4521  00076A  EFB9  F003         	goto	u4281
  4522  00076E  EFBB  F003         	goto	u4280
  4523  000772                     u4281:
  4524  000772  EFFA  F003         	goto	l4328
  4525  000776                     u4280:
  4526  000776                     
  4527                           ; BSR set to: 0
  4528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4529  000776  0E03               	movlw	3
  4530  000778  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4531  00077C  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4532  000780  26DE               	addwf	postinc2,f,c
  4533  000782  0E00               	movlw	0
  4534  000784  22DD               	addwfc	postdec2,f,c
  4535                           
  4536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4537  000786  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4538  00078A  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4539  00078E  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4540  000792  0E02               	movlw	2
  4541  000794  26DE               	addwf	postinc2,f,c
  4542  000796  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4543  00079A  0E00               	movlw	0
  4544  00079C  22DD               	addwfc	postdec2,f,c
  4545  00079E  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4546  0007A2  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4547  0007A6  50DF               	movf	indf2,w,c
  4548  0007A8  6FAA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4549  0007AA  51AA               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  4550  0007AC  6FBF               	movwf	vfpfcnvrt@llu& (0+255),b
  4551  0007AE  6BC0               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4552  0007B0  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4553  0007B2  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4554  0007B4  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4555  0007B6  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4556  0007B8  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4557  0007BA  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4558  0007BC                     l4324:
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  4562  0007BC  C0A2  F07B         	movff	vfpfcnvrt@fp,otoa@fp
  4563  0007C0  C0A3  F07C         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4564  0007C4  C0BF  F07D         	movff	vfpfcnvrt@llu,otoa@d
  4565  0007C8  C0C0  F07E         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4566  0007CC  C0C1  F07F         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4567  0007D0  C0C2  F080         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4568  0007D4  C0C3  F081         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4569  0007D8  C0C4  F082         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4570  0007DC  C0C5  F083         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4571  0007E0  C0C6  F084         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4572  0007E4  ECA0  F011         	call	_otoa	;wreg free
  4573  0007E8  C07B  F0A2         	movff	?_otoa,?_vfpfcnvrt
  4574  0007EC  C07C  F0A3         	movff	?_otoa+1,?_vfpfcnvrt+1
  4575  0007F0  EF8C  F009         	goto	l668
  4576  0007F4                     l4328:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4580  0007F4  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4581  0007F8  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4582  0007FC  CFDE F060          	movff	postinc2,strncmp@_l
  4583  000800  CFDD F061          	movff	postdec2,strncmp@_l+1
  4584  000804  0EDF               	movlw	low (STR_31+1)
  4585  000806  6F62               	movwf	strncmp@_r& (0+255),b
  4586  000808  0EFF               	movlw	high (STR_31+1)
  4587  00080A  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4588  00080C  0E00               	movlw	0
  4589  00080E  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4590  000810  0E02               	movlw	2
  4591  000812  6F64               	movwf	strncmp@n& (0+255),b
  4592  000814  EC5E  F01B         	call	_strncmp	;wreg free
  4593  000818  0100               	movlb	0	; () banked
  4594  00081A  5160               	movf	?_strncmp& (0+255),w,b
  4595  00081C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4596  00081E  A4D8               	btfss	status,2,c
  4597  000820  EF14  F004         	goto	u4291
  4598  000824  EF16  F004         	goto	u4290
  4599  000828                     u4291:
  4600  000828  EF3E  F004         	goto	l4336
  4601  00082C                     u4290:
  4602  00082C                     
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4605  00082C  0E02               	movlw	2
  4606  00082E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4607  000832  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4608  000836  26DE               	addwf	postinc2,f,c
  4609  000838  0E00               	movlw	0
  4610  00083A  22DD               	addwfc	postdec2,f,c
  4611                           
  4612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4613  00083C  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4614  000840  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4615  000844  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4616  000848  0E02               	movlw	2
  4617  00084A  26DE               	addwf	postinc2,f,c
  4618  00084C  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4619  000850  0E00               	movlw	0
  4620  000852  22DD               	addwfc	postdec2,f,c
  4621  000854  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4622  000858  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4623  00085C  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  4624  000860  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  4625  000864  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4626  000868  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4627  00086C  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4628  00086E  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4629  000870  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4630  000872  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4631  000874  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4632  000876  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4633  000878  EFDE  F003         	goto	l4324
  4634  00087C                     l4336:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  4638  00087C  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4639  000880  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4640  000884  CFDE FFF6          	movff	postinc2,tblptrl
  4641  000888  CFDD FFF7          	movff	postdec2,tblptrh
  4642  00088C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4643  00088C  6AF8               	clrf	tblptru,c
  4644  00088E                     	endif
  4645  00088E                     	if	0	;tblptru may be non-zero
  4646  00088E                     	endif
  4647  00088E  0008               	tblrd		*
  4648  000890  50F5               	movf	tablat,w,c
  4649  000892  0A6F               	xorlw	111
  4650  000894  A4D8               	btfss	status,2,c
  4651  000896  EF4F  F004         	goto	u4301
  4652  00089A  EF51  F004         	goto	u4300
  4653  00089E                     u4301:
  4654  00089E  EF78  F004         	goto	l4344
  4655  0008A2                     u4300:
  4656  0008A2                     
  4657                           ; BSR set to: 0
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  4659  0008A2  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4660  0008A6  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4661  0008AA  2ADE               	incf	postinc2,f,c
  4662  0008AC  0E00               	movlw	0
  4663  0008AE  22DD               	addwfc	postdec2,f,c
  4664                           
  4665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  4666  0008B0  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4667  0008B4  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4668  0008B8  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4669  0008BC  0E02               	movlw	2
  4670  0008BE  26DE               	addwf	postinc2,f,c
  4671  0008C0  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4672  0008C4  0E00               	movlw	0
  4673  0008C6  22DD               	addwfc	postdec2,f,c
  4674  0008C8  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4675  0008CC  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4676  0008D0  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  4677  0008D4  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  4678  0008D8  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4679  0008DC  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4680  0008E0  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4681  0008E2  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4682  0008E4  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4683  0008E6  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4684  0008E8  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4685  0008EA  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4686  0008EC  EFDE  F003         	goto	l4324
  4687  0008F0                     l4344:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4691  0008F0  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4692  0008F4  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4693  0008F8  CFDE F060          	movff	postinc2,strncmp@_l
  4694  0008FC  CFDD F061          	movff	postdec2,strncmp@_l+1
  4695  000900  0EF6               	movlw	low STR_41
  4696  000902  6F62               	movwf	strncmp@_r& (0+255),b
  4697  000904  0EFF               	movlw	high STR_41
  4698  000906  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4699  000908  0E00               	movlw	0
  4700  00090A  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4701  00090C  0E02               	movlw	2
  4702  00090E  6F64               	movwf	strncmp@n& (0+255),b
  4703  000910  EC5E  F01B         	call	_strncmp	;wreg free
  4704  000914  0100               	movlb	0	; () banked
  4705  000916  5160               	movf	?_strncmp& (0+255),w,b
  4706  000918  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4707  00091A  A4D8               	btfss	status,2,c
  4708  00091C  EF92  F004         	goto	u4311
  4709  000920  EF94  F004         	goto	u4310
  4710  000924                     u4311:
  4711  000924  EFBC  F004         	goto	l4352
  4712  000928                     u4310:
  4713  000928                     
  4714                           ; BSR set to: 0
  4715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4716  000928  0E02               	movlw	2
  4717  00092A  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4718  00092E  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4719  000932  26DE               	addwf	postinc2,f,c
  4720  000934  0E00               	movlw	0
  4721  000936  22DD               	addwfc	postdec2,f,c
  4722                           
  4723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4724  000938  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4725  00093C  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4726  000940  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4727  000944  0E02               	movlw	2
  4728  000946  26DE               	addwf	postinc2,f,c
  4729  000948  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4730  00094C  0E00               	movlw	0
  4731  00094E  22DD               	addwfc	postdec2,f,c
  4732  000950  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4733  000954  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4734  000958  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  4735  00095C  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  4736  000960  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4737  000964  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4738  000968  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4739  00096A  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4740  00096C  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4741  00096E  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4742  000970  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4743  000972  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4744  000974  EFDE  F003         	goto	l4324
  4745  000978                     l4352:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4749  000978  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4750  00097C  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4751  000980  CFDE F060          	movff	postinc2,strncmp@_l
  4752  000984  CFDD F061          	movff	postdec2,strncmp@_l+1
  4753  000988  0EDA               	movlw	low STR_46
  4754  00098A  6F62               	movwf	strncmp@_r& (0+255),b
  4755  00098C  0EFF               	movlw	high STR_46
  4756  00098E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4757  000990  0E00               	movlw	0
  4758  000992  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4759  000994  0E03               	movlw	3
  4760  000996  6F64               	movwf	strncmp@n& (0+255),b
  4761  000998  EC5E  F01B         	call	_strncmp	;wreg free
  4762  00099C  0100               	movlb	0	; () banked
  4763  00099E  5160               	movf	?_strncmp& (0+255),w,b
  4764  0009A0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4765  0009A2  A4D8               	btfss	status,2,c
  4766  0009A4  EFD6  F004         	goto	u4321
  4767  0009A8  EFD8  F004         	goto	u4320
  4768  0009AC                     u4321:
  4769  0009AC  EF00  F005         	goto	l4362
  4770  0009B0                     u4320:
  4771  0009B0                     
  4772                           ; BSR set to: 0
  4773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4774  0009B0  0E03               	movlw	3
  4775  0009B2  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4776  0009B6  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4777  0009BA  26DE               	addwf	postinc2,f,c
  4778  0009BC  0E00               	movlw	0
  4779  0009BE  22DD               	addwfc	postdec2,f,c
  4780                           
  4781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4782  0009C0  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4783  0009C4  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4784  0009C8  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4785  0009CC  0E02               	movlw	2
  4786  0009CE  26DE               	addwf	postinc2,f,c
  4787  0009D0  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4788  0009D4  0E00               	movlw	0
  4789  0009D6  22DD               	addwfc	postdec2,f,c
  4790  0009D8  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4791  0009DC  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4792  0009E0  CFDE F0BC          	movff	postinc2,vfpfcnvrt@vp
  4793  0009E4  CFDD F0BD          	movff	postdec2,vfpfcnvrt@vp+1
  4794  0009E8                     
  4795                           ; BSR set to: 0
  4796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  4797  0009E8  C0BC  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4798  0009EC  C0BD  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4799  0009F0  C0F1  FFDF         	movff	_nout,indf2
  4800  0009F4                     l4358:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  4804  0009F4  0E00               	movlw	0
  4805  0009F6  6FA3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4806  0009F8  0E00               	movlw	0
  4807  0009FA  6FA2               	movwf	?_vfpfcnvrt& (0+255),b
  4808  0009FC  EF8C  F009         	goto	l668
  4809  000A00                     l4362:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4813  000A00  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4814  000A04  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4815  000A08  CFDE F060          	movff	postinc2,strncmp@_l
  4816  000A0C  CFDD F061          	movff	postdec2,strncmp@_l+1
  4817  000A10  0EDB               	movlw	low (STR_46+1)
  4818  000A12  6F62               	movwf	strncmp@_r& (0+255),b
  4819  000A14  0EFF               	movlw	high (STR_46+1)
  4820  000A16  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4821  000A18  0E00               	movlw	0
  4822  000A1A  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4823  000A1C  0E02               	movlw	2
  4824  000A1E  6F64               	movwf	strncmp@n& (0+255),b
  4825  000A20  EC5E  F01B         	call	_strncmp	;wreg free
  4826  000A24  0100               	movlb	0	; () banked
  4827  000A26  5160               	movf	?_strncmp& (0+255),w,b
  4828  000A28  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4829  000A2A  A4D8               	btfss	status,2,c
  4830  000A2C  EF1A  F005         	goto	u4331
  4831  000A30  EF1C  F005         	goto	u4330
  4832  000A34                     u4331:
  4833  000A34  EF42  F005         	goto	l4372
  4834  000A38                     u4330:
  4835  000A38                     
  4836                           ; BSR set to: 0
  4837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4838  000A38  0E02               	movlw	2
  4839  000A3A  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4840  000A3E  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4841  000A42  26DE               	addwf	postinc2,f,c
  4842  000A44  0E00               	movlw	0
  4843  000A46  22DD               	addwfc	postdec2,f,c
  4844                           
  4845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4846  000A48  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4847  000A4C  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4848  000A50  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4849  000A54  0E02               	movlw	2
  4850  000A56  26DE               	addwf	postinc2,f,c
  4851  000A58  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4852  000A5C  0E00               	movlw	0
  4853  000A5E  22DD               	addwfc	postdec2,f,c
  4854  000A60  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4855  000A64  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4856  000A68  CFDE F0BC          	movff	postinc2,vfpfcnvrt@vp
  4857  000A6C  CFDD F0BD          	movff	postdec2,vfpfcnvrt@vp+1
  4858  000A70                     
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  4861  000A70  C0BC  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4862  000A74  C0BD  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4863  000A78  C0F1  FFDE         	movff	_nout,postinc2
  4864  000A7C  C0F2  FFDD         	movff	_nout+1,postdec2
  4865  000A80  EFFA  F004         	goto	l4358
  4866  000A84                     l4372:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4870  000A84  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4871  000A88  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4872  000A8C  CFDE FFF6          	movff	postinc2,tblptrl
  4873  000A90  CFDD FFF7          	movff	postdec2,tblptrh
  4874  000A94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4875  000A94  6AF8               	clrf	tblptru,c
  4876  000A96                     	endif
  4877  000A96                     	if	0	;tblptru may be non-zero
  4878  000A96                     	endif
  4879  000A96  0008               	tblrd		*
  4880  000A98  50F5               	movf	tablat,w,c
  4881  000A9A  0A6E               	xorlw	110
  4882  000A9C  A4D8               	btfss	status,2,c
  4883  000A9E  EF53  F005         	goto	u4341
  4884  000AA2  EF55  F005         	goto	u4340
  4885  000AA6                     u4341:
  4886  000AA6  EF7A  F005         	goto	l4382
  4887  000AAA                     u4340:
  4888  000AAA                     
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4891  000AAA  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4892  000AAE  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4893  000AB2  2ADE               	incf	postinc2,f,c
  4894  000AB4  0E00               	movlw	0
  4895  000AB6  22DD               	addwfc	postdec2,f,c
  4896                           
  4897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4898  000AB8  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4899  000ABC  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4900  000AC0  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4901  000AC4  0E02               	movlw	2
  4902  000AC6  26DE               	addwf	postinc2,f,c
  4903  000AC8  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4904  000ACC  0E00               	movlw	0
  4905  000ACE  22DD               	addwfc	postdec2,f,c
  4906  000AD0  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4907  000AD4  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4908  000AD8  CFDE F0BC          	movff	postinc2,vfpfcnvrt@vp
  4909  000ADC  CFDD F0BD          	movff	postdec2,vfpfcnvrt@vp+1
  4910  000AE0                     
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  4913  000AE0  C0BC  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4914  000AE4  C0BD  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4915  000AE8  C0F1  FFDE         	movff	_nout,postinc2
  4916  000AEC  C0F2  FFDD         	movff	_nout+1,postdec2
  4917  000AF0  EFFA  F004         	goto	l4358
  4918  000AF4                     l4382:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4922  000AF4  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4923  000AF8  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4924  000AFC  CFDE F060          	movff	postinc2,strncmp@_l
  4925  000B00  CFDD F061          	movff	postdec2,strncmp@_l+1
  4926  000B04  0EF3               	movlw	low STR_56
  4927  000B06  6F62               	movwf	strncmp@_r& (0+255),b
  4928  000B08  0EFF               	movlw	high STR_56
  4929  000B0A  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4930  000B0C  0E00               	movlw	0
  4931  000B0E  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4932  000B10  0E02               	movlw	2
  4933  000B12  6F64               	movwf	strncmp@n& (0+255),b
  4934  000B14  EC5E  F01B         	call	_strncmp	;wreg free
  4935  000B18  0100               	movlb	0	; () banked
  4936  000B1A  5160               	movf	?_strncmp& (0+255),w,b
  4937  000B1C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4938  000B1E  A4D8               	btfss	status,2,c
  4939  000B20  EF94  F005         	goto	u4351
  4940  000B24  EF96  F005         	goto	u4350
  4941  000B28                     u4351:
  4942  000B28  EFBC  F005         	goto	l4392
  4943  000B2C                     u4350:
  4944  000B2C                     
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4947  000B2C  0E02               	movlw	2
  4948  000B2E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4949  000B32  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4950  000B36  26DE               	addwf	postinc2,f,c
  4951  000B38  0E00               	movlw	0
  4952  000B3A  22DD               	addwfc	postdec2,f,c
  4953                           
  4954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4955  000B3C  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4956  000B40  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4957  000B44  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  4958  000B48  0E02               	movlw	2
  4959  000B4A  26DE               	addwf	postinc2,f,c
  4960  000B4C  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  4961  000B50  0E00               	movlw	0
  4962  000B52  22DD               	addwfc	postdec2,f,c
  4963  000B54  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4964  000B58  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4965  000B5C  CFDE F0BC          	movff	postinc2,vfpfcnvrt@vp
  4966  000B60  CFDD F0BD          	movff	postdec2,vfpfcnvrt@vp+1
  4967  000B64                     
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  4970  000B64  C0BC  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4971  000B68  C0BD  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4972  000B6C  C0F1  FFDE         	movff	_nout,postinc2
  4973  000B70  C0F2  FFDD         	movff	_nout+1,postdec2
  4974  000B74  EFFA  F004         	goto	l4358
  4975  000B78                     l4392:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  4979  000B78  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4980  000B7C  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4981  000B80  CFDE FFF6          	movff	postinc2,tblptrl
  4982  000B84  CFDD FFF7          	movff	postdec2,tblptrh
  4983  000B88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4984  000B88  6AF8               	clrf	tblptru,c
  4985  000B8A                     	endif
  4986  000B8A                     	if	0	;tblptru may be non-zero
  4987  000B8A                     	endif
  4988  000B8A  0008               	tblrd		*
  4989  000B8C  50F5               	movf	tablat,w,c
  4990  000B8E  0A70               	xorlw	112
  4991  000B90  A4D8               	btfss	status,2,c
  4992  000B92  EFCD  F005         	goto	u4361
  4993  000B96  EFCF  F005         	goto	u4360
  4994  000B9A                     u4361:
  4995  000B9A  EF12  F006         	goto	l4400
  4996  000B9E                     u4360:
  4997  000B9E                     
  4998                           ; BSR set to: 0
  4999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5000  000B9E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5001  000BA2  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5002  000BA6  2ADE               	incf	postinc2,f,c
  5003  000BA8  0E00               	movlw	0
  5004  000BAA  22DD               	addwfc	postdec2,f,c
  5005                           
  5006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5007  000BAC  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5008  000BB0  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5009  000BB4  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5010  000BB8  0E02               	movlw	2
  5011  000BBA  26DE               	addwf	postinc2,f,c
  5012  000BBC  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5013  000BC0  0E00               	movlw	0
  5014  000BC2  22DD               	addwfc	postdec2,f,c
  5015  000BC4  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5016  000BC8  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5017  000BCC  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  5018  000BD0  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  5019  000BD4  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5020  000BD8  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5021  000BDC  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5022  000BDE  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5023  000BE0  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5024  000BE2  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5025  000BE4  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5026  000BE6  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5027  000BE8                     
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5030  000BE8  C0A2  F07B         	movff	vfpfcnvrt@fp,xtoa@fp
  5031  000BEC  C0A3  F07C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5032  000BF0  C0BF  F07D         	movff	vfpfcnvrt@llu,xtoa@d
  5033  000BF4  C0C0  F07E         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5034  000BF8  C0C1  F07F         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5035  000BFC  C0C2  F080         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5036  000C00  C0C3  F081         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5037  000C04  C0C4  F082         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5038  000C08  C0C5  F083         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5039  000C0C  C0C6  F084         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5040  000C10  0E78               	movlw	120
  5041  000C12  6F85               	movwf	xtoa@x& (0+255),b
  5042  000C14  EC30  F00F         	call	_xtoa	;wreg free
  5043  000C18  C07B  F0A2         	movff	?_xtoa,?_vfpfcnvrt
  5044  000C1C  C07C  F0A3         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5045  000C20  EF8C  F009         	goto	l668
  5046  000C24                     l4400:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5050  000C24  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5051  000C28  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5052  000C2C  CFDE FFF6          	movff	postinc2,tblptrl
  5053  000C30  CFDD FFF7          	movff	postdec2,tblptrh
  5054  000C34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5055  000C34  6AF8               	clrf	tblptru,c
  5056  000C36                     	endif
  5057  000C36                     	if	0	;tblptru may be non-zero
  5058  000C36                     	endif
  5059  000C36  0008               	tblrd		*
  5060  000C38  50F5               	movf	tablat,w,c
  5061  000C3A  0A73               	xorlw	115
  5062  000C3C  A4D8               	btfss	status,2,c
  5063  000C3E  EF23  F006         	goto	u4371
  5064  000C42  EF25  F006         	goto	u4370
  5065  000C46                     u4371:
  5066  000C46  EF50  F006         	goto	l4408
  5067  000C4A                     u4370:
  5068  000C4A                     
  5069                           ; BSR set to: 0
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5071  000C4A  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5072  000C4E  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5073  000C52  2ADE               	incf	postinc2,f,c
  5074  000C54  0E00               	movlw	0
  5075  000C56  22DD               	addwfc	postdec2,f,c
  5076                           
  5077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5078  000C58  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5079  000C5C  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5080  000C60  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5081  000C64  0E02               	movlw	2
  5082  000C66  26DE               	addwf	postinc2,f,c
  5083  000C68  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5084  000C6C  0E00               	movlw	0
  5085  000C6E  22DD               	addwfc	postdec2,f,c
  5086  000C70  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5087  000C74  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5088  000C78  CFDE F0AC          	movff	postinc2,vfpfcnvrt@cp
  5089  000C7C  CFDD F0AD          	movff	postdec2,vfpfcnvrt@cp+1
  5090  000C80                     
  5091                           ; BSR set to: 0
  5092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5093  000C80  C0A2  F069         	movff	vfpfcnvrt@fp,stoa@fp
  5094  000C84  C0A3  F06A         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5095  000C88  C0AC  F06B         	movff	vfpfcnvrt@cp,stoa@s
  5096  000C8C  C0AD  F06C         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5097  000C90  EC42  F014         	call	_stoa	;wreg free
  5098  000C94  C069  F0A2         	movff	?_stoa,?_vfpfcnvrt
  5099  000C98  C06A  F0A3         	movff	?_stoa+1,?_vfpfcnvrt+1
  5100  000C9C  EF8C  F009         	goto	l668
  5101  000CA0                     l4408:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5105  000CA0  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5106  000CA4  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5107  000CA8  CFDE F060          	movff	postinc2,strncmp@_l
  5108  000CAC  CFDD F061          	movff	postdec2,strncmp@_l+1
  5109  000CB0  0EE2               	movlw	low STR_61
  5110  000CB2  6F62               	movwf	strncmp@_r& (0+255),b
  5111  000CB4  0EFF               	movlw	high STR_61
  5112  000CB6  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5113  000CB8  0E00               	movlw	0
  5114  000CBA  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5115  000CBC  0E03               	movlw	3
  5116  000CBE  6F64               	movwf	strncmp@n& (0+255),b
  5117  000CC0  EC5E  F01B         	call	_strncmp	;wreg free
  5118  000CC4  0100               	movlb	0	; () banked
  5119  000CC6  5160               	movf	?_strncmp& (0+255),w,b
  5120  000CC8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5121  000CCA  A4D8               	btfss	status,2,c
  5122  000CCC  EF6A  F006         	goto	u4381
  5123  000CD0  EF6C  F006         	goto	u4380
  5124  000CD4                     u4381:
  5125  000CD4  EFAB  F006         	goto	l4416
  5126  000CD8                     u4380:
  5127  000CD8                     
  5128                           ; BSR set to: 0
  5129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5130  000CD8  0E03               	movlw	3
  5131  000CDA  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5132  000CDE  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5133  000CE2  26DE               	addwf	postinc2,f,c
  5134  000CE4  0E00               	movlw	0
  5135  000CE6  22DD               	addwfc	postdec2,f,c
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5138  000CE8  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5139  000CEC  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5140  000CF0  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5141  000CF4  0E02               	movlw	2
  5142  000CF6  26DE               	addwf	postinc2,f,c
  5143  000CF8  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5144  000CFC  0E00               	movlw	0
  5145  000CFE  22DD               	addwfc	postdec2,f,c
  5146  000D00  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5147  000D04  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5148  000D08  50DF               	movf	indf2,w,c
  5149  000D0A  6FAA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5150  000D0C  51AA               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5151  000D0E  6FBF               	movwf	vfpfcnvrt@llu& (0+255),b
  5152  000D10  6BC0               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5153  000D12  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5154  000D14  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5155  000D16  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5156  000D18  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5157  000D1A  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5158  000D1C  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5159  000D1E                     l4412:
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5163  000D1E  C0A2  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  5164  000D22  C0A3  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5165  000D26  C0BF  F07D         	movff	vfpfcnvrt@llu,utoa@d
  5166  000D2A  C0C0  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5167  000D2E  C0C1  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5168  000D32  C0C2  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5169  000D36  C0C3  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5170  000D3A  C0C4  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5171  000D3E  C0C5  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5172  000D42  C0C6  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5173  000D46  EC9D  F010         	call	_utoa	;wreg free
  5174  000D4A  C07B  F0A2         	movff	?_utoa,?_vfpfcnvrt
  5175  000D4E  C07C  F0A3         	movff	?_utoa+1,?_vfpfcnvrt+1
  5176  000D52  EF8C  F009         	goto	l668
  5177  000D56                     l4416:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5181  000D56  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5182  000D5A  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5183  000D5E  CFDE F060          	movff	postinc2,strncmp@_l
  5184  000D62  CFDD F061          	movff	postdec2,strncmp@_l+1
  5185  000D66  0EE3               	movlw	low (STR_61+1)
  5186  000D68  6F62               	movwf	strncmp@_r& (0+255),b
  5187  000D6A  0EFF               	movlw	high (STR_61+1)
  5188  000D6C  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5189  000D6E  0E00               	movlw	0
  5190  000D70  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5191  000D72  0E02               	movlw	2
  5192  000D74  6F64               	movwf	strncmp@n& (0+255),b
  5193  000D76  EC5E  F01B         	call	_strncmp	;wreg free
  5194  000D7A  0100               	movlb	0	; () banked
  5195  000D7C  5160               	movf	?_strncmp& (0+255),w,b
  5196  000D7E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5197  000D80  A4D8               	btfss	status,2,c
  5198  000D82  EFC5  F006         	goto	u4391
  5199  000D86  EFC7  F006         	goto	u4390
  5200  000D8A                     u4391:
  5201  000D8A  EFEF  F006         	goto	l4424
  5202  000D8E                     u4390:
  5203  000D8E                     
  5204                           ; BSR set to: 0
  5205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5206  000D8E  0E02               	movlw	2
  5207  000D90  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5208  000D94  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5209  000D98  26DE               	addwf	postinc2,f,c
  5210  000D9A  0E00               	movlw	0
  5211  000D9C  22DD               	addwfc	postdec2,f,c
  5212                           
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5214  000D9E  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5215  000DA2  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5216  000DA6  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5217  000DAA  0E02               	movlw	2
  5218  000DAC  26DE               	addwf	postinc2,f,c
  5219  000DAE  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5220  000DB2  0E00               	movlw	0
  5221  000DB4  22DD               	addwfc	postdec2,f,c
  5222  000DB6  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5223  000DBA  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5224  000DBE  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  5225  000DC2  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  5226  000DC6  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5227  000DCA  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5228  000DCE  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5229  000DD0  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5230  000DD2  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5231  000DD4  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5232  000DD6  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5233  000DD8  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5234  000DDA  EF8F  F006         	goto	l4412
  5235  000DDE                     l4424:
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5239  000DDE  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5240  000DE2  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5241  000DE6  CFDE FFF6          	movff	postinc2,tblptrl
  5242  000DEA  CFDD FFF7          	movff	postdec2,tblptrh
  5243  000DEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5244  000DEE  6AF8               	clrf	tblptru,c
  5245  000DF0                     	endif
  5246  000DF0                     	if	0	;tblptru may be non-zero
  5247  000DF0                     	endif
  5248  000DF0  0008               	tblrd		*
  5249  000DF2  50F5               	movf	tablat,w,c
  5250  000DF4  0A75               	xorlw	117
  5251  000DF6  A4D8               	btfss	status,2,c
  5252  000DF8  EF00  F007         	goto	u4401
  5253  000DFC  EF02  F007         	goto	u4400
  5254  000E00                     u4401:
  5255  000E00  EF29  F007         	goto	l4432
  5256  000E04                     u4400:
  5257  000E04                     
  5258                           ; BSR set to: 0
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5260  000E04  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5261  000E08  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5262  000E0C  2ADE               	incf	postinc2,f,c
  5263  000E0E  0E00               	movlw	0
  5264  000E10  22DD               	addwfc	postdec2,f,c
  5265                           
  5266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5267  000E12  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5268  000E16  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5269  000E1A  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5270  000E1E  0E02               	movlw	2
  5271  000E20  26DE               	addwf	postinc2,f,c
  5272  000E22  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5273  000E26  0E00               	movlw	0
  5274  000E28  22DD               	addwfc	postdec2,f,c
  5275  000E2A  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5276  000E2E  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5277  000E32  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  5278  000E36  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  5279  000E3A  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5280  000E3E  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5281  000E42  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5282  000E44  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5283  000E46  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5284  000E48  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5285  000E4A  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5286  000E4C  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5287  000E4E  EF8F  F006         	goto	l4412
  5288  000E52                     l4432:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5292  000E52  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5293  000E56  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5294  000E5A  CFDE F060          	movff	postinc2,strncmp@_l
  5295  000E5E  CFDD F061          	movff	postdec2,strncmp@_l+1
  5296  000E62  0EF9               	movlw	low STR_71
  5297  000E64  6F62               	movwf	strncmp@_r& (0+255),b
  5298  000E66  0EFF               	movlw	high STR_71
  5299  000E68  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5300  000E6A  0E00               	movlw	0
  5301  000E6C  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5302  000E6E  0E02               	movlw	2
  5303  000E70  6F64               	movwf	strncmp@n& (0+255),b
  5304  000E72  EC5E  F01B         	call	_strncmp	;wreg free
  5305  000E76  0100               	movlb	0	; () banked
  5306  000E78  5160               	movf	?_strncmp& (0+255),w,b
  5307  000E7A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5308  000E7C  A4D8               	btfss	status,2,c
  5309  000E7E  EF43  F007         	goto	u4411
  5310  000E82  EF45  F007         	goto	u4410
  5311  000E86                     u4411:
  5312  000E86  EF6D  F007         	goto	l4440
  5313  000E8A                     u4410:
  5314  000E8A                     
  5315                           ; BSR set to: 0
  5316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5317  000E8A  0E02               	movlw	2
  5318  000E8C  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5319  000E90  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5320  000E94  26DE               	addwf	postinc2,f,c
  5321  000E96  0E00               	movlw	0
  5322  000E98  22DD               	addwfc	postdec2,f,c
  5323                           
  5324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5325  000E9A  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5326  000E9E  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5327  000EA2  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5328  000EA6  0E02               	movlw	2
  5329  000EA8  26DE               	addwf	postinc2,f,c
  5330  000EAA  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5331  000EAE  0E00               	movlw	0
  5332  000EB0  22DD               	addwfc	postdec2,f,c
  5333  000EB2  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5334  000EB6  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5335  000EBA  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  5336  000EBE  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  5337  000EC2  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5338  000EC6  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5339  000ECA  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5340  000ECC  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5341  000ECE  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5342  000ED0  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5343  000ED2  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5344  000ED4  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5345  000ED6  EF8F  F006         	goto	l4412
  5346  000EDA                     l4440:
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5350  000EDA  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5351  000EDE  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5352  000EE2  CFDE F060          	movff	postinc2,strncmp@_l
  5353  000EE6  CFDD F061          	movff	postdec2,strncmp@_l+1
  5354  000EEA  0EE6               	movlw	low STR_76
  5355  000EEC  6F62               	movwf	strncmp@_r& (0+255),b
  5356  000EEE  0EFF               	movlw	high STR_76
  5357  000EF0  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5358  000EF2  0E00               	movlw	0
  5359  000EF4  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5360  000EF6  0E03               	movlw	3
  5361  000EF8  6F64               	movwf	strncmp@n& (0+255),b
  5362  000EFA  EC5E  F01B         	call	_strncmp	;wreg free
  5363  000EFE  0100               	movlb	0	; () banked
  5364  000F00  5160               	movf	?_strncmp& (0+255),w,b
  5365  000F02  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5366  000F04  B4D8               	btfsc	status,2,c
  5367  000F06  EF87  F007         	goto	u4421
  5368  000F0A  EF89  F007         	goto	u4420
  5369  000F0E                     u4421:
  5370  000F0E  EFA5  F007         	goto	l4444
  5371  000F12                     u4420:
  5372  000F12                     
  5373                           ; BSR set to: 0
  5374  000F12  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5375  000F16  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5376  000F1A  CFDE F060          	movff	postinc2,strncmp@_l
  5377  000F1E  CFDD F061          	movff	postdec2,strncmp@_l+1
  5378  000F22  0ECE               	movlw	low STR_80
  5379  000F24  6F62               	movwf	strncmp@_r& (0+255),b
  5380  000F26  0EFF               	movlw	high STR_80
  5381  000F28  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5382  000F2A  0E00               	movlw	0
  5383  000F2C  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5384  000F2E  0E03               	movlw	3
  5385  000F30  6F64               	movwf	strncmp@n& (0+255),b
  5386  000F32  EC5E  F01B         	call	_strncmp	;wreg free
  5387  000F36  0100               	movlb	0	; () banked
  5388  000F38  5160               	movf	?_strncmp& (0+255),w,b
  5389  000F3A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5390  000F3C  A4D8               	btfss	status,2,c
  5391  000F3E  EFA3  F007         	goto	u4431
  5392  000F42  EFA5  F007         	goto	u4430
  5393  000F46                     u4431:
  5394  000F46  EFFA  F007         	goto	l4454
  5395  000F4A                     u4430:
  5396  000F4A                     l4444:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5400  000F4A  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5401  000F4E  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5402  000F52  CFDE F0A8          	movff	postinc2,??_vfpfcnvrt
  5403  000F56  CFDD F0A9          	movff	postdec2,??_vfpfcnvrt+1
  5404  000F5A  0E02               	movlw	2
  5405  000F5C  27A8               	addwf	??_vfpfcnvrt& (0+255),f,b
  5406  000F5E  0E00               	movlw	0
  5407  000F60  23A9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5408  000F62  C0A8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5409  000F66  C0A9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5410  000F6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5411  000F6A  6AF8               	clrf	tblptru,c
  5412  000F6C                     	endif
  5413  000F6C                     	if	0	;tblptru may be non-zero
  5414  000F6C                     	endif
  5415  000F6C  0008               	tblrd		*
  5416  000F6E  CFF5 F0BE          	movff	tablat,vfpfcnvrt@c
  5417  000F72                     
  5418                           ; BSR set to: 0
  5419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5420  000F72  0E03               	movlw	3
  5421  000F74  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5422  000F78  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5423  000F7C  26DE               	addwf	postinc2,f,c
  5424  000F7E  0E00               	movlw	0
  5425  000F80  22DD               	addwfc	postdec2,f,c
  5426  000F82                     
  5427                           ; BSR set to: 0
  5428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5429  000F82  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5430  000F86  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5431  000F8A  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5432  000F8E  0E02               	movlw	2
  5433  000F90  26DE               	addwf	postinc2,f,c
  5434  000F92  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5435  000F96  0E00               	movlw	0
  5436  000F98  22DD               	addwfc	postdec2,f,c
  5437  000F9A  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5438  000F9E  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5439  000FA2  50DF               	movf	indf2,w,c
  5440  000FA4  6FAA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5441  000FA6  51AA               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5442  000FA8  6FBF               	movwf	vfpfcnvrt@llu& (0+255),b
  5443  000FAA  6BC0               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5444  000FAC  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5445  000FAE  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5446  000FB0  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5447  000FB2  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5448  000FB4  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5449  000FB6  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5450  000FB8                     l4450:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  5454  000FB8  C0A2  F07B         	movff	vfpfcnvrt@fp,xtoa@fp
  5455  000FBC  C0A3  F07C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5456  000FC0  C0BF  F07D         	movff	vfpfcnvrt@llu,xtoa@d
  5457  000FC4  C0C0  F07E         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5458  000FC8  C0C1  F07F         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5459  000FCC  C0C2  F080         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5460  000FD0  C0C3  F081         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5461  000FD4  C0C4  F082         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5462  000FD8  C0C5  F083         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5463  000FDC  C0C6  F084         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5464  000FE0  C0BE  F085         	movff	vfpfcnvrt@c,xtoa@x
  5465  000FE4  EC30  F00F         	call	_xtoa	;wreg free
  5466  000FE8  C07B  F0A2         	movff	?_xtoa,?_vfpfcnvrt
  5467  000FEC  C07C  F0A3         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5468  000FF0  EF8C  F009         	goto	l668
  5469  000FF4                     l4454:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  5473  000FF4  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5474  000FF8  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5475  000FFC  CFDE F060          	movff	postinc2,strncmp@_l
  5476  001000  CFDD F061          	movff	postdec2,strncmp@_l+1
  5477  001004  0EE7               	movlw	low (STR_76+1)
  5478  001006  6F62               	movwf	strncmp@_r& (0+255),b
  5479  001008  0EFF               	movlw	high (STR_76+1)
  5480  00100A  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5481  00100C  0E00               	movlw	0
  5482  00100E  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5483  001010  0E02               	movlw	2
  5484  001012  6F64               	movwf	strncmp@n& (0+255),b
  5485  001014  EC5E  F01B         	call	_strncmp	;wreg free
  5486  001018  0100               	movlb	0	; () banked
  5487  00101A  5160               	movf	?_strncmp& (0+255),w,b
  5488  00101C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5489  00101E  B4D8               	btfsc	status,2,c
  5490  001020  EF14  F008         	goto	u4441
  5491  001024  EF16  F008         	goto	u4440
  5492  001028                     u4441:
  5493  001028  EF32  F008         	goto	l4458
  5494  00102C                     u4440:
  5495  00102C                     
  5496                           ; BSR set to: 0
  5497  00102C  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5498  001030  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5499  001034  CFDE F060          	movff	postinc2,strncmp@_l
  5500  001038  CFDD F061          	movff	postdec2,strncmp@_l+1
  5501  00103C  0ECF               	movlw	low (STR_80+1)
  5502  00103E  6F62               	movwf	strncmp@_r& (0+255),b
  5503  001040  0EFF               	movlw	high (STR_80+1)
  5504  001042  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5505  001044  0E00               	movlw	0
  5506  001046  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5507  001048  0E02               	movlw	2
  5508  00104A  6F64               	movwf	strncmp@n& (0+255),b
  5509  00104C  EC5E  F01B         	call	_strncmp	;wreg free
  5510  001050  0100               	movlb	0	; () banked
  5511  001052  5160               	movf	?_strncmp& (0+255),w,b
  5512  001054  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5513  001056  A4D8               	btfss	status,2,c
  5514  001058  EF30  F008         	goto	u4451
  5515  00105C  EF32  F008         	goto	u4450
  5516  001060                     u4451:
  5517  001060  EF6E  F008         	goto	l4468
  5518  001064                     u4450:
  5519  001064                     l4458:
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  5523  001064  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5524  001068  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5525  00106C  CFDE F0A8          	movff	postinc2,??_vfpfcnvrt
  5526  001070  CFDD F0A9          	movff	postdec2,??_vfpfcnvrt+1
  5527  001074  0E01               	movlw	1
  5528  001076  27A8               	addwf	??_vfpfcnvrt& (0+255),f,b
  5529  001078  0E00               	movlw	0
  5530  00107A  23A9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5531  00107C  C0A8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5532  001080  C0A9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5533  001084                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5534  001084  6AF8               	clrf	tblptru,c
  5535  001086                     	endif
  5536  001086                     	if	0	;tblptru may be non-zero
  5537  001086                     	endif
  5538  001086  0008               	tblrd		*
  5539  001088  CFF5 F0BE          	movff	tablat,vfpfcnvrt@c
  5540  00108C                     
  5541                           ; BSR set to: 0
  5542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5543  00108C  0E02               	movlw	2
  5544  00108E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5545  001092  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5546  001096  26DE               	addwf	postinc2,f,c
  5547  001098  0E00               	movlw	0
  5548  00109A  22DD               	addwfc	postdec2,f,c
  5549  00109C                     
  5550                           ; BSR set to: 0
  5551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5552  00109C  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5553  0010A0  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5554  0010A4  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5555  0010A8  0E02               	movlw	2
  5556  0010AA  26DE               	addwf	postinc2,f,c
  5557  0010AC  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5558  0010B0  0E00               	movlw	0
  5559  0010B2  22DD               	addwfc	postdec2,f,c
  5560  0010B4  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5561  0010B8  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5562  0010BC  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  5563  0010C0  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  5564  0010C4  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5565  0010C8  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5566  0010CC  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5567  0010CE  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5568  0010D0  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5569  0010D2  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5570  0010D4  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5571  0010D6  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5572  0010D8  EFDC  F007         	goto	l4450
  5573  0010DC                     l4468:
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5577  0010DC  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5578  0010E0  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5579  0010E4  CFDE FFF6          	movff	postinc2,tblptrl
  5580  0010E8  CFDD FFF7          	movff	postdec2,tblptrh
  5581  0010EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5582  0010EC  6AF8               	clrf	tblptru,c
  5583  0010EE                     	endif
  5584  0010EE                     	if	0	;tblptru may be non-zero
  5585  0010EE                     	endif
  5586  0010EE  0008               	tblrd		*
  5587  0010F0  50F5               	movf	tablat,w,c
  5588  0010F2  0A78               	xorlw	120
  5589  0010F4  B4D8               	btfsc	status,2,c
  5590  0010F6  EF7F  F008         	goto	u4461
  5591  0010FA  EF81  F008         	goto	u4460
  5592  0010FE                     u4461:
  5593  0010FE  EF94  F008         	goto	l4472
  5594  001102                     u4460:
  5595  001102                     
  5596                           ; BSR set to: 0
  5597  001102  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5598  001106  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5599  00110A  CFDE FFF6          	movff	postinc2,tblptrl
  5600  00110E  CFDD FFF7          	movff	postdec2,tblptrh
  5601  001112                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5602  001112  6AF8               	clrf	tblptru,c
  5603  001114                     	endif
  5604  001114                     	if	0	;tblptru may be non-zero
  5605  001114                     	endif
  5606  001114  0008               	tblrd		*
  5607  001116  50F5               	movf	tablat,w,c
  5608  001118  0A58               	xorlw	88
  5609  00111A  A4D8               	btfss	status,2,c
  5610  00111C  EF92  F008         	goto	u4471
  5611  001120  EF94  F008         	goto	u4470
  5612  001124                     u4471:
  5613  001124  EFC7  F008         	goto	l4482
  5614  001128                     u4470:
  5615  001128                     l4472:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5619  001128  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5620  00112C  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5621  001130  CFDE FFF6          	movff	postinc2,tblptrl
  5622  001134  CFDD FFF7          	movff	postdec2,tblptrh
  5623  001138                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5624  001138  6AF8               	clrf	tblptru,c
  5625  00113A                     	endif
  5626  00113A                     	if	0	;tblptru may be non-zero
  5627  00113A                     	endif
  5628  00113A  0008               	tblrd		*
  5629  00113C  CFF5 F0BE          	movff	tablat,vfpfcnvrt@c
  5630  001140                     
  5631                           ; BSR set to: 0
  5632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5633  001140  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5634  001144  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5635  001148  2ADE               	incf	postinc2,f,c
  5636  00114A  0E00               	movlw	0
  5637  00114C  22DD               	addwfc	postdec2,f,c
  5638  00114E                     
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5641  00114E  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5642  001152  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5643  001156  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5644  00115A  0E02               	movlw	2
  5645  00115C  26DE               	addwf	postinc2,f,c
  5646  00115E  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5647  001162  0E00               	movlw	0
  5648  001164  22DD               	addwfc	postdec2,f,c
  5649  001166  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5650  00116A  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5651  00116E  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  5652  001172  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  5653  001176  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5654  00117A  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5655  00117E  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5656  001180  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5657  001182  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5658  001184  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5659  001186  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5660  001188  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5661  00118A  EFDC  F007         	goto	l4450
  5662  00118E                     l4482:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  5666  00118E  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5667  001192  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5668  001196  CFDE F060          	movff	postinc2,strncmp@_l
  5669  00119A  CFDD F061          	movff	postdec2,strncmp@_l+1
  5670  00119E  0EFC               	movlw	low STR_94
  5671  0011A0  6F62               	movwf	strncmp@_r& (0+255),b
  5672  0011A2  0EFF               	movlw	high STR_94
  5673  0011A4  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5674  0011A6  0E00               	movlw	0
  5675  0011A8  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5676  0011AA  0E02               	movlw	2
  5677  0011AC  6F64               	movwf	strncmp@n& (0+255),b
  5678  0011AE  EC5E  F01B         	call	_strncmp	;wreg free
  5679  0011B2  0100               	movlb	0	; () banked
  5680  0011B4  5160               	movf	?_strncmp& (0+255),w,b
  5681  0011B6  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5682  0011B8  B4D8               	btfsc	status,2,c
  5683  0011BA  EFE1  F008         	goto	u4481
  5684  0011BE  EFE3  F008         	goto	u4480
  5685  0011C2                     u4481:
  5686  0011C2  EFFF  F008         	goto	l4486
  5687  0011C6                     u4480:
  5688  0011C6                     
  5689                           ; BSR set to: 0
  5690  0011C6  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5691  0011CA  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5692  0011CE  CFDE F060          	movff	postinc2,strncmp@_l
  5693  0011D2  CFDD F061          	movff	postdec2,strncmp@_l+1
  5694  0011D6  0EEA               	movlw	low STR_98
  5695  0011D8  6F62               	movwf	strncmp@_r& (0+255),b
  5696  0011DA  0EFF               	movlw	high STR_98
  5697  0011DC  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5698  0011DE  0E00               	movlw	0
  5699  0011E0  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5700  0011E2  0E02               	movlw	2
  5701  0011E4  6F64               	movwf	strncmp@n& (0+255),b
  5702  0011E6  EC5E  F01B         	call	_strncmp	;wreg free
  5703  0011EA  0100               	movlb	0	; () banked
  5704  0011EC  5160               	movf	?_strncmp& (0+255),w,b
  5705  0011EE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5706  0011F0  A4D8               	btfss	status,2,c
  5707  0011F2  EFFD  F008         	goto	u4491
  5708  0011F6  EFFF  F008         	goto	u4490
  5709  0011FA                     u4491:
  5710  0011FA  EF3B  F009         	goto	l4496
  5711  0011FE                     u4490:
  5712  0011FE                     l4486:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  5716  0011FE  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5717  001202  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5718  001206  CFDE F0A8          	movff	postinc2,??_vfpfcnvrt
  5719  00120A  CFDD F0A9          	movff	postdec2,??_vfpfcnvrt+1
  5720  00120E  0E01               	movlw	1
  5721  001210  27A8               	addwf	??_vfpfcnvrt& (0+255),f,b
  5722  001212  0E00               	movlw	0
  5723  001214  23A9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5724  001216  C0A8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5725  00121A  C0A9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5726  00121E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5727  00121E  6AF8               	clrf	tblptru,c
  5728  001220                     	endif
  5729  001220                     	if	0	;tblptru may be non-zero
  5730  001220                     	endif
  5731  001220  0008               	tblrd		*
  5732  001222  CFF5 F0BE          	movff	tablat,vfpfcnvrt@c
  5733  001226                     
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5736  001226  0E02               	movlw	2
  5737  001228  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5738  00122C  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5739  001230  26DE               	addwf	postinc2,f,c
  5740  001232  0E00               	movlw	0
  5741  001234  22DD               	addwfc	postdec2,f,c
  5742  001236                     
  5743                           ; BSR set to: 0
  5744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5745  001236  C0A6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5746  00123A  C0A7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5747  00123E  CFDF F0A8          	movff	indf2,??_vfpfcnvrt
  5748  001242  0E02               	movlw	2
  5749  001244  26DE               	addwf	postinc2,f,c
  5750  001246  CFDF F0A9          	movff	indf2,??_vfpfcnvrt+1
  5751  00124A  0E00               	movlw	0
  5752  00124C  22DD               	addwfc	postdec2,f,c
  5753  00124E  C0A8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5754  001252  C0A9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5755  001256  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt+2
  5756  00125A  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+3
  5757  00125E  C0AA  F0BF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5758  001262  C0AB  F0C0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5759  001266  6BC1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5760  001268  6BC2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5761  00126A  6BC3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5762  00126C  6BC4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5763  00126E  6BC5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5764  001270  6BC6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5765  001272  EFDC  F007         	goto	l4450
  5766  001276                     l4496:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5770  001276  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5771  00127A  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5772  00127E  CFDE FFF6          	movff	postinc2,tblptrl
  5773  001282  CFDD FFF7          	movff	postdec2,tblptrh
  5774  001286                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5775  001286  6AF8               	clrf	tblptru,c
  5776  001288                     	endif
  5777  001288                     	if	0	;tblptru may be non-zero
  5778  001288                     	endif
  5779  001288  0008               	tblrd		*
  5780  00128A  50F5               	movf	tablat,w,c
  5781  00128C  0A25               	xorlw	37
  5782  00128E  A4D8               	btfss	status,2,c
  5783  001290  EF4C  F009         	goto	u4501
  5784  001294  EF4E  F009         	goto	u4500
  5785  001298                     u4501:
  5786  001298  EF66  F009         	goto	l4506
  5787  00129C                     u4500:
  5788  00129C                     
  5789                           ; BSR set to: 0
  5790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5791  00129C  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5792  0012A0  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5793  0012A4  2ADE               	incf	postinc2,f,c
  5794  0012A6  0E00               	movlw	0
  5795  0012A8  22DD               	addwfc	postdec2,f,c
  5796  0012AA                     
  5797                           ; BSR set to: 0
  5798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5799  0012AA  0E00               	movlw	0
  5800  0012AC  6F61               	movwf	(fputc@c+1)& (0+255),b
  5801  0012AE  0E25               	movlw	37
  5802  0012B0  6F60               	movwf	fputc@c& (0+255),b
  5803  0012B2  C0A2  F062         	movff	vfpfcnvrt@fp,fputc@fp
  5804  0012B6  C0A3  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5805  0012BA  EC3D  F01C         	call	_fputc	;wreg free
  5806  0012BE                     l4502:
  5807                           
  5808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5809  0012BE  0E00               	movlw	0
  5810  0012C0  0100               	movlb	0	; () banked
  5811  0012C2  6FA3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5812  0012C4  0E01               	movlw	1
  5813  0012C6  6FA2               	movwf	?_vfpfcnvrt& (0+255),b
  5814  0012C8  EF8C  F009         	goto	l668
  5815  0012CC                     l4506:
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5819  0012CC  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5820  0012D0  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5821  0012D4  2ADE               	incf	postinc2,f,c
  5822  0012D6  0E00               	movlw	0
  5823  0012D8  22DD               	addwfc	postdec2,f,c
  5824  0012DA  EFFA  F004         	goto	l4358
  5825  0012DE                     l4512:
  5826                           
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5828  0012DE  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5829  0012E2  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5830  0012E6  CFDE FFF6          	movff	postinc2,tblptrl
  5831  0012EA  CFDD FFF7          	movff	postdec2,tblptrh
  5832  0012EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5833  0012EE  6AF8               	clrf	tblptru,c
  5834  0012F0                     	endif
  5835  0012F0                     	if	0	;tblptru may be non-zero
  5836  0012F0                     	endif
  5837  0012F0  0008               	tblrd		*
  5838  0012F2  50F5               	movf	tablat,w,c
  5839  0012F4  0100               	movlb	0	; () banked
  5840  0012F6  6F60               	movwf	fputc@c& (0+255),b
  5841  0012F8  6B61               	clrf	(fputc@c+1)& (0+255),b
  5842  0012FA  C0A2  F062         	movff	vfpfcnvrt@fp,fputc@fp
  5843  0012FE  C0A3  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5844  001302  EC3D  F01C         	call	_fputc	;wreg free
  5845  001306                     
  5846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5847  001306  C0A4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5848  00130A  C0A5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5849  00130E  2ADE               	incf	postinc2,f,c
  5850  001310  0E00               	movlw	0
  5851  001312  22DD               	addwfc	postdec2,f,c
  5852  001314  EF5F  F009         	goto	l4502
  5853  001318                     l668:
  5854  001318  0012               	return		;funcret
  5855  00131A                     __end_of_vfpfcnvrt:
  5856                           	opt callstack 0
  5857                           
  5858 ;; *************** function _xtoa *****************
  5859 ;; Defined at:
  5860 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  5863 ;;		 -> vsnprintf@f(6), 
  5864 ;;  d               8   29[BANK0 ] unsigned long long 
  5865 ;;  x               1   37[BANK0 ] unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  n               8   54[BANK0 ] unsigned long long 
  5868 ;;  c               2   64[BANK0 ] int 
  5869 ;;  i               2   62[BANK0 ] int 
  5870 ;;  w               2   52[BANK0 ] int 
  5871 ;;  p               2   50[BANK0 ] int 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  2   27[BANK0 ] int 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5881 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5884 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5885 ;;Total ram usage:       39 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:   14
  5888 ;; This function calls:
  5889 ;;		_isalpha
  5890 ;;		_isupper
  5891 ;;		_pad
  5892 ;;		_toupper
  5893 ;; This function is called by:
  5894 ;;		_vfpfcnvrt
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text5
  5899  001E60                     __ptext5:
  5900                           	opt callstack 0
  5901  001E60                     _xtoa:
  5902                           	opt callstack 12
  5903  001E60                     
  5904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5905  001E60  0100               	movlb	0	; () banked
  5906  001E62  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  5907  001E64  EF36  F00F         	goto	u3701
  5908  001E68  EF38  F00F         	goto	u3700
  5909  001E6C                     u3701:
  5910  001E6C  EF39  F00F         	goto	l4012
  5911  001E70                     u3700:
  5912  001E70                     
  5913                           ; BSR set to: 0
  5914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5915  001E70  93F7               	bcf	_flags& (0+255),1,b
  5916  001E72                     l4012:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5920  001E72  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  5921  001E74  EF46  F00F         	goto	u3710
  5922  001E78  51F6               	movf	(_prec+1)& (0+255),w,b
  5923  001E7A  E106               	bnz	u3711
  5924  001E7C  05F5               	decf	_prec& (0+255),w,b
  5925  001E7E  B0D8               	btfsc	status,0,c
  5926  001E80  EF44  F00F         	goto	u3711
  5927  001E84  EF46  F00F         	goto	u3710
  5928  001E88                     u3711:
  5929  001E88  EF4C  F00F         	goto	l606
  5930  001E8C                     u3710:
  5931  001E8C                     
  5932                           ; BSR set to: 0
  5933  001E8C  0E00               	movlw	0
  5934  001E8E  6F93               	movwf	(xtoa@p+1)& (0+255),b
  5935  001E90  0E01               	movlw	1
  5936  001E92  6F92               	movwf	xtoa@p& (0+255),b
  5937  001E94  EF50  F00F         	goto	l608
  5938  001E98                     l606:
  5939                           
  5940                           ; BSR set to: 0
  5941  001E98  C0F5  F092         	movff	_prec,xtoa@p
  5942  001E9C  C0F6  F093         	movff	_prec+1,xtoa@p+1
  5943  001EA0                     l608:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5947  001EA0  C0F3  F094         	movff	_width,xtoa@w
  5948  001EA4  C0F4  F095         	movff	_width+1,xtoa@w+1
  5949                           
  5950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5951  001EA8  A9F7               	btfss	_flags& (0+255),4,b
  5952  001EAA  EF59  F00F         	goto	u3721
  5953  001EAE  EF5B  F00F         	goto	u3720
  5954  001EB2                     u3721:
  5955  001EB2  EF5F  F00F         	goto	l4018
  5956  001EB6                     u3720:
  5957  001EB6                     
  5958                           ; BSR set to: 0
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5960  001EB6  0EFE               	movlw	254
  5961  001EB8  2794               	addwf	xtoa@w& (0+255),f,b
  5962  001EBA  0EFF               	movlw	255
  5963  001EBC  2395               	addwfc	(xtoa@w+1)& (0+255),f,b
  5964  001EBE                     l4018:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5968  001EBE  C07D  F096         	movff	xtoa@d,xtoa@n
  5969  001EC2  C07E  F097         	movff	xtoa@d+1,xtoa@n+1
  5970  001EC6  C07F  F098         	movff	xtoa@d+2,xtoa@n+2
  5971  001ECA  C080  F099         	movff	xtoa@d+3,xtoa@n+3
  5972  001ECE  C081  F09A         	movff	xtoa@d+4,xtoa@n+4
  5973  001ED2  C082  F09B         	movff	xtoa@d+5,xtoa@n+5
  5974  001ED6  C083  F09C         	movff	xtoa@d+6,xtoa@n+6
  5975  001EDA  C084  F09D         	movff	xtoa@d+7,xtoa@n+7
  5976  001EDE                     
  5977                           ; BSR set to: 0
  5978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5979  001EDE  0E00               	movlw	0
  5980  001EE0  6F9F               	movwf	(xtoa@i+1)& (0+255),b
  5981  001EE2  0E1F               	movlw	31
  5982  001EE4  6F9E               	movwf	xtoa@i& (0+255),b
  5983  001EE6                     
  5984                           ; BSR set to: 0
  5985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5986  001EE6  0E00               	movlw	0
  5987  001EE8  0101               	movlb	1	; () banked
  5988  001EEA  6F83               	movwf	(_dbuf+31)& (0+255),b
  5989                           
  5990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5991  001EEC  EF2C  F010         	goto	l4054
  5992  001EF0                     l4024:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5996  001EF0  079E               	decf	xtoa@i& (0+255),f,b
  5997  001EF2  A0D8               	btfss	status,0,c
  5998  001EF4  079F               	decf	(xtoa@i+1)& (0+255),f,b
  5999  001EF6                     
  6000                           ; BSR set to: 0
  6001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6002  001EF6  0E0F               	movlw	15
  6003  001EF8  1596               	andwf	xtoa@n& (0+255),w,b
  6004  001EFA  6FA0               	movwf	xtoa@c& (0+255),b
  6005  001EFC  6BA1               	clrf	(xtoa@c+1)& (0+255),b
  6006  001EFE                     
  6007                           ; BSR set to: 0
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6009  001EFE  BFA1               	btfsc	(xtoa@c+1)& (0+255),7,b
  6010  001F00  EF8B  F00F         	goto	u3731
  6011  001F04  51A1               	movf	(xtoa@c+1)& (0+255),w,b
  6012  001F06  E109               	bnz	u3730
  6013  001F08  0E0A               	movlw	10
  6014  001F0A  5DA0               	subwf	xtoa@c& (0+255),w,b
  6015  001F0C  A0D8               	btfss	status,0,c
  6016  001F0E  EF8B  F00F         	goto	u3731
  6017  001F12  EF8D  F00F         	goto	u3730
  6018  001F16                     u3731:
  6019  001F16  EF95  F00F         	goto	l4032
  6020  001F1A                     u3730:
  6021  001F1A                     
  6022                           ; BSR set to: 0
  6023  001F1A  0E57               	movlw	87
  6024  001F1C  25A0               	addwf	xtoa@c& (0+255),w,b
  6025  001F1E  6FA0               	movwf	xtoa@c& (0+255),b
  6026  001F20  0E00               	movlw	0
  6027  001F22  21A1               	addwfc	(xtoa@c+1)& (0+255),w,b
  6028  001F24  6FA1               	movwf	(xtoa@c+1)& (0+255),b
  6029  001F26  EF9B  F00F         	goto	l615
  6030  001F2A                     l4032:
  6031                           
  6032                           ; BSR set to: 0
  6033  001F2A  0E30               	movlw	48
  6034  001F2C  25A0               	addwf	xtoa@c& (0+255),w,b
  6035  001F2E  6FA0               	movwf	xtoa@c& (0+255),b
  6036  001F30  0E00               	movlw	0
  6037  001F32  21A1               	addwfc	(xtoa@c+1)& (0+255),w,b
  6038  001F34  6FA1               	movwf	(xtoa@c+1)& (0+255),b
  6039  001F36                     l615:
  6040                           
  6041                           ; BSR set to: 0
  6042  001F36  0EBF               	movlw	191
  6043  001F38  6F86               	movwf	??_xtoa& (0+255),b
  6044  001F3A  0EFF               	movlw	255
  6045  001F3C  6F87               	movwf	(??_xtoa+1)& (0+255),b
  6046  001F3E  5185               	movf	xtoa@x& (0+255),w,b
  6047  001F40  6F88               	movwf	(??_xtoa+2)& (0+255),b
  6048  001F42  6B89               	clrf	(??_xtoa+3)& (0+255),b
  6049  001F44  5186               	movf	??_xtoa& (0+255),w,b
  6050  001F46  2788               	addwf	(??_xtoa+2)& (0+255),f,b
  6051  001F48  5187               	movf	(??_xtoa+1)& (0+255),w,b
  6052  001F4A  2389               	addwfc	(??_xtoa+3)& (0+255),f,b
  6053  001F4C  5189               	movf	(??_xtoa+3)& (0+255),w,b
  6054  001F4E  E10A               	bnz	u3740
  6055  001F50  0E1A               	movlw	26
  6056  001F52  5D88               	subwf	(??_xtoa+2)& (0+255),w,b
  6057  001F54  A0D8               	btfss	status,0,c
  6058  001F56  EFAF  F00F         	goto	u3741
  6059  001F5A  EFB2  F00F         	goto	u3740
  6060  001F5E                     u3741:
  6061  001F5E  0E01               	movlw	1
  6062  001F60  EFB3  F00F         	goto	u3750
  6063  001F64                     u3740:
  6064  001F64  0E00               	movlw	0
  6065  001F66                     u3750:
  6066  001F66  6F8E               	movwf	_xtoa$1394& (0+255),b
  6067  001F68  6B8F               	clrf	(_xtoa$1394+1)& (0+255),b
  6068  001F6A                     
  6069                           ; BSR set to: 0
  6070  001F6A  518E               	movf	_xtoa$1394& (0+255),w,b
  6071  001F6C  118F               	iorwf	(_xtoa$1394+1)& (0+255),w,b
  6072  001F6E  B4D8               	btfsc	status,2,c
  6073  001F70  EFBC  F00F         	goto	u3761
  6074  001F74  EFBE  F00F         	goto	u3760
  6075  001F78                     u3761:
  6076  001F78  EFEE  F00F         	goto	l4046
  6077  001F7C                     u3760:
  6078  001F7C                     
  6079                           ; BSR set to: 0
  6080  001F7C  0E9F               	movlw	159
  6081  001F7E  6F86               	movwf	??_xtoa& (0+255),b
  6082  001F80  0EFF               	movlw	255
  6083  001F82  6F87               	movwf	(??_xtoa+1)& (0+255),b
  6084  001F84  0E20               	movlw	32
  6085  001F86  11A0               	iorwf	xtoa@c& (0+255),w,b
  6086  001F88  6F88               	movwf	(??_xtoa+2)& (0+255),b
  6087  001F8A  0E00               	movlw	0
  6088  001F8C  11A1               	iorwf	(xtoa@c+1)& (0+255),w,b
  6089  001F8E  6F89               	movwf	(??_xtoa+3)& (0+255),b
  6090  001F90  5186               	movf	??_xtoa& (0+255),w,b
  6091  001F92  2788               	addwf	(??_xtoa+2)& (0+255),f,b
  6092  001F94  5187               	movf	(??_xtoa+1)& (0+255),w,b
  6093  001F96  2389               	addwfc	(??_xtoa+3)& (0+255),f,b
  6094  001F98  5189               	movf	(??_xtoa+3)& (0+255),w,b
  6095  001F9A  E10A               	bnz	u3770
  6096  001F9C  0E1A               	movlw	26
  6097  001F9E  5D88               	subwf	(??_xtoa+2)& (0+255),w,b
  6098  001FA0  A0D8               	btfss	status,0,c
  6099  001FA2  EFD5  F00F         	goto	u3771
  6100  001FA6  EFD8  F00F         	goto	u3770
  6101  001FAA                     u3771:
  6102  001FAA  0E01               	movlw	1
  6103  001FAC  EFD9  F00F         	goto	u3780
  6104  001FB0                     u3770:
  6105  001FB0  0E00               	movlw	0
  6106  001FB2                     u3780:
  6107  001FB2  6F90               	movwf	_xtoa$1395& (0+255),b
  6108  001FB4  6B91               	clrf	(_xtoa$1395+1)& (0+255),b
  6109  001FB6                     
  6110                           ; BSR set to: 0
  6111  001FB6  5190               	movf	_xtoa$1395& (0+255),w,b
  6112  001FB8  1191               	iorwf	(_xtoa$1395+1)& (0+255),w,b
  6113  001FBA  B4D8               	btfsc	status,2,c
  6114  001FBC  EFE2  F00F         	goto	u3791
  6115  001FC0  EFE4  F00F         	goto	u3790
  6116  001FC4                     u3791:
  6117  001FC4  EFEE  F00F         	goto	l4046
  6118  001FC8                     u3790:
  6119  001FC8                     
  6120                           ; BSR set to: 0
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6122  001FC8  C0A0  F066         	movff	xtoa@c,toupper@c
  6123  001FCC  C0A1  F067         	movff	xtoa@c+1,toupper@c+1
  6124  001FD0  ECD8  F01D         	call	_toupper	;wreg free
  6125  001FD4  C066  F0A0         	movff	?_toupper,xtoa@c
  6126  001FD8  C067  F0A1         	movff	?_toupper+1,xtoa@c+1
  6127  001FDC                     l4046:
  6128                           
  6129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6130  001FDC  0E64               	movlw	low _dbuf
  6131  001FDE  0100               	movlb	0	; () banked
  6132  001FE0  259E               	addwf	xtoa@i& (0+255),w,b
  6133  001FE2  6ED9               	movwf	fsr2l,c
  6134  001FE4  0E01               	movlw	high _dbuf
  6135  001FE6  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  6136  001FE8  6EDA               	movwf	fsr2h,c
  6137  001FEA  C0A0  FFDF         	movff	xtoa@c,indf2
  6138  001FEE                     
  6139                           ; BSR set to: 0
  6140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6141  001FEE  0792               	decf	xtoa@p& (0+255),f,b
  6142  001FF0  A0D8               	btfss	status,0,c
  6143  001FF2  0793               	decf	(xtoa@p+1)& (0+255),f,b
  6144  001FF4                     
  6145                           ; BSR set to: 0
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6147  001FF4  0794               	decf	xtoa@w& (0+255),f,b
  6148  001FF6  A0D8               	btfss	status,0,c
  6149  001FF8  0795               	decf	(xtoa@w+1)& (0+255),f,b
  6150  001FFA                     
  6151                           ; BSR set to: 0
  6152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6153  001FFA  C096  F086         	movff	xtoa@n,??_xtoa
  6154  001FFE  C097  F087         	movff	xtoa@n+1,??_xtoa+1
  6155  002002  C098  F088         	movff	xtoa@n+2,??_xtoa+2
  6156  002006  C099  F089         	movff	xtoa@n+3,??_xtoa+3
  6157  00200A  C09A  F08A         	movff	xtoa@n+4,??_xtoa+4
  6158  00200E  C09B  F08B         	movff	xtoa@n+5,??_xtoa+5
  6159  002012  C09C  F08C         	movff	xtoa@n+6,??_xtoa+6
  6160  002016  C09D  F08D         	movff	xtoa@n+7,??_xtoa+7
  6161  00201A  0E05               	movlw	5
  6162  00201C  EF19  F010         	goto	u3800
  6163  002020                     u3805:
  6164  002020  90D8               	bcf	status,0,c
  6165  002022  338D               	rrcf	(??_xtoa+7)& (0+255),f,b
  6166  002024  338C               	rrcf	(??_xtoa+6)& (0+255),f,b
  6167  002026  338B               	rrcf	(??_xtoa+5)& (0+255),f,b
  6168  002028  338A               	rrcf	(??_xtoa+4)& (0+255),f,b
  6169  00202A  3389               	rrcf	(??_xtoa+3)& (0+255),f,b
  6170  00202C  3388               	rrcf	(??_xtoa+2)& (0+255),f,b
  6171  00202E  3387               	rrcf	(??_xtoa+1)& (0+255),f,b
  6172  002030  3386               	rrcf	??_xtoa& (0+255),f,b
  6173  002032                     u3800:
  6174  002032  2EE8               	decfsz	wreg,f,c
  6175  002034  EF10  F010         	goto	u3805
  6176  002038  C086  F096         	movff	??_xtoa,xtoa@n
  6177  00203C  C087  F097         	movff	??_xtoa+1,xtoa@n+1
  6178  002040  C088  F098         	movff	??_xtoa+2,xtoa@n+2
  6179  002044  C089  F099         	movff	??_xtoa+3,xtoa@n+3
  6180  002048  C08A  F09A         	movff	??_xtoa+4,xtoa@n+4
  6181  00204C  C08B  F09B         	movff	??_xtoa+5,xtoa@n+5
  6182  002050  C08C  F09C         	movff	??_xtoa+6,xtoa@n+6
  6183  002054  C08D  F09D         	movff	??_xtoa+7,xtoa@n+7
  6184  002058                     l4054:
  6185                           
  6186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6187  002058  0100               	movlb	0	; () banked
  6188  00205A  BF9F               	btfsc	(xtoa@i+1)& (0+255),7,b
  6189  00205C  EF39  F010         	goto	u3811
  6190  002060  519F               	movf	(xtoa@i+1)& (0+255),w,b
  6191  002062  E109               	bnz	u3810
  6192  002064  0E02               	movlw	2
  6193  002066  5D9E               	subwf	xtoa@i& (0+255),w,b
  6194  002068  A0D8               	btfss	status,0,c
  6195  00206A  EF39  F010         	goto	u3811
  6196  00206E  EF3B  F010         	goto	u3810
  6197  002072                     u3811:
  6198  002072  EF6B  F010         	goto	l629
  6199  002076                     u3810:
  6200  002076                     
  6201                           ; BSR set to: 0
  6202  002076  5196               	movf	xtoa@n& (0+255),w,b
  6203  002078  1197               	iorwf	(xtoa@n+1)& (0+255),w,b
  6204  00207A  1198               	iorwf	(xtoa@n+2)& (0+255),w,b
  6205  00207C  1199               	iorwf	(xtoa@n+3)& (0+255),w,b
  6206  00207E  119A               	iorwf	(xtoa@n+4)& (0+255),w,b
  6207  002080  119B               	iorwf	(xtoa@n+5)& (0+255),w,b
  6208  002082  119C               	iorwf	(xtoa@n+6)& (0+255),w,b
  6209  002084  119D               	iorwf	(xtoa@n+7)& (0+255),w,b
  6210  002086  A4D8               	btfss	status,2,c
  6211  002088  EF48  F010         	goto	u3821
  6212  00208C  EF4A  F010         	goto	u3820
  6213  002090                     u3821:
  6214  002090  EF78  F00F         	goto	l4024
  6215  002094                     u3820:
  6216  002094                     
  6217                           ; BSR set to: 0
  6218  002094  BF93               	btfsc	(xtoa@p+1)& (0+255),7,b
  6219  002096  EF57  F010         	goto	u3830
  6220  00209A  5193               	movf	(xtoa@p+1)& (0+255),w,b
  6221  00209C  E106               	bnz	u3831
  6222  00209E  0592               	decf	xtoa@p& (0+255),w,b
  6223  0020A0  B0D8               	btfsc	status,0,c
  6224  0020A2  EF55  F010         	goto	u3831
  6225  0020A6  EF57  F010         	goto	u3830
  6226  0020AA                     u3831:
  6227  0020AA  EF78  F00F         	goto	l4024
  6228  0020AE                     u3830:
  6229  0020AE                     
  6230                           ; BSR set to: 0
  6231  0020AE  BF95               	btfsc	(xtoa@w+1)& (0+255),7,b
  6232  0020B0  EF62  F010         	goto	u3841
  6233  0020B4  5195               	movf	(xtoa@w+1)& (0+255),w,b
  6234  0020B6  E108               	bnz	u3840
  6235  0020B8  0594               	decf	xtoa@w& (0+255),w,b
  6236  0020BA  A0D8               	btfss	status,0,c
  6237  0020BC  EF62  F010         	goto	u3841
  6238  0020C0  EF64  F010         	goto	u3840
  6239  0020C4                     u3841:
  6240  0020C4  EF6B  F010         	goto	l629
  6241  0020C8                     u3840:
  6242  0020C8                     
  6243                           ; BSR set to: 0
  6244  0020C8  B3F7               	btfsc	_flags& (0+255),1,b
  6245  0020CA  EF69  F010         	goto	u3851
  6246  0020CE  EF6B  F010         	goto	u3850
  6247  0020D2                     u3851:
  6248  0020D2  EF78  F00F         	goto	l4024
  6249  0020D6                     u3850:
  6250  0020D6                     l629:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6254  0020D6  A9F7               	btfss	_flags& (0+255),4,b
  6255  0020D8  EF70  F010         	goto	u3861
  6256  0020DC  EF72  F010         	goto	u3860
  6257  0020E0                     u3861:
  6258  0020E0  EF88  F010         	goto	l4070
  6259  0020E4                     u3860:
  6260  0020E4                     
  6261                           ; BSR set to: 0
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6263  0020E4  079E               	decf	xtoa@i& (0+255),f,b
  6264  0020E6  A0D8               	btfss	status,0,c
  6265  0020E8  079F               	decf	(xtoa@i+1)& (0+255),f,b
  6266  0020EA                     
  6267                           ; BSR set to: 0
  6268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6269  0020EA  0E64               	movlw	low _dbuf
  6270  0020EC  259E               	addwf	xtoa@i& (0+255),w,b
  6271  0020EE  6ED9               	movwf	fsr2l,c
  6272  0020F0  0E01               	movlw	high _dbuf
  6273  0020F2  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  6274  0020F4  6EDA               	movwf	fsr2h,c
  6275  0020F6  C085  FFDF         	movff	xtoa@x,indf2
  6276  0020FA                     
  6277                           ; BSR set to: 0
  6278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6279  0020FA  079E               	decf	xtoa@i& (0+255),f,b
  6280  0020FC  A0D8               	btfss	status,0,c
  6281  0020FE  079F               	decf	(xtoa@i+1)& (0+255),f,b
  6282                           
  6283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6284  002100  0E64               	movlw	low _dbuf
  6285  002102  259E               	addwf	xtoa@i& (0+255),w,b
  6286  002104  6ED9               	movwf	fsr2l,c
  6287  002106  0E01               	movlw	high _dbuf
  6288  002108  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  6289  00210A  6EDA               	movwf	fsr2h,c
  6290  00210C  0E30               	movlw	48
  6291  00210E  6EDF               	movwf	indf2,c
  6292  002110                     l4070:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6296  002110  C07B  F070         	movff	xtoa@fp,pad@fp
  6297  002114  C07C  F071         	movff	xtoa@fp+1,pad@fp+1
  6298  002118  0E64               	movlw	low _dbuf
  6299  00211A  259E               	addwf	xtoa@i& (0+255),w,b
  6300  00211C  6F72               	movwf	pad@buf& (0+255),b
  6301  00211E  0E01               	movlw	high _dbuf
  6302  002120  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  6303  002122  6F73               	movwf	(pad@buf+1)& (0+255),b
  6304  002124  C094  F074         	movff	xtoa@w,pad@p
  6305  002128  C095  F075         	movff	xtoa@w+1,pad@p+1
  6306  00212C  ECA3  F01C         	call	_pad	;wreg free
  6307  002130  C070  F07B         	movff	?_pad,?_xtoa
  6308  002134  C071  F07C         	movff	?_pad+1,?_xtoa+1
  6309  002138  0012               	return		;funcret
  6310  00213A                     __end_of_xtoa:
  6311                           	opt callstack 0
  6312                           
  6313 ;; *************** function _toupper *****************
  6314 ;; Defined at:
  6315 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  c               2    6[BANK0 ] int 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  2    6[BANK0 ] int 
  6322 ;; Registers used:
  6323 ;;		wreg, status,2, status,0
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;Total ram usage:        8 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:   11
  6336 ;; This function calls:
  6337 ;;		_islower
  6338 ;; This function is called by:
  6339 ;;		_xtoa
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text6
  6344  003BB0                     __ptext6:
  6345                           	opt callstack 0
  6346  003BB0                     _toupper:
  6347                           	opt callstack 14
  6348  003BB0  0E9F               	movlw	159
  6349  003BB2  0100               	movlb	0	; () banked
  6350  003BB4  6F68               	movwf	??_toupper& (0+255),b
  6351  003BB6  0EFF               	movlw	255
  6352  003BB8  6F69               	movwf	(??_toupper+1)& (0+255),b
  6353  003BBA  C066  F06A         	movff	toupper@c,??_toupper+2
  6354  003BBE  C067  F06B         	movff	toupper@c+1,??_toupper+3
  6355  003BC2  5168               	movf	??_toupper& (0+255),w,b
  6356  003BC4  276A               	addwf	(??_toupper+2)& (0+255),f,b
  6357  003BC6  5169               	movf	(??_toupper+1)& (0+255),w,b
  6358  003BC8  236B               	addwfc	(??_toupper+3)& (0+255),f,b
  6359  003BCA  516B               	movf	(??_toupper+3)& (0+255),w,b
  6360  003BCC  E10A               	bnz	u2990
  6361  003BCE  0E1A               	movlw	26
  6362  003BD0  5D6A               	subwf	(??_toupper+2)& (0+255),w,b
  6363  003BD2  A0D8               	btfss	status,0,c
  6364  003BD4  EFEE  F01D         	goto	u2991
  6365  003BD8  EFF1  F01D         	goto	u2990
  6366  003BDC                     u2991:
  6367  003BDC  0E01               	movlw	1
  6368  003BDE  EFF2  F01D         	goto	u3000
  6369  003BE2                     u2990:
  6370  003BE2  0E00               	movlw	0
  6371  003BE4                     u3000:
  6372  003BE4  6F6C               	movwf	_toupper$2078& (0+255),b
  6373  003BE6  6B6D               	clrf	(_toupper$2078+1)& (0+255),b
  6374  003BE8                     
  6375                           ; BSR set to: 0
  6376  003BE8  516C               	movf	_toupper$2078& (0+255),w,b
  6377  003BEA  116D               	iorwf	(_toupper$2078+1)& (0+255),w,b
  6378  003BEC  B4D8               	btfsc	status,2,c
  6379  003BEE  EFFB  F01D         	goto	u3011
  6380  003BF2  EFFD  F01D         	goto	u3010
  6381  003BF6                     u3011:
  6382  003BF6  EF03  F01E         	goto	l1501
  6383  003BFA                     u3010:
  6384  003BFA                     
  6385                           ; BSR set to: 0
  6386  003BFA  0E5F               	movlw	95
  6387  003BFC  1566               	andwf	toupper@c& (0+255),w,b
  6388  003BFE  6F66               	movwf	?_toupper& (0+255),b
  6389  003C00  6B67               	clrf	(?_toupper+1)& (0+255),b
  6390  003C02  EF07  F01E         	goto	l1506
  6391  003C06                     l1501:
  6392                           
  6393                           ; BSR set to: 0
  6394  003C06  C066  F066         	movff	toupper@c,?_toupper
  6395  003C0A  C067  F067         	movff	toupper@c+1,?_toupper+1
  6396  003C0E                     l1506:
  6397                           
  6398                           ; BSR set to: 0
  6399  003C0E  0012               	return		;funcret
  6400  003C10                     __end_of_toupper:
  6401                           	opt callstack 0
  6402                           
  6403 ;; *************** function _islower *****************
  6404 ;; Defined at:
  6405 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  c               2    0[BANK0 ] int 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  2    0[BANK0 ] int 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6421 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;Total ram usage:        6 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:   10
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_toupper
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text7
  6434  004022                     __ptext7:
  6435                           	opt callstack 0
  6436  004022                     _islower:
  6437                           	opt callstack 14
  6438  004022  0E9F               	movlw	159
  6439  004024  0100               	movlb	0	; () banked
  6440  004026  6F62               	movwf	??_islower& (0+255),b
  6441  004028  0EFF               	movlw	255
  6442  00402A  6F63               	movwf	(??_islower+1)& (0+255),b
  6443  00402C  C060  F064         	movff	islower@c,??_islower+2
  6444  004030  C061  F065         	movff	islower@c+1,??_islower+3
  6445  004034  5162               	movf	??_islower& (0+255),w,b
  6446  004036  2764               	addwf	(??_islower+2)& (0+255),f,b
  6447  004038  5163               	movf	(??_islower+1)& (0+255),w,b
  6448  00403A  2365               	addwfc	(??_islower+3)& (0+255),f,b
  6449  00403C  5165               	movf	(??_islower+3)& (0+255),w,b
  6450  00403E  E10A               	bnz	u2850
  6451  004040  0E1A               	movlw	26
  6452  004042  5D64               	subwf	(??_islower+2)& (0+255),w,b
  6453  004044  A0D8               	btfss	status,0,c
  6454  004046  EF27  F020         	goto	u2851
  6455  00404A  EF2A  F020         	goto	u2850
  6456  00404E                     u2851:
  6457  00404E  0E01               	movlw	1
  6458  004050  EF2B  F020         	goto	u2860
  6459  004054                     u2850:
  6460  004054  0E00               	movlw	0
  6461  004056                     u2860:
  6462  004056  6F60               	movwf	?_islower& (0+255),b
  6463  004058  6B61               	clrf	(?_islower+1)& (0+255),b
  6464  00405A                     
  6465                           ; BSR set to: 0
  6466  00405A  0012               	return		;funcret
  6467  00405C                     __end_of_islower:
  6468                           	opt callstack 0
  6469                           
  6470 ;; *************** function _isupper *****************
  6471 ;; Defined at:
  6472 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  c               2    0[BANK0 ] int 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;		None
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  2    0[BANK0 ] int 
  6479 ;; Registers used:
  6480 ;;		wreg, status,2, status,0
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;Total ram usage:        6 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:   10
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_xtoa
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text8
  6501  00405C                     __ptext8:
  6502                           	opt callstack 0
  6503  00405C                     _isupper:
  6504                           	opt callstack 15
  6505  00405C  0EBF               	movlw	191
  6506  00405E  0100               	movlb	0	; () banked
  6507  004060  6F62               	movwf	??_isupper& (0+255),b
  6508  004062  0EFF               	movlw	255
  6509  004064  6F63               	movwf	(??_isupper+1)& (0+255),b
  6510  004066  C060  F064         	movff	isupper@c,??_isupper+2
  6511  00406A  C061  F065         	movff	isupper@c+1,??_isupper+3
  6512  00406E  5162               	movf	??_isupper& (0+255),w,b
  6513  004070  2764               	addwf	(??_isupper+2)& (0+255),f,b
  6514  004072  5163               	movf	(??_isupper+1)& (0+255),w,b
  6515  004074  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  6516  004076  5165               	movf	(??_isupper+3)& (0+255),w,b
  6517  004078  E10A               	bnz	u2950
  6518  00407A  0E1A               	movlw	26
  6519  00407C  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  6520  00407E  A0D8               	btfss	status,0,c
  6521  004080  EF44  F020         	goto	u2951
  6522  004084  EF47  F020         	goto	u2950
  6523  004088                     u2951:
  6524  004088  0E01               	movlw	1
  6525  00408A  EF48  F020         	goto	u2960
  6526  00408E                     u2950:
  6527  00408E  0E00               	movlw	0
  6528  004090                     u2960:
  6529  004090  6F60               	movwf	?_isupper& (0+255),b
  6530  004092  6B61               	clrf	(?_isupper+1)& (0+255),b
  6531  004094                     
  6532                           ; BSR set to: 0
  6533  004094  0012               	return		;funcret
  6534  004096                     __end_of_isupper:
  6535                           	opt callstack 0
  6536                           
  6537 ;; *************** function _isalpha *****************
  6538 ;; Defined at:
  6539 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  c               2    0[BANK0 ] int 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  2    0[BANK0 ] int 
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6555 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6556 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6557 ;;Total ram usage:        6 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:   10
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_xtoa
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	text9
  6568  003FE4                     __ptext9:
  6569                           	opt callstack 0
  6570  003FE4                     _isalpha:
  6571                           	opt callstack 15
  6572  003FE4  0E9F               	movlw	159
  6573  003FE6  0100               	movlb	0	; () banked
  6574  003FE8  6F62               	movwf	??_isalpha& (0+255),b
  6575  003FEA  0EFF               	movlw	255
  6576  003FEC  6F63               	movwf	(??_isalpha+1)& (0+255),b
  6577  003FEE  0E20               	movlw	32
  6578  003FF0  1160               	iorwf	isalpha@c& (0+255),w,b
  6579  003FF2  6F64               	movwf	(??_isalpha+2)& (0+255),b
  6580  003FF4  0E00               	movlw	0
  6581  003FF6  1161               	iorwf	(isalpha@c+1)& (0+255),w,b
  6582  003FF8  6F65               	movwf	(??_isalpha+3)& (0+255),b
  6583  003FFA  5162               	movf	??_isalpha& (0+255),w,b
  6584  003FFC  2764               	addwf	(??_isalpha+2)& (0+255),f,b
  6585  003FFE  5163               	movf	(??_isalpha+1)& (0+255),w,b
  6586  004000  2365               	addwfc	(??_isalpha+3)& (0+255),f,b
  6587  004002  5165               	movf	(??_isalpha+3)& (0+255),w,b
  6588  004004  E10A               	bnz	u2970
  6589  004006  0E1A               	movlw	26
  6590  004008  5D64               	subwf	(??_isalpha+2)& (0+255),w,b
  6591  00400A  A0D8               	btfss	status,0,c
  6592  00400C  EF0A  F020         	goto	u2971
  6593  004010  EF0D  F020         	goto	u2970
  6594  004014                     u2971:
  6595  004014  0E01               	movlw	1
  6596  004016  EF0E  F020         	goto	u2980
  6597  00401A                     u2970:
  6598  00401A  0E00               	movlw	0
  6599  00401C                     u2980:
  6600  00401C  6F60               	movwf	?_isalpha& (0+255),b
  6601  00401E  6B61               	clrf	(?_isalpha+1)& (0+255),b
  6602  004020                     
  6603                           ; BSR set to: 0
  6604  004020  0012               	return		;funcret
  6605  004022                     __end_of_isalpha:
  6606                           	opt callstack 0
  6607                           
  6608 ;; *************** function _utoa *****************
  6609 ;; Defined at:
  6610 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  6613 ;;		 -> vsnprintf@f(6), 
  6614 ;;  d               8   29[BANK0 ] unsigned long long 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  n               8   49[BANK0 ] unsigned long long 
  6617 ;;  i               2   57[BANK0 ] int 
  6618 ;;  w               2   47[BANK0 ] int 
  6619 ;;  p               2   45[BANK0 ] int 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  2   27[BANK0 ] int 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6629 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6630 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6631 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6632 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6633 ;;Total ram usage:       32 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:   14
  6636 ;; This function calls:
  6637 ;;		___lodiv
  6638 ;;		___lomod
  6639 ;;		_pad
  6640 ;; This function is called by:
  6641 ;;		_vfpfcnvrt
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text10
  6646  00213A                     __ptext10:
  6647                           	opt callstack 0
  6648  00213A                     _utoa:
  6649                           	opt callstack 12
  6650  00213A                     
  6651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6652  00213A  0100               	movlb	0	; () banked
  6653  00213C  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  6654  00213E  EFA3  F010         	goto	u3631
  6655  002142  EFA5  F010         	goto	u3630
  6656  002146                     u3631:
  6657  002146  EFA6  F010         	goto	l3976
  6658  00214A                     u3630:
  6659  00214A                     
  6660                           ; BSR set to: 0
  6661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6662  00214A  93F7               	bcf	_flags& (0+255),1,b
  6663  00214C                     l3976:
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6667  00214C  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  6668  00214E  EFB3  F010         	goto	u3640
  6669  002152  51F6               	movf	(_prec+1)& (0+255),w,b
  6670  002154  E106               	bnz	u3641
  6671  002156  05F5               	decf	_prec& (0+255),w,b
  6672  002158  B0D8               	btfsc	status,0,c
  6673  00215A  EFB1  F010         	goto	u3641
  6674  00215E  EFB3  F010         	goto	u3640
  6675  002162                     u3641:
  6676  002162  EFB9  F010         	goto	l591
  6677  002166                     u3640:
  6678  002166                     
  6679                           ; BSR set to: 0
  6680  002166  0E00               	movlw	0
  6681  002168  6F8E               	movwf	(utoa@p+1)& (0+255),b
  6682  00216A  0E01               	movlw	1
  6683  00216C  6F8D               	movwf	utoa@p& (0+255),b
  6684  00216E  EFBD  F010         	goto	l593
  6685  002172                     l591:
  6686                           
  6687                           ; BSR set to: 0
  6688  002172  C0F5  F08D         	movff	_prec,utoa@p
  6689  002176  C0F6  F08E         	movff	_prec+1,utoa@p+1
  6690  00217A                     l593:
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6694  00217A  C0F3  F08F         	movff	_width,utoa@w
  6695  00217E  C0F4  F090         	movff	_width+1,utoa@w+1
  6696                           
  6697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6698  002182  C07D  F091         	movff	utoa@d,utoa@n
  6699  002186  C07E  F092         	movff	utoa@d+1,utoa@n+1
  6700  00218A  C07F  F093         	movff	utoa@d+2,utoa@n+2
  6701  00218E  C080  F094         	movff	utoa@d+3,utoa@n+3
  6702  002192  C081  F095         	movff	utoa@d+4,utoa@n+4
  6703  002196  C082  F096         	movff	utoa@d+5,utoa@n+5
  6704  00219A  C083  F097         	movff	utoa@d+6,utoa@n+6
  6705  00219E  C084  F098         	movff	utoa@d+7,utoa@n+7
  6706  0021A2                     
  6707                           ; BSR set to: 0
  6708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6709  0021A2  0E00               	movlw	0
  6710  0021A4  6F9A               	movwf	(utoa@i+1)& (0+255),b
  6711  0021A6  0E1F               	movlw	31
  6712  0021A8  6F99               	movwf	utoa@i& (0+255),b
  6713  0021AA                     
  6714                           ; BSR set to: 0
  6715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6716  0021AA  0E00               	movlw	0
  6717  0021AC  0101               	movlb	1	; () banked
  6718  0021AE  6F83               	movwf	(_dbuf+31)& (0+255),b
  6719                           
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6721  0021B0  EF51  F011         	goto	l3994
  6722  0021B4                     l3984:
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6726  0021B4  0799               	decf	utoa@i& (0+255),f,b
  6727  0021B6  A0D8               	btfss	status,0,c
  6728  0021B8  079A               	decf	(utoa@i+1)& (0+255),f,b
  6729  0021BA                     
  6730                           ; BSR set to: 0
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6732  0021BA  0E64               	movlw	low _dbuf
  6733  0021BC  2599               	addwf	utoa@i& (0+255),w,b
  6734  0021BE  6ED9               	movwf	fsr2l,c
  6735  0021C0  0E01               	movlw	high _dbuf
  6736  0021C2  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  6737  0021C4  6EDA               	movwf	fsr2h,c
  6738  0021C6  C091  F060         	movff	utoa@n,___lomod@dividend
  6739  0021CA  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  6740  0021CE  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  6741  0021D2  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  6742  0021D6  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  6743  0021DA  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  6744  0021DE  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  6745  0021E2  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  6746  0021E6  0E0A               	movlw	10
  6747  0021E8  6F68               	movwf	___lomod@divisor& (0+255),b
  6748  0021EA  0E00               	movlw	0
  6749  0021EC  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  6750  0021EE  0E00               	movlw	0
  6751  0021F0  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  6752  0021F2  0E00               	movlw	0
  6753  0021F4  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  6754  0021F6  0E00               	movlw	0
  6755  0021F8  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  6756  0021FA  0E00               	movlw	0
  6757  0021FC  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  6758  0021FE  0E00               	movlw	0
  6759  002200  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  6760  002202  0E00               	movlw	0
  6761  002204  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  6762  002206  ECD4  F01B         	call	___lomod	;wreg free
  6763  00220A  C060  F085         	movff	?___lomod,??_utoa
  6764  00220E  C061  F086         	movff	?___lomod+1,??_utoa+1
  6765  002212  C062  F087         	movff	?___lomod+2,??_utoa+2
  6766  002216  C063  F088         	movff	?___lomod+3,??_utoa+3
  6767  00221A  C064  F089         	movff	?___lomod+4,??_utoa+4
  6768  00221E  C065  F08A         	movff	?___lomod+5,??_utoa+5
  6769  002222  C066  F08B         	movff	?___lomod+6,??_utoa+6
  6770  002226  C067  F08C         	movff	?___lomod+7,??_utoa+7
  6771  00222A  0100               	movlb	0	; () banked
  6772  00222C  5185               	movf	??_utoa& (0+255),w,b
  6773  00222E  0F30               	addlw	48
  6774  002230  6EDF               	movwf	indf2,c
  6775  002232                     
  6776                           ; BSR set to: 0
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6778  002232  078D               	decf	utoa@p& (0+255),f,b
  6779  002234  A0D8               	btfss	status,0,c
  6780  002236  078E               	decf	(utoa@p+1)& (0+255),f,b
  6781  002238                     
  6782                           ; BSR set to: 0
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6784  002238  078F               	decf	utoa@w& (0+255),f,b
  6785  00223A  A0D8               	btfss	status,0,c
  6786  00223C  0790               	decf	(utoa@w+1)& (0+255),f,b
  6787  00223E                     
  6788                           ; BSR set to: 0
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6790  00223E  C091  F060         	movff	utoa@n,___lodiv@dividend
  6791  002242  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  6792  002246  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  6793  00224A  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  6794  00224E  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  6795  002252  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  6796  002256  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  6797  00225A  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  6798  00225E  0E0A               	movlw	10
  6799  002260  6F68               	movwf	___lodiv@divisor& (0+255),b
  6800  002262  0E00               	movlw	0
  6801  002264  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  6802  002266  0E00               	movlw	0
  6803  002268  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  6804  00226A  0E00               	movlw	0
  6805  00226C  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  6806  00226E  0E00               	movlw	0
  6807  002270  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  6808  002272  0E00               	movlw	0
  6809  002274  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  6810  002276  0E00               	movlw	0
  6811  002278  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  6812  00227A  0E00               	movlw	0
  6813  00227C  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  6814  00227E  ECE5  F01A         	call	___lodiv	;wreg free
  6815  002282  C060  F091         	movff	?___lodiv,utoa@n
  6816  002286  C061  F092         	movff	?___lodiv+1,utoa@n+1
  6817  00228A  C062  F093         	movff	?___lodiv+2,utoa@n+2
  6818  00228E  C063  F094         	movff	?___lodiv+3,utoa@n+3
  6819  002292  C064  F095         	movff	?___lodiv+4,utoa@n+4
  6820  002296  C065  F096         	movff	?___lodiv+5,utoa@n+5
  6821  00229A  C066  F097         	movff	?___lodiv+6,utoa@n+6
  6822  00229E  C067  F098         	movff	?___lodiv+7,utoa@n+7
  6823  0022A2                     l3994:
  6824                           
  6825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6826  0022A2  0100               	movlb	0	; () banked
  6827  0022A4  5199               	movf	utoa@i& (0+255),w,b
  6828  0022A6  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  6829  0022A8  B4D8               	btfsc	status,2,c
  6830  0022AA  EF59  F011         	goto	u3651
  6831  0022AE  EF5B  F011         	goto	u3650
  6832  0022B2                     u3651:
  6833  0022B2  EF8B  F011         	goto	l4004
  6834  0022B6                     u3650:
  6835  0022B6                     
  6836                           ; BSR set to: 0
  6837  0022B6  5191               	movf	utoa@n& (0+255),w,b
  6838  0022B8  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  6839  0022BA  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  6840  0022BC  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  6841  0022BE  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  6842  0022C0  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  6843  0022C2  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  6844  0022C4  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  6845  0022C6  A4D8               	btfss	status,2,c
  6846  0022C8  EF68  F011         	goto	u3661
  6847  0022CC  EF6A  F011         	goto	u3660
  6848  0022D0                     u3661:
  6849  0022D0  EFDA  F010         	goto	l3984
  6850  0022D4                     u3660:
  6851  0022D4                     
  6852                           ; BSR set to: 0
  6853  0022D4  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  6854  0022D6  EF77  F011         	goto	u3670
  6855  0022DA  518E               	movf	(utoa@p+1)& (0+255),w,b
  6856  0022DC  E106               	bnz	u3671
  6857  0022DE  058D               	decf	utoa@p& (0+255),w,b
  6858  0022E0  B0D8               	btfsc	status,0,c
  6859  0022E2  EF75  F011         	goto	u3671
  6860  0022E6  EF77  F011         	goto	u3670
  6861  0022EA                     u3671:
  6862  0022EA  EFDA  F010         	goto	l3984
  6863  0022EE                     u3670:
  6864  0022EE                     
  6865                           ; BSR set to: 0
  6866  0022EE  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  6867  0022F0  EF82  F011         	goto	u3681
  6868  0022F4  5190               	movf	(utoa@w+1)& (0+255),w,b
  6869  0022F6  E108               	bnz	u3680
  6870  0022F8  058F               	decf	utoa@w& (0+255),w,b
  6871  0022FA  A0D8               	btfss	status,0,c
  6872  0022FC  EF82  F011         	goto	u3681
  6873  002300  EF84  F011         	goto	u3680
  6874  002304                     u3681:
  6875  002304  EF8B  F011         	goto	l4004
  6876  002308                     u3680:
  6877  002308                     
  6878                           ; BSR set to: 0
  6879  002308  B3F7               	btfsc	_flags& (0+255),1,b
  6880  00230A  EF89  F011         	goto	u3691
  6881  00230E  EF8B  F011         	goto	u3690
  6882  002312                     u3691:
  6883  002312  EFDA  F010         	goto	l3984
  6884  002316                     u3690:
  6885  002316                     l4004:
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6889  002316  C07B  F070         	movff	utoa@fp,pad@fp
  6890  00231A  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  6891  00231E  0E64               	movlw	low _dbuf
  6892  002320  2599               	addwf	utoa@i& (0+255),w,b
  6893  002322  6F72               	movwf	pad@buf& (0+255),b
  6894  002324  0E01               	movlw	high _dbuf
  6895  002326  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  6896  002328  6F73               	movwf	(pad@buf+1)& (0+255),b
  6897  00232A  C08F  F074         	movff	utoa@w,pad@p
  6898  00232E  C090  F075         	movff	utoa@w+1,pad@p+1
  6899  002332  ECA3  F01C         	call	_pad	;wreg free
  6900  002336  C070  F07B         	movff	?_pad,?_utoa
  6901  00233A  C071  F07C         	movff	?_pad+1,?_utoa+1
  6902  00233E  0012               	return		;funcret
  6903  002340                     __end_of_utoa:
  6904                           	opt callstack 0
  6905                           
  6906 ;; *************** function ___lomod *****************
  6907 ;; Defined at:
  6908 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  dividend        8    0[BANK0 ] unsigned long long 
  6911 ;;  divisor         8    8[BANK0 ] unsigned long long 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  counter         1   16[BANK0 ] unsigned char 
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  8    0[BANK0 ] unsigned long long 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6923 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6926 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;Total ram usage:       17 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:   10
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_utoa
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text11
  6938  0037A8                     __ptext11:
  6939                           	opt callstack 0
  6940  0037A8                     ___lomod:
  6941                           	opt callstack 15
  6942  0037A8  0100               	movlb	0	; () banked
  6943  0037AA  5168               	movf	___lomod@divisor& (0+255),w,b
  6944  0037AC  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  6945  0037AE  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  6946  0037B0  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  6947  0037B2  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  6948  0037B4  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  6949  0037B6  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  6950  0037B8  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  6951  0037BA  B4D8               	btfsc	status,2,c
  6952  0037BC  EFE2  F01B         	goto	u3211
  6953  0037C0  EFE4  F01B         	goto	u3210
  6954  0037C4                     u3211:
  6955  0037C4  EF2C  F01C         	goto	l1164
  6956  0037C8                     u3210:
  6957  0037C8                     
  6958                           ; BSR set to: 0
  6959  0037C8  0E01               	movlw	1
  6960  0037CA  6F70               	movwf	___lomod@counter& (0+255),b
  6961  0037CC  EFF2  F01B         	goto	l3768
  6962  0037D0                     l3766:
  6963                           
  6964                           ; BSR set to: 0
  6965  0037D0  90D8               	bcf	status,0,c
  6966  0037D2  3768               	rlcf	___lomod@divisor& (0+255),f,b
  6967  0037D4  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  6968  0037D6  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  6969  0037D8  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  6970  0037DA  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  6971  0037DC  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  6972  0037DE  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  6973  0037E0  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  6974  0037E2  2B70               	incf	___lomod@counter& (0+255),f,b
  6975  0037E4                     l3768:
  6976                           
  6977                           ; BSR set to: 0
  6978  0037E4  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  6979  0037E6  EFF7  F01B         	goto	u3221
  6980  0037EA  EFF9  F01B         	goto	u3220
  6981  0037EE                     u3221:
  6982  0037EE  EFE8  F01B         	goto	l3766
  6983  0037F2                     u3220:
  6984  0037F2                     l3770:
  6985                           
  6986                           ; BSR set to: 0
  6987  0037F2  5168               	movf	___lomod@divisor& (0+255),w,b
  6988  0037F4  5D60               	subwf	___lomod@dividend& (0+255),w,b
  6989  0037F6  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  6990  0037F8  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  6991  0037FA  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  6992  0037FC  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  6993  0037FE  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  6994  003800  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  6995  003802  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  6996  003804  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  6997  003806  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  6998  003808  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  6999  00380A  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7000  00380C  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  7001  00380E  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7002  003810  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  7003  003812  A0D8               	btfss	status,0,c
  7004  003814  EF0E  F01C         	goto	u3231
  7005  003818  EF10  F01C         	goto	u3230
  7006  00381C                     u3231:
  7007  00381C  EF20  F01C         	goto	l3774
  7008  003820                     u3230:
  7009  003820                     
  7010                           ; BSR set to: 0
  7011  003820  5168               	movf	___lomod@divisor& (0+255),w,b
  7012  003822  5F60               	subwf	___lomod@dividend& (0+255),f,b
  7013  003824  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  7014  003826  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  7015  003828  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  7016  00382A  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  7017  00382C  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  7018  00382E  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  7019  003830  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  7020  003832  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  7021  003834  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  7022  003836  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  7023  003838  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7024  00383A  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  7025  00383C  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7026  00383E  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  7027  003840                     l3774:
  7028                           
  7029                           ; BSR set to: 0
  7030  003840  90D8               	bcf	status,0,c
  7031  003842  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  7032  003844  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  7033  003846  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  7034  003848  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  7035  00384A  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  7036  00384C  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  7037  00384E  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  7038  003850  3368               	rrcf	___lomod@divisor& (0+255),f,b
  7039  003852                     
  7040                           ; BSR set to: 0
  7041  003852  2F70               	decfsz	___lomod@counter& (0+255),f,b
  7042  003854  EFF9  F01B         	goto	l3770
  7043  003858                     l1164:
  7044                           
  7045                           ; BSR set to: 0
  7046  003858  C060  F060         	movff	___lomod@dividend,?___lomod
  7047  00385C  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  7048  003860  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  7049  003864  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  7050  003868  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  7051  00386C  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  7052  003870  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  7053  003874  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  7054  003878                     
  7055                           ; BSR set to: 0
  7056  003878  0012               	return		;funcret
  7057  00387A                     __end_of___lomod:
  7058                           	opt callstack 0
  7059                           
  7060 ;; *************** function ___lodiv *****************
  7061 ;; Defined at:
  7062 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  dividend        8    0[BANK0 ] unsigned long long 
  7065 ;;  divisor         8    8[BANK0 ] unsigned long long 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  quotient        8   16[BANK0 ] unsigned long long 
  7068 ;;  counter         1   24[BANK0 ] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  8    0[BANK0 ] unsigned long long 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7078 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;Total ram usage:       25 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:   10
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_utoa
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text12
  7093  0035CA                     __ptext12:
  7094                           	opt callstack 0
  7095  0035CA                     ___lodiv:
  7096                           	opt callstack 15
  7097  0035CA  EE20  F070         	lfsr	2,___lodiv@quotient
  7098  0035CE  0E07               	movlw	7
  7099  0035D0                     u3171:
  7100  0035D0  6ADE               	clrf	postinc2,c
  7101  0035D2  06E8               	decf	wreg,f,c
  7102  0035D4  E2FD               	bc	u3171
  7103  0035D6  0100               	movlb	0	; () banked
  7104  0035D8  5168               	movf	___lodiv@divisor& (0+255),w,b
  7105  0035DA  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  7106  0035DC  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  7107  0035DE  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  7108  0035E0  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  7109  0035E2  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  7110  0035E4  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  7111  0035E6  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  7112  0035E8  B4D8               	btfsc	status,2,c
  7113  0035EA  EFF9  F01A         	goto	u3181
  7114  0035EE  EFFB  F01A         	goto	u3180
  7115  0035F2                     u3181:
  7116  0035F2  EF4D  F01B         	goto	l1154
  7117  0035F6                     u3180:
  7118  0035F6                     
  7119                           ; BSR set to: 0
  7120  0035F6  0E01               	movlw	1
  7121  0035F8  6F78               	movwf	___lodiv@counter& (0+255),b
  7122  0035FA  EF09  F01B         	goto	l3748
  7123  0035FE                     l3746:
  7124                           
  7125                           ; BSR set to: 0
  7126  0035FE  90D8               	bcf	status,0,c
  7127  003600  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  7128  003602  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  7129  003604  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  7130  003606  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  7131  003608  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  7132  00360A  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  7133  00360C  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  7134  00360E  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  7135  003610  2B78               	incf	___lodiv@counter& (0+255),f,b
  7136  003612                     l3748:
  7137                           
  7138                           ; BSR set to: 0
  7139  003612  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  7140  003614  EF0E  F01B         	goto	u3191
  7141  003618  EF10  F01B         	goto	u3190
  7142  00361C                     u3191:
  7143  00361C  EFFF  F01A         	goto	l3746
  7144  003620                     u3190:
  7145  003620                     l3750:
  7146                           
  7147                           ; BSR set to: 0
  7148  003620  90D8               	bcf	status,0,c
  7149  003622  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  7150  003624  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  7151  003626  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  7152  003628  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  7153  00362A  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  7154  00362C  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  7155  00362E  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  7156  003630  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  7157  003632                     
  7158                           ; BSR set to: 0
  7159  003632  5168               	movf	___lodiv@divisor& (0+255),w,b
  7160  003634  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  7161  003636  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7162  003638  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  7163  00363A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7164  00363C  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  7165  00363E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7166  003640  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  7167  003642  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7168  003644  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  7169  003646  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7170  003648  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  7171  00364A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7172  00364C  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  7173  00364E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7174  003650  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  7175  003652  A0D8               	btfss	status,0,c
  7176  003654  EF2E  F01B         	goto	u3201
  7177  003658  EF30  F01B         	goto	u3200
  7178  00365C                     u3201:
  7179  00365C  EF41  F01B         	goto	l3758
  7180  003660                     u3200:
  7181  003660                     
  7182                           ; BSR set to: 0
  7183  003660  5168               	movf	___lodiv@divisor& (0+255),w,b
  7184  003662  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  7185  003664  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7186  003666  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  7187  003668  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7188  00366A  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  7189  00366C  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7190  00366E  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  7191  003670  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7192  003672  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  7193  003674  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7194  003676  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  7195  003678  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7196  00367A  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  7197  00367C  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7198  00367E  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  7199  003680                     
  7200                           ; BSR set to: 0
  7201  003680  8170               	bsf	___lodiv@quotient& (0+255),0,b
  7202  003682                     l3758:
  7203                           
  7204                           ; BSR set to: 0
  7205  003682  90D8               	bcf	status,0,c
  7206  003684  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  7207  003686  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  7208  003688  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  7209  00368A  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  7210  00368C  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  7211  00368E  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  7212  003690  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  7213  003692  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  7214  003694                     
  7215                           ; BSR set to: 0
  7216  003694  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  7217  003696  EF10  F01B         	goto	l3750
  7218  00369A                     l1154:
  7219                           
  7220                           ; BSR set to: 0
  7221  00369A  C070  F060         	movff	___lodiv@quotient,?___lodiv
  7222  00369E  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  7223  0036A2  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  7224  0036A6  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  7225  0036AA  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  7226  0036AE  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  7227  0036B2  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  7228  0036B6  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  7229  0036BA                     
  7230                           ; BSR set to: 0
  7231  0036BA  0012               	return		;funcret
  7232  0036BC                     __end_of___lodiv:
  7233                           	opt callstack 0
  7234                           
  7235 ;; *************** function _strncmp *****************
  7236 ;; Defined at:
  7237 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  7240 ;;		 -> STR_3(9), 
  7241 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  7242 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  7243 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  7244 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  7245 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  7246 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  7247 ;;		 -> STR_6(4), 
  7248 ;;  n               2    4[BANK0 ] unsigned int 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  7251 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  7252 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  7253 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  7254 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  7255 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  7256 ;;		 -> STR_6(4), 
  7257 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  7258 ;;		 -> STR_3(9), 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  2    0[BANK0 ] int 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7268 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;Total ram usage:       11 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:   10
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_vfpfcnvrt
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text13
  7283  0036BC                     __ptext13:
  7284                           	opt callstack 0
  7285  0036BC                     _strncmp:
  7286                           	opt callstack 16
  7287  0036BC  C060  F067         	movff	strncmp@_l,strncmp@l
  7288  0036C0  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  7289  0036C4  C062  F069         	movff	strncmp@_r,strncmp@r
  7290  0036C8  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  7291  0036CC  0100               	movlb	0	; () banked
  7292  0036CE  0764               	decf	strncmp@n& (0+255),f,b
  7293  0036D0  A0D8               	btfss	status,0,c
  7294  0036D2  0765               	decf	(strncmp@n+1)& (0+255),f,b
  7295  0036D4  2964               	incf	strncmp@n& (0+255),w,b
  7296  0036D6  E106               	bnz	u3941
  7297  0036D8  2965               	incf	(strncmp@n+1)& (0+255),w,b
  7298  0036DA  A4D8               	btfss	status,2,c
  7299  0036DC  EF72  F01B         	goto	u3941
  7300  0036E0  EF74  F01B         	goto	u3940
  7301  0036E4                     u3941:
  7302  0036E4  EF81  F01B         	goto	l4124
  7303  0036E8                     u3940:
  7304  0036E8                     
  7305                           ; BSR set to: 0
  7306  0036E8  0E00               	movlw	0
  7307  0036EA  6F61               	movwf	(?_strncmp+1)& (0+255),b
  7308  0036EC  0E00               	movlw	0
  7309  0036EE  6F60               	movwf	?_strncmp& (0+255),b
  7310  0036F0  EFD3  F01B         	goto	l1491
  7311  0036F4                     l4122:
  7312                           
  7313                           ; BSR set to: 0
  7314  0036F4  4B67               	infsnz	strncmp@l& (0+255),f,b
  7315  0036F6  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  7316  0036F8  4B69               	infsnz	strncmp@r& (0+255),f,b
  7317  0036FA  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  7318  0036FC  0764               	decf	strncmp@n& (0+255),f,b
  7319  0036FE  A0D8               	btfss	status,0,c
  7320  003700  0765               	decf	(strncmp@n+1)& (0+255),f,b
  7321  003702                     l4124:
  7322                           
  7323                           ; BSR set to: 0
  7324  003702  C067  FFF6         	movff	strncmp@l,tblptrl
  7325  003706  C068  FFF7         	movff	strncmp@l+1,tblptrh
  7326  00370A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7327  00370A  6AF8               	clrf	tblptru,c
  7328  00370C                     	endif
  7329  00370C                     	if	0	;tblptru may be non-zero
  7330  00370C                     	endif
  7331  00370C  0008               	tblrd		*
  7332  00370E  50F5               	movf	tablat,w,c
  7333  003710  0900               	iorlw	0
  7334  003712  B4D8               	btfsc	status,2,c
  7335  003714  EF8E  F01B         	goto	u3951
  7336  003718  EF90  F01B         	goto	u3950
  7337  00371C                     u3951:
  7338  00371C  EFBF  F01B         	goto	l4132
  7339  003720                     u3950:
  7340  003720                     
  7341                           ; BSR set to: 0
  7342  003720  C069  FFF6         	movff	strncmp@r,tblptrl
  7343  003724  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  7344  003728                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7345  003728  6AF8               	clrf	tblptru,c
  7346  00372A                     	endif
  7347  00372A                     	if	0	;tblptru may be non-zero
  7348  00372A                     	endif
  7349  00372A  0008               	tblrd		*
  7350  00372C  50F5               	movf	tablat,w,c
  7351  00372E  0900               	iorlw	0
  7352  003730  B4D8               	btfsc	status,2,c
  7353  003732  EF9D  F01B         	goto	u3961
  7354  003736  EF9F  F01B         	goto	u3960
  7355  00373A                     u3961:
  7356  00373A  EFBF  F01B         	goto	l4132
  7357  00373E                     u3960:
  7358  00373E                     
  7359                           ; BSR set to: 0
  7360  00373E  5164               	movf	strncmp@n& (0+255),w,b
  7361  003740  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  7362  003742  B4D8               	btfsc	status,2,c
  7363  003744  EFA6  F01B         	goto	u3971
  7364  003748  EFA8  F01B         	goto	u3970
  7365  00374C                     u3971:
  7366  00374C  EFBF  F01B         	goto	l4132
  7367  003750                     u3970:
  7368  003750                     
  7369                           ; BSR set to: 0
  7370  003750  C067  FFF6         	movff	strncmp@l,tblptrl
  7371  003754  C068  FFF7         	movff	strncmp@l+1,tblptrh
  7372  003758                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7373  003758  6AF8               	clrf	tblptru,c
  7374  00375A                     	endif
  7375  00375A                     	if	0	;tblptru may be non-zero
  7376  00375A                     	endif
  7377  00375A  0008               	tblrd		*
  7378  00375C  CFF5 F066          	movff	tablat,??_strncmp
  7379  003760  C069  FFF6         	movff	strncmp@r,tblptrl
  7380  003764  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  7381  003768                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7382  003768  6AF8               	clrf	tblptru,c
  7383  00376A                     	endif
  7384  00376A                     	if	0	;tblptru may be non-zero
  7385  00376A                     	endif
  7386  00376A  0008               	tblrd		*
  7387  00376C  50F5               	movf	tablat,w,c
  7388  00376E  1966               	xorwf	??_strncmp& (0+255),w,b
  7389  003770  B4D8               	btfsc	status,2,c
  7390  003772  EFBD  F01B         	goto	u3981
  7391  003776  EFBF  F01B         	goto	u3980
  7392  00377A                     u3981:
  7393  00377A  EF7A  F01B         	goto	l4122
  7394  00377E                     u3980:
  7395  00377E                     l4132:
  7396                           
  7397                           ; BSR set to: 0
  7398  00377E  C067  FFF6         	movff	strncmp@l,tblptrl
  7399  003782  C068  FFF7         	movff	strncmp@l+1,tblptrh
  7400  003786                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7401  003786  6AF8               	clrf	tblptru,c
  7402  003788                     	endif
  7403  003788                     	if	0	;tblptru may be non-zero
  7404  003788                     	endif
  7405  003788  0008               	tblrd		*
  7406  00378A  CFF5 F066          	movff	tablat,??_strncmp
  7407  00378E  C069  FFF6         	movff	strncmp@r,tblptrl
  7408  003792  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  7409  003796                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7410  003796  6AF8               	clrf	tblptru,c
  7411  003798                     	endif
  7412  003798                     	if	0	;tblptru may be non-zero
  7413  003798                     	endif
  7414  003798  0008               	tblrd		*
  7415  00379A  50F5               	movf	tablat,w,c
  7416  00379C  5D66               	subwf	??_strncmp& (0+255),w,b
  7417  00379E  6F60               	movwf	?_strncmp& (0+255),b
  7418  0037A0  6B61               	clrf	(?_strncmp+1)& (0+255),b
  7419  0037A2  A0D8               	btfss	status,0,c
  7420  0037A4  0761               	decf	(?_strncmp+1)& (0+255),f,b
  7421  0037A6                     l1491:
  7422                           
  7423                           ; BSR set to: 0
  7424  0037A6  0012               	return		;funcret
  7425  0037A8                     __end_of_strncmp:
  7426                           	opt callstack 0
  7427                           
  7428 ;; *************** function _stoa *****************
  7429 ;; Defined at:
  7430 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  7433 ;;		 -> vsnprintf@f(6), 
  7434 ;;  s               2   11[BANK0 ] PTR unsigned char 
  7435 ;;		 -> ?_snprintf(2), 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  nuls            7   14[BANK0 ] unsigned char [7]
  7438 ;;  l               2   29[BANK0 ] int 
  7439 ;;  p               2   27[BANK0 ] int 
  7440 ;;  cp              2   25[BANK0 ] PTR unsigned char 
  7441 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7442 ;;  w               2   23[BANK0 ] int 
  7443 ;;  i               2   21[BANK0 ] int 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  2    9[BANK0 ] int 
  7446 ;; Registers used:
  7447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7453 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7454 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;Total ram usage:       22 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:   12
  7460 ;; This function calls:
  7461 ;;		_fputc
  7462 ;;		_strlen
  7463 ;; This function is called by:
  7464 ;;		_vfpfcnvrt
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text14
  7469  002884                     __ptext14:
  7470                           	opt callstack 0
  7471  002884                     _stoa:
  7472                           	opt callstack 14
  7473  002884                     
  7474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7475  002884  EE20  F03A         	lfsr	2,stoa@F1152
  7476  002888  EE10  F06E         	lfsr	1,stoa@nuls
  7477  00288C  0E06               	movlw	6
  7478  00288E                     u3541:
  7479  00288E  CFDB FFE3          	movff	plusw2,plusw1
  7480  002892  06E8               	decf	wreg,f,c
  7481  002894  E2FC               	bc	u3541
  7482  002896                     
  7483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7484  002896  C06B  F079         	movff	stoa@s,stoa@cp
  7485  00289A  C06C  F07A         	movff	stoa@s+1,stoa@cp+1
  7486  00289E                     
  7487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7488  00289E  0100               	movlb	0	; () banked
  7489  0028A0  5179               	movf	stoa@cp& (0+255),w,b
  7490  0028A2  117A               	iorwf	(stoa@cp+1)& (0+255),w,b
  7491  0028A4  A4D8               	btfss	status,2,c
  7492  0028A6  EF57  F014         	goto	u3551
  7493  0028AA  EF59  F014         	goto	u3550
  7494  0028AE                     u3551:
  7495  0028AE  EF5D  F014         	goto	l3938
  7496  0028B2                     u3550:
  7497  0028B2                     
  7498                           ; BSR set to: 0
  7499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7500  0028B2  0E6E               	movlw	low stoa@nuls
  7501  0028B4  6F79               	movwf	stoa@cp& (0+255),b
  7502  0028B6  0E00               	movlw	high stoa@nuls
  7503  0028B8  6F7A               	movwf	(stoa@cp+1)& (0+255),b
  7504  0028BA                     l3938:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7508  0028BA  C079  F060         	movff	stoa@cp,strlen@s
  7509  0028BE  C07A  F061         	movff	stoa@cp+1,strlen@s+1
  7510  0028C2  EC4B  F020         	call	_strlen	;wreg free
  7511  0028C6  C060  F07D         	movff	?_strlen,stoa@l
  7512  0028CA  C061  F07E         	movff	?_strlen+1,stoa@l+1
  7513  0028CE                     
  7514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7515  0028CE  C0F5  F07B         	movff	_prec,stoa@p
  7516  0028D2  C0F6  F07C         	movff	_prec+1,stoa@p+1
  7517  0028D6                     
  7518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7519  0028D6  0100               	movlb	0	; () banked
  7520  0028D8  BF7C               	btfsc	(stoa@p+1)& (0+255),7,b
  7521  0028DA  EF71  F014         	goto	u3561
  7522  0028DE  EF73  F014         	goto	u3560
  7523  0028E2                     u3561:
  7524  0028E2  EF88  F014         	goto	l572
  7525  0028E6                     u3560:
  7526  0028E6                     
  7527                           ; BSR set to: 0
  7528  0028E6  517D               	movf	stoa@l& (0+255),w,b
  7529  0028E8  5D7B               	subwf	stoa@p& (0+255),w,b
  7530  0028EA  517C               	movf	(stoa@p+1)& (0+255),w,b
  7531  0028EC  0A80               	xorlw	128
  7532  0028EE  6F6D               	movwf	??_stoa& (0+255),b
  7533  0028F0  517E               	movf	(stoa@l+1)& (0+255),w,b
  7534  0028F2  0A80               	xorlw	128
  7535  0028F4  596D               	subwfb	??_stoa& (0+255),w,b
  7536  0028F6  A0D8               	btfss	status,0,c
  7537  0028F8  EF80  F014         	goto	u3571
  7538  0028FC  EF82  F014         	goto	u3570
  7539  002900                     u3571:
  7540  002900  EF84  F014         	goto	l570
  7541  002904                     u3570:
  7542  002904  EF88  F014         	goto	l572
  7543  002908                     l570:
  7544                           
  7545                           ; BSR set to: 0
  7546  002908  C07B  F07D         	movff	stoa@p,stoa@l
  7547  00290C  C07C  F07E         	movff	stoa@p+1,stoa@l+1
  7548  002910                     l572:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7552  002910  C07D  F07B         	movff	stoa@l,stoa@p
  7553  002914  C07E  F07C         	movff	stoa@l+1,stoa@p+1
  7554                           
  7555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7556  002918  C0F3  F077         	movff	_width,stoa@w
  7557  00291C  C0F4  F078         	movff	_width+1,stoa@w+1
  7558                           
  7559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7560  002920  B1F7               	btfsc	_flags& (0+255),0,b
  7561  002922  EF95  F014         	goto	u3581
  7562  002926  EF97  F014         	goto	u3580
  7563  00292A                     u3581:
  7564  00292A  EFB5  F014         	goto	l3954
  7565  00292E                     u3580:
  7566  00292E  EFA6  F014         	goto	l3952
  7567  002932                     l3948:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7571  002932  0E00               	movlw	0
  7572  002934  6F61               	movwf	(fputc@c+1)& (0+255),b
  7573  002936  0E20               	movlw	32
  7574  002938  6F60               	movwf	fputc@c& (0+255),b
  7575  00293A  C069  F062         	movff	stoa@fp,fputc@fp
  7576  00293E  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  7577  002942  EC3D  F01C         	call	_fputc	;wreg free
  7578  002946                     
  7579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7580  002946  0100               	movlb	0	; () banked
  7581  002948  4B7D               	infsnz	stoa@l& (0+255),f,b
  7582  00294A  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  7583  00294C                     l3952:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7587  00294C  5177               	movf	stoa@w& (0+255),w,b
  7588  00294E  5D7D               	subwf	stoa@l& (0+255),w,b
  7589  002950  517E               	movf	(stoa@l+1)& (0+255),w,b
  7590  002952  0A80               	xorlw	128
  7591  002954  6F6D               	movwf	??_stoa& (0+255),b
  7592  002956  5178               	movf	(stoa@w+1)& (0+255),w,b
  7593  002958  0A80               	xorlw	128
  7594  00295A  596D               	subwfb	??_stoa& (0+255),w,b
  7595  00295C  A0D8               	btfss	status,0,c
  7596  00295E  EFB3  F014         	goto	u3591
  7597  002962  EFB5  F014         	goto	u3590
  7598  002966                     u3591:
  7599  002966  EF99  F014         	goto	l3948
  7600  00296A                     u3590:
  7601  00296A                     l3954:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7605  00296A  0E00               	movlw	0
  7606  00296C  6F76               	movwf	(stoa@i+1)& (0+255),b
  7607  00296E  0E00               	movlw	0
  7608  002970  6F75               	movwf	stoa@i& (0+255),b
  7609                           
  7610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7611  002972  EFCF  F014         	goto	l3962
  7612  002976                     l3956:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7616  002976  C079  FFD9         	movff	stoa@cp,fsr2l
  7617  00297A  C07A  FFDA         	movff	stoa@cp+1,fsr2h
  7618  00297E  50DF               	movf	indf2,w,c
  7619  002980  6F6D               	movwf	??_stoa& (0+255),b
  7620  002982  516D               	movf	??_stoa& (0+255),w,b
  7621  002984  6F60               	movwf	fputc@c& (0+255),b
  7622  002986  6B61               	clrf	(fputc@c+1)& (0+255),b
  7623  002988  C069  F062         	movff	stoa@fp,fputc@fp
  7624  00298C  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  7625  002990  EC3D  F01C         	call	_fputc	;wreg free
  7626  002994                     
  7627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7628  002994  0100               	movlb	0	; () banked
  7629  002996  4B79               	infsnz	stoa@cp& (0+255),f,b
  7630  002998  2B7A               	incf	(stoa@cp+1)& (0+255),f,b
  7631  00299A                     
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7634  00299A  4B75               	infsnz	stoa@i& (0+255),f,b
  7635  00299C  2B76               	incf	(stoa@i+1)& (0+255),f,b
  7636  00299E                     l3962:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7640  00299E  517B               	movf	stoa@p& (0+255),w,b
  7641  0029A0  5D75               	subwf	stoa@i& (0+255),w,b
  7642  0029A2  5176               	movf	(stoa@i+1)& (0+255),w,b
  7643  0029A4  0A80               	xorlw	128
  7644  0029A6  6F6D               	movwf	??_stoa& (0+255),b
  7645  0029A8  517C               	movf	(stoa@p+1)& (0+255),w,b
  7646  0029AA  0A80               	xorlw	128
  7647  0029AC  596D               	subwfb	??_stoa& (0+255),w,b
  7648  0029AE  A0D8               	btfss	status,0,c
  7649  0029B0  EFDC  F014         	goto	u3601
  7650  0029B4  EFDE  F014         	goto	u3600
  7651  0029B8                     u3601:
  7652  0029B8  EFBB  F014         	goto	l3956
  7653  0029BC                     u3600:
  7654  0029BC                     
  7655                           ; BSR set to: 0
  7656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7657  0029BC  A1F7               	btfss	_flags& (0+255),0,b
  7658  0029BE  EFE3  F014         	goto	u3611
  7659  0029C2  EFE5  F014         	goto	u3610
  7660  0029C6                     u3611:
  7661  0029C6  EF03  F015         	goto	l582
  7662  0029CA                     u3610:
  7663  0029CA  EFF4  F014         	goto	l3970
  7664  0029CE                     l3966:
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7668  0029CE  0E00               	movlw	0
  7669  0029D0  6F61               	movwf	(fputc@c+1)& (0+255),b
  7670  0029D2  0E20               	movlw	32
  7671  0029D4  6F60               	movwf	fputc@c& (0+255),b
  7672  0029D6  C069  F062         	movff	stoa@fp,fputc@fp
  7673  0029DA  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  7674  0029DE  EC3D  F01C         	call	_fputc	;wreg free
  7675  0029E2                     
  7676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7677  0029E2  0100               	movlb	0	; () banked
  7678  0029E4  4B7D               	infsnz	stoa@l& (0+255),f,b
  7679  0029E6  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  7680  0029E8                     l3970:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7684  0029E8  5177               	movf	stoa@w& (0+255),w,b
  7685  0029EA  5D7D               	subwf	stoa@l& (0+255),w,b
  7686  0029EC  517E               	movf	(stoa@l+1)& (0+255),w,b
  7687  0029EE  0A80               	xorlw	128
  7688  0029F0  6F6D               	movwf	??_stoa& (0+255),b
  7689  0029F2  5178               	movf	(stoa@w+1)& (0+255),w,b
  7690  0029F4  0A80               	xorlw	128
  7691  0029F6  596D               	subwfb	??_stoa& (0+255),w,b
  7692  0029F8  A0D8               	btfss	status,0,c
  7693  0029FA  EF01  F015         	goto	u3621
  7694  0029FE  EF03  F015         	goto	u3620
  7695  002A02                     u3621:
  7696  002A02  EFE7  F014         	goto	l3966
  7697  002A06                     u3620:
  7698  002A06                     l582:
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7702  002A06  C07D  F069         	movff	stoa@l,?_stoa
  7703  002A0A  C07E  F06A         	movff	stoa@l+1,?_stoa+1
  7704  002A0E                     
  7705                           ; BSR set to: 0
  7706  002A0E  0012               	return		;funcret
  7707  002A10                     __end_of_stoa:
  7708                           	opt callstack 0
  7709                           
  7710 ;; *************** function _otoa *****************
  7711 ;; Defined at:
  7712 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  7715 ;;		 -> vsnprintf@f(6), 
  7716 ;;  d               8   29[BANK0 ] unsigned long long 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  n               8   51[BANK0 ] unsigned long long 
  7719 ;;  i               2   59[BANK0 ] int 
  7720 ;;  w               2   49[BANK0 ] int 
  7721 ;;  t               2   47[BANK0 ] int 
  7722 ;;  p               2   45[BANK0 ] int 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  2   27[BANK0 ] int 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7732 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7735 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7736 ;;Total ram usage:       34 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:   14
  7739 ;; This function calls:
  7740 ;;		_pad
  7741 ;; This function is called by:
  7742 ;;		_vfpfcnvrt
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text15
  7747  002340                     __ptext15:
  7748                           	opt callstack 0
  7749  002340                     _otoa:
  7750                           	opt callstack 12
  7751  002340                     
  7752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7753  002340  0100               	movlb	0	; () banked
  7754  002342  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  7755  002344  EFA6  F011         	goto	u3441
  7756  002348  EFA8  F011         	goto	u3440
  7757  00234C                     u3441:
  7758  00234C  EFA9  F011         	goto	l3886
  7759  002350                     u3440:
  7760  002350                     
  7761                           ; BSR set to: 0
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7763  002350  93F7               	bcf	_flags& (0+255),1,b
  7764  002352                     l3886:
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7768  002352  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  7769  002354  EFB6  F011         	goto	u3450
  7770  002358  51F6               	movf	(_prec+1)& (0+255),w,b
  7771  00235A  E106               	bnz	u3451
  7772  00235C  05F5               	decf	_prec& (0+255),w,b
  7773  00235E  B0D8               	btfsc	status,0,c
  7774  002360  EFB4  F011         	goto	u3451
  7775  002364  EFB6  F011         	goto	u3450
  7776  002368                     u3451:
  7777  002368  EFBC  F011         	goto	l552
  7778  00236C                     u3450:
  7779  00236C                     
  7780                           ; BSR set to: 0
  7781  00236C  0E00               	movlw	0
  7782  00236E  6F8E               	movwf	(otoa@p+1)& (0+255),b
  7783  002370  0E01               	movlw	1
  7784  002372  6F8D               	movwf	otoa@p& (0+255),b
  7785  002374  EFC0  F011         	goto	l554
  7786  002378                     l552:
  7787                           
  7788                           ; BSR set to: 0
  7789  002378  C0F5  F08D         	movff	_prec,otoa@p
  7790  00237C  C0F6  F08E         	movff	_prec+1,otoa@p+1
  7791  002380                     l554:
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7795  002380  C0F3  F091         	movff	_width,otoa@w
  7796  002384  C0F4  F092         	movff	_width+1,otoa@w+1
  7797                           
  7798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7799  002388  C07D  F093         	movff	otoa@d,otoa@n
  7800  00238C  C07E  F094         	movff	otoa@d+1,otoa@n+1
  7801  002390  C07F  F095         	movff	otoa@d+2,otoa@n+2
  7802  002394  C080  F096         	movff	otoa@d+3,otoa@n+3
  7803  002398  C081  F097         	movff	otoa@d+4,otoa@n+4
  7804  00239C  C082  F098         	movff	otoa@d+5,otoa@n+5
  7805  0023A0  C083  F099         	movff	otoa@d+6,otoa@n+6
  7806  0023A4  C084  F09A         	movff	otoa@d+7,otoa@n+7
  7807  0023A8                     
  7808                           ; BSR set to: 0
  7809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7810  0023A8  0E00               	movlw	0
  7811  0023AA  6F9C               	movwf	(otoa@i+1)& (0+255),b
  7812  0023AC  0E1F               	movlw	31
  7813  0023AE  6F9B               	movwf	otoa@i& (0+255),b
  7814  0023B0                     
  7815                           ; BSR set to: 0
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7817  0023B0  0E00               	movlw	0
  7818  0023B2  0101               	movlb	1	; () banked
  7819  0023B4  6F83               	movwf	(_dbuf+31)& (0+255),b
  7820  0023B6                     
  7821                           ; BSR set to: 1
  7822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7823  0023B6  0E00               	movlw	0
  7824  0023B8  0100               	movlb	0	; () banked
  7825  0023BA  6F90               	movwf	(otoa@t+1)& (0+255),b
  7826  0023BC  0E00               	movlw	0
  7827  0023BE  6F8F               	movwf	otoa@t& (0+255),b
  7828                           
  7829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7830  0023C0  EF27  F012         	goto	l3908
  7831  0023C4                     l3896:
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7835  0023C4  079B               	decf	otoa@i& (0+255),f,b
  7836  0023C6  A0D8               	btfss	status,0,c
  7837  0023C8  079C               	decf	(otoa@i+1)& (0+255),f,b
  7838  0023CA                     
  7839                           ; BSR set to: 0
  7840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7841  0023CA  0E07               	movlw	7
  7842  0023CC  1593               	andwf	otoa@n& (0+255),w,b
  7843  0023CE  6F8F               	movwf	otoa@t& (0+255),b
  7844  0023D0  6B90               	clrf	(otoa@t+1)& (0+255),b
  7845  0023D2                     
  7846                           ; BSR set to: 0
  7847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7848  0023D2  0E64               	movlw	low _dbuf
  7849  0023D4  259B               	addwf	otoa@i& (0+255),w,b
  7850  0023D6  6ED9               	movwf	fsr2l,c
  7851  0023D8  0E01               	movlw	high _dbuf
  7852  0023DA  219C               	addwfc	(otoa@i+1)& (0+255),w,b
  7853  0023DC  6EDA               	movwf	fsr2h,c
  7854  0023DE  518F               	movf	otoa@t& (0+255),w,b
  7855  0023E0  0F30               	addlw	48
  7856  0023E2  6EDF               	movwf	indf2,c
  7857  0023E4                     
  7858                           ; BSR set to: 0
  7859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7860  0023E4  078D               	decf	otoa@p& (0+255),f,b
  7861  0023E6  A0D8               	btfss	status,0,c
  7862  0023E8  078E               	decf	(otoa@p+1)& (0+255),f,b
  7863  0023EA                     
  7864                           ; BSR set to: 0
  7865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7866  0023EA  0791               	decf	otoa@w& (0+255),f,b
  7867  0023EC  A0D8               	btfss	status,0,c
  7868  0023EE  0792               	decf	(otoa@w+1)& (0+255),f,b
  7869  0023F0                     
  7870                           ; BSR set to: 0
  7871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7872  0023F0  C093  F085         	movff	otoa@n,??_otoa
  7873  0023F4  C094  F086         	movff	otoa@n+1,??_otoa+1
  7874  0023F8  C095  F087         	movff	otoa@n+2,??_otoa+2
  7875  0023FC  C096  F088         	movff	otoa@n+3,??_otoa+3
  7876  002400  C097  F089         	movff	otoa@n+4,??_otoa+4
  7877  002404  C098  F08A         	movff	otoa@n+5,??_otoa+5
  7878  002408  C099  F08B         	movff	otoa@n+6,??_otoa+6
  7879  00240C  C09A  F08C         	movff	otoa@n+7,??_otoa+7
  7880  002410  0E04               	movlw	4
  7881  002412  EF14  F012         	goto	u3460
  7882  002416                     u3465:
  7883  002416  90D8               	bcf	status,0,c
  7884  002418  338C               	rrcf	(??_otoa+7)& (0+255),f,b
  7885  00241A  338B               	rrcf	(??_otoa+6)& (0+255),f,b
  7886  00241C  338A               	rrcf	(??_otoa+5)& (0+255),f,b
  7887  00241E  3389               	rrcf	(??_otoa+4)& (0+255),f,b
  7888  002420  3388               	rrcf	(??_otoa+3)& (0+255),f,b
  7889  002422  3387               	rrcf	(??_otoa+2)& (0+255),f,b
  7890  002424  3386               	rrcf	(??_otoa+1)& (0+255),f,b
  7891  002426  3385               	rrcf	??_otoa& (0+255),f,b
  7892  002428                     u3460:
  7893  002428  2EE8               	decfsz	wreg,f,c
  7894  00242A  EF0B  F012         	goto	u3465
  7895  00242E  C085  F093         	movff	??_otoa,otoa@n
  7896  002432  C086  F094         	movff	??_otoa+1,otoa@n+1
  7897  002436  C087  F095         	movff	??_otoa+2,otoa@n+2
  7898  00243A  C088  F096         	movff	??_otoa+3,otoa@n+3
  7899  00243E  C089  F097         	movff	??_otoa+4,otoa@n+4
  7900  002442  C08A  F098         	movff	??_otoa+5,otoa@n+5
  7901  002446  C08B  F099         	movff	??_otoa+6,otoa@n+6
  7902  00244A  C08C  F09A         	movff	??_otoa+7,otoa@n+7
  7903  00244E                     l3908:
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7907  00244E  BF9C               	btfsc	(otoa@i+1)& (0+255),7,b
  7908  002450  EF32  F012         	goto	u3471
  7909  002454  519C               	movf	(otoa@i+1)& (0+255),w,b
  7910  002456  E108               	bnz	u3470
  7911  002458  059B               	decf	otoa@i& (0+255),w,b
  7912  00245A  A0D8               	btfss	status,0,c
  7913  00245C  EF32  F012         	goto	u3471
  7914  002460  EF34  F012         	goto	u3470
  7915  002464                     u3471:
  7916  002464  EF64  F012         	goto	l561
  7917  002468                     u3470:
  7918  002468                     
  7919                           ; BSR set to: 0
  7920  002468  5193               	movf	otoa@n& (0+255),w,b
  7921  00246A  1194               	iorwf	(otoa@n+1)& (0+255),w,b
  7922  00246C  1195               	iorwf	(otoa@n+2)& (0+255),w,b
  7923  00246E  1196               	iorwf	(otoa@n+3)& (0+255),w,b
  7924  002470  1197               	iorwf	(otoa@n+4)& (0+255),w,b
  7925  002472  1198               	iorwf	(otoa@n+5)& (0+255),w,b
  7926  002474  1199               	iorwf	(otoa@n+6)& (0+255),w,b
  7927  002476  119A               	iorwf	(otoa@n+7)& (0+255),w,b
  7928  002478  A4D8               	btfss	status,2,c
  7929  00247A  EF41  F012         	goto	u3481
  7930  00247E  EF43  F012         	goto	u3480
  7931  002482                     u3481:
  7932  002482  EFE2  F011         	goto	l3896
  7933  002486                     u3480:
  7934  002486                     
  7935                           ; BSR set to: 0
  7936  002486  BF8E               	btfsc	(otoa@p+1)& (0+255),7,b
  7937  002488  EF50  F012         	goto	u3490
  7938  00248C  518E               	movf	(otoa@p+1)& (0+255),w,b
  7939  00248E  E106               	bnz	u3491
  7940  002490  058D               	decf	otoa@p& (0+255),w,b
  7941  002492  B0D8               	btfsc	status,0,c
  7942  002494  EF4E  F012         	goto	u3491
  7943  002498  EF50  F012         	goto	u3490
  7944  00249C                     u3491:
  7945  00249C  EFE2  F011         	goto	l3896
  7946  0024A0                     u3490:
  7947  0024A0                     
  7948                           ; BSR set to: 0
  7949  0024A0  BF92               	btfsc	(otoa@w+1)& (0+255),7,b
  7950  0024A2  EF5B  F012         	goto	u3501
  7951  0024A6  5192               	movf	(otoa@w+1)& (0+255),w,b
  7952  0024A8  E108               	bnz	u3500
  7953  0024AA  0591               	decf	otoa@w& (0+255),w,b
  7954  0024AC  A0D8               	btfss	status,0,c
  7955  0024AE  EF5B  F012         	goto	u3501
  7956  0024B2  EF5D  F012         	goto	u3500
  7957  0024B6                     u3501:
  7958  0024B6  EF64  F012         	goto	l561
  7959  0024BA                     u3500:
  7960  0024BA                     
  7961                           ; BSR set to: 0
  7962  0024BA  B3F7               	btfsc	_flags& (0+255),1,b
  7963  0024BC  EF62  F012         	goto	u3511
  7964  0024C0  EF64  F012         	goto	u3510
  7965  0024C4                     u3511:
  7966  0024C4  EFE2  F011         	goto	l3896
  7967  0024C8                     u3510:
  7968  0024C8                     l561:
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7972  0024C8  A9F7               	btfss	_flags& (0+255),4,b
  7973  0024CA  EF69  F012         	goto	u3521
  7974  0024CE  EF6B  F012         	goto	u3520
  7975  0024D2                     u3521:
  7976  0024D2  EF82  F012         	goto	l3926
  7977  0024D6                     u3520:
  7978  0024D6                     
  7979                           ; BSR set to: 0
  7980  0024D6  518F               	movf	otoa@t& (0+255),w,b
  7981  0024D8  1190               	iorwf	(otoa@t+1)& (0+255),w,b
  7982  0024DA  B4D8               	btfsc	status,2,c
  7983  0024DC  EF72  F012         	goto	u3531
  7984  0024E0  EF74  F012         	goto	u3530
  7985  0024E4                     u3531:
  7986  0024E4  EF82  F012         	goto	l3926
  7987  0024E8                     u3530:
  7988  0024E8                     
  7989                           ; BSR set to: 0
  7990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7991  0024E8  079B               	decf	otoa@i& (0+255),f,b
  7992  0024EA  A0D8               	btfss	status,0,c
  7993  0024EC  079C               	decf	(otoa@i+1)& (0+255),f,b
  7994  0024EE                     
  7995                           ; BSR set to: 0
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7997  0024EE  0E64               	movlw	low _dbuf
  7998  0024F0  259B               	addwf	otoa@i& (0+255),w,b
  7999  0024F2  6ED9               	movwf	fsr2l,c
  8000  0024F4  0E01               	movlw	high _dbuf
  8001  0024F6  219C               	addwfc	(otoa@i+1)& (0+255),w,b
  8002  0024F8  6EDA               	movwf	fsr2h,c
  8003  0024FA  0E30               	movlw	48
  8004  0024FC  6EDF               	movwf	indf2,c
  8005  0024FE                     
  8006                           ; BSR set to: 0
  8007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8008  0024FE  0791               	decf	otoa@w& (0+255),f,b
  8009  002500  A0D8               	btfss	status,0,c
  8010  002502  0792               	decf	(otoa@w+1)& (0+255),f,b
  8011  002504                     l3926:
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8015  002504  C07B  F070         	movff	otoa@fp,pad@fp
  8016  002508  C07C  F071         	movff	otoa@fp+1,pad@fp+1
  8017  00250C  0E64               	movlw	low _dbuf
  8018  00250E  259B               	addwf	otoa@i& (0+255),w,b
  8019  002510  6F72               	movwf	pad@buf& (0+255),b
  8020  002512  0E01               	movlw	high _dbuf
  8021  002514  219C               	addwfc	(otoa@i+1)& (0+255),w,b
  8022  002516  6F73               	movwf	(pad@buf+1)& (0+255),b
  8023  002518  C091  F074         	movff	otoa@w,pad@p
  8024  00251C  C092  F075         	movff	otoa@w+1,pad@p+1
  8025  002520  ECA3  F01C         	call	_pad	;wreg free
  8026  002524  C070  F07B         	movff	?_pad,?_otoa
  8027  002528  C071  F07C         	movff	?_pad+1,?_otoa+1
  8028  00252C  0012               	return		;funcret
  8029  00252E                     __end_of_otoa:
  8030                           	opt callstack 0
  8031                           
  8032 ;; *************** function _dtoa *****************
  8033 ;; Defined at:
  8034 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  8037 ;;		 -> vsnprintf@f(6), 
  8038 ;;  d               8   29[BANK0 ] long long 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  n               8   53[BANK0 ] long long 
  8041 ;;  i               2   61[BANK0 ] int 
  8042 ;;  s               2   51[BANK0 ] int 
  8043 ;;  w               2   49[BANK0 ] int 
  8044 ;;  p               2   47[BANK0 ] int 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  2   27[BANK0 ] int 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8054 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8056 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8058 ;;Total ram usage:       36 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:   14
  8061 ;; This function calls:
  8062 ;;		___aodiv
  8063 ;;		___aomod
  8064 ;;		_abs
  8065 ;;		_pad
  8066 ;; This function is called by:
  8067 ;;		_vfpfcnvrt
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text16
  8072  001B7C                     __ptext16:
  8073                           	opt callstack 0
  8074  001B7C                     _dtoa:
  8075                           	opt callstack 12
  8076  001B7C                     
  8077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8078  001B7C  C07D  F095         	movff	dtoa@d,dtoa@n
  8079  001B80  C07E  F096         	movff	dtoa@d+1,dtoa@n+1
  8080  001B84  C07F  F097         	movff	dtoa@d+2,dtoa@n+2
  8081  001B88  C080  F098         	movff	dtoa@d+3,dtoa@n+3
  8082  001B8C  C081  F099         	movff	dtoa@d+4,dtoa@n+4
  8083  001B90  C082  F09A         	movff	dtoa@d+5,dtoa@n+5
  8084  001B94  C083  F09B         	movff	dtoa@d+6,dtoa@n+6
  8085  001B98  C084  F09C         	movff	dtoa@d+7,dtoa@n+7
  8086  001B9C                     
  8087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8088  001B9C  0100               	movlb	0	; () banked
  8089  001B9E  BF9C               	btfsc	(dtoa@n+7)& (0+255),7,b
  8090  001BA0  EFD4  F00D         	goto	u3291
  8091  001BA4  EFD7  F00D         	goto	u3290
  8092  001BA8                     u3291:
  8093  001BA8  0E01               	movlw	1
  8094  001BAA  EFD8  F00D         	goto	u3300
  8095  001BAE                     u3290:
  8096  001BAE  0E00               	movlw	0
  8097  001BB0                     u3300:
  8098  001BB0  6F93               	movwf	dtoa@s& (0+255),b
  8099  001BB2  6B94               	clrf	(dtoa@s+1)& (0+255),b
  8100                           
  8101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8102  001BB4  5193               	movf	dtoa@s& (0+255),w,b
  8103  001BB6  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  8104  001BB8  B4D8               	btfsc	status,2,c
  8105  001BBA  EFE1  F00D         	goto	u3311
  8106  001BBE  EFE3  F00D         	goto	u3310
  8107  001BC2                     u3311:
  8108  001BC2  EFF3  F00D         	goto	l3826
  8109  001BC6                     u3310:
  8110  001BC6                     
  8111                           ; BSR set to: 0
  8112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8113  001BC6  1F9C               	comf	(dtoa@n+7)& (0+255),f,b
  8114  001BC8  1F9B               	comf	(dtoa@n+6)& (0+255),f,b
  8115  001BCA  1F9A               	comf	(dtoa@n+5)& (0+255),f,b
  8116  001BCC  1F99               	comf	(dtoa@n+4)& (0+255),f,b
  8117  001BCE  1F98               	comf	(dtoa@n+3)& (0+255),f,b
  8118  001BD0  1F97               	comf	(dtoa@n+2)& (0+255),f,b
  8119  001BD2  1F96               	comf	(dtoa@n+1)& (0+255),f,b
  8120  001BD4  6D95               	negf	dtoa@n& (0+255),b
  8121  001BD6  0E00               	movlw	0
  8122  001BD8  2396               	addwfc	(dtoa@n+1)& (0+255),f,b
  8123  001BDA  2397               	addwfc	(dtoa@n+2)& (0+255),f,b
  8124  001BDC  2398               	addwfc	(dtoa@n+3)& (0+255),f,b
  8125  001BDE  2399               	addwfc	(dtoa@n+4)& (0+255),f,b
  8126  001BE0  239A               	addwfc	(dtoa@n+5)& (0+255),f,b
  8127  001BE2  239B               	addwfc	(dtoa@n+6)& (0+255),f,b
  8128  001BE4  239C               	addwfc	(dtoa@n+7)& (0+255),f,b
  8129  001BE6                     l3826:
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8133  001BE6  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  8134  001BE8  EFF8  F00D         	goto	u3321
  8135  001BEC  EFFA  F00D         	goto	u3320
  8136  001BF0                     u3321:
  8137  001BF0  EFFB  F00D         	goto	l3830
  8138  001BF4                     u3320:
  8139  001BF4                     
  8140                           ; BSR set to: 0
  8141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8142  001BF4  93F7               	bcf	_flags& (0+255),1,b
  8143  001BF6                     l3830:
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8147  001BF6  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  8148  001BF8  EF08  F00E         	goto	u3330
  8149  001BFC  51F6               	movf	(_prec+1)& (0+255),w,b
  8150  001BFE  E106               	bnz	u3331
  8151  001C00  05F5               	decf	_prec& (0+255),w,b
  8152  001C02  B0D8               	btfsc	status,0,c
  8153  001C04  EF06  F00E         	goto	u3331
  8154  001C08  EF08  F00E         	goto	u3330
  8155  001C0C                     u3331:
  8156  001C0C  EF0E  F00E         	goto	l527
  8157  001C10                     u3330:
  8158  001C10                     
  8159                           ; BSR set to: 0
  8160  001C10  0E00               	movlw	0
  8161  001C12  6F90               	movwf	(dtoa@p+1)& (0+255),b
  8162  001C14  0E01               	movlw	1
  8163  001C16  6F8F               	movwf	dtoa@p& (0+255),b
  8164  001C18  EF12  F00E         	goto	l529
  8165  001C1C                     l527:
  8166                           
  8167                           ; BSR set to: 0
  8168  001C1C  C0F5  F08F         	movff	_prec,dtoa@p
  8169  001C20  C0F6  F090         	movff	_prec+1,dtoa@p+1
  8170  001C24                     l529:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8174  001C24  C0F3  F091         	movff	_width,dtoa@w
  8175  001C28  C0F4  F092         	movff	_width+1,dtoa@w+1
  8176  001C2C                     
  8177                           ; BSR set to: 0
  8178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8179  001C2C  5193               	movf	dtoa@s& (0+255),w,b
  8180  001C2E  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  8181  001C30  A4D8               	btfss	status,2,c
  8182  001C32  EF1D  F00E         	goto	u3341
  8183  001C36  EF1F  F00E         	goto	u3340
  8184  001C3A                     u3341:
  8185  001C3A  EF26  F00E         	goto	l3838
  8186  001C3E                     u3340:
  8187  001C3E                     
  8188                           ; BSR set to: 0
  8189  001C3E  A5F7               	btfss	_flags& (0+255),2,b
  8190  001C40  EF24  F00E         	goto	u3351
  8191  001C44  EF26  F00E         	goto	u3350
  8192  001C48                     u3351:
  8193  001C48  EF29  F00E         	goto	l3840
  8194  001C4C                     u3350:
  8195  001C4C                     l3838:
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8199  001C4C  0791               	decf	dtoa@w& (0+255),f,b
  8200  001C4E  A0D8               	btfss	status,0,c
  8201  001C50  0792               	decf	(dtoa@w+1)& (0+255),f,b
  8202  001C52                     l3840:
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8206  001C52  0E00               	movlw	0
  8207  001C54  6F9E               	movwf	(dtoa@i+1)& (0+255),b
  8208  001C56  0E1F               	movlw	31
  8209  001C58  6F9D               	movwf	dtoa@i& (0+255),b
  8210  001C5A                     
  8211                           ; BSR set to: 0
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8213  001C5A  0E00               	movlw	0
  8214  001C5C  0101               	movlb	1	; () banked
  8215  001C5E  6F83               	movwf	(_dbuf+31)& (0+255),b
  8216                           
  8217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8218  001C60  EFAF  F00E         	goto	l3854
  8219  001C64                     l3844:
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8223  001C64  079D               	decf	dtoa@i& (0+255),f,b
  8224  001C66  A0D8               	btfss	status,0,c
  8225  001C68  079E               	decf	(dtoa@i+1)& (0+255),f,b
  8226  001C6A                     
  8227                           ; BSR set to: 0
  8228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8229  001C6A  0E64               	movlw	low _dbuf
  8230  001C6C  259D               	addwf	dtoa@i& (0+255),w,b
  8231  001C6E  6ED9               	movwf	fsr2l,c
  8232  001C70  0E01               	movlw	high _dbuf
  8233  001C72  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  8234  001C74  6EDA               	movwf	fsr2h,c
  8235  001C76  C095  F060         	movff	dtoa@n,___aomod@dividend
  8236  001C7A  C096  F061         	movff	dtoa@n+1,___aomod@dividend+1
  8237  001C7E  C097  F062         	movff	dtoa@n+2,___aomod@dividend+2
  8238  001C82  C098  F063         	movff	dtoa@n+3,___aomod@dividend+3
  8239  001C86  C099  F064         	movff	dtoa@n+4,___aomod@dividend+4
  8240  001C8A  C09A  F065         	movff	dtoa@n+5,___aomod@dividend+5
  8241  001C8E  C09B  F066         	movff	dtoa@n+6,___aomod@dividend+6
  8242  001C92  C09C  F067         	movff	dtoa@n+7,___aomod@dividend+7
  8243  001C96  0E0A               	movlw	10
  8244  001C98  6F68               	movwf	___aomod@divisor& (0+255),b
  8245  001C9A  0E00               	movlw	0
  8246  001C9C  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  8247  001C9E  0E00               	movlw	0
  8248  001CA0  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  8249  001CA2  0E00               	movlw	0
  8250  001CA4  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  8251  001CA6  0E00               	movlw	0
  8252  001CA8  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  8253  001CAA  0E00               	movlw	0
  8254  001CAC  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  8255  001CAE  0E00               	movlw	0
  8256  001CB0  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  8257  001CB2  0E00               	movlw	0
  8258  001CB4  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  8259  001CB6  EC4B  F017         	call	___aomod	;wreg free
  8260  001CBA  C060  F085         	movff	?___aomod,??_dtoa
  8261  001CBE  C061  F086         	movff	?___aomod+1,??_dtoa+1
  8262  001CC2  C062  F087         	movff	?___aomod+2,??_dtoa+2
  8263  001CC6  C063  F088         	movff	?___aomod+3,??_dtoa+3
  8264  001CCA  C064  F089         	movff	?___aomod+4,??_dtoa+4
  8265  001CCE  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  8266  001CD2  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  8267  001CD6  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  8268  001CDA  C085  F072         	movff	??_dtoa,abs@a
  8269  001CDE  C087  F073         	movff	??_dtoa+2,abs@a+1
  8270  001CE2  EC90  F01F         	call	_abs	;wreg free
  8271  001CE6  0100               	movlb	0	; () banked
  8272  001CE8  5172               	movf	?_abs& (0+255),w,b
  8273  001CEA  0F30               	addlw	48
  8274  001CEC  6EDF               	movwf	indf2,c
  8275  001CEE                     
  8276                           ; BSR set to: 0
  8277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8278  001CEE  078F               	decf	dtoa@p& (0+255),f,b
  8279  001CF0  A0D8               	btfss	status,0,c
  8280  001CF2  0790               	decf	(dtoa@p+1)& (0+255),f,b
  8281  001CF4                     
  8282                           ; BSR set to: 0
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8284  001CF4  0791               	decf	dtoa@w& (0+255),f,b
  8285  001CF6  A0D8               	btfss	status,0,c
  8286  001CF8  0792               	decf	(dtoa@w+1)& (0+255),f,b
  8287  001CFA                     
  8288                           ; BSR set to: 0
  8289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8290  001CFA  C095  F060         	movff	dtoa@n,___aodiv@dividend
  8291  001CFE  C096  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  8292  001D02  C097  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  8293  001D06  C098  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  8294  001D0A  C099  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  8295  001D0E  C09A  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  8296  001D12  C09B  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  8297  001D16  C09C  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  8298  001D1A  0E0A               	movlw	10
  8299  001D1C  6F68               	movwf	___aodiv@divisor& (0+255),b
  8300  001D1E  0E00               	movlw	0
  8301  001D20  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  8302  001D22  0E00               	movlw	0
  8303  001D24  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  8304  001D26  0E00               	movlw	0
  8305  001D28  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  8306  001D2A  0E00               	movlw	0
  8307  001D2C  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  8308  001D2E  0E00               	movlw	0
  8309  001D30  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  8310  001D32  0E00               	movlw	0
  8311  001D34  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  8312  001D36  0E00               	movlw	0
  8313  001D38  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  8314  001D3A  EC08  F015         	call	___aodiv	;wreg free
  8315  001D3E  C060  F095         	movff	?___aodiv,dtoa@n
  8316  001D42  C061  F096         	movff	?___aodiv+1,dtoa@n+1
  8317  001D46  C062  F097         	movff	?___aodiv+2,dtoa@n+2
  8318  001D4A  C063  F098         	movff	?___aodiv+3,dtoa@n+3
  8319  001D4E  C064  F099         	movff	?___aodiv+4,dtoa@n+4
  8320  001D52  C065  F09A         	movff	?___aodiv+5,dtoa@n+5
  8321  001D56  C066  F09B         	movff	?___aodiv+6,dtoa@n+6
  8322  001D5A  C067  F09C         	movff	?___aodiv+7,dtoa@n+7
  8323  001D5E                     l3854:
  8324                           
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8326  001D5E  0100               	movlb	0	; () banked
  8327  001D60  BF9E               	btfsc	(dtoa@i+1)& (0+255),7,b
  8328  001D62  EFBB  F00E         	goto	u3361
  8329  001D66  519E               	movf	(dtoa@i+1)& (0+255),w,b
  8330  001D68  E108               	bnz	u3360
  8331  001D6A  059D               	decf	dtoa@i& (0+255),w,b
  8332  001D6C  A0D8               	btfss	status,0,c
  8333  001D6E  EFBB  F00E         	goto	u3361
  8334  001D72  EFBD  F00E         	goto	u3360
  8335  001D76                     u3361:
  8336  001D76  EFED  F00E         	goto	l3864
  8337  001D7A                     u3360:
  8338  001D7A                     
  8339                           ; BSR set to: 0
  8340  001D7A  5195               	movf	dtoa@n& (0+255),w,b
  8341  001D7C  1196               	iorwf	(dtoa@n+1)& (0+255),w,b
  8342  001D7E  1197               	iorwf	(dtoa@n+2)& (0+255),w,b
  8343  001D80  1198               	iorwf	(dtoa@n+3)& (0+255),w,b
  8344  001D82  1199               	iorwf	(dtoa@n+4)& (0+255),w,b
  8345  001D84  119A               	iorwf	(dtoa@n+5)& (0+255),w,b
  8346  001D86  119B               	iorwf	(dtoa@n+6)& (0+255),w,b
  8347  001D88  119C               	iorwf	(dtoa@n+7)& (0+255),w,b
  8348  001D8A  A4D8               	btfss	status,2,c
  8349  001D8C  EFCA  F00E         	goto	u3371
  8350  001D90  EFCC  F00E         	goto	u3370
  8351  001D94                     u3371:
  8352  001D94  EF32  F00E         	goto	l3844
  8353  001D98                     u3370:
  8354  001D98                     
  8355                           ; BSR set to: 0
  8356  001D98  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  8357  001D9A  EFD9  F00E         	goto	u3380
  8358  001D9E  5190               	movf	(dtoa@p+1)& (0+255),w,b
  8359  001DA0  E106               	bnz	u3381
  8360  001DA2  058F               	decf	dtoa@p& (0+255),w,b
  8361  001DA4  B0D8               	btfsc	status,0,c
  8362  001DA6  EFD7  F00E         	goto	u3381
  8363  001DAA  EFD9  F00E         	goto	u3380
  8364  001DAE                     u3381:
  8365  001DAE  EF32  F00E         	goto	l3844
  8366  001DB2                     u3380:
  8367  001DB2                     
  8368                           ; BSR set to: 0
  8369  001DB2  BF92               	btfsc	(dtoa@w+1)& (0+255),7,b
  8370  001DB4  EFE4  F00E         	goto	u3391
  8371  001DB8  5192               	movf	(dtoa@w+1)& (0+255),w,b
  8372  001DBA  E108               	bnz	u3390
  8373  001DBC  0591               	decf	dtoa@w& (0+255),w,b
  8374  001DBE  A0D8               	btfss	status,0,c
  8375  001DC0  EFE4  F00E         	goto	u3391
  8376  001DC4  EFE6  F00E         	goto	u3390
  8377  001DC8                     u3391:
  8378  001DC8  EFED  F00E         	goto	l3864
  8379  001DCC                     u3390:
  8380  001DCC                     
  8381                           ; BSR set to: 0
  8382  001DCC  B3F7               	btfsc	_flags& (0+255),1,b
  8383  001DCE  EFEB  F00E         	goto	u3401
  8384  001DD2  EFED  F00E         	goto	u3400
  8385  001DD6                     u3401:
  8386  001DD6  EF32  F00E         	goto	l3844
  8387  001DDA                     u3400:
  8388  001DDA                     l3864:
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8392  001DDA  5193               	movf	dtoa@s& (0+255),w,b
  8393  001DDC  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  8394  001DDE  A4D8               	btfss	status,2,c
  8395  001DE0  EFF4  F00E         	goto	u3411
  8396  001DE4  EFF6  F00E         	goto	u3410
  8397  001DE8                     u3411:
  8398  001DE8  EFFD  F00E         	goto	l3868
  8399  001DEC                     u3410:
  8400  001DEC                     
  8401                           ; BSR set to: 0
  8402  001DEC  A5F7               	btfss	_flags& (0+255),2,b
  8403  001DEE  EFFB  F00E         	goto	u3421
  8404  001DF2  EFFD  F00E         	goto	u3420
  8405  001DF6                     u3421:
  8406  001DF6  EF1B  F00F         	goto	l3878
  8407  001DFA                     u3420:
  8408  001DFA                     l3868:
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8412  001DFA  079D               	decf	dtoa@i& (0+255),f,b
  8413  001DFC  A0D8               	btfss	status,0,c
  8414  001DFE  079E               	decf	(dtoa@i+1)& (0+255),f,b
  8415  001E00                     
  8416                           ; BSR set to: 0
  8417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8418  001E00  5193               	movf	dtoa@s& (0+255),w,b
  8419  001E02  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  8420  001E04  A4D8               	btfss	status,2,c
  8421  001E06  EF07  F00F         	goto	u3431
  8422  001E0A  EF09  F00F         	goto	u3430
  8423  001E0E                     u3431:
  8424  001E0E  EF0F  F00F         	goto	l3874
  8425  001E12                     u3430:
  8426  001E12                     
  8427                           ; BSR set to: 0
  8428  001E12  0E00               	movlw	0
  8429  001E14  6F8E               	movwf	(_dtoa$1358+1)& (0+255),b
  8430  001E16  0E2B               	movlw	43
  8431  001E18  6F8D               	movwf	_dtoa$1358& (0+255),b
  8432  001E1A  EF13  F00F         	goto	l3876
  8433  001E1E                     l3874:
  8434                           
  8435                           ; BSR set to: 0
  8436  001E1E  0E00               	movlw	0
  8437  001E20  6F8E               	movwf	(_dtoa$1358+1)& (0+255),b
  8438  001E22  0E2D               	movlw	45
  8439  001E24  6F8D               	movwf	_dtoa$1358& (0+255),b
  8440  001E26                     l3876:
  8441                           
  8442                           ; BSR set to: 0
  8443  001E26  0E64               	movlw	low _dbuf
  8444  001E28  259D               	addwf	dtoa@i& (0+255),w,b
  8445  001E2A  6ED9               	movwf	fsr2l,c
  8446  001E2C  0E01               	movlw	high _dbuf
  8447  001E2E  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  8448  001E30  6EDA               	movwf	fsr2h,c
  8449  001E32  C08D  FFDF         	movff	_dtoa$1358,indf2
  8450  001E36                     l3878:
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8454  001E36  C07B  F070         	movff	dtoa@fp,pad@fp
  8455  001E3A  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  8456  001E3E  0E64               	movlw	low _dbuf
  8457  001E40  259D               	addwf	dtoa@i& (0+255),w,b
  8458  001E42  6F72               	movwf	pad@buf& (0+255),b
  8459  001E44  0E01               	movlw	high _dbuf
  8460  001E46  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  8461  001E48  6F73               	movwf	(pad@buf+1)& (0+255),b
  8462  001E4A  C091  F074         	movff	dtoa@w,pad@p
  8463  001E4E  C092  F075         	movff	dtoa@w+1,pad@p+1
  8464  001E52  ECA3  F01C         	call	_pad	;wreg free
  8465  001E56  C070  F07B         	movff	?_pad,?_dtoa
  8466  001E5A  C071  F07C         	movff	?_pad+1,?_dtoa+1
  8467  001E5E  0012               	return		;funcret
  8468  001E60                     __end_of_dtoa:
  8469                           	opt callstack 0
  8470                           
  8471 ;; *************** function _abs *****************
  8472 ;; Defined at:
  8473 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8474 ;; Parameters:    Size  Location     Type
  8475 ;;  a               2   18[BANK0 ] int 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;		None
  8478 ;; Return value:  Size  Location     Type
  8479 ;;                  2   18[BANK0 ] int 
  8480 ;; Registers used:
  8481 ;;		wreg, status,2, status,0
  8482 ;; Tracked objects:
  8483 ;;		On entry : 0/0
  8484 ;;		On exit  : 0/0
  8485 ;;		Unchanged: 0/0
  8486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8490 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8491 ;;Total ram usage:        4 bytes
  8492 ;; Hardware stack levels used:    1
  8493 ;; Hardware stack levels required when called:   10
  8494 ;; This function calls:
  8495 ;;		Nothing
  8496 ;; This function is called by:
  8497 ;;		_dtoa
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           	psect	text17
  8502  003F20                     __ptext17:
  8503                           	opt callstack 0
  8504  003F20                     _abs:
  8505                           	opt callstack 15
  8506  003F20  0100               	movlb	0	; () banked
  8507  003F22  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  8508  003F24  EF9E  F01F         	goto	u2940
  8509  003F28  5173               	movf	(abs@a+1)& (0+255),w,b
  8510  003F2A  E106               	bnz	u2941
  8511  003F2C  0572               	decf	abs@a& (0+255),w,b
  8512  003F2E  B0D8               	btfsc	status,0,c
  8513  003F30  EF9C  F01F         	goto	u2941
  8514  003F34  EF9E  F01F         	goto	u2940
  8515  003F38                     u2941:
  8516  003F38  EFAC  F01F         	goto	l1391
  8517  003F3C                     u2940:
  8518  003F3C                     
  8519                           ; BSR set to: 0
  8520  003F3C  C072  F074         	movff	abs@a,??_abs
  8521  003F40  C073  F075         	movff	abs@a+1,??_abs+1
  8522  003F44  1F74               	comf	??_abs& (0+255),f,b
  8523  003F46  1F75               	comf	(??_abs+1)& (0+255),f,b
  8524  003F48  4B74               	infsnz	??_abs& (0+255),f,b
  8525  003F4A  2B75               	incf	(??_abs+1)& (0+255),f,b
  8526  003F4C  C074  F072         	movff	??_abs,?_abs
  8527  003F50  C075  F073         	movff	??_abs+1,?_abs+1
  8528  003F54  EFB0  F01F         	goto	l1394
  8529  003F58                     l1391:
  8530                           
  8531                           ; BSR set to: 0
  8532  003F58  C072  F072         	movff	abs@a,?_abs
  8533  003F5C  C073  F073         	movff	abs@a+1,?_abs+1
  8534  003F60                     l1394:
  8535                           
  8536                           ; BSR set to: 0
  8537  003F60  0012               	return		;funcret
  8538  003F62                     __end_of_abs:
  8539                           	opt callstack 0
  8540                           
  8541 ;; *************** function ___aomod *****************
  8542 ;; Defined at:
  8543 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;  dividend        8    0[BANK0 ] long long 
  8546 ;;  divisor         8    8[BANK0 ] long long 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;  sign            1   17[BANK0 ] unsigned char 
  8549 ;;  counter         1   16[BANK0 ] unsigned char 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  8    0[BANK0 ] long long 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8559 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8560 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8562 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;Total ram usage:       18 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:   10
  8566 ;; This function calls:
  8567 ;;		Nothing
  8568 ;; This function is called by:
  8569 ;;		_dtoa
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text18
  8574  002E96                     __ptext18:
  8575                           	opt callstack 0
  8576  002E96                     ___aomod:
  8577                           	opt callstack 15
  8578  002E96  0E00               	movlw	0
  8579  002E98  0100               	movlb	0	; () banked
  8580  002E9A  6F71               	movwf	___aomod@sign& (0+255),b
  8581  002E9C                     
  8582                           ; BSR set to: 0
  8583  002E9C  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  8584  002E9E  EF55  F017         	goto	u3110
  8585  002EA2  EF53  F017         	goto	u3111
  8586  002EA6                     u3111:
  8587  002EA6  EF67  F017         	goto	l3712
  8588  002EAA                     u3110:
  8589  002EAA                     
  8590                           ; BSR set to: 0
  8591  002EAA  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  8592  002EAC  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  8593  002EAE  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  8594  002EB0  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  8595  002EB2  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  8596  002EB4  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  8597  002EB6  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  8598  002EB8  6D60               	negf	___aomod@dividend& (0+255),b
  8599  002EBA  0E00               	movlw	0
  8600  002EBC  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  8601  002EBE  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  8602  002EC0  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  8603  002EC2  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  8604  002EC4  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  8605  002EC6  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  8606  002EC8  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  8607  002ECA                     
  8608                           ; BSR set to: 0
  8609  002ECA  0E01               	movlw	1
  8610  002ECC  6F71               	movwf	___aomod@sign& (0+255),b
  8611  002ECE                     l3712:
  8612                           
  8613                           ; BSR set to: 0
  8614  002ECE  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  8615  002ED0  EF6E  F017         	goto	u3120
  8616  002ED4  EF6C  F017         	goto	u3121
  8617  002ED8                     u3121:
  8618  002ED8  EF7E  F017         	goto	l3716
  8619  002EDC                     u3120:
  8620  002EDC                     
  8621                           ; BSR set to: 0
  8622  002EDC  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  8623  002EDE  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  8624  002EE0  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  8625  002EE2  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  8626  002EE4  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  8627  002EE6  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  8628  002EE8  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  8629  002EEA  6D68               	negf	___aomod@divisor& (0+255),b
  8630  002EEC  0E00               	movlw	0
  8631  002EEE  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  8632  002EF0  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  8633  002EF2  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  8634  002EF4  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  8635  002EF6  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  8636  002EF8  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  8637  002EFA  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  8638  002EFC                     l3716:
  8639                           
  8640                           ; BSR set to: 0
  8641  002EFC  5168               	movf	___aomod@divisor& (0+255),w,b
  8642  002EFE  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  8643  002F00  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  8644  002F02  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  8645  002F04  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  8646  002F06  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  8647  002F08  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  8648  002F0A  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  8649  002F0C  B4D8               	btfsc	status,2,c
  8650  002F0E  EF8B  F017         	goto	u3131
  8651  002F12  EF8D  F017         	goto	u3130
  8652  002F16                     u3131:
  8653  002F16  EFD5  F017         	goto	l3732
  8654  002F1A                     u3130:
  8655  002F1A                     
  8656                           ; BSR set to: 0
  8657  002F1A  0E01               	movlw	1
  8658  002F1C  6F70               	movwf	___aomod@counter& (0+255),b
  8659  002F1E  EF9B  F017         	goto	l3722
  8660  002F22                     l3720:
  8661                           
  8662                           ; BSR set to: 0
  8663  002F22  90D8               	bcf	status,0,c
  8664  002F24  3768               	rlcf	___aomod@divisor& (0+255),f,b
  8665  002F26  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  8666  002F28  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  8667  002F2A  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  8668  002F2C  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  8669  002F2E  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  8670  002F30  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  8671  002F32  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  8672  002F34  2B70               	incf	___aomod@counter& (0+255),f,b
  8673  002F36                     l3722:
  8674                           
  8675                           ; BSR set to: 0
  8676  002F36  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  8677  002F38  EFA0  F017         	goto	u3141
  8678  002F3C  EFA2  F017         	goto	u3140
  8679  002F40                     u3141:
  8680  002F40  EF91  F017         	goto	l3720
  8681  002F44                     u3140:
  8682  002F44                     l3724:
  8683                           
  8684                           ; BSR set to: 0
  8685  002F44  5168               	movf	___aomod@divisor& (0+255),w,b
  8686  002F46  5D60               	subwf	___aomod@dividend& (0+255),w,b
  8687  002F48  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  8688  002F4A  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  8689  002F4C  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  8690  002F4E  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  8691  002F50  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  8692  002F52  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  8693  002F54  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  8694  002F56  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  8695  002F58  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  8696  002F5A  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  8697  002F5C  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  8698  002F5E  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  8699  002F60  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  8700  002F62  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  8701  002F64  A0D8               	btfss	status,0,c
  8702  002F66  EFB7  F017         	goto	u3151
  8703  002F6A  EFB9  F017         	goto	u3150
  8704  002F6E                     u3151:
  8705  002F6E  EFC9  F017         	goto	l3728
  8706  002F72                     u3150:
  8707  002F72                     
  8708                           ; BSR set to: 0
  8709  002F72  5168               	movf	___aomod@divisor& (0+255),w,b
  8710  002F74  5F60               	subwf	___aomod@dividend& (0+255),f,b
  8711  002F76  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  8712  002F78  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  8713  002F7A  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  8714  002F7C  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  8715  002F7E  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  8716  002F80  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  8717  002F82  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  8718  002F84  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  8719  002F86  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  8720  002F88  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  8721  002F8A  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  8722  002F8C  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  8723  002F8E  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  8724  002F90  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  8725  002F92                     l3728:
  8726                           
  8727                           ; BSR set to: 0
  8728  002F92  90D8               	bcf	status,0,c
  8729  002F94  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  8730  002F96  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  8731  002F98  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  8732  002F9A  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  8733  002F9C  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  8734  002F9E  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  8735  002FA0  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  8736  002FA2  3368               	rrcf	___aomod@divisor& (0+255),f,b
  8737  002FA4                     
  8738                           ; BSR set to: 0
  8739  002FA4  2F70               	decfsz	___aomod@counter& (0+255),f,b
  8740  002FA6  EFA2  F017         	goto	l3724
  8741  002FAA                     l3732:
  8742                           
  8743                           ; BSR set to: 0
  8744  002FAA  5171               	movf	___aomod@sign& (0+255),w,b
  8745  002FAC  B4D8               	btfsc	status,2,c
  8746  002FAE  EFDB  F017         	goto	u3161
  8747  002FB2  EFDD  F017         	goto	u3160
  8748  002FB6                     u3161:
  8749  002FB6  EFED  F017         	goto	l3736
  8750  002FBA                     u3160:
  8751  002FBA                     
  8752                           ; BSR set to: 0
  8753  002FBA  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  8754  002FBC  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  8755  002FBE  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  8756  002FC0  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  8757  002FC2  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  8758  002FC4  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  8759  002FC6  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  8760  002FC8  6D60               	negf	___aomod@dividend& (0+255),b
  8761  002FCA  0E00               	movlw	0
  8762  002FCC  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  8763  002FCE  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  8764  002FD0  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  8765  002FD2  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  8766  002FD4  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  8767  002FD6  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  8768  002FD8  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  8769  002FDA                     l3736:
  8770                           
  8771                           ; BSR set to: 0
  8772  002FDA  C060  F060         	movff	___aomod@dividend,?___aomod
  8773  002FDE  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  8774  002FE2  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  8775  002FE6  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  8776  002FEA  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  8777  002FEE  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  8778  002FF2  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  8779  002FF6  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  8780  002FFA                     
  8781                           ; BSR set to: 0
  8782  002FFA  0012               	return		;funcret
  8783  002FFC                     __end_of___aomod:
  8784                           	opt callstack 0
  8785                           
  8786 ;; *************** function ___aodiv *****************
  8787 ;; Defined at:
  8788 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  dividend        8    0[BANK0 ] long long 
  8791 ;;  divisor         8    8[BANK0 ] long long 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  quotient        8   18[BANK0 ] long long 
  8794 ;;  sign            1   17[BANK0 ] unsigned char 
  8795 ;;  counter         1   16[BANK0 ] unsigned char 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  8    0[BANK0 ] long long 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8805 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;Total ram usage:       26 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:   10
  8812 ;; This function calls:
  8813 ;;		Nothing
  8814 ;; This function is called by:
  8815 ;;		_dtoa
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text19
  8820  002A10                     __ptext19:
  8821                           	opt callstack 0
  8822  002A10                     ___aodiv:
  8823                           	opt callstack 15
  8824  002A10  0E00               	movlw	0
  8825  002A12  0100               	movlb	0	; () banked
  8826  002A14  6F71               	movwf	___aodiv@sign& (0+255),b
  8827  002A16                     
  8828                           ; BSR set to: 0
  8829  002A16  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  8830  002A18  EF12  F015         	goto	u3040
  8831  002A1C  EF10  F015         	goto	u3041
  8832  002A20                     u3041:
  8833  002A20  EF24  F015         	goto	l3668
  8834  002A24                     u3040:
  8835  002A24                     
  8836                           ; BSR set to: 0
  8837  002A24  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  8838  002A26  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  8839  002A28  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  8840  002A2A  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  8841  002A2C  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  8842  002A2E  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  8843  002A30  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  8844  002A32  6D68               	negf	___aodiv@divisor& (0+255),b
  8845  002A34  0E00               	movlw	0
  8846  002A36  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  8847  002A38  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  8848  002A3A  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  8849  002A3C  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  8850  002A3E  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  8851  002A40  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  8852  002A42  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  8853  002A44                     
  8854                           ; BSR set to: 0
  8855  002A44  0E01               	movlw	1
  8856  002A46  6F71               	movwf	___aodiv@sign& (0+255),b
  8857  002A48                     l3668:
  8858                           
  8859                           ; BSR set to: 0
  8860  002A48  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  8861  002A4A  EF2B  F015         	goto	u3050
  8862  002A4E  EF29  F015         	goto	u3051
  8863  002A52                     u3051:
  8864  002A52  EF3D  F015         	goto	l3674
  8865  002A56                     u3050:
  8866  002A56                     
  8867                           ; BSR set to: 0
  8868  002A56  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  8869  002A58  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  8870  002A5A  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  8871  002A5C  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  8872  002A5E  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  8873  002A60  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  8874  002A62  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  8875  002A64  6D60               	negf	___aodiv@dividend& (0+255),b
  8876  002A66  0E00               	movlw	0
  8877  002A68  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  8878  002A6A  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  8879  002A6C  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  8880  002A6E  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  8881  002A70  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  8882  002A72  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  8883  002A74  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  8884  002A76                     
  8885                           ; BSR set to: 0
  8886  002A76  0E01               	movlw	1
  8887  002A78  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  8888  002A7A                     l3674:
  8889                           
  8890                           ; BSR set to: 0
  8891  002A7A  EE20  F072         	lfsr	2,___aodiv@quotient
  8892  002A7E  0E07               	movlw	7
  8893  002A80                     u3061:
  8894  002A80  6ADE               	clrf	postinc2,c
  8895  002A82  06E8               	decf	wreg,f,c
  8896  002A84  E2FD               	bc	u3061
  8897  002A86                     
  8898                           ; BSR set to: 0
  8899  002A86  5168               	movf	___aodiv@divisor& (0+255),w,b
  8900  002A88  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  8901  002A8A  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  8902  002A8C  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  8903  002A8E  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  8904  002A90  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  8905  002A92  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  8906  002A94  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  8907  002A96  B4D8               	btfsc	status,2,c
  8908  002A98  EF50  F015         	goto	u3071
  8909  002A9C  EF52  F015         	goto	u3070
  8910  002AA0                     u3071:
  8911  002AA0  EFA4  F015         	goto	l3696
  8912  002AA4                     u3070:
  8913  002AA4                     
  8914                           ; BSR set to: 0
  8915  002AA4  0E01               	movlw	1
  8916  002AA6  6F70               	movwf	___aodiv@counter& (0+255),b
  8917  002AA8  EF60  F015         	goto	l3682
  8918  002AAC                     l3680:
  8919                           
  8920                           ; BSR set to: 0
  8921  002AAC  90D8               	bcf	status,0,c
  8922  002AAE  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  8923  002AB0  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  8924  002AB2  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  8925  002AB4  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  8926  002AB6  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  8927  002AB8  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  8928  002ABA  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  8929  002ABC  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  8930  002ABE  2B70               	incf	___aodiv@counter& (0+255),f,b
  8931  002AC0                     l3682:
  8932                           
  8933                           ; BSR set to: 0
  8934  002AC0  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  8935  002AC2  EF65  F015         	goto	u3081
  8936  002AC6  EF67  F015         	goto	u3080
  8937  002ACA                     u3081:
  8938  002ACA  EF56  F015         	goto	l3680
  8939  002ACE                     u3080:
  8940  002ACE                     l3684:
  8941                           
  8942                           ; BSR set to: 0
  8943  002ACE  90D8               	bcf	status,0,c
  8944  002AD0  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  8945  002AD2  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  8946  002AD4  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  8947  002AD6  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  8948  002AD8  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  8949  002ADA  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  8950  002ADC  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  8951  002ADE  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  8952  002AE0                     
  8953                           ; BSR set to: 0
  8954  002AE0  5168               	movf	___aodiv@divisor& (0+255),w,b
  8955  002AE2  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  8956  002AE4  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8957  002AE6  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  8958  002AE8  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8959  002AEA  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  8960  002AEC  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8961  002AEE  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  8962  002AF0  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8963  002AF2  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  8964  002AF4  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8965  002AF6  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  8966  002AF8  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8967  002AFA  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  8968  002AFC  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8969  002AFE  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  8970  002B00  A0D8               	btfss	status,0,c
  8971  002B02  EF85  F015         	goto	u3091
  8972  002B06  EF87  F015         	goto	u3090
  8973  002B0A                     u3091:
  8974  002B0A  EF98  F015         	goto	l3692
  8975  002B0E                     u3090:
  8976  002B0E                     
  8977                           ; BSR set to: 0
  8978  002B0E  5168               	movf	___aodiv@divisor& (0+255),w,b
  8979  002B10  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  8980  002B12  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8981  002B14  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  8982  002B16  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8983  002B18  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  8984  002B1A  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8985  002B1C  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  8986  002B1E  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8987  002B20  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  8988  002B22  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8989  002B24  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  8990  002B26  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8991  002B28  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  8992  002B2A  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8993  002B2C  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  8994  002B2E                     
  8995                           ; BSR set to: 0
  8996  002B2E  8172               	bsf	___aodiv@quotient& (0+255),0,b
  8997  002B30                     l3692:
  8998                           
  8999                           ; BSR set to: 0
  9000  002B30  90D8               	bcf	status,0,c
  9001  002B32  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  9002  002B34  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  9003  002B36  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  9004  002B38  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  9005  002B3A  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  9006  002B3C  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  9007  002B3E  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  9008  002B40  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  9009  002B42                     
  9010                           ; BSR set to: 0
  9011  002B42  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  9012  002B44  EF67  F015         	goto	l3684
  9013  002B48                     l3696:
  9014                           
  9015                           ; BSR set to: 0
  9016  002B48  5171               	movf	___aodiv@sign& (0+255),w,b
  9017  002B4A  B4D8               	btfsc	status,2,c
  9018  002B4C  EFAA  F015         	goto	u3101
  9019  002B50  EFAC  F015         	goto	u3100
  9020  002B54                     u3101:
  9021  002B54  EFBC  F015         	goto	l3700
  9022  002B58                     u3100:
  9023  002B58                     
  9024                           ; BSR set to: 0
  9025  002B58  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  9026  002B5A  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  9027  002B5C  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  9028  002B5E  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  9029  002B60  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  9030  002B62  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  9031  002B64  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  9032  002B66  6D72               	negf	___aodiv@quotient& (0+255),b
  9033  002B68  0E00               	movlw	0
  9034  002B6A  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  9035  002B6C  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  9036  002B6E  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  9037  002B70  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  9038  002B72  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  9039  002B74  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  9040  002B76  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  9041  002B78                     l3700:
  9042                           
  9043                           ; BSR set to: 0
  9044  002B78  C072  F060         	movff	___aodiv@quotient,?___aodiv
  9045  002B7C  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  9046  002B80  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  9047  002B84  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  9048  002B88  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  9049  002B8C  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  9050  002B90  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  9051  002B94  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  9052  002B98                     
  9053                           ; BSR set to: 0
  9054  002B98  0012               	return		;funcret
  9055  002B9A                     __end_of___aodiv:
  9056                           	opt callstack 0
  9057                           
  9058 ;; *************** function _ctoa *****************
  9059 ;; Defined at:
  9060 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  9063 ;;		 -> vsnprintf@f(6), 
  9064 ;;  c               1   29[BANK0 ] unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  w               2   30[BANK0 ] int 
  9067 ;;  l               2    0        int 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  2   27[BANK0 ] int 
  9070 ;; Registers used:
  9071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9077 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9080 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;Total ram usage:        5 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:   14
  9084 ;; This function calls:
  9085 ;;		_pad
  9086 ;; This function is called by:
  9087 ;;		_vfpfcnvrt
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text20
  9092  003C10                     __ptext20:
  9093                           	opt callstack 0
  9094  003C10                     _ctoa:
  9095                           	opt callstack 12
  9096  003C10                     
  9097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9098  003C10  0100               	movlb	0	; () banked
  9099  003C12  51F3               	movf	_width& (0+255),w,b
  9100  003C14  11F4               	iorwf	(_width+1)& (0+255),w,b
  9101  003C16  A4D8               	btfss	status,2,c
  9102  003C18  EF10  F01E         	goto	u3281
  9103  003C1C  EF12  F01E         	goto	u3280
  9104  003C20                     u3281:
  9105  003C20  EF18  F01E         	goto	l3810
  9106  003C24                     u3280:
  9107  003C24                     
  9108                           ; BSR set to: 0
  9109  003C24  C0F3  F07E         	movff	_width,ctoa@w
  9110  003C28  C0F4  F07F         	movff	_width+1,ctoa@w+1
  9111  003C2C  EF1E  F01E         	goto	l3812
  9112  003C30                     l3810:
  9113                           
  9114                           ; BSR set to: 0
  9115  003C30  0EFF               	movlw	255
  9116  003C32  25F3               	addwf	_width& (0+255),w,b
  9117  003C34  6F7E               	movwf	ctoa@w& (0+255),b
  9118  003C36  0EFF               	movlw	255
  9119  003C38  21F4               	addwfc	(_width+1)& (0+255),w,b
  9120  003C3A  6F7F               	movwf	(ctoa@w+1)& (0+255),b
  9121  003C3C                     l3812:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9125  003C3C  C07D  F164         	movff	ctoa@c,_dbuf
  9126  003C40                     
  9127                           ; BSR set to: 0
  9128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9129  003C40  0E00               	movlw	0
  9130  003C42  0101               	movlb	1	; () banked
  9131  003C44  6F65               	movwf	(_dbuf+1)& (0+255),b
  9132  003C46                     
  9133                           ; BSR set to: 1
  9134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9135  003C46  C07B  F070         	movff	ctoa@fp,pad@fp
  9136  003C4A  C07C  F071         	movff	ctoa@fp+1,pad@fp+1
  9137  003C4E  0E64               	movlw	low _dbuf
  9138  003C50  0100               	movlb	0	; () banked
  9139  003C52  6F72               	movwf	pad@buf& (0+255),b
  9140  003C54  0E01               	movlw	high _dbuf
  9141  003C56  6F73               	movwf	(pad@buf+1)& (0+255),b
  9142  003C58  C07E  F074         	movff	ctoa@w,pad@p
  9143  003C5C  C07F  F075         	movff	ctoa@w+1,pad@p+1
  9144  003C60  ECA3  F01C         	call	_pad	;wreg free
  9145  003C64  C070  F07B         	movff	?_pad,?_ctoa
  9146  003C68  C071  F07C         	movff	?_pad+1,?_ctoa+1
  9147  003C6C  0012               	return		;funcret
  9148  003C6E                     __end_of_ctoa:
  9149                           	opt callstack 0
  9150                           
  9151 ;; *************** function _pad *****************
  9152 ;; Defined at:
  9153 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9156 ;;		 -> vsnprintf@f(6), 
  9157 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  9158 ;;		 -> dbuf(32), 
  9159 ;;  p               2   20[BANK0 ] int 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;  w               2   25[BANK0 ] int 
  9162 ;;  i               2   23[BANK0 ] int 
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  2   16[BANK0 ] int 
  9165 ;; Registers used:
  9166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9172 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9175 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9176 ;;Total ram usage:       11 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:   13
  9179 ;; This function calls:
  9180 ;;		_fputc
  9181 ;;		_fputs
  9182 ;;		_strlen
  9183 ;; This function is called by:
  9184 ;;		_ctoa
  9185 ;;		_dtoa
  9186 ;;		_otoa
  9187 ;;		_utoa
  9188 ;;		_xtoa
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text21
  9193  003946                     __ptext21:
  9194                           	opt callstack 0
  9195  003946                     _pad:
  9196                           	opt callstack 12
  9197  003946                     
  9198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9199  003946  0100               	movlb	0	; () banked
  9200  003948  A1F7               	btfss	_flags& (0+255),0,b
  9201  00394A  EFA9  F01C         	goto	u2901
  9202  00394E  EFAB  F01C         	goto	u2900
  9203  003952                     u2901:
  9204  003952  EFB5  F01C         	goto	l3610
  9205  003956                     u2900:
  9206  003956                     
  9207                           ; BSR set to: 0
  9208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9209  003956  C072  F069         	movff	pad@buf,fputs@s
  9210  00395A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  9211  00395E  C070  F06B         	movff	pad@fp,fputs@fp
  9212  003962  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  9213  003966  EC00  F01F         	call	_fputs	;wreg free
  9214  00396A                     l3610:
  9215                           
  9216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9217  00396A  0100               	movlb	0	; () banked
  9218  00396C  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  9219  00396E  EFBB  F01C         	goto	u2911
  9220  003972  EFBD  F01C         	goto	u2910
  9221  003976                     u2911:
  9222  003976  EFC3  F01C         	goto	l3614
  9223  00397A                     u2910:
  9224  00397A                     
  9225                           ; BSR set to: 0
  9226  00397A  C074  F079         	movff	pad@p,pad@w
  9227  00397E  C075  F07A         	movff	pad@p+1,pad@w+1
  9228  003982  EFC7  F01C         	goto	l509
  9229  003986                     l3614:
  9230                           
  9231                           ; BSR set to: 0
  9232  003986  0E00               	movlw	0
  9233  003988  6F7A               	movwf	(pad@w+1)& (0+255),b
  9234  00398A  0E00               	movlw	0
  9235  00398C  6F79               	movwf	pad@w& (0+255),b
  9236  00398E                     l509:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9240  00398E  0E00               	movlw	0
  9241  003990  6F78               	movwf	(pad@i+1)& (0+255),b
  9242  003992  0E00               	movlw	0
  9243  003994  6F77               	movwf	pad@i& (0+255),b
  9244                           
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9246  003996  EFDA  F01C         	goto	l3620
  9247  00399A                     l3616:
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9251  00399A  0E00               	movlw	0
  9252  00399C  6F61               	movwf	(fputc@c+1)& (0+255),b
  9253  00399E  0E20               	movlw	32
  9254  0039A0  6F60               	movwf	fputc@c& (0+255),b
  9255  0039A2  C070  F062         	movff	pad@fp,fputc@fp
  9256  0039A6  C071  F063         	movff	pad@fp+1,fputc@fp+1
  9257  0039AA  EC3D  F01C         	call	_fputc	;wreg free
  9258  0039AE                     
  9259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9260  0039AE  0100               	movlb	0	; () banked
  9261  0039B0  4B77               	infsnz	pad@i& (0+255),f,b
  9262  0039B2  2B78               	incf	(pad@i+1)& (0+255),f,b
  9263  0039B4                     l3620:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9267  0039B4  5179               	movf	pad@w& (0+255),w,b
  9268  0039B6  5D77               	subwf	pad@i& (0+255),w,b
  9269  0039B8  5178               	movf	(pad@i+1)& (0+255),w,b
  9270  0039BA  0A80               	xorlw	128
  9271  0039BC  6F76               	movwf	??_pad& (0+255),b
  9272  0039BE  517A               	movf	(pad@w+1)& (0+255),w,b
  9273  0039C0  0A80               	xorlw	128
  9274  0039C2  5976               	subwfb	??_pad& (0+255),w,b
  9275  0039C4  A0D8               	btfss	status,0,c
  9276  0039C6  EFE7  F01C         	goto	u2921
  9277  0039CA  EFE9  F01C         	goto	u2920
  9278  0039CE                     u2921:
  9279  0039CE  EFCD  F01C         	goto	l3616
  9280  0039D2                     u2920:
  9281  0039D2                     
  9282                           ; BSR set to: 0
  9283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9284  0039D2  B1F7               	btfsc	_flags& (0+255),0,b
  9285  0039D4  EFEE  F01C         	goto	u2931
  9286  0039D8  EFF0  F01C         	goto	u2930
  9287  0039DC                     u2931:
  9288  0039DC  EFFA  F01C         	goto	l3624
  9289  0039E0                     u2930:
  9290  0039E0                     
  9291                           ; BSR set to: 0
  9292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9293  0039E0  C072  F069         	movff	pad@buf,fputs@s
  9294  0039E4  C073  F06A         	movff	pad@buf+1,fputs@s+1
  9295  0039E8  C070  F06B         	movff	pad@fp,fputs@fp
  9296  0039EC  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  9297  0039F0  EC00  F01F         	call	_fputs	;wreg free
  9298  0039F4                     l3624:
  9299                           
  9300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9301  0039F4  C072  F060         	movff	pad@buf,strlen@s
  9302  0039F8  C073  F061         	movff	pad@buf+1,strlen@s+1
  9303  0039FC  EC4B  F020         	call	_strlen	;wreg free
  9304  003A00  0100               	movlb	0	; () banked
  9305  003A02  5179               	movf	pad@w& (0+255),w,b
  9306  003A04  2560               	addwf	?_strlen& (0+255),w,b
  9307  003A06  6F70               	movwf	?_pad& (0+255),b
  9308  003A08  517A               	movf	(pad@w+1)& (0+255),w,b
  9309  003A0A  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  9310  003A0C  6F71               	movwf	(?_pad+1)& (0+255),b
  9311  003A0E                     
  9312                           ; BSR set to: 0
  9313  003A0E  0012               	return		;funcret
  9314  003A10                     __end_of_pad:
  9315                           	opt callstack 0
  9316                           
  9317 ;; *************** function _strlen *****************
  9318 ;; Defined at:
  9319 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9322 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9325 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  2    0[BANK0 ] unsigned int 
  9328 ;; Registers used:
  9329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9335 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9338 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;Total ram usage:        4 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:   10
  9342 ;; This function calls:
  9343 ;;		Nothing
  9344 ;; This function is called by:
  9345 ;;		_pad
  9346 ;;		_stoa
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text22
  9351  004096                     __ptext22:
  9352                           	opt callstack 0
  9353  004096                     _strlen:
  9354                           	opt callstack 14
  9355  004096  C060  F062         	movff	strlen@s,strlen@a
  9356  00409A  C061  F063         	movff	strlen@s+1,strlen@a+1
  9357  00409E  EF54  F020         	goto	l3570
  9358  0040A2                     l3568:
  9359  0040A2  0100               	movlb	0	; () banked
  9360  0040A4  4B60               	infsnz	strlen@s& (0+255),f,b
  9361  0040A6  2B61               	incf	(strlen@s+1)& (0+255),f,b
  9362  0040A8                     l3570:
  9363  0040A8  C060  FFD9         	movff	strlen@s,fsr2l
  9364  0040AC  C061  FFDA         	movff	strlen@s+1,fsr2h
  9365  0040B0  50DF               	movf	indf2,w,c
  9366  0040B2  A4D8               	btfss	status,2,c
  9367  0040B4  EF5E  F020         	goto	u2841
  9368  0040B8  EF60  F020         	goto	u2840
  9369  0040BC                     u2841:
  9370  0040BC  EF51  F020         	goto	l3568
  9371  0040C0                     u2840:
  9372  0040C0  0100               	movlb	0	; () banked
  9373  0040C2  5162               	movf	strlen@a& (0+255),w,b
  9374  0040C4  5D60               	subwf	strlen@s& (0+255),w,b
  9375  0040C6  6F60               	movwf	?_strlen& (0+255),b
  9376  0040C8  5163               	movf	(strlen@a+1)& (0+255),w,b
  9377  0040CA  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  9378  0040CC  6F61               	movwf	(?_strlen+1)& (0+255),b
  9379  0040CE                     
  9380                           ; BSR set to: 0
  9381  0040CE  0012               	return		;funcret
  9382  0040D0                     __end_of_strlen:
  9383                           	opt callstack 0
  9384                           
  9385 ;; *************** function _fputs *****************
  9386 ;; Defined at:
  9387 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  9390 ;;		 -> dbuf(32), 
  9391 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  9392 ;;		 -> vsnprintf@f(6), 
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;  i               2   14[BANK0 ] int 
  9395 ;;  c               1   13[BANK0 ] unsigned char 
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  2    9[BANK0 ] int 
  9398 ;; Registers used:
  9399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9406 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9408 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9409 ;;Total ram usage:        7 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:   12
  9412 ;; This function calls:
  9413 ;;		_fputc
  9414 ;; This function is called by:
  9415 ;;		_pad
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419                           	psect	text23
  9420  003E00                     __ptext23:
  9421                           	opt callstack 0
  9422  003E00                     _fputs:
  9423                           	opt callstack 12
  9424  003E00  0E00               	movlw	0
  9425  003E02  0100               	movlb	0	; () banked
  9426  003E04  6F6F               	movwf	(fputs@i+1)& (0+255),b
  9427  003E06  0E00               	movlw	0
  9428  003E08  6F6E               	movwf	fputs@i& (0+255),b
  9429  003E0A  EF13  F01F         	goto	l3564
  9430  003E0E                     l3560:
  9431                           
  9432                           ; BSR set to: 0
  9433  003E0E  C06D  F060         	movff	fputs@c,fputc@c
  9434  003E12  6B61               	clrf	(fputc@c+1)& (0+255),b
  9435  003E14  C06B  F062         	movff	fputs@fp,fputc@fp
  9436  003E18  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  9437  003E1C  EC3D  F01C         	call	_fputc	;wreg free
  9438  003E20  0100               	movlb	0	; () banked
  9439  003E22  4B6E               	infsnz	fputs@i& (0+255),f,b
  9440  003E24  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  9441  003E26                     l3564:
  9442                           
  9443                           ; BSR set to: 0
  9444  003E26  516E               	movf	fputs@i& (0+255),w,b
  9445  003E28  2569               	addwf	fputs@s& (0+255),w,b
  9446  003E2A  6ED9               	movwf	fsr2l,c
  9447  003E2C  516F               	movf	(fputs@i+1)& (0+255),w,b
  9448  003E2E  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  9449  003E30  6EDA               	movwf	fsr2h,c
  9450  003E32  50DF               	movf	indf2,w,c
  9451  003E34  6F6D               	movwf	fputs@c& (0+255),b
  9452  003E36  516D               	movf	fputs@c& (0+255),w,b
  9453  003E38  A4D8               	btfss	status,2,c
  9454  003E3A  EF21  F01F         	goto	u2831
  9455  003E3E  EF23  F01F         	goto	u2830
  9456  003E42                     u2831:
  9457  003E42  EF07  F01F         	goto	l3560
  9458  003E46                     u2830:
  9459  003E46                     
  9460                           ; BSR set to: 0
  9461  003E46  0012               	return		;funcret
  9462  003E48                     __end_of_fputs:
  9463                           	opt callstack 0
  9464                           
  9465 ;; *************** function _fputc *****************
  9466 ;; Defined at:
  9467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  c               2    0[BANK0 ] int 
  9470 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  9471 ;;		 -> vsnprintf@f(6), 
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;		None
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  2    0[BANK0 ] int 
  9476 ;; Registers used:
  9477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9483 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9485 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;Total ram usage:        9 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; Hardware stack levels required when called:   11
  9490 ;; This function calls:
  9491 ;;		_putch
  9492 ;; This function is called by:
  9493 ;;		_pad
  9494 ;;		_stoa
  9495 ;;		_vfpfcnvrt
  9496 ;;		_fputs
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text24
  9501  00387A                     __ptext24:
  9502                           	opt callstack 0
  9503  00387A                     _fputc:
  9504                           	opt callstack 12
  9505  00387A  0100               	movlb	0	; () banked
  9506  00387C  5162               	movf	fputc@fp& (0+255),w,b
  9507  00387E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  9508  003880  B4D8               	btfsc	status,2,c
  9509  003882  EF45  F01C         	goto	u2781
  9510  003886  EF47  F01C         	goto	u2780
  9511  00388A                     u2781:
  9512  00388A  EF50  F01C         	goto	l3540
  9513  00388E                     u2780:
  9514  00388E                     
  9515                           ; BSR set to: 0
  9516  00388E  5162               	movf	fputc@fp& (0+255),w,b
  9517  003890  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  9518  003892  A4D8               	btfss	status,2,c
  9519  003894  EF4E  F01C         	goto	u2791
  9520  003898  EF50  F01C         	goto	u2790
  9521  00389C                     u2791:
  9522  00389C  EF55  F01C         	goto	l3542
  9523  0038A0                     u2790:
  9524  0038A0                     l3540:
  9525                           
  9526                           ; BSR set to: 0
  9527  0038A0  5160               	movf	fputc@c& (0+255),w,b
  9528  0038A2  ECE3  F021         	call	_putch
  9529  0038A6  EFA2  F01C         	goto	l1463
  9530  0038AA                     l3542:
  9531                           
  9532                           ; BSR set to: 0
  9533  0038AA  EE20 F004          	lfsr	2,4
  9534  0038AE  5162               	movf	fputc@fp& (0+255),w,b
  9535  0038B0  26D9               	addwf	fsr2l,f,c
  9536  0038B2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9537  0038B4  22DA               	addwfc	fsr2h,f,c
  9538  0038B6  50DE               	movf	postinc2,w,c
  9539  0038B8  10DE               	iorwf	postinc2,w,c
  9540  0038BA  B4D8               	btfsc	status,2,c
  9541  0038BC  EF62  F01C         	goto	u2801
  9542  0038C0  EF64  F01C         	goto	u2800
  9543  0038C4                     u2801:
  9544  0038C4  EF7F  F01C         	goto	l3546
  9545  0038C8                     u2800:
  9546  0038C8                     
  9547                           ; BSR set to: 0
  9548  0038C8  EE20 F004          	lfsr	2,4
  9549  0038CC  5162               	movf	fputc@fp& (0+255),w,b
  9550  0038CE  26D9               	addwf	fsr2l,f,c
  9551  0038D0  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9552  0038D2  22DA               	addwfc	fsr2h,f,c
  9553  0038D4  EE10 F002          	lfsr	1,2
  9554  0038D8  5162               	movf	fputc@fp& (0+255),w,b
  9555  0038DA  26E1               	addwf	fsr1l,f,c
  9556  0038DC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9557  0038DE  22E2               	addwfc	fsr1h,f,c
  9558  0038E0  50DE               	movf	postinc2,w,c
  9559  0038E2  5CE6               	subwf	postinc1,w,c
  9560  0038E4  50E6               	movf	postinc1,w,c
  9561  0038E6  0A80               	xorlw	128
  9562  0038E8  6F68               	movwf	(??_fputc+4)& (0+255),b
  9563  0038EA  50DE               	movf	postinc2,w,c
  9564  0038EC  0A80               	xorlw	128
  9565  0038EE  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  9566  0038F0  B0D8               	btfsc	status,0,c
  9567  0038F2  EF7D  F01C         	goto	u2811
  9568  0038F6  EF7F  F01C         	goto	u2810
  9569  0038FA                     u2811:
  9570  0038FA  EFA2  F01C         	goto	l1463
  9571  0038FE                     u2810:
  9572  0038FE                     l3546:
  9573                           
  9574                           ; BSR set to: 0
  9575  0038FE  EE20 F002          	lfsr	2,2
  9576  003902  5162               	movf	fputc@fp& (0+255),w,b
  9577  003904  26D9               	addwf	fsr2l,f,c
  9578  003906  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9579  003908  22DA               	addwfc	fsr2h,f,c
  9580  00390A  CFDE F064          	movff	postinc2,??_fputc
  9581  00390E  CFDD F065          	movff	postdec2,??_fputc+1
  9582  003912  C062  FFD9         	movff	fputc@fp,fsr2l
  9583  003916  C063  FFDA         	movff	fputc@fp+1,fsr2h
  9584  00391A  CFDE F066          	movff	postinc2,??_fputc+2
  9585  00391E  CFDD F067          	movff	postdec2,??_fputc+3
  9586  003922  5164               	movf	??_fputc& (0+255),w,b
  9587  003924  2566               	addwf	(??_fputc+2)& (0+255),w,b
  9588  003926  6ED9               	movwf	fsr2l,c
  9589  003928  5165               	movf	(??_fputc+1)& (0+255),w,b
  9590  00392A  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  9591  00392C  6EDA               	movwf	fsr2h,c
  9592  00392E  C060  FFDF         	movff	fputc@c,indf2
  9593  003932  EE20 F002          	lfsr	2,2
  9594  003936  5162               	movf	fputc@fp& (0+255),w,b
  9595  003938  26D9               	addwf	fsr2l,f,c
  9596  00393A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9597  00393C  22DA               	addwfc	fsr2h,f,c
  9598  00393E  2ADE               	incf	postinc2,f,c
  9599  003940  0E00               	movlw	0
  9600  003942  22DD               	addwfc	postdec2,f,c
  9601  003944                     l1463:
  9602  003944  0012               	return		;funcret
  9603  003946                     __end_of_fputc:
  9604                           	opt callstack 0
  9605                           
  9606 ;; *************** function _putch *****************
  9607 ;; Defined at:
  9608 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  c               1    wreg     unsigned char 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  c               1    0[COMRAM] unsigned char 
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;Total ram usage:        0 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:   10
  9629 ;; This function calls:
  9630 ;;		Nothing
  9631 ;; This function is called by:
  9632 ;;		_fputc
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text25
  9637  0043C6                     __ptext25:
  9638                           	opt callstack 0
  9639  0043C6                     _putch:
  9640                           	opt callstack 12
  9641  0043C6  0012               	return		;funcret
  9642  0043C8                     __end_of_putch:
  9643                           	opt callstack 0
  9644                           
  9645 ;; *************** function _atoi *****************
  9646 ;; Defined at:
  9647 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  9650 ;;		 -> STR_3(9), 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  n               2   20[BANK0 ] int 
  9653 ;;  neg             2   13[BANK0 ] int 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  2    7[BANK0 ] int 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9664 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9665 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9666 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9667 ;;Total ram usage:       15 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:   11
  9670 ;; This function calls:
  9671 ;;		___wmul
  9672 ;;		_isdigit
  9673 ;;		_isspace
  9674 ;; This function is called by:
  9675 ;;		_vfpfcnvrt
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text26
  9680  0026E6                     __ptext26:
  9681                           	opt callstack 0
  9682  0026E6                     _atoi:
  9683                           	opt callstack 15
  9684  0026E6  0E00               	movlw	0
  9685  0026E8  0100               	movlb	0	; () banked
  9686  0026EA  6F75               	movwf	(atoi@n+1)& (0+255),b
  9687  0026EC  0E00               	movlw	0
  9688  0026EE  6F74               	movwf	atoi@n& (0+255),b
  9689  0026F0  0E00               	movlw	0
  9690  0026F2  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  9691  0026F4  0E00               	movlw	0
  9692  0026F6  6F6D               	movwf	atoi@neg& (0+255),b
  9693  0026F8  EF80  F013         	goto	l4078
  9694  0026FC                     l4076:
  9695                           
  9696                           ; BSR set to: 0
  9697  0026FC  4B67               	infsnz	atoi@s& (0+255),f,b
  9698  0026FE  2B68               	incf	(atoi@s+1)& (0+255),f,b
  9699  002700                     l4078:
  9700                           
  9701                           ; BSR set to: 0
  9702  002700  0E01               	movlw	1
  9703  002702  6F73               	movwf	_atoi$1972& (0+255),b
  9704  002704                     
  9705                           ; BSR set to: 0
  9706  002704  C067  FFF6         	movff	atoi@s,tblptrl
  9707  002708  C068  FFF7         	movff	atoi@s+1,tblptrh
  9708  00270C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9709  00270C  6AF8               	clrf	tblptru,c
  9710  00270E                     	endif
  9711  00270E                     	if	0	;tblptru may be non-zero
  9712  00270E                     	endif
  9713  00270E  0008               	tblrd		*
  9714  002710  50F5               	movf	tablat,w,c
  9715  002712  0A20               	xorlw	32
  9716  002714  B4D8               	btfsc	status,2,c
  9717  002716  EF8F  F013         	goto	u3871
  9718  00271A  EF91  F013         	goto	u3870
  9719  00271E                     u3871:
  9720  00271E  EFAF  F013         	goto	l4086
  9721  002722                     u3870:
  9722  002722                     
  9723                           ; BSR set to: 0
  9724  002722  0EF7               	movlw	247
  9725  002724  6F69               	movwf	??_atoi& (0+255),b
  9726  002726  0EFF               	movlw	255
  9727  002728  6F6A               	movwf	(??_atoi+1)& (0+255),b
  9728  00272A  C067  FFF6         	movff	atoi@s,tblptrl
  9729  00272E  C068  FFF7         	movff	atoi@s+1,tblptrh
  9730  002732                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9731  002732  6AF8               	clrf	tblptru,c
  9732  002734                     	endif
  9733  002734                     	if	0	;tblptru may be non-zero
  9734  002734                     	endif
  9735  002734  0008               	tblrd		*
  9736  002736  50F5               	movf	tablat,w,c
  9737  002738  6F6B               	movwf	(??_atoi+2)& (0+255),b
  9738  00273A  6B6C               	clrf	(??_atoi+3)& (0+255),b
  9739  00273C  5169               	movf	??_atoi& (0+255),w,b
  9740  00273E  276B               	addwf	(??_atoi+2)& (0+255),f,b
  9741  002740  516A               	movf	(??_atoi+1)& (0+255),w,b
  9742  002742  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  9743  002744  516C               	movf	(??_atoi+3)& (0+255),w,b
  9744  002746  E109               	bnz	u3880
  9745  002748  0E05               	movlw	5
  9746  00274A  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  9747  00274C  A0D8               	btfss	status,0,c
  9748  00274E  EFAB  F013         	goto	u3881
  9749  002752  EFAD  F013         	goto	u3880
  9750  002756                     u3881:
  9751  002756  EFAF  F013         	goto	l4086
  9752  00275A                     u3880:
  9753  00275A                     
  9754                           ; BSR set to: 0
  9755  00275A  0E00               	movlw	0
  9756  00275C  6F73               	movwf	_atoi$1972& (0+255),b
  9757  00275E                     l4086:
  9758                           
  9759                           ; BSR set to: 0
  9760  00275E  C073  F06F         	movff	_atoi$1972,_atoi$1971
  9761  002762  6B70               	clrf	(_atoi$1971+1)& (0+255),b
  9762  002764                     
  9763                           ; BSR set to: 0
  9764  002764  516F               	movf	_atoi$1971& (0+255),w,b
  9765  002766  1170               	iorwf	(_atoi$1971+1)& (0+255),w,b
  9766  002768  A4D8               	btfss	status,2,c
  9767  00276A  EFB9  F013         	goto	u3891
  9768  00276E  EFBB  F013         	goto	u3890
  9769  002772                     u3891:
  9770  002772  EF7E  F013         	goto	l4076
  9771  002776                     u3890:
  9772  002776  EFC5  F013         	goto	l4096
  9773  00277A                     l4092:
  9774                           
  9775                           ; BSR set to: 0
  9776  00277A  0E00               	movlw	0
  9777  00277C  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  9778  00277E  0E01               	movlw	1
  9779  002780  6F6D               	movwf	atoi@neg& (0+255),b
  9780  002782                     l4094:
  9781                           
  9782                           ; BSR set to: 0
  9783  002782  4B67               	infsnz	atoi@s& (0+255),f,b
  9784  002784  2B68               	incf	(atoi@s+1)& (0+255),f,b
  9785  002786  EFFD  F013         	goto	l4102
  9786  00278A                     l4096:
  9787                           
  9788                           ; BSR set to: 0
  9789  00278A  C067  FFF6         	movff	atoi@s,tblptrl
  9790  00278E  C068  FFF7         	movff	atoi@s+1,tblptrh
  9791  002792                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9792  002792  6AF8               	clrf	tblptru,c
  9793  002794                     	endif
  9794  002794                     	if	0	;tblptru may be non-zero
  9795  002794                     	endif
  9796  002794  0008               	tblrd		*
  9797  002796  50F5               	movf	tablat,w,c
  9798  002798  6F69               	movwf	??_atoi& (0+255),b
  9799  00279A  6B6A               	clrf	(??_atoi+1)& (0+255),b
  9800                           
  9801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9802                           ; Switch size 1, requested type "simple"
  9803                           ; Number of cases is 1, Range of values is 0 to 0
  9804                           ; switch strategies available:
  9805                           ; Name         Instructions Cycles
  9806                           ; simple_byte            4     3 (average)
  9807                           ;	Chosen strategy is simple_byte
  9808  00279C  516A               	movf	(??_atoi+1)& (0+255),w,b
  9809  00279E  0A00               	xorlw	0	; case 0
  9810  0027A0  B4D8               	btfsc	status,2,c
  9811  0027A2  EFD5  F013         	goto	l5430
  9812  0027A6  EFFD  F013         	goto	l4102
  9813  0027AA                     l5430:
  9814                           
  9815                           ; BSR set to: 0
  9816                           ; Switch size 1, requested type "simple"
  9817                           ; Number of cases is 2, Range of values is 43 to 45
  9818                           ; switch strategies available:
  9819                           ; Name         Instructions Cycles
  9820                           ; simple_byte            7     4 (average)
  9821                           ;	Chosen strategy is simple_byte
  9822  0027AA  5169               	movf	??_atoi& (0+255),w,b
  9823  0027AC  0A2B               	xorlw	43	; case 43
  9824  0027AE  B4D8               	btfsc	status,2,c
  9825  0027B0  EFC1  F013         	goto	l4094
  9826  0027B4  0A06               	xorlw	6	; case 45
  9827  0027B6  B4D8               	btfsc	status,2,c
  9828  0027B8  EFBD  F013         	goto	l4092
  9829  0027BC  EFFD  F013         	goto	l4102
  9830  0027C0                     l4098:
  9831                           
  9832                           ; BSR set to: 0
  9833  0027C0  C074  F060         	movff	atoi@n,___wmul@multiplier
  9834  0027C4  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
  9835  0027C8  0E00               	movlw	0
  9836  0027CA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9837  0027CC  0E0A               	movlw	10
  9838  0027CE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9839  0027D0  EC2B  F021         	call	___wmul	;wreg free
  9840  0027D4  C067  FFF6         	movff	atoi@s,tblptrl
  9841  0027D8  C068  FFF7         	movff	atoi@s+1,tblptrh
  9842  0027DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9843  0027DC  6AF8               	clrf	tblptru,c
  9844  0027DE                     	endif
  9845  0027DE                     	if	0	;tblptru may be non-zero
  9846  0027DE                     	endif
  9847  0027DE  0008               	tblrd		*
  9848  0027E0  50F5               	movf	tablat,w,c
  9849  0027E2  0100               	movlb	0	; () banked
  9850  0027E4  5F60               	subwf	?___wmul& (0+255),f,b
  9851  0027E6  0E00               	movlw	0
  9852  0027E8  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  9853  0027EA  0E30               	movlw	48
  9854  0027EC  2560               	addwf	?___wmul& (0+255),w,b
  9855  0027EE  6F74               	movwf	atoi@n& (0+255),b
  9856  0027F0  0E00               	movlw	0
  9857  0027F2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  9858  0027F4  6F75               	movwf	(atoi@n+1)& (0+255),b
  9859  0027F6  EFC1  F013         	goto	l4094
  9860  0027FA                     l4102:
  9861                           
  9862                           ; BSR set to: 0
  9863  0027FA  0ED0               	movlw	208
  9864  0027FC  6F69               	movwf	??_atoi& (0+255),b
  9865  0027FE  0EFF               	movlw	255
  9866  002800  6F6A               	movwf	(??_atoi+1)& (0+255),b
  9867  002802  C067  FFF6         	movff	atoi@s,tblptrl
  9868  002806  C068  FFF7         	movff	atoi@s+1,tblptrh
  9869  00280A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9870  00280A  6AF8               	clrf	tblptru,c
  9871  00280C                     	endif
  9872  00280C                     	if	0	;tblptru may be non-zero
  9873  00280C                     	endif
  9874  00280C  0008               	tblrd		*
  9875  00280E  50F5               	movf	tablat,w,c
  9876  002810  6F6B               	movwf	(??_atoi+2)& (0+255),b
  9877  002812  6B6C               	clrf	(??_atoi+3)& (0+255),b
  9878  002814  5169               	movf	??_atoi& (0+255),w,b
  9879  002816  276B               	addwf	(??_atoi+2)& (0+255),f,b
  9880  002818  516A               	movf	(??_atoi+1)& (0+255),w,b
  9881  00281A  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  9882  00281C  516C               	movf	(??_atoi+3)& (0+255),w,b
  9883  00281E  E10A               	bnz	u3900
  9884  002820  0E0A               	movlw	10
  9885  002822  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  9886  002824  A0D8               	btfss	status,0,c
  9887  002826  EF17  F014         	goto	u3901
  9888  00282A  EF1A  F014         	goto	u3900
  9889  00282E                     u3901:
  9890  00282E  0E01               	movlw	1
  9891  002830  EF1B  F014         	goto	u3910
  9892  002834                     u3900:
  9893  002834  0E00               	movlw	0
  9894  002836                     u3910:
  9895  002836  6F71               	movwf	_atoi$1973& (0+255),b
  9896  002838  6B72               	clrf	(_atoi$1973+1)& (0+255),b
  9897  00283A                     
  9898                           ; BSR set to: 0
  9899  00283A  5171               	movf	_atoi$1973& (0+255),w,b
  9900  00283C  1172               	iorwf	(_atoi$1973+1)& (0+255),w,b
  9901  00283E  A4D8               	btfss	status,2,c
  9902  002840  EF24  F014         	goto	u3921
  9903  002844  EF26  F014         	goto	u3920
  9904  002848                     u3921:
  9905  002848  EFE0  F013         	goto	l4098
  9906  00284C                     u3920:
  9907  00284C                     
  9908                           ; BSR set to: 0
  9909  00284C  516D               	movf	atoi@neg& (0+255),w,b
  9910  00284E  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
  9911  002850  A4D8               	btfss	status,2,c
  9912  002852  EF2D  F014         	goto	u3931
  9913  002856  EF2F  F014         	goto	u3930
  9914  00285A                     u3931:
  9915  00285A  EF3D  F014         	goto	l1422
  9916  00285E                     u3930:
  9917  00285E                     
  9918                           ; BSR set to: 0
  9919  00285E  C074  F069         	movff	atoi@n,??_atoi
  9920  002862  C075  F06A         	movff	atoi@n+1,??_atoi+1
  9921  002866  1F69               	comf	??_atoi& (0+255),f,b
  9922  002868  1F6A               	comf	(??_atoi+1)& (0+255),f,b
  9923  00286A  4B69               	infsnz	??_atoi& (0+255),f,b
  9924  00286C  2B6A               	incf	(??_atoi+1)& (0+255),f,b
  9925  00286E  C069  F067         	movff	??_atoi,?_atoi
  9926  002872  C06A  F068         	movff	??_atoi+1,?_atoi+1
  9927  002876  EF41  F014         	goto	l1425
  9928  00287A                     l1422:
  9929                           
  9930                           ; BSR set to: 0
  9931  00287A  C074  F067         	movff	atoi@n,?_atoi
  9932  00287E  C075  F068         	movff	atoi@n+1,?_atoi+1
  9933  002882                     l1425:
  9934                           
  9935                           ; BSR set to: 0
  9936  002882  0012               	return		;funcret
  9937  002884                     __end_of_atoi:
  9938                           	opt callstack 0
  9939                           
  9940 ;; *************** function _isspace *****************
  9941 ;; Defined at:
  9942 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;  c               2    0[BANK0 ] int 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;		None
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  2    0[BANK0 ] int 
  9949 ;; Registers used:
  9950 ;;		wreg, status,2, status,0
  9951 ;; Tracked objects:
  9952 ;;		On entry : 0/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9958 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9959 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9960 ;;Total ram usage:        7 bytes
  9961 ;; Hardware stack levels used:    1
  9962 ;; Hardware stack levels required when called:   10
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_atoi
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text27
  9971  003C6E                     __ptext27:
  9972                           	opt callstack 0
  9973  003C6E                     _isspace:
  9974                           	opt callstack 15
  9975  003C6E  0E01               	movlw	1
  9976  003C70  0100               	movlb	0	; () banked
  9977  003C72  6F66               	movwf	_isspace$1998& (0+255),b
  9978  003C74                     
  9979                           ; BSR set to: 0
  9980  003C74  0E20               	movlw	32
  9981  003C76  1960               	xorwf	isspace@c& (0+255),w,b
  9982  003C78  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  9983  003C7A  B4D8               	btfsc	status,2,c
  9984  003C7C  EF42  F01E         	goto	u3241
  9985  003C80  EF44  F01E         	goto	u3240
  9986  003C84                     u3241:
  9987  003C84  EF5D  F01E         	goto	l3786
  9988  003C88                     u3240:
  9989  003C88                     
  9990                           ; BSR set to: 0
  9991  003C88  0EF7               	movlw	247
  9992  003C8A  6F62               	movwf	??_isspace& (0+255),b
  9993  003C8C  0EFF               	movlw	255
  9994  003C8E  6F63               	movwf	(??_isspace+1)& (0+255),b
  9995  003C90  C060  F064         	movff	isspace@c,??_isspace+2
  9996  003C94  C061  F065         	movff	isspace@c+1,??_isspace+3
  9997  003C98  5162               	movf	??_isspace& (0+255),w,b
  9998  003C9A  2764               	addwf	(??_isspace+2)& (0+255),f,b
  9999  003C9C  5163               	movf	(??_isspace+1)& (0+255),w,b
 10000  003C9E  2365               	addwfc	(??_isspace+3)& (0+255),f,b
 10001  003CA0  5165               	movf	(??_isspace+3)& (0+255),w,b
 10002  003CA2  E109               	bnz	u3250
 10003  003CA4  0E05               	movlw	5
 10004  003CA6  5D64               	subwf	(??_isspace+2)& (0+255),w,b
 10005  003CA8  A0D8               	btfss	status,0,c
 10006  003CAA  EF59  F01E         	goto	u3251
 10007  003CAE  EF5B  F01E         	goto	u3250
 10008  003CB2                     u3251:
 10009  003CB2  EF5D  F01E         	goto	l3786
 10010  003CB6                     u3250:
 10011  003CB6                     
 10012                           ; BSR set to: 0
 10013  003CB6  0E00               	movlw	0
 10014  003CB8  6F66               	movwf	_isspace$1998& (0+255),b
 10015  003CBA                     l3786:
 10016                           
 10017                           ; BSR set to: 0
 10018  003CBA  C066  F060         	movff	_isspace$1998,?_isspace
 10019  003CBE  6B61               	clrf	(?_isspace+1)& (0+255),b
 10020  003CC0                     
 10021                           ; BSR set to: 0
 10022  003CC0  0012               	return		;funcret
 10023  003CC2                     __end_of_isspace:
 10024                           	opt callstack 0
 10025                           
 10026 ;; *************** function _isdigit *****************
 10027 ;; Defined at:
 10028 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  c               2    0[BANK0 ] int 
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;		None
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  2    0[BANK0 ] int 
 10035 ;; Registers used:
 10036 ;;		wreg, status,2, status,0
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10046 ;;Total ram usage:        6 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:   10
 10049 ;; This function calls:
 10050 ;;		Nothing
 10051 ;; This function is called by:
 10052 ;;		_vfpfcnvrt
 10053 ;;		_atoi
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text28
 10058  0040D0                     __ptext28:
 10059                           	opt callstack 0
 10060  0040D0                     _isdigit:
 10061                           	opt callstack 16
 10062  0040D0  0ED0               	movlw	208
 10063  0040D2  0100               	movlb	0	; () banked
 10064  0040D4  6F62               	movwf	??_isdigit& (0+255),b
 10065  0040D6  0EFF               	movlw	255
 10066  0040D8  6F63               	movwf	(??_isdigit+1)& (0+255),b
 10067  0040DA  C060  F064         	movff	isdigit@c,??_isdigit+2
 10068  0040DE  C061  F065         	movff	isdigit@c+1,??_isdigit+3
 10069  0040E2  5162               	movf	??_isdigit& (0+255),w,b
 10070  0040E4  2764               	addwf	(??_isdigit+2)& (0+255),f,b
 10071  0040E6  5163               	movf	(??_isdigit+1)& (0+255),w,b
 10072  0040E8  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
 10073  0040EA  5165               	movf	(??_isdigit+3)& (0+255),w,b
 10074  0040EC  E10A               	bnz	u3020
 10075  0040EE  0E0A               	movlw	10
 10076  0040F0  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
 10077  0040F2  A0D8               	btfss	status,0,c
 10078  0040F4  EF7E  F020         	goto	u3021
 10079  0040F8  EF81  F020         	goto	u3020
 10080  0040FC                     u3021:
 10081  0040FC  0E01               	movlw	1
 10082  0040FE  EF82  F020         	goto	u3030
 10083  004102                     u3020:
 10084  004102  0E00               	movlw	0
 10085  004104                     u3030:
 10086  004104  6F60               	movwf	?_isdigit& (0+255),b
 10087  004106  6B61               	clrf	(?_isdigit+1)& (0+255),b
 10088  004108                     
 10089                           ; BSR set to: 0
 10090  004108  0012               	return		;funcret
 10091  00410A                     __end_of_isdigit:
 10092                           	opt callstack 0
 10093                           
 10094 ;; *************** function ___wmul *****************
 10095 ;; Defined at:
 10096 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10099 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  product         2    4[BANK0 ] unsigned int 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  2    0[BANK0 ] unsigned int 
 10104 ;; Registers used:
 10105 ;;		wreg, status,2, status,0, prodl, prodh
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10114 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10115 ;;Total ram usage:        6 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:   10
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		_atoi
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           	psect	text29
 10126  004256                     __ptext29:
 10127                           	opt callstack 0
 10128  004256                     ___wmul:
 10129                           	opt callstack 15
 10130  004256  0100               	movlb	0	; () banked
 10131  004258  5160               	movf	___wmul@multiplier& (0+255),w,b
 10132  00425A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10133  00425C  CFF3 F064          	movff	prodl,___wmul@product
 10134  004260  CFF4 F065          	movff	prodh,___wmul@product+1
 10135  004264  5160               	movf	___wmul@multiplier& (0+255),w,b
 10136  004266  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10137  004268  50F3               	movf	243,w,c
 10138  00426A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10139  00426C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10140  00426E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10141  004270  50F3               	movf	243,w,c
 10142  004272  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10143  004274                     
 10144                           ; BSR set to: 0
 10145  004274  C064  F060         	movff	___wmul@product,?___wmul
 10146  004278  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10147  00427C                     
 10148                           ; BSR set to: 0
 10149  00427C  0012               	return		;funcret
 10150  00427E                     __end_of___wmul:
 10151                           	opt callstack 0
 10152                           
 10153 ;; *************** function _lcd_init *****************
 10154 ;; Defined at:
 10155 ;;		line 34 in file "lib_ili9341.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;		None
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      void 
 10162 ;; Registers used:
 10163 ;;		wreg, status,2, status,0, cstack
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10173 ;;Total ram usage:        0 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; Hardware stack levels required when called:   15
 10176 ;; This function calls:
 10177 ;;		_lcd_fill
 10178 ;;		_lcd_send
 10179 ;;		_msDelay
 10180 ;; This function is called by:
 10181 ;;		_main
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text30
 10186  00131A                     __ptext30:
 10187                           	opt callstack 0
 10188  00131A                     _lcd_init:
 10189                           	opt callstack 15
 10190  00131A                     
 10191                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 10192  00131A  0E01               	movlw	1
 10193  00131C  0100               	movlb	0	; () banked
 10194  00131E  6F61               	movwf	lcd_send@value& (0+255),b
 10195  001320  0E00               	movlw	0
 10196  001322  EC3F  F021         	call	_lcd_send
 10197  001326                     
 10198                           ;lib_ili9341.c: 38:     msDelay(150);
 10199  001326  0E96               	movlw	150
 10200  001328  EC85  F020         	call	_msDelay
 10201  00132C                     
 10202                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 10203  00132C  0EEF               	movlw	239
 10204  00132E  0100               	movlb	0	; () banked
 10205  001330  6F61               	movwf	lcd_send@value& (0+255),b
 10206  001332  0E00               	movlw	0
 10207  001334  EC3F  F021         	call	_lcd_send
 10208  001338                     
 10209                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 10210  001338  0E03               	movlw	3
 10211  00133A  0100               	movlb	0	; () banked
 10212  00133C  6F61               	movwf	lcd_send@value& (0+255),b
 10213  00133E  0E01               	movlw	1
 10214  001340  EC3F  F021         	call	_lcd_send
 10215  001344                     
 10216                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 10217  001344  0E80               	movlw	128
 10218  001346  0100               	movlb	0	; () banked
 10219  001348  6F61               	movwf	lcd_send@value& (0+255),b
 10220  00134A  0E01               	movlw	1
 10221  00134C  EC3F  F021         	call	_lcd_send
 10222  001350                     
 10223                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 10224  001350  0E02               	movlw	2
 10225  001352  0100               	movlb	0	; () banked
 10226  001354  6F61               	movwf	lcd_send@value& (0+255),b
 10227  001356  0E01               	movlw	1
 10228  001358  EC3F  F021         	call	_lcd_send
 10229  00135C                     
 10230                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 10231  00135C  0ECF               	movlw	207
 10232  00135E  0100               	movlb	0	; () banked
 10233  001360  6F61               	movwf	lcd_send@value& (0+255),b
 10234  001362  0E00               	movlw	0
 10235  001364  EC3F  F021         	call	_lcd_send
 10236  001368                     
 10237                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 10238  001368  0E00               	movlw	0
 10239  00136A  0100               	movlb	0	; () banked
 10240  00136C  6F61               	movwf	lcd_send@value& (0+255),b
 10241  00136E  0E01               	movlw	1
 10242  001370  EC3F  F021         	call	_lcd_send
 10243  001374                     
 10244                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 10245  001374  0EC1               	movlw	193
 10246  001376  0100               	movlb	0	; () banked
 10247  001378  6F61               	movwf	lcd_send@value& (0+255),b
 10248  00137A  0E01               	movlw	1
 10249  00137C  EC3F  F021         	call	_lcd_send
 10250  001380                     
 10251                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 10252  001380  0E30               	movlw	48
 10253  001382  0100               	movlb	0	; () banked
 10254  001384  6F61               	movwf	lcd_send@value& (0+255),b
 10255  001386  0E01               	movlw	1
 10256  001388  EC3F  F021         	call	_lcd_send
 10257  00138C                     
 10258                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 10259  00138C  0EED               	movlw	237
 10260  00138E  0100               	movlb	0	; () banked
 10261  001390  6F61               	movwf	lcd_send@value& (0+255),b
 10262  001392  0E00               	movlw	0
 10263  001394  EC3F  F021         	call	_lcd_send
 10264  001398                     
 10265                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 10266  001398  0E64               	movlw	100
 10267  00139A  0100               	movlb	0	; () banked
 10268  00139C  6F61               	movwf	lcd_send@value& (0+255),b
 10269  00139E  0E01               	movlw	1
 10270  0013A0  EC3F  F021         	call	_lcd_send
 10271  0013A4                     
 10272                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 10273  0013A4  0E03               	movlw	3
 10274  0013A6  0100               	movlb	0	; () banked
 10275  0013A8  6F61               	movwf	lcd_send@value& (0+255),b
 10276  0013AA  0E01               	movlw	1
 10277  0013AC  EC3F  F021         	call	_lcd_send
 10278  0013B0                     
 10279                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 10280  0013B0  0E12               	movlw	18
 10281  0013B2  0100               	movlb	0	; () banked
 10282  0013B4  6F61               	movwf	lcd_send@value& (0+255),b
 10283  0013B6  0E01               	movlw	1
 10284  0013B8  EC3F  F021         	call	_lcd_send
 10285  0013BC                     
 10286                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 10287  0013BC  0E81               	movlw	129
 10288  0013BE  0100               	movlb	0	; () banked
 10289  0013C0  6F61               	movwf	lcd_send@value& (0+255),b
 10290  0013C2  0E01               	movlw	1
 10291  0013C4  EC3F  F021         	call	_lcd_send
 10292  0013C8                     
 10293                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 10294  0013C8  0EE8               	movlw	232
 10295  0013CA  0100               	movlb	0	; () banked
 10296  0013CC  6F61               	movwf	lcd_send@value& (0+255),b
 10297  0013CE  0E00               	movlw	0
 10298  0013D0  EC3F  F021         	call	_lcd_send
 10299  0013D4                     
 10300                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 10301  0013D4  0E85               	movlw	133
 10302  0013D6  0100               	movlb	0	; () banked
 10303  0013D8  6F61               	movwf	lcd_send@value& (0+255),b
 10304  0013DA  0E01               	movlw	1
 10305  0013DC  EC3F  F021         	call	_lcd_send
 10306  0013E0                     
 10307                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 10308  0013E0  0E00               	movlw	0
 10309  0013E2  0100               	movlb	0	; () banked
 10310  0013E4  6F61               	movwf	lcd_send@value& (0+255),b
 10311  0013E6  0E01               	movlw	1
 10312  0013E8  EC3F  F021         	call	_lcd_send
 10313  0013EC                     
 10314                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 10315  0013EC  0E78               	movlw	120
 10316  0013EE  0100               	movlb	0	; () banked
 10317  0013F0  6F61               	movwf	lcd_send@value& (0+255),b
 10318  0013F2  0E01               	movlw	1
 10319  0013F4  EC3F  F021         	call	_lcd_send
 10320  0013F8                     
 10321                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 10322  0013F8  0ECB               	movlw	203
 10323  0013FA  0100               	movlb	0	; () banked
 10324  0013FC  6F61               	movwf	lcd_send@value& (0+255),b
 10325  0013FE  0E00               	movlw	0
 10326  001400  EC3F  F021         	call	_lcd_send
 10327  001404                     
 10328                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 10329  001404  0E39               	movlw	57
 10330  001406  0100               	movlb	0	; () banked
 10331  001408  6F61               	movwf	lcd_send@value& (0+255),b
 10332  00140A  0E01               	movlw	1
 10333  00140C  EC3F  F021         	call	_lcd_send
 10334  001410                     
 10335                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 10336  001410  0E2C               	movlw	44
 10337  001412  0100               	movlb	0	; () banked
 10338  001414  6F61               	movwf	lcd_send@value& (0+255),b
 10339  001416  0E01               	movlw	1
 10340  001418  EC3F  F021         	call	_lcd_send
 10341  00141C                     
 10342                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 10343  00141C  0E00               	movlw	0
 10344  00141E  0100               	movlb	0	; () banked
 10345  001420  6F61               	movwf	lcd_send@value& (0+255),b
 10346  001422  0E01               	movlw	1
 10347  001424  EC3F  F021         	call	_lcd_send
 10348  001428                     
 10349                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 10350  001428  0E34               	movlw	52
 10351  00142A  0100               	movlb	0	; () banked
 10352  00142C  6F61               	movwf	lcd_send@value& (0+255),b
 10353  00142E  0E01               	movlw	1
 10354  001430  EC3F  F021         	call	_lcd_send
 10355  001434                     
 10356                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 10357  001434  0E02               	movlw	2
 10358  001436  0100               	movlb	0	; () banked
 10359  001438  6F61               	movwf	lcd_send@value& (0+255),b
 10360  00143A  0E01               	movlw	1
 10361  00143C  EC3F  F021         	call	_lcd_send
 10362  001440                     
 10363                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 10364  001440  0EF7               	movlw	247
 10365  001442  0100               	movlb	0	; () banked
 10366  001444  6F61               	movwf	lcd_send@value& (0+255),b
 10367  001446  0E00               	movlw	0
 10368  001448  EC3F  F021         	call	_lcd_send
 10369  00144C                     
 10370                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 10371  00144C  0E20               	movlw	32
 10372  00144E  0100               	movlb	0	; () banked
 10373  001450  6F61               	movwf	lcd_send@value& (0+255),b
 10374  001452  0E01               	movlw	1
 10375  001454  EC3F  F021         	call	_lcd_send
 10376  001458                     
 10377                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 10378  001458  0EEA               	movlw	234
 10379  00145A  0100               	movlb	0	; () banked
 10380  00145C  6F61               	movwf	lcd_send@value& (0+255),b
 10381  00145E  0E00               	movlw	0
 10382  001460  EC3F  F021         	call	_lcd_send
 10383  001464                     
 10384                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 10385  001464  0E00               	movlw	0
 10386  001466  0100               	movlb	0	; () banked
 10387  001468  6F61               	movwf	lcd_send@value& (0+255),b
 10388  00146A  0E01               	movlw	1
 10389  00146C  EC3F  F021         	call	_lcd_send
 10390  001470                     
 10391                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 10392  001470  0E00               	movlw	0
 10393  001472  0100               	movlb	0	; () banked
 10394  001474  6F61               	movwf	lcd_send@value& (0+255),b
 10395  001476  0E01               	movlw	1
 10396  001478  EC3F  F021         	call	_lcd_send
 10397  00147C                     
 10398                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 10399  00147C  0EC0               	movlw	192
 10400  00147E  0100               	movlb	0	; () banked
 10401  001480  6F61               	movwf	lcd_send@value& (0+255),b
 10402  001482  0E00               	movlw	0
 10403  001484  EC3F  F021         	call	_lcd_send
 10404  001488                     
 10405                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 10406  001488  0E23               	movlw	35
 10407  00148A  0100               	movlb	0	; () banked
 10408  00148C  6F61               	movwf	lcd_send@value& (0+255),b
 10409  00148E  0E01               	movlw	1
 10410  001490  EC3F  F021         	call	_lcd_send
 10411  001494                     
 10412                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 10413  001494  0EC1               	movlw	193
 10414  001496  0100               	movlb	0	; () banked
 10415  001498  6F61               	movwf	lcd_send@value& (0+255),b
 10416  00149A  0E00               	movlw	0
 10417  00149C  EC3F  F021         	call	_lcd_send
 10418  0014A0                     
 10419                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 10420  0014A0  0E10               	movlw	16
 10421  0014A2  0100               	movlb	0	; () banked
 10422  0014A4  6F61               	movwf	lcd_send@value& (0+255),b
 10423  0014A6  0E01               	movlw	1
 10424  0014A8  EC3F  F021         	call	_lcd_send
 10425  0014AC                     
 10426                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 10427  0014AC  0EC5               	movlw	197
 10428  0014AE  0100               	movlb	0	; () banked
 10429  0014B0  6F61               	movwf	lcd_send@value& (0+255),b
 10430  0014B2  0E00               	movlw	0
 10431  0014B4  EC3F  F021         	call	_lcd_send
 10432  0014B8                     
 10433                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 10434  0014B8  0E3E               	movlw	62
 10435  0014BA  0100               	movlb	0	; () banked
 10436  0014BC  6F61               	movwf	lcd_send@value& (0+255),b
 10437  0014BE  0E01               	movlw	1
 10438  0014C0  EC3F  F021         	call	_lcd_send
 10439  0014C4                     
 10440                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 10441  0014C4  0E28               	movlw	40
 10442  0014C6  0100               	movlb	0	; () banked
 10443  0014C8  6F61               	movwf	lcd_send@value& (0+255),b
 10444  0014CA  0E01               	movlw	1
 10445  0014CC  EC3F  F021         	call	_lcd_send
 10446  0014D0                     
 10447                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 10448  0014D0  0EC7               	movlw	199
 10449  0014D2  0100               	movlb	0	; () banked
 10450  0014D4  6F61               	movwf	lcd_send@value& (0+255),b
 10451  0014D6  0E00               	movlw	0
 10452  0014D8  EC3F  F021         	call	_lcd_send
 10453  0014DC                     
 10454                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 10455  0014DC  0E86               	movlw	134
 10456  0014DE  0100               	movlb	0	; () banked
 10457  0014E0  6F61               	movwf	lcd_send@value& (0+255),b
 10458  0014E2  0E01               	movlw	1
 10459  0014E4  EC3F  F021         	call	_lcd_send
 10460  0014E8                     
 10461                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 10462  0014E8  0E36               	movlw	54
 10463  0014EA  0100               	movlb	0	; () banked
 10464  0014EC  6F61               	movwf	lcd_send@value& (0+255),b
 10465  0014EE  0E00               	movlw	0
 10466  0014F0  EC3F  F021         	call	_lcd_send
 10467  0014F4                     
 10468                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 10469  0014F4  0E48               	movlw	72
 10470  0014F6  0100               	movlb	0	; () banked
 10471  0014F8  6F61               	movwf	lcd_send@value& (0+255),b
 10472  0014FA  0E01               	movlw	1
 10473  0014FC  EC3F  F021         	call	_lcd_send
 10474  001500                     
 10475                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 10476  001500  0E3A               	movlw	58
 10477  001502  0100               	movlb	0	; () banked
 10478  001504  6F61               	movwf	lcd_send@value& (0+255),b
 10479  001506  0E00               	movlw	0
 10480  001508  EC3F  F021         	call	_lcd_send
 10481  00150C                     
 10482                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 10483  00150C  0E55               	movlw	85
 10484  00150E  0100               	movlb	0	; () banked
 10485  001510  6F61               	movwf	lcd_send@value& (0+255),b
 10486  001512  0E01               	movlw	1
 10487  001514  EC3F  F021         	call	_lcd_send
 10488  001518                     
 10489                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 10490  001518  0EB1               	movlw	177
 10491  00151A  0100               	movlb	0	; () banked
 10492  00151C  6F61               	movwf	lcd_send@value& (0+255),b
 10493  00151E  0E00               	movlw	0
 10494  001520  EC3F  F021         	call	_lcd_send
 10495  001524                     
 10496                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 10497  001524  0E00               	movlw	0
 10498  001526  0100               	movlb	0	; () banked
 10499  001528  6F61               	movwf	lcd_send@value& (0+255),b
 10500  00152A  0E01               	movlw	1
 10501  00152C  EC3F  F021         	call	_lcd_send
 10502  001530                     
 10503                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 10504  001530  0E18               	movlw	24
 10505  001532  0100               	movlb	0	; () banked
 10506  001534  6F61               	movwf	lcd_send@value& (0+255),b
 10507  001536  0E01               	movlw	1
 10508  001538  EC3F  F021         	call	_lcd_send
 10509  00153C                     
 10510                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 10511  00153C  0EB6               	movlw	182
 10512  00153E  0100               	movlb	0	; () banked
 10513  001540  6F61               	movwf	lcd_send@value& (0+255),b
 10514  001542  0E00               	movlw	0
 10515  001544  EC3F  F021         	call	_lcd_send
 10516  001548                     
 10517                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 10518  001548  0E08               	movlw	8
 10519  00154A  0100               	movlb	0	; () banked
 10520  00154C  6F61               	movwf	lcd_send@value& (0+255),b
 10521  00154E  0E01               	movlw	1
 10522  001550  EC3F  F021         	call	_lcd_send
 10523  001554                     
 10524                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 10525  001554  0E82               	movlw	130
 10526  001556  0100               	movlb	0	; () banked
 10527  001558  6F61               	movwf	lcd_send@value& (0+255),b
 10528  00155A  0E01               	movlw	1
 10529  00155C  EC3F  F021         	call	_lcd_send
 10530  001560                     
 10531                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 10532  001560  0E27               	movlw	39
 10533  001562  0100               	movlb	0	; () banked
 10534  001564  6F61               	movwf	lcd_send@value& (0+255),b
 10535  001566  0E01               	movlw	1
 10536  001568  EC3F  F021         	call	_lcd_send
 10537  00156C                     
 10538                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 10539  00156C  0EF2               	movlw	242
 10540  00156E  0100               	movlb	0	; () banked
 10541  001570  6F61               	movwf	lcd_send@value& (0+255),b
 10542  001572  0E00               	movlw	0
 10543  001574  EC3F  F021         	call	_lcd_send
 10544  001578                     
 10545                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 10546  001578  0E00               	movlw	0
 10547  00157A  0100               	movlb	0	; () banked
 10548  00157C  6F61               	movwf	lcd_send@value& (0+255),b
 10549  00157E  0E01               	movlw	1
 10550  001580  EC3F  F021         	call	_lcd_send
 10551  001584                     
 10552                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 10553  001584  0E26               	movlw	38
 10554  001586  0100               	movlb	0	; () banked
 10555  001588  6F61               	movwf	lcd_send@value& (0+255),b
 10556  00158A  0E00               	movlw	0
 10557  00158C  EC3F  F021         	call	_lcd_send
 10558  001590                     
 10559                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 10560  001590  0E01               	movlw	1
 10561  001592  0100               	movlb	0	; () banked
 10562  001594  6F61               	movwf	lcd_send@value& (0+255),b
 10563  001596  0E01               	movlw	1
 10564  001598  EC3F  F021         	call	_lcd_send
 10565  00159C                     
 10566                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 10567  00159C  0EE0               	movlw	224
 10568  00159E  0100               	movlb	0	; () banked
 10569  0015A0  6F61               	movwf	lcd_send@value& (0+255),b
 10570  0015A2  0E00               	movlw	0
 10571  0015A4  EC3F  F021         	call	_lcd_send
 10572  0015A8                     
 10573                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 10574  0015A8  0E0F               	movlw	15
 10575  0015AA  0100               	movlb	0	; () banked
 10576  0015AC  6F61               	movwf	lcd_send@value& (0+255),b
 10577  0015AE  0E01               	movlw	1
 10578  0015B0  EC3F  F021         	call	_lcd_send
 10579  0015B4                     
 10580                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 10581  0015B4  0E31               	movlw	49
 10582  0015B6  0100               	movlb	0	; () banked
 10583  0015B8  6F61               	movwf	lcd_send@value& (0+255),b
 10584  0015BA  0E01               	movlw	1
 10585  0015BC  EC3F  F021         	call	_lcd_send
 10586  0015C0                     
 10587                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 10588  0015C0  0E2B               	movlw	43
 10589  0015C2  0100               	movlb	0	; () banked
 10590  0015C4  6F61               	movwf	lcd_send@value& (0+255),b
 10591  0015C6  0E01               	movlw	1
 10592  0015C8  EC3F  F021         	call	_lcd_send
 10593  0015CC                     
 10594                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 10595  0015CC  0E0C               	movlw	12
 10596  0015CE  0100               	movlb	0	; () banked
 10597  0015D0  6F61               	movwf	lcd_send@value& (0+255),b
 10598  0015D2  0E01               	movlw	1
 10599  0015D4  EC3F  F021         	call	_lcd_send
 10600  0015D8                     
 10601                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 10602  0015D8  0E0E               	movlw	14
 10603  0015DA  0100               	movlb	0	; () banked
 10604  0015DC  6F61               	movwf	lcd_send@value& (0+255),b
 10605  0015DE  0E01               	movlw	1
 10606  0015E0  EC3F  F021         	call	_lcd_send
 10607  0015E4                     
 10608                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 10609  0015E4  0E08               	movlw	8
 10610  0015E6  0100               	movlb	0	; () banked
 10611  0015E8  6F61               	movwf	lcd_send@value& (0+255),b
 10612  0015EA  0E01               	movlw	1
 10613  0015EC  EC3F  F021         	call	_lcd_send
 10614  0015F0                     
 10615                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 10616  0015F0  0E4E               	movlw	78
 10617  0015F2  0100               	movlb	0	; () banked
 10618  0015F4  6F61               	movwf	lcd_send@value& (0+255),b
 10619  0015F6  0E01               	movlw	1
 10620  0015F8  EC3F  F021         	call	_lcd_send
 10621  0015FC                     
 10622                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 10623  0015FC  0EF1               	movlw	241
 10624  0015FE  0100               	movlb	0	; () banked
 10625  001600  6F61               	movwf	lcd_send@value& (0+255),b
 10626  001602  0E01               	movlw	1
 10627  001604  EC3F  F021         	call	_lcd_send
 10628  001608                     
 10629                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 10630  001608  0E37               	movlw	55
 10631  00160A  0100               	movlb	0	; () banked
 10632  00160C  6F61               	movwf	lcd_send@value& (0+255),b
 10633  00160E  0E01               	movlw	1
 10634  001610  EC3F  F021         	call	_lcd_send
 10635  001614                     
 10636                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 10637  001614  0E07               	movlw	7
 10638  001616  0100               	movlb	0	; () banked
 10639  001618  6F61               	movwf	lcd_send@value& (0+255),b
 10640  00161A  0E01               	movlw	1
 10641  00161C  EC3F  F021         	call	_lcd_send
 10642  001620                     
 10643                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 10644  001620  0E10               	movlw	16
 10645  001622  0100               	movlb	0	; () banked
 10646  001624  6F61               	movwf	lcd_send@value& (0+255),b
 10647  001626  0E01               	movlw	1
 10648  001628  EC3F  F021         	call	_lcd_send
 10649  00162C                     
 10650                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 10651  00162C  0E03               	movlw	3
 10652  00162E  0100               	movlb	0	; () banked
 10653  001630  6F61               	movwf	lcd_send@value& (0+255),b
 10654  001632  0E01               	movlw	1
 10655  001634  EC3F  F021         	call	_lcd_send
 10656  001638                     
 10657                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 10658  001638  0E0E               	movlw	14
 10659  00163A  0100               	movlb	0	; () banked
 10660  00163C  6F61               	movwf	lcd_send@value& (0+255),b
 10661  00163E  0E01               	movlw	1
 10662  001640  EC3F  F021         	call	_lcd_send
 10663  001644                     
 10664                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 10665  001644  0E09               	movlw	9
 10666  001646  0100               	movlb	0	; () banked
 10667  001648  6F61               	movwf	lcd_send@value& (0+255),b
 10668  00164A  0E01               	movlw	1
 10669  00164C  EC3F  F021         	call	_lcd_send
 10670  001650                     
 10671                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 10672  001650  0E00               	movlw	0
 10673  001652  0100               	movlb	0	; () banked
 10674  001654  6F61               	movwf	lcd_send@value& (0+255),b
 10675  001656  0E01               	movlw	1
 10676  001658  EC3F  F021         	call	_lcd_send
 10677  00165C                     
 10678                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 10679  00165C  0EE1               	movlw	225
 10680  00165E  0100               	movlb	0	; () banked
 10681  001660  6F61               	movwf	lcd_send@value& (0+255),b
 10682  001662  0E00               	movlw	0
 10683  001664  EC3F  F021         	call	_lcd_send
 10684  001668                     
 10685                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 10686  001668  0E00               	movlw	0
 10687  00166A  0100               	movlb	0	; () banked
 10688  00166C  6F61               	movwf	lcd_send@value& (0+255),b
 10689  00166E  0E01               	movlw	1
 10690  001670  EC3F  F021         	call	_lcd_send
 10691  001674                     
 10692                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 10693  001674  0E0E               	movlw	14
 10694  001676  0100               	movlb	0	; () banked
 10695  001678  6F61               	movwf	lcd_send@value& (0+255),b
 10696  00167A  0E01               	movlw	1
 10697  00167C  EC3F  F021         	call	_lcd_send
 10698  001680                     
 10699                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 10700  001680  0E14               	movlw	20
 10701  001682  0100               	movlb	0	; () banked
 10702  001684  6F61               	movwf	lcd_send@value& (0+255),b
 10703  001686  0E01               	movlw	1
 10704  001688  EC3F  F021         	call	_lcd_send
 10705  00168C                     
 10706                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 10707  00168C  0E03               	movlw	3
 10708  00168E  0100               	movlb	0	; () banked
 10709  001690  6F61               	movwf	lcd_send@value& (0+255),b
 10710  001692  0E01               	movlw	1
 10711  001694  EC3F  F021         	call	_lcd_send
 10712  001698                     
 10713                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 10714  001698  0E11               	movlw	17
 10715  00169A  0100               	movlb	0	; () banked
 10716  00169C  6F61               	movwf	lcd_send@value& (0+255),b
 10717  00169E  0E01               	movlw	1
 10718  0016A0  EC3F  F021         	call	_lcd_send
 10719  0016A4                     
 10720                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 10721  0016A4  0E07               	movlw	7
 10722  0016A6  0100               	movlb	0	; () banked
 10723  0016A8  6F61               	movwf	lcd_send@value& (0+255),b
 10724  0016AA  0E01               	movlw	1
 10725  0016AC  EC3F  F021         	call	_lcd_send
 10726  0016B0                     
 10727                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 10728  0016B0  0E31               	movlw	49
 10729  0016B2  0100               	movlb	0	; () banked
 10730  0016B4  6F61               	movwf	lcd_send@value& (0+255),b
 10731  0016B6  0E01               	movlw	1
 10732  0016B8  EC3F  F021         	call	_lcd_send
 10733  0016BC                     
 10734                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 10735  0016BC  0EC1               	movlw	193
 10736  0016BE  0100               	movlb	0	; () banked
 10737  0016C0  6F61               	movwf	lcd_send@value& (0+255),b
 10738  0016C2  0E01               	movlw	1
 10739  0016C4  EC3F  F021         	call	_lcd_send
 10740  0016C8                     
 10741                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 10742  0016C8  0E48               	movlw	72
 10743  0016CA  0100               	movlb	0	; () banked
 10744  0016CC  6F61               	movwf	lcd_send@value& (0+255),b
 10745  0016CE  0E01               	movlw	1
 10746  0016D0  EC3F  F021         	call	_lcd_send
 10747  0016D4                     
 10748                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 10749  0016D4  0E08               	movlw	8
 10750  0016D6  0100               	movlb	0	; () banked
 10751  0016D8  6F61               	movwf	lcd_send@value& (0+255),b
 10752  0016DA  0E01               	movlw	1
 10753  0016DC  EC3F  F021         	call	_lcd_send
 10754  0016E0                     
 10755                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 10756  0016E0  0E0F               	movlw	15
 10757  0016E2  0100               	movlb	0	; () banked
 10758  0016E4  6F61               	movwf	lcd_send@value& (0+255),b
 10759  0016E6  0E01               	movlw	1
 10760  0016E8  EC3F  F021         	call	_lcd_send
 10761  0016EC                     
 10762                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 10763  0016EC  0E0C               	movlw	12
 10764  0016EE  0100               	movlb	0	; () banked
 10765  0016F0  6F61               	movwf	lcd_send@value& (0+255),b
 10766  0016F2  0E01               	movlw	1
 10767  0016F4  EC3F  F021         	call	_lcd_send
 10768  0016F8                     
 10769                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 10770  0016F8  0E31               	movlw	49
 10771  0016FA  0100               	movlb	0	; () banked
 10772  0016FC  6F61               	movwf	lcd_send@value& (0+255),b
 10773  0016FE  0E01               	movlw	1
 10774  001700  EC3F  F021         	call	_lcd_send
 10775  001704                     
 10776                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 10777  001704  0E36               	movlw	54
 10778  001706  0100               	movlb	0	; () banked
 10779  001708  6F61               	movwf	lcd_send@value& (0+255),b
 10780  00170A  0E01               	movlw	1
 10781  00170C  EC3F  F021         	call	_lcd_send
 10782  001710                     
 10783                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 10784  001710  0E0F               	movlw	15
 10785  001712  0100               	movlb	0	; () banked
 10786  001714  6F61               	movwf	lcd_send@value& (0+255),b
 10787  001716  0E01               	movlw	1
 10788  001718  EC3F  F021         	call	_lcd_send
 10789  00171C                     
 10790                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 10791  00171C  0E11               	movlw	17
 10792  00171E  0100               	movlb	0	; () banked
 10793  001720  6F61               	movwf	lcd_send@value& (0+255),b
 10794  001722  0E00               	movlw	0
 10795  001724  EC3F  F021         	call	_lcd_send
 10796                           
 10797                           ;lib_ili9341.c: 125:     msDelay(120);
 10798  001728  0E78               	movlw	120
 10799  00172A  EC85  F020         	call	_msDelay
 10800  00172E                     
 10801                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 10802  00172E  0E29               	movlw	41
 10803  001730  0100               	movlb	0	; () banked
 10804  001732  6F61               	movwf	lcd_send@value& (0+255),b
 10805  001734  0E00               	movlw	0
 10806  001736  EC3F  F021         	call	_lcd_send
 10807  00173A                     
 10808                           ;lib_ili9341.c: 127:     msDelay(120);
 10809  00173A  0E78               	movlw	120
 10810  00173C  EC85  F020         	call	_msDelay
 10811  001740                     
 10812                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 10813  001740  0E00               	movlw	0
 10814  001742  0100               	movlb	0	; () banked
 10815  001744  6F6A               	movwf	(lcd_fill@bg_color+1)& (0+255),b
 10816  001746  0E00               	movlw	0
 10817  001748  6F69               	movwf	lcd_fill@bg_color& (0+255),b
 10818  00174A  EC62  F01D         	call	_lcd_fill	;wreg free
 10819  00174E  0012               	return		;funcret
 10820  001750                     __end_of_lcd_init:
 10821                           	opt callstack 0
 10822                           
 10823 ;; *************** function _msDelay *****************
 10824 ;; Defined at:
 10825 ;;		line 16 in file "lib_ili9341.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  ms              1    wreg     unsigned char 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;  ms              1    1[BANK0 ] unsigned char 
 10830 ;;  k               1    2[BANK0 ] unsigned char 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		wreg, status,2, status,0
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;Total ram usage:        3 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:   10
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_lcd_init
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text31
 10855  00410A                     __ptext31:
 10856                           	opt callstack 0
 10857  00410A                     _msDelay:
 10858                           	opt callstack 19
 10859                           
 10860                           ;incstack = 0
 10861                           ;msDelay@ms stored from wreg
 10862  00410A  0100               	movlb	0	; () banked
 10863  00410C  6F61               	movwf	msDelay@ms& (0+255),b
 10864  00410E                     
 10865                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 10866  00410E  0E00               	movlw	0
 10867  004110  0100               	movlb	0	; () banked
 10868  004112  6F62               	movwf	msDelay@k& (0+255),b
 10869  004114  EF97  F020         	goto	l4628
 10870  004118                     l4624:
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 10874  004118  0E03               	movlw	3
 10875  00411A  0100               	movlb	0	; () banked
 10876  00411C  6F60               	movwf	??_msDelay& (0+255),b
 10877  00411E  0E97               	movlw	151
 10878  004120                     u5447:
 10879  004120  2EE8               	decfsz	wreg,f,c
 10880  004122  D7FE               	bra	u5447
 10881  004124  2F60               	decfsz	??_msDelay& (0+255),f,b
 10882  004126  D7FC               	bra	u5447
 10883  004128  D000               	nop2	
 10884  00412A                     
 10885                           ;lib_ili9341.c: 23:     }
 10886  00412A  0100               	movlb	0	; () banked
 10887  00412C  2B62               	incf	msDelay@k& (0+255),f,b
 10888  00412E                     l4628:
 10889                           
 10890                           ; BSR set to: 0
 10891  00412E  5161               	movf	msDelay@ms& (0+255),w,b
 10892  004130  5D62               	subwf	msDelay@k& (0+255),w,b
 10893  004132  A0D8               	btfss	status,0,c
 10894  004134  EF9E  F020         	goto	u4591
 10895  004138  EFA0  F020         	goto	u4590
 10896  00413C                     u4591:
 10897  00413C  EF8C  F020         	goto	l4624
 10898  004140                     u4590:
 10899  004140                     
 10900                           ; BSR set to: 0
 10901  004140  0012               	return		;funcret
 10902  004142                     __end_of_msDelay:
 10903                           	opt callstack 0
 10904                           
 10905 ;; *************** function _lcd_fill *****************
 10906 ;; Defined at:
 10907 ;;		line 193 in file "lib_ili9341.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  bg_color        2    9[BANK0 ] unsigned short 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  width           2   13[BANK0 ] unsigned short 
 10912 ;;  height          2   11[BANK0 ] unsigned short 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2, status,0, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10922 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10923 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10925 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10926 ;;Total ram usage:        6 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:   14
 10929 ;; This function calls:
 10930 ;;		_lcd_draw_pixel
 10931 ;;		_lcd_set_cursor
 10932 ;; This function is called by:
 10933 ;;		_lcd_init
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text32
 10938  003AC4                     __ptext32:
 10939                           	opt callstack 0
 10940  003AC4                     _lcd_fill:
 10941                           	opt callstack 15
 10942  003AC4                     
 10943                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 10944  003AC4  0E01               	movlw	1
 10945  003AC6  0100               	movlb	0	; () banked
 10946  003AC8  6F6E               	movwf	(lcd_fill@width+1)& (0+255),b
 10947  003ACA  0E40               	movlw	64
 10948  003ACC  6F6D               	movwf	lcd_fill@width& (0+255),b
 10949  003ACE  0E00               	movlw	0
 10950  003AD0  6F6C               	movwf	(lcd_fill@height+1)& (0+255),b
 10951  003AD2  0EF0               	movlw	240
 10952  003AD4  6F6B               	movwf	lcd_fill@height& (0+255),b
 10953  003AD6                     
 10954                           ; BSR set to: 0
 10955                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 10956  003AD6  0E00               	movlw	0
 10957  003AD8  6F66               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 10958  003ADA  0E00               	movlw	0
 10959  003ADC  6F65               	movwf	lcd_set_cursor@x& (0+255),b
 10960  003ADE  0E00               	movlw	0
 10961  003AE0  6F68               	movwf	(lcd_set_cursor@y+1)& (0+255),b
 10962  003AE2  0E00               	movlw	0
 10963  003AE4  6F67               	movwf	lcd_set_cursor@y& (0+255),b
 10964  003AE6  ECB1  F01F         	call	_lcd_set_cursor	;wreg free
 10965  003AEA  0900               	iorlw	0
 10966  003AEC  B4D8               	btfsc	status,2,c
 10967  003AEE  EF7B  F01D         	goto	u4601
 10968  003AF2  EF7D  F01D         	goto	u4600
 10969  003AF6                     u4601:
 10970  003AF6  EF97  F01D         	goto	l4642
 10971  003AFA                     u4600:
 10972  003AFA  EFA5  F01D         	goto	l368
 10973  003AFE                     l4636:
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 10977  003AFE  C069  F063         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 10978  003B02  C06A  F064         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 10979  003B06  EC78  F021         	call	_lcd_draw_pixel	;wreg free
 10980  003B0A                     l4638:
 10981                           
 10982                           ;lib_ili9341.c: 204:         while(width--)
 10983  003B0A  0100               	movlb	0	; () banked
 10984  003B0C  076D               	decf	lcd_fill@width& (0+255),f,b
 10985  003B0E  A0D8               	btfss	status,0,c
 10986  003B10  076E               	decf	(lcd_fill@width+1)& (0+255),f,b
 10987  003B12  296D               	incf	lcd_fill@width& (0+255),w,b
 10988  003B14  E106               	bnz	u4611
 10989  003B16  296E               	incf	(lcd_fill@width+1)& (0+255),w,b
 10990  003B18  A4D8               	btfss	status,2,c
 10991  003B1A  EF91  F01D         	goto	u4611
 10992  003B1E  EF93  F01D         	goto	u4610
 10993  003B22                     u4611:
 10994  003B22  EF7F  F01D         	goto	l4636
 10995  003B26                     u4610:
 10996  003B26                     
 10997                           ; BSR set to: 0
 10998                           ;lib_ili9341.c: 208:         width = 320;
 10999  003B26  0E01               	movlw	1
 11000  003B28  6F6E               	movwf	(lcd_fill@width+1)& (0+255),b
 11001  003B2A  0E40               	movlw	64
 11002  003B2C  6F6D               	movwf	lcd_fill@width& (0+255),b
 11003  003B2E                     l4642:
 11004                           
 11005                           ;lib_ili9341.c: 202:     while(height--)
 11006  003B2E  0100               	movlb	0	; () banked
 11007  003B30  076B               	decf	lcd_fill@height& (0+255),f,b
 11008  003B32  A0D8               	btfss	status,0,c
 11009  003B34  076C               	decf	(lcd_fill@height+1)& (0+255),f,b
 11010  003B36  296B               	incf	lcd_fill@height& (0+255),w,b
 11011  003B38  E106               	bnz	u4621
 11012  003B3A  296C               	incf	(lcd_fill@height+1)& (0+255),w,b
 11013  003B3C  A4D8               	btfss	status,2,c
 11014  003B3E  EFA3  F01D         	goto	u4621
 11015  003B42  EFA5  F01D         	goto	u4620
 11016  003B46                     u4621:
 11017  003B46  EF85  F01D         	goto	l4638
 11018  003B4A                     u4620:
 11019  003B4A                     l368:
 11020  003B4A  0012               	return		;funcret
 11021  003B4C                     __end_of_lcd_fill:
 11022                           	opt callstack 0
 11023                           
 11024 ;; *************** function _lcd_draw_string *****************
 11025 ;; Defined at:
 11026 ;;		line 380 in file "lib_ili9341.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  x               2   31[BANK0 ] unsigned short 
 11029 ;;  y               2   33[BANK0 ] unsigned short 
 11030 ;;  pS              2   35[BANK0 ] PTR const unsigned char 
 11031 ;;		 -> sPOT(100), STR_2(12), STR_1(10), 
 11032 ;;  fg_color        2   37[BANK0 ] unsigned short 
 11033 ;;  bg_color        2   39[BANK0 ] unsigned short 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;  lIndex          2   47[BANK0 ] unsigned short 
 11036 ;;  k               2   45[BANK0 ] unsigned short 
 11037 ;; Return value:  Size  Location     Type
 11038 ;;                  1    wreg      void 
 11039 ;; Registers used:
 11040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11041 ;; Tracked objects:
 11042 ;;		On entry : 0/0
 11043 ;;		On exit  : 0/0
 11044 ;;		Unchanged: 0/0
 11045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11046 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11048 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11049 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11050 ;;Total ram usage:       18 bytes
 11051 ;; Hardware stack levels used:    1
 11052 ;; Hardware stack levels required when called:   15
 11053 ;; This function calls:
 11054 ;;		_lcd_draw_char
 11055 ;; This function is called by:
 11056 ;;		_main
 11057 ;; This function uses a non-reentrant model
 11058 ;;
 11059                           
 11060                           	psect	text33
 11061  003148                     __ptext33:
 11062                           	opt callstack 0
 11063  003148                     _lcd_draw_string:
 11064                           	opt callstack 15
 11065  003148                     
 11066                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 11067  003148  EF26  F019         	goto	l4776
 11068  00314C                     l4762:
 11069                           
 11070                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 11071  00314C  0E00               	movlw	0
 11072  00314E  0100               	movlb	0	; () banked
 11073  003150  6F90               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 11074  003152  0E00               	movlw	0
 11075  003154  6F8F               	movwf	lcd_draw_string@lIndex& (0+255),b
 11076                           
 11077                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 11078  003156  0E00               	movlw	0
 11079  003158  6F8E               	movwf	(lcd_draw_string@k+1)& (0+255),b
 11080  00315A  0E00               	movlw	0
 11081  00315C  6F8D               	movwf	lcd_draw_string@k& (0+255),b
 11082  00315E  EFD0  F018         	goto	l4768
 11083  003162                     l4764:
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 11087  003162  90D8               	bcf	status,0,c
 11088  003164  358F               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 11089  003166  6EF6               	movwf	tblptrl,c
 11090  003168  3590               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 11091  00316A  6EF7               	movwf	tblptrh,c
 11092  00316C  0EDF               	movlw	low _font
 11093  00316E  26F6               	addwf	tblptrl,f,c
 11094  003170  0EF1               	movlw	high _font
 11095  003172  22F7               	addwfc	tblptrh,f,c
 11096  003174                     	if	1	;There are 3 active tblptr bytes
 11097  003174  6AF8               	clrf	tblptru,c
 11098  003176  0E00               	movlw	low (__mediumconst shr (0+16))
 11099  003178  22F8               	addwfc	tblptru,f,c
 11100  00317A                     	endif
 11101  00317A  0009               	tblrd		*+
 11102  00317C  CFF5 F089          	movff	tablat,??_lcd_draw_string
 11103  003180  0009               	tblrd		*+
 11104  003182  CFF5 F08A          	movff	tablat,??_lcd_draw_string+1
 11105  003186  90D8               	bcf	status,0,c
 11106  003188  3789               	rlcf	??_lcd_draw_string& (0+255),f,b
 11107  00318A  378A               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 11108  00318C  0E01               	movlw	1
 11109  00318E  2789               	addwf	??_lcd_draw_string& (0+255),f,b
 11110  003190  0E00               	movlw	0
 11111  003192  238A               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 11112  003194  5189               	movf	??_lcd_draw_string& (0+255),w,b
 11113  003196  278F               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 11114  003198  518A               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 11115  00319A  2390               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 11116  00319C                     
 11117                           ; BSR set to: 0
 11118                           ;lib_ili9341.c: 390:         }
 11119  00319C  4B8D               	infsnz	lcd_draw_string@k& (0+255),f,b
 11120  00319E  2B8E               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 11121  0031A0                     l4768:
 11122                           
 11123                           ; BSR set to: 0
 11124  0031A0  0EE0               	movlw	224
 11125  0031A2  6F89               	movwf	??_lcd_draw_string& (0+255),b
 11126  0031A4  0EFF               	movlw	255
 11127  0031A6  6F8A               	movwf	(??_lcd_draw_string+1)& (0+255),b
 11128  0031A8  C083  FFF6         	movff	lcd_draw_string@pS,tblptrl
 11129  0031AC  C084  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 11130  0031B0  0E00               	movlw	low (__mediumconst shr (0+16))
 11131  0031B2  6EF8               	movwf	tblptru,c
 11132  0031B4  0E0E               	movlw	(high __ramtop+-1)
 11133  0031B6  64F7               	cpfsgt	tblptrh,c
 11134  0031B8  D003               	bra	u4787
 11135  0031BA  0008               	tblrd		*
 11136  0031BC  50F5               	movf	tablat,w,c
 11137  0031BE  D005               	bra	u4780
 11138  0031C0                     u4787:
 11139  0031C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11140  0031C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11141  0031C8  50E7               	movf	indf1,w,c
 11142  0031CA                     u4780:
 11143  0031CA  0100               	movlb	0	; () banked
 11144  0031CC  6F8B               	movwf	(??_lcd_draw_string+2)& (0+255),b
 11145  0031CE  6B8C               	clrf	(??_lcd_draw_string+3)& (0+255),b
 11146  0031D0  5189               	movf	??_lcd_draw_string& (0+255),w,b
 11147  0031D2  278B               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 11148  0031D4  518A               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 11149  0031D6  238C               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 11150  0031D8  518B               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 11151  0031DA  5D8D               	subwf	lcd_draw_string@k& (0+255),w,b
 11152  0031DC  518C               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 11153  0031DE  598E               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 11154  0031E0  A0D8               	btfss	status,0,c
 11155  0031E2  EFF5  F018         	goto	u4791
 11156  0031E6  EFF7  F018         	goto	u4790
 11157  0031EA                     u4791:
 11158  0031EA  EFB1  F018         	goto	l4764
 11159  0031EE                     u4790:
 11160  0031EE                     
 11161                           ; BSR set to: 0
 11162                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 11163  0031EE  C07F  F069         	movff	lcd_draw_string@x,lcd_draw_char@x
 11164  0031F2  C080  F06A         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 11165  0031F6  C081  F06B         	movff	lcd_draw_string@y,lcd_draw_char@y
 11166  0031FA  C082  F06C         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 11167  0031FE  C08F  F06D         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 11168  003202  C090  F06E         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 11169  003206  C085  F06F         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 11170  00320A  C086  F070         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 11171  00320E  C087  F071         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 11172  003212  C088  F072         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 11173  003216  ECCD  F015         	call	_lcd_draw_char	;wreg free
 11174  00321A                     
 11175                           ;lib_ili9341.c: 394:         x += font[lIndex];
 11176  00321A  90D8               	bcf	status,0,c
 11177  00321C  0100               	movlb	0	; () banked
 11178  00321E  358F               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 11179  003220  6EF6               	movwf	tblptrl,c
 11180  003222  3590               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 11181  003224  6EF7               	movwf	tblptrh,c
 11182  003226  0EDF               	movlw	low _font
 11183  003228  26F6               	addwf	tblptrl,f,c
 11184  00322A  0EF1               	movlw	high _font
 11185  00322C  22F7               	addwfc	tblptrh,f,c
 11186  00322E                     	if	1	;There are 3 active tblptr bytes
 11187  00322E  6AF8               	clrf	tblptru,c
 11188  003230  0E00               	movlw	low (__mediumconst shr (0+16))
 11189  003232  22F8               	addwfc	tblptru,f,c
 11190  003234                     	endif
 11191  003234  0009               	tblrd		*+
 11192  003236  CFF5 F089          	movff	tablat,??_lcd_draw_string
 11193  00323A  0009               	tblrd		*+
 11194  00323C  CFF5 F08A          	movff	tablat,??_lcd_draw_string+1
 11195  003240  5189               	movf	??_lcd_draw_string& (0+255),w,b
 11196  003242  277F               	addwf	lcd_draw_string@x& (0+255),f,b
 11197  003244  518A               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 11198  003246  2380               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
 11199  003248                     
 11200                           ; BSR set to: 0
 11201                           ;lib_ili9341.c: 396:         pS++;
 11202  003248  4B83               	infsnz	lcd_draw_string@pS& (0+255),f,b
 11203  00324A  2B84               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
 11204  00324C                     l4776:
 11205                           
 11206                           ;lib_ili9341.c: 384:     while(*pS)
 11207  00324C  C083  FFF6         	movff	lcd_draw_string@pS,tblptrl
 11208  003250  C084  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 11209  003254  0E00               	movlw	low (__mediumconst shr (0+16))
 11210  003256  6EF8               	movwf	tblptru,c
 11211  003258  0E0E               	movlw	(high __ramtop+-1)
 11212  00325A  64F7               	cpfsgt	tblptrh,c
 11213  00325C  D003               	bra	u4807
 11214  00325E  0008               	tblrd		*
 11215  003260  50F5               	movf	tablat,w,c
 11216  003262  D005               	bra	u4800
 11217  003264                     u4807:
 11218  003264  CFF6 FFE1          	movff	tblptrl,fsr1l
 11219  003268  CFF7 FFE2          	movff	tblptrh,fsr1h
 11220  00326C  50E7               	movf	indf1,w,c
 11221  00326E                     u4800:
 11222  00326E  0900               	iorlw	0
 11223  003270  A4D8               	btfss	status,2,c
 11224  003272  EF3D  F019         	goto	u4811
 11225  003276  EF3F  F019         	goto	u4810
 11226  00327A                     u4811:
 11227  00327A  EFA6  F018         	goto	l4762
 11228  00327E                     u4810:
 11229  00327E  0012               	return		;funcret
 11230  003280                     __end_of_lcd_draw_string:
 11231                           	opt callstack 0
 11232                           
 11233 ;; *************** function _lcd_draw_char *****************
 11234 ;; Defined at:
 11235 ;;		line 355 in file "lib_ili9341.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  x               2    9[BANK0 ] unsigned short 
 11238 ;;  y               2   11[BANK0 ] unsigned short 
 11239 ;;  fIndex          2   13[BANK0 ] unsigned short 
 11240 ;;  fg_color        2   15[BANK0 ] unsigned short 
 11241 ;;  bg_color        2   17[BANK0 ] unsigned short 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;  i               1   30[BANK0 ] unsigned char 
 11244 ;;  k               1   29[BANK0 ] unsigned char 
 11245 ;;  j               1   28[BANK0 ] unsigned char 
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1    wreg      void 
 11248 ;; Registers used:
 11249 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11255 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11257 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11258 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11259 ;;Total ram usage:       22 bytes
 11260 ;; Hardware stack levels used:    1
 11261 ;; Hardware stack levels required when called:   14
 11262 ;; This function calls:
 11263 ;;		_lcd_draw_pixel
 11264 ;;		_lcd_set_cursor
 11265 ;; This function is called by:
 11266 ;;		_lcd_draw_string
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text34
 11271  002B9A                     __ptext34:
 11272                           	opt callstack 0
 11273  002B9A                     _lcd_draw_char:
 11274                           	opt callstack 15
 11275  002B9A                     
 11276                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 11277  002B9A  0E00               	movlw	0
 11278  002B9C  0100               	movlb	0	; () banked
 11279  002B9E  6F7C               	movwf	lcd_draw_char@j& (0+255),b
 11280  002BA0  EF71  F016         	goto	l4680
 11281  002BA4                     l4650:
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 11285  002BA4  90D8               	bcf	status,0,c
 11286  002BA6  356D               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 11287  002BA8  6EF6               	movwf	tblptrl,c
 11288  002BAA  356E               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 11289  002BAC  6EF7               	movwf	tblptrh,c
 11290  002BAE  0EDF               	movlw	low _font
 11291  002BB0  26F6               	addwf	tblptrl,f,c
 11292  002BB2  0EF1               	movlw	high _font
 11293  002BB4  22F7               	addwfc	tblptrh,f,c
 11294  002BB6                     	if	1	;There are 3 active tblptr bytes
 11295  002BB6  6AF8               	clrf	tblptru,c
 11296  002BB8  0E00               	movlw	low (__mediumconst shr (0+16))
 11297  002BBA  22F8               	addwfc	tblptru,f,c
 11298  002BBC                     	endif
 11299  002BBC  0009               	tblrd		*+
 11300  002BBE  CFF5 F073          	movff	tablat,??_lcd_draw_char
 11301  002BC2  0009               	tblrd		*+
 11302  002BC4  CFF5 F074          	movff	tablat,??_lcd_draw_char+1
 11303  002BC8  517C               	movf	lcd_draw_char@j& (0+255),w,b
 11304  002BCA  5F73               	subwf	??_lcd_draw_char& (0+255),f,b
 11305  002BCC  0E00               	movlw	0
 11306  002BCE  5B74               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
 11307  002BD0  5169               	movf	lcd_draw_char@x& (0+255),w,b
 11308  002BD2  2573               	addwf	??_lcd_draw_char& (0+255),w,b
 11309  002BD4  6F65               	movwf	lcd_set_cursor@x& (0+255),b
 11310  002BD6  516A               	movf	(lcd_draw_char@x+1)& (0+255),w,b
 11311  002BD8  2174               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
 11312  002BDA  6F66               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 11313  002BDC  C06B  F067         	movff	lcd_draw_char@y,lcd_set_cursor@y
 11314  002BE0  C06C  F068         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 11315  002BE4  ECB1  F01F         	call	_lcd_set_cursor	;wreg free
 11316  002BE8                     
 11317                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 11318  002BE8  0E00               	movlw	0
 11319  002BEA  0100               	movlb	0	; () banked
 11320  002BEC  6F7D               	movwf	lcd_draw_char@k& (0+255),b
 11321  002BEE                     l4658:
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 11325  002BEE  0E00               	movlw	0
 11326  002BF0  6F7E               	movwf	lcd_draw_char@i& (0+255),b
 11327  002BF2                     l4664:
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 11331  002BF2  517C               	movf	lcd_draw_char@j& (0+255),w,b
 11332  002BF4  6F73               	movwf	??_lcd_draw_char& (0+255),b
 11333  002BF6  6B74               	clrf	(??_lcd_draw_char+1)& (0+255),b
 11334  002BF8  90D8               	bcf	status,0,c
 11335  002BFA  3773               	rlcf	??_lcd_draw_char& (0+255),f,b
 11336  002BFC  3774               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
 11337  002BFE  90D8               	bcf	status,0,c
 11338  002C00  356D               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 11339  002C02  6EF6               	movwf	tblptrl,c
 11340  002C04  356E               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 11341  002C06  6EF7               	movwf	tblptrh,c
 11342  002C08  0EDF               	movlw	low _font
 11343  002C0A  26F6               	addwf	tblptrl,f,c
 11344  002C0C  0EF1               	movlw	high _font
 11345  002C0E  22F7               	addwfc	tblptrh,f,c
 11346  002C10                     	if	1	;There are 3 active tblptr bytes
 11347  002C10  6AF8               	clrf	tblptru,c
 11348  002C12  0E00               	movlw	low (__mediumconst shr (0+16))
 11349  002C14  22F8               	addwfc	tblptru,f,c
 11350  002C16                     	endif
 11351  002C16  0009               	tblrd		*+
 11352  002C18  CFF5 F075          	movff	tablat,??_lcd_draw_char+2
 11353  002C1C  0009               	tblrd		*+
 11354  002C1E  CFF5 F076          	movff	tablat,??_lcd_draw_char+3
 11355  002C22  90D8               	bcf	status,0,c
 11356  002C24  3775               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 11357  002C26  3776               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 11358  002C28  5173               	movf	??_lcd_draw_char& (0+255),w,b
 11359  002C2A  5F75               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 11360  002C2C  5174               	movf	(??_lcd_draw_char+1)& (0+255),w,b
 11361  002C2E  5B76               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 11362  002C30  517D               	movf	lcd_draw_char@k& (0+255),w,b
 11363  002C32  5F75               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 11364  002C34  0E00               	movlw	0
 11365  002C36  5B76               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 11366  002C38  516D               	movf	lcd_draw_char@fIndex& (0+255),w,b
 11367  002C3A  2775               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
 11368  002C3C  516E               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 11369  002C3E  2376               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
 11370  002C40  90D8               	bcf	status,0,c
 11371  002C42  3775               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 11372  002C44  3776               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 11373  002C46  0EDF               	movlw	low _font
 11374  002C48  2575               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
 11375  002C4A  6EF6               	movwf	tblptrl,c
 11376  002C4C  0EF1               	movlw	high _font
 11377  002C4E  2176               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
 11378  002C50  6EF7               	movwf	tblptrh,c
 11379  002C52                     	if	1	;There are 3 active tblptr bytes
 11380  002C52  6AF8               	clrf	tblptru,c
 11381  002C54  0E00               	movlw	low (__mediumconst shr (0+16))
 11382  002C56  22F8               	addwfc	tblptru,f,c
 11383  002C58                     	endif
 11384  002C58  0009               	tblrd		*+
 11385  002C5A  CFF5 F077          	movff	tablat,??_lcd_draw_char+4
 11386  002C5E  0009               	tblrd		*+
 11387  002C60  CFF5 F078          	movff	tablat,??_lcd_draw_char+5
 11388  002C64  C07E  F079         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 11389  002C68  0E80               	movlw	128
 11390  002C6A  6F7A               	movwf	(??_lcd_draw_char+7)& (0+255),b
 11391  002C6C  0E00               	movlw	0
 11392  002C6E  6F7B               	movwf	(??_lcd_draw_char+8)& (0+255),b
 11393  002C70  2B79               	incf	(??_lcd_draw_char+6)& (0+255),f,b
 11394  002C72  EF3E  F016         	goto	u4644
 11395  002C76                     u4645:
 11396  002C76  357B               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
 11397  002C78  337B               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
 11398  002C7A  337A               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
 11399  002C7C                     u4644:
 11400  002C7C  2F79               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
 11401  002C7E  EF3B  F016         	goto	u4645
 11402  002C82  0100               	movlb	0	; () banked
 11403  002C84  5177               	movf	(??_lcd_draw_char+4)& (0+255),w,b
 11404  002C86  177A               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
 11405  002C88  5178               	movf	(??_lcd_draw_char+5)& (0+255),w,b
 11406  002C8A  177B               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
 11407  002C8C  517A               	movf	(??_lcd_draw_char+7)& (0+255),w,b
 11408  002C8E  117B               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
 11409  002C90  B4D8               	btfsc	status,2,c
 11410  002C92  EF4D  F016         	goto	u4651
 11411  002C96  EF4F  F016         	goto	u4650
 11412  002C9A                     u4651:
 11413  002C9A  EF57  F016         	goto	l4668
 11414  002C9E                     u4650:
 11415  002C9E                     
 11416                           ; BSR set to: 0
 11417                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 11418  002C9E  C06F  F063         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 11419  002CA2  C070  F064         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 11420  002CA6  EC78  F021         	call	_lcd_draw_pixel	;wreg free
 11421                           
 11422                           ;lib_ili9341.c: 370:                 }
 11423  002CAA  EF5D  F016         	goto	l4670
 11424  002CAE                     l4668:
 11425                           
 11426                           ; BSR set to: 0
 11427                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 11428  002CAE  C071  F063         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 11429  002CB2  C072  F064         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 11430  002CB6  EC78  F021         	call	_lcd_draw_pixel	;wreg free
 11431  002CBA                     l4670:
 11432                           
 11433                           ;lib_ili9341.c: 375:             }
 11434  002CBA  0100               	movlb	0	; () banked
 11435  002CBC  2B7E               	incf	lcd_draw_char@i& (0+255),f,b
 11436  002CBE                     
 11437                           ; BSR set to: 0
 11438  002CBE  0E07               	movlw	7
 11439  002CC0  657E               	cpfsgt	lcd_draw_char@i& (0+255),b
 11440  002CC2  EF65  F016         	goto	u4661
 11441  002CC6  EF67  F016         	goto	u4660
 11442  002CCA                     u4661:
 11443  002CCA  EFF9  F015         	goto	l4664
 11444  002CCE                     u4660:
 11445  002CCE                     
 11446                           ; BSR set to: 0
 11447                           ;lib_ili9341.c: 376:         }
 11448  002CCE  2B7D               	incf	lcd_draw_char@k& (0+255),f,b
 11449  002CD0                     
 11450                           ; BSR set to: 0
 11451  002CD0  0E01               	movlw	1
 11452  002CD2  657D               	cpfsgt	lcd_draw_char@k& (0+255),b
 11453  002CD4  EF6E  F016         	goto	u4671
 11454  002CD8  EF70  F016         	goto	u4670
 11455  002CDC                     u4671:
 11456  002CDC  EFF7  F015         	goto	l4658
 11457  002CE0                     u4670:
 11458  002CE0                     
 11459                           ; BSR set to: 0
 11460                           ;lib_ili9341.c: 377:     }
 11461  002CE0  2B7C               	incf	lcd_draw_char@j& (0+255),f,b
 11462  002CE2                     l4680:
 11463                           
 11464                           ; BSR set to: 0
 11465  002CE2  90D8               	bcf	status,0,c
 11466  002CE4  356D               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 11467  002CE6  6EF6               	movwf	tblptrl,c
 11468  002CE8  356E               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 11469  002CEA  6EF7               	movwf	tblptrh,c
 11470  002CEC  0EDF               	movlw	low _font
 11471  002CEE  26F6               	addwf	tblptrl,f,c
 11472  002CF0  0EF1               	movlw	high _font
 11473  002CF2  22F7               	addwfc	tblptrh,f,c
 11474  002CF4                     	if	1	;There are 3 active tblptr bytes
 11475  002CF4  6AF8               	clrf	tblptru,c
 11476  002CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11477  002CF8  22F8               	addwfc	tblptru,f,c
 11478  002CFA                     	endif
 11479  002CFA  517C               	movf	lcd_draw_char@j& (0+255),w,b
 11480  002CFC  6F73               	movwf	??_lcd_draw_char& (0+255),b
 11481  002CFE  6B74               	clrf	(??_lcd_draw_char+1)& (0+255),b
 11482  002D00  0009               	tblrd		*+
 11483  002D02  50F5               	movf	tablat,w,c
 11484  002D04  5D73               	subwf	??_lcd_draw_char& (0+255),w,b
 11485  002D06  0009               	tblrd		*+
 11486  002D08  50F5               	movf	tablat,w,c
 11487  002D0A  5974               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
 11488  002D0C  A0D8               	btfss	status,0,c
 11489  002D0E  EF8B  F016         	goto	u4681
 11490  002D12  EF8D  F016         	goto	u4680
 11491  002D16                     u4681:
 11492  002D16  EFD2  F015         	goto	l4650
 11493  002D1A                     u4680:
 11494  002D1A                     
 11495                           ; BSR set to: 0
 11496  002D1A  0012               	return		;funcret
 11497  002D1C                     __end_of_lcd_draw_char:
 11498                           	opt callstack 0
 11499                           
 11500 ;; *************** function _lcd_set_cursor *****************
 11501 ;; Defined at:
 11502 ;;		line 144 in file "lib_ili9341.c"
 11503 ;; Parameters:    Size  Location     Type
 11504 ;;  x               2    5[BANK0 ] unsigned short 
 11505 ;;  y               2    7[BANK0 ] unsigned short 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      unsigned char 
 11510 ;; Registers used:
 11511 ;;		wreg, status,2, status,0, cstack
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11517 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11520 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11521 ;;Total ram usage:        4 bytes
 11522 ;; Hardware stack levels used:    1
 11523 ;; Hardware stack levels required when called:   13
 11524 ;; This function calls:
 11525 ;;		_lcd_set_cursor_x
 11526 ;;		_lcd_set_cursor_y
 11527 ;; This function is called by:
 11528 ;;		_lcd_fill
 11529 ;;		_lcd_draw_char
 11530 ;;		_lcd_draw_pixel_at
 11531 ;;		_lcd_fill_rect
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text35
 11536  003F62                     __ptext35:
 11537                           	opt callstack 0
 11538  003F62                     _lcd_set_cursor:
 11539                           	opt callstack 15
 11540  003F62                     
 11541                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 11542  003F62  C065  F063         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 11543  003F66  C066  F064         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 11544  003F6A  ECD9  F01E         	call	_lcd_set_cursor_x	;wreg free
 11545  003F6E  0900               	iorlw	0
 11546  003F70  A4D8               	btfss	status,2,c
 11547  003F72  EFBD  F01F         	goto	u4561
 11548  003F76  EFBF  F01F         	goto	u4560
 11549  003F7A                     u4561:
 11550  003F7A  EFCD  F01F         	goto	l4562
 11551  003F7E                     u4560:
 11552  003F7E  C067  F063         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 11553  003F82  C068  F064         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 11554  003F86  ECB2  F01E         	call	_lcd_set_cursor_y	;wreg free
 11555  003F8A  0900               	iorlw	0
 11556  003F8C  B4D8               	btfsc	status,2,c
 11557  003F8E  EFCB  F01F         	goto	u4571
 11558  003F92  EFCD  F01F         	goto	u4570
 11559  003F96                     u4571:
 11560  003F96  EFD0  F01F         	goto	l4566
 11561  003F9A                     u4570:
 11562  003F9A                     l4562:
 11563                           
 11564                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 11565  003F9A  0E01               	movlw	1
 11566  003F9C  EFD1  F01F         	goto	l353
 11567  003FA0                     l4566:
 11568                           
 11569                           ;lib_ili9341.c: 151:     return 0;
 11570  003FA0  0E00               	movlw	0
 11571  003FA2                     l353:
 11572  003FA2  0012               	return		;funcret
 11573  003FA4                     __end_of_lcd_set_cursor:
 11574                           	opt callstack 0
 11575                           
 11576 ;; *************** function _lcd_set_cursor_y *****************
 11577 ;; Defined at:
 11578 ;;		line 170 in file "lib_ili9341.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  y               2    3[BANK0 ] unsigned short 
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;		None
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      unsigned char 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0, cstack
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11592 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11596 ;;Total ram usage:        2 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:   12
 11599 ;; This function calls:
 11600 ;;		_lcd_send
 11601 ;; This function is called by:
 11602 ;;		_lcd_set_cursor
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text36
 11607  003D64                     __ptext36:
 11608                           	opt callstack 0
 11609  003D64                     _lcd_set_cursor_y:
 11610                           	opt callstack 15
 11611  003D64                     
 11612                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 11613  003D64  0100               	movlb	0	; () banked
 11614  003D66  5164               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 11615  003D68  E109               	bnz	u4050
 11616  003D6A  0EF0               	movlw	240
 11617  003D6C  5D63               	subwf	lcd_set_cursor_y@y& (0+255),w,b
 11618  003D6E  A0D8               	btfss	status,0,c
 11619  003D70  EFBC  F01E         	goto	u4051
 11620  003D74  EFBE  F01E         	goto	u4050
 11621  003D78                     u4051:
 11622  003D78  EFC1  F01E         	goto	l4188
 11623  003D7C                     u4050:
 11624  003D7C                     
 11625                           ; BSR set to: 0
 11626                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 11627  003D7C  0E01               	movlw	1
 11628  003D7E  EFD8  F01E         	goto	l361
 11629  003D82                     l4188:
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 11633  003D82  0E2A               	movlw	42
 11634  003D84  6F61               	movwf	lcd_send@value& (0+255),b
 11635  003D86  0E00               	movlw	0
 11636  003D88  EC3F  F021         	call	_lcd_send
 11637                           
 11638                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 11639  003D8C  0100               	movlb	0	; () banked
 11640  003D8E  5164               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 11641  003D90  6F61               	movwf	lcd_send@value& (0+255),b
 11642  003D92  0E01               	movlw	1
 11643  003D94  EC3F  F021         	call	_lcd_send
 11644                           
 11645                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 11646  003D98  C063  F061         	movff	lcd_set_cursor_y@y,lcd_send@value
 11647  003D9C  0E01               	movlw	1
 11648  003D9E  EC3F  F021         	call	_lcd_send
 11649                           
 11650                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 11651  003DA2  0E2C               	movlw	44
 11652  003DA4  0100               	movlb	0	; () banked
 11653  003DA6  6F61               	movwf	lcd_send@value& (0+255),b
 11654  003DA8  0E00               	movlw	0
 11655  003DAA  EC3F  F021         	call	_lcd_send
 11656  003DAE                     
 11657                           ;lib_ili9341.c: 182:     return 0;
 11658  003DAE  0E00               	movlw	0
 11659  003DB0                     l361:
 11660  003DB0  0012               	return		;funcret
 11661  003DB2                     __end_of_lcd_set_cursor_y:
 11662                           	opt callstack 0
 11663                           
 11664 ;; *************** function _lcd_set_cursor_x *****************
 11665 ;; Defined at:
 11666 ;;		line 155 in file "lib_ili9341.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  x               2    3[BANK0 ] unsigned short 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;		None
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  1    wreg      unsigned char 
 11673 ;; Registers used:
 11674 ;;		wreg, status,2, status,0, cstack
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11684 ;;Total ram usage:        2 bytes
 11685 ;; Hardware stack levels used:    1
 11686 ;; Hardware stack levels required when called:   12
 11687 ;; This function calls:
 11688 ;;		_lcd_send
 11689 ;; This function is called by:
 11690 ;;		_lcd_set_cursor
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           	psect	text37
 11695  003DB2                     __ptext37:
 11696                           	opt callstack 0
 11697  003DB2                     _lcd_set_cursor_x:
 11698                           	opt callstack 15
 11699  003DB2                     
 11700                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 11701  003DB2  0E40               	movlw	64
 11702  003DB4  0100               	movlb	0	; () banked
 11703  003DB6  5D63               	subwf	lcd_set_cursor_x@x& (0+255),w,b
 11704  003DB8  0E01               	movlw	1
 11705  003DBA  5964               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
 11706  003DBC  A0D8               	btfss	status,0,c
 11707  003DBE  EFE3  F01E         	goto	u4041
 11708  003DC2  EFE5  F01E         	goto	u4040
 11709  003DC6                     u4041:
 11710  003DC6  EFE8  F01E         	goto	l4176
 11711  003DCA                     u4040:
 11712  003DCA                     
 11713                           ; BSR set to: 0
 11714                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 11715  003DCA  0E01               	movlw	1
 11716  003DCC  EFFF  F01E         	goto	l357
 11717  003DD0                     l4176:
 11718                           
 11719                           ; BSR set to: 0
 11720                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 11721  003DD0  0E2B               	movlw	43
 11722  003DD2  6F61               	movwf	lcd_send@value& (0+255),b
 11723  003DD4  0E00               	movlw	0
 11724  003DD6  EC3F  F021         	call	_lcd_send
 11725                           
 11726                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 11727  003DDA  0100               	movlb	0	; () banked
 11728  003DDC  5164               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
 11729  003DDE  6F61               	movwf	lcd_send@value& (0+255),b
 11730  003DE0  0E01               	movlw	1
 11731  003DE2  EC3F  F021         	call	_lcd_send
 11732                           
 11733                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 11734  003DE6  C063  F061         	movff	lcd_set_cursor_x@x,lcd_send@value
 11735  003DEA  0E01               	movlw	1
 11736  003DEC  EC3F  F021         	call	_lcd_send
 11737                           
 11738                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 11739  003DF0  0E2C               	movlw	44
 11740  003DF2  0100               	movlb	0	; () banked
 11741  003DF4  6F61               	movwf	lcd_send@value& (0+255),b
 11742  003DF6  0E00               	movlw	0
 11743  003DF8  EC3F  F021         	call	_lcd_send
 11744  003DFC                     
 11745                           ;lib_ili9341.c: 167:     return 0;
 11746  003DFC  0E00               	movlw	0
 11747  003DFE                     l357:
 11748  003DFE  0012               	return		;funcret
 11749  003E00                     __end_of_lcd_set_cursor_x:
 11750                           	opt callstack 0
 11751                           
 11752 ;; *************** function _lcd_draw_pixel *****************
 11753 ;; Defined at:
 11754 ;;		line 185 in file "lib_ili9341.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;  color           2    3[BANK0 ] unsigned short 
 11757 ;; Auto vars:     Size  Location     Type
 11758 ;;		None
 11759 ;; Return value:  Size  Location     Type
 11760 ;;                  1    wreg      unsigned char 
 11761 ;; Registers used:
 11762 ;;		wreg, status,2, cstack
 11763 ;; Tracked objects:
 11764 ;;		On entry : 0/0
 11765 ;;		On exit  : 0/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11772 ;;Total ram usage:        2 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; Hardware stack levels required when called:   12
 11775 ;; This function calls:
 11776 ;;		_lcd_send
 11777 ;; This function is called by:
 11778 ;;		_lcd_fill
 11779 ;;		_lcd_draw_char
 11780 ;;		_lcd_draw_pixel_at
 11781 ;;		_lcd_fill_rect
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text38
 11786  0042F0                     __ptext38:
 11787                           	opt callstack 0
 11788  0042F0                     _lcd_draw_pixel:
 11789                           	opt callstack 16
 11790  0042F0                     
 11791                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 11792  0042F0  0100               	movlb	0	; () banked
 11793  0042F2  5164               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
 11794  0042F4  6F61               	movwf	lcd_send@value& (0+255),b
 11795  0042F6  0E01               	movlw	1
 11796  0042F8  EC3F  F021         	call	_lcd_send
 11797                           
 11798                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 11799  0042FC  C063  F061         	movff	lcd_draw_pixel@color,lcd_send@value
 11800  004300  0E01               	movlw	1
 11801  004302  EC3F  F021         	call	_lcd_send
 11802  004306  0012               	return		;funcret
 11803  004308                     __end_of_lcd_draw_pixel:
 11804                           	opt callstack 0
 11805                           
 11806 ;; *************** function _lcd_send *****************
 11807 ;; Defined at:
 11808 ;;		line 134 in file "lib_ili9341.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  dc              1    wreg     _Bool 
 11811 ;;  value           1    1[BANK0 ] unsigned char 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  dc              1    2[BANK0 ] _Bool 
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, cstack
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11823 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11827 ;;Total ram usage:        2 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:   11
 11830 ;; This function calls:
 11831 ;;		_SPI_ExchangeByte
 11832 ;; This function is called by:
 11833 ;;		_lcd_init
 11834 ;;		_lcd_set_cursor_x
 11835 ;;		_lcd_set_cursor_y
 11836 ;;		_lcd_draw_pixel
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text39
 11841  00427E                     __ptext39:
 11842                           	opt callstack 0
 11843  00427E                     _lcd_send:
 11844                           	opt callstack 18
 11845                           
 11846                           ;incstack = 0
 11847                           ;lcd_send@dc stored from wreg
 11848  00427E  0100               	movlb	0	; () banked
 11849  004280  6F62               	movwf	lcd_send@dc& (0+255),b
 11850  004282                     
 11851                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 11852  004282  0100               	movlb	0	; () banked
 11853  004284  B162               	btfsc	lcd_send@dc& (0+255),0,b
 11854  004286  D002               	bra	u3275
 11855  004288  908D               	bcf	141,0,c	;volatile
 11856  00428A  D001               	bra	u3276
 11857  00428C                     u3275:
 11858  00428C  808D               	bsf	141,0,c	;volatile
 11859  00428E                     u3276:
 11860  00428E                     
 11861                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 11862  00428E  928D               	bcf	141,1,c	;volatile
 11863  004290                     
 11864                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 11865  004290  0100               	movlb	0	; () banked
 11866  004292  5161               	movf	lcd_send@value& (0+255),w,b
 11867  004294  EC5D  F021         	call	_SPI_ExchangeByte
 11868  004298                     
 11869                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 11870  004298  828D               	bsf	141,1,c	;volatile
 11871  00429A  0012               	return		;funcret
 11872  00429C                     __end_of_lcd_send:
 11873                           	opt callstack 0
 11874                           
 11875 ;; *************** function _SPI_ExchangeByte *****************
 11876 ;; Defined at:
 11877 ;;		line 92 in file "mcc_generated_files/spi.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  data            1    wreg     unsigned char 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  data            1    0[BANK0 ] unsigned char 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      unsigned char 
 11884 ;; Registers used:
 11885 ;;		wreg, status,2
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11895 ;;Total ram usage:        1 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:   10
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_lcd_send
 11902 ;;		_SPI_WriteBlock
 11903 ;;		_SPI_ReadBlock
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           	psect	text40
 11908  0042BA                     __ptext40:
 11909                           	opt callstack 0
 11910  0042BA                     _SPI_ExchangeByte:
 11911                           	opt callstack 18
 11912                           
 11913                           ;incstack = 0
 11914                           ;SPI_ExchangeByte@data stored from wreg
 11915  0042BA  0100               	movlb	0	; () banked
 11916  0042BC  6F60               	movwf	SPI_ExchangeByte@data& (0+255),b
 11917  0042BE                     
 11918                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 11919  0042BE  C060  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 11920  0042C2                     l136:
 11921  0042C2  A69E               	btfss	158,3,c	;volatile
 11922  0042C4  EF66  F021         	goto	u2891
 11923  0042C8  EF68  F021         	goto	u2890
 11924  0042CC                     u2891:
 11925  0042CC  EF61  F021         	goto	l136
 11926  0042D0                     u2890:
 11927  0042D0                     
 11928                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 11929  0042D0  969E               	bcf	158,3,c	;volatile
 11930                           
 11931                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 11932  0042D2  50C9               	movf	201,w,c	;volatile
 11933  0042D4  0012               	return		;funcret
 11934  0042D6                     __end_of_SPI_ExchangeByte:
 11935                           	opt callstack 0
 11936                           
 11937 ;; *************** function ___xxtofl *****************
 11938 ;; Defined at:
 11939 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  sign            1    wreg     unsigned char 
 11942 ;;  val             4    0[BANK0 ] long 
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;  sign            1    8[BANK0 ] unsigned char 
 11945 ;;  arg             4   10[BANK0 ] unsigned long 
 11946 ;;  exp             1    9[BANK0 ] unsigned char 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  4    0[BANK0 ] unsigned char 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11956 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11957 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11958 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11959 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11960 ;;Total ram usage:       14 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:   10
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_main
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           	psect	text41
 11971  00252E                     __ptext41:
 11972                           	opt callstack 0
 11973  00252E                     ___xxtofl:
 11974                           	opt callstack 20
 11975                           
 11976                           ;incstack = 0
 11977                           ;___xxtofl@sign stored from wreg
 11978  00252E  0100               	movlb	0	; () banked
 11979  002530  6F68               	movwf	___xxtofl@sign& (0+255),b
 11980  002532  0100               	movlb	0	; () banked
 11981  002534  5168               	movf	___xxtofl@sign& (0+255),w,b
 11982  002536  B4D8               	btfsc	status,2,c
 11983  002538  EFA0  F012         	goto	u5161
 11984  00253C  EFA2  F012         	goto	u5160
 11985  002540                     u5161:
 11986  002540  EFC4  F012         	goto	l1371
 11987  002544                     u5160:
 11988  002544                     
 11989                           ; BSR set to: 0
 11990  002544  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 11991  002546  EFA9  F012         	goto	u5170
 11992  00254A  EFA7  F012         	goto	u5171
 11993  00254E                     u5171:
 11994  00254E  EFC4  F012         	goto	l1371
 11995  002552                     u5170:
 11996  002552                     
 11997                           ; BSR set to: 0
 11998  002552  C060  F064         	movff	___xxtofl@val,??___xxtofl
 11999  002556  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 12000  00255A  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 12001  00255E  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 12002  002562  1F64               	comf	??___xxtofl& (0+255),f,b
 12003  002564  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 12004  002566  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 12005  002568  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 12006  00256A  2B64               	incf	??___xxtofl& (0+255),f,b
 12007  00256C  0E00               	movlw	0
 12008  00256E  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 12009  002570  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 12010  002572  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 12011  002574  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 12012  002578  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 12013  00257C  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 12014  002580  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 12015  002584  EFCC  F012         	goto	l5182
 12016  002588                     l1371:
 12017                           
 12018                           ; BSR set to: 0
 12019  002588  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 12020  00258C  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12021  002590  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12022  002594  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12023  002598                     l5182:
 12024                           
 12025                           ; BSR set to: 0
 12026  002598  5160               	movf	___xxtofl@val& (0+255),w,b
 12027  00259A  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 12028  00259C  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 12029  00259E  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 12030  0025A0  A4D8               	btfss	status,2,c
 12031  0025A2  EFD5  F012         	goto	u5181
 12032  0025A6  EFD7  F012         	goto	u5180
 12033  0025AA                     u5181:
 12034  0025AA  EFE1  F012         	goto	l5188
 12035  0025AE                     u5180:
 12036  0025AE                     
 12037                           ; BSR set to: 0
 12038  0025AE  0E00               	movlw	0
 12039  0025B0  6F60               	movwf	?___xxtofl& (0+255),b
 12040  0025B2  0E00               	movlw	0
 12041  0025B4  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 12042  0025B6  0E00               	movlw	0
 12043  0025B8  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 12044  0025BA  0E00               	movlw	0
 12045  0025BC  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 12046  0025BE  EF72  F013         	goto	l1374
 12047  0025C2                     l5188:
 12048                           
 12049                           ; BSR set to: 0
 12050  0025C2  0E96               	movlw	150
 12051  0025C4  6F69               	movwf	___xxtofl@exp& (0+255),b
 12052  0025C6  EFEB  F012         	goto	l5192
 12053  0025CA                     l5190:
 12054                           
 12055                           ; BSR set to: 0
 12056  0025CA  2B69               	incf	___xxtofl@exp& (0+255),f,b
 12057  0025CC  90D8               	bcf	status,0,c
 12058  0025CE  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12059  0025D0  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12060  0025D2  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12061  0025D4  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 12062  0025D6                     l5192:
 12063                           
 12064                           ; BSR set to: 0
 12065  0025D6  0E00               	movlw	0
 12066  0025D8  156A               	andwf	___xxtofl@arg& (0+255),w,b
 12067  0025DA  6F64               	movwf	??___xxtofl& (0+255),b
 12068  0025DC  0E00               	movlw	0
 12069  0025DE  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12070  0025E0  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 12071  0025E2  0E00               	movlw	0
 12072  0025E4  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12073  0025E6  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 12074  0025E8  0EFE               	movlw	254
 12075  0025EA  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12076  0025EC  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 12077  0025EE  5164               	movf	??___xxtofl& (0+255),w,b
 12078  0025F0  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12079  0025F2  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12080  0025F4  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12081  0025F6  A4D8               	btfss	status,2,c
 12082  0025F8  EF00  F013         	goto	u5191
 12083  0025FC  EF02  F013         	goto	u5190
 12084  002600                     u5191:
 12085  002600  EFE5  F012         	goto	l5190
 12086  002604                     u5190:
 12087  002604  EF10  F013         	goto	l1378
 12088  002608                     l5194:
 12089                           
 12090                           ; BSR set to: 0
 12091  002608  2B69               	incf	___xxtofl@exp& (0+255),f,b
 12092  00260A                     
 12093                           ; BSR set to: 0
 12094  00260A  0E01               	movlw	1
 12095  00260C  276A               	addwf	___xxtofl@arg& (0+255),f,b
 12096  00260E  0E00               	movlw	0
 12097  002610  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 12098  002612  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 12099  002614  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 12100  002616                     
 12101                           ; BSR set to: 0
 12102  002616  90D8               	bcf	status,0,c
 12103  002618  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12104  00261A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12105  00261C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12106  00261E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 12107  002620                     l1378:
 12108                           
 12109                           ; BSR set to: 0
 12110  002620  0E00               	movlw	0
 12111  002622  156A               	andwf	___xxtofl@arg& (0+255),w,b
 12112  002624  6F64               	movwf	??___xxtofl& (0+255),b
 12113  002626  0E00               	movlw	0
 12114  002628  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12115  00262A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 12116  00262C  0E00               	movlw	0
 12117  00262E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12118  002630  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 12119  002632  0EFF               	movlw	255
 12120  002634  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12121  002636  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 12122  002638  5164               	movf	??___xxtofl& (0+255),w,b
 12123  00263A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12124  00263C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12125  00263E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12126  002640  A4D8               	btfss	status,2,c
 12127  002642  EF25  F013         	goto	u5201
 12128  002646  EF27  F013         	goto	u5200
 12129  00264A                     u5201:
 12130  00264A  EF04  F013         	goto	l5194
 12131  00264E                     u5200:
 12132  00264E  EF2F  F013         	goto	l5202
 12133  002652                     l5200:
 12134                           
 12135                           ; BSR set to: 0
 12136  002652  0769               	decf	___xxtofl@exp& (0+255),f,b
 12137  002654  90D8               	bcf	status,0,c
 12138  002656  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 12139  002658  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 12140  00265A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 12141  00265C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 12142  00265E                     l5202:
 12143                           
 12144                           ; BSR set to: 0
 12145  00265E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 12146  002660  EF34  F013         	goto	u5211
 12147  002664  EF36  F013         	goto	u5210
 12148  002668                     u5211:
 12149  002668  EF3E  F013         	goto	l1385
 12150  00266C                     u5210:
 12151  00266C                     
 12152                           ; BSR set to: 0
 12153  00266C  0E02               	movlw	2
 12154  00266E  6169               	cpfslt	___xxtofl@exp& (0+255),b
 12155  002670  EF3C  F013         	goto	u5221
 12156  002674  EF3E  F013         	goto	u5220
 12157  002678                     u5221:
 12158  002678  EF29  F013         	goto	l5200
 12159  00267C                     u5220:
 12160  00267C                     l1385:
 12161                           
 12162                           ; BSR set to: 0
 12163  00267C  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 12164  00267E  EF43  F013         	goto	u5231
 12165  002682  EF45  F013         	goto	u5230
 12166  002686                     u5231:
 12167  002686  EF46  F013         	goto	l5208
 12168  00268A                     u5230:
 12169  00268A                     
 12170                           ; BSR set to: 0
 12171  00268A  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 12172  00268C                     l5208:
 12173                           
 12174                           ; BSR set to: 0
 12175  00268C  90D8               	bcf	status,0,c
 12176  00268E  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 12177  002690                     
 12178                           ; BSR set to: 0
 12179  002690  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 12180  002694  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 12181  002696  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 12182  002698  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 12183  00269A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 12184  00269E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 12185  0026A0  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 12186  0026A2  6B64               	clrf	??___xxtofl& (0+255),b
 12187  0026A4  5164               	movf	??___xxtofl& (0+255),w,b
 12188  0026A6  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 12189  0026A8  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 12190  0026AA  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 12191  0026AC  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 12192  0026AE  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 12193  0026B0  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 12194  0026B2  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 12195  0026B4                     
 12196                           ; BSR set to: 0
 12197  0026B4  5168               	movf	___xxtofl@sign& (0+255),w,b
 12198  0026B6  B4D8               	btfsc	status,2,c
 12199  0026B8  EF60  F013         	goto	u5241
 12200  0026BC  EF62  F013         	goto	u5240
 12201  0026C0                     u5241:
 12202  0026C0  EF6A  F013         	goto	l5218
 12203  0026C4                     u5240:
 12204  0026C4                     
 12205                           ; BSR set to: 0
 12206  0026C4  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 12207  0026C6  EF69  F013         	goto	u5250
 12208  0026CA  EF67  F013         	goto	u5251
 12209  0026CE                     u5251:
 12210  0026CE  EF6A  F013         	goto	l5218
 12211  0026D2                     u5250:
 12212  0026D2                     
 12213                           ; BSR set to: 0
 12214  0026D2  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 12215  0026D4                     l5218:
 12216                           
 12217                           ; BSR set to: 0
 12218  0026D4  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 12219  0026D8  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 12220  0026DC  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 12221  0026E0  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 12222  0026E4                     l1374:
 12223                           
 12224                           ; BSR set to: 0
 12225  0026E4  0012               	return		;funcret
 12226  0026E6                     __end_of___xxtofl:
 12227                           	opt callstack 0
 12228                           
 12229 ;; *************** function ___fltol *****************
 12230 ;; Defined at:
 12231 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  f1              4   39[BANK0 ] unsigned char 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;  exp1            1   48[BANK0 ] unsigned char 
 12236 ;;  sign1           1   47[BANK0 ] unsigned char 
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  4   39[BANK0 ] long 
 12239 ;; Registers used:
 12240 ;;		wreg, status,2, status,0
 12241 ;; Tracked objects:
 12242 ;;		On entry : 0/0
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12246 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12248 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12249 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12250 ;;Total ram usage:       10 bytes
 12251 ;; Hardware stack levels used:    1
 12252 ;; Hardware stack levels required when called:   10
 12253 ;; This function calls:
 12254 ;;		Nothing
 12255 ;; This function is called by:
 12256 ;;		_main
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           	psect	text42
 12261  0034C2                     __ptext42:
 12262                           	opt callstack 0
 12263  0034C2                     ___fltol:
 12264                           	opt callstack 20
 12265  0034C2  0100               	movlb	0	; () banked
 12266  0034C4  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12267  0034C6  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12268  0034C8  6F90               	movwf	___fltol@exp1& (0+255),b
 12269  0034CA  5190               	movf	___fltol@exp1& (0+255),w,b
 12270  0034CC  A4D8               	btfss	status,2,c
 12271  0034CE  EF6B  F01A         	goto	u5091
 12272  0034D2  EF6D  F01A         	goto	u5090
 12273  0034D6                     u5091:
 12274  0034D6  EF77  F01A         	goto	l5138
 12275  0034DA                     u5090:
 12276  0034DA                     l5134:
 12277                           
 12278                           ; BSR set to: 0
 12279  0034DA  0E00               	movlw	0
 12280  0034DC  6F87               	movwf	?___fltol& (0+255),b
 12281  0034DE  0E00               	movlw	0
 12282  0034E0  6F88               	movwf	(?___fltol+1)& (0+255),b
 12283  0034E2  0E00               	movlw	0
 12284  0034E4  6F89               	movwf	(?___fltol+2)& (0+255),b
 12285  0034E6  0E00               	movlw	0
 12286  0034E8  6F8A               	movwf	(?___fltol+3)& (0+255),b
 12287  0034EA  EFE4  F01A         	goto	l1013
 12288  0034EE                     l5138:
 12289                           
 12290                           ; BSR set to: 0
 12291  0034EE  C087  F08B         	movff	___fltol@f1,??___fltol
 12292  0034F2  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
 12293  0034F6  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
 12294  0034FA  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
 12295  0034FE  0E20               	movlw	32
 12296  003500  EF87  F01A         	goto	u5100
 12297  003504                     u5105:
 12298  003504  90D8               	bcf	status,0,c
 12299  003506  338E               	rrcf	(??___fltol+3)& (0+255),f,b
 12300  003508  338D               	rrcf	(??___fltol+2)& (0+255),f,b
 12301  00350A  338C               	rrcf	(??___fltol+1)& (0+255),f,b
 12302  00350C  338B               	rrcf	??___fltol& (0+255),f,b
 12303  00350E                     u5100:
 12304  00350E  2EE8               	decfsz	wreg,f,c
 12305  003510  EF82  F01A         	goto	u5105
 12306  003514  518B               	movf	??___fltol& (0+255),w,b
 12307  003516  6F8F               	movwf	___fltol@sign1& (0+255),b
 12308  003518                     
 12309                           ; BSR set to: 0
 12310  003518  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
 12311  00351A                     
 12312                           ; BSR set to: 0
 12313  00351A  0EFF               	movlw	255
 12314  00351C  1787               	andwf	___fltol@f1& (0+255),f,b
 12315  00351E  0EFF               	movlw	255
 12316  003520  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
 12317  003522  0EFF               	movlw	255
 12318  003524  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
 12319  003526  0E00               	movlw	0
 12320  003528  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
 12321  00352A                     
 12322                           ; BSR set to: 0
 12323  00352A  0E96               	movlw	150
 12324  00352C  5F90               	subwf	___fltol@exp1& (0+255),f,b
 12325  00352E                     
 12326                           ; BSR set to: 0
 12327  00352E  BF90               	btfsc	___fltol@exp1& (0+255),7,b
 12328  003530  EF9E  F01A         	goto	u5110
 12329  003534  EF9C  F01A         	goto	u5111
 12330  003538                     u5111:
 12331  003538  EFB4  F01A         	goto	l5158
 12332  00353C                     u5110:
 12333  00353C                     
 12334                           ; BSR set to: 0
 12335  00353C  5190               	movf	___fltol@exp1& (0+255),w,b
 12336  00353E  0A80               	xorlw	128
 12337  003540  0F97               	addlw	151
 12338  003542  B0D8               	btfsc	status,0,c
 12339  003544  EFA6  F01A         	goto	u5121
 12340  003548  EFA8  F01A         	goto	u5120
 12341  00354C                     u5121:
 12342  00354C  EFAA  F01A         	goto	l5154
 12343  003550                     u5120:
 12344  003550  EF6D  F01A         	goto	l5134
 12345  003554                     l5154:
 12346                           
 12347                           ; BSR set to: 0
 12348  003554  90D8               	bcf	status,0,c
 12349  003556  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12350  003558  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12351  00355A  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12352  00355C  3387               	rrcf	___fltol@f1& (0+255),f,b
 12353  00355E                     
 12354                           ; BSR set to: 0
 12355  00355E  3F90               	incfsz	___fltol@exp1& (0+255),f,b
 12356  003560  EFAA  F01A         	goto	l5154
 12357  003564  EFCC  F01A         	goto	l5168
 12358  003568                     l5158:
 12359                           
 12360                           ; BSR set to: 0
 12361  003568  0E1F               	movlw	31
 12362  00356A  6590               	cpfsgt	___fltol@exp1& (0+255),b
 12363  00356C  EFBA  F01A         	goto	u5131
 12364  003570  EFBC  F01A         	goto	u5130
 12365  003574                     u5131:
 12366  003574  EFC4  F01A         	goto	l5166
 12367  003578                     u5130:
 12368  003578  EF6D  F01A         	goto	l5134
 12369  00357C                     l5164:
 12370                           
 12371                           ; BSR set to: 0
 12372  00357C  90D8               	bcf	status,0,c
 12373  00357E  3787               	rlcf	___fltol@f1& (0+255),f,b
 12374  003580  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12375  003582  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12376  003584  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12377  003586  0790               	decf	___fltol@exp1& (0+255),f,b
 12378  003588                     l5166:
 12379                           
 12380                           ; BSR set to: 0
 12381  003588  5190               	movf	___fltol@exp1& (0+255),w,b
 12382  00358A  A4D8               	btfss	status,2,c
 12383  00358C  EFCA  F01A         	goto	u5141
 12384  003590  EFCC  F01A         	goto	u5140
 12385  003594                     u5141:
 12386  003594  EFBE  F01A         	goto	l5164
 12387  003598                     u5140:
 12388  003598                     l5168:
 12389                           
 12390                           ; BSR set to: 0
 12391  003598  518F               	movf	___fltol@sign1& (0+255),w,b
 12392  00359A  B4D8               	btfsc	status,2,c
 12393  00359C  EFD2  F01A         	goto	u5151
 12394  0035A0  EFD4  F01A         	goto	u5150
 12395  0035A4                     u5151:
 12396  0035A4  EFDC  F01A         	goto	l5172
 12397  0035A8                     u5150:
 12398  0035A8                     
 12399                           ; BSR set to: 0
 12400  0035A8  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
 12401  0035AA  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
 12402  0035AC  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
 12403  0035AE  6D87               	negf	___fltol@f1& (0+255),b
 12404  0035B0  0E00               	movlw	0
 12405  0035B2  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12406  0035B4  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12407  0035B6  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12408  0035B8                     l5172:
 12409                           
 12410                           ; BSR set to: 0
 12411  0035B8  C087  F087         	movff	___fltol@f1,?___fltol
 12412  0035BC  C088  F088         	movff	___fltol@f1+1,?___fltol+1
 12413  0035C0  C089  F089         	movff	___fltol@f1+2,?___fltol+2
 12414  0035C4  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
 12415  0035C8                     l1013:
 12416                           
 12417                           ; BSR set to: 0
 12418  0035C8  0012               	return		;funcret
 12419  0035CA                     __end_of___fltol:
 12420                           	opt callstack 0
 12421                           
 12422 ;; *************** function ___flmul *****************
 12423 ;; Defined at:
 12424 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;  b               4   14[BANK0 ] long 
 12427 ;;  a               4   18[BANK0 ] long 
 12428 ;; Auto vars:     Size  Location     Type
 12429 ;;  prod            4   33[BANK0 ] struct .
 12430 ;;  grs             4   27[BANK0 ] unsigned long 
 12431 ;;  temp            2   37[BANK0 ] struct .
 12432 ;;  bexp            1   32[BANK0 ] unsigned char 
 12433 ;;  aexp            1   31[BANK0 ] unsigned char 
 12434 ;;  sign            1   26[BANK0 ] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  4   14[BANK0 ] unsigned char 
 12437 ;; Registers used:
 12438 ;;		wreg, status,2, status,0, prodl, prodh
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12444 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;Total ram usage:       25 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:   10
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_main
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text43
 12459  001750                     __ptext43:
 12460                           	opt callstack 0
 12461  001750                     ___flmul:
 12462                           	opt callstack 20
 12463  001750  0100               	movlb	0	; () banked
 12464  001752  5171               	movf	(___flmul@b+3)& (0+255),w,b
 12465  001754  0B80               	andlw	128
 12466  001756  6F7A               	movwf	___flmul@sign& (0+255),b
 12467  001758  5171               	movf	(___flmul@b+3)& (0+255),w,b
 12468  00175A  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 12469  00175C  6F80               	movwf	___flmul@bexp& (0+255),b
 12470  00175E                     
 12471                           ; BSR set to: 0
 12472  00175E  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 12473  001760  EFB4  F00B         	goto	u4901
 12474  001764  EFB6  F00B         	goto	u4900
 12475  001768                     u4901:
 12476  001768  EFB7  F00B         	goto	l5008
 12477  00176C                     u4900:
 12478  00176C                     
 12479                           ; BSR set to: 0
 12480  00176C  8180               	bsf	___flmul@bexp& (0+255),0,b
 12481  00176E                     l5008:
 12482                           
 12483                           ; BSR set to: 0
 12484  00176E  5180               	movf	___flmul@bexp& (0+255),w,b
 12485  001770  B4D8               	btfsc	status,2,c
 12486  001772  EFBD  F00B         	goto	u4911
 12487  001776  EFBF  F00B         	goto	u4910
 12488  00177A                     u4911:
 12489  00177A  EFD2  F00B         	goto	l5016
 12490  00177E                     u4910:
 12491  00177E                     
 12492                           ; BSR set to: 0
 12493  00177E  2980               	incf	___flmul@bexp& (0+255),w,b
 12494  001780  A4D8               	btfss	status,2,c
 12495  001782  EFC5  F00B         	goto	u4921
 12496  001786  EFC7  F00B         	goto	u4920
 12497  00178A                     u4921:
 12498  00178A  EFCF  F00B         	goto	l5014
 12499  00178E                     u4920:
 12500  00178E                     
 12501                           ; BSR set to: 0
 12502  00178E  0E00               	movlw	0
 12503  001790  6F6E               	movwf	___flmul@b& (0+255),b
 12504  001792  0E00               	movlw	0
 12505  001794  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 12506  001796  0E00               	movlw	0
 12507  001798  6F70               	movwf	(___flmul@b+2)& (0+255),b
 12508  00179A  0E00               	movlw	0
 12509  00179C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 12510  00179E                     l5014:
 12511                           
 12512                           ; BSR set to: 0
 12513  00179E  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 12514  0017A0  EFDA  F00B         	goto	l5018
 12515  0017A4                     l5016:
 12516                           
 12517                           ; BSR set to: 0
 12518  0017A4  0E00               	movlw	0
 12519  0017A6  6F6E               	movwf	___flmul@b& (0+255),b
 12520  0017A8  0E00               	movlw	0
 12521  0017AA  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 12522  0017AC  0E00               	movlw	0
 12523  0017AE  6F70               	movwf	(___flmul@b+2)& (0+255),b
 12524  0017B0  0E00               	movlw	0
 12525  0017B2  6F71               	movwf	(___flmul@b+3)& (0+255),b
 12526  0017B4                     l5018:
 12527                           
 12528                           ; BSR set to: 0
 12529  0017B4  5175               	movf	(___flmul@a+3)& (0+255),w,b
 12530  0017B6  0B80               	andlw	128
 12531  0017B8  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 12532  0017BA                     
 12533                           ; BSR set to: 0
 12534  0017BA  5175               	movf	(___flmul@a+3)& (0+255),w,b
 12535  0017BC  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 12536  0017BE  6F7F               	movwf	___flmul@aexp& (0+255),b
 12537  0017C0                     
 12538                           ; BSR set to: 0
 12539  0017C0  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 12540  0017C2  EFE5  F00B         	goto	u4931
 12541  0017C6  EFE7  F00B         	goto	u4930
 12542  0017CA                     u4931:
 12543  0017CA  EFE8  F00B         	goto	l5026
 12544  0017CE                     u4930:
 12545  0017CE                     
 12546                           ; BSR set to: 0
 12547  0017CE  817F               	bsf	___flmul@aexp& (0+255),0,b
 12548  0017D0                     l5026:
 12549                           
 12550                           ; BSR set to: 0
 12551  0017D0  517F               	movf	___flmul@aexp& (0+255),w,b
 12552  0017D2  B4D8               	btfsc	status,2,c
 12553  0017D4  EFEE  F00B         	goto	u4941
 12554  0017D8  EFF0  F00B         	goto	u4940
 12555  0017DC                     u4941:
 12556  0017DC  EF03  F00C         	goto	l5034
 12557  0017E0                     u4940:
 12558  0017E0                     
 12559                           ; BSR set to: 0
 12560  0017E0  297F               	incf	___flmul@aexp& (0+255),w,b
 12561  0017E2  A4D8               	btfss	status,2,c
 12562  0017E4  EFF6  F00B         	goto	u4951
 12563  0017E8  EFF8  F00B         	goto	u4950
 12564  0017EC                     u4951:
 12565  0017EC  EF00  F00C         	goto	l5032
 12566  0017F0                     u4950:
 12567  0017F0                     
 12568                           ; BSR set to: 0
 12569  0017F0  0E00               	movlw	0
 12570  0017F2  6F72               	movwf	___flmul@a& (0+255),b
 12571  0017F4  0E00               	movlw	0
 12572  0017F6  6F73               	movwf	(___flmul@a+1)& (0+255),b
 12573  0017F8  0E00               	movlw	0
 12574  0017FA  6F74               	movwf	(___flmul@a+2)& (0+255),b
 12575  0017FC  0E00               	movlw	0
 12576  0017FE  6F75               	movwf	(___flmul@a+3)& (0+255),b
 12577  001800                     l5032:
 12578                           
 12579                           ; BSR set to: 0
 12580  001800  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 12581  001802  EF0B  F00C         	goto	l1330
 12582  001806                     l5034:
 12583                           
 12584                           ; BSR set to: 0
 12585  001806  0E00               	movlw	0
 12586  001808  6F72               	movwf	___flmul@a& (0+255),b
 12587  00180A  0E00               	movlw	0
 12588  00180C  6F73               	movwf	(___flmul@a+1)& (0+255),b
 12589  00180E  0E00               	movlw	0
 12590  001810  6F74               	movwf	(___flmul@a+2)& (0+255),b
 12591  001812  0E00               	movlw	0
 12592  001814  6F75               	movwf	(___flmul@a+3)& (0+255),b
 12593  001816                     l1330:
 12594                           
 12595                           ; BSR set to: 0
 12596  001816  517F               	movf	___flmul@aexp& (0+255),w,b
 12597  001818  B4D8               	btfsc	status,2,c
 12598  00181A  EF11  F00C         	goto	u4961
 12599  00181E  EF13  F00C         	goto	u4960
 12600  001822                     u4961:
 12601  001822  EF1B  F00C         	goto	l5038
 12602  001826                     u4960:
 12603  001826                     
 12604                           ; BSR set to: 0
 12605  001826  5180               	movf	___flmul@bexp& (0+255),w,b
 12606  001828  A4D8               	btfss	status,2,c
 12607  00182A  EF19  F00C         	goto	u4971
 12608  00182E  EF1B  F00C         	goto	u4970
 12609  001832                     u4971:
 12610  001832  EF25  F00C         	goto	l5042
 12611  001836                     u4970:
 12612  001836                     l5038:
 12613                           
 12614                           ; BSR set to: 0
 12615  001836  0E00               	movlw	0
 12616  001838  6F6E               	movwf	?___flmul& (0+255),b
 12617  00183A  0E00               	movlw	0
 12618  00183C  6F6F               	movwf	(?___flmul+1)& (0+255),b
 12619  00183E  0E00               	movlw	0
 12620  001840  6F70               	movwf	(?___flmul+2)& (0+255),b
 12621  001842  0E00               	movlw	0
 12622  001844  6F71               	movwf	(?___flmul+3)& (0+255),b
 12623  001846  EFBD  F00D         	goto	l1334
 12624  00184A                     l5042:
 12625                           
 12626                           ; BSR set to: 0
 12627  00184A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 12628  00184C  036E               	mulwf	___flmul@b& (0+255),b
 12629  00184E  CFF3 F085          	movff	prodl,___flmul@temp
 12630  001852  CFF4 F086          	movff	prodh,___flmul@temp+1
 12631  001856                     
 12632                           ; BSR set to: 0
 12633  001856  5185               	movf	___flmul@temp& (0+255),w,b
 12634  001858  6F7B               	movwf	___flmul@grs& (0+255),b
 12635  00185A  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 12636  00185C  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 12637  00185E  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 12638  001860                     
 12639                           ; BSR set to: 0
 12640  001860  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12641  001862  6F81               	movwf	___flmul@prod& (0+255),b
 12642  001864  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 12643  001866  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 12644  001868  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 12645  00186A  5173               	movf	(___flmul@a+1)& (0+255),w,b
 12646  00186C  036F               	mulwf	(___flmul@b+1)& (0+255),b
 12647  00186E  CFF3 F085          	movff	prodl,___flmul@temp
 12648  001872  CFF4 F086          	movff	prodh,___flmul@temp+1
 12649  001876                     
 12650                           ; BSR set to: 0
 12651  001876  5185               	movf	___flmul@temp& (0+255),w,b
 12652  001878  277B               	addwf	___flmul@grs& (0+255),f,b
 12653  00187A  0E00               	movlw	0
 12654  00187C  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12655  00187E  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12656  001880  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12657  001882                     
 12658                           ; BSR set to: 0
 12659  001882  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12660  001884  2781               	addwf	___flmul@prod& (0+255),f,b
 12661  001886  0E00               	movlw	0
 12662  001888  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12663  00188A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12664  00188C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12665  00188E  5172               	movf	___flmul@a& (0+255),w,b
 12666  001890  0370               	mulwf	(___flmul@b+2)& (0+255),b
 12667  001892  CFF3 F085          	movff	prodl,___flmul@temp
 12668  001896  CFF4 F086          	movff	prodh,___flmul@temp+1
 12669  00189A                     
 12670                           ; BSR set to: 0
 12671  00189A  5185               	movf	___flmul@temp& (0+255),w,b
 12672  00189C  277B               	addwf	___flmul@grs& (0+255),f,b
 12673  00189E  0E00               	movlw	0
 12674  0018A0  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12675  0018A2  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12676  0018A4  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12677  0018A6                     
 12678                           ; BSR set to: 0
 12679  0018A6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12680  0018A8  2781               	addwf	___flmul@prod& (0+255),f,b
 12681  0018AA  0E00               	movlw	0
 12682  0018AC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12683  0018AE  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12684  0018B0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12685  0018B2                     
 12686                           ; BSR set to: 0
 12687  0018B2  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 12688  0018B6  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 12689  0018BA  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 12690  0018BE  6B7B               	clrf	___flmul@grs& (0+255),b
 12691  0018C0                     
 12692                           ; BSR set to: 0
 12693  0018C0  5172               	movf	___flmul@a& (0+255),w,b
 12694  0018C2  036F               	mulwf	(___flmul@b+1)& (0+255),b
 12695  0018C4  CFF3 F085          	movff	prodl,___flmul@temp
 12696  0018C8  CFF4 F086          	movff	prodh,___flmul@temp+1
 12697  0018CC                     
 12698                           ; BSR set to: 0
 12699  0018CC  5185               	movf	___flmul@temp& (0+255),w,b
 12700  0018CE  277B               	addwf	___flmul@grs& (0+255),f,b
 12701  0018D0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12702  0018D2  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12703  0018D4  0E00               	movlw	0
 12704  0018D6  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12705  0018D8  0E00               	movlw	0
 12706  0018DA  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12707  0018DC                     
 12708                           ; BSR set to: 0
 12709  0018DC  5173               	movf	(___flmul@a+1)& (0+255),w,b
 12710  0018DE  036E               	mulwf	___flmul@b& (0+255),b
 12711  0018E0  CFF3 F085          	movff	prodl,___flmul@temp
 12712  0018E4  CFF4 F086          	movff	prodh,___flmul@temp+1
 12713  0018E8                     
 12714                           ; BSR set to: 0
 12715  0018E8  5185               	movf	___flmul@temp& (0+255),w,b
 12716  0018EA  277B               	addwf	___flmul@grs& (0+255),f,b
 12717  0018EC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12718  0018EE  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12719  0018F0  0E00               	movlw	0
 12720  0018F2  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12721  0018F4  0E00               	movlw	0
 12722  0018F6  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12723  0018F8                     
 12724                           ; BSR set to: 0
 12725  0018F8  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 12726  0018FC  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 12727  001900  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 12728  001904  6B7B               	clrf	___flmul@grs& (0+255),b
 12729  001906  5172               	movf	___flmul@a& (0+255),w,b
 12730  001908  036E               	mulwf	___flmul@b& (0+255),b
 12731  00190A  CFF3 F085          	movff	prodl,___flmul@temp
 12732  00190E  CFF4 F086          	movff	prodh,___flmul@temp+1
 12733  001912                     
 12734                           ; BSR set to: 0
 12735  001912  5185               	movf	___flmul@temp& (0+255),w,b
 12736  001914  277B               	addwf	___flmul@grs& (0+255),f,b
 12737  001916  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12738  001918  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12739  00191A  0E00               	movlw	0
 12740  00191C  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12741  00191E  0E00               	movlw	0
 12742  001920  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12743  001922                     
 12744                           ; BSR set to: 0
 12745  001922  5174               	movf	(___flmul@a+2)& (0+255),w,b
 12746  001924  036F               	mulwf	(___flmul@b+1)& (0+255),b
 12747  001926  CFF3 F085          	movff	prodl,___flmul@temp
 12748  00192A  CFF4 F086          	movff	prodh,___flmul@temp+1
 12749  00192E  5185               	movf	___flmul@temp& (0+255),w,b
 12750  001930  2781               	addwf	___flmul@prod& (0+255),f,b
 12751  001932  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12752  001934  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12753  001936  0E00               	movlw	0
 12754  001938  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12755  00193A  0E00               	movlw	0
 12756  00193C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12757  00193E                     
 12758                           ; BSR set to: 0
 12759  00193E  5173               	movf	(___flmul@a+1)& (0+255),w,b
 12760  001940  0370               	mulwf	(___flmul@b+2)& (0+255),b
 12761  001942  CFF3 F085          	movff	prodl,___flmul@temp
 12762  001946  CFF4 F086          	movff	prodh,___flmul@temp+1
 12763  00194A                     
 12764                           ; BSR set to: 0
 12765  00194A  5185               	movf	___flmul@temp& (0+255),w,b
 12766  00194C  2781               	addwf	___flmul@prod& (0+255),f,b
 12767  00194E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12768  001950  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12769  001952  0E00               	movlw	0
 12770  001954  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12771  001956  0E00               	movlw	0
 12772  001958  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12773  00195A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 12774  00195C  0370               	mulwf	(___flmul@b+2)& (0+255),b
 12775  00195E  CFF3 F085          	movff	prodl,___flmul@temp
 12776  001962  CFF4 F086          	movff	prodh,___flmul@temp+1
 12777  001966                     
 12778                           ; BSR set to: 0
 12779  001966  5185               	movf	___flmul@temp& (0+255),w,b
 12780  001968  6F76               	movwf	??___flmul& (0+255),b
 12781  00196A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12782  00196C  6F77               	movwf	(??___flmul+1)& (0+255),b
 12783  00196E  6B78               	clrf	(??___flmul+2)& (0+255),b
 12784  001970  6B79               	clrf	(??___flmul+3)& (0+255),b
 12785  001972  C078  F079         	movff	??___flmul+2,??___flmul+3
 12786  001976  C077  F078         	movff	??___flmul+1,??___flmul+2
 12787  00197A  C076  F077         	movff	??___flmul,??___flmul+1
 12788  00197E  6B76               	clrf	??___flmul& (0+255),b
 12789  001980  5176               	movf	??___flmul& (0+255),w,b
 12790  001982  2781               	addwf	___flmul@prod& (0+255),f,b
 12791  001984  5177               	movf	(??___flmul+1)& (0+255),w,b
 12792  001986  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12793  001988  5178               	movf	(??___flmul+2)& (0+255),w,b
 12794  00198A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12795  00198C  5179               	movf	(??___flmul+3)& (0+255),w,b
 12796  00198E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12797  001990                     
 12798                           ; BSR set to: 0
 12799  001990  C07B  F076         	movff	___flmul@grs,??___flmul
 12800  001994  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 12801  001998  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 12802  00199C  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 12803  0019A0  0E19               	movlw	25
 12804  0019A2  EFD8  F00C         	goto	u4980
 12805  0019A6                     u4985:
 12806  0019A6  90D8               	bcf	status,0,c
 12807  0019A8  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 12808  0019AA  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 12809  0019AC  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 12810  0019AE  3376               	rrcf	??___flmul& (0+255),f,b
 12811  0019B0                     u4980:
 12812  0019B0  2EE8               	decfsz	wreg,f,c
 12813  0019B2  EFD3  F00C         	goto	u4985
 12814  0019B6  5176               	movf	??___flmul& (0+255),w,b
 12815  0019B8  2781               	addwf	___flmul@prod& (0+255),f,b
 12816  0019BA  5177               	movf	(??___flmul+1)& (0+255),w,b
 12817  0019BC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12818  0019BE  5178               	movf	(??___flmul+2)& (0+255),w,b
 12819  0019C0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12820  0019C2  5179               	movf	(??___flmul+3)& (0+255),w,b
 12821  0019C4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12822  0019C6                     
 12823                           ; BSR set to: 0
 12824  0019C6  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 12825  0019CA  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 12826  0019CE  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 12827  0019D2  6B7B               	clrf	___flmul@grs& (0+255),b
 12828  0019D4                     
 12829                           ; BSR set to: 0
 12830  0019D4  517F               	movf	___flmul@aexp& (0+255),w,b
 12831  0019D6  C080  F076         	movff	___flmul@bexp,??___flmul
 12832  0019DA  6B77               	clrf	(??___flmul+1)& (0+255),b
 12833  0019DC  2776               	addwf	??___flmul& (0+255),f,b
 12834  0019DE  0E00               	movlw	0
 12835  0019E0  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 12836  0019E2  0E82               	movlw	130
 12837  0019E4  2576               	addwf	??___flmul& (0+255),w,b
 12838  0019E6  6F85               	movwf	___flmul@temp& (0+255),b
 12839  0019E8  0EFF               	movlw	255
 12840  0019EA  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 12841  0019EC  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 12842  0019EE  EF0E  F00D         	goto	l5090
 12843  0019F2                     l5084:
 12844                           
 12845                           ; BSR set to: 0
 12846  0019F2  90D8               	bcf	status,0,c
 12847  0019F4  3781               	rlcf	___flmul@prod& (0+255),f,b
 12848  0019F6  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12849  0019F8  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12850  0019FA  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12851  0019FC                     
 12852                           ; BSR set to: 0
 12853  0019FC  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 12854  0019FE  EF03  F00D         	goto	u4991
 12855  001A02  EF05  F00D         	goto	u4990
 12856  001A06                     u4991:
 12857  001A06  EF06  F00D         	goto	l1337
 12858  001A0A                     u4990:
 12859  001A0A                     
 12860                           ; BSR set to: 0
 12861  001A0A  8181               	bsf	___flmul@prod& (0+255),0,b
 12862  001A0C                     l1337:
 12863                           
 12864                           ; BSR set to: 0
 12865  001A0C  90D8               	bcf	status,0,c
 12866  001A0E  377B               	rlcf	___flmul@grs& (0+255),f,b
 12867  001A10  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12868  001A12  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12869  001A14  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12870  001A16  0785               	decf	___flmul@temp& (0+255),f,b
 12871  001A18  A0D8               	btfss	status,0,c
 12872  001A1A  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 12873  001A1C                     l5090:
 12874                           
 12875                           ; BSR set to: 0
 12876  001A1C  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 12877  001A1E  EF13  F00D         	goto	u5001
 12878  001A22  EF15  F00D         	goto	u5000
 12879  001A26                     u5001:
 12880  001A26  EFF9  F00C         	goto	l5084
 12881  001A2A                     u5000:
 12882  001A2A                     
 12883                           ; BSR set to: 0
 12884  001A2A  0E00               	movlw	0
 12885  001A2C  6F7F               	movwf	___flmul@aexp& (0+255),b
 12886  001A2E                     
 12887                           ; BSR set to: 0
 12888  001A2E  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 12889  001A30  EF1C  F00D         	goto	u5011
 12890  001A34  EF1E  F00D         	goto	u5010
 12891  001A38                     u5011:
 12892  001A38  EF42  F00D         	goto	l1339
 12893  001A3C                     u5010:
 12894  001A3C                     
 12895                           ; BSR set to: 0
 12896  001A3C  0EFF               	movlw	255
 12897  001A3E  157B               	andwf	___flmul@grs& (0+255),w,b
 12898  001A40  6F76               	movwf	??___flmul& (0+255),b
 12899  001A42  0EFF               	movlw	255
 12900  001A44  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 12901  001A46  6F77               	movwf	(??___flmul+1)& (0+255),b
 12902  001A48  0EFF               	movlw	255
 12903  001A4A  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 12904  001A4C  6F78               	movwf	(??___flmul+2)& (0+255),b
 12905  001A4E  0E7F               	movlw	127
 12906  001A50  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 12907  001A52  6F79               	movwf	(??___flmul+3)& (0+255),b
 12908  001A54  5176               	movf	??___flmul& (0+255),w,b
 12909  001A56  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 12910  001A58  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 12911  001A5A  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 12912  001A5C  B4D8               	btfsc	status,2,c
 12913  001A5E  EF33  F00D         	goto	u5021
 12914  001A62  EF35  F00D         	goto	u5020
 12915  001A66                     u5021:
 12916  001A66  EF39  F00D         	goto	l1340
 12917  001A6A                     u5020:
 12918  001A6A                     l5098:
 12919                           
 12920                           ; BSR set to: 0
 12921  001A6A  0E01               	movlw	1
 12922  001A6C  6F7F               	movwf	___flmul@aexp& (0+255),b
 12923  001A6E  EF42  F00D         	goto	l1339
 12924  001A72                     l1340:
 12925                           
 12926                           ; BSR set to: 0
 12927  001A72  A181               	btfss	___flmul@prod& (0+255),0,b
 12928  001A74  EF3E  F00D         	goto	u5031
 12929  001A78  EF40  F00D         	goto	u5030
 12930  001A7C                     u5031:
 12931  001A7C  EF42  F00D         	goto	l1339
 12932  001A80                     u5030:
 12933  001A80  EF35  F00D         	goto	l5098
 12934  001A84                     l1339:
 12935                           
 12936                           ; BSR set to: 0
 12937  001A84  517F               	movf	___flmul@aexp& (0+255),w,b
 12938  001A86  B4D8               	btfsc	status,2,c
 12939  001A88  EF48  F00D         	goto	u5041
 12940  001A8C  EF4A  F00D         	goto	u5040
 12941  001A90                     u5041:
 12942  001A90  EF6E  F00D         	goto	l5110
 12943  001A94                     u5040:
 12944  001A94                     
 12945                           ; BSR set to: 0
 12946  001A94  0E01               	movlw	1
 12947  001A96  2781               	addwf	___flmul@prod& (0+255),f,b
 12948  001A98  0E00               	movlw	0
 12949  001A9A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12950  001A9C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12951  001A9E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12952  001AA0                     
 12953                           ; BSR set to: 0
 12954  001AA0  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 12955  001AA2  EF55  F00D         	goto	u5051
 12956  001AA6  EF57  F00D         	goto	u5050
 12957  001AAA                     u5051:
 12958  001AAA  EF6E  F00D         	goto	l5110
 12959  001AAE                     u5050:
 12960  001AAE                     
 12961                           ; BSR set to: 0
 12962  001AAE  C081  F076         	movff	___flmul@prod,??___flmul
 12963  001AB2  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 12964  001AB6  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 12965  001ABA  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 12966  001ABE  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 12967  001AC0  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 12968  001AC2  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 12969  001AC4  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 12970  001AC6  3376               	rrcf	??___flmul& (0+255),f,b
 12971  001AC8  C076  F081         	movff	??___flmul,___flmul@prod
 12972  001ACC  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 12973  001AD0  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 12974  001AD4  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 12975  001AD8                     
 12976                           ; BSR set to: 0
 12977  001AD8  4B85               	infsnz	___flmul@temp& (0+255),f,b
 12978  001ADA  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 12979  001ADC                     l5110:
 12980                           
 12981                           ; BSR set to: 0
 12982  001ADC  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12983  001ADE  EF79  F00D         	goto	u5061
 12984  001AE2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12985  001AE4  E108               	bnz	u5060
 12986  001AE6  2985               	incf	___flmul@temp& (0+255),w,b
 12987  001AE8  A0D8               	btfss	status,0,c
 12988  001AEA  EF79  F00D         	goto	u5061
 12989  001AEE  EF7B  F00D         	goto	u5060
 12990  001AF2                     u5061:
 12991  001AF2  EF85  F00D         	goto	l5114
 12992  001AF6                     u5060:
 12993  001AF6                     
 12994                           ; BSR set to: 0
 12995  001AF6  0E00               	movlw	0
 12996  001AF8  6F81               	movwf	___flmul@prod& (0+255),b
 12997  001AFA  0E00               	movlw	0
 12998  001AFC  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 12999  001AFE  0E80               	movlw	128
 13000  001B00  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 13001  001B02  0E7F               	movlw	127
 13002  001B04  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 13003  001B06  EFB3  F00D         	goto	l5126
 13004  001B0A                     l5114:
 13005                           
 13006                           ; BSR set to: 0
 13007  001B0A  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13008  001B0C  EF92  F00D         	goto	u5070
 13009  001B10  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 13010  001B12  E106               	bnz	u5071
 13011  001B14  0585               	decf	___flmul@temp& (0+255),w,b
 13012  001B16  B0D8               	btfsc	status,0,c
 13013  001B18  EF90  F00D         	goto	u5071
 13014  001B1C  EF92  F00D         	goto	u5070
 13015  001B20                     u5071:
 13016  001B20  EF9E  F00D         	goto	l1347
 13017  001B24                     u5070:
 13018  001B24                     
 13019                           ; BSR set to: 0
 13020  001B24  0E00               	movlw	0
 13021  001B26  6F81               	movwf	___flmul@prod& (0+255),b
 13022  001B28  0E00               	movlw	0
 13023  001B2A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 13024  001B2C  0E00               	movlw	0
 13025  001B2E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 13026  001B30  0E00               	movlw	0
 13027  001B32  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 13028  001B34  0E00               	movlw	0
 13029  001B36  6F7A               	movwf	___flmul@sign& (0+255),b
 13030  001B38  EFB3  F00D         	goto	l5126
 13031  001B3C                     l1347:
 13032                           
 13033                           ; BSR set to: 0
 13034  001B3C  C085  F080         	movff	___flmul@temp,___flmul@bexp
 13035  001B40                     
 13036                           ; BSR set to: 0
 13037  001B40  0EFF               	movlw	255
 13038  001B42  1781               	andwf	___flmul@prod& (0+255),f,b
 13039  001B44  0EFF               	movlw	255
 13040  001B46  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 13041  001B48  0E7F               	movlw	127
 13042  001B4A  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 13043  001B4C  0E00               	movlw	0
 13044  001B4E  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 13045  001B50                     
 13046                           ; BSR set to: 0
 13047  001B50  A180               	btfss	___flmul@bexp& (0+255),0,b
 13048  001B52  EFAD  F00D         	goto	u5081
 13049  001B56  EFAF  F00D         	goto	u5080
 13050  001B5A                     u5081:
 13051  001B5A  EFB0  F00D         	goto	l5124
 13052  001B5E                     u5080:
 13053  001B5E                     
 13054                           ; BSR set to: 0
 13055  001B5E  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 13056  001B60                     l5124:
 13057                           
 13058                           ; BSR set to: 0
 13059  001B60  90D8               	bcf	status,0,c
 13060  001B62  3180               	rrcf	___flmul@bexp& (0+255),w,b
 13061  001B64  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 13062  001B66                     l5126:
 13063                           
 13064                           ; BSR set to: 0
 13065  001B66  517A               	movf	___flmul@sign& (0+255),w,b
 13066  001B68  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13067  001B6A                     
 13068                           ; BSR set to: 0
 13069  001B6A  C081  F06E         	movff	___flmul@prod,?___flmul
 13070  001B6E  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 13071  001B72  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 13072  001B76  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 13073  001B7A                     l1334:
 13074                           
 13075                           ; BSR set to: 0
 13076  001B7A  0012               	return		;funcret
 13077  001B7C                     __end_of___flmul:
 13078                           	opt callstack 0
 13079                           
 13080 ;; *************** function _SYSTEM_Initialize *****************
 13081 ;; Defined at:
 13082 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13083 ;; Parameters:    Size  Location     Type
 13084 ;;		None
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;		None
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, status,2, status,0, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13100 ;;Total ram usage:        0 bytes
 13101 ;; Hardware stack levels used:    1
 13102 ;; Hardware stack levels required when called:   12
 13103 ;; This function calls:
 13104 ;;		_ADC_Initialize
 13105 ;;		_EXT_INT_Initialize
 13106 ;;		_INTERRUPT_Initialize
 13107 ;;		_OSCILLATOR_Initialize
 13108 ;;		_PIN_MANAGER_Initialize
 13109 ;;		_SPI_Initialize
 13110 ;;		_TMR1_Initialize
 13111 ;; This function is called by:
 13112 ;;		_main
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           	psect	text44
 13117  00429C                     __ptext44:
 13118                           	opt callstack 0
 13119  00429C                     _SYSTEM_Initialize:
 13120                           	opt callstack 18
 13121  00429C                     
 13122                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 13123  00429C  ECE1  F021         	call	_INTERRUPT_Initialize	;wreg free
 13124  0042A0                     
 13125                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 13126  0042A0  ECBD  F021         	call	_SPI_Initialize	;wreg free
 13127  0042A4                     
 13128                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 13129  0042A4  EC24  F01F         	call	_PIN_MANAGER_Initialize	;wreg free
 13130  0042A8                     
 13131                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 13132  0042A8  ECC6  F021         	call	_OSCILLATOR_Initialize	;wreg free
 13133  0042AC                     
 13134                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 13135  0042AC  ECD4  F020         	call	_TMR1_Initialize	;wreg free
 13136  0042B0                     
 13137                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13138  0042B0  EC9C  F021         	call	_EXT_INT_Initialize	;wreg free
 13139  0042B4                     
 13140                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 13141  0042B4  ECA7  F021         	call	_ADC_Initialize	;wreg free
 13142  0042B8  0012               	return		;funcret
 13143  0042BA                     __end_of_SYSTEM_Initialize:
 13144                           	opt callstack 0
 13145                           
 13146 ;; *************** function _TMR1_Initialize *****************
 13147 ;; Defined at:
 13148 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;		None
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;		None
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      void 
 13155 ;; Registers used:
 13156 ;;		wreg, status,2, status,0
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13165 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13166 ;;Total ram usage:        2 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; Hardware stack levels required when called:   10
 13169 ;; This function calls:
 13170 ;;		Nothing
 13171 ;; This function is called by:
 13172 ;;		_SYSTEM_Initialize
 13173 ;; This function uses a non-reentrant model
 13174 ;;
 13175                           
 13176                           	psect	text45
 13177  0041A8                     __ptext45:
 13178                           	opt callstack 0
 13179  0041A8                     _TMR1_Initialize:
 13180                           	opt callstack 19
 13181  0041A8                     
 13182                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 13183  0041A8  0E00               	movlw	0
 13184  0041AA  6EAA               	movwf	170,c	;volatile
 13185                           
 13186                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 13187  0041AC  0E0B               	movlw	11
 13188  0041AE  6ECF               	movwf	207,c	;volatile
 13189                           
 13190                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 13191  0041B0  0EDC               	movlw	220
 13192  0041B2  6ECE               	movwf	206,c	;volatile
 13193  0041B4                     
 13194                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 13195  0041B4  909E               	bcf	158,0,c	;volatile
 13196  0041B6                     
 13197                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13198  0041B6  50CE               	movf	206,w,c	;volatile
 13199  0041B8  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 13200  0041BC  0100               	movlb	0	; () banked
 13201  0041BE  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 13202  0041C0  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13203  0041C4  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 13204  0041C6  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 13205  0041C8  6E43               	movwf	_timer1ReloadVal^0,c	;volatile
 13206  0041CA  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 13207  0041CC  6E44               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
 13208  0041CE                     
 13209                           ; BSR set to: 0
 13210                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 13211  0041CE  0E31               	movlw	49
 13212  0041D0  6ECD               	movwf	205,c	;volatile
 13213  0041D2                     
 13214                           ; BSR set to: 0
 13215  0041D2  0012               	return		;funcret
 13216  0041D4                     __end_of_TMR1_Initialize:
 13217                           	opt callstack 0
 13218                           
 13219 ;; *************** function _SPI_Initialize *****************
 13220 ;; Defined at:
 13221 ;;		line 62 in file "mcc_generated_files/spi.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;		None
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;		None
 13226 ;; Return value:  Size  Location     Type
 13227 ;;                  1    wreg      void 
 13228 ;; Registers used:
 13229 ;;		wreg, status,2
 13230 ;; Tracked objects:
 13231 ;;		On entry : 0/0
 13232 ;;		On exit  : 0/0
 13233 ;;		Unchanged: 0/0
 13234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13239 ;;Total ram usage:        0 bytes
 13240 ;; Hardware stack levels used:    1
 13241 ;; Hardware stack levels required when called:   10
 13242 ;; This function calls:
 13243 ;;		Nothing
 13244 ;; This function is called by:
 13245 ;;		_SYSTEM_Initialize
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249                           	psect	text46
 13250  00437A                     __ptext46:
 13251                           	opt callstack 0
 13252  00437A                     _SPI_Initialize:
 13253                           	opt callstack 19
 13254  00437A                     
 13255                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 13256  00437A  0E40               	movlw	64
 13257  00437C  6EC7               	movwf	199,c	;volatile
 13258                           
 13259                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 13260  00437E  0E00               	movlw	0
 13261  004380  6EC6               	movwf	198,c	;volatile
 13262                           
 13263                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 13264  004382  0E01               	movlw	1
 13265  004384  6EC8               	movwf	200,c	;volatile
 13266  004386                     
 13267                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 13268  004386  9694               	bcf	148,3,c	;volatile
 13269  004388                     
 13270                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 13271  004388  9AC6               	bcf	198,5,c	;volatile
 13272  00438A  0012               	return		;funcret
 13273  00438C                     __end_of_SPI_Initialize:
 13274                           	opt callstack 0
 13275                           
 13276 ;; *************** function _PIN_MANAGER_Initialize *****************
 13277 ;; Defined at:
 13278 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;		None
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      void 
 13285 ;; Registers used:
 13286 ;;		wreg, status,2, status,0, cstack
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13296 ;;Total ram usage:        0 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:   11
 13299 ;; This function calls:
 13300 ;;		_IOCB4_SetInterruptHandler
 13301 ;; This function is called by:
 13302 ;;		_SYSTEM_Initialize
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text47
 13307  003E48                     __ptext47:
 13308                           	opt callstack 0
 13309  003E48                     _PIN_MANAGER_Initialize:
 13310                           	opt callstack 18
 13311  003E48                     
 13312                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 13313  003E48  0E00               	movlw	0
 13314  003E4A  6E8D               	movwf	141,c	;volatile
 13315                           
 13316                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13317  003E4C  0E00               	movlw	0
 13318  003E4E  6E8C               	movwf	140,c	;volatile
 13319                           
 13320                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13321  003E50  0E00               	movlw	0
 13322  003E52  6E89               	movwf	137,c	;volatile
 13323                           
 13324                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 13325  003E54  0E00               	movlw	0
 13326  003E56  6E8A               	movwf	138,c	;volatile
 13327                           
 13328                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 13329  003E58  0E00               	movlw	0
 13330  003E5A  6E8B               	movwf	139,c	;volatile
 13331                           
 13332                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 13333  003E5C  0E04               	movlw	4
 13334  003E5E  6E96               	movwf	150,c	;volatile
 13335                           
 13336                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x2F;
 13337  003E60  0E2F               	movlw	47
 13338  003E62  6E92               	movwf	146,c	;volatile
 13339  003E64                     
 13340                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 13341  003E64  6893               	setf	147,c	;volatile
 13342                           
 13343                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 13344  003E66  0ED7               	movlw	215
 13345  003E68  6E94               	movwf	148,c	;volatile
 13346  003E6A                     
 13347                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 13348  003E6A  6895               	setf	149,c	;volatile
 13349                           
 13350                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x97;
 13351  003E6C  0E97               	movlw	151
 13352  003E6E  010F               	movlb	15	; () banked
 13353  003E70  6F5D               	movwf	93,b	;volatile
 13354                           
 13355                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
 13356  003E72  0E79               	movlw	121
 13357  003E74  6F5C               	movwf	92,b	;volatile
 13358                           
 13359                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 13360  003E76  0E00               	movlw	0
 13361  003E78  6F5B               	movwf	91,b	;volatile
 13362  003E7A                     
 13363                           ; BSR set to: 15
 13364                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 13365  003E7A  8EF1               	bsf	241,7,c	;volatile
 13366  003E7C                     
 13367                           ; BSR set to: 15
 13368                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 13369  003E7C  895A               	bsf	90,4,b	;volatile
 13370  003E7E                     
 13371                           ; BSR set to: 15
 13372                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 13373  003E7E  0EC8               	movlw	low _IOCB4_DefaultInterruptHandler
 13374  003E80  0100               	movlb	0	; () banked
 13375  003E82  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 13376  003E84  0E43               	movlw	high _IOCB4_DefaultInterruptHandler
 13377  003E86  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13378  003E88  ECCF  F021         	call	_IOCB4_SetInterruptHandler	;wreg free
 13379  003E8C                     
 13380                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 13381  003E8C  86F2               	bsf	242,3,c	;volatile
 13382  003E8E  0012               	return		;funcret
 13383  003E90                     __end_of_PIN_MANAGER_Initialize:
 13384                           	opt callstack 0
 13385                           
 13386 ;; *************** function _IOCB4_SetInterruptHandler *****************
 13387 ;; Defined at:
 13388 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13391 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;		None
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1    wreg      void 
 13396 ;; Registers used:
 13397 ;;		wreg, status,2, status,0
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13407 ;;Total ram usage:        2 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:   10
 13410 ;; This function calls:
 13411 ;;		Nothing
 13412 ;; This function is called by:
 13413 ;;		_PIN_MANAGER_Initialize
 13414 ;;		_main
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           	psect	text48
 13419  00439E                     __ptext48:
 13420                           	opt callstack 0
 13421  00439E                     _IOCB4_SetInterruptHandler:
 13422                           	opt callstack 18
 13423  00439E                     
 13424                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 13425  00439E  C060  F045         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 13426  0043A2  C061  F046         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 13427  0043A6  0012               	return		;funcret
 13428  0043A8                     __end_of_IOCB4_SetInterruptHandler:
 13429                           	opt callstack 0
 13430                           
 13431 ;; *************** function _OSCILLATOR_Initialize *****************
 13432 ;; Defined at:
 13433 ;;		line 62 in file "mcc_generated_files/mcc.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;		None
 13436 ;; Auto vars:     Size  Location     Type
 13437 ;;		None
 13438 ;; Return value:  Size  Location     Type
 13439 ;;                  1    wreg      void 
 13440 ;; Registers used:
 13441 ;;		wreg, status,2
 13442 ;; Tracked objects:
 13443 ;;		On entry : 0/0
 13444 ;;		On exit  : 0/0
 13445 ;;		Unchanged: 0/0
 13446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13451 ;;Total ram usage:        0 bytes
 13452 ;; Hardware stack levels used:    1
 13453 ;; Hardware stack levels required when called:   10
 13454 ;; This function calls:
 13455 ;;		Nothing
 13456 ;; This function is called by:
 13457 ;;		_SYSTEM_Initialize
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           	psect	text49
 13462  00438C                     __ptext49:
 13463                           	opt callstack 0
 13464  00438C                     _OSCILLATOR_Initialize:
 13465                           	opt callstack 19
 13466  00438C                     
 13467                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x62;
 13468  00438C  0E62               	movlw	98
 13469  00438E  6ED3               	movwf	211,c	;volatile
 13470                           
 13471                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
 13472  004390  0E00               	movlw	0
 13473  004392  6ED2               	movwf	210,c	;volatile
 13474                           
 13475                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 13476  004394  0E00               	movlw	0
 13477  004396  6E9B               	movwf	155,c	;volatile
 13478                           
 13479                           ;mcc_generated_files/mcc.c: 71:     REFOCON = 0x00;
 13480  004398  0E00               	movlw	0
 13481  00439A  6E9A               	movwf	154,c	;volatile
 13482  00439C  0012               	return		;funcret
 13483  00439E                     __end_of_OSCILLATOR_Initialize:
 13484                           	opt callstack 0
 13485                           
 13486 ;; *************** function _INTERRUPT_Initialize *****************
 13487 ;; Defined at:
 13488 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;		None
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;		None
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		None
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13506 ;;Total ram usage:        0 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; Hardware stack levels required when called:   10
 13509 ;; This function calls:
 13510 ;;		Nothing
 13511 ;; This function is called by:
 13512 ;;		_SYSTEM_Initialize
 13513 ;; This function uses a non-reentrant model
 13514 ;;
 13515                           
 13516                           	psect	text50
 13517  0043C2                     __ptext50:
 13518                           	opt callstack 0
 13519  0043C2                     _INTERRUPT_Initialize:
 13520                           	opt callstack 19
 13521  0043C2                     
 13522                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 13523  0043C2  9ED0               	bcf	208,7,c	;volatile
 13524  0043C4  0012               	return		;funcret
 13525  0043C6                     __end_of_INTERRUPT_Initialize:
 13526                           	opt callstack 0
 13527                           
 13528 ;; *************** function _EXT_INT_Initialize *****************
 13529 ;; Defined at:
 13530 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;		None
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1    wreg      void 
 13537 ;; Registers used:
 13538 ;;		wreg, status,2, status,0, cstack
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13548 ;;Total ram usage:        0 bytes
 13549 ;; Hardware stack levels used:    1
 13550 ;; Hardware stack levels required when called:   11
 13551 ;; This function calls:
 13552 ;;		_INT0_SetInterruptHandler
 13553 ;; This function is called by:
 13554 ;;		_SYSTEM_Initialize
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text51
 13559  004338                     __ptext51:
 13560                           	opt callstack 0
 13561  004338                     _EXT_INT_Initialize:
 13562                           	opt callstack 18
 13563  004338                     
 13564                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
 13565  004338  92F2               	bcf	242,1,c	;volatile
 13566                           
 13567                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 0);
 13568  00433A  9CF1               	bcf	241,6,c	;volatile
 13569  00433C                     
 13570                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
 13571  00433C  0ECA               	movlw	low _INT0_DefaultInterruptHandler
 13572  00433E  0100               	movlb	0	; () banked
 13573  004340  6F60               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 13574  004342  0E43               	movlw	high _INT0_DefaultInterruptHandler
 13575  004344  6F61               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13576  004346  ECD4  F021         	call	_INT0_SetInterruptHandler	;wreg free
 13577  00434A                     
 13578                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
 13579  00434A  88F2               	bsf	242,4,c	;volatile
 13580  00434C  0012               	return		;funcret
 13581  00434E                     __end_of_EXT_INT_Initialize:
 13582                           	opt callstack 0
 13583                           
 13584 ;; *************** function _INT0_SetInterruptHandler *****************
 13585 ;; Defined at:
 13586 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 13587 ;; Parameters:    Size  Location     Type
 13588 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13589 ;;		 -> INT0_DefaultInterruptHandler(1), S3_toggle(1), 
 13590 ;; Auto vars:     Size  Location     Type
 13591 ;;		None
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  1    wreg      void 
 13594 ;; Registers used:
 13595 ;;		wreg, status,2, status,0
 13596 ;; Tracked objects:
 13597 ;;		On entry : 0/0
 13598 ;;		On exit  : 0/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13605 ;;Total ram usage:        2 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:   10
 13608 ;; This function calls:
 13609 ;;		Nothing
 13610 ;; This function is called by:
 13611 ;;		_main
 13612 ;;		_EXT_INT_Initialize
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           	psect	text52
 13617  0043A8                     __ptext52:
 13618                           	opt callstack 0
 13619  0043A8                     _INT0_SetInterruptHandler:
 13620                           	opt callstack 18
 13621  0043A8                     
 13622                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
 13623  0043A8  C060  F041         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 13624  0043AC  C061  F042         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 13625  0043B0  0012               	return		;funcret
 13626  0043B2                     __end_of_INT0_SetInterruptHandler:
 13627                           	opt callstack 0
 13628                           
 13629 ;; *************** function _ADC_Initialize *****************
 13630 ;; Defined at:
 13631 ;;		line 62 in file "mcc_generated_files/adc.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;		None
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;		None
 13636 ;; Return value:  Size  Location     Type
 13637 ;;                  1    wreg      void 
 13638 ;; Registers used:
 13639 ;;		wreg, status,2
 13640 ;; Tracked objects:
 13641 ;;		On entry : 0/0
 13642 ;;		On exit  : 0/0
 13643 ;;		Unchanged: 0/0
 13644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13649 ;;Total ram usage:        0 bytes
 13650 ;; Hardware stack levels used:    1
 13651 ;; Hardware stack levels required when called:   10
 13652 ;; This function calls:
 13653 ;;		Nothing
 13654 ;; This function is called by:
 13655 ;;		_SYSTEM_Initialize
 13656 ;; This function uses a non-reentrant model
 13657 ;;
 13658                           
 13659                           	psect	text53
 13660  00434E                     __ptext53:
 13661                           	opt callstack 0
 13662  00434E                     _ADC_Initialize:
 13663                           	opt callstack 19
 13664  00434E                     
 13665                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 13666  00434E  0E01               	movlw	1
 13667  004350  6EC2               	movwf	194,c	;volatile
 13668                           
 13669                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 13670  004352  0E80               	movlw	128
 13671  004354  6EC1               	movwf	193,c	;volatile
 13672                           
 13673                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 13674  004356  0EAD               	movlw	173
 13675  004358  6EC0               	movwf	192,c	;volatile
 13676                           
 13677                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 13678  00435A  0E00               	movlw	0
 13679  00435C  6EC4               	movwf	196,c	;volatile
 13680                           
 13681                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 13682  00435E  0E00               	movlw	0
 13683  004360  6EC3               	movwf	195,c	;volatile
 13684  004362  0012               	return		;funcret
 13685  004364                     __end_of_ADC_Initialize:
 13686                           	opt callstack 0
 13687                           
 13688 ;; *************** function _SPI_Open *****************
 13689 ;; Defined at:
 13690 ;;		line 72 in file "mcc_generated_files/spi.c"
 13691 ;; Parameters:    Size  Location     Type
 13692 ;;  spiUniqueCon    1    wreg     enum E353
 13693 ;; Auto vars:     Size  Location     Type
 13694 ;;  spiUniqueCon    1    1[BANK0 ] enum E353
 13695 ;; Return value:  Size  Location     Type
 13696 ;;                  1    wreg      _Bool 
 13697 ;; Registers used:
 13698 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13699 ;; Tracked objects:
 13700 ;;		On entry : 0/0
 13701 ;;		On exit  : 0/0
 13702 ;;		Unchanged: 0/0
 13703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13705 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13706 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13708 ;;Total ram usage:        2 bytes
 13709 ;; Hardware stack levels used:    1
 13710 ;; Hardware stack levels required when called:   10
 13711 ;; This function calls:
 13712 ;;		Nothing
 13713 ;; This function is called by:
 13714 ;;		_main
 13715 ;; This function uses a non-reentrant model
 13716 ;;
 13717                           
 13718                           	psect	text54
 13719  003A10                     __ptext54:
 13720                           	opt callstack 0
 13721  003A10                     _SPI_Open:
 13722                           	opt callstack 20
 13723                           
 13724                           ;incstack = 0
 13725                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 13726  003A10  0100               	movlb	0	; () banked
 13727  003A12  6F61               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
 13728  003A14                     
 13729                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 13730  003A14  BAC6               	btfsc	198,5,c	;volatile
 13731  003A16  EF0F  F01D         	goto	u4761
 13732  003A1A  EF11  F01D         	goto	u4760
 13733  003A1E                     u4761:
 13734  003A1E  EF61  F01D         	goto	l130
 13735  003A22                     u4760:
 13736  003A22                     
 13737                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 13738  003A22  0100               	movlb	0	; () banked
 13739  003A24  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 13740  003A26  0D04               	mullw	4
 13741  003A28  0E01               	movlw	1
 13742  003A2A  26F3               	addwf	243,f,c
 13743  003A2C  0E00               	movlw	0
 13744  003A2E  22F4               	addwfc	244,f,c
 13745  003A30  0EAB               	movlw	low _spi_configuration
 13746  003A32  24F3               	addwf	243,w,c
 13747  003A34  6EF6               	movwf	tblptrl,c
 13748  003A36  0EFF               	movlw	high _spi_configuration
 13749  003A38  20F4               	addwfc	244,w,c
 13750  003A3A  6EF7               	movwf	tblptrh,c
 13751  003A3C                     	if	1	;There are 3 active tblptr bytes
 13752  003A3C  6AF8               	clrf	tblptru,c
 13753  003A3E  0E00               	movlw	low (__mediumconst shr (0+16))
 13754  003A40  22F8               	addwfc	tblptru,f,c
 13755  003A42                     	endif
 13756  003A42  0008               	tblrd		*
 13757  003A44  CFF5 FFC7          	movff	tablat,4039	;volatile
 13758                           
 13759                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 13760  003A48  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 13761  003A4A  0D04               	mullw	4
 13762  003A4C  0EAB               	movlw	low _spi_configuration
 13763  003A4E  24F3               	addwf	243,w,c
 13764  003A50  6EF6               	movwf	tblptrl,c
 13765  003A52  0EFF               	movlw	high _spi_configuration
 13766  003A54  20F4               	addwfc	244,w,c
 13767  003A56  6EF7               	movwf	tblptrh,c
 13768  003A58                     	if	1	;There are 3 active tblptr bytes
 13769  003A58  6AF8               	clrf	tblptru,c
 13770  003A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 13771  003A5C  22F8               	addwfc	tblptru,f,c
 13772  003A5E                     	endif
 13773  003A5E  0008               	tblrd		*
 13774  003A60  CFF5 FFC6          	movff	tablat,4038	;volatile
 13775  003A64                     
 13776                           ; BSR set to: 0
 13777                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 13778  003A64  0E00               	movlw	0
 13779  003A66  6EC5               	movwf	197,c	;volatile
 13780  003A68                     
 13781                           ; BSR set to: 0
 13782                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 13783  003A68  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 13784  003A6A  0D04               	mullw	4
 13785  003A6C  0E02               	movlw	2
 13786  003A6E  26F3               	addwf	243,f,c
 13787  003A70  0E00               	movlw	0
 13788  003A72  22F4               	addwfc	244,f,c
 13789  003A74  0EAB               	movlw	low _spi_configuration
 13790  003A76  24F3               	addwf	243,w,c
 13791  003A78  6EF6               	movwf	tblptrl,c
 13792  003A7A  0EFF               	movlw	high _spi_configuration
 13793  003A7C  20F4               	addwfc	244,w,c
 13794  003A7E  6EF7               	movwf	tblptrh,c
 13795  003A80                     	if	1	;There are 3 active tblptr bytes
 13796  003A80  6AF8               	clrf	tblptru,c
 13797  003A82  0E00               	movlw	low (__mediumconst shr (0+16))
 13798  003A84  22F8               	addwfc	tblptru,f,c
 13799  003A86                     	endif
 13800  003A86  0008               	tblrd		*
 13801  003A88  CFF5 FFC8          	movff	tablat,4040	;volatile
 13802  003A8C                     
 13803                           ; BSR set to: 0
 13804                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 13805  003A8C  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 13806  003A8E  0D04               	mullw	4
 13807  003A90  0E03               	movlw	3
 13808  003A92  26F3               	addwf	243,f,c
 13809  003A94  0E00               	movlw	0
 13810  003A96  22F4               	addwfc	244,f,c
 13811  003A98  0EAB               	movlw	low _spi_configuration
 13812  003A9A  24F3               	addwf	243,w,c
 13813  003A9C  6EF6               	movwf	tblptrl,c
 13814  003A9E  0EFF               	movlw	high _spi_configuration
 13815  003AA0  20F4               	addwfc	244,w,c
 13816  003AA2  6EF7               	movwf	tblptrh,c
 13817  003AA4                     	if	1	;There are 3 active tblptr bytes
 13818  003AA4  6AF8               	clrf	tblptru,c
 13819  003AA6  0E00               	movlw	low (__mediumconst shr (0+16))
 13820  003AA8  22F8               	addwfc	tblptru,f,c
 13821  003AAA                     	endif
 13822  003AAA  0008               	tblrd		*
 13823  003AAC  CFF5 F060          	movff	tablat,??_SPI_Open
 13824  003AB0  4760               	rlncf	??_SPI_Open& (0+255),f,b
 13825  003AB2  4760               	rlncf	??_SPI_Open& (0+255),f,b
 13826  003AB4  4760               	rlncf	??_SPI_Open& (0+255),f,b
 13827  003AB6  5094               	movf	148,w,c	;volatile
 13828  003AB8  1960               	xorwf	??_SPI_Open& (0+255),w,b
 13829  003ABA  0BF7               	andlw	-9
 13830  003ABC  1960               	xorwf	??_SPI_Open& (0+255),w,b
 13831  003ABE  6E94               	movwf	148,c	;volatile
 13832  003AC0                     
 13833                           ; BSR set to: 0
 13834                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 13835  003AC0  8AC6               	bsf	198,5,c	;volatile
 13836  003AC2                     l130:
 13837  003AC2  0012               	return		;funcret
 13838  003AC4                     __end_of_SPI_Open:
 13839                           	opt callstack 0
 13840                           
 13841 ;; *************** function _ADC_GetConversion *****************
 13842 ;; Defined at:
 13843 ;;		line 108 in file "mcc_generated_files/adc.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  channel         1    wreg     enum E12385
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;  channel         1    4[BANK0 ] enum E12385
 13848 ;; Return value:  Size  Location     Type
 13849 ;;                  2    0[BANK0 ] unsigned short 
 13850 ;; Registers used:
 13851 ;;		wreg, status,2, status,0
 13852 ;; Tracked objects:
 13853 ;;		On entry : 0/0
 13854 ;;		On exit  : 0/0
 13855 ;;		Unchanged: 0/0
 13856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13859 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13860 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13861 ;;Total ram usage:        5 bytes
 13862 ;; Hardware stack levels used:    1
 13863 ;; Hardware stack levels required when called:   10
 13864 ;; This function calls:
 13865 ;;		Nothing
 13866 ;; This function is called by:
 13867 ;;		_main
 13868 ;; This function uses a non-reentrant model
 13869 ;;
 13870                           
 13871                           	psect	text55
 13872  003FA4                     __ptext55:
 13873                           	opt callstack 0
 13874  003FA4                     _ADC_GetConversion:
 13875                           	opt callstack 20
 13876                           
 13877                           ;incstack = 0
 13878                           ;ADC_GetConversion@channel stored from wreg
 13879  003FA4  0100               	movlb	0	; () banked
 13880  003FA6  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
 13881  003FA8                     
 13882                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 13883  003FA8  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 13884  003FAC  0100               	movlb	0	; () banked
 13885  003FAE  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 13886  003FB0  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 13887  003FB2  50C2               	movf	194,w,c	;volatile
 13888  003FB4  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 13889  003FB6  0B83               	andlw	-125
 13890  003FB8  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 13891  003FBA  6EC2               	movwf	194,c	;volatile
 13892  003FBC                     
 13893                           ; BSR set to: 0
 13894                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 13895  003FBC  80C2               	bsf	194,0,c	;volatile
 13896  003FBE                     
 13897                           ; BSR set to: 0
 13898                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 13899  003FBE  82C2               	bsf	194,1,c	;volatile
 13900  003FC0                     l197:
 13901                           
 13902                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 13903  003FC0  B2C2               	btfsc	194,1,c	;volatile
 13904  003FC2  EFE5  F01F         	goto	u4771
 13905  003FC6  EFE7  F01F         	goto	u4770
 13906  003FCA                     u4771:
 13907  003FCA  EFE0  F01F         	goto	l197
 13908  003FCE                     u4770:
 13909  003FCE                     
 13910                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13911  003FCE  50C4               	movf	196,w,c	;volatile
 13912  003FD0  0100               	movlb	0	; () banked
 13913  003FD2  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 13914  003FD4  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 13915  003FD6  50C3               	movf	195,w,c	;volatile
 13916  003FD8  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 13917  003FDA  6F60               	movwf	?_ADC_GetConversion& (0+255),b
 13918  003FDC  0E00               	movlw	0
 13919  003FDE  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 13920  003FE0  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 13921  003FE2                     
 13922                           ; BSR set to: 0
 13923  003FE2  0012               	return		;funcret
 13924  003FE4                     __end_of_ADC_GetConversion:
 13925                           	opt callstack 0
 13926                           
 13927 ;; *************** function _INTERRUPT_InterruptManager *****************
 13928 ;; Defined at:
 13929 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;		None
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;		None
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  1    wreg      void 
 13936 ;; Registers used:
 13937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13945 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13946 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13947 ;;Total ram usage:        8 bytes
 13948 ;; Hardware stack levels used:    1
 13949 ;; Hardware stack levels required when called:    9
 13950 ;; This function calls:
 13951 ;;		_INT0_ISR
 13952 ;;		_PIN_MANAGER_IOC
 13953 ;; This function is called by:
 13954 ;;		Interrupt level 2
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958                           	psect	intcode
 13959  000008                     __pintcode:
 13960                           	opt callstack 0
 13961  000008                     _INTERRUPT_InterruptManager:
 13962                           	opt callstack 12
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;incstack = 0
 13966  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13967  00000A  CFFA F032          	movff	pclath,??_INTERRUPT_InterruptManager
 13968  00000E  CFFB F033          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13969  000012  CFE1 F034          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 13970  000016  CFE2 F035          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 13971  00001A  CFF6 F036          	movff	tblptrl,??_INTERRUPT_InterruptManager+4
 13972  00001E  CFF7 F037          	movff	tblptrh,??_INTERRUPT_InterruptManager+5
 13973  000022  CFF8 F038          	movff	tblptru,??_INTERRUPT_InterruptManager+6
 13974  000026  CFF5 F039          	movff	tablat,??_INTERRUPT_InterruptManager+7
 13975  00002A                     
 13976                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
 13977  00002A  A8F2               	btfss	242,4,c	;volatile
 13978  00002C  EF1A  F000         	goto	i2u526_41
 13979  000030  EF1C  F000         	goto	i2u526_40
 13980  000034                     i2u526_41:
 13981  000034  EF27  F000         	goto	i2l44
 13982  000038                     i2u526_40:
 13983  000038  A2F2               	btfss	242,1,c	;volatile
 13984  00003A  EF21  F000         	goto	i2u527_41
 13985  00003E  EF23  F000         	goto	i2u527_40
 13986  000042                     i2u527_41:
 13987  000042  EF27  F000         	goto	i2l44
 13988  000046                     i2u527_40:
 13989  000046                     
 13990                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
 13991  000046  ECD9  F021         	call	_INT0_ISR	;wreg free
 13992                           
 13993                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 13994  00004A  EF37  F000         	goto	i2l48
 13995  00004E                     i2l44:
 13996  00004E  A6F2               	btfss	242,3,c	;volatile
 13997  000050  EF2C  F000         	goto	i2u528_41
 13998  000054  EF2E  F000         	goto	i2u528_40
 13999  000058                     i2u528_41:
 14000  000058  EF37  F000         	goto	i2l48
 14001  00005C                     i2u528_40:
 14002  00005C  A0F2               	btfss	242,0,c	;volatile
 14003  00005E  EF33  F000         	goto	i2u529_41
 14004  000062  EF35  F000         	goto	i2u529_40
 14005  000066                     i2u529_41:
 14006  000066  EF37  F000         	goto	i2l48
 14007  00006A                     i2u529_40:
 14008  00006A                     
 14009                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 14010  00006A  EC84  F021         	call	_PIN_MANAGER_IOC	;wreg free
 14011  00006E                     i2l48:
 14012  00006E  C039  FFF5         	movff	??_INTERRUPT_InterruptManager+7,tablat
 14013  000072  C038  FFF8         	movff	??_INTERRUPT_InterruptManager+6,tblptru
 14014  000076  C037  FFF7         	movff	??_INTERRUPT_InterruptManager+5,tblptrh
 14015  00007A  C036  FFF6         	movff	??_INTERRUPT_InterruptManager+4,tblptrl
 14016  00007E  C035  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 14017  000082  C034  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 14018  000086  C033  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14019  00008A  C032  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14020  00008E  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14021  000090  0011               	retfie		f
 14022  000092                     __end_of_INTERRUPT_InterruptManager:
 14023                           	opt callstack 0
 14024                           
 14025 ;; *************** function _PIN_MANAGER_IOC *****************
 14026 ;; Defined at:
 14027 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;		None
 14030 ;; Auto vars:     Size  Location     Type
 14031 ;;		None
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  1    wreg      void 
 14034 ;; Registers used:
 14035 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14036 ;; Tracked objects:
 14037 ;;		On entry : 0/0
 14038 ;;		On exit  : 0/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14045 ;;Total ram usage:        0 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; Hardware stack levels required when called:    2
 14048 ;; This function calls:
 14049 ;;		_IOCB4_ISR
 14050 ;; This function is called by:
 14051 ;;		_INTERRUPT_InterruptManager
 14052 ;; This function uses a non-reentrant model
 14053 ;;
 14054                           
 14055                           	psect	text57
 14056  004308                     __ptext57:
 14057                           	opt callstack 0
 14058  004308                     _PIN_MANAGER_IOC:
 14059                           	opt callstack 18
 14060  004308                     
 14061                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 14062  004308  010F               	movlb	15	; () banked
 14063  00430A  A95A               	btfss	90,4,b	;volatile
 14064  00430C  EF8A  F021         	goto	i2u204_41
 14065  004310  EF8C  F021         	goto	i2u204_40
 14066  004314                     i2u204_41:
 14067  004314  EF8E  F021         	goto	i2l2748
 14068  004318                     i2u204_40:
 14069  004318                     
 14070                           ; BSR set to: 15
 14071                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 14072  004318  ECEA  F020         	call	_IOCB4_ISR	;wreg free
 14073  00431C                     i2l2748:
 14074                           
 14075                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 14076  00431C  90F2               	bcf	242,0,c	;volatile
 14077  00431E  0012               	return		;funcret
 14078  004320                     __end_of_PIN_MANAGER_IOC:
 14079                           	opt callstack 0
 14080                           
 14081 ;; *************** function _IOCB4_ISR *****************
 14082 ;; Defined at:
 14083 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;		None
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      void 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14101 ;;Total ram usage:        0 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; Hardware stack levels required when called:    1
 14104 ;; This function calls:
 14105 ;;		Absolute function
 14106 ;;		_IOCB4_DefaultInterruptHandler
 14107 ;;		_IOCB4_InterruptCall
 14108 ;; This function is called by:
 14109 ;;		_PIN_MANAGER_IOC
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text58
 14114  0041D4                     __ptext58:
 14115                           	opt callstack 0
 14116  0041D4                     _IOCB4_ISR:
 14117                           	opt callstack 18
 14118  0041D4                     
 14119                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 14120  0041D4  5045               	movf	_IOCB4_InterruptHandler^0,w,c
 14121  0041D6  1046               	iorwf	(_IOCB4_InterruptHandler+1)^0,w,c
 14122  0041D8  B4D8               	btfsc	status,2,c
 14123  0041DA  EFF1  F020         	goto	i2u185_41
 14124  0041DE  EFF3  F020         	goto	i2u185_40
 14125  0041E2                     i2u185_41:
 14126  0041E2  EFFF  F020         	goto	i2l99
 14127  0041E6                     i2u185_40:
 14128  0041E6                     
 14129                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 14130  0041E6  D802               	call	i2u186_48
 14131  0041E8  EFFF  F020         	goto	i2u186_49
 14132  0041EC                     i2u186_48:
 14133  0041EC  0005               	push	
 14134  0041EE  6EFA               	movwf	pclath,c
 14135  0041F0  5045               	movf	_IOCB4_InterruptHandler^0,w,c
 14136  0041F2  6EFD               	movwf	tosl,c
 14137  0041F4  5046               	movf	(_IOCB4_InterruptHandler+1)^0,w,c
 14138  0041F6  6EFE               	movwf	tosh,c
 14139  0041F8  6AFF               	clrf	tosu,c
 14140  0041FA  50FA               	movf	pclath,w,c
 14141  0041FC  0012               	return		;indir
 14142  0041FE                     i2u186_49:
 14143  0041FE                     i2l99:
 14144  0041FE  0012               	return		;funcret
 14145  004200                     __end_of_IOCB4_ISR:
 14146                           	opt callstack 0
 14147                           
 14148 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 14149 ;; Defined at:
 14150 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;		None
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;		None
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1    wreg      void 
 14157 ;; Registers used:
 14158 ;;		None
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14168 ;;Total ram usage:        0 bytes
 14169 ;; Hardware stack levels used:    1
 14170 ;; This function calls:
 14171 ;;		Nothing
 14172 ;; This function is called by:
 14173 ;;		_PIN_MANAGER_Initialize
 14174 ;;		_IOCB4_ISR
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           	psect	text59
 14179  0043C8                     __ptext59:
 14180                           	opt callstack 0
 14181  0043C8                     _IOCB4_DefaultInterruptHandler:
 14182                           	opt callstack 18
 14183  0043C8  0012               	return		;funcret
 14184  0043CA                     __end_of_IOCB4_DefaultInterruptHandler:
 14185                           	opt callstack 0
 14186                           
 14187 ;; *************** function _IOCB4_InterruptCall *****************
 14188 ;; Defined at:
 14189 ;;		line 19 in file "main.c"
 14190 ;; Parameters:    Size  Location     Type
 14191 ;;		None
 14192 ;; Auto vars:     Size  Location     Type
 14193 ;;		None
 14194 ;; Return value:  Size  Location     Type
 14195 ;;                  1    wreg      void 
 14196 ;; Registers used:
 14197 ;;		wreg, status,2, status,0
 14198 ;; Tracked objects:
 14199 ;;		On entry : 0/0
 14200 ;;		On exit  : 0/0
 14201 ;;		Unchanged: 0/0
 14202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14207 ;;Total ram usage:        1 bytes
 14208 ;; Hardware stack levels used:    1
 14209 ;; This function calls:
 14210 ;;		Nothing
 14211 ;; This function is called by:
 14212 ;;		_main
 14213 ;;		_IOCB4_ISR
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           	psect	text60
 14218  004142                     __ptext60:
 14219                           	opt callstack 0
 14220  004142                     _IOCB4_InterruptCall:
 14221                           	opt callstack 18
 14222  004142                     
 14223                           ;main.c: 21:     if(!PORTBbits.RB4){
 14224  004142  B881               	btfsc	129,4,c	;volatile
 14225  004144  EFA6  F020         	goto	i2u179_41
 14226  004148  EFA8  F020         	goto	i2u179_40
 14227  00414C                     i2u179_41:
 14228  00414C  EFBB  F020         	goto	i2l286
 14229  004150                     i2u179_40:
 14230  004150  BC89               	btfsc	137,6,c	;volatile
 14231  004152  EFAD  F020         	goto	i2u180_41
 14232  004156  EFB0  F020         	goto	i2u180_40
 14233  00415A                     i2u180_41:
 14234  00415A  0E01               	movlw	1
 14235  00415C  EFB1  F020         	goto	i2u180_46
 14236  004160                     i2u180_40:
 14237  004160  0E00               	movlw	0
 14238  004162                     i2u180_46:
 14239  004162  0AFF               	xorlw	255
 14240  004164  6E01               	movwf	??_IOCB4_InterruptCall^0,c
 14241  004166  3A01               	swapf	??_IOCB4_InterruptCall^0,f,c
 14242  004168  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 14243  00416A  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 14244  00416C  5089               	movf	137,w,c	;volatile
 14245  00416E  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 14246  004170  0BBF               	andlw	-65
 14247  004172  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 14248  004174  6E89               	movwf	137,c	;volatile
 14249  004176                     i2l286:
 14250  004176  0012               	return		;funcret
 14251  004178                     __end_of_IOCB4_InterruptCall:
 14252                           	opt callstack 0
 14253                           
 14254 ;; *************** function _INT0_ISR *****************
 14255 ;; Defined at:
 14256 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 14257 ;; Parameters:    Size  Location     Type
 14258 ;;		None
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;		None
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  1    wreg      void 
 14263 ;; Registers used:
 14264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 14265 ;; Tracked objects:
 14266 ;;		On entry : 0/0
 14267 ;;		On exit  : 0/0
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14274 ;;Total ram usage:        0 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:    8
 14277 ;; This function calls:
 14278 ;;		_INT0_CallBack
 14279 ;; This function is called by:
 14280 ;;		_INTERRUPT_InterruptManager
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284                           	psect	text61
 14285  0043B2                     __ptext61:
 14286                           	opt callstack 0
 14287  0043B2                     _INT0_ISR:
 14288                           	opt callstack 12
 14289  0043B2                     
 14290                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
 14291  0043B2  92F2               	bcf	242,1,c	;volatile
 14292  0043B4                     
 14293                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
 14294  0043B4  EC00  F021         	call	_INT0_CallBack	;wreg free
 14295  0043B8  0012               	return		;funcret
 14296  0043BA                     __end_of_INT0_ISR:
 14297                           	opt callstack 0
 14298                           
 14299 ;; *************** function _INT0_CallBack *****************
 14300 ;; Defined at:
 14301 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;		None
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;		None
 14306 ;; Return value:  Size  Location     Type
 14307 ;;                  1    wreg      void 
 14308 ;; Registers used:
 14309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 14310 ;; Tracked objects:
 14311 ;;		On entry : 0/0
 14312 ;;		On exit  : 0/0
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14319 ;;Total ram usage:        0 bytes
 14320 ;; Hardware stack levels used:    1
 14321 ;; Hardware stack levels required when called:    7
 14322 ;; This function calls:
 14323 ;;		Absolute function
 14324 ;;		_INT0_DefaultInterruptHandler
 14325 ;;		_S3_toggle
 14326 ;; This function is called by:
 14327 ;;		_INT0_ISR
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           	psect	text62
 14332  004200                     __ptext62:
 14333                           	opt callstack 0
 14334  004200                     _INT0_CallBack:
 14335                           	opt callstack 12
 14336  004200                     
 14337                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
 14338  004200  5041               	movf	_INT0_InterruptHandler^0,w,c
 14339  004202  1042               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 14340  004204  B4D8               	btfsc	status,2,c
 14341  004206  EF07  F021         	goto	i2u469_41
 14342  00420A  EF09  F021         	goto	i2u469_40
 14343  00420E                     i2u469_41:
 14344  00420E  EF15  F021         	goto	i2l461
 14345  004212                     i2u469_40:
 14346  004212                     
 14347                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
 14348  004212  D802               	call	i2u470_48
 14349  004214  EF15  F021         	goto	i2u470_49
 14350  004218                     i2u470_48:
 14351  004218  0005               	push	
 14352  00421A  6EFA               	movwf	pclath,c
 14353  00421C  5041               	movf	_INT0_InterruptHandler^0,w,c
 14354  00421E  6EFD               	movwf	tosl,c
 14355  004220  5042               	movf	(_INT0_InterruptHandler+1)^0,w,c
 14356  004222  6EFE               	movwf	tosh,c
 14357  004224  6AFF               	clrf	tosu,c
 14358  004226  50FA               	movf	pclath,w,c
 14359  004228  0012               	return		;indir
 14360  00422A                     i2u470_49:
 14361  00422A                     i2l461:
 14362  00422A  0012               	return		;funcret
 14363  00422C                     __end_of_INT0_CallBack:
 14364                           	opt callstack 0
 14365                           
 14366 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14367 ;; Defined at:
 14368 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14369 ;; Parameters:    Size  Location     Type
 14370 ;;		None
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;		None
 14373 ;; Return value:  Size  Location     Type
 14374 ;;                  1    wreg      void 
 14375 ;; Registers used:
 14376 ;;		None
 14377 ;; Tracked objects:
 14378 ;;		On entry : 0/0
 14379 ;;		On exit  : 0/0
 14380 ;;		Unchanged: 0/0
 14381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14386 ;;Total ram usage:        0 bytes
 14387 ;; Hardware stack levels used:    1
 14388 ;; This function calls:
 14389 ;;		Nothing
 14390 ;; This function is called by:
 14391 ;;		_EXT_INT_Initialize
 14392 ;;		_INT0_CallBack
 14393 ;; This function uses a non-reentrant model
 14394 ;;
 14395                           
 14396                           	psect	text63
 14397  0043CA                     __ptext63:
 14398                           	opt callstack 0
 14399  0043CA                     _INT0_DefaultInterruptHandler:
 14400                           	opt callstack 18
 14401  0043CA  0012               	return		;funcret
 14402  0043CC                     __end_of_INT0_DefaultInterruptHandler:
 14403                           	opt callstack 0
 14404                           
 14405 ;; *************** function _S3_toggle *****************
 14406 ;; Defined at:
 14407 ;;		line 26 in file "main.c"
 14408 ;; Parameters:    Size  Location     Type
 14409 ;;		None
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;		None
 14412 ;; Return value:  Size  Location     Type
 14413 ;;                  1    wreg      void 
 14414 ;; Registers used:
 14415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;Total ram usage:        0 bytes
 14426 ;; Hardware stack levels used:    1
 14427 ;; Hardware stack levels required when called:    6
 14428 ;; This function calls:
 14429 ;;		i2_lcd_draw_string
 14430 ;; This function is called by:
 14431 ;;		_main
 14432 ;;		_INT0_CallBack
 14433 ;; This function uses a non-reentrant model
 14434 ;;
 14435                           
 14436                           	psect	text64
 14437  003CC2                     __ptext64:
 14438                           	opt callstack 0
 14439  003CC2                     _S3_toggle:
 14440                           	opt callstack 12
 14441  003CC2                     
 14442                           ;main.c: 27:     if(!BUT_COMUT){
 14443  003CC2  5049               	movf	_BUT_COMUT^0,w,c
 14444  003CC4  104A               	iorwf	(_BUT_COMUT+1)^0,w,c
 14445  003CC6  A4D8               	btfss	status,2,c
 14446  003CC8  EF68  F01E         	goto	i2u455_41
 14447  003CCC  EF6A  F01E         	goto	i2u455_40
 14448  003CD0                     i2u455_41:
 14449  003CD0  EF70  F01E         	goto	i2l4550
 14450  003CD4                     i2u455_40:
 14451  003CD4                     
 14452                           ;main.c: 28:         BUT_COMUT=1;
 14453  003CD4  0E00               	movlw	0
 14454  003CD6  6E4A               	movwf	(_BUT_COMUT+1)^0,c
 14455  003CD8  0E01               	movlw	1
 14456  003CDA  6E49               	movwf	_BUT_COMUT^0,c
 14457                           
 14458                           ;main.c: 29:     }
 14459  003CDC  EF8A  F01E         	goto	i2l293
 14460  003CE0                     i2l4550:
 14461                           
 14462                           ;main.c: 31:         BUT_COMUT=0;
 14463  003CE0  0E00               	movlw	0
 14464  003CE2  6E4A               	movwf	(_BUT_COMUT+1)^0,c
 14465  003CE4  0E00               	movlw	0
 14466  003CE6  6E49               	movwf	_BUT_COMUT^0,c
 14467  003CE8  9A89               	bcf	137,5,c	;volatile
 14468  003CEA                     
 14469                           ;main.c: 33:         lcd_draw_string(100,100,"---------",0xFFFF,0x0000);
 14470  003CEA  0E00               	movlw	0
 14471  003CEC  6E21               	movwf	(i2lcd_draw_string@x+1)^0,c
 14472  003CEE  0E64               	movlw	100
 14473  003CF0  6E20               	movwf	i2lcd_draw_string@x^0,c
 14474  003CF2  0E00               	movlw	0
 14475  003CF4  6E23               	movwf	(i2lcd_draw_string@y+1)^0,c
 14476  003CF6  0E64               	movlw	100
 14477  003CF8  6E22               	movwf	i2lcd_draw_string@y^0,c
 14478  003CFA  0EBB               	movlw	low STR_1
 14479  003CFC  6E24               	movwf	i2lcd_draw_string@pS^0,c
 14480  003CFE  0EFF               	movlw	high STR_1
 14481  003D00  6E25               	movwf	(i2lcd_draw_string@pS+1)^0,c
 14482  003D02  0EFF               	movlw	255
 14483  003D04  6E27               	movwf	(i2lcd_draw_string@fg_color+1)^0,c
 14484  003D06  6826               	setf	i2lcd_draw_string@fg_color^0,c
 14485  003D08  0E00               	movlw	0
 14486  003D0A  6E29               	movwf	(i2lcd_draw_string@bg_color+1)^0,c
 14487  003D0C  0E00               	movlw	0
 14488  003D0E  6E28               	movwf	i2lcd_draw_string@bg_color^0,c
 14489  003D10  EC40  F019         	call	i2_lcd_draw_string	;wreg free
 14490  003D14                     i2l293:
 14491  003D14  0012               	return		;funcret
 14492  003D16                     __end_of_S3_toggle:
 14493                           	opt callstack 0
 14494                           
 14495 ;; *************** function i2_lcd_draw_string *****************
 14496 ;; Defined at:
 14497 ;;		line 380 in file "lib_ili9341.c"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;  x               2   31[COMRAM] unsigned short 
 14500 ;;  y               2   33[COMRAM] unsigned short 
 14501 ;;  pS              2   35[COMRAM] PTR const unsigned char 
 14502 ;;		 -> sPOT(100), STR_2(12), STR_1(10), 
 14503 ;;  fg_color        2   37[COMRAM] unsigned short 
 14504 ;;  bg_color        2   39[COMRAM] unsigned short 
 14505 ;; Auto vars:     Size  Location     Type
 14506 ;;  lcd_draw_str    2   47[COMRAM] unsigned short 
 14507 ;;  lcd_draw_str    2   45[COMRAM] unsigned short 
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  1    wreg      void 
 14510 ;; Registers used:
 14511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14517 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14518 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14520 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14521 ;;Total ram usage:       18 bytes
 14522 ;; Hardware stack levels used:    1
 14523 ;; Hardware stack levels required when called:    5
 14524 ;; This function calls:
 14525 ;;		i2_lcd_draw_char
 14526 ;; This function is called by:
 14527 ;;		_S3_toggle
 14528 ;; This function uses a non-reentrant model
 14529 ;;
 14530                           
 14531                           	psect	text65
 14532  003280                     __ptext65:
 14533                           	opt callstack 0
 14534  003280                     i2_lcd_draw_string:
 14535                           	opt callstack 12
 14536  003280                     
 14537                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 14538  003280  EFBF  F019         	goto	i2l4542
 14539  003284                     i2l4528:
 14540                           
 14541                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 14542  003284  0E00               	movlw	0
 14543  003286  6E31               	movwf	(i2lcd_draw_string@lIndex+1)^0,c
 14544  003288  0E00               	movlw	0
 14545  00328A  6E30               	movwf	i2lcd_draw_string@lIndex^0,c
 14546                           
 14547                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 14548  00328C  0E00               	movlw	0
 14549  00328E  6E2F               	movwf	(i2lcd_draw_string@k+1)^0,c
 14550  003290  0E00               	movlw	0
 14551  003292  6E2E               	movwf	i2lcd_draw_string@k^0,c
 14552  003294  EF6B  F019         	goto	i2l4534
 14553  003298                     i2l4530:
 14554                           
 14555                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 14556  003298  90D8               	bcf	status,0,c
 14557  00329A  3430               	rlcf	i2lcd_draw_string@lIndex^0,w,c
 14558  00329C  6EF6               	movwf	tblptrl,c
 14559  00329E  3431               	rlcf	(i2lcd_draw_string@lIndex+1)^0,w,c
 14560  0032A0  6EF7               	movwf	tblptrh,c
 14561  0032A2  0EDF               	movlw	low _font
 14562  0032A4  26F6               	addwf	tblptrl,f,c
 14563  0032A6  0EF1               	movlw	high _font
 14564  0032A8  22F7               	addwfc	tblptrh,f,c
 14565  0032AA                     	if	1	;There are 3 active tblptr bytes
 14566  0032AA  6AF8               	clrf	tblptru,c
 14567  0032AC  0E00               	movlw	low (__mediumconst shr (0+16))
 14568  0032AE  22F8               	addwfc	tblptru,f,c
 14569  0032B0                     	endif
 14570  0032B0  0009               	tblrd		*+
 14571  0032B2  CFF5 F02A          	movff	tablat,??i2_lcd_draw_string
 14572  0032B6  0009               	tblrd		*+
 14573  0032B8  CFF5 F02B          	movff	tablat,??i2_lcd_draw_string+1
 14574  0032BC  90D8               	bcf	status,0,c
 14575  0032BE  362A               	rlcf	??i2_lcd_draw_string^0,f,c
 14576  0032C0  362B               	rlcf	(??i2_lcd_draw_string+1)^0,f,c
 14577  0032C2  0E01               	movlw	1
 14578  0032C4  262A               	addwf	??i2_lcd_draw_string^0,f,c
 14579  0032C6  0E00               	movlw	0
 14580  0032C8  222B               	addwfc	(??i2_lcd_draw_string+1)^0,f,c
 14581  0032CA  502A               	movf	??i2_lcd_draw_string^0,w,c
 14582  0032CC  2630               	addwf	i2lcd_draw_string@lIndex^0,f,c
 14583  0032CE  502B               	movf	(??i2_lcd_draw_string+1)^0,w,c
 14584  0032D0  2231               	addwfc	(i2lcd_draw_string@lIndex+1)^0,f,c
 14585  0032D2                     
 14586                           ;lib_ili9341.c: 390:         }
 14587  0032D2  4A2E               	infsnz	i2lcd_draw_string@k^0,f,c
 14588  0032D4  2A2F               	incf	(i2lcd_draw_string@k+1)^0,f,c
 14589  0032D6                     i2l4534:
 14590  0032D6  0EE0               	movlw	224
 14591  0032D8  6E2A               	movwf	??i2_lcd_draw_string^0,c
 14592  0032DA  0EFF               	movlw	255
 14593  0032DC  6E2B               	movwf	(??i2_lcd_draw_string+1)^0,c
 14594  0032DE  C024  FFF6         	movff	i2lcd_draw_string@pS,tblptrl
 14595  0032E2  C025  FFF7         	movff	i2lcd_draw_string@pS+1,tblptrh
 14596  0032E6  0E00               	movlw	low (__mediumconst shr (0+16))
 14597  0032E8  6EF8               	movwf	tblptru,c
 14598  0032EA  0E0E               	movlw	(high __ramtop+-1)
 14599  0032EC  64F7               	cpfsgt	tblptrh,c
 14600  0032EE  D003               	bra	i2u451_47
 14601  0032F0  0008               	tblrd		*
 14602  0032F2  50F5               	movf	tablat,w,c
 14603  0032F4  D005               	bra	i2u451_40
 14604  0032F6                     i2u451_47:
 14605  0032F6  CFF6 FFE1          	movff	tblptrl,fsr1l
 14606  0032FA  CFF7 FFE2          	movff	tblptrh,fsr1h
 14607  0032FE  50E7               	movf	indf1,w,c
 14608  003300                     i2u451_40:
 14609  003300  6E2C               	movwf	(??i2_lcd_draw_string+2)^0,c
 14610  003302  6A2D               	clrf	(??i2_lcd_draw_string+3)^0,c
 14611  003304  502A               	movf	??i2_lcd_draw_string^0,w,c
 14612  003306  262C               	addwf	(??i2_lcd_draw_string+2)^0,f,c
 14613  003308  502B               	movf	(??i2_lcd_draw_string+1)^0,w,c
 14614  00330A  222D               	addwfc	(??i2_lcd_draw_string+3)^0,f,c
 14615  00330C  502C               	movf	(??i2_lcd_draw_string+2)^0,w,c
 14616  00330E  5C2E               	subwf	i2lcd_draw_string@k^0,w,c
 14617  003310  502D               	movf	(??i2_lcd_draw_string+3)^0,w,c
 14618  003312  582F               	subwfb	(i2lcd_draw_string@k+1)^0,w,c
 14619  003314  A0D8               	btfss	status,0,c
 14620  003316  EF8F  F019         	goto	i2u452_41
 14621  00331A  EF91  F019         	goto	i2u452_40
 14622  00331E                     i2u452_41:
 14623  00331E  EF4C  F019         	goto	i2l4530
 14624  003322                     i2u452_40:
 14625  003322                     
 14626                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 14627  003322  C020  F00A         	movff	i2lcd_draw_string@x,i2lcd_draw_char@x
 14628  003326  C021  F00B         	movff	i2lcd_draw_string@x+1,i2lcd_draw_char@x+1
 14629  00332A  C022  F00C         	movff	i2lcd_draw_string@y,i2lcd_draw_char@y
 14630  00332E  C023  F00D         	movff	i2lcd_draw_string@y+1,i2lcd_draw_char@y+1
 14631  003332  C030  F00E         	movff	i2lcd_draw_string@lIndex,i2lcd_draw_char@fIndex
 14632  003336  C031  F00F         	movff	i2lcd_draw_string@lIndex+1,i2lcd_draw_char@fIndex+1
 14633  00333A  C026  F010         	movff	i2lcd_draw_string@fg_color,i2lcd_draw_char@fg_color
 14634  00333E  C027  F011         	movff	i2lcd_draw_string@fg_color+1,i2lcd_draw_char@fg_color+1
 14635  003342  C028  F012         	movff	i2lcd_draw_string@bg_color,i2lcd_draw_char@bg_color
 14636  003346  C029  F013         	movff	i2lcd_draw_string@bg_color+1,i2lcd_draw_char@bg_color+1
 14637  00334A  EC8E  F016         	call	i2_lcd_draw_char	;wreg free
 14638  00334E                     
 14639                           ;lib_ili9341.c: 394:         x += font[lIndex];
 14640  00334E  90D8               	bcf	status,0,c
 14641  003350  3430               	rlcf	i2lcd_draw_string@lIndex^0,w,c
 14642  003352  6EF6               	movwf	tblptrl,c
 14643  003354  3431               	rlcf	(i2lcd_draw_string@lIndex+1)^0,w,c
 14644  003356  6EF7               	movwf	tblptrh,c
 14645  003358  0EDF               	movlw	low _font
 14646  00335A  26F6               	addwf	tblptrl,f,c
 14647  00335C  0EF1               	movlw	high _font
 14648  00335E  22F7               	addwfc	tblptrh,f,c
 14649  003360                     	if	1	;There are 3 active tblptr bytes
 14650  003360  6AF8               	clrf	tblptru,c
 14651  003362  0E00               	movlw	low (__mediumconst shr (0+16))
 14652  003364  22F8               	addwfc	tblptru,f,c
 14653  003366                     	endif
 14654  003366  0009               	tblrd		*+
 14655  003368  CFF5 F02A          	movff	tablat,??i2_lcd_draw_string
 14656  00336C  0009               	tblrd		*+
 14657  00336E  CFF5 F02B          	movff	tablat,??i2_lcd_draw_string+1
 14658  003372  502A               	movf	??i2_lcd_draw_string^0,w,c
 14659  003374  2620               	addwf	i2lcd_draw_string@x^0,f,c
 14660  003376  502B               	movf	(??i2_lcd_draw_string+1)^0,w,c
 14661  003378  2221               	addwfc	(i2lcd_draw_string@x+1)^0,f,c
 14662  00337A                     
 14663                           ;lib_ili9341.c: 396:         pS++;
 14664  00337A  4A24               	infsnz	i2lcd_draw_string@pS^0,f,c
 14665  00337C  2A25               	incf	(i2lcd_draw_string@pS+1)^0,f,c
 14666  00337E                     i2l4542:
 14667                           
 14668                           ;lib_ili9341.c: 384:     while(*pS)
 14669  00337E  C024  FFF6         	movff	i2lcd_draw_string@pS,tblptrl
 14670  003382  C025  FFF7         	movff	i2lcd_draw_string@pS+1,tblptrh
 14671  003386  0E00               	movlw	low (__mediumconst shr (0+16))
 14672  003388  6EF8               	movwf	tblptru,c
 14673  00338A  0E0E               	movlw	(high __ramtop+-1)
 14674  00338C  64F7               	cpfsgt	tblptrh,c
 14675  00338E  D003               	bra	i2u453_47
 14676  003390  0008               	tblrd		*
 14677  003392  50F5               	movf	tablat,w,c
 14678  003394  D005               	bra	i2u453_40
 14679  003396                     i2u453_47:
 14680  003396  CFF6 FFE1          	movff	tblptrl,fsr1l
 14681  00339A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14682  00339E  50E7               	movf	indf1,w,c
 14683  0033A0                     i2u453_40:
 14684  0033A0  0900               	iorlw	0
 14685  0033A2  A4D8               	btfss	status,2,c
 14686  0033A4  EFD6  F019         	goto	i2u454_41
 14687  0033A8  EFD8  F019         	goto	i2u454_40
 14688  0033AC                     i2u454_41:
 14689  0033AC  EF42  F019         	goto	i2l4528
 14690  0033B0                     i2u454_40:
 14691  0033B0  0012               	return		;funcret
 14692  0033B2                     __end_ofi2_lcd_draw_string:
 14693                           	opt callstack 0
 14694                           
 14695 ;; *************** function i2_lcd_draw_char *****************
 14696 ;; Defined at:
 14697 ;;		line 355 in file "lib_ili9341.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;  x               2    9[COMRAM] unsigned short 
 14700 ;;  y               2   11[COMRAM] unsigned short 
 14701 ;;  fIndex          2   13[COMRAM] unsigned short 
 14702 ;;  fg_color        2   15[COMRAM] unsigned short 
 14703 ;;  bg_color        2   17[COMRAM] unsigned short 
 14704 ;; Auto vars:     Size  Location     Type
 14705 ;;  lcd_draw_cha    1   30[COMRAM] unsigned char 
 14706 ;;  lcd_draw_cha    1   29[COMRAM] unsigned char 
 14707 ;;  lcd_draw_cha    1   28[COMRAM] unsigned char 
 14708 ;; Return value:  Size  Location     Type
 14709 ;;                  1    wreg      void 
 14710 ;; Registers used:
 14711 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14712 ;; Tracked objects:
 14713 ;;		On entry : 0/0
 14714 ;;		On exit  : 0/0
 14715 ;;		Unchanged: 0/0
 14716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14717 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14718 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14719 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14720 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14721 ;;Total ram usage:       22 bytes
 14722 ;; Hardware stack levels used:    1
 14723 ;; Hardware stack levels required when called:    4
 14724 ;; This function calls:
 14725 ;;		i2_lcd_draw_pixel
 14726 ;;		i2_lcd_set_cursor
 14727 ;; This function is called by:
 14728 ;;		i2_lcd_draw_string
 14729 ;; This function uses a non-reentrant model
 14730 ;;
 14731                           
 14732                           	psect	text66
 14733  002D1C                     __ptext66:
 14734                           	opt callstack 0
 14735  002D1C                     i2_lcd_draw_char:
 14736                           	opt callstack 12
 14737  002D1C                     
 14738                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 14739  002D1C  0E00               	movlw	0
 14740  002D1E  6E1D               	movwf	i2lcd_draw_char@j^0,c
 14741  002D20  EF2E  F017         	goto	i2l4168
 14742  002D24                     i2l4138:
 14743                           
 14744                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 14745  002D24  90D8               	bcf	status,0,c
 14746  002D26  340E               	rlcf	i2lcd_draw_char@fIndex^0,w,c
 14747  002D28  6EF6               	movwf	tblptrl,c
 14748  002D2A  340F               	rlcf	(i2lcd_draw_char@fIndex+1)^0,w,c
 14749  002D2C  6EF7               	movwf	tblptrh,c
 14750  002D2E  0EDF               	movlw	low _font
 14751  002D30  26F6               	addwf	tblptrl,f,c
 14752  002D32  0EF1               	movlw	high _font
 14753  002D34  22F7               	addwfc	tblptrh,f,c
 14754  002D36                     	if	1	;There are 3 active tblptr bytes
 14755  002D36  6AF8               	clrf	tblptru,c
 14756  002D38  0E00               	movlw	low (__mediumconst shr (0+16))
 14757  002D3A  22F8               	addwfc	tblptru,f,c
 14758  002D3C                     	endif
 14759  002D3C  0009               	tblrd		*+
 14760  002D3E  CFF5 F014          	movff	tablat,??i2_lcd_draw_char
 14761  002D42  0009               	tblrd		*+
 14762  002D44  CFF5 F015          	movff	tablat,??i2_lcd_draw_char+1
 14763  002D48  501D               	movf	i2lcd_draw_char@j^0,w,c
 14764  002D4A  5E14               	subwf	??i2_lcd_draw_char^0,f,c
 14765  002D4C  0E00               	movlw	0
 14766  002D4E  5A15               	subwfb	(??i2_lcd_draw_char+1)^0,f,c
 14767  002D50  500A               	movf	i2lcd_draw_char@x^0,w,c
 14768  002D52  2414               	addwf	??i2_lcd_draw_char^0,w,c
 14769  002D54  6E06               	movwf	i2lcd_set_cursor@x^0,c
 14770  002D56  500B               	movf	(i2lcd_draw_char@x+1)^0,w,c
 14771  002D58  2015               	addwfc	(??i2_lcd_draw_char+1)^0,w,c
 14772  002D5A  6E07               	movwf	(i2lcd_set_cursor@x+1)^0,c
 14773  002D5C  C00C  F008         	movff	i2lcd_draw_char@y,i2lcd_set_cursor@y
 14774  002D60  C00D  F009         	movff	i2lcd_draw_char@y+1,i2lcd_set_cursor@y+1
 14775  002D64  EC16  F021         	call	i2_lcd_set_cursor	;wreg free
 14776  002D68                     
 14777                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 14778  002D68  0E00               	movlw	0
 14779  002D6A  6E1E               	movwf	i2lcd_draw_char@k^0,c
 14780  002D6C                     i2l4146:
 14781                           
 14782                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 14783  002D6C  0E00               	movlw	0
 14784  002D6E  6E1F               	movwf	i2lcd_draw_char@i^0,c
 14785  002D70                     i2l4152:
 14786                           
 14787                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 14788  002D70  501D               	movf	i2lcd_draw_char@j^0,w,c
 14789  002D72  6E14               	movwf	??i2_lcd_draw_char^0,c
 14790  002D74  6A15               	clrf	(??i2_lcd_draw_char+1)^0,c
 14791  002D76  90D8               	bcf	status,0,c
 14792  002D78  3614               	rlcf	??i2_lcd_draw_char^0,f,c
 14793  002D7A  3615               	rlcf	(??i2_lcd_draw_char+1)^0,f,c
 14794  002D7C  90D8               	bcf	status,0,c
 14795  002D7E  340E               	rlcf	i2lcd_draw_char@fIndex^0,w,c
 14796  002D80  6EF6               	movwf	tblptrl,c
 14797  002D82  340F               	rlcf	(i2lcd_draw_char@fIndex+1)^0,w,c
 14798  002D84  6EF7               	movwf	tblptrh,c
 14799  002D86  0EDF               	movlw	low _font
 14800  002D88  26F6               	addwf	tblptrl,f,c
 14801  002D8A  0EF1               	movlw	high _font
 14802  002D8C  22F7               	addwfc	tblptrh,f,c
 14803  002D8E                     	if	1	;There are 3 active tblptr bytes
 14804  002D8E  6AF8               	clrf	tblptru,c
 14805  002D90  0E00               	movlw	low (__mediumconst shr (0+16))
 14806  002D92  22F8               	addwfc	tblptru,f,c
 14807  002D94                     	endif
 14808  002D94  0009               	tblrd		*+
 14809  002D96  CFF5 F016          	movff	tablat,??i2_lcd_draw_char+2
 14810  002D9A  0009               	tblrd		*+
 14811  002D9C  CFF5 F017          	movff	tablat,??i2_lcd_draw_char+3
 14812  002DA0  90D8               	bcf	status,0,c
 14813  002DA2  3616               	rlcf	(??i2_lcd_draw_char+2)^0,f,c
 14814  002DA4  3617               	rlcf	(??i2_lcd_draw_char+3)^0,f,c
 14815  002DA6  5014               	movf	??i2_lcd_draw_char^0,w,c
 14816  002DA8  5E16               	subwf	(??i2_lcd_draw_char+2)^0,f,c
 14817  002DAA  5015               	movf	(??i2_lcd_draw_char+1)^0,w,c
 14818  002DAC  5A17               	subwfb	(??i2_lcd_draw_char+3)^0,f,c
 14819  002DAE  501E               	movf	i2lcd_draw_char@k^0,w,c
 14820  002DB0  5E16               	subwf	(??i2_lcd_draw_char+2)^0,f,c
 14821  002DB2  0E00               	movlw	0
 14822  002DB4  5A17               	subwfb	(??i2_lcd_draw_char+3)^0,f,c
 14823  002DB6  500E               	movf	i2lcd_draw_char@fIndex^0,w,c
 14824  002DB8  2616               	addwf	(??i2_lcd_draw_char+2)^0,f,c
 14825  002DBA  500F               	movf	(i2lcd_draw_char@fIndex+1)^0,w,c
 14826  002DBC  2217               	addwfc	(??i2_lcd_draw_char+3)^0,f,c
 14827  002DBE  90D8               	bcf	status,0,c
 14828  002DC0  3616               	rlcf	(??i2_lcd_draw_char+2)^0,f,c
 14829  002DC2  3617               	rlcf	(??i2_lcd_draw_char+3)^0,f,c
 14830  002DC4  0EDF               	movlw	low _font
 14831  002DC6  2416               	addwf	(??i2_lcd_draw_char+2)^0,w,c
 14832  002DC8  6EF6               	movwf	tblptrl,c
 14833  002DCA  0EF1               	movlw	high _font
 14834  002DCC  2017               	addwfc	(??i2_lcd_draw_char+3)^0,w,c
 14835  002DCE  6EF7               	movwf	tblptrh,c
 14836  002DD0                     	if	1	;There are 3 active tblptr bytes
 14837  002DD0  6AF8               	clrf	tblptru,c
 14838  002DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 14839  002DD4  22F8               	addwfc	tblptru,f,c
 14840  002DD6                     	endif
 14841  002DD6  0009               	tblrd		*+
 14842  002DD8  CFF5 F018          	movff	tablat,??i2_lcd_draw_char+4
 14843  002DDC  0009               	tblrd		*+
 14844  002DDE  CFF5 F019          	movff	tablat,??i2_lcd_draw_char+5
 14845  002DE2  C01F  F01A         	movff	i2lcd_draw_char@i,??i2_lcd_draw_char+6
 14846  002DE6  0E80               	movlw	128
 14847  002DE8  6E1B               	movwf	(??i2_lcd_draw_char+7)^0,c
 14848  002DEA  0E00               	movlw	0
 14849  002DEC  6E1C               	movwf	(??i2_lcd_draw_char+8)^0,c
 14850  002DEE  2A1A               	incf	(??i2_lcd_draw_char+6)^0,f,c
 14851  002DF0  EFFD  F016         	goto	i2u399_44
 14852  002DF4                     i2u399_45:
 14853  002DF4  341C               	rlcf	(??i2_lcd_draw_char+8)^0,w,c
 14854  002DF6  321C               	rrcf	(??i2_lcd_draw_char+8)^0,f,c
 14855  002DF8  321B               	rrcf	(??i2_lcd_draw_char+7)^0,f,c
 14856  002DFA                     i2u399_44:
 14857  002DFA  2E1A               	decfsz	(??i2_lcd_draw_char+6)^0,f,c
 14858  002DFC  EFFA  F016         	goto	i2u399_45
 14859  002E00  5018               	movf	(??i2_lcd_draw_char+4)^0,w,c
 14860  002E02  161B               	andwf	(??i2_lcd_draw_char+7)^0,f,c
 14861  002E04  5019               	movf	(??i2_lcd_draw_char+5)^0,w,c
 14862  002E06  161C               	andwf	(??i2_lcd_draw_char+8)^0,f,c
 14863  002E08  501B               	movf	(??i2_lcd_draw_char+7)^0,w,c
 14864  002E0A  101C               	iorwf	(??i2_lcd_draw_char+8)^0,w,c
 14865  002E0C  B4D8               	btfsc	status,2,c
 14866  002E0E  EF0B  F017         	goto	i2u400_41
 14867  002E12  EF0D  F017         	goto	i2u400_40
 14868  002E16                     i2u400_41:
 14869  002E16  EF15  F017         	goto	i2l4156
 14870  002E1A                     i2u400_40:
 14871  002E1A                     
 14872                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 14873  002E1A  C010  F004         	movff	i2lcd_draw_char@fg_color,i2lcd_draw_pixel@color
 14874  002E1E  C011  F005         	movff	i2lcd_draw_char@fg_color+1,i2lcd_draw_pixel@color+1
 14875  002E22  ECB2  F021         	call	i2_lcd_draw_pixel	;wreg free
 14876                           
 14877                           ;lib_ili9341.c: 370:                 }
 14878  002E26  EF1B  F017         	goto	i2l4158
 14879  002E2A                     i2l4156:
 14880                           
 14881                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 14882  002E2A  C012  F004         	movff	i2lcd_draw_char@bg_color,i2lcd_draw_pixel@color
 14883  002E2E  C013  F005         	movff	i2lcd_draw_char@bg_color+1,i2lcd_draw_pixel@color+1
 14884  002E32  ECB2  F021         	call	i2_lcd_draw_pixel	;wreg free
 14885  002E36                     i2l4158:
 14886                           
 14887                           ;lib_ili9341.c: 375:             }
 14888  002E36  2A1F               	incf	i2lcd_draw_char@i^0,f,c
 14889  002E38  0E07               	movlw	7
 14890  002E3A  641F               	cpfsgt	i2lcd_draw_char@i^0,c
 14891  002E3C  EF22  F017         	goto	i2u401_41
 14892  002E40  EF24  F017         	goto	i2u401_40
 14893  002E44                     i2u401_41:
 14894  002E44  EFB8  F016         	goto	i2l4152
 14895  002E48                     i2u401_40:
 14896  002E48                     
 14897                           ;lib_ili9341.c: 376:         }
 14898  002E48  2A1E               	incf	i2lcd_draw_char@k^0,f,c
 14899  002E4A  0E01               	movlw	1
 14900  002E4C  641E               	cpfsgt	i2lcd_draw_char@k^0,c
 14901  002E4E  EF2B  F017         	goto	i2u402_41
 14902  002E52  EF2D  F017         	goto	i2u402_40
 14903  002E56                     i2u402_41:
 14904  002E56  EFB6  F016         	goto	i2l4146
 14905  002E5A                     i2u402_40:
 14906  002E5A                     
 14907                           ;lib_ili9341.c: 377:     }
 14908  002E5A  2A1D               	incf	i2lcd_draw_char@j^0,f,c
 14909  002E5C                     i2l4168:
 14910  002E5C  90D8               	bcf	status,0,c
 14911  002E5E  340E               	rlcf	i2lcd_draw_char@fIndex^0,w,c
 14912  002E60  6EF6               	movwf	tblptrl,c
 14913  002E62  340F               	rlcf	(i2lcd_draw_char@fIndex+1)^0,w,c
 14914  002E64  6EF7               	movwf	tblptrh,c
 14915  002E66  0EDF               	movlw	low _font
 14916  002E68  26F6               	addwf	tblptrl,f,c
 14917  002E6A  0EF1               	movlw	high _font
 14918  002E6C  22F7               	addwfc	tblptrh,f,c
 14919  002E6E                     	if	1	;There are 3 active tblptr bytes
 14920  002E6E  6AF8               	clrf	tblptru,c
 14921  002E70  0E00               	movlw	low (__mediumconst shr (0+16))
 14922  002E72  22F8               	addwfc	tblptru,f,c
 14923  002E74                     	endif
 14924  002E74  501D               	movf	i2lcd_draw_char@j^0,w,c
 14925  002E76  6E14               	movwf	??i2_lcd_draw_char^0,c
 14926  002E78  6A15               	clrf	(??i2_lcd_draw_char+1)^0,c
 14927  002E7A  0009               	tblrd		*+
 14928  002E7C  50F5               	movf	tablat,w,c
 14929  002E7E  5C14               	subwf	??i2_lcd_draw_char^0,w,c
 14930  002E80  0009               	tblrd		*+
 14931  002E82  50F5               	movf	tablat,w,c
 14932  002E84  5815               	subwfb	(??i2_lcd_draw_char+1)^0,w,c
 14933  002E86  A0D8               	btfss	status,0,c
 14934  002E88  EF48  F017         	goto	i2u403_41
 14935  002E8C  EF4A  F017         	goto	i2u403_40
 14936  002E90                     i2u403_41:
 14937  002E90  EF92  F016         	goto	i2l4138
 14938  002E94                     i2u403_40:
 14939  002E94  0012               	return		;funcret
 14940  002E96                     __end_ofi2_lcd_draw_char:
 14941                           	opt callstack 0
 14942                           
 14943 ;; *************** function i2_lcd_set_cursor *****************
 14944 ;; Defined at:
 14945 ;;		line 144 in file "lib_ili9341.c"
 14946 ;; Parameters:    Size  Location     Type
 14947 ;;  x               2    5[COMRAM] unsigned short 
 14948 ;;  y               2    7[COMRAM] unsigned short 
 14949 ;; Auto vars:     Size  Location     Type
 14950 ;;		None
 14951 ;; Return value:  Size  Location     Type
 14952 ;;                  1    wreg      unsigned char 
 14953 ;; Registers used:
 14954 ;;		wreg, status,2, status,0, cstack
 14955 ;; Tracked objects:
 14956 ;;		On entry : 0/0
 14957 ;;		On exit  : 0/0
 14958 ;;		Unchanged: 0/0
 14959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14964 ;;Total ram usage:        4 bytes
 14965 ;; Hardware stack levels used:    1
 14966 ;; Hardware stack levels required when called:    3
 14967 ;; This function calls:
 14968 ;;		i2_lcd_set_cursor_x
 14969 ;;		i2_lcd_set_cursor_y
 14970 ;; This function is called by:
 14971 ;;		i2_lcd_draw_char
 14972 ;; This function uses a non-reentrant model
 14973 ;;
 14974                           
 14975                           	psect	text67
 14976  00422C                     __ptext67:
 14977                           	opt callstack 0
 14978  00422C                     i2_lcd_set_cursor:
 14979                           	opt callstack 12
 14980  00422C                     
 14981                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 14982  00422C  C006  F004         	movff	i2lcd_set_cursor@x,i2lcd_set_cursor_x@x
 14983  004230  C007  F005         	movff	i2lcd_set_cursor@x+1,i2lcd_set_cursor_x@x+1
 14984  004234  EC6C  F01F         	call	i2_lcd_set_cursor_x	;wreg free
 14985  004238  0900               	iorlw	0
 14986  00423A  A4D8               	btfss	status,2,c
 14987  00423C  EF22  F021         	goto	i2u326_41
 14988  004240  EF24  F021         	goto	i2u326_40
 14989  004244                     i2u326_41:
 14990  004244  EF2A  F021         	goto	i2l353
 14991  004248                     i2u326_40:
 14992  004248  C008  F004         	movff	i2lcd_set_cursor@y,i2lcd_set_cursor_y@y
 14993  00424C  C009  F005         	movff	i2lcd_set_cursor@y+1,i2lcd_set_cursor_y@y+1
 14994  004250  EC48  F01F         	call	i2_lcd_set_cursor_y	;wreg free
 14995  004254                     i2l353:
 14996  004254  0012               	return		;funcret
 14997  004256                     __end_ofi2_lcd_set_cursor:
 14998                           	opt callstack 0
 14999                           
 15000 ;; *************** function i2_lcd_set_cursor_y *****************
 15001 ;; Defined at:
 15002 ;;		line 170 in file "lib_ili9341.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;  y               2    3[COMRAM] unsigned short 
 15005 ;; Auto vars:     Size  Location     Type
 15006 ;;		None
 15007 ;; Return value:  Size  Location     Type
 15008 ;;                  1    wreg      unsigned char 
 15009 ;; Registers used:
 15010 ;;		wreg, status,2, status,0, cstack
 15011 ;; Tracked objects:
 15012 ;;		On entry : 0/0
 15013 ;;		On exit  : 0/0
 15014 ;;		Unchanged: 0/0
 15015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15020 ;;Total ram usage:        2 bytes
 15021 ;; Hardware stack levels used:    1
 15022 ;; Hardware stack levels required when called:    2
 15023 ;; This function calls:
 15024 ;;		i2_lcd_send
 15025 ;; This function is called by:
 15026 ;;		i2_lcd_set_cursor
 15027 ;; This function uses a non-reentrant model
 15028 ;;
 15029                           
 15030                           	psect	text68
 15031  003E90                     __ptext68:
 15032                           	opt callstack 0
 15033  003E90                     i2_lcd_set_cursor_y:
 15034                           	opt callstack 12
 15035  003E90                     
 15036                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 15037  003E90  5005               	movf	(i2lcd_set_cursor_y@y+1)^0,w,c
 15038  003E92  E109               	bnz	i2u288_40
 15039  003E94  0EF0               	movlw	240
 15040  003E96  5C04               	subwf	i2lcd_set_cursor_y@y^0,w,c
 15041  003E98  A0D8               	btfss	status,0,c
 15042  003E9A  EF51  F01F         	goto	i2u288_41
 15043  003E9E  EF53  F01F         	goto	i2u288_40
 15044  003EA2                     i2u288_41:
 15045  003EA2  EF56  F01F         	goto	i2l3598
 15046  003EA6                     i2u288_40:
 15047  003EA6                     
 15048                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 15049  003EA6  0E01               	movlw	1
 15050  003EA8  EF6B  F01F         	goto	i2l361
 15051  003EAC                     i2l3598:
 15052                           
 15053                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 15054  003EAC  0E2A               	movlw	42
 15055  003EAE  6E02               	movwf	i2lcd_send@value^0,c
 15056  003EB0  0E00               	movlw	0
 15057  003EB2  EC90  F021         	call	i2_lcd_send
 15058                           
 15059                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 15060  003EB6  5005               	movf	(i2lcd_set_cursor_y@y+1)^0,w,c
 15061  003EB8  6E02               	movwf	i2lcd_send@value^0,c
 15062  003EBA  0E01               	movlw	1
 15063  003EBC  EC90  F021         	call	i2_lcd_send
 15064                           
 15065                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 15066  003EC0  C004  F002         	movff	i2lcd_set_cursor_y@y,i2lcd_send@value
 15067  003EC4  0E01               	movlw	1
 15068  003EC6  EC90  F021         	call	i2_lcd_send
 15069                           
 15070                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 15071  003ECA  0E2C               	movlw	44
 15072  003ECC  6E02               	movwf	i2lcd_send@value^0,c
 15073  003ECE  0E00               	movlw	0
 15074  003ED0  EC90  F021         	call	i2_lcd_send
 15075  003ED4                     
 15076                           ;lib_ili9341.c: 182:     return 0;
 15077  003ED4  0E00               	movlw	0
 15078  003ED6                     i2l361:
 15079  003ED6  0012               	return		;funcret
 15080  003ED8                     __end_ofi2_lcd_set_cursor_y:
 15081                           	opt callstack 0
 15082                           
 15083 ;; *************** function i2_lcd_set_cursor_x *****************
 15084 ;; Defined at:
 15085 ;;		line 155 in file "lib_ili9341.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;  x               2    3[COMRAM] unsigned short 
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;		None
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  1    wreg      unsigned char 
 15092 ;; Registers used:
 15093 ;;		wreg, status,2, status,0, cstack
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15103 ;;Total ram usage:        2 bytes
 15104 ;; Hardware stack levels used:    1
 15105 ;; Hardware stack levels required when called:    2
 15106 ;; This function calls:
 15107 ;;		i2_lcd_send
 15108 ;; This function is called by:
 15109 ;;		i2_lcd_set_cursor
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           	psect	text69
 15114  003ED8                     __ptext69:
 15115                           	opt callstack 0
 15116  003ED8                     i2_lcd_set_cursor_x:
 15117                           	opt callstack 12
 15118  003ED8                     
 15119                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 15120  003ED8  0E40               	movlw	64
 15121  003EDA  5C04               	subwf	i2lcd_set_cursor_x@x^0,w,c
 15122  003EDC  0E01               	movlw	1
 15123  003EDE  5805               	subwfb	(i2lcd_set_cursor_x@x+1)^0,w,c
 15124  003EE0  A0D8               	btfss	status,0,c
 15125  003EE2  EF75  F01F         	goto	i2u287_41
 15126  003EE6  EF77  F01F         	goto	i2u287_40
 15127  003EEA                     i2u287_41:
 15128  003EEA  EF7A  F01F         	goto	i2l3586
 15129  003EEE                     i2u287_40:
 15130  003EEE                     
 15131                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 15132  003EEE  0E01               	movlw	1
 15133  003EF0  EF8F  F01F         	goto	i2l357
 15134  003EF4                     i2l3586:
 15135                           
 15136                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 15137  003EF4  0E2B               	movlw	43
 15138  003EF6  6E02               	movwf	i2lcd_send@value^0,c
 15139  003EF8  0E00               	movlw	0
 15140  003EFA  EC90  F021         	call	i2_lcd_send
 15141                           
 15142                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 15143  003EFE  5005               	movf	(i2lcd_set_cursor_x@x+1)^0,w,c
 15144  003F00  6E02               	movwf	i2lcd_send@value^0,c
 15145  003F02  0E01               	movlw	1
 15146  003F04  EC90  F021         	call	i2_lcd_send
 15147                           
 15148                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 15149  003F08  C004  F002         	movff	i2lcd_set_cursor_x@x,i2lcd_send@value
 15150  003F0C  0E01               	movlw	1
 15151  003F0E  EC90  F021         	call	i2_lcd_send
 15152                           
 15153                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 15154  003F12  0E2C               	movlw	44
 15155  003F14  6E02               	movwf	i2lcd_send@value^0,c
 15156  003F16  0E00               	movlw	0
 15157  003F18  EC90  F021         	call	i2_lcd_send
 15158  003F1C                     
 15159                           ;lib_ili9341.c: 167:     return 0;
 15160  003F1C  0E00               	movlw	0
 15161  003F1E                     i2l357:
 15162  003F1E  0012               	return		;funcret
 15163  003F20                     __end_ofi2_lcd_set_cursor_x:
 15164                           	opt callstack 0
 15165                           
 15166 ;; *************** function i2_lcd_draw_pixel *****************
 15167 ;; Defined at:
 15168 ;;		line 185 in file "lib_ili9341.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;  color           2    3[COMRAM] unsigned short 
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;		None
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      unsigned char 
 15175 ;; Registers used:
 15176 ;;		wreg, status,2, cstack
 15177 ;; Tracked objects:
 15178 ;;		On entry : 0/0
 15179 ;;		On exit  : 0/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15186 ;;Total ram usage:        2 bytes
 15187 ;; Hardware stack levels used:    1
 15188 ;; Hardware stack levels required when called:    2
 15189 ;; This function calls:
 15190 ;;		i2_lcd_send
 15191 ;; This function is called by:
 15192 ;;		i2_lcd_draw_char
 15193 ;; This function uses a non-reentrant model
 15194 ;;
 15195                           
 15196                           	psect	text70
 15197  004364                     __ptext70:
 15198                           	opt callstack 0
 15199  004364                     i2_lcd_draw_pixel:
 15200                           	opt callstack 13
 15201  004364                     
 15202                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 15203  004364  5005               	movf	(i2lcd_draw_pixel@color+1)^0,w,c
 15204  004366  6E02               	movwf	i2lcd_send@value^0,c
 15205  004368  0E01               	movlw	1
 15206  00436A  EC90  F021         	call	i2_lcd_send
 15207                           
 15208                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 15209  00436E  C004  F002         	movff	i2lcd_draw_pixel@color,i2lcd_send@value
 15210  004372  0E01               	movlw	1
 15211  004374  EC90  F021         	call	i2_lcd_send
 15212  004378  0012               	return		;funcret
 15213  00437A                     __end_ofi2_lcd_draw_pixel:
 15214                           	opt callstack 0
 15215                           
 15216 ;; *************** function i2_lcd_send *****************
 15217 ;; Defined at:
 15218 ;;		line 134 in file "lib_ili9341.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  dc              1    wreg     _Bool 
 15221 ;;  value           1    1[COMRAM] unsigned char 
 15222 ;; Auto vars:     Size  Location     Type
 15223 ;;  dc              1    2[COMRAM] _Bool 
 15224 ;; Return value:  Size  Location     Type
 15225 ;;                  1    wreg      void 
 15226 ;; Registers used:
 15227 ;;		wreg, status,2, cstack
 15228 ;; Tracked objects:
 15229 ;;		On entry : 0/0
 15230 ;;		On exit  : 0/0
 15231 ;;		Unchanged: 0/0
 15232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15233 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15237 ;;Total ram usage:        2 bytes
 15238 ;; Hardware stack levels used:    1
 15239 ;; Hardware stack levels required when called:    1
 15240 ;; This function calls:
 15241 ;;		i2_SPI_ExchangeByte
 15242 ;; This function is called by:
 15243 ;;		i2_lcd_set_cursor_x
 15244 ;;		i2_lcd_set_cursor_y
 15245 ;;		i2_lcd_draw_pixel
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text71
 15250  004320                     __ptext71:
 15251                           	opt callstack 0
 15252  004320                     i2_lcd_send:
 15253                           	opt callstack 12
 15254                           
 15255                           ;incstack = 0
 15256                           ;i2lcd_send@dc stored from wreg
 15257  004320  6E03               	movwf	i2lcd_send@dc^0,c
 15258  004322                     
 15259                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 15260  004322  B003               	btfsc	i2lcd_send@dc^0,0,c
 15261  004324  D002               	bra	i2u282_45
 15262  004326  908D               	bcf	141,0,c	;volatile
 15263  004328  D001               	bra	i2u282_46
 15264  00432A                     i2u282_45:
 15265  00432A  808D               	bsf	141,0,c	;volatile
 15266  00432C                     i2u282_46:
 15267  00432C                     
 15268                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 15269  00432C  928D               	bcf	141,1,c	;volatile
 15270  00432E                     
 15271                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 15272  00432E  5002               	movf	i2lcd_send@value^0,w,c
 15273  004330  EC6B  F021         	call	i2_SPI_ExchangeByte
 15274  004334                     
 15275                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 15276  004334  828D               	bsf	141,1,c	;volatile
 15277  004336  0012               	return		;funcret
 15278  004338                     __end_ofi2_lcd_send:
 15279                           	opt callstack 0
 15280                           
 15281 ;; *************** function i2_SPI_ExchangeByte *****************
 15282 ;; Defined at:
 15283 ;;		line 92 in file "mcc_generated_files/spi.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;  data            1    wreg     unsigned char 
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;  data            1    0[COMRAM] unsigned char 
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  1    wreg      unsigned char 
 15290 ;; Registers used:
 15291 ;;		wreg
 15292 ;; Tracked objects:
 15293 ;;		On entry : 0/0
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15301 ;;Total ram usage:        1 bytes
 15302 ;; Hardware stack levels used:    1
 15303 ;; This function calls:
 15304 ;;		Nothing
 15305 ;; This function is called by:
 15306 ;;		i2_lcd_send
 15307 ;; This function uses a non-reentrant model
 15308 ;;
 15309                           
 15310                           	psect	text72
 15311  0042D6                     __ptext72:
 15312                           	opt callstack 0
 15313  0042D6                     i2_SPI_ExchangeByte:
 15314                           	opt callstack 12
 15315                           
 15316                           ;incstack = 0
 15317                           ;i2SPI_ExchangeByte@data stored from wreg
 15318  0042D6  6E01               	movwf	i2SPI_ExchangeByte@data^0,c
 15319  0042D8                     
 15320                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 15321  0042D8  C001  FFC9         	movff	i2SPI_ExchangeByte@data,4041	;volatile
 15322  0042DC                     i2l136:
 15323  0042DC  A69E               	btfss	158,3,c	;volatile
 15324  0042DE  EF73  F021         	goto	i2u277_41
 15325  0042E2  EF75  F021         	goto	i2u277_40
 15326  0042E6                     i2u277_41:
 15327  0042E6  EF6E  F021         	goto	i2l136
 15328  0042EA                     i2u277_40:
 15329  0042EA                     
 15330                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 15331  0042EA  969E               	bcf	158,3,c	;volatile
 15332                           
 15333                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;;	Return value of i2_SPI_ExchangeByte 
      +                          is never used
 15334  0042EC  50C9               	movf	201,w,c	;volatile
 15335  0042EE  0012               	return		;funcret
 15336  0042F0                     __end_ofi2_SPI_ExchangeByte:
 15337                           	opt callstack 0
 15338                           
 15339                           	psect	text73
 15340  000000                     __ptext73:
 15341                           	opt callstack 0
 15342  000000                     
 15343                           	psect	rparam
 15344  0000                     
 15345                           	psect	temp
 15346  00004D                     btemp:
 15347                           	opt callstack 0
 15348  00004D                     	ds	1
 15349  0000                     int$flags	set	btemp
 15350  0000                     wtemp8	set	btemp+1
 15351  0000                     ttemp5	set	btemp+1
 15352  0000                     ttemp6	set	btemp+4
 15353  0000                     ttemp7	set	btemp+8
 15354                           tosu	equ	0xFFF
 15355                           tosh	equ	0xFFE
 15356                           tosl	equ	0xFFD
 15357                           stkptr	equ	0xFFC
 15358                           pclatu	equ	0xFFB
 15359                           pclath	equ	0xFFA
 15360                           pcl	equ	0xFF9
 15361                           tblptru	equ	0xFF8
 15362                           tblptrh	equ	0xFF7
 15363                           tblptrl	equ	0xFF6
 15364                           tablat	equ	0xFF5
 15365                           prodh	equ	0xFF4
 15366                           prodl	equ	0xFF3
 15367                           indf0	equ	0xFEF
 15368                           postinc0	equ	0xFEE
 15369                           postdec0	equ	0xFED
 15370                           preinc0	equ	0xFEC
 15371                           plusw0	equ	0xFEB
 15372                           fsr0h	equ	0xFEA
 15373                           fsr0l	equ	0xFE9
 15374                           wreg	equ	0xFE8
 15375                           indf1	equ	0xFE7
 15376                           postinc1	equ	0xFE6
 15377                           postdec1	equ	0xFE5
 15378                           preinc1	equ	0xFE4
 15379                           plusw1	equ	0xFE3
 15380                           fsr1h	equ	0xFE2
 15381                           fsr1l	equ	0xFE1
 15382                           bsr	equ	0xFE0
 15383                           indf2	equ	0xFDF
 15384                           postinc2	equ	0xFDE
 15385                           postdec2	equ	0xFDD
 15386                           preinc2	equ	0xFDC
 15387                           plusw2	equ	0xFDB
 15388                           fsr2h	equ	0xFDA
 15389                           fsr2l	equ	0xFD9
 15390                           status	equ	0xFD8


Data Sizes:
    Strings     80
    Constant    3536
    Data        7
    BSS         152
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      76
    BANK0           160    145     159
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S2011_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), S3_toggle(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), S3_toggle(), Absolute function(), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> sPOT(BANK1[100]), STR_2(CODE[12]), STR_1(CODE[10]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_IOCB4_InterruptCall
    _S3_toggle->i2_lcd_draw_string
    i2_lcd_draw_string->i2_lcd_draw_char
    i2_lcd_draw_char->i2_lcd_set_cursor
    i2_lcd_set_cursor->i2_lcd_set_cursor_x
    i2_lcd_set_cursor->i2_lcd_set_cursor_y
    i2_lcd_set_cursor_y->i2_lcd_send
    i2_lcd_set_cursor_x->i2_lcd_send
    i2_lcd_draw_pixel->i2_lcd_send
    i2_lcd_send->i2_SPI_ExchangeByte

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    ___fltol->___flmul
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  106439
                  _ADC_GetConversion
           _INT0_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46213
                                            133 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   45839
                                            111 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45076
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44615
                                             66 BANK0     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                              9 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25670
                                             31 BANK0     18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                              9 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              5 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              3 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              3 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              3 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              1 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          8     8      0    2220
                                             49 COMRAM     8     8      0
                           _INT0_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0    2220
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0    2220
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                          _S3_toggle *
 ---------------------------------------------------------------------------------
 (13) _S3_toggle                                           0     0      0    2220
                  i2_lcd_draw_string
 ---------------------------------------------------------------------------------
 (14) i2_lcd_draw_string                                  18     8     10    2220
                                             31 COMRAM    18     8     10
                    i2_lcd_draw_char
 ---------------------------------------------------------------------------------
 (15) i2_lcd_draw_char                                    22    12     10    1864
                                              9 COMRAM    22    12     10
                   i2_lcd_draw_pixel
                   i2_lcd_set_cursor
 ---------------------------------------------------------------------------------
 (16) i2_lcd_set_cursor                                    4     0      4     932
                                              5 COMRAM     4     0      4
                 i2_lcd_set_cursor_x
                 i2_lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (17) i2_lcd_set_cursor_y                                  2     0      2     418
                                              3 COMRAM     2     0      2
                         i2_lcd_send
 ---------------------------------------------------------------------------------
 (17) i2_lcd_set_cursor_x                                  2     0      2     418
                                              3 COMRAM     2     0      2
                         i2_lcd_send
 ---------------------------------------------------------------------------------
 (16) i2_lcd_draw_pixel                                    2     0      2     422
                                              3 COMRAM     2     0      2
                         i2_lcd_send
 ---------------------------------------------------------------------------------
 (18) i2_lcd_send                                          2     1      1     326
                                              1 COMRAM     2     1      1
                 i2_SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (19) i2_SPI_ExchangeByte                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _INT0_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _S3_toggle *
         i2_lcd_draw_string
           i2_lcd_draw_char
             i2_lcd_draw_pixel
               i2_lcd_send
                 i2_SPI_ExchangeByte
             i2_lcd_set_cursor
               i2_lcd_set_cursor_x
                 i2_lcd_send
                   i2_SPI_ExchangeByte
               i2_lcd_set_cursor_y
                 i2_lcd_send
                   i2_SPI_ExchangeByte
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      84       8       51.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     91      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4C       1       80.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16F       6        0.0%
DATA                 0      0     16F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 28 11:53:13 2020

                           _SPI_Initialize 437A                           i2lcd_draw_char@i 001F  
                         i2lcd_draw_char@j 001D                           i2lcd_draw_char@k 001E  
                         i2lcd_draw_char@x 000A                           i2lcd_draw_char@y 000C  
                              _SSPSTATbits 000FC7                                         l25 42B8  
                                       l28 439C                                         l39 43C4  
                                       l91 3E8E                        ___wmul@multiplicand 0062  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
                      ?i2_lcd_set_cursor_x 0004                        ?i2_lcd_set_cursor_y 0004  
              __end_of_IOCB4_InterruptCall 4178                 ?_IOCB4_SetInterruptHandler 0060  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l102 43A6                                        l200 3FE2  
                                      l130 3AC2                                        l301 313E  
                                      l126 438A                                        l222 41D2  
                                      l136 42C2                                        l138 42D0  
                                      l139 42D4                                        l335 4140  
                                      l344 174E                                        l512 39D2  
                                      l185 4362                                        l361 3DB0  
                                      l353 3FA2                                        l521 3C6C  
                                      l601 233E                                        l514 3A0E  
                                      l347 429A                                        l364 4306  
                                      l197 3FC0                                        l357 3DFE  
                                      l437 2D1A                                        l509 398E  
                                      l470 434C                                        l446 327E  
                                      l606 1E98                                        l527 1C1C  
                                      l631 2138                                        l615 1F36  
                                      l464 43B0                                        l368 3B4A  
                                      l552 2378                                        l608 1EA0  
                                      l712 3BA6                                        l529 1C24  
                                      l561 24C8                                        l713 3BAE  
                                      l554 2380                                        l570 2908  
                                      l547 1E5E                                        l563 252C  
                                      l716 427C                                        l572 2910  
                                      l581 29BC                                        l629 20D6  
                                      l645 018C                                        l830 2B98  
                                      l582 2A06                                        l591 2172  
                                      l593 217A                                        l586 2A0E  
                                      l843 2FFA                                        l668 1318  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
               ??_INT0_SetInterruptHandler 0062                            _timer1ReloadVal 0043  
                                      _abs 3F20                                        _pad 3946  
                                      tosl 000FFD                                        wreg 000FE8  
                            _INT0_CallBack 4200                               ___flmul@aexp 007F  
                             ___flmul@bexp 0080                               ___flmul@sign 007A  
                             ___flmul@temp 0085                               ___flmul@prod 0081  
                          ?_lcd_set_cursor 0065                               ___fltol@exp1 0090  
                       __size_of_IOCB4_ISR 002C                                       l1013 35C8  
                                     ?_abs 0072                                       l1161 36BA  
                                     l1330 1816                                       l1154 369A  
                                     l1171 3878                                       l1340 1A72  
                                     l1164 3858                                       l1501 3C06  
                                     l1334 1B7A                                       l1422 287A  
                                     l4000 22EE                                       l1512 405A  
                                     l1337 1A0C                                       l1425 2882  
                                     l1434 4108                                       l1442 3CC0  
                                     l4002 2308                                       l1506 3C0E  
                                     l4010 1E70                                       l1347 1B3C  
                                     l1339 1A84                                       l1371 2588  
                                     l1523 34C0                                       l4004 2316  
                                     l1428 4020                                       l4020 1EDE  
                                     l4012 1E72                                 i2_lcd_send 4320  
                                     l1374 26E4                                       l4110 285E  
                                     l4102 27FA                                       l4030 1F1A  
                                     l4022 1EE6                                       l4014 1E8C  
                                     l1463 3944                                       l1471 3E46  
                                     l1391 3F58                                       l1448 4094  
                                     l4032 1F2A                                       l4024 1EF0  
                                     l4016 1EB6                                       l4008 1E60  
                                     l4200 00DC                                       l1528 34A0  
                                     l1385 267C                                       l1481 41A6  
                                     l5010 177E                                       l5002 1750  
                                     l1378 2620                                       l4106 283A  
                                     l1474 43C6                                       l1394 3F60  
                                     l4130 3750                                       l4122 36F4  
                                     l4050 1FF4                                       l4042 1FB6  
                                     l4026 1EF6                                       l4018 1EBE  
                                     l4202 00E0                                       l1491 37A6  
                                     l5020 17BA                                       l5012 178E  
                                     l5004 175E                                       l4108 284C  
                                     l4132 377E                                       l4124 3702  
                                     l4116 36BC                                       l4060 20AE  
                                     l4052 1FFA                                       l4044 1FC8  
                                     l4036 1F6A                                       l4028 1EFE  
                                     l4300 05E6                                       l4220 0112  
                                     l4212 0106                                       l4204 00EC  
                                     l5102 1A94                                       l5110 1ADC  
                                     l5030 17F0                                       l5022 17C0  
                                     l5014 179E                                       l5006 176C  
                                     l4126 3720                                       l4118 36E8  
                                     l4070 2110                                       l4062 20C8  
                                     l4038 1F7C                                       l4046 1FDC  
                                     l4054 2058                                       l4310 067E  
                                     l4302 060C                                       l4206 00EE  
                                     l4230 017A                                       l1487 40CE  
                                     l5120 1B50                                       l5112 1AF6  
                                     l5104 1AA0                                       l5032 1800  
                                     l5024 17CE                                       l5016 17A4  
                                     l5008 176E                                       l5200 2652  
                                     l4080 2704                                       l4128 373E  
                                     l4064 20E4                                       l4056 2076  
                                     l4048 1FEE                                       l4400 0C24  
                                     l4320 073E                                       l4312 06B6  
                                     l4304 0632                                       l4240 0206  
                                     l4232 019A                                       l4224 0118  
                                     l4216 010C                                       l4208 0100  
                                     l5122 1B5E                                       l5114 1B0A  
                                     l5106 1AAE                                       l5050 1882  
                                     l5042 184A                                       l5034 1806  
                                     l5026 17D0                                       l5018 17B4  
                                     l5210 2690                                       l5202 265E  
                                     l4170 3DB2                                       l4090 2764  
                                     l4082 2722                                       l4074 26E6  
                                     l3610 396A                                       l4066 20EA  
                                     l4058 2094                                       l4410 0CD8  
                                     l4402 0C4A                                       l4330 082C  
                                     l4322 0776                                       l4314 06EE  
                                     l4250 028C                                       l4242 0214  
                                     l4234 019C                                       l5124 1B60  
                                     l5116 1B24                                       l5108 1AD8  
                                     l5060 18CC                                       l5052 189A  
                                     l5044 1856                                       l5036 1826  
                                     l5028 17E0                                       l5140 3518  
                                     l5132 34C2                                       l5212 26B4  
                                     l5204 266C                                       l3604 42BE  
                                     l4172 3DCA                                       l4092 277A  
                                     l4084 275A                                       l4076 26FC  
                                     l3540 38A0                                       l3620 39B4  
                                     l3612 397A                                       l3700 2B78  
                                     l4068 20FA                                       l4500 12AA  
                                     l4412 0D1E                                       l4404 0C80  
                                     l4324 07BC                                       l4260 0300  
                                     l4244 0234                                       l4252 029E  
                                     l4236 01C2                                       l4228 0124  
                                     l5118 1B40                                       l5126 1B66  
                                     l5070 1922                                       l5062 18DC  
                                     l5054 18A6                                       l5046 1860  
                                     l5038 1836                                       l5142 351A  
                                     l5134 34DA                                       l5214 26C4  
                                     l5206 268A                                       l4190 3DAE  
                                     l4182 3D64                                       l4094 2782  
                                     l4086 275E                                       l4078 2700  
                                     l3542 38AA                                       l3622 39E0  
                                     l3614 3986                                       l3606 3946  
                                     l3710 2ECA                                       l3630 3F3C  
                                     l4502 12BE                                       l4270 03B2  
                                     l4262 033A                                       l4254 02C4  
                                     l4246 0242                                       l4238 01F8  
                                     l4600 3E7E                                       l5128 1B6A  
                                     l5080 19C6                                       l5072 193E  
                                     l5064 18E8                                       l5056 18B2  
                                     l5048 1876                                       l5144 352A  
                                     l5216 26D2                                       l5208 268C  
                                     l3800 428E                                       l4176 3DD0  
                                     l4184 3D7C                                       l4096 278A  
                                     l3544 38C8                                       l3536 387A  
                                     l3560 3E0E                                       l3624 39F4  
                                     l3616 399A                                       l3608 3956  
                                     l3720 2F22                                       l3712 2ECE  
                                     l3704 2E96                                       l3632 405C  
                                     l3640 3BB0                                       l4440 0EDA  
                                     l4432 0E52                                       l4424 0DDE  
                                     l4416 0D56                                       l4408 0CA0  
                                     l4352 0978                                       l4344 08F0  
                                     l4336 087C                                       l4328 07F4  
                                     l4280 0438                                       l4264 035A  
                                     l4256 02CC                                       l4272 03C4  
                                     l4512 12DE                                       l4602 3E8C  
                                     l4610 41B6                                       l5090 1A1C  
                                     l5082 19D4                                       l5074 194A  
                                     l5066 18F8                                       l5058 18C0  
                                     l5170 35A8                                       l5154 3554  
                                     l5146 352E                                       l5138 34EE  
                                     l5218 26D4                                       l3802 4290  
                                     l4178 3DFC                                       l3650 40D0  
                                     l4098 27C0                                       l3546 38FE  
                                     l3538 388E                                       l3562 3E20  
                                     l3570 40A8                                       l3618 39AE  
                                     l3810 3C30                                       l3730 2FA4  
                                     l3722 2F36                                       l3714 2EDC  
                                     l3706 2E9C                                       l4514 1306  
                                     l4506 12CC                                       l4450 0FB8  
                                     l4442 0F12                                       l4434 0E8A  
                                     l4426 0E04                                       l4418 0D8E  
                                     l4354 09B0                                       l4362 0A00  
                                     l4346 0928                                       l4338 08A2  
                                     l4290 0528                                       l4282 0470  
                                     l4274 03EA                                       l4266 0368  
                                     l4258 02DA                                       l4194 0096  
                                     l5250 3000                                       l4620 434E  
                                     l4604 438C                                       l4612 41CE  
                                     l5092 1A2A                                       l5084 19F2  
                                     l5076 1966                                       l5068 1912  
                                     l5172 35B8                                       l5164 357C  
                                     l5156 355E                                       l5148 353C  
                                     l5180 2552                                       l3804 4298  
                                     l4188 3D82                                       l3564 3E26  
                                     l3572 40C0                                       l3812 3C3C  
                                     l3660 2A10                                       l3724 2F44  
                                     l3732 2FAA                                       l3716 2EFC  
                                     l3708 2EAA                                       l3628 3F20  
                                     l3820 1B7C                                       l3900 23D2  
                                     l3740 35CA                                       l3636 3FE4  
                                     l3644 3BE8                                       l4460 108C  
                                     l4444 0F4A                                       l4364 0A38  
                                     l4372 0A84                                       l4356 09E8  
                                     l4292 0560                                       l4284 04A8  
                                     l4276 041C                                       l4196 00BC  
                                     l4700 340C                                       l5260 3028  
                                     l5252 3006                                       l4614 4338  
                                     l4606 41A8                                       l5094 1A2E  
                                     l5086 19FC                                       l5078 1990  
                                     l5166 3588                                       l5158 3568  
                                     l5190 25CA                                       l5182 2598  
                                     l4630 3AC4                                       l4622 410E  
                                     l3654 4256                                       l5430 27AA  
                                     l3558 3E00                                       l3566 4096  
                                     l3814 3C40                                       l3806 3C10  
                                     l3670 2A56                                       l3662 2A16  
                                     l3734 2FBA                                       l3726 2F72  
                                     l3718 2F1A                                       l3830 1BF6  
                                     l3822 1B9C                                       l3910 2468  
                                     l3902 23E4                                       l3750 3620  
                                     l3742 35D6                                       l3646 3BFA  
                                     l4470 1102                                       l4462 109C  
                                     l4446 0F72                                       l4454 0FF4  
                                     l4374 0AAA                                       l4382 0AF4  
                                     l4366 0A70                                       l4358 09F4  
                                     l4294 0598                                       l4286 04F0  
                                     l4198 00CA                                       l4710 3490  
                                     l4702 341C                                       l5270 30F4  
                                     l5262 3054                                       l5254 300A  
                                     ?_pad 0070                                       l4616 433C  
                                     l4544 439E                                       l4608 41B4  
                                     l4720 42A0                                       l5096 1A3C  
                                     l5088 1A0A                                       l5168 3598  
                                     l5192 25D6                                       l5184 25AE  
                                     l5176 2532                                       l4560 3F7E  
                                     l4640 3B26                                       l4632 3AD6  
                                     l4624 4118                                       l4800 1398  
                                     l3656 4274                                       l3568 40A2  
                                     l3816 3C46                                       l3808 3C24  
                                     l3680 2AAC                                       l3672 2A76  
                                     l3664 2A24                                       l3736 2FDA  
                                     l3728 2F92                                       l3840 1C52  
                                     l3832 1C10                                       l3824 1BC6  
                                     l3920 24E8                                       l3912 2486  
                                     l3904 23EA                                       l3760 3694  
                                     l3752 3632                                       l3744 35F6  
                                     l3576 4022                                       l4472 1128  
                                     l4456 102C                                       l4448 0F82  
                                     l4384 0B2C                                       l4392 0B78  
                                     l4376 0AE0                                       l4712 34A8  
                                     l4704 3440                                       l5272 3120  
                                     l5264 3066                                       l5256 3018  
                                     l5248 2FFC                                       l4618 434A  
                                     l4730 42B4                                       l4722 42A4  
                                     l5098 1A6A                                       l5194 2608  
                                     l5178 2544                                       l4570 42F0  
                                     l4562 3F9A                                       l4650 2BA4  
                                     l4642 3B2E                                       l4626 412A  
                                     l4810 13D4                                       l4802 13A4  
                                     l3690 2B2E                                       l3682 2AC0  
                                     l3674 2A7A                                       l3666 2A44  
                                     l3850 1CF4                                       l3842 1C5A  
                                     l3834 1C2C                                       l3826 1BE6  
                                     l3922 24EE                                       l3914 24A0  
                                     l3906 23F0                                       l3930 2884  
                                     l3754 3660                                       l3746 35FE  
                                     l3770 37F2                                       l3762 37A8  
                                     l4490 1236                                       l4474 1140  
                                     l4482 118E                                       l4458 1064  
                                     l4394 0B9E                                       l4386 0B64  
                                     l4706 3454                                       l4714 34B8  
                                     l5266 3074                                       l5258 3026  
                                     l4740 3A64                                       l4556 43A8  
                                     l4724 42A8                                       l5196 260A  
                                     l5188 25C2                                       l4652 2BE8  
                                     l4636 3AFE                                       l4628 412E  
                                     l4900 15F0                                       l4820 1410  
                                     l4812 13E0                                       l4804 13B0  
                                     l3780 3C74                                       l3692 2B30  
                                     l3684 2ACE                                       l3676 2A86  
                                     l3668 2A48                                       l3860 1DB2  
                                     l3852 1CFA                                       l3844 1C64  
                                     l3836 1C3E                                       l3828 1BF4  
                                     l3924 24FE                                       l3916 24BA  
                                     l3908 244E                                       l3940 28CE  
                                     l3932 2896                                       l3756 3680  
                                     l3748 3612                                       l3772 3820  
                                     l3764 37C8                                       l4484 11C6  
                                     l4476 114E                                       l4468 10DC  
                                     l4396 0BE8                                       l5428 014C  
                                     l4580 3B88                                       l4708 3462  
                                     l5268 30CE                                       l4750 3FA8  
                                     l4742 3A68                                       l4582 43C2  
                                     l4590 3E48                                       l4726 42AC  
                                     l4718 429C                                       l5198 2616  
                                     l4566 3FA0                                       l4558 3F62  
                                     l4670 2CBA                                       l4638 3B0A  
                                     l4910 162C                                       l4902 15FC  
                                     l4830 144C                                       l4822 141C  
                                     l4814 13EC                                       l4806 13BC  
                                     l3782 3C88                                       l3694 2B42  
                                     l3686 2AE0                                       l3678 2AA4  
                                     l3870 1E00                                       l3862 1DCC  
                                     l3846 1C6A                                       l3854 1D5E  
                                     l3838 1C4C                                       l3918 24D6  
                                     l3926 2504                                       l3950 2946  
                                     l3942 28D6                                       l3934 289E  
                                     l3758 3682                                       l3774 3840  
                                     l3766 37D0                                       l4486 11FE  
                                     l4574 3B4C                                       l4752 3FBC  
                                     l4744 3A8C                                       l4736 3A14  
                                     l4592 3E64                                       l4584 437A  
                                     l4728 42B0                                       l4672 2CBE  
                                     l4664 2BF2                                       l4680 2CE2  
                                     l4648 2B9A                                       l4760 3148  
                                     l4920 1668                                       l4912 1638  
                                     l4904 1608                                       l4840 1488  
                                     l4832 1458                                       l4824 1428  
                                     l4816 13F8                                       l4808 13C8  
                                     l3784 3CB6                                       l3688 2B0E  
                                     l3696 2B48                                       l3872 1E12  
                                     l3856 1D7A                                       l3864 1DDA  
                                     l3848 1CEE                                       l3960 299A  
                                     l3952 294C                                       l3944 28E6  
                                     l3936 28B2                                       l3776 3852  
                                     l3768 37E4                                       l4488 1226  
                                     l4496 1276                                       l4576 3B54  
                                     l4754 3FBE                                       l4746 3AC0  
                                     l4738 3A22                                       l4594 3E6A  
                                     l4586 4386                                       l4674 2CCE  
                                     l4666 2C9E                                       l4658 2BEE  
                                     l4770 31EE                                       l4762 314C  
                                     l4930 16A4                                       l4922 1674  
                                     l4914 1644                                       l4906 1614  
                                     l4850 14C4                                       l4842 1494  
                                     l4834 1464                                       l4826 1434  
                                     l4818 1404                                       l3786 3CBA  
                                     l3778 3C6E                                       l3698 2B58  
                                     l3874 1E1E                                       l3866 1DEC  
                                     l3858 1D98                                       l3890 23A8  
                                     l3882 2340                                       l3970 29E8  
                                     l3962 299E                                       l3954 296A  
                                     l3938 28BA                                       l4498 129C  
                                     l4578 3B62                                       l4690 33CE  
                                     l4756 3FCE                                       l4596 3E7A  
                                     l4588 4388                                       l4676 2CD0  
                                     l4668 2CAE                                       l4772 321A  
                                     l4764 3162                                       l4940 16E0  
                                     l4932 16B0                                       l4924 1680  
                                     l4916 1650                                       l4908 1620  
                                     l4860 1500                                       l4852 14D0  
                                     l4844 14A0                                       l4836 1470  
                                     l4828 1440                                       l4780 1326  
                                     l3876 1E26                                       l3868 1DFA  
                                     l3892 23B0                                       l3884 2350  
                                     l3956 2976                                       l3948 2932  
                                     l3980 21A2                                       l3972 213A  
                                     l4598 3E7C                                       l3798 4282  
                                     l4678 2CE0                                       l4774 3248  
                                     l4766 319C                                       l4950 171C  
                                     l4942 16EC                                       l4934 16BC  
                                     l4926 168C                                       l4918 165C  
                                     l4870 153C                                       l4862 150C  
                                     l4854 14DC                                       l4846 14AC  
                                     l4838 147C                                       l4790 135C  
                                     l4782 132C                                       l3878 1E36  
                                     l3894 23B6                                       l3886 2352  
                                     l3966 29CE                                       l3958 2994  
                                     l3990 2238                                       l3982 21AA  
                                     l3974 214A                                       l4694 33D6  
                                     l4686 33B2                                       l4768 31A0  
                                     l4776 324C                                       l4952 172E  
                                     l4944 16F8                                       l4936 16C8  
                                     l4928 1698                                       l4880 1578  
                                     l4872 1548                                       l4864 1518  
                                     l4856 14E8                                       l4848 14B8  
                                     l4792 1368                                       l4784 1338  
                                     l3896 23C4                                       l3888 236C  
                                     l3968 29E2                                       l3992 223E  
                                     l3984 21B4                                       l3976 214C  
                                     l4696 33F4                                       l4688 33C6  
                                     l4960 4182                                       l4954 173A  
                                     l4946 1704                                       l4938 16D4  
                                     l4890 15B4                                       l4882 1584  
                                     l4874 1554                                       l4866 1524  
                                     l4858 14F4                                       l4794 1374  
                                     l4786 1344                                       l4778 131A  
                                     l3898 23CA                                       l3986 21BA  
                                     l3994 22A2                                       l3978 2166  
                                     l4698 3400                                       l4956 1740  
                                     l4948 1710                                       l4892 15C0  
                                     l4884 1590                                       l4876 1560  
                                     l4868 1530                                       l4796 1380  
                                     l4788 1350                                       l3996 22B6  
                                     l3988 2232                                       l4894 15CC  
                                     l4886 159C                                       l4878 156C  
                                     l4798 138C                                       l3998 22D4  
                                     l4958 4178                                       l4896 15D8  
                                     l4888 15A8                                       l4898 15E4  
                                     STR_1 FFBB                                       STR_2 FFAF  
                                     STR_3 FFC5                                       STR_4 FFD2  
                                     STR_6 FFD2                                       STR_8 FFD6  
                                     u3000 3BE4                                       u3010 3BFA  
                                     u3011 3BF6                                       u3020 4102  
                                     u3100 2B58                                       u3021 40FC  
                                     u3101 2B54                                       _LATA 000F89  
                                     u3030 4104                                       u3110 2EAA  
                                     _LATB 000F8A                                       u3111 2EA6  
                                     _LATC 000F8B                                       u3040 2A24  
                                     u3120 2EDC                                       u3200 3660  
                                     _LATD 000F8C                                       u3041 2A20  
                                     u3121 2ED8                                       u3201 365C  
                                     _LATE 000F8D                                       u3050 2A56  
                                     u3130 2F1A                                       u3210 37C8  
                                     u3051 2A52                                       u3131 2F16  
                                     u3211 37C4                                       u3140 2F44  
                                     u3300 1BB0                                       u3220 37F2  
                                     u4100 0206                                       u3061 2A80  
                                     u3141 2F40                                       u3221 37EE  
                                     u4101 0202                                       u3070 2AA4  
                                     u3150 2F72                                       u3310 1BC6  
                                     u3230 3820                                       u4110 0286  
                                     u3071 2AA0                                       u3151 2F6E  
                                     u3311 1BC2                                       u3231 381C  
                                     u4111 0280                                       u5000 1A2A  
                                     u4040 3DCA                                       u3240 3C88  
                                     u3080 2ACE                                       u3160 2FBA  
                                     u3400 1DDA                                       u3320 1BF4  
                                     u4200 0470                                       u4120 0288  
                                     u5001 1A26                                       u4041 3DC6  
                                     u3241 3C84                                       u3081 2ACA  
                                     u3161 2FB6                                       u3401 1DD6  
                                     u3321 1BF0                                       u4201 046C  
                                     u5010 1A3C                                       u4050 3D7C  
                                     u3250 3CB6                                       u3090 2B0E  
                                     u3410 1DEC                                       u3330 1C10  
                                     u4210 04A8                                       u4130 029E  
                                     u5011 1A38                                       u4051 3D78  
                                     u3251 3CB2                                       u3091 2B0A  
                                     u3411 1DE8                                       u3331 1C0C  
                                     u3171 35D0                                       u4211 04A4  
                                     u4131 029A                                       u5020 1A6A  
                                     u5100 350E                                       u3420 1DFA  
                                     u3340 1C3E                                       u3500 24BA  
                                     u3180 35F6                                       u4300 08A2  
                                     u4220 0560                                       u4140 02C4  
                                     u4060 00BC                                       u5021 1A66  
                                     u3421 1DF6                                       u3341 1C3A  
                                     u3501 24B6                                       u3181 35F2  
                                     u4301 089E                                       u4221 055C  
                                     u4141 02C0                                       u4061 00B8  
                                     u5030 1A80                                       u5110 353C  
                                     u3430 1E12                                       u3350 1C4C  
                                     u3510 24C8                                       u3190 3620  
                                     u4310 0928                                       u4230 0598  
                                     u4150 0300                                       u4070 018C  
                                     u5031 1A7C                                       u5111 3538  
                                     u3431 1E0E                                       u3351 1C48  
                                     u3511 24C4                                       u3191 361C  
                                     u4311 0924                                       u4231 0594  
                                     u4151 02FC                                       u4071 0188  
                                     u5040 1A94                                       u5120 3550  
                                     u5200 264E                                       u2800 38C8  
                                     u3280 3C24                                       u3360 1D7A  
                                     u3520 24D6                                       u3440 2350  
                                     u3600 29BC                                       u4400 0E04  
                                     u4320 09B0                                       u4240 060C  
                                     u4160 03AC                                       u4080 019A  
                                     u5041 1A90                                       u5121 354C  
                                     u5105 3504                                       u5201 264A  
                                     u2801 38C4                                       u3281 3C20  
                                     u3361 1D76                                       u3521 24D2  
                                     u3441 234C                                       u3601 29B8  
                                     u4401 0E00                                       u4321 09AC  
                                     u4241 0608                                       u4161 03A6  
                                     u4081 0196                                       u5050 1AAE  
                                     u5130 3578                                       u5210 266C  
                                     u2810 38FE                                       u3370 1D98  
                                     u3290 1BAE                                       u3530 24E8  
                                     u3450 236C                                       u3610 29CA  
                                     u4410 0E8A                                       u4330 0A38  
                                     u4250 0632                                       u4170 03AE  
                                     u4090 01C2                                       u5051 1AAA  
                                     u5131 3574                                       u5211 2668  
                                     u3275 428C                                       u2811 38FA  
                                     u3371 1D94                                       u3291 1BA8  
                                     u3531 24E4                                       u3451 2368  
                                     u3611 29C6                                       u4411 0E86  
                                     u4331 0A34                                       u4251 062E  
                                     u4091 01BE                                       u5060 1AF6  
                                     u5140 3598                                       u5220 267C  
                                     u3276 428E                                       u2900 3956  
                                     u3380 1DB2                                       u3460 2428  
                                     u3620 2A06                                       u3700 1E70  
                                     u4500 129C                                       u4420 0F12  
                                     u4340 0AAA                                       u4260 06B6  
                                     u4180 03C4                                       u5061 1AF2  
                                     u5141 3594                                       u5221 2678  
                                     u2901 3952                                       u3381 1DAE  
                                     u3621 2A02                                       u3541 288E  
                                     u3701 1E6C                                       u4501 1298  
                                     u4421 0F0E                                       u4341 0AA6  
                                     u4261 06B2                                       u4181 03C0  
                                     u5070 1B24                                       u5150 35A8  
                                     u5230 268A                                       u2830 3E46  
                                     u2910 397A                                       u3390 1DCC  
                                     u3470 2468                                       u3550 28B2  
                                     u3630 214A                                       u3710 1E8C  
                                     u4430 0F4A                                       u4350 0B2C  
                                     u4270 06EE                                       u4190 03EA  
                                     u5071 1B20                                       u5151 35A4  
                                     u5231 2686                                       u2831 3E42  
                                     u2911 3976                                       u3391 1DC8  
                                     u3471 2464                                       u3551 28AE  
                                     u3631 2146                                       u3711 1E88  
                                     u4431 0F46                                       u4351 0B28  
                                     u4271 06EA                                       u4191 03E6  
                                     u5080 1B5E                                       u5240 26C4  
                                     u5160 2544                                       u4600 3AFA  
                                     u2840 40C0                                       u2920 39D2  
                                     u3480 2486                                       u3560 28E6  
                                     u3640 2166                                       u3800 2032  
                                     u3720 1EB6                                       u4440 102C  
                                     u4360 0B9E                                       u4280 0776  
                                     u5320 3066                                       u5081 1B5A  
                                     u5241 26C0                                       u5161 2540  
                                     u4601 3AF6                                       u2841 40BC  
                                     u2921 39CE                                       u3481 2482  
                                     u3465 2416                                       u3561 28E2  
                                     u3641 2162                                       u3721 1EB2  
                                     u4441 1028                                       u4361 0B9A  
                                     u4281 0772                                       u5321 3062  
                                     u5090 34DA                                       u5250 26D2  
                                     u5170 2552                                       u4610 3B26  
                                     u2930 39E0                                       u3490 24A0  
                                     u3570 2904                                       u3650 22B6  
                                     u2850 4054                                       u3810 2076  
                                     u3730 1F1A                                       u4450 1064  
                                     u4370 0C4A                                       u4290 082C  
                                     u5330 313E                                       u5091 34D6  
                                     u5251 26CE                                       u5171 254E  
                                     u4611 3B22                                       u2931 39DC  
                                     u3491 249C                                       u3571 2900  
                                     u3651 22B2                                       u2851 404E  
                                     u3811 2072                                       u3731 1F16  
                                     u4451 1060                                       u4371 0C46  
                                     u4291 0828                                       u5331 313A  
                                     u5180 25AE                                       u4620 3B4A  
                                     u3900 2834                                       u2780 388E  
                                     u2940 3F3C                                       u3580 292E  
                                     u3660 22D4                                       u2860 4056  
                                     u3820 2094                                       u3740 1F64  
                                     u4460 1102                                       u4380 0CD8  
                                     u5181 25AA                                       u4621 3B46  
                                     u3901 282E                                       u2781 388A  
                                     u2941 3F38                                       u3581 292A  
                                     u3661 22D0                                       u3821 2090  
                                     u3805 2020                                       u3741 1F5E  
                                     u4461 10FE                                       u4381 0CD4  
                                     u5190 2604                                       u3910 2836  
                                     u2790 38A0                                       u3590 296A  
                                     u3670 22EE                                       u2950 408E  
                                     u3830 20AE                                       u3750 1F66  
                                     u4470 1128                                       u4390 0D8E  
                                     u4710 33C6                                       u5191 2600  
                                     u2791 389C                                       u3591 2966  
                                     u3671 22EA                                       u2951 4088  
                                     u3831 20AA                                       u4471 1124  
                                     u4391 0D8A                                       u4711 33C2  
                                     u4560 3F7E                                       u4800 326E  
                                     u3920 284C                                       u3680 2308  
                                     u2960 4090                                       u3840 20C8  
                                     u3760 1F7C                                       u4480 11C6  
                                     u4720 33F4                                       u4561 3F7A  
                                     u3921 2848                                       u3681 2304  
                                     u3841 20C4                                       u3761 1F78  
                                     u4481 11C2                                       u4721 33F0  
                                     u2890 42D0                                       u4570 3F9A  
                                     u4650 2C9E                                       u4810 327E  
                                     u3930 285E                                       u3690 2316  
                                     u2970 401A                                       u3850 20D6  
                                     u3770 1FB0                                       u4490 11FE  
                                     u4730 3454                                       u2891 42CC  
                                     u4571 3F96                                       u4651 2C9A  
                                     u4811 327A                                       u3931 285A  
                                     u3691 2312                                       u2971 4014  
                                     u3851 20D2                                       u3771 1FAA  
                                     u4491 11FA                                       u4731 3450  
                                     u4900 176C                                       u4660 2CCE  
                                     u4644 2C7C                                       u3940 36E8  
                                     u2980 401C                                       u3860 20E4  
                                     u3780 1FB2                                       u4580 3BA6  
                                     u4740 3462                                       u4901 1768  
                                     u4661 2CCA                                       u4645 2C76  
                                     u3941 36E4                                       u3861 20E0  
                                     u4581 3BA2                                       u4741 345E  
                                     u4910 177E                                       u4670 2CE0  
                                     u4590 4140                                       u3870 2722  
                                     u3950 3720                                       u2990 3BE2  
                                     u3790 1FC8                                       u4750 3490  
                                     u4911 177A                                       u4671 2CDC  
                                     u4807 3264                                       u4591 413C  
                                     u5447 4120                                       u3871 271E  
                                     u3951 371C                                       u2991 3BDC  
                                     u3791 1FC4                                       u4751 348C  
                                     u4760 3A22                                       u4920 178E  
                                     u4680 2D1A                                       u3880 275A  
                                     u3960 373E                                       u4761 3A1E  
                                     u4921 178A                                       u4681 2D16  
                                     u3881 2756                                       u3961 373A  
                                     u4770 3FCE                                       u4930 17CE  
                                     u3890 2776                                       u3970 3750  
                                     u4771 3FCA                                       u4931 17CA  
                                     u3891 2772                                       u3971 374C  
                                     i2l44 004E                                       u4940 17E0  
                                     u4780 31CA                                       u3980 377E  
                                     u4941 17DC                                       u3981 377A  
                                     u4950 17F0                                       u4790 31EE  
                                     u4951 17EC                                       u4791 31EA  
                                     i2l48 006E                                       u4960 1826  
                                     u4961 1822                                       u4970 1836  
                                     u4971 1832                                       u4787 31C0  
                                     u4980 19B0                                       u4990 1A0A  
                                     i2l95 431E                                       u4991 1A06  
                                     u4985 19A6                                       i2l99 41FE  
                     ??i2_lcd_set_cursor_x 0006                       ??i2_lcd_set_cursor_y 0006  
                                     _WPUB 000F5B                                       _sPOT 0100  
                                     abs@a 0072                                       _dbuf 0164  
                                     _atoi 26E6                                       _ctoa 3C10  
                                     _main 2FFC                                       _dtoa 1B7C  
                                     _font F1DF                                       _prec 00F5  
                                     _otoa 2340                                       _nout 00F1  
                                     pad@i 0077                                       pad@p 0074  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 0079  
                                     fsr2l 000FD9                                       _stoa 2884  
                                     btemp 004D                                       _utoa 213A  
                                     _xtoa 1E60                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0092  
                            __CFG_IESO$OFF 000000                     __end_of_SPI_Initialize 438C  
                  i2lcd_draw_char@bg_color 0012                              lcd_fill@width 006D  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                  i2lcd_draw_char@fg_color 0010                                      ??_abs 0074  
                                    ??_pad 0076                           __end_of_INT0_ISR 43BA  
           __size_of_OSCILLATOR_Initialize 0012                          ??i2_lcd_draw_char 0014  
            __end_of_OSCILLATOR_Initialize 439E                              ___fltol@sign1 008F  
                          __end_of___aodiv 2B9A                                      ?_atoi 0067  
                                    ?_ctoa 007B                                      ?_main 0001  
                                    ?_dtoa 007B                            __end_of___aomod 2FFC  
                                    STR_10 FFD6                                      STR_22 FFED  
                                    STR_15 FFD3                                      STR_31 FFDE  
                                    STR_24 FFED                                      STR_33 FFDE  
                                    STR_41 FFF6                                      STR_26 FFF0  
                                    STR_19 FFD7                                      STR_43 FFF6  
                                    STR_28 FFF0                                      STR_53 FFDB  
                                    STR_61 FFE2                                      STR_38 FFDF  
                                    STR_46 FFDA                                      STR_63 FFE2  
                                    STR_71 FFF9                                      STR_48 FFDA  
                                    STR_56 FFF3                                      STR_80 FFCE  
                                    STR_73 FFF9                                      STR_82 FFCE  
                                    STR_58 FFF3                                      STR_91 FFCF  
                                    STR_68 FFE3                                      STR_76 FFE6  
                                    STR_78 FFE6                                      STR_94 FFFC  
                                    STR_87 FFE7                                      STR_96 FFFC  
                          __end_of___flmul 1B7C                                      STR_98 FFEA  
                                    ?_otoa 007B                            __end_of___fltol 35CA  
        __end_of_IOCB4_SetInterruptHandler 43A8                                      ?_stoa 0069  
                                    ?_utoa 007B                            __end_of___lodiv 36BC  
                                    ?_xtoa 007B                                      _T1CON 000FCD  
                          __end_of___lomod 387A                                      i2l105 43C8  
                                    i2l136 42DC                                      i2l138 42EA  
                                    i2l139 42EE                                      i2l361 3ED6  
                                    i2l353 4254                                      i2l347 4336  
                                    i2l364 4378                                      i2l357 3F1E  
                                    i2l437 2E94                                      i2l293 3D14  
                                    i2l461 422A                                      i2l446 33B0  
                                    i2l286 4176                                      i2l457 43B8  
                                    i2l467 43CA                         i2lcd_draw_string@k 002E  
                       i2lcd_draw_string@x 0020                         i2lcd_draw_string@y 0022  
                             vfpfcnvrt@fmt 00A4                               vfpfcnvrt@llu 00BF  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                           ?_INT0_CallBack 0001                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0073  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                       __size_of_S3_toggle 0054                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 4142                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 4320                                      _flags 00F7  
                                    _errno 0047                                      _fputc 387A  
                          __end_of_isalpha 4022                                      _fputs 3E00  
                          __end_of_isdigit 410A                                      atoi@n 0074  
                                    pad@fp 0070                                      atoi@s 0067  
                                    _width 00F3                                      ctoa@c 007D  
                                    _putch 43C6                                      ctoa@w 007E  
                                    dtoa@d 007D                                      dtoa@i 009D  
                                    dtoa@n 0095                                      dtoa@p 008F  
                                    dtoa@s 0093                                      dtoa@w 0091  
                         __end_of_SPI_Open 3AC4                            __end_of_islower 405C  
                          __end_of_isspace 3CC2                    __end_of_TMR1_Initialize 41D4  
                          __end_of_isupper 4096                                      pclath 000FFA  
                                    tablat 000FF5                                      otoa@d 007D  
                                    otoa@i 009B                                      otoa@n 0093  
                                    otoa@p 008D                                      otoa@t 008F  
                                    otoa@w 0091                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0075  
                                    stoa@l 007D                                      stoa@p 007B  
                                    stoa@s 006B                                      stoa@w 0077  
                                    ttemp5 004E                                      ttemp6 0051  
                                    ttemp7 0055                                      utoa@d 007D  
                                    utoa@i 0099                                      utoa@n 0091  
                                    utoa@p 008D                                      utoa@w 008F  
                                    status 000FD8                                      wtemp8 004E  
                                    xtoa@c 00A0                                      xtoa@d 007D  
                                    xtoa@i 009E                                      xtoa@n 0096  
                                    xtoa@p 0092                                      xtoa@w 0094  
                                    xtoa@x 0085                            __end_of_strncmp 37A8  
                          __end_of_toupper 3C10                             lcd_fill@height 006B  
                         ___lodiv@dividend 0060                            ?_SPI_Initialize 0001  
          ??_IOCB4_DefaultInterruptHandler 0001                               _toupper$2078 006C  
                          __initialization 3D16                               __end_of_atoi 2884  
                             __end_of_ctoa 3C6E                     i2SPI_ExchangeByte@data 0001  
                             __end_of_main 3148                               __end_of_dtoa 1E60  
                             __end_of_font FFAB                               __end_of_otoa 252E  
                             __end_of_stoa 2A10                               __end_of_utoa 2340  
                             __end_of_xtoa 213A                          __end_of_IOCB4_ISR 4200  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 0069  
                                   ??_ctoa 007E                                     ??_main 00F1  
                                   ??_dtoa 0085                          ?_lcd_set_cursor_x 0063  
                        ?_lcd_set_cursor_y 0063                              lcd_send@value 0061  
                                   ??_otoa 0085                                     ??_stoa 006D  
                                   ??_utoa 0085                                     ??_xtoa 0086  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0065  
                       ??_lcd_set_cursor_y 0065                             __CFG_RETEN$OFF 000000  
                        ?i2_lcd_draw_pixel 0004                           ___lodiv@quotient 0070  
                       ??i2_lcd_draw_pixel 0006                             lcd_draw_char@i 007E  
                           lcd_draw_char@j 007C                             lcd_draw_char@k 007D  
                 __end_of_SPI_ExchangeByte 42D6                             lcd_draw_char@x 0069  
                           lcd_draw_char@y 006B                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0060                                     STR_100 FFEA  
                                   ?_fputs 0069                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                                ?i2_lcd_send 0002  
                                   ?_putch 0001                                     _T1GCON 000FAA  
                          __CFG_BBSIZ$BB2K 000000                                     i2l4140 2D68  
                                   i2l2550 4142                                     i2l2630 41D4  
                           __CFG_WDTEN$OFF 000000                                     i2l3600 3ED4  
                                   i2l4160 2E38                                     i2l4152 2D70  
                                   i2l4136 2D1C                                     i2l2552 4150  
                                   i2l2632 41E6                                     i2l4162 2E48  
                                   i2l4154 2E1A                                     i2l4146 2D6C  
                                   i2l4138 2D24                                     i2l4164 2E4A  
                                   i2l4156 2E2A                                     i2l3534 42D8  
                                   i2l3550 4322                                     i2l4166 2E5A  
                                   i2l4158 2E36                                     i2l5230 006A  
                                   i2l5222 002A                                     i2l3552 432C  
                                   i2l4168 2E5C                                     i2l2744 4308  
                                   i2l5224 0038                                     i2l3554 432E  
                                   i2l4530 3298                                     i2l2746 4318  
                                   i2l5226 0046                                     i2l3556 4334  
                                   i2l3580 3ED8                                     i2l4540 337A  
                                   i2l4532 32D2                                     i2l2748 431C  
                                   i2l5228 005C                                     i2l3582 3EEE  
                                   i2l4534 32D6                                     i2l4542 337E  
                                   i2l4526 3280                                     i2l4550 3CE0  
                                   i2l3592 3E90                                     i2l4536 3322  
                                   i2l4528 3284                                     i2l4552 3CE8  
                                   i2l3586 3EF4                                     i2l3594 3EA6  
                                   i2l4538 334E                                     i2l4554 3CEA  
                                   i2l4546 3CC2                                     i2l3588 3F1C  
                                   i2l4548 3CD4                                     i2l4732 43B2  
                                   i2l3598 3EAC                                     i2l3790 422C  
                                   i2l4734 43B4                                     i2l3792 4248  
                                   i2l3794 4364                                     i2l4682 4200  
                                   i2l4684 4212                                     _OSCCON 000FD3  
                      i2lcd_draw_string@pS 0024                              vfpfcnvrt@done 00AE  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                         __end_of___xxtofl 26E6                            _global_bg_color 00F9  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0065  
                         __end_of_lcd_fill 3B4C                               vfprintf@cfmt 00CD  
                         __end_of_lcd_init 1750                          __end_of_S3_toggle 3D16  
                         __end_of_lcd_send 429C                                  ??___aodiv 0070  
                                ??___aomod 0070                                     ___wmul 4256  
                           __CFG_STVREN$ON 000000                                  ??___flmul 0076  
                                ??___fltol 008B                                  ??___lodiv 0070  
                                ??___lomod 0070                                     clear_0 3D3C  
                                   clear_1 3D48                                     pad@buf 0072  
                                   ctoa@fp 007B                            ??_INT0_CallBack 0032  
                                   dtoa@fp 007B                                     _strlen 4096  
                                ??_msDelay 0060                                     fputc@c 0060  
                                   fputs@c 006D                                     fputs@i 006E  
                             __pdataCOMRAM 003A                                     fputs@s 0069  
                                ??_isalpha 0062                                  ??_isdigit 0062  
                                ??_islower 0062                               __mediumconst F1DE  
                                ??_isspace 0062                                     otoa@fp 007B  
                                   tblptrh 000FF7                                  ??_isupper 0062  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0064                                     stoa@cp 0079  
                                   stoa@fp 0069                                     putch@c 0001  
                         __end_of_vfprintf 3BB0                                     utoa@fp 007B  
 INT0_SetInterruptHandler@InterruptHandler 0060  IOCB4_SetInterruptHandler@InterruptHandler 0060  
                         ?_PIN_MANAGER_IOC 0001                           __end_of_snprintf 41A8  
                                   xtoa@fp 007B                                  ??_strncmp 0066  
                                ??_toupper 0068              __size_of_INTERRUPT_Initialize 0004  
                         ?_TMR1_Initialize 0001                               ___xxtofl@arg 006A  
                             ___xxtofl@exp 0069                          _SYSTEM_Initialize 429C  
                             ___xxtofl@val 0060                                 __accesstop 0060  
                 __size_of_lcd_draw_string 0138                    __end_of__initialization 3D5A  
                                ?_INT0_ISR 0001                          ?i2_lcd_set_cursor 0006  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0087                         ??i2_lcd_set_cursor 000A  
                    i2lcd_draw_char@fIndex 000E                             __pcstackCOMRAM 0001  
                      ??_SYSTEM_Initialize 0062                              __end_of_fputc 3946  
                            __end_of_fputs 3E48      __end_of_IOCB4_DefaultInterruptHandler 43CA  
   __size_of_IOCB4_DefaultInterruptHandler 0002              _IOCB4_DefaultInterruptHandler 43C8  
                            __end_of_putch 43C8                        __size_ofi2_lcd_send 0018  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0062  
                       i2_SPI_ExchangeByte 42D6                           ??_lcd_set_cursor 0069  
              __size_of_EXT_INT_Initialize 0016                        ?i2_SPI_ExchangeByte 0001  
                i2lcd_draw_string@bg_color 0028                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0064                  __end_of_SYSTEM_Initialize 42BA  
                                  ??_fputs 006D                                    ??_putch 0060  
                i2lcd_draw_string@fg_color 0026                                 __pbssBANK0 00F1  
                               __pbssBANK1 0100                            __CFG_PLLCFG$OFF 000000  
                    _INT0_InterruptHandler 0041                                 ??_INT0_ISR 0032  
                        i2_lcd_draw_string 3280                                 __pnvCOMRAM 0041  
                             i2lcd_send@dc 0003                            i2_lcd_draw_char 2D1C  
                       ?i2_lcd_draw_string 0020                       ??i2_SPI_ExchangeByte 0001  
                               _code_digit 00FD                                    ?___wmul 0060  
                      ??i2_lcd_draw_string 002A                                 ??_SPI_Open 0060  
                  __size_of_ADC_Initialize 0016                                    ?_strlen 0060  
                         __CFG_CANMX$PORTB 000000                                  ?___xxtofl 0060  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 1284                                    _OSCTUNE 000F9B  
             __size_of_IOCB4_InterruptCall 0036                                    _POT_VAL 00FB  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 0069                                  ?_lcd_init 0001  
                                ?_lcd_send 0061                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0060                  __end_ofi2_lcd_draw_string 33B2  
              __size_ofi2_lcd_set_cursor_x 0048                __size_ofi2_lcd_set_cursor_y 0048  
                         ??_SPI_Initialize 0060                  _IOCB4_SetInterruptHandler 439E  
        __size_of_INT0_SetInterruptHandler 000A                  ?_INT0_SetInterruptHandler 0060  
                          __CFG_PWRTEN$OFF 000000                       _ADC_InterruptHandler 004B  
                                  __Hparam 0000                                    __Lparam 0000  
                       __size_of_vsnprintf 0110                          ??_lcd_draw_string 0089  
                        i2lcd_set_cursor@x 0006                          i2lcd_set_cursor@y 0008  
                                  ___aodiv 2A10                                    ___aomod 2E96  
                                  ___flmul 1750                                    ___fltol 34C2  
                          __size_of___wmul 0028                                    ___lodiv 35CA  
                                  ___lomod 37A8                                  ?_vfprintf 00C7  
                                ?_snprintf 00E5                                    __pcinit 3D16  
                                  __ramtop 0F00                                    __ptext0 2FFC  
                                  __ptext1 4178                                    __ptext2 33B2  
                                  __ptext3 3B4C                                    __ptext4 0096  
                                  __ptext5 1E60                                    __ptext6 3BB0  
                                  __ptext7 4022                                    __ptext8 405C  
                                  __ptext9 3FE4                                    _msDelay 410A  
                                _IOCB4_ISR 41D4                            __size_of_strlen 003A  
                                _T1CONbits 000FCD                      _OSCILLATOR_Initialize 438C  
                             __size_of_abs 0042                               __size_of_pad 00CA  
                                  _isalpha 3FE4                                    _isdigit 40D0  
                               ??___xxtofl 0064                                    _islower 4022  
                 ??_PIN_MANAGER_Initialize 0062                                    _isspace 3C6E  
                        __CFG_MSSPMSK$MSK7 000000                                    _isupper 405C  
                                  atoi@neg 006D                      __end_of_lcd_draw_char 2D1C  
               __size_of_SYSTEM_Initialize 001E                                 ??_lcd_fill 006B  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 006F  
                             ??i2_lcd_send 0003                                  _BUT_COMUT 0049  
                               ??_lcd_send 0062                                    _strncmp 36BC  
                                  _toupper 3BB0                       end_of_initialization 3D5A  
                  __end_ofi2_lcd_draw_char 2E96                         ??_SPI_ExchangeByte 0060  
                __size_of_lcd_set_cursor_x 004E                  __size_of_lcd_set_cursor_y 004E  
                                  fputc@fp 0062                                    fputs@fp 006B  
                __size_ofi2_lcd_draw_pixel 0016                        lcd_draw_char@fIndex 006D  
                        __end_of_vfpfcnvrt 131A                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 0069                                 ??_vfprintf 00CD  
                               ??_snprintf 00ED                                    strlen@a 0062  
                                  strlen@s 0060                                  _S3_toggle 3CC2  
                        lcd_draw_string@pS 0083                         __end_ofi2_lcd_send 4338  
                                _PORTBbits 000F81                          _spi_configuration FFAB  
                               ?_IOCB4_ISR 0001                           __CFG_FOSC$INTIO2 000000  
                            ___xxtofl@sign 0068                                  _TRISCbits 000F94  
                        __end_of_vsnprintf 34C2                 __size_ofi2_lcd_draw_string 0132  
                              ___flmul@grs 007B                                 lcd_send@dc 0062  
                        __size_of_INT0_ISR 0008               __end_of_INTERRUPT_Initialize 43C6  
                     SPI_ExchangeByte@data 0060       __end_of_INT0_DefaultInterruptHandler 43CC  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 43CA  
                __end_of_spi_configuration FFAF                                vfpfcnvrt@ap 00A6  
                              vfpfcnvrt@cp 00AC                                vfpfcnvrt@fp 00A2  
                              vfpfcnvrt@ll 00B4                             __end_of___wmul 427E  
                              vfpfcnvrt@vp 00BC                                 ?_S3_toggle 0001  
                            __pidataCOMRAM 43BA                  __size_ofi2_lcd_set_cursor 002A  
                           _ADC_Initialize 434E                     ?_OSCILLATOR_Initialize 0001  
                    __end_of_INT0_CallBack 422C                          __size_of_SPI_Open 00B4  
                           __end_of_strlen 40D0                        start_initialization 3D16  
                          ___lodiv@divisor 0068                            ___lodiv@counter 0078  
          __size_of_PIN_MANAGER_Initialize 0048                                __end_of_abs 3F62  
                              __end_of_pad 3A10                            i2lcd_send@value 0002  
                         ?i2_lcd_draw_char 000A                   __size_of_PIN_MANAGER_IOC 0018  
                    i2lcd_draw_pixel@color 0004             SPI_Open@spiUniqueConfiguration 0061  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 00C9  
                      _IOCB4_InterruptCall 4142                                   ??___wmul 0064  
                   __end_of_ADC_Initialize 4364                 __end_of_EXT_INT_Initialize 434E  
                      i2lcd_set_cursor_x@x 0004                        i2lcd_set_cursor_y@y 0004  
          fp__INT0_DefaultInterruptHandler 0000              ?_INT0_DefaultInterruptHandler 0001  
                                 ??_strlen 0062                                ??_IOCB4_ISR 0002  
                  __size_of_lcd_draw_pixel 0018                               vsnprintf@cnt 00DD  
                             vsnprintf@fmt 00D3                                  ___flmul@a 0072  
                                ___flmul@b 006E                                __pbssCOMRAM 0047  
         __end_of_INT0_SetInterruptHandler 43B2                              __pcstackBANK0 0060  
                         ___aodiv@dividend 0060                       ?_IOCB4_InterruptCall 0001  
                              snprintf@fmt 00E9                          __size_of___xxtofl 01B8  
                          _lcd_draw_string 3148                           _lcd_set_cursor_x 3DB2  
                         _lcd_set_cursor_y 3D64                          __size_of_lcd_fill 0088  
                        __size_of_lcd_init 0436                          __size_of_lcd_send 001E  
                                _atoi$1971 006F                                  _atoi$1972 0073  
                                _atoi$1973 0071                           i2_lcd_draw_pixel 4364  
                   _PIN_MANAGER_Initialize 3E48                                  _dtoa$1358 008D  
              __size_ofi2_SPI_ExchangeByte 001A                                  __pintcode 0008  
                            __pmediumconst F1DE                                   ?___aodiv 0060  
                                 ?___aomod 0060                           ___aodiv@quotient 0072  
                                 ?___flmul 006E                                   ?___fltol 0087  
                                 ?___lodiv 0060                                   ?___lomod 0060  
                          ?_ADC_Initialize 0001                                ??_S3_toggle 0032  
             ??_INTERRUPT_InterruptManager 0032                          __size_of_vfprintf 0064  
                        __size_of_snprintf 0030                                   ?_msDelay 0001  
                          ___lomod@divisor 0068                            ___lomod@counter 0070  
                                 ?_isalpha 0060                                   ?_isdigit 0060  
                                 ?_islower 0060                      ??_IOCB4_InterruptCall 0001  
                                 ?_isspace 0060                                   ?_isupper 0060  
               __end_ofi2_lcd_set_cursor_x 3F20                 __end_ofi2_lcd_set_cursor_y 3ED8  
                           __size_of_fputc 00CC                             __size_of_fputs 0048  
                                 ?_strncmp 0060                                   ?_toupper 0066  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 43C2  
                  __size_of_lcd_set_cursor 0042                                   _INT0_ISR 43B2  
                           ___wmul@product 0064                                   _IOCBbits 000F5A  
                                 _LATAbits 000F89                                   _LATEbits 000F8D  
                          lcd_set_cursor@x 0065                            lcd_set_cursor@y 0067  
                                 i2u204_40 4318                                   i2u204_41 4314  
      __size_of_INTERRUPT_InterruptManager 008A                                   i2u400_40 2E1A  
                                 i2u400_41 2E16                                   i2u401_40 2E48  
                                 i2u401_41 2E44                                   i2u402_40 2E5A  
                                 i2u402_41 2E56                                   i2u403_40 2E94  
                                 i2u403_41 2E90                                   i2u180_40 4160  
                                 i2u180_41 415A                                   i2u180_46 4162  
                                 i2u326_40 4248                                   i2u326_41 4244  
                                 i2u185_40 41E6                                   i2u185_41 41E2  
                                 _PIR1bits 000F9E                                   i2u282_45 432A  
                                 i2u282_46 432C                                   i2u451_40 3300  
                                 i2u179_40 4150                                   i2u186_48 41EC  
                                 i2u179_41 414C                                   i2u186_49 41FE  
                                 i2u451_47 32F6                                   i2u452_40 3322  
                                 i2u452_41 331E                                   i2u277_40 42EA  
                                 i2u453_40 33A0                                   i2u277_41 42E6  
                                 i2u453_47 3396                                   i2u454_40 33B0  
                                 i2u526_40 0038                                   i2u454_41 33AC  
                                 i2u526_41 0034                                   i2u287_40 3EEE  
                                 i2u455_40 3CD4                                   i2u470_48 4218  
                                 i2u527_40 0046                                   i2u287_41 3EEA  
                                 i2u455_41 3CD0                                   i2u470_49 422A  
                                 i2u527_41 0042                                   i2u288_40 3EA6  
                                 i2u528_40 005C                                   i2u288_41 3EA2  
                                 i2u528_41 0058                                   i2u529_40 006A  
                                 i2u529_41 0066                      lcd_draw_string@lIndex 008F  
                                 i2u469_40 4212                                   i2u469_41 420E  
                                 i2u399_44 2DFA                                   i2u399_45 2DF4  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001C  
                         lcd_draw_string@k 008D                           lcd_draw_string@x 007F  
                         lcd_draw_string@y 0081                          ??_PIN_MANAGER_IOC 0002  
                                _vfpfcnvrt 0096                           i2_lcd_set_cursor 422C  
                                _xtoa$1394 008E                                  _xtoa$1395 0090  
                                 _SPI_Open 3A10                          ??_TMR1_Initialize 0060  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0060  
                         __CFG_SOSCSEL$DIG 000000                    __end_of_lcd_draw_string 3280  
           ??_INT0_DefaultInterruptHandler 0001                               _isspace$1998 0066  
                                msDelay@ms 0061                                 vfpfcnvrt@c 00BE  
                              _INTCON2bits 000FF1                                  copy_data0 3D2A  
                    ?_INTERRUPT_Initialize 0001                   _INT0_SetInterruptHandler 43A8  
                                _vsnprintf 33B2                               fp__S3_toggle 0000  
                      lcd_draw_pixel@color 0063                                   __Hrparam 0000  
                               vfprintf@ap 00CB                                   __Lrparam 0000  
                               vfprintf@fp 00C7                          _ADC_GetConversion 3FA4  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0060                     __size_of_lcd_draw_char 0182  
                       ?_ADC_GetConversion 0060                           __size_of___aodiv 018A  
                         __size_of___aomod 0166                                vsnprintf@ap 00D5  
                         __size_of___flmul 042C                           __size_of___fltol 0108  
                         __size_of___lodiv 00F2                           __size_of___lomod 00D2  
                               ?_vfpfcnvrt 00A2                                 snprintf@ap 00EF  
                          ___aodiv@divisor 0068                            ___aodiv@counter 0070  
                   _IOCB4_InterruptHandler 0045                             _lcd_draw_pixel 42F0  
                      ??_ADC_GetConversion 0062                           __size_of_msDelay 0038  
                                 ___xxtofl 252E                           __size_of_isalpha 003E  
                         __size_of_isdigit 003A           fp__IOCB4_DefaultInterruptHandler 0000  
           ?_IOCB4_DefaultInterruptHandler 0001                           __size_of_islower 003A  
                         __size_of_isspace 0054                                   __ptext10 213A  
                                 __ptext11 37A8                                   __ptext20 3C10  
                                 __ptext12 35CA                                   __ptext21 3946  
                                 __ptext13 36BC                                 _T1GCONbits 000FAA  
                                 __ptext30 131A                                   __ptext22 4096  
                                 __ptext14 2884                                   __ptext31 410A  
                                 __ptext23 3E00                                   __ptext15 2340  
                                 __ptext40 42BA                                   __ptext32 3AC4  
                                 __ptext24 387A                                   __ptext16 1B7C  
                                 __ptext41 252E                                   __ptext33 3148  
                                 __ptext25 43C6                                   __ptext17 3F20  
                                 __ptext50 43C2                                   __ptext42 34C2  
                                 __ptext34 2B9A                                   __ptext26 26E6  
                                 __ptext18 2E96                                   __ptext51 4338  
                                 __ptext43 1750                                   __ptext35 3F62  
                                 __ptext27 3C6E                                   __ptext19 2A10  
                                 __ptext60 4142                                   __ptext52 43A8  
                                 __ptext44 429C                                   __ptext36 3D64  
                                 __ptext28 40D0                                   __ptext61 43B2  
                                 __ptext53 434E                                   __ptext45 41A8  
                                 __ptext37 3DB2                                   __ptext29 4256  
                                 __ptext70 4364                                   __ptext62 4200  
                                 __ptext54 3A10                                   __ptext46 437A  
                                 __ptext38 42F0                                   __ptext71 4320  
                                 __ptext63 43CA                                   __ptext55 3FA4  
                                 __ptext47 3E48                                   __ptext39 427E  
                                 __ptext72 42D6                                   __ptext64 3CC2  
                                 __ptext48 439E                                   __ptext73 0000  
                                 __ptext65 3280                                   __ptext57 4308  
                                 __ptext49 438C                                   __ptext66 2D1C  
                                 __ptext58 41D4                                   __ptext67 422C  
                                 __ptext59 43C8                                   __ptext68 3E90  
                                 __ptext69 3ED8                           __size_of_isupper 003A  
                                 _lcd_fill 3AC4                                   _lcd_init 131A  
                                 _lcd_send 427E                           __size_of_strncmp 00EC  
                         __size_of_toupper 0060                                 ?_vsnprintf 00CF  
                            __size_of_atoi 019E                              __size_of_ctoa 005E  
                            __size_of_main 014C                              __size_of_dtoa 02E4  
                            __size_of_otoa 01EE                              __size_of_stoa 018C  
                            __size_of_utoa 0206                              __size_of_xtoa 02DA  
                __end_of_ADC_GetConversion 3FE4                                  stoa@F1152 003A  
                    lcd_draw_char@bg_color 0071                                   int$flags 004D  
                                 _vfprintf 3B4C                      lcd_draw_char@fg_color 006F  
       __end_of_INTERRUPT_InterruptManager 0092                 _INTERRUPT_InterruptManager 0008  
                   __end_of_lcd_draw_pixel 4308                                   _snprintf 4178  
                 __end_of_lcd_set_cursor_x 3E00                   __end_of_lcd_set_cursor_y 3DB2  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0062  
                         ___aomod@dividend 0060                   __end_ofi2_lcd_draw_pixel 437A  
                           _vfpfcnvrt$1410 00B2                             _vfpfcnvrt$1409 00B0  
                               _INTCONbits 000FF2                           ?_lcd_draw_string 007F  
                                 isalpha@c 0060                                   isdigit@c 0060  
                   ??_INTERRUPT_Initialize 0060                                 vsnprintf@f 00DF  
                               vsnprintf@n 00D1                                 vsnprintf@s 00CF  
                       _EXT_INT_Initialize 4338                              _lcd_draw_char 2B9A  
                                snprintf@n 00E7                                  snprintf@s 00E5  
                                 intlevel2 0000                             _lcd_set_cursor 3F62  
                        lcd_set_cursor_x@x 0063                          lcd_set_cursor_y@y 0063  
                                 islower@c 0060                                   isspace@c 0060  
                  ?_PIN_MANAGER_Initialize 0001                        ?_EXT_INT_Initialize 0001  
                                 isupper@c 0060                    i2lcd_draw_string@lIndex 0030  
                                strncmp@_l 0060                                  strncmp@_r 0062  
                         ??_ADC_Initialize 0060                   __size_ofi2_lcd_draw_char 017A  
                   __size_of_INT0_CallBack 002C                           _SPI_ExchangeByte 42BA  
                  lcd_draw_string@bg_color 0087                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 0068                    lcd_draw_string@fg_color 0085  
                          ?_lcd_draw_pixel 0063                                ??_vfpfcnvrt 00A8  
                                 stoa@nuls 006E                            ___aomod@counter 0070  
                     ??_EXT_INT_Initialize 0062                             _vsnprintf$2110 00DB  
                                 strncmp@l 0067                                   strncmp@n 0064  
                                 strncmp@r 0069                                   toupper@c 0066  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 3FA4  
                           ?_lcd_draw_char 0069                               ___aodiv@sign 0071  
           __end_of_PIN_MANAGER_Initialize 3E90                                ??_vsnprintf 00D7  
                 __end_ofi2_lcd_set_cursor 4256                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 4308                 __size_of_ADC_GetConversion 0040  
               __end_ofi2_SPI_ExchangeByte 42F0                               ___aomod@sign 0071  
                          _TMR1_Initialize 41A8                         i2_lcd_set_cursor_x 3ED8  
                       i2_lcd_set_cursor_y 3E90  
