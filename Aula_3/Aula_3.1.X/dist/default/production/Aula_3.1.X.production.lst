

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 11 12:03:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 2.10
    95                           ; Generated 31/07/2019 GMT
    96                           ; 
    97                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F46K80 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK1
   130  005D24                     __pidataBANK1:
   131                           	opt callstack 0
   132                           
   133                           ;initializer for stoa@F1174
   134  005D24  28                 	db	40
   135  005D25  6E                 	db	110
   136  005D26  75                 	db	117
   137  005D27  6C                 	db	108
   138  005D28  6C                 	db	108
   139  005D29  29                 	db	41
   140  005D2A  00                 	db	0
   141                           
   142                           	psect	mediumconst
   143  00F1BC                     __pmediumconst:
   144                           	opt callstack 0
   145  00F1BC  00                 	db	0
   146  00F1BD                     _font:
   147                           	opt callstack 0
   148  00F1BD  0004               	dw	4
   149  00F1BF  0000               	dw	0
   150  00F1C1  0000               	dw	0
   151  00F1C3  0000               	dw	0
   152  00F1C5  0000               	dw	0
   153  00F1C7  0000               	dw	0
   154  00F1C9  0000               	dw	0
   155  00F1CB  0000               	dw	0
   156  00F1CD  0000               	dw	0
   157  00F1CF  0003               	dw	3
   158  00F1D1  0000               	dw	0
   159  00F1D3  0000               	dw	0
   160  00F1D5  00FE               	dw	254
   161  00F1D7  001B               	dw	27
   162  00F1D9  0000               	dw	0
   163  00F1DB  0000               	dw	0
   164  00F1DD  0005               	dw	5
   165  00F1DF  001E               	dw	30
   166  00F1E1  0000               	dw	0
   167  00F1E3  0000               	dw	0
   168  00F1E5  0000               	dw	0
   169  00F1E7  0000               	dw	0
   170  00F1E9  0000               	dw	0
   171  00F1EB  001E               	dw	30
   172  00F1ED  0000               	dw	0
   173  00F1EF  0000               	dw	0
   174  00F1F1  0000               	dw	0
   175  00F1F3  000B               	dw	11
   176  00F1F5  0000               	dw	0
   177  00F1F7  0000               	dw	0
   178  00F1F9  0010               	dw	16
   179  00F1FB  0001               	dw	1
   180  00F1FD  0010               	dw	16
   181  00F1FF  001D               	dw	29
   182  00F201  00F0               	dw	240
   183  00F203  0003               	dw	3
   184  00F205  001E               	dw	30
   185  00F207  0001               	dw	1
   186  00F209  0010               	dw	16
   187  00F20B  0001               	dw	1
   188  00F20D  0010               	dw	16
   189  00F20F  001D               	dw	29
   190  00F211  00F0               	dw	240
   191  00F213  0003               	dw	3
   192  00F215  001E               	dw	30
   193  00F217  0001               	dw	1
   194  00F219  0010               	dw	16
   195  00F21B  0001               	dw	1
   196  00F21D  0000               	dw	0
   197  00F21F  0000               	dw	0
   198  00F221  0009               	dw	9
   199  00F223  0000               	dw	0
   200  00F225  0004               	dw	4
   201  00F227  001C               	dw	28
   202  00F229  0008               	dw	8
   203  00F22B  0022               	dw	34
   204  00F22D  0010               	dw	16
   205  00F22F  0042               	dw	66
   206  00F231  0010               	dw	16
   207  00F233  00FF               	dw	255
   208  00F235  007F               	dw	127
   209  00F237  0042               	dw	66
   210  00F239  0010               	dw	16
   211  00F23B  0084               	dw	132
   212  00F23D  0010               	dw	16
   213  00F23F  0000               	dw	0
   214  00F241  000F               	dw	15
   215  00F243  0000               	dw	0
   216  00F245  0000               	dw	0
   217  00F247  000C               	dw	12
   218  00F249  001C               	dw	28
   219  00F24B  0000               	dw	0
   220  00F24D  0022               	dw	34
   221  00F24F  0010               	dw	16
   222  00F251  0022               	dw	34
   223  00F253  0008               	dw	8
   224  00F255  0022               	dw	34
   225  00F257  0006               	dw	6
   226  00F259  001C               	dw	28
   227  00F25B  0001               	dw	1
   228  00F25D  00C0               	dw	192
   229  00F25F  0000               	dw	0
   230  00F261  0020               	dw	32
   231  00F263  000E               	dw	14
   232  00F265  0018               	dw	24
   233  00F267  0011               	dw	17
   234  00F269  0004               	dw	4
   235  00F26B  0011               	dw	17
   236  00F26D  0002               	dw	2
   237  00F26F  0011               	dw	17
   238  00F271  0000               	dw	0
   239  00F273  000E               	dw	14
   240  00F275  0000               	dw	0
   241  00F277  0000               	dw	0
   242  00F279  000B               	dw	11
   243  00F27B  0000               	dw	0
   244  00F27D  0000               	dw	0
   245  00F27F  0000               	dw	0
   246  00F281  000E               	dw	14
   247  00F283  001C               	dw	28
   248  00F285  0011               	dw	17
   249  00F287  00A2               	dw	162
   250  00F289  0010               	dw	16
   251  00F28B  00C2               	dw	194
   252  00F28D  0010               	dw	16
   253  00F28F  0022               	dw	34
   254  00F291  0011               	dw	17
   255  00F293  001C               	dw	28
   256  00F295  000A               	dw	10
   257  00F297  0000               	dw	0
   258  00F299  000C               	dw	12
   259  00F29B  0000               	dw	0
   260  00F29D  000C               	dw	12
   261  00F29F  0000               	dw	0
   262  00F2A1  0012               	dw	18
   263  00F2A3  0000               	dw	0
   264  00F2A5  0000               	dw	0
   265  00F2A7  0003               	dw	3
   266  00F2A9  0000               	dw	0
   267  00F2AB  0000               	dw	0
   268  00F2AD  001E               	dw	30
   269  00F2AF  0000               	dw	0
   270  00F2B1  0000               	dw	0
   271  00F2B3  0000               	dw	0
   272  00F2B5  0006               	dw	6
   273  00F2B7  0000               	dw	0
   274  00F2B9  0000               	dw	0
   275  00F2BB  0000               	dw	0
   276  00F2BD  0000               	dw	0
   277  00F2BF  00E0               	dw	224
   278  00F2C1  001F               	dw	31
   279  00F2C3  001C               	dw	28
   280  00F2C5  0060               	dw	96
   281  00F2C7  0002               	dw	2
   282  00F2C9  0080               	dw	128
   283  00F2CB  0000               	dw	0
   284  00F2CD  0000               	dw	0
   285  00F2CF  0004               	dw	4
   286  00F2D1  0000               	dw	0
   287  00F2D3  0000               	dw	0
   288  00F2D5  0006               	dw	6
   289  00F2D7  00C0               	dw	192
   290  00F2D9  00F8               	dw	248
   291  00F2DB  003F               	dw	63
   292  00F2DD  0000               	dw	0
   293  00F2DF  0000               	dw	0
   294  00F2E1  0006               	dw	6
   295  00F2E3  0024               	dw	36
   296  00F2E5  0000               	dw	0
   297  00F2E7  0018               	dw	24
   298  00F2E9  0000               	dw	0
   299  00F2EB  007E               	dw	126
   300  00F2ED  0000               	dw	0
   301  00F2EF  0018               	dw	24
   302  00F2F1  0000               	dw	0
   303  00F2F3  0024               	dw	36
   304  00F2F5  0000               	dw	0
   305  00F2F7  0000               	dw	0
   306  00F2F9  0000               	dw	0
   307  00F2FB  0009               	dw	9
   308  00F2FD  0000               	dw	0
   309  00F2FF  0000               	dw	0
   310  00F301  0080               	dw	128
   311  00F303  0000               	dw	0
   312  00F305  0080               	dw	128
   313  00F307  0000               	dw	0
   314  00F309  0080               	dw	128
   315  00F30B  0000               	dw	0
   316  00F30D  00F0               	dw	240
   317  00F30F  0007               	dw	7
   318  00F311  0080               	dw	128
   319  00F313  0000               	dw	0
   320  00F315  0080               	dw	128
   321  00F317  0000               	dw	0
   322  00F319  0080               	dw	128
   323  00F31B  0000               	dw	0
   324  00F31D  0000               	dw	0
   325  00F31F  0000               	dw	0
   326  00F321  0004               	dw	4
   327  00F323  0000               	dw	0
   328  00F325  0000               	dw	0
   329  00F327  0000               	dw	0
   330  00F329  0060               	dw	96
   331  00F32B  0000               	dw	0
   332  00F32D  0018               	dw	24
   333  00F32F  0000               	dw	0
   334  00F331  0000               	dw	0
   335  00F333  0005               	dw	5
   336  00F335  0000               	dw	0
   337  00F337  0001               	dw	1
   338  00F339  0000               	dw	0
   339  00F33B  0001               	dw	1
   340  00F33D  0000               	dw	0
   341  00F33F  0001               	dw	1
   342  00F341  0000               	dw	0
   343  00F343  0001               	dw	1
   344  00F345  0000               	dw	0
   345  00F347  0000               	dw	0
   346  00F349  0004               	dw	4
   347  00F34B  0000               	dw	0
   348  00F34D  0000               	dw	0
   349  00F34F  0000               	dw	0
   350  00F351  0018               	dw	24
   351  00F353  0000               	dw	0
   352  00F355  0018               	dw	24
   353  00F357  0000               	dw	0
   354  00F359  0000               	dw	0
   355  00F35B  0008               	dw	8
   356  00F35D  0000               	dw	0
   357  00F35F  0000               	dw	0
   358  00F361  0000               	dw	0
   359  00F363  0040               	dw	64
   360  00F365  0000               	dw	0
   361  00F367  0038               	dw	56
   362  00F369  0000               	dw	0
   363  00F36B  0007               	dw	7
   364  00F36D  00E0               	dw	224
   365  00F36F  0000               	dw	0
   366  00F371  001C               	dw	28
   367  00F373  0000               	dw	0
   368  00F375  0002               	dw	2
   369  00F377  0000               	dw	0
   370  00F379  0000               	dw	0
   371  00F37B  0000               	dw	0
   372  00F37D  0009               	dw	9
   373  00F37F  00F8               	dw	248
   374  00F381  0007               	dw	7
   375  00F383  0004               	dw	4
   376  00F385  0008               	dw	8
   377  00F387  0002               	dw	2
   378  00F389  0010               	dw	16
   379  00F38B  0002               	dw	2
   380  00F38D  0010               	dw	16
   381  00F38F  0002               	dw	2
   382  00F391  0010               	dw	16
   383  00F393  0002               	dw	2
   384  00F395  0010               	dw	16
   385  00F397  0004               	dw	4
   386  00F399  0008               	dw	8
   387  00F39B  00F8               	dw	248
   388  00F39D  0007               	dw	7
   389  00F39F  0000               	dw	0
   390  00F3A1  0000               	dw	0
   391  00F3A3  0006               	dw	6
   392  00F3A5  0000               	dw	0
   393  00F3A7  0000               	dw	0
   394  00F3A9  0000               	dw	0
   395  00F3AB  0000               	dw	0
   396  00F3AD  0002               	dw	2
   397  00F3AF  0000               	dw	0
   398  00F3B1  0002               	dw	2
   399  00F3B3  0000               	dw	0
   400  00F3B5  00FE               	dw	254
   401  00F3B7  001F               	dw	31
   402  00F3B9  0000               	dw	0
   403  00F3BB  0000               	dw	0
   404  00F3BD  0009               	dw	9
   405  00F3BF  0018               	dw	24
   406  00F3C1  0010               	dw	16
   407  00F3C3  0004               	dw	4
   408  00F3C5  0018               	dw	24
   409  00F3C7  0002               	dw	2
   410  00F3C9  0014               	dw	20
   411  00F3CB  0002               	dw	2
   412  00F3CD  0012               	dw	18
   413  00F3CF  0002               	dw	2
   414  00F3D1  0011               	dw	17
   415  00F3D3  0082               	dw	130
   416  00F3D5  0010               	dw	16
   417  00F3D7  0044               	dw	68
   418  00F3D9  0010               	dw	16
   419  00F3DB  0038               	dw	56
   420  00F3DD  0010               	dw	16
   421  00F3DF  0000               	dw	0
   422  00F3E1  0000               	dw	0
   423  00F3E3  0009               	dw	9
   424  00F3E5  0008               	dw	8
   425  00F3E7  000C               	dw	12
   426  00F3E9  0004               	dw	4
   427  00F3EB  0010               	dw	16
   428  00F3ED  0002               	dw	2
   429  00F3EF  0010               	dw	16
   430  00F3F1  0042               	dw	66
   431  00F3F3  0010               	dw	16
   432  00F3F5  0042               	dw	66
   433  00F3F7  0010               	dw	16
   434  00F3F9  0044               	dw	68
   435  00F3FB  0010               	dw	16
   436  00F3FD  00B8               	dw	184
   437  00F3FF  0008               	dw	8
   438  00F401  0000               	dw	0
   439  00F403  0007               	dw	7
   440  00F405  0000               	dw	0
   441  00F407  0000               	dw	0
   442  00F409  0009               	dw	9
   443  00F40B  0000               	dw	0
   444  00F40D  0002               	dw	2
   445  00F40F  0000               	dw	0
   446  00F411  0003               	dw	3
   447  00F413  0080               	dw	128
   448  00F415  0002               	dw	2
   449  00F417  0060               	dw	96
   450  00F419  0002               	dw	2
   451  00F41B  0010               	dw	16
   452  00F41D  0002               	dw	2
   453  00F41F  0008               	dw	8
   454  00F421  0002               	dw	2
   455  00F423  00FE               	dw	254
   456  00F425  001F               	dw	31
   457  00F427  0000               	dw	0
   458  00F429  0002               	dw	2
   459  00F42B  0000               	dw	0
   460  00F42D  0000               	dw	0
   461  00F42F  0009               	dw	9
   462  00F431  0000               	dw	0
   463  00F433  0004               	dw	4
   464  00F435  0070               	dw	112
   465  00F437  0008               	dw	8
   466  00F439  002E               	dw	46
   467  00F43B  0010               	dw	16
   468  00F43D  0022               	dw	34
   469  00F43F  0010               	dw	16
   470  00F441  0022               	dw	34
   471  00F443  0010               	dw	16
   472  00F445  0022               	dw	34
   473  00F447  0010               	dw	16
   474  00F449  0042               	dw	66
   475  00F44B  0008               	dw	8
   476  00F44D  0082               	dw	130
   477  00F44F  0007               	dw	7
   478  00F451  0000               	dw	0
   479  00F453  0000               	dw	0
   480  00F455  0009               	dw	9
   481  00F457  0000               	dw	0
   482  00F459  0000               	dw	0
   483  00F45B  0000               	dw	0
   484  00F45D  0007               	dw	7
   485  00F45F  00C0               	dw	192
   486  00F461  0008               	dw	8
   487  00F463  0060               	dw	96
   488  00F465  0010               	dw	16
   489  00F467  0058               	dw	88
   490  00F469  0010               	dw	16
   491  00F46B  0044               	dw	68
   492  00F46D  0010               	dw	16
   493  00F46F  0082               	dw	130
   494  00F471  0008               	dw	8
   495  00F473  0000               	dw	0
   496  00F475  0007               	dw	7
   497  00F477  0000               	dw	0
   498  00F479  0000               	dw	0
   499  00F47B  0009               	dw	9
   500  00F47D  0000               	dw	0
   501  00F47F  0000               	dw	0
   502  00F481  0002               	dw	2
   503  00F483  0010               	dw	16
   504  00F485  0002               	dw	2
   505  00F487  000C               	dw	12
   506  00F489  0002               	dw	2
   507  00F48B  0003               	dw	3
   508  00F48D  00C2               	dw	194
   509  00F48F  0000               	dw	0
   510  00F491  0032               	dw	50
   511  00F493  0000               	dw	0
   512  00F495  000E               	dw	14
   513  00F497  0000               	dw	0
   514  00F499  0002               	dw	2
   515  00F49B  0000               	dw	0
   516  00F49D  0000               	dw	0
   517  00F49F  0000               	dw	0
   518  00F4A1  0009               	dw	9
   519  00F4A3  0000               	dw	0
   520  00F4A5  0007               	dw	7
   521  00F4A7  0098               	dw	152
   522  00F4A9  0008               	dw	8
   523  00F4AB  0064               	dw	100
   524  00F4AD  0010               	dw	16
   525  00F4AF  0042               	dw	66
   526  00F4B1  0010               	dw	16
   527  00F4B3  0042               	dw	66
   528  00F4B5  0010               	dw	16
   529  00F4B7  0064               	dw	100
   530  00F4B9  0010               	dw	16
   531  00F4BB  0098               	dw	152
   532  00F4BD  0008               	dw	8
   533  00F4BF  0000               	dw	0
   534  00F4C1  0007               	dw	7
   535  00F4C3  0000               	dw	0
   536  00F4C5  0000               	dw	0
   537  00F4C7  0009               	dw	9
   538  00F4C9  0000               	dw	0
   539  00F4CB  0000               	dw	0
   540  00F4CD  0038               	dw	56
   541  00F4CF  0000               	dw	0
   542  00F4D1  0044               	dw	68
   543  00F4D3  0010               	dw	16
   544  00F4D5  0082               	dw	130
   545  00F4D7  0008               	dw	8
   546  00F4D9  0082               	dw	130
   547  00F4DB  0004               	dw	4
   548  00F4DD  0082               	dw	130
   549  00F4DF  0003               	dw	3
   550  00F4E1  0084               	dw	132
   551  00F4E3  0000               	dw	0
   552  00F4E5  0078               	dw	120
   553  00F4E7  0000               	dw	0
   554  00F4E9  0000               	dw	0
   555  00F4EB  0000               	dw	0
   556  00F4ED  0004               	dw	4
   557  00F4EF  0000               	dw	0
   558  00F4F1  0000               	dw	0
   559  00F4F3  0030               	dw	48
   560  00F4F5  0018               	dw	24
   561  00F4F7  0030               	dw	48
   562  00F4F9  0018               	dw	24
   563  00F4FB  0000               	dw	0
   564  00F4FD  0000               	dw	0
   565  00F4FF  0004               	dw	4
   566  00F501  0000               	dw	0
   567  00F503  0000               	dw	0
   568  00F505  0030               	dw	48
   569  00F507  0060               	dw	96
   570  00F509  0030               	dw	48
   571  00F50B  0018               	dw	24
   572  00F50D  0000               	dw	0
   573  00F50F  0000               	dw	0
   574  00F511  000A               	dw	10
   575  00F513  0000               	dw	0
   576  00F515  0000               	dw	0
   577  00F517  0080               	dw	128
   578  00F519  0000               	dw	0
   579  00F51B  0080               	dw	128
   580  00F51D  0000               	dw	0
   581  00F51F  0040               	dw	64
   582  00F521  0001               	dw	1
   583  00F523  0020               	dw	32
   584  00F525  0002               	dw	2
   585  00F527  0020               	dw	32
   586  00F529  0002               	dw	2
   587  00F52B  0010               	dw	16
   588  00F52D  0004               	dw	4
   589  00F52F  0010               	dw	16
   590  00F531  0004               	dw	4
   591  00F533  0008               	dw	8
   592  00F535  0008               	dw	8
   593  00F537  0000               	dw	0
   594  00F539  0000               	dw	0
   595  00F53B  000A               	dw	10
   596  00F53D  0000               	dw	0
   597  00F53F  0000               	dw	0
   598  00F541  0020               	dw	32
   599  00F543  0001               	dw	1
   600  00F545  0020               	dw	32
   601  00F547  0001               	dw	1
   602  00F549  0020               	dw	32
   603  00F54B  0001               	dw	1
   604  00F54D  0020               	dw	32
   605  00F54F  0001               	dw	1
   606  00F551  0020               	dw	32
   607  00F553  0001               	dw	1
   608  00F555  0020               	dw	32
   609  00F557  0001               	dw	1
   610  00F559  0020               	dw	32
   611  00F55B  0001               	dw	1
   612  00F55D  0020               	dw	32
   613  00F55F  0001               	dw	1
   614  00F561  0000               	dw	0
   615  00F563  0000               	dw	0
   616  00F565  000A               	dw	10
   617  00F567  0000               	dw	0
   618  00F569  0000               	dw	0
   619  00F56B  0008               	dw	8
   620  00F56D  0008               	dw	8
   621  00F56F  0010               	dw	16
   622  00F571  0004               	dw	4
   623  00F573  0010               	dw	16
   624  00F575  0004               	dw	4
   625  00F577  0020               	dw	32
   626  00F579  0002               	dw	2
   627  00F57B  0020               	dw	32
   628  00F57D  0002               	dw	2
   629  00F57F  0040               	dw	64
   630  00F581  0001               	dw	1
   631  00F583  0080               	dw	128
   632  00F585  0000               	dw	0
   633  00F587  0080               	dw	128
   634  00F589  0000               	dw	0
   635  00F58B  0000               	dw	0
   636  00F58D  0000               	dw	0
   637  00F58F  0008               	dw	8
   638  00F591  0000               	dw	0
   639  00F593  0000               	dw	0
   640  00F595  000C               	dw	12
   641  00F597  0000               	dw	0
   642  00F599  0082               	dw	130
   643  00F59B  0001               	dw	1
   644  00F59D  0042               	dw	66
   645  00F59F  0002               	dw	2
   646  00F5A1  0022               	dw	34
   647  00F5A3  001A               	dw	26
   648  00F5A5  0022               	dw	34
   649  00F5A7  001A               	dw	26
   650  00F5A9  009C               	dw	156
   651  00F5AB  0001               	dw	1
   652  00F5AD  0000               	dw	0
   653  00F5AF  0000               	dw	0
   654  00F5B1  000E               	dw	14
   655  00F5B3  0000               	dw	0
   656  00F5B5  0000               	dw	0
   657  00F5B7  00F0               	dw	240
   658  00F5B9  0003               	dw	3
   659  00F5BB  0008               	dw	8
   660  00F5BD  0004               	dw	4
   661  00F5BF  0004               	dw	4
   662  00F5C1  0008               	dw	8
   663  00F5C3  00C2               	dw	194
   664  00F5C5  0011               	dw	17
   665  00F5C7  0022               	dw	34
   666  00F5C9  0012               	dw	18
   667  00F5CB  0012               	dw	18
   668  00F5CD  0012               	dw	18
   669  00F5CF  0012               	dw	18
   670  00F5D1  0012               	dw	18
   671  00F5D3  00E2               	dw	226
   672  00F5D5  0011               	dw	17
   673  00F5D7  0012               	dw	18
   674  00F5D9  0012               	dw	18
   675  00F5DB  0004               	dw	4
   676  00F5DD  0012               	dw	18
   677  00F5DF  0008               	dw	8
   678  00F5E1  0009               	dw	9
   679  00F5E3  00F0               	dw	240
   680  00F5E5  0004               	dw	4
   681  00F5E7  0000               	dw	0
   682  00F5E9  0000               	dw	0
   683  00F5EB  000D               	dw	13
   684  00F5ED  0000               	dw	0
   685  00F5EF  0000               	dw	0
   686  00F5F1  0000               	dw	0
   687  00F5F3  0010               	dw	16
   688  00F5F5  0000               	dw	0
   689  00F5F7  000E               	dw	14
   690  00F5F9  0080               	dw	128
   691  00F5FB  0001               	dw	1
   692  00F5FD  0060               	dw	96
   693  00F5FF  0001               	dw	1
   694  00F601  001C               	dw	28
   695  00F603  0001               	dw	1
   696  00F605  0002               	dw	2
   697  00F607  0001               	dw	1
   698  00F609  001C               	dw	28
   699  00F60B  0001               	dw	1
   700  00F60D  0060               	dw	96
   701  00F60F  0001               	dw	1
   702  00F611  0080               	dw	128
   703  00F613  0001               	dw	1
   704  00F615  0000               	dw	0
   705  00F617  000E               	dw	14
   706  00F619  0000               	dw	0
   707  00F61B  0010               	dw	16
   708  00F61D  0000               	dw	0
   709  00F61F  0000               	dw	0
   710  00F621  0009               	dw	9
   711  00F623  0000               	dw	0
   712  00F625  0000               	dw	0
   713  00F627  0000               	dw	0
   714  00F629  0000               	dw	0
   715  00F62B  00FE               	dw	254
   716  00F62D  001F               	dw	31
   717  00F62F  0042               	dw	66
   718  00F631  0010               	dw	16
   719  00F633  0042               	dw	66
   720  00F635  0010               	dw	16
   721  00F637  0064               	dw	100
   722  00F639  0010               	dw	16
   723  00F63B  0098               	dw	152
   724  00F63D  0008               	dw	8
   725  00F63F  0000               	dw	0
   726  00F641  0007               	dw	7
   727  00F643  0000               	dw	0
   728  00F645  0000               	dw	0
   729  00F647  000D               	dw	13
   730  00F649  0000               	dw	0
   731  00F64B  0000               	dw	0
   732  00F64D  00F0               	dw	240
   733  00F64F  0003               	dw	3
   734  00F651  0008               	dw	8
   735  00F653  0004               	dw	4
   736  00F655  0004               	dw	4
   737  00F657  0008               	dw	8
   738  00F659  0002               	dw	2
   739  00F65B  0010               	dw	16
   740  00F65D  0002               	dw	2
   741  00F65F  0010               	dw	16
   742  00F661  0002               	dw	2
   743  00F663  0010               	dw	16
   744  00F665  0002               	dw	2
   745  00F667  0010               	dw	16
   746  00F669  0002               	dw	2
   747  00F66B  0010               	dw	16
   748  00F66D  0004               	dw	4
   749  00F66F  0008               	dw	8
   750  00F671  0004               	dw	4
   751  00F673  0008               	dw	8
   752  00F675  0008               	dw	8
   753  00F677  0004               	dw	4
   754  00F679  0000               	dw	0
   755  00F67B  0000               	dw	0
   756  00F67D  000C               	dw	12
   757  00F67F  0000               	dw	0
   758  00F681  0000               	dw	0
   759  00F683  0000               	dw	0
   760  00F685  0000               	dw	0
   761  00F687  00FE               	dw	254
   762  00F689  001F               	dw	31
   763  00F68B  0002               	dw	2
   764  00F68D  0010               	dw	16
   765  00F68F  0002               	dw	2
   766  00F691  0010               	dw	16
   767  00F693  0002               	dw	2
   768  00F695  0010               	dw	16
   769  00F697  0002               	dw	2
   770  00F699  0010               	dw	16
   771  00F69B  0002               	dw	2
   772  00F69D  0010               	dw	16
   773  00F69F  0004               	dw	4
   774  00F6A1  0008               	dw	8
   775  00F6A3  0008               	dw	8
   776  00F6A5  0004               	dw	4
   777  00F6A7  00F0               	dw	240
   778  00F6A9  0003               	dw	3
   779  00F6AB  0000               	dw	0
   780  00F6AD  0000               	dw	0
   781  00F6AF  0009               	dw	9
   782  00F6B1  0000               	dw	0
   783  00F6B3  0000               	dw	0
   784  00F6B5  0000               	dw	0
   785  00F6B7  0000               	dw	0
   786  00F6B9  00FE               	dw	254
   787  00F6BB  001F               	dw	31
   788  00F6BD  0042               	dw	66
   789  00F6BF  0010               	dw	16
   790  00F6C1  0042               	dw	66
   791  00F6C3  0010               	dw	16
   792  00F6C5  0042               	dw	66
   793  00F6C7  0010               	dw	16
   794  00F6C9  0042               	dw	66
   795  00F6CB  0010               	dw	16
   796  00F6CD  0042               	dw	66
   797  00F6CF  0010               	dw	16
   798  00F6D1  0000               	dw	0
   799  00F6D3  0000               	dw	0
   800  00F6D5  0008               	dw	8
   801  00F6D7  0000               	dw	0
   802  00F6D9  0000               	dw	0
   803  00F6DB  0000               	dw	0
   804  00F6DD  0000               	dw	0
   805  00F6DF  00FE               	dw	254
   806  00F6E1  001F               	dw	31
   807  00F6E3  0042               	dw	66
   808  00F6E5  0000               	dw	0
   809  00F6E7  0042               	dw	66
   810  00F6E9  0000               	dw	0
   811  00F6EB  0042               	dw	66
   812  00F6ED  0000               	dw	0
   813  00F6EF  0042               	dw	66
   814  00F6F1  0000               	dw	0
   815  00F6F3  0000               	dw	0
   816  00F6F5  0000               	dw	0
   817  00F6F7  000E               	dw	14
   818  00F6F9  0000               	dw	0
   819  00F6FB  0000               	dw	0
   820  00F6FD  00F0               	dw	240
   821  00F6FF  0003               	dw	3
   822  00F701  0008               	dw	8
   823  00F703  0004               	dw	4
   824  00F705  0004               	dw	4
   825  00F707  0008               	dw	8
   826  00F709  0002               	dw	2
   827  00F70B  0010               	dw	16
   828  00F70D  0002               	dw	2
   829  00F70F  0010               	dw	16
   830  00F711  0002               	dw	2
   831  00F713  0010               	dw	16
   832  00F715  0002               	dw	2
   833  00F717  0010               	dw	16
   834  00F719  0082               	dw	130
   835  00F71B  0010               	dw	16
   836  00F71D  0084               	dw	132
   837  00F71F  0010               	dw	16
   838  00F721  0084               	dw	132
   839  00F723  0008               	dw	8
   840  00F725  0088               	dw	136
   841  00F727  0004               	dw	4
   842  00F729  0080               	dw	128
   843  00F72B  0003               	dw	3
   844  00F72D  0000               	dw	0
   845  00F72F  0000               	dw	0
   846  00F731  000A               	dw	10
   847  00F733  0000               	dw	0
   848  00F735  0000               	dw	0
   849  00F737  0000               	dw	0
   850  00F739  0000               	dw	0
   851  00F73B  00FE               	dw	254
   852  00F73D  001F               	dw	31
   853  00F73F  0040               	dw	64
   854  00F741  0000               	dw	0
   855  00F743  0040               	dw	64
   856  00F745  0000               	dw	0
   857  00F747  0040               	dw	64
   858  00F749  0000               	dw	0
   859  00F74B  0040               	dw	64
   860  00F74D  0000               	dw	0
   861  00F74F  0040               	dw	64
   862  00F751  0000               	dw	0
   863  00F753  00FE               	dw	254
   864  00F755  001F               	dw	31
   865  00F757  0000               	dw	0
   866  00F759  0000               	dw	0
   867  00F75B  0004               	dw	4
   868  00F75D  0000               	dw	0
   869  00F75F  0000               	dw	0
   870  00F761  0000               	dw	0
   871  00F763  0000               	dw	0
   872  00F765  00FE               	dw	254
   873  00F767  001F               	dw	31
   874  00F769  0000               	dw	0
   875  00F76B  0000               	dw	0
   876  00F76D  0007               	dw	7
   877  00F76F  0000               	dw	0
   878  00F771  0000               	dw	0
   879  00F773  0000               	dw	0
   880  00F775  0008               	dw	8
   881  00F777  0000               	dw	0
   882  00F779  0010               	dw	16
   883  00F77B  0000               	dw	0
   884  00F77D  0010               	dw	16
   885  00F77F  0000               	dw	0
   886  00F781  0008               	dw	8
   887  00F783  00FE               	dw	254
   888  00F785  0007               	dw	7
   889  00F787  0000               	dw	0
   890  00F789  0000               	dw	0
   891  00F78B  0009               	dw	9
   892  00F78D  0000               	dw	0
   893  00F78F  0000               	dw	0
   894  00F791  0000               	dw	0
   895  00F793  0000               	dw	0
   896  00F795  00FE               	dw	254
   897  00F797  001F               	dw	31
   898  00F799  0060               	dw	96
   899  00F79B  0000               	dw	0
   900  00F79D  0090               	dw	144
   901  00F79F  0001               	dw	1
   902  00F7A1  0008               	dw	8
   903  00F7A3  0002               	dw	2
   904  00F7A5  0004               	dw	4
   905  00F7A7  000C               	dw	12
   906  00F7A9  0002               	dw	2
   907  00F7AB  0010               	dw	16
   908  00F7AD  0000               	dw	0
   909  00F7AF  0000               	dw	0
   910  00F7B1  0008               	dw	8
   911  00F7B3  0000               	dw	0
   912  00F7B5  0000               	dw	0
   913  00F7B7  0000               	dw	0
   914  00F7B9  0000               	dw	0
   915  00F7BB  00FE               	dw	254
   916  00F7BD  001F               	dw	31
   917  00F7BF  0000               	dw	0
   918  00F7C1  0010               	dw	16
   919  00F7C3  0000               	dw	0
   920  00F7C5  0010               	dw	16
   921  00F7C7  0000               	dw	0
   922  00F7C9  0010               	dw	16
   923  00F7CB  0000               	dw	0
   924  00F7CD  0010               	dw	16
   925  00F7CF  0000               	dw	0
   926  00F7D1  0000               	dw	0
   927  00F7D3  000F               	dw	15
   928  00F7D5  0000               	dw	0
   929  00F7D7  0000               	dw	0
   930  00F7D9  0000               	dw	0
   931  00F7DB  001C               	dw	28
   932  00F7DD  00F8               	dw	248
   933  00F7DF  0003               	dw	3
   934  00F7E1  0006               	dw	6
   935  00F7E3  0000               	dw	0
   936  00F7E5  0038               	dw	56
   937  00F7E7  0000               	dw	0
   938  00F7E9  00C0               	dw	192
   939  00F7EB  0001               	dw	1
   940  00F7ED  0000               	dw	0
   941  00F7EF  000E               	dw	14
   942  00F7F1  0000               	dw	0
   943  00F7F3  0010               	dw	16
   944  00F7F5  0000               	dw	0
   945  00F7F7  000E               	dw	14
   946  00F7F9  00C0               	dw	192
   947  00F7FB  0001               	dw	1
   948  00F7FD  0038               	dw	56
   949  00F7FF  0000               	dw	0
   950  00F801  0006               	dw	6
   951  00F803  0000               	dw	0
   952  00F805  00F8               	dw	248
   953  00F807  0003               	dw	3
   954  00F809  0000               	dw	0
   955  00F80B  001C               	dw	28
   956  00F80D  0000               	dw	0
   957  00F80F  0000               	dw	0
   958  00F811  000B               	dw	11
   959  00F813  0000               	dw	0
   960  00F815  0000               	dw	0
   961  00F817  0000               	dw	0
   962  00F819  0000               	dw	0
   963  00F81B  00FE               	dw	254
   964  00F81D  001F               	dw	31
   965  00F81F  0008               	dw	8
   966  00F821  0000               	dw	0
   967  00F823  0030               	dw	48
   968  00F825  0000               	dw	0
   969  00F827  0040               	dw	64
   970  00F829  0000               	dw	0
   971  00F82B  0080               	dw	128
   972  00F82D  0000               	dw	0
   973  00F82F  0000               	dw	0
   974  00F831  0003               	dw	3
   975  00F833  0000               	dw	0
   976  00F835  0004               	dw	4
   977  00F837  00FE               	dw	254
   978  00F839  001F               	dw	31
   979  00F83B  0000               	dw	0
   980  00F83D  0000               	dw	0
   981  00F83F  000E               	dw	14
   982  00F841  0000               	dw	0
   983  00F843  0000               	dw	0
   984  00F845  00F0               	dw	240
   985  00F847  0003               	dw	3
   986  00F849  0008               	dw	8
   987  00F84B  0004               	dw	4
   988  00F84D  0004               	dw	4
   989  00F84F  0008               	dw	8
   990  00F851  0002               	dw	2
   991  00F853  0010               	dw	16
   992  00F855  0002               	dw	2
   993  00F857  0010               	dw	16
   994  00F859  0002               	dw	2
   995  00F85B  0010               	dw	16
   996  00F85D  0002               	dw	2
   997  00F85F  0010               	dw	16
   998  00F861  0002               	dw	2
   999  00F863  0010               	dw	16
  1000  00F865  0002               	dw	2
  1001  00F867  0010               	dw	16
  1002  00F869  0004               	dw	4
  1003  00F86B  0008               	dw	8
  1004  00F86D  0008               	dw	8
  1005  00F86F  0004               	dw	4
  1006  00F871  00F0               	dw	240
  1007  00F873  0003               	dw	3
  1008  00F875  0000               	dw	0
  1009  00F877  0000               	dw	0
  1010  00F879  0009               	dw	9
  1011  00F87B  0000               	dw	0
  1012  00F87D  0000               	dw	0
  1013  00F87F  0000               	dw	0
  1014  00F881  0000               	dw	0
  1015  00F883  00FE               	dw	254
  1016  00F885  001F               	dw	31
  1017  00F887  0042               	dw	66
  1018  00F889  0000               	dw	0
  1019  00F88B  0042               	dw	66
  1020  00F88D  0000               	dw	0
  1021  00F88F  0042               	dw	66
  1022  00F891  0000               	dw	0
  1023  00F893  0024               	dw	36
  1024  00F895  0000               	dw	0
  1025  00F897  0018               	dw	24
  1026  00F899  0000               	dw	0
  1027  00F89B  0000               	dw	0
  1028  00F89D  0000               	dw	0
  1029  00F89F  000E               	dw	14
  1030  00F8A1  0000               	dw	0
  1031  00F8A3  0000               	dw	0
  1032  00F8A5  00F0               	dw	240
  1033  00F8A7  0003               	dw	3
  1034  00F8A9  0008               	dw	8
  1035  00F8AB  0004               	dw	4
  1036  00F8AD  0004               	dw	4
  1037  00F8AF  0008               	dw	8
  1038  00F8B1  0002               	dw	2
  1039  00F8B3  0010               	dw	16
  1040  00F8B5  0002               	dw	2
  1041  00F8B7  0010               	dw	16
  1042  00F8B9  0002               	dw	2
  1043  00F8BB  0010               	dw	16
  1044  00F8BD  0002               	dw	2
  1045  00F8BF  0011               	dw	17
  1046  00F8C1  0002               	dw	2
  1047  00F8C3  0012               	dw	18
  1048  00F8C5  0002               	dw	2
  1049  00F8C7  000C               	dw	12
  1050  00F8C9  0004               	dw	4
  1051  00F8CB  0008               	dw	8
  1052  00F8CD  0008               	dw	8
  1053  00F8CF  0016               	dw	22
  1054  00F8D1  00F0               	dw	240
  1055  00F8D3  0021               	dw	33
  1056  00F8D5  0000               	dw	0
  1057  00F8D7  0000               	dw	0
  1058  00F8D9  000A               	dw	10
  1059  00F8DB  0000               	dw	0
  1060  00F8DD  0000               	dw	0
  1061  00F8DF  0000               	dw	0
  1062  00F8E1  0000               	dw	0
  1063  00F8E3  00FE               	dw	254
  1064  00F8E5  001F               	dw	31
  1065  00F8E7  0042               	dw	66
  1066  00F8E9  0000               	dw	0
  1067  00F8EB  00C2               	dw	194
  1068  00F8ED  0000               	dw	0
  1069  00F8EF  0042               	dw	66
  1070  00F8F1  0001               	dw	1
  1071  00F8F3  0042               	dw	66
  1072  00F8F5  0006               	dw	6
  1073  00F8F7  0024               	dw	36
  1074  00F8F9  0008               	dw	8
  1075  00F8FB  0018               	dw	24
  1076  00F8FD  0010               	dw	16
  1077  00F8FF  0000               	dw	0
  1078  00F901  0000               	dw	0
  1079  00F903  0008               	dw	8
  1080  00F905  0000               	dw	0
  1081  00F907  0004               	dw	4
  1082  00F909  0018               	dw	24
  1083  00F90B  0008               	dw	8
  1084  00F90D  0024               	dw	36
  1085  00F90F  0010               	dw	16
  1086  00F911  0042               	dw	66
  1087  00F913  0010               	dw	16
  1088  00F915  0042               	dw	66
  1089  00F917  0010               	dw	16
  1090  00F919  0084               	dw	132
  1091  00F91B  0008               	dw	8
  1092  00F91D  0008               	dw	8
  1093  00F91F  0007               	dw	7
  1094  00F921  0000               	dw	0
  1095  00F923  0000               	dw	0
  1096  00F925  0008               	dw	8
  1097  00F927  0002               	dw	2
  1098  00F929  0000               	dw	0
  1099  00F92B  0002               	dw	2
  1100  00F92D  0000               	dw	0
  1101  00F92F  0002               	dw	2
  1102  00F931  0000               	dw	0
  1103  00F933  00FE               	dw	254
  1104  00F935  001F               	dw	31
  1105  00F937  0002               	dw	2
  1106  00F939  0000               	dw	0
  1107  00F93B  0002               	dw	2
  1108  00F93D  0000               	dw	0
  1109  00F93F  0002               	dw	2
  1110  00F941  0000               	dw	0
  1111  00F943  0000               	dw	0
  1112  00F945  0000               	dw	0
  1113  00F947  000A               	dw	10
  1114  00F949  0000               	dw	0
  1115  00F94B  0000               	dw	0
  1116  00F94D  0000               	dw	0
  1117  00F94F  0000               	dw	0
  1118  00F951  00FE               	dw	254
  1119  00F953  0007               	dw	7
  1120  00F955  0000               	dw	0
  1121  00F957  0008               	dw	8
  1122  00F959  0000               	dw	0
  1123  00F95B  0010               	dw	16
  1124  00F95D  0000               	dw	0
  1125  00F95F  0010               	dw	16
  1126  00F961  0000               	dw	0
  1127  00F963  0010               	dw	16
  1128  00F965  0000               	dw	0
  1129  00F967  0008               	dw	8
  1130  00F969  00FE               	dw	254
  1131  00F96B  0007               	dw	7
  1132  00F96D  0000               	dw	0
  1133  00F96F  0000               	dw	0
  1134  00F971  000C               	dw	12
  1135  00F973  0002               	dw	2
  1136  00F975  0000               	dw	0
  1137  00F977  001C               	dw	28
  1138  00F979  0000               	dw	0
  1139  00F97B  0060               	dw	96
  1140  00F97D  0000               	dw	0
  1141  00F97F  0080               	dw	128
  1142  00F981  0001               	dw	1
  1143  00F983  0000               	dw	0
  1144  00F985  000E               	dw	14
  1145  00F987  0000               	dw	0
  1146  00F989  0010               	dw	16
  1147  00F98B  0000               	dw	0
  1148  00F98D  000E               	dw	14
  1149  00F98F  0080               	dw	128
  1150  00F991  0001               	dw	1
  1151  00F993  0060               	dw	96
  1152  00F995  0000               	dw	0
  1153  00F997  001C               	dw	28
  1154  00F999  0000               	dw	0
  1155  00F99B  0002               	dw	2
  1156  00F99D  0000               	dw	0
  1157  00F99F  0000               	dw	0
  1158  00F9A1  0000               	dw	0
  1159  00F9A3  000F               	dw	15
  1160  00F9A5  0000               	dw	0
  1161  00F9A7  0000               	dw	0
  1162  00F9A9  0006               	dw	6
  1163  00F9AB  0000               	dw	0
  1164  00F9AD  0078               	dw	120
  1165  00F9AF  0000               	dw	0
  1166  00F9B1  0080               	dw	128
  1167  00F9B3  0007               	dw	7
  1168  00F9B5  0000               	dw	0
  1169  00F9B7  0018               	dw	24
  1170  00F9B9  0080               	dw	128
  1171  00F9BB  0007               	dw	7
  1172  00F9BD  0078               	dw	120
  1173  00F9BF  0000               	dw	0
  1174  00F9C1  0006               	dw	6
  1175  00F9C3  0000               	dw	0
  1176  00F9C5  0078               	dw	120
  1177  00F9C7  0000               	dw	0
  1178  00F9C9  0080               	dw	128
  1179  00F9CB  0007               	dw	7
  1180  00F9CD  0000               	dw	0
  1181  00F9CF  0018               	dw	24
  1182  00F9D1  0080               	dw	128
  1183  00F9D3  0007               	dw	7
  1184  00F9D5  0078               	dw	120
  1185  00F9D7  0000               	dw	0
  1186  00F9D9  0006               	dw	6
  1187  00F9DB  0000               	dw	0
  1188  00F9DD  0000               	dw	0
  1189  00F9DF  0000               	dw	0
  1190  00F9E1  0009               	dw	9
  1191  00F9E3  0000               	dw	0
  1192  00F9E5  0000               	dw	0
  1193  00F9E7  0006               	dw	6
  1194  00F9E9  0018               	dw	24
  1195  00F9EB  0008               	dw	8
  1196  00F9ED  0004               	dw	4
  1197  00F9EF  0030               	dw	48
  1198  00F9F1  0003               	dw	3
  1199  00F9F3  00C0               	dw	192
  1200  00F9F5  0000               	dw	0
  1201  00F9F7  0030               	dw	48
  1202  00F9F9  0003               	dw	3
  1203  00F9FB  0008               	dw	8
  1204  00F9FD  0004               	dw	4
  1205  00F9FF  0006               	dw	6
  1206  00FA01  0018               	dw	24
  1207  00FA03  0000               	dw	0
  1208  00FA05  0000               	dw	0
  1209  00FA07  000B               	dw	11
  1210  00FA09  0000               	dw	0
  1211  00FA0B  0000               	dw	0
  1212  00FA0D  0002               	dw	2
  1213  00FA0F  0000               	dw	0
  1214  00FA11  0004               	dw	4
  1215  00FA13  0000               	dw	0
  1216  00FA15  0018               	dw	24
  1217  00FA17  0000               	dw	0
  1218  00FA19  0060               	dw	96
  1219  00FA1B  0000               	dw	0
  1220  00FA1D  0080               	dw	128
  1221  00FA1F  001F               	dw	31
  1222  00FA21  0060               	dw	96
  1223  00FA23  0000               	dw	0
  1224  00FA25  0018               	dw	24
  1225  00FA27  0000               	dw	0
  1226  00FA29  0004               	dw	4
  1227  00FA2B  0000               	dw	0
  1228  00FA2D  0002               	dw	2
  1229  00FA2F  0000               	dw	0
  1230  00FA31  0000               	dw	0
  1231  00FA33  0000               	dw	0
  1232  00FA35  0008               	dw	8
  1233  00FA37  0002               	dw	2
  1234  00FA39  0010               	dw	16
  1235  00FA3B  0002               	dw	2
  1236  00FA3D  001C               	dw	28
  1237  00FA3F  0002               	dw	2
  1238  00FA41  0013               	dw	19
  1239  00FA43  00C2               	dw	194
  1240  00FA45  0010               	dw	16
  1241  00FA47  0032               	dw	50
  1242  00FA49  0010               	dw	16
  1243  00FA4B  000E               	dw	14
  1244  00FA4D  0010               	dw	16
  1245  00FA4F  0002               	dw	2
  1246  00FA51  0010               	dw	16
  1247  00FA53  0000               	dw	0
  1248  00FA55  0000               	dw	0
  1249  00FA57  0006               	dw	6
  1250  00FA59  0000               	dw	0
  1251  00FA5B  0000               	dw	0
  1252  00FA5D  0000               	dw	0
  1253  00FA5F  0000               	dw	0
  1254  00FA61  00FE               	dw	254
  1255  00FA63  00FF               	dw	255
  1256  00FA65  0002               	dw	2
  1257  00FA67  0080               	dw	128
  1258  00FA69  0002               	dw	2
  1259  00FA6B  0080               	dw	128
  1260  00FA6D  0000               	dw	0
  1261  00FA6F  0000               	dw	0
  1262  00FA71  000A               	dw	10
  1263  00FA73  0002               	dw	2
  1264  00FA75  0000               	dw	0
  1265  00FA77  000C               	dw	12
  1266  00FA79  0000               	dw	0
  1267  00FA7B  0010               	dw	16
  1268  00FA7D  0000               	dw	0
  1269  00FA7F  0060               	dw	96
  1270  00FA81  0000               	dw	0
  1271  00FA83  0080               	dw	128
  1272  00FA85  0001               	dw	1
  1273  00FA87  0000               	dw	0
  1274  00FA89  0006               	dw	6
  1275  00FA8B  0000               	dw	0
  1276  00FA8D  0008               	dw	8
  1277  00FA8F  0000               	dw	0
  1278  00FA91  0030               	dw	48
  1279  00FA93  0000               	dw	0
  1280  00FA95  0040               	dw	64
  1281  00FA97  0000               	dw	0
  1282  00FA99  0000               	dw	0
  1283  00FA9B  0005               	dw	5
  1284  00FA9D  0000               	dw	0
  1285  00FA9F  0000               	dw	0
  1286  00FAA1  0002               	dw	2
  1287  00FAA3  0080               	dw	128
  1288  00FAA5  0002               	dw	2
  1289  00FAA7  0080               	dw	128
  1290  00FAA9  00FE               	dw	254
  1291  00FAAB  00FF               	dw	255
  1292  00FAAD  0000               	dw	0
  1293  00FAAF  0000               	dw	0
  1294  00FAB1  000B               	dw	11
  1295  00FAB3  0000               	dw	0
  1296  00FAB5  0000               	dw	0
  1297  00FAB7  0000               	dw	0
  1298  00FAB9  0002               	dw	2
  1299  00FABB  0080               	dw	128
  1300  00FABD  0001               	dw	1
  1301  00FABF  0070               	dw	112
  1302  00FAC1  0000               	dw	0
  1303  00FAC3  000C               	dw	12
  1304  00FAC5  0000               	dw	0
  1305  00FAC7  0002               	dw	2
  1306  00FAC9  0000               	dw	0
  1307  00FACB  000C               	dw	12
  1308  00FACD  0000               	dw	0
  1309  00FACF  0070               	dw	112
  1310  00FAD1  0000               	dw	0
  1311  00FAD3  0080               	dw	128
  1312  00FAD5  0001               	dw	1
  1313  00FAD7  0000               	dw	0
  1314  00FAD9  0002               	dw	2
  1315  00FADB  0000               	dw	0
  1316  00FADD  0000               	dw	0
  1317  00FADF  0009               	dw	9
  1318  00FAE1  0000               	dw	0
  1319  00FAE3  0040               	dw	64
  1320  00FAE5  0000               	dw	0
  1321  00FAE7  0040               	dw	64
  1322  00FAE9  0000               	dw	0
  1323  00FAEB  0040               	dw	64
  1324  00FAED  0000               	dw	0
  1325  00FAEF  0040               	dw	64
  1326  00FAF1  0000               	dw	0
  1327  00FAF3  0040               	dw	64
  1328  00FAF5  0000               	dw	0
  1329  00FAF7  0040               	dw	64
  1330  00FAF9  0000               	dw	0
  1331  00FAFB  0040               	dw	64
  1332  00FAFD  0000               	dw	0
  1333  00FAFF  0040               	dw	64
  1334  00FB01  0000               	dw	0
  1335  00FB03  0000               	dw	0
  1336  00FB05  0005               	dw	5
  1337  00FB07  0000               	dw	0
  1338  00FB09  0000               	dw	0
  1339  00FB0B  0000               	dw	0
  1340  00FB0D  0000               	dw	0
  1341  00FB0F  0002               	dw	2
  1342  00FB11  0000               	dw	0
  1343  00FB13  0004               	dw	4
  1344  00FB15  0000               	dw	0
  1345  00FB17  0000               	dw	0
  1346  00FB19  0000               	dw	0
  1347  00FB1B  000B               	dw	11
  1348  00FB1D  0000               	dw	0
  1349  00FB1F  0000               	dw	0
  1350  00FB21  00C0               	dw	192
  1351  00FB23  0007               	dw	7
  1352  00FB25  0020               	dw	32
  1353  00FB27  0008               	dw	8
  1354  00FB29  0010               	dw	16
  1355  00FB2B  0010               	dw	16
  1356  00FB2D  0010               	dw	16
  1357  00FB2F  0010               	dw	16
  1358  00FB31  0010               	dw	16
  1359  00FB33  0010               	dw	16
  1360  00FB35  0010               	dw	16
  1361  00FB37  0010               	dw	16
  1362  00FB39  0010               	dw	16
  1363  00FB3B  0010               	dw	16
  1364  00FB3D  0020               	dw	32
  1365  00FB3F  0008               	dw	8
  1366  00FB41  00F0               	dw	240
  1367  00FB43  001F               	dw	31
  1368  00FB45  0000               	dw	0
  1369  00FB47  0000               	dw	0
  1370  00FB49  000B               	dw	11
  1371  00FB4B  0000               	dw	0
  1372  00FB4D  0000               	dw	0
  1373  00FB4F  00FE               	dw	254
  1374  00FB51  001F               	dw	31
  1375  00FB53  0020               	dw	32
  1376  00FB55  0008               	dw	8
  1377  00FB57  0010               	dw	16
  1378  00FB59  0010               	dw	16
  1379  00FB5B  0010               	dw	16
  1380  00FB5D  0010               	dw	16
  1381  00FB5F  0010               	dw	16
  1382  00FB61  0010               	dw	16
  1383  00FB63  0010               	dw	16
  1384  00FB65  0010               	dw	16
  1385  00FB67  0010               	dw	16
  1386  00FB69  0010               	dw	16
  1387  00FB6B  0020               	dw	32
  1388  00FB6D  0008               	dw	8
  1389  00FB6F  00C0               	dw	192
  1390  00FB71  0007               	dw	7
  1391  00FB73  0000               	dw	0
  1392  00FB75  0000               	dw	0
  1393  00FB77  000A               	dw	10
  1394  00FB79  0000               	dw	0
  1395  00FB7B  0000               	dw	0
  1396  00FB7D  00C0               	dw	192
  1397  00FB7F  0007               	dw	7
  1398  00FB81  0020               	dw	32
  1399  00FB83  0008               	dw	8
  1400  00FB85  0010               	dw	16
  1401  00FB87  0010               	dw	16
  1402  00FB89  0010               	dw	16
  1403  00FB8B  0010               	dw	16
  1404  00FB8D  0010               	dw	16
  1405  00FB8F  0010               	dw	16
  1406  00FB91  0010               	dw	16
  1407  00FB93  0010               	dw	16
  1408  00FB95  0020               	dw	32
  1409  00FB97  0008               	dw	8
  1410  00FB99  0040               	dw	64
  1411  00FB9B  0004               	dw	4
  1412  00FB9D  0000               	dw	0
  1413  00FB9F  0000               	dw	0
  1414  00FBA1  000B               	dw	11
  1415  00FBA3  0000               	dw	0
  1416  00FBA5  0000               	dw	0
  1417  00FBA7  00C0               	dw	192
  1418  00FBA9  0007               	dw	7
  1419  00FBAB  0020               	dw	32
  1420  00FBAD  0008               	dw	8
  1421  00FBAF  0010               	dw	16
  1422  00FBB1  0010               	dw	16
  1423  00FBB3  0010               	dw	16
  1424  00FBB5  0010               	dw	16
  1425  00FBB7  0010               	dw	16
  1426  00FBB9  0010               	dw	16
  1427  00FBBB  0010               	dw	16
  1428  00FBBD  0010               	dw	16
  1429  00FBBF  0010               	dw	16
  1430  00FBC1  0010               	dw	16
  1431  00FBC3  0020               	dw	32
  1432  00FBC5  0008               	dw	8
  1433  00FBC7  00FE               	dw	254
  1434  00FBC9  001F               	dw	31
  1435  00FBCB  0000               	dw	0
  1436  00FBCD  0000               	dw	0
  1437  00FBCF  000A               	dw	10
  1438  00FBD1  0000               	dw	0
  1439  00FBD3  0000               	dw	0
  1440  00FBD5  00C0               	dw	192
  1441  00FBD7  0007               	dw	7
  1442  00FBD9  0020               	dw	32
  1443  00FBDB  0009               	dw	9
  1444  00FBDD  0010               	dw	16
  1445  00FBDF  0011               	dw	17
  1446  00FBE1  0010               	dw	16
  1447  00FBE3  0011               	dw	17
  1448  00FBE5  0010               	dw	16
  1449  00FBE7  0011               	dw	17
  1450  00FBE9  0010               	dw	16
  1451  00FBEB  0011               	dw	17
  1452  00FBED  0020               	dw	32
  1453  00FBEF  0009               	dw	9
  1454  00FBF1  00C0               	dw	192
  1455  00FBF3  0005               	dw	5
  1456  00FBF5  0000               	dw	0
  1457  00FBF7  0000               	dw	0
  1458  00FBF9  0006               	dw	6
  1459  00FBFB  0000               	dw	0
  1460  00FBFD  0000               	dw	0
  1461  00FBFF  0010               	dw	16
  1462  00FC01  0000               	dw	0
  1463  00FC03  00FC               	dw	252
  1464  00FC05  001F               	dw	31
  1465  00FC07  0012               	dw	18
  1466  00FC09  0000               	dw	0
  1467  00FC0B  0012               	dw	18
  1468  00FC0D  0000               	dw	0
  1469  00FC0F  0000               	dw	0
  1470  00FC11  0000               	dw	0
  1471  00FC13  000B               	dw	11
  1472  00FC15  0000               	dw	0
  1473  00FC17  0000               	dw	0
  1474  00FC19  00C0               	dw	192
  1475  00FC1B  0027               	dw	39
  1476  00FC1D  0020               	dw	32
  1477  00FC1F  0048               	dw	72
  1478  00FC21  0010               	dw	16
  1479  00FC23  0090               	dw	144
  1480  00FC25  0010               	dw	16
  1481  00FC27  0090               	dw	144
  1482  00FC29  0010               	dw	16
  1483  00FC2B  0090               	dw	144
  1484  00FC2D  0010               	dw	16
  1485  00FC2F  0090               	dw	144
  1486  00FC31  0010               	dw	16
  1487  00FC33  0090               	dw	144
  1488  00FC35  0020               	dw	32
  1489  00FC37  0048               	dw	72
  1490  00FC39  00F0               	dw	240
  1491  00FC3B  003F               	dw	63
  1492  00FC3D  0000               	dw	0
  1493  00FC3F  0000               	dw	0
  1494  00FC41  000A               	dw	10
  1495  00FC43  0000               	dw	0
  1496  00FC45  0000               	dw	0
  1497  00FC47  00FE               	dw	254
  1498  00FC49  001F               	dw	31
  1499  00FC4B  0020               	dw	32
  1500  00FC4D  0000               	dw	0
  1501  00FC4F  0010               	dw	16
  1502  00FC51  0000               	dw	0
  1503  00FC53  0010               	dw	16
  1504  00FC55  0000               	dw	0
  1505  00FC57  0010               	dw	16
  1506  00FC59  0000               	dw	0
  1507  00FC5B  0010               	dw	16
  1508  00FC5D  0000               	dw	0
  1509  00FC5F  0020               	dw	32
  1510  00FC61  0000               	dw	0
  1511  00FC63  00C0               	dw	192
  1512  00FC65  001F               	dw	31
  1513  00FC67  0000               	dw	0
  1514  00FC69  0000               	dw	0
  1515  00FC6B  0003               	dw	3
  1516  00FC6D  0000               	dw	0
  1517  00FC6F  0000               	dw	0
  1518  00FC71  00F6               	dw	246
  1519  00FC73  001F               	dw	31
  1520  00FC75  0000               	dw	0
  1521  00FC77  0000               	dw	0
  1522  00FC79  0003               	dw	3
  1523  00FC7B  0000               	dw	0
  1524  00FC7D  0080               	dw	128
  1525  00FC7F  00F6               	dw	246
  1526  00FC81  007F               	dw	127
  1527  00FC83  0000               	dw	0
  1528  00FC85  0000               	dw	0
  1529  00FC87  0008               	dw	8
  1530  00FC89  0000               	dw	0
  1531  00FC8B  0000               	dw	0
  1532  00FC8D  00FE               	dw	254
  1533  00FC8F  001F               	dw	31
  1534  00FC91  0000               	dw	0
  1535  00FC93  0001               	dw	1
  1536  00FC95  0080               	dw	128
  1537  00FC97  0002               	dw	2
  1538  00FC99  0040               	dw	64
  1539  00FC9B  0004               	dw	4
  1540  00FC9D  0020               	dw	32
  1541  00FC9F  0008               	dw	8
  1542  00FCA1  0010               	dw	16
  1543  00FCA3  0010               	dw	16
  1544  00FCA5  0000               	dw	0
  1545  00FCA7  0000               	dw	0
  1546  00FCA9  0003               	dw	3
  1547  00FCAB  0000               	dw	0
  1548  00FCAD  0000               	dw	0
  1549  00FCAF  00FE               	dw	254
  1550  00FCB1  001F               	dw	31
  1551  00FCB3  0000               	dw	0
  1552  00FCB5  0000               	dw	0
  1553  00FCB7  000F               	dw	15
  1554  00FCB9  0000               	dw	0
  1555  00FCBB  0000               	dw	0
  1556  00FCBD  00F0               	dw	240
  1557  00FCBF  001F               	dw	31
  1558  00FCC1  0020               	dw	32
  1559  00FCC3  0000               	dw	0
  1560  00FCC5  0010               	dw	16
  1561  00FCC7  0000               	dw	0
  1562  00FCC9  0010               	dw	16
  1563  00FCCB  0000               	dw	0
  1564  00FCCD  0010               	dw	16
  1565  00FCCF  0000               	dw	0
  1566  00FCD1  0020               	dw	32
  1567  00FCD3  0000               	dw	0
  1568  00FCD5  00C0               	dw	192
  1569  00FCD7  001F               	dw	31
  1570  00FCD9  0020               	dw	32
  1571  00FCDB  0000               	dw	0
  1572  00FCDD  0010               	dw	16
  1573  00FCDF  0000               	dw	0
  1574  00FCE1  0010               	dw	16
  1575  00FCE3  0000               	dw	0
  1576  00FCE5  0010               	dw	16
  1577  00FCE7  0000               	dw	0
  1578  00FCE9  0020               	dw	32
  1579  00FCEB  0000               	dw	0
  1580  00FCED  00C0               	dw	192
  1581  00FCEF  001F               	dw	31
  1582  00FCF1  0000               	dw	0
  1583  00FCF3  0000               	dw	0
  1584  00FCF5  000A               	dw	10
  1585  00FCF7  0000               	dw	0
  1586  00FCF9  0000               	dw	0
  1587  00FCFB  00F0               	dw	240
  1588  00FCFD  001F               	dw	31
  1589  00FCFF  0020               	dw	32
  1590  00FD01  0000               	dw	0
  1591  00FD03  0010               	dw	16
  1592  00FD05  0000               	dw	0
  1593  00FD07  0010               	dw	16
  1594  00FD09  0000               	dw	0
  1595  00FD0B  0010               	dw	16
  1596  00FD0D  0000               	dw	0
  1597  00FD0F  0010               	dw	16
  1598  00FD11  0000               	dw	0
  1599  00FD13  0020               	dw	32
  1600  00FD15  0000               	dw	0
  1601  00FD17  00C0               	dw	192
  1602  00FD19  001F               	dw	31
  1603  00FD1B  0000               	dw	0
  1604  00FD1D  0000               	dw	0
  1605  00FD1F  000A               	dw	10
  1606  00FD21  0000               	dw	0
  1607  00FD23  0000               	dw	0
  1608  00FD25  00C0               	dw	192
  1609  00FD27  0007               	dw	7
  1610  00FD29  0020               	dw	32
  1611  00FD2B  0008               	dw	8
  1612  00FD2D  0010               	dw	16
  1613  00FD2F  0010               	dw	16
  1614  00FD31  0010               	dw	16
  1615  00FD33  0010               	dw	16
  1616  00FD35  0010               	dw	16
  1617  00FD37  0010               	dw	16
  1618  00FD39  0010               	dw	16
  1619  00FD3B  0010               	dw	16
  1620  00FD3D  0020               	dw	32
  1621  00FD3F  0008               	dw	8
  1622  00FD41  00C0               	dw	192
  1623  00FD43  0007               	dw	7
  1624  00FD45  0000               	dw	0
  1625  00FD47  0000               	dw	0
  1626  00FD49  000B               	dw	11
  1627  00FD4B  0000               	dw	0
  1628  00FD4D  0000               	dw	0
  1629  00FD4F  00F0               	dw	240
  1630  00FD51  00FF               	dw	255
  1631  00FD53  0020               	dw	32
  1632  00FD55  0008               	dw	8
  1633  00FD57  0010               	dw	16
  1634  00FD59  0010               	dw	16
  1635  00FD5B  0010               	dw	16
  1636  00FD5D  0010               	dw	16
  1637  00FD5F  0010               	dw	16
  1638  00FD61  0010               	dw	16
  1639  00FD63  0010               	dw	16
  1640  00FD65  0010               	dw	16
  1641  00FD67  0010               	dw	16
  1642  00FD69  0010               	dw	16
  1643  00FD6B  0020               	dw	32
  1644  00FD6D  0008               	dw	8
  1645  00FD6F  00C0               	dw	192
  1646  00FD71  0007               	dw	7
  1647  00FD73  0000               	dw	0
  1648  00FD75  0000               	dw	0
  1649  00FD77  000B               	dw	11
  1650  00FD79  0000               	dw	0
  1651  00FD7B  0000               	dw	0
  1652  00FD7D  00C0               	dw	192
  1653  00FD7F  0007               	dw	7
  1654  00FD81  0020               	dw	32
  1655  00FD83  0008               	dw	8
  1656  00FD85  0010               	dw	16
  1657  00FD87  0010               	dw	16
  1658  00FD89  0010               	dw	16
  1659  00FD8B  0010               	dw	16
  1660  00FD8D  0010               	dw	16
  1661  00FD8F  0010               	dw	16
  1662  00FD91  0010               	dw	16
  1663  00FD93  0010               	dw	16
  1664  00FD95  0010               	dw	16
  1665  00FD97  0010               	dw	16
  1666  00FD99  0020               	dw	32
  1667  00FD9B  0008               	dw	8
  1668  00FD9D  00F0               	dw	240
  1669  00FD9F  00FF               	dw	255
  1670  00FDA1  0000               	dw	0
  1671  00FDA3  0000               	dw	0
  1672  00FDA5  0006               	dw	6
  1673  00FDA7  0000               	dw	0
  1674  00FDA9  0000               	dw	0
  1675  00FDAB  00F0               	dw	240
  1676  00FDAD  001F               	dw	31
  1677  00FDAF  0020               	dw	32
  1678  00FDB1  0000               	dw	0
  1679  00FDB3  0010               	dw	16
  1680  00FDB5  0000               	dw	0
  1681  00FDB7  0010               	dw	16
  1682  00FDB9  0000               	dw	0
  1683  00FDBB  0000               	dw	0
  1684  00FDBD  0000               	dw	0
  1685  00FDBF  0006               	dw	6
  1686  00FDC1  0060               	dw	96
  1687  00FDC3  0008               	dw	8
  1688  00FDC5  0090               	dw	144
  1689  00FDC7  0010               	dw	16
  1690  00FDC9  0010               	dw	16
  1691  00FDCB  0011               	dw	17
  1692  00FDCD  0010               	dw	16
  1693  00FDCF  0011               	dw	17
  1694  00FDD1  0020               	dw	32
  1695  00FDD3  000E               	dw	14
  1696  00FDD5  0000               	dw	0
  1697  00FDD7  0000               	dw	0
  1698  00FDD9  0007               	dw	7
  1699  00FDDB  0000               	dw	0
  1700  00FDDD  0000               	dw	0
  1701  00FDDF  0010               	dw	16
  1702  00FDE1  0000               	dw	0
  1703  00FDE3  0010               	dw	16
  1704  00FDE5  0000               	dw	0
  1705  00FDE7  00FE               	dw	254
  1706  00FDE9  001F               	dw	31
  1707  00FDEB  0010               	dw	16
  1708  00FDED  0000               	dw	0
  1709  00FDEF  0010               	dw	16
  1710  00FDF1  0000               	dw	0
  1711  00FDF3  0000               	dw	0
  1712  00FDF5  0000               	dw	0
  1713  00FDF7  000A               	dw	10
  1714  00FDF9  0000               	dw	0
  1715  00FDFB  0000               	dw	0
  1716  00FDFD  00F0               	dw	240
  1717  00FDFF  0007               	dw	7
  1718  00FE01  0000               	dw	0
  1719  00FE03  0008               	dw	8
  1720  00FE05  0000               	dw	0
  1721  00FE07  0010               	dw	16
  1722  00FE09  0000               	dw	0
  1723  00FE0B  0010               	dw	16
  1724  00FE0D  0000               	dw	0
  1725  00FE0F  0010               	dw	16
  1726  00FE11  0000               	dw	0
  1727  00FE13  0010               	dw	16
  1728  00FE15  0000               	dw	0
  1729  00FE17  0008               	dw	8
  1730  00FE19  00F0               	dw	240
  1731  00FE1B  0007               	dw	7
  1732  00FE1D  0000               	dw	0
  1733  00FE1F  0000               	dw	0
  1734  00FE21  000A               	dw	10
  1735  00FE23  0010               	dw	16
  1736  00FE25  0000               	dw	0
  1737  00FE27  0060               	dw	96
  1738  00FE29  0000               	dw	0
  1739  00FE2B  0080               	dw	128
  1740  00FE2D  0003               	dw	3
  1741  00FE2F  0000               	dw	0
  1742  00FE31  000C               	dw	12
  1743  00FE33  0000               	dw	0
  1744  00FE35  0010               	dw	16
  1745  00FE37  0000               	dw	0
  1746  00FE39  000C               	dw	12
  1747  00FE3B  0080               	dw	128
  1748  00FE3D  0003               	dw	3
  1749  00FE3F  0060               	dw	96
  1750  00FE41  0000               	dw	0
  1751  00FE43  0010               	dw	16
  1752  00FE45  0000               	dw	0
  1753  00FE47  0000               	dw	0
  1754  00FE49  0000               	dw	0
  1755  00FE4B  000E               	dw	14
  1756  00FE4D  0010               	dw	16
  1757  00FE4F  0000               	dw	0
  1758  00FE51  00E0               	dw	224
  1759  00FE53  0000               	dw	0
  1760  00FE55  0000               	dw	0
  1761  00FE57  0007               	dw	7
  1762  00FE59  0000               	dw	0
  1763  00FE5B  0018               	dw	24
  1764  00FE5D  0000               	dw	0
  1765  00FE5F  0007               	dw	7
  1766  00FE61  00E0               	dw	224
  1767  00FE63  0000               	dw	0
  1768  00FE65  0010               	dw	16
  1769  00FE67  0000               	dw	0
  1770  00FE69  00E0               	dw	224
  1771  00FE6B  0000               	dw	0
  1772  00FE6D  0000               	dw	0
  1773  00FE6F  0007               	dw	7
  1774  00FE71  0000               	dw	0
  1775  00FE73  0018               	dw	24
  1776  00FE75  0000               	dw	0
  1777  00FE77  0007               	dw	7
  1778  00FE79  00E0               	dw	224
  1779  00FE7B  0000               	dw	0
  1780  00FE7D  0010               	dw	16
  1781  00FE7F  0000               	dw	0
  1782  00FE81  0000               	dw	0
  1783  00FE83  0000               	dw	0
  1784  00FE85  0009               	dw	9
  1785  00FE87  0010               	dw	16
  1786  00FE89  0010               	dw	16
  1787  00FE8B  0020               	dw	32
  1788  00FE8D  0008               	dw	8
  1789  00FE8F  0040               	dw	64
  1790  00FE91  0004               	dw	4
  1791  00FE93  0080               	dw	128
  1792  00FE95  0003               	dw	3
  1793  00FE97  0080               	dw	128
  1794  00FE99  0003               	dw	3
  1795  00FE9B  0040               	dw	64
  1796  00FE9D  0004               	dw	4
  1797  00FE9F  0020               	dw	32
  1798  00FEA1  0008               	dw	8
  1799  00FEA3  0010               	dw	16
  1800  00FEA5  0010               	dw	16
  1801  00FEA7  0000               	dw	0
  1802  00FEA9  0000               	dw	0
  1803  00FEAB  0009               	dw	9
  1804  00FEAD  0010               	dw	16
  1805  00FEAF  0000               	dw	0
  1806  00FEB1  00E0               	dw	224
  1807  00FEB3  0000               	dw	0
  1808  00FEB5  0000               	dw	0
  1809  00FEB7  0083               	dw	131
  1810  00FEB9  0000               	dw	0
  1811  00FEBB  007C               	dw	124
  1812  00FEBD  0000               	dw	0
  1813  00FEBF  000C               	dw	12
  1814  00FEC1  0000               	dw	0
  1815  00FEC3  0003               	dw	3
  1816  00FEC5  00E0               	dw	224
  1817  00FEC7  0000               	dw	0
  1818  00FEC9  0010               	dw	16
  1819  00FECB  0000               	dw	0
  1820  00FECD  0000               	dw	0
  1821  00FECF  0000               	dw	0
  1822  00FED1  0008               	dw	8
  1823  00FED3  0010               	dw	16
  1824  00FED5  0010               	dw	16
  1825  00FED7  0010               	dw	16
  1826  00FED9  0018               	dw	24
  1827  00FEDB  0010               	dw	16
  1828  00FEDD  0016               	dw	22
  1829  00FEDF  0010               	dw	16
  1830  00FEE1  0011               	dw	17
  1831  00FEE3  00D0               	dw	208
  1832  00FEE5  0010               	dw	16
  1833  00FEE7  0030               	dw	48
  1834  00FEE9  0010               	dw	16
  1835  00FEEB  0010               	dw	16
  1836  00FEED  0010               	dw	16
  1837  00FEEF  0000               	dw	0
  1838  00FEF1  0000               	dw	0
  1839  00FEF3  0007               	dw	7
  1840  00FEF5  0000               	dw	0
  1841  00FEF7  0000               	dw	0
  1842  00FEF9  0000               	dw	0
  1843  00FEFB  0001               	dw	1
  1844  00FEFD  0080               	dw	128
  1845  00FEFF  0002               	dw	2
  1846  00FF01  00FC               	dw	252
  1847  00FF03  007E               	dw	126
  1848  00FF05  0002               	dw	2
  1849  00FF07  0080               	dw	128
  1850  00FF09  0002               	dw	2
  1851  00FF0B  0080               	dw	128
  1852  00FF0D  0000               	dw	0
  1853  00FF0F  0000               	dw	0
  1854  00FF11  0007               	dw	7
  1855  00FF13  0000               	dw	0
  1856  00FF15  0000               	dw	0
  1857  00FF17  0000               	dw	0
  1858  00FF19  0000               	dw	0
  1859  00FF1B  0000               	dw	0
  1860  00FF1D  0000               	dw	0
  1861  00FF1F  0000               	dw	0
  1862  00FF21  0000               	dw	0
  1863  00FF23  0000               	dw	0
  1864  00FF25  0000               	dw	0
  1865  00FF27  00FE               	dw	254
  1866  00FF29  00FF               	dw	255
  1867  00FF2B  0000               	dw	0
  1868  00FF2D  0000               	dw	0
  1869  00FF2F  0006               	dw	6
  1870  00FF31  0002               	dw	2
  1871  00FF33  0080               	dw	128
  1872  00FF35  0002               	dw	2
  1873  00FF37  0080               	dw	128
  1874  00FF39  00FC               	dw	252
  1875  00FF3B  007E               	dw	126
  1876  00FF3D  0080               	dw	128
  1877  00FF3F  0002               	dw	2
  1878  00FF41  0000               	dw	0
  1879  00FF43  0001               	dw	1
  1880  00FF45  0000               	dw	0
  1881  00FF47  0000               	dw	0
  1882  00FF49  000A               	dw	10
  1883  00FF4B  0000               	dw	0
  1884  00FF4D  0000               	dw	0
  1885  00FF4F  0080               	dw	128
  1886  00FF51  0000               	dw	0
  1887  00FF53  0040               	dw	64
  1888  00FF55  0000               	dw	0
  1889  00FF57  0040               	dw	64
  1890  00FF59  0000               	dw	0
  1891  00FF5B  0040               	dw	64
  1892  00FF5D  0000               	dw	0
  1893  00FF5F  0080               	dw	128
  1894  00FF61  0000               	dw	0
  1895  00FF63  0080               	dw	128
  1896  00FF65  0000               	dw	0
  1897  00FF67  0080               	dw	128
  1898  00FF69  0000               	dw	0
  1899  00FF6B  0040               	dw	64
  1900  00FF6D  0000               	dw	0
  1901  00FF6F  0000               	dw	0
  1902  00FF71  0000               	dw	0
  1903  00FF73  0005               	dw	5
  1904  00FF75  00FF               	dw	255
  1905  00FF77  000F               	dw	15
  1906  00FF79  0001               	dw	1
  1907  00FF7B  0008               	dw	8
  1908  00FF7D  0001               	dw	1
  1909  00FF7F  0008               	dw	8
  1910  00FF81  00FF               	dw	255
  1911  00FF83  000F               	dw	15
  1912  00FF85  0000               	dw	0
  1913  00FF87  0000               	dw	0
  1914  00FF89                     __end_of_font:
  1915                           	opt callstack 0
  1916  00FF89                     _spi_configuration:
  1917                           	opt callstack 0
  1918  00FF89  00                 	db	0
  1919  00FF8A  40                 	db	64
  1920  00FF8B  01                 	db	1
  1921  00FF8C  00                 	db	0
  1922  00FF8D                     __end_of_spi_configuration:
  1923                           	opt callstack 0
  1924  00FF8D                     STR_2:
  1925  00FF8D  54                 	db	84	;'T'
  1926  00FF8E  65                 	db	101	;'e'
  1927  00FF8F  6D                 	db	109	;'m'
  1928  00FF90  70                 	db	112	;'p'
  1929  00FF91  3D                 	db	61	;'='
  1930  00FF92  25                 	db	37
  1931  00FF93  2E                 	db	46
  1932  00FF94  66                 	db	102	;'f'
  1933  00FF95  20                 	db	32
  1934  00FF96  43                 	db	67	;'C'
  1935  00FF97  20                 	db	32
  1936  00FF98  20                 	db	32
  1937  00FF99  20                 	db	32
  1938  00FF9A  20                 	db	32
  1939  00FF9B  20                 	db	32
  1940  00FF9C  20                 	db	32
  1941  00FF9D  00                 	db	0
  1942  00FF9E                     STR_3:
  1943  00FF9E  50                 	db	80	;'P'
  1944  00FF9F  6F                 	db	111	;'o'
  1945  00FFA0  74                 	db	116	;'t'
  1946  00FFA1  3D                 	db	61	;'='
  1947  00FFA2  25                 	db	37
  1948  00FFA3  2E                 	db	46
  1949  00FFA4  66                 	db	102	;'f'
  1950  00FFA5  25                 	db	37
  1951  00FFA6  25                 	db	37
  1952  00FFA7  20                 	db	32
  1953  00FFA8  20                 	db	32
  1954  00FFA9  20                 	db	32
  1955  00FFAA  20                 	db	32
  1956  00FFAB  20                 	db	32
  1957  00FFAC  20                 	db	32
  1958  00FFAD  00                 	db	0
  1959  00FFAE                     STR_1:
  1960  00FFAE  48                 	db	72	;'H'
  1961  00FFAF  45                 	db	69	;'E'
  1962  00FFB0  4C                 	db	76	;'L'
  1963  00FFB1  4C                 	db	76	;'L'
  1964  00FFB2  4F                 	db	79	;'O'
  1965  00FFB3  20                 	db	32
  1966  00FFB4  57                 	db	87	;'W'
  1967  00FFB5  4F                 	db	79	;'O'
  1968  00FFB6  52                 	db	82	;'R'
  1969  00FFB7  4C                 	db	76	;'L'
  1970  00FFB8  44                 	db	68	;'D'
  1971  00FFB9  00                 	db	0
  1972  00FFBA                     STR_4:
  1973  00FFBA  49                 	db	73	;'I'
  1974  00FFBB  4E                 	db	78	;'N'
  1975  00FFBC  46                 	db	70	;'F'
  1976  00FFBD  00                 	db	0
  1977  00FFBE                     STR_8:
  1978  00FFBE  4E                 	db	78	;'N'
  1979  00FFBF  41                 	db	65	;'A'
  1980  00FFC0  4E                 	db	78	;'N'
  1981  00FFC1  00                 	db	0
  1982  00FFC2                     STR_93:
  1983  00FFC2  68                 	db	104	;'h'
  1984  00FFC3  68                 	db	104	;'h'
  1985  00FFC4  58                 	db	88	;'X'
  1986  00FFC5  00                 	db	0
  1987  00FFC6                     STR_12:
  1988  00FFC6  68                 	db	104	;'h'
  1989  00FFC7  68                 	db	104	;'h'
  1990  00FFC8  64                 	db	100	;'d'
  1991  00FFC9  00                 	db	0
  1992  00FFCA                     STR_5:
  1993  00FFCA  69                 	db	105	;'i'
  1994  00FFCB  6E                 	db	110	;'n'
  1995  00FFCC  66                 	db	102	;'f'
  1996  00FFCD  00                 	db	0
  1997  00FFCE                     STR_16:
  1998  00FFCE  68                 	db	104	;'h'
  1999  00FFCF  68                 	db	104	;'h'
  2000  00FFD0  69                 	db	105	;'i'
  2001  00FFD1  00                 	db	0
  2002  00FFD2                     STR_9:
  2003  00FFD2  6E                 	db	110	;'n'
  2004  00FFD3  61                 	db	97	;'a'
  2005  00FFD4  6E                 	db	110	;'n'
  2006  00FFD5  00                 	db	0
  2007  00FFD6                     STR_59:
  2008  00FFD6  68                 	db	104	;'h'
  2009  00FFD7  68                 	db	104	;'h'
  2010  00FFD8  6E                 	db	110	;'n'
  2011  00FFD9  00                 	db	0
  2012  00FFDA                     STR_44:
  2013  00FFDA  68                 	db	104	;'h'
  2014  00FFDB  68                 	db	104	;'h'
  2015  00FFDC  6F                 	db	111	;'o'
  2016  00FFDD  00                 	db	0
  2017  00FFDE                     STR_74:
  2018  00FFDE  68                 	db	104	;'h'
  2019  00FFDF  68                 	db	104	;'h'
  2020  00FFE0  75                 	db	117	;'u'
  2021  00FFE1  00                 	db	0
  2022  00FFE2                     STR_89:
  2023  00FFE2  68                 	db	104	;'h'
  2024  00FFE3  68                 	db	104	;'h'
  2025  00FFE4  78                 	db	120	;'x'
  2026  00FFE5  00                 	db	0
  2027  00FFE6                     STR_111:
  2028  00FFE6  7A                 	db	122	;'z'
  2029  00FFE7  58                 	db	88	;'X'
  2030  00FFE8  00                 	db	0
  2031  00FFE9                     STR_30:
  2032  00FFE9  7A                 	db	122	;'z'
  2033  00FFEA  64                 	db	100	;'d'
  2034  00FFEB  00                 	db	0
  2035  00FFEC                     STR_39:
  2036  00FFEC  6C                 	db	108	;'l'
  2037  00FFED  66                 	db	102	;'f'
  2038  00FFEE  00                 	db	0
  2039  00FFEF                     STR_34:
  2040  00FFEF  7A                 	db	122	;'z'
  2041  00FFF0  69                 	db	105	;'i'
  2042  00FFF1  00                 	db	0
  2043  00FFF2                     STR_69:
  2044  00FFF2  7A                 	db	122	;'z'
  2045  00FFF3  6E                 	db	110	;'n'
  2046  00FFF4  00                 	db	0
  2047  00FFF5                     STR_54:
  2048  00FFF5  7A                 	db	122	;'z'
  2049  00FFF6  6F                 	db	111	;'o'
  2050  00FFF7  00                 	db	0
  2051  00FFF8                     STR_84:
  2052  00FFF8  7A                 	db	122	;'z'
  2053  00FFF9  75                 	db	117	;'u'
  2054  00FFFA  00                 	db	0
  2055  00FFFB                     STR_107:
  2056  00FFFB  7A                 	db	122	;'z'
  2057  00FFFC  78                 	db	120	;'x'
  2058  00FFFD  00                 	db	0
  2059  0000                     
  2060                           ; #config settings
  2061  00FFFE  00                 	db	0	; dummy byte at the end
  2062  0000                     
  2063                           	psect	nvBANK1
  2064  0001BB                     __pnvBANK1:
  2065                           	opt callstack 0
  2066  0001BB                     _timer1ReloadVal:
  2067                           	opt callstack 0
  2068  0001BB                     	ds	2
  2069  0001BD                     _IOCB4_InterruptHandler:
  2070                           	opt callstack 0
  2071  0001BD                     	ds	2
  2072  0000                     _IOCBbits	set	3930
  2073  0000                     _WPUB	set	3931
  2074  0000                     _ANCON1	set	3932
  2075  0000                     _ANCON0	set	3933
  2076  0000                     _LATEbits	set	3981
  2077  0000                     _SSPSTATbits	set	4039
  2078  0000                     _LATAbits	set	3977
  2079  0000                     _PORTBbits	set	3969
  2080  0000                     _T1GCONbits	set	4010
  2081  0000                     _T1CONbits	set	4045
  2082  0000                     _T1CON	set	4045
  2083  0000                     _TMR1L	set	4046
  2084  0000                     _TMR1H	set	4047
  2085  0000                     _T1GCON	set	4010
  2086  0000                     _ADCON0bits	set	4034
  2087  0000                     _ADRESL	set	4035
  2088  0000                     _ADRESH	set	4036
  2089  0000                     _ADCON2	set	4032
  2090  0000                     _ADCON1	set	4033
  2091  0000                     _ADCON0	set	4034
  2092  0000                     _PIR1bits	set	3998
  2093  0000                     _SSPBUF	set	4041
  2094  0000                     _SSPCON2	set	4037
  2095  0000                     _SSPCON1bits	set	4038
  2096  0000                     _TRISCbits	set	3988
  2097  0000                     _SSPADD	set	4040
  2098  0000                     _SSPCON1	set	4038
  2099  0000                     _SSPSTAT	set	4039
  2100  0000                     _INTCON2bits	set	4081
  2101  0000                     _TRISD	set	3989
  2102  0000                     _TRISC	set	3988
  2103  0000                     _TRISB	set	3987
  2104  0000                     _TRISA	set	3986
  2105  0000                     _TRISE	set	3990
  2106  0000                     _LATC	set	3979
  2107  0000                     _LATB	set	3978
  2108  0000                     _LATA	set	3977
  2109  0000                     _LATD	set	3980
  2110  0000                     _LATE	set	3981
  2111  0000                     _INTCONbits	set	4082
  2112  0000                     _RCONbits	set	4048
  2113  0000                     _REFOCON	set	3994
  2114  0000                     _OSCTUNE	set	3995
  2115  0000                     _OSCCON2	set	4050
  2116  0000                     _OSCCON	set	4051
  2117                           
  2118                           	psect	cinit
  2119  005774                     __pcinit:
  2120                           	opt callstack 0
  2121  005774                     start_initialization:
  2122                           	opt callstack 0
  2123  005774                     __initialization:
  2124                           	opt callstack 0
  2125                           
  2126                           ; Initialize objects allocated to BANK1 (7 bytes)
  2127                           ; load TBLPTR registers with __pidataBANK1
  2128  005774  0E24               	movlw	low __pidataBANK1
  2129  005776  6EF6               	movwf	tblptrl,c
  2130  005778  0E5D               	movlw	high __pidataBANK1
  2131  00577A  6EF7               	movwf	tblptrh,c
  2132  00577C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2133  00577E  6EF8               	movwf	tblptru,c
  2134  005780  EE01  F0B4         	lfsr	0,__pdataBANK1
  2135  005784  EE10 F007          	lfsr	1,7
  2136  005788                     copy_data0:
  2137  005788  0009               	tblrd		*+
  2138  00578A  CFF5 FFEE          	movff	tablat,postinc0
  2139  00578E  50E5               	movf	postdec1,w,c
  2140  005790  50E1               	movf	fsr1l,w,c
  2141  005792  E1FA               	bnz	copy_data0
  2142                           
  2143                           ; Clear objects allocated to BANK2 (100 bytes)
  2144  005794  EE02  F000         	lfsr	0,__pbssBANK2
  2145  005798  0E64               	movlw	100
  2146  00579A                     clear_0:
  2147  00579A  6AEE               	clrf	postinc0,c
  2148  00579C  06E8               	decf	wreg,f,c
  2149  00579E  E1FD               	bnz	clear_0
  2150                           
  2151                           ; Clear objects allocated to BANK1 (180 bytes)
  2152  0057A0  EE01  F000         	lfsr	0,__pbssBANK1
  2153  0057A4  0EB4               	movlw	180
  2154  0057A6                     clear_1:
  2155  0057A6  6AEE               	clrf	postinc0,c
  2156  0057A8  06E8               	decf	wreg,f,c
  2157  0057AA  E1FD               	bnz	clear_1
  2158                           
  2159                           ; Clear objects allocated to BANK0 (36 bytes)
  2160  0057AC  EE00  F0DC         	lfsr	0,__pbssBANK0
  2161  0057B0  0E24               	movlw	36
  2162  0057B2                     clear_2:
  2163  0057B2  6AEE               	clrf	postinc0,c
  2164  0057B4  06E8               	decf	wreg,f,c
  2165  0057B6  E1FD               	bnz	clear_2
  2166                           
  2167                           ; Clear objects allocated to COMRAM (2 bytes)
  2168  0057B8  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2169  0057BA  6A58               	clrf	__pbssCOMRAM& (0+255),c
  2170  0057BC                     end_of_initialization:
  2171                           	opt callstack 0
  2172  0057BC                     __end_of__initialization:
  2173                           	opt callstack 0
  2174  0057BC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2175  0057BE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2176  0057C0  0100               	movlb	0
  2177  0057C2  EF51  F01B         	goto	_main	;jump to C main() function
  2178                           
  2179                           	psect	bssCOMRAM
  2180  000058                     __pbssCOMRAM:
  2181                           	opt callstack 0
  2182  000058                     _prec:
  2183                           	opt callstack 0
  2184  000058                     	ds	2
  2185                           
  2186                           	psect	bssBANK0
  2187  0000DC                     __pbssBANK0:
  2188                           	opt callstack 0
  2189  0000DC                     floorf@F524:
  2190                           	opt callstack 0
  2191  0000DC                     	ds	4
  2192  0000E0                     ___fpclassifyf@F463:
  2193                           	opt callstack 0
  2194  0000E0                     	ds	4
  2195  0000E4                     _pot_val:
  2196                           	opt callstack 0
  2197  0000E4                     	ds	4
  2198  0000E8                     _temp:
  2199                           	opt callstack 0
  2200  0000E8                     	ds	4
  2201  0000EC                     _tensao_in:
  2202                           	opt callstack 0
  2203  0000EC                     	ds	4
  2204  0000F0                     _errno:
  2205                           	opt callstack 0
  2206  0000F0                     	ds	2
  2207  0000F2                     _nout:
  2208                           	opt callstack 0
  2209  0000F2                     	ds	2
  2210  0000F4                     _width:
  2211                           	opt callstack 0
  2212  0000F4                     	ds	2
  2213  0000F6                     _flags:
  2214                           	opt callstack 0
  2215  0000F6                     	ds	2
  2216  0000F8                     _global_bg_color:
  2217                           	opt callstack 0
  2218  0000F8                     	ds	2
  2219  0000FA                     _botao:
  2220                           	opt callstack 0
  2221  0000FA                     	ds	2
  2222  0000FC                     _codigo_digit:
  2223                           	opt callstack 0
  2224  0000FC                     	ds	2
  2225  0000FE                     _ADC_InterruptHandler:
  2226                           	opt callstack 0
  2227  0000FE                     	ds	2
  2228                           
  2229                           	psect	bssBANK1
  2230  000100                     __pbssBANK1:
  2231                           	opt callstack 0
  2232  000100                     _string_temp:
  2233                           	opt callstack 0
  2234  000100                     	ds	100
  2235  000164                     _dbuf:
  2236                           	opt callstack 0
  2237  000164                     	ds	80
  2238                           
  2239                           	psect	dataBANK1
  2240  0001B4                     __pdataBANK1:
  2241                           	opt callstack 0
  2242  0001B4                     stoa@F1174:
  2243                           	opt callstack 0
  2244  0001B4                     	ds	7
  2245                           
  2246                           	psect	bssBANK2
  2247  000200                     __pbssBANK2:
  2248                           	opt callstack 0
  2249  000200                     _string_pot:
  2250                           	opt callstack 0
  2251  000200                     	ds	100
  2252                           
  2253                           	psect	cstackBANK1
  2254  0001BF                     __pcstackBANK1:
  2255                           	opt callstack 0
  2256  0001BF                     	ds	2
  2257  0001C1                     snprintf@ap:
  2258                           	opt callstack 0
  2259                           
  2260                           ; 2 bytes @ 0x2
  2261  0001C1                     	ds	2
  2262                           
  2263                           	psect	cstackBANK0
  2264  000060                     __pcstackBANK0:
  2265                           	opt callstack 0
  2266  000060                     efgtoa@ou:
  2267                           	opt callstack 0
  2268                           
  2269                           ; 4 bytes @ 0x0
  2270  000060                     	ds	4
  2271  000064                     _efgtoa$1326:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 2 bytes @ 0x4
  2275  000064                     	ds	2
  2276  000066                     _efgtoa$1327:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 2 bytes @ 0x6
  2280  000066                     	ds	2
  2281  000068                     _efgtoa$1331:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 2 bytes @ 0x8
  2285  000068                     	ds	2
  2286  00006A                     _efgtoa$1335:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 2 bytes @ 0xA
  2290  00006A                     	ds	2
  2291  00006C                     _efgtoa$1336:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 2 bytes @ 0xC
  2295  00006C                     	ds	2
  2296  00006E                     _efgtoa$1337:
  2297                           	opt callstack 0
  2298                           
  2299                           ; 2 bytes @ 0xE
  2300  00006E                     	ds	2
  2301  000070                     efgtoa@t:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 2 bytes @ 0x10
  2305  000070                     	ds	2
  2306  000072                     efgtoa@pp:
  2307                           	opt callstack 0
  2308                           
  2309                           ; 2 bytes @ 0x12
  2310  000072                     	ds	2
  2311  000074                     efgtoa@m:
  2312                           	opt callstack 0
  2313                           
  2314                           ; 2 bytes @ 0x14
  2315  000074                     	ds	2
  2316  000076                     efgtoa@ne:
  2317                           	opt callstack 0
  2318                           
  2319                           ; 2 bytes @ 0x16
  2320  000076                     	ds	2
  2321  000078                     efgtoa@d:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 2 bytes @ 0x18
  2325  000078                     	ds	2
  2326  00007A                     efgtoa@sign:
  2327                           	opt callstack 0
  2328                           
  2329                           ; 2 bytes @ 0x1A
  2330  00007A                     	ds	2
  2331  00007C                     efgtoa@p:
  2332                           	opt callstack 0
  2333                           
  2334                           ; 2 bytes @ 0x1C
  2335  00007C                     	ds	2
  2336  00007E                     efgtoa@nmode:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 1 bytes @ 0x1E
  2340  00007E                     	ds	1
  2341  00007F                     efgtoa@w:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x1F
  2345  00007F                     	ds	2
  2346  000081                     efgtoa@mode:
  2347                           	opt callstack 0
  2348                           
  2349                           ; 1 bytes @ 0x21
  2350  000081                     	ds	1
  2351  000082                     efgtoa@h:
  2352                           	opt callstack 0
  2353                           
  2354                           ; 4 bytes @ 0x22
  2355  000082                     	ds	4
  2356  000086                     efgtoa@l:
  2357                           	opt callstack 0
  2358                           
  2359                           ; 4 bytes @ 0x26
  2360  000086                     	ds	4
  2361  00008A                     efgtoa@i:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x2A
  2365  00008A                     	ds	2
  2366  00008C                     efgtoa@g:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 4 bytes @ 0x2C
  2370  00008C                     	ds	4
  2371  000090                     efgtoa@e:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x30
  2375  000090                     	ds	2
  2376  000092                     efgtoa@n:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 2 bytes @ 0x32
  2380  000092                     	ds	2
  2381  000094                     efgtoa@u:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 4 bytes @ 0x34
  2385  000094                     	ds	4
  2386  000098                     vfpfcnvrt@cp:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x38
  2390  000098                     	ds	2
  2391  00009A                     vfpfcnvrt@done:
  2392                           	opt callstack 0
  2393                           
  2394                           ; 2 bytes @ 0x3A
  2395  00009A                     	ds	2
  2396  00009C                     _vfpfcnvrt$1388:
  2397                           	opt callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x3C
  2400  00009C                     	ds	2
  2401  00009E                     _vfpfcnvrt$1389:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x3E
  2405  00009E                     	ds	2
  2406  0000A0                     _vfpfcnvrt$1410:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 2 bytes @ 0x40
  2410  0000A0                     	ds	2
  2411  0000A2                     vfpfcnvrt@f:
  2412                           	opt callstack 0
  2413                           
  2414                           ; 4 bytes @ 0x42
  2415  0000A2                     	ds	4
  2416  0000A6                     vfpfcnvrt@ct:
  2417                           	opt callstack 0
  2418                           
  2419                           ; 3 bytes @ 0x46
  2420  0000A6                     	ds	3
  2421  0000A9                     vfpfcnvrt@ll:
  2422                           	opt callstack 0
  2423                           
  2424                           ; 8 bytes @ 0x49
  2425  0000A9                     	ds	8
  2426  0000B1                     vfpfcnvrt@vp:
  2427                           	opt callstack 0
  2428                           
  2429                           ; 2 bytes @ 0x51
  2430  0000B1                     	ds	2
  2431  0000B3                     vfpfcnvrt@c:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 1 bytes @ 0x53
  2435  0000B3                     	ds	1
  2436  0000B4                     vfpfcnvrt@llu:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 8 bytes @ 0x54
  2440  0000B4                     	ds	8
  2441  0000BC                     ?_vsnprintf:
  2442                           	opt callstack 0
  2443  0000BC                     vsnprintf@s:
  2444                           	opt callstack 0
  2445                           
  2446                           ; 2 bytes @ 0x5C
  2447  0000BC                     	ds	2
  2448  0000BE                     vsnprintf@n:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x5E
  2452  0000BE                     	ds	2
  2453  0000C0                     vsnprintf@fmt:
  2454                           	opt callstack 0
  2455                           
  2456                           ; 2 bytes @ 0x60
  2457  0000C0                     	ds	2
  2458  0000C2                     vsnprintf@ap:
  2459                           	opt callstack 0
  2460                           
  2461                           ; 2 bytes @ 0x62
  2462  0000C2                     	ds	2
  2463  0000C4                     ??_vsnprintf:
  2464                           
  2465                           ; 1 bytes @ 0x64
  2466  0000C4                     	ds	4
  2467  0000C8                     _vsnprintf$2141:
  2468                           	opt callstack 0
  2469                           
  2470                           ; 2 bytes @ 0x68
  2471  0000C8                     	ds	2
  2472  0000CA                     vsnprintf@cnt:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 2 bytes @ 0x6A
  2476  0000CA                     	ds	2
  2477  0000CC                     vsnprintf@f:
  2478                           	opt callstack 0
  2479                           
  2480                           ; 6 bytes @ 0x6C
  2481  0000CC                     	ds	6
  2482  0000D2                     ?_snprintf:
  2483                           	opt callstack 0
  2484  0000D2                     snprintf@s:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 2 bytes @ 0x72
  2488  0000D2                     	ds	2
  2489  0000D4                     snprintf@n:
  2490                           	opt callstack 0
  2491                           
  2492                           ; 2 bytes @ 0x74
  2493  0000D4                     	ds	2
  2494  0000D6                     snprintf@fmt:
  2495                           	opt callstack 0
  2496                           
  2497                           ; 2 bytes @ 0x76
  2498  0000D6                     	ds	6
  2499                           
  2500                           	psect	cstackCOMRAM
  2501  000001                     __pcstackCOMRAM:
  2502                           	opt callstack 0
  2503  000001                     ??_IOCB4_InterruptCall:
  2504  000001                     
  2505                           ; 1 bytes @ 0x0
  2506  000001                     	ds	1
  2507  000002                     ??_INTERRUPT_InterruptManager:
  2508                           
  2509                           ; 1 bytes @ 0x1
  2510  000002                     	ds	2
  2511  000004                     ??_TMR1_Initialize:
  2512  000004                     ??_SPI_Open:
  2513  000004                     ??_msDelay:
  2514  000004                     ?_strlen:
  2515                           	opt callstack 0
  2516  000004                     ?___fpclassifyf:
  2517                           	opt callstack 0
  2518  000004                     ?_isupper:
  2519                           	opt callstack 0
  2520  000004                     ?_isalpha:
  2521                           	opt callstack 0
  2522  000004                     ?_isdigit:
  2523                           	opt callstack 0
  2524  000004                     ?_strncmp:
  2525                           	opt callstack 0
  2526  000004                     ?_isspace:
  2527                           	opt callstack 0
  2528  000004                     ?_islower:
  2529                           	opt callstack 0
  2530  000004                     ?_ADC_GetConversion:
  2531                           	opt callstack 0
  2532  000004                     ?___wmul:
  2533                           	opt callstack 0
  2534  000004                     ?___awdiv:
  2535                           	opt callstack 0
  2536  000004                     ?___awmod:
  2537                           	opt callstack 0
  2538  000004                     ?___fladd:
  2539                           	opt callstack 0
  2540  000004                     ?___fldiv:
  2541                           	opt callstack 0
  2542  000004                     ?___flneg:
  2543                           	opt callstack 0
  2544  000004                     ?___fltol:
  2545                           	opt callstack 0
  2546  000004                     ?___xxtofl:
  2547                           	opt callstack 0
  2548  000004                     ?___aodiv:
  2549                           	opt callstack 0
  2550  000004                     ?___aomod:
  2551                           	opt callstack 0
  2552  000004                     ?___lodiv:
  2553                           	opt callstack 0
  2554  000004                     ?___lomod:
  2555                           	opt callstack 0
  2556  000004                     SPI_ExchangeByte@data:
  2557                           	opt callstack 0
  2558  000004                     IOCB4_SetInterruptHandler@InterruptHandler:
  2559                           	opt callstack 0
  2560  000004                     ___wmul@multiplier:
  2561                           	opt callstack 0
  2562  000004                     ___awdiv@dividend:
  2563                           	opt callstack 0
  2564  000004                     ___awmod@dividend:
  2565                           	opt callstack 0
  2566  000004                     isalpha@c:
  2567                           	opt callstack 0
  2568  000004                     isdigit@c:
  2569                           	opt callstack 0
  2570  000004                     isspace@c:
  2571                           	opt callstack 0
  2572  000004                     isupper@c:
  2573                           	opt callstack 0
  2574  000004                     fputc@c:
  2575                           	opt callstack 0
  2576  000004                     strcpy@dest:
  2577                           	opt callstack 0
  2578  000004                     strlen@s:
  2579                           	opt callstack 0
  2580  000004                     strncmp@_l:
  2581                           	opt callstack 0
  2582  000004                     islower@c:
  2583                           	opt callstack 0
  2584  000004                     ___fleq@ff1:
  2585                           	opt callstack 0
  2586  000004                     ___flneg@f1:
  2587                           	opt callstack 0
  2588  000004                     ___fltol@f1:
  2589                           	opt callstack 0
  2590  000004                     ___fladd@b:
  2591                           	opt callstack 0
  2592  000004                     ___fldiv@b:
  2593                           	opt callstack 0
  2594  000004                     ___xxtofl@val:
  2595                           	opt callstack 0
  2596  000004                     ___fpclassifyf@x:
  2597                           	opt callstack 0
  2598  000004                     ___aodiv@dividend:
  2599                           	opt callstack 0
  2600  000004                     ___aomod@dividend:
  2601                           	opt callstack 0
  2602  000004                     ___lodiv@dividend:
  2603                           	opt callstack 0
  2604  000004                     ___lomod@dividend:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 8 bytes @ 0x3
  2608  000004                     	ds	1
  2609  000005                     SPI_Open@spiUniqueConfiguration:
  2610                           	opt callstack 0
  2611  000005                     msDelay@ms:
  2612                           	opt callstack 0
  2613  000005                     lcd_send@value:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 1 bytes @ 0x4
  2617  000005                     	ds	1
  2618  000006                     ??_isupper:
  2619  000006                     ??_isalpha:
  2620  000006                     ??_isdigit:
  2621  000006                     ??_isspace:
  2622  000006                     ??_islower:
  2623  000006                     ??_ADC_GetConversion:
  2624  000006                     msDelay@k:
  2625                           	opt callstack 0
  2626  000006                     lcd_send@dc:
  2627                           	opt callstack 0
  2628  000006                     ___wmul@multiplicand:
  2629                           	opt callstack 0
  2630  000006                     ___awdiv@divisor:
  2631                           	opt callstack 0
  2632  000006                     ___awmod@divisor:
  2633                           	opt callstack 0
  2634  000006                     fputc@fp:
  2635                           	opt callstack 0
  2636  000006                     strcpy@src:
  2637                           	opt callstack 0
  2638  000006                     strlen@a:
  2639                           	opt callstack 0
  2640  000006                     strncmp@_r:
  2641                           	opt callstack 0
  2642                           
  2643                           ; 2 bytes @ 0x5
  2644  000006                     	ds	1
  2645  000007                     lcd_set_cursor_x@x:
  2646                           	opt callstack 0
  2647  000007                     lcd_set_cursor_y@y:
  2648                           	opt callstack 0
  2649  000007                     lcd_draw_pixel@color:
  2650                           	opt callstack 0
  2651                           
  2652                           ; 2 bytes @ 0x6
  2653  000007                     	ds	1
  2654  000008                     ??_fputc:
  2655  000008                     ??___fpclassifyf:
  2656  000008                     ??_strcpy:
  2657  000008                     ??___fltol:
  2658  000008                     ??___xxtofl:
  2659  000008                     ADC_GetConversion@channel:
  2660                           	opt callstack 0
  2661  000008                     ___awdiv@counter:
  2662                           	opt callstack 0
  2663  000008                     ___awmod@counter:
  2664                           	opt callstack 0
  2665  000008                     ___wmul@product:
  2666                           	opt callstack 0
  2667  000008                     strncmp@n:
  2668                           	opt callstack 0
  2669  000008                     ___fleq@ff2:
  2670                           	opt callstack 0
  2671  000008                     ___fladd@a:
  2672                           	opt callstack 0
  2673  000008                     ___fldiv@a:
  2674                           	opt callstack 0
  2675                           
  2676                           ; 4 bytes @ 0x7
  2677  000008                     	ds	1
  2678  000009                     ___awdiv@sign:
  2679                           	opt callstack 0
  2680  000009                     ___awmod@sign:
  2681                           	opt callstack 0
  2682  000009                     lcd_set_cursor@x:
  2683                           	opt callstack 0
  2684                           
  2685                           ; 2 bytes @ 0x8
  2686  000009                     	ds	1
  2687  00000A                     ??_strncmp:
  2688  00000A                     ?_tolower:
  2689                           	opt callstack 0
  2690  00000A                     ?_toupper:
  2691                           	opt callstack 0
  2692  00000A                     _isspace$2011:
  2693                           	opt callstack 0
  2694  00000A                     ___awdiv@quotient:
  2695                           	opt callstack 0
  2696  00000A                     strcpy@s:
  2697                           	opt callstack 0
  2698  00000A                     tolower@c:
  2699                           	opt callstack 0
  2700  00000A                     toupper@c:
  2701                           	opt callstack 0
  2702                           
  2703                           ; 2 bytes @ 0x9
  2704  00000A                     	ds	1
  2705  00000B                     ?_atoi:
  2706                           	opt callstack 0
  2707  00000B                     lcd_set_cursor@y:
  2708                           	opt callstack 0
  2709  00000B                     atoi@s:
  2710                           	opt callstack 0
  2711  00000B                     strncmp@l:
  2712                           	opt callstack 0
  2713                           
  2714                           ; 2 bytes @ 0xA
  2715  00000B                     	ds	1
  2716  00000C                     ??_tolower:
  2717  00000C                     ??_toupper:
  2718  00000C                     ??___fladd:
  2719  00000C                     ??___fldiv:
  2720  00000C                     ??___fleq:
  2721  00000C                     ___fltol@sign1:
  2722                           	opt callstack 0
  2723  00000C                     ___xxtofl@sign:
  2724                           	opt callstack 0
  2725  00000C                     ___fpclassifyf@e:
  2726                           	opt callstack 0
  2727  00000C                     strcpy@d:
  2728                           	opt callstack 0
  2729  00000C                     ___aodiv@divisor:
  2730                           	opt callstack 0
  2731  00000C                     ___aomod@divisor:
  2732                           	opt callstack 0
  2733  00000C                     ___lodiv@divisor:
  2734                           	opt callstack 0
  2735  00000C                     ___lomod@divisor:
  2736                           	opt callstack 0
  2737                           
  2738                           ; 8 bytes @ 0xB
  2739  00000C                     	ds	1
  2740  00000D                     ??_atoi:
  2741  00000D                     ?_stoa:
  2742                           	opt callstack 0
  2743  00000D                     ___fltol@exp1:
  2744                           	opt callstack 0
  2745  00000D                     ___xxtofl@exp:
  2746                           	opt callstack 0
  2747  00000D                     lcd_fill@bg_color:
  2748                           	opt callstack 0
  2749  00000D                     lcd_draw_char@x:
  2750                           	opt callstack 0
  2751  00000D                     stoa@fp:
  2752                           	opt callstack 0
  2753  00000D                     fputs@s:
  2754                           	opt callstack 0
  2755  00000D                     strncmp@r:
  2756                           	opt callstack 0
  2757                           
  2758                           ; 2 bytes @ 0xC
  2759  00000D                     	ds	1
  2760  00000E                     ___xxtofl@arg:
  2761                           	opt callstack 0
  2762  00000E                     ___fpclassifyf@u:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 4 bytes @ 0xD
  2766  00000E                     	ds	1
  2767  00000F                     lcd_fill@height:
  2768                           	opt callstack 0
  2769  00000F                     lcd_draw_char@y:
  2770                           	opt callstack 0
  2771  00000F                     stoa@s:
  2772                           	opt callstack 0
  2773  00000F                     fputs@fp:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 2 bytes @ 0xE
  2777  00000F                     	ds	1
  2778  000010                     ___fladd@signs:
  2779                           	opt callstack 0
  2780  000010                     _tolower$2094:
  2781                           	opt callstack 0
  2782  000010                     _toupper$2109:
  2783                           	opt callstack 0
  2784  000010                     ___fldiv@rem:
  2785                           	opt callstack 0
  2786                           
  2787                           ; 4 bytes @ 0xF
  2788  000010                     	ds	1
  2789  000011                     ??_stoa:
  2790  000011                     ___fladd@aexp:
  2791                           	opt callstack 0
  2792  000011                     fputs@c:
  2793                           	opt callstack 0
  2794  000011                     lcd_fill@width:
  2795                           	opt callstack 0
  2796  000011                     lcd_draw_char@fIndex:
  2797                           	opt callstack 0
  2798  000011                     atoi@neg:
  2799                           	opt callstack 0
  2800                           
  2801                           ; 2 bytes @ 0x10
  2802  000011                     	ds	1
  2803  000012                     ?___flmul:
  2804                           	opt callstack 0
  2805  000012                     ___fladd@bexp:
  2806                           	opt callstack 0
  2807  000012                     fputs@i:
  2808                           	opt callstack 0
  2809  000012                     ___flmul@b:
  2810                           	opt callstack 0
  2811  000012                     stoa@nuls:
  2812                           	opt callstack 0
  2813                           
  2814                           ; 7 bytes @ 0x11
  2815  000012                     	ds	1
  2816  000013                     ___fladd@grs:
  2817                           	opt callstack 0
  2818  000013                     lcd_draw_char@fg_color:
  2819                           	opt callstack 0
  2820  000013                     _atoi$1971:
  2821                           	opt callstack 0
  2822                           
  2823                           ; 2 bytes @ 0x12
  2824  000013                     	ds	1
  2825  000014                     ?_pad:
  2826                           	opt callstack 0
  2827  000014                     ___aodiv@counter:
  2828                           	opt callstack 0
  2829  000014                     ___aomod@counter:
  2830                           	opt callstack 0
  2831  000014                     ___lomod@counter:
  2832                           	opt callstack 0
  2833  000014                     ___fldiv@sign:
  2834                           	opt callstack 0
  2835  000014                     pad@fp:
  2836                           	opt callstack 0
  2837  000014                     ___lodiv@quotient:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 8 bytes @ 0x13
  2841  000014                     	ds	1
  2842  000015                     ___aodiv@sign:
  2843                           	opt callstack 0
  2844  000015                     ___aomod@sign:
  2845                           	opt callstack 0
  2846  000015                     lcd_draw_char@bg_color:
  2847                           	opt callstack 0
  2848  000015                     ___fldiv@new_exp:
  2849                           	opt callstack 0
  2850  000015                     _atoi$1973:
  2851                           	opt callstack 0
  2852                           
  2853                           ; 2 bytes @ 0x14
  2854  000015                     	ds	1
  2855  000016                     ?_abs:
  2856                           	opt callstack 0
  2857  000016                     pad@buf:
  2858                           	opt callstack 0
  2859  000016                     abs@a:
  2860                           	opt callstack 0
  2861  000016                     ___flmul@a:
  2862                           	opt callstack 0
  2863  000016                     ___aodiv@quotient:
  2864                           	opt callstack 0
  2865                           
  2866                           ; 8 bytes @ 0x15
  2867  000016                     	ds	1
  2868  000017                     ??_lcd_draw_char:
  2869  000017                     _atoi$1972:
  2870                           	opt callstack 0
  2871  000017                     ___fldiv@grs:
  2872                           	opt callstack 0
  2873                           
  2874                           ; 4 bytes @ 0x16
  2875  000017                     	ds	1
  2876  000018                     ??_abs:
  2877  000018                     pad@p:
  2878                           	opt callstack 0
  2879  000018                     atoi@n:
  2880                           	opt callstack 0
  2881                           
  2882                           ; 2 bytes @ 0x17
  2883  000018                     	ds	1
  2884  000019                     stoa@i:
  2885                           	opt callstack 0
  2886                           
  2887                           ; 2 bytes @ 0x18
  2888  000019                     	ds	1
  2889  00001A                     ??___flmul:
  2890  00001A                     ??_pad:
  2891                           
  2892                           ; 1 bytes @ 0x19
  2893  00001A                     	ds	1
  2894  00001B                     ___fldiv@bexp:
  2895                           	opt callstack 0
  2896  00001B                     pad@i:
  2897                           	opt callstack 0
  2898  00001B                     stoa@w:
  2899                           	opt callstack 0
  2900                           
  2901                           ; 2 bytes @ 0x1A
  2902  00001B                     	ds	1
  2903  00001C                     ___lodiv@counter:
  2904                           	opt callstack 0
  2905  00001C                     ___fldiv@aexp:
  2906                           	opt callstack 0
  2907                           
  2908                           ; 1 bytes @ 0x1B
  2909  00001C                     	ds	1
  2910  00001D                     ?_floorf:
  2911                           	opt callstack 0
  2912  00001D                     pad@w:
  2913                           	opt callstack 0
  2914  00001D                     stoa@cp:
  2915                           	opt callstack 0
  2916  00001D                     floorf@x:
  2917                           	opt callstack 0
  2918                           
  2919                           ; 4 bytes @ 0x1C
  2920  00001D                     	ds	1
  2921  00001E                     ___flmul@sign:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 1 bytes @ 0x1D
  2925  00001E                     	ds	1
  2926  00001F                     ?_ctoa:
  2927                           	opt callstack 0
  2928  00001F                     ?_dtoa:
  2929                           	opt callstack 0
  2930  00001F                     ?_otoa:
  2931                           	opt callstack 0
  2932  00001F                     ?_utoa:
  2933                           	opt callstack 0
  2934  00001F                     ?_xtoa:
  2935                           	opt callstack 0
  2936  00001F                     ___flmul@aexp:
  2937                           	opt callstack 0
  2938  00001F                     ctoa@fp:
  2939                           	opt callstack 0
  2940  00001F                     dtoa@fp:
  2941                           	opt callstack 0
  2942  00001F                     otoa@fp:
  2943                           	opt callstack 0
  2944  00001F                     stoa@p:
  2945                           	opt callstack 0
  2946  00001F                     utoa@fp:
  2947                           	opt callstack 0
  2948  00001F                     xtoa@fp:
  2949                           	opt callstack 0
  2950                           
  2951                           ; 2 bytes @ 0x1E
  2952  00001F                     	ds	1
  2953  000020                     lcd_draw_char@j:
  2954                           	opt callstack 0
  2955  000020                     ___flmul@grs:
  2956                           	opt callstack 0
  2957                           
  2958                           ; 4 bytes @ 0x1F
  2959  000020                     	ds	1
  2960  000021                     ??_floorf:
  2961  000021                     lcd_draw_char@k:
  2962                           	opt callstack 0
  2963  000021                     ctoa@c:
  2964                           	opt callstack 0
  2965  000021                     stoa@l:
  2966                           	opt callstack 0
  2967  000021                     dtoa@d:
  2968                           	opt callstack 0
  2969  000021                     otoa@d:
  2970                           	opt callstack 0
  2971  000021                     utoa@d:
  2972                           	opt callstack 0
  2973  000021                     xtoa@d:
  2974                           	opt callstack 0
  2975                           
  2976                           ; 8 bytes @ 0x20
  2977  000021                     	ds	1
  2978  000022                     lcd_draw_char@i:
  2979                           	opt callstack 0
  2980  000022                     ctoa@w:
  2981                           	opt callstack 0
  2982                           
  2983                           ; 2 bytes @ 0x21
  2984  000022                     	ds	1
  2985  000023                     lcd_draw_string@x:
  2986                           	opt callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x22
  2989  000023                     	ds	1
  2990  000024                     ___flmul@bexp:
  2991                           	opt callstack 0
  2992                           
  2993                           ; 1 bytes @ 0x23
  2994  000024                     	ds	1
  2995  000025                     lcd_draw_string@y:
  2996                           	opt callstack 0
  2997  000025                     ___flmul@prod:
  2998                           	opt callstack 0
  2999                           
  3000                           ; 4 bytes @ 0x24
  3001  000025                     	ds	2
  3002  000027                     lcd_draw_string@pS:
  3003                           	opt callstack 0
  3004  000027                     floorf@m:
  3005                           	opt callstack 0
  3006                           
  3007                           ; 4 bytes @ 0x26
  3008  000027                     	ds	2
  3009  000029                     ??_dtoa:
  3010  000029                     ??_otoa:
  3011  000029                     ??_utoa:
  3012  000029                     xtoa@x:
  3013                           	opt callstack 0
  3014  000029                     lcd_draw_string@fg_color:
  3015                           	opt callstack 0
  3016  000029                     ___flmul@temp:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 2 bytes @ 0x28
  3020  000029                     	ds	1
  3021  00002A                     ??_xtoa:
  3022                           
  3023                           ; 1 bytes @ 0x29
  3024  00002A                     	ds	1
  3025  00002B                     ?___flsub:
  3026                           	opt callstack 0
  3027  00002B                     lcd_draw_string@bg_color:
  3028                           	opt callstack 0
  3029  00002B                     floorf@e:
  3030                           	opt callstack 0
  3031  00002B                     ___flge@ff1:
  3032                           	opt callstack 0
  3033  00002B                     ___flsub@b:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 4 bytes @ 0x2A
  3037  00002B                     	ds	2
  3038  00002D                     ??_lcd_draw_string:
  3039  00002D                     floorf@u:
  3040                           	opt callstack 0
  3041                           
  3042                           ; 4 bytes @ 0x2C
  3043  00002D                     	ds	2
  3044  00002F                     ___flge@ff2:
  3045                           	opt callstack 0
  3046  00002F                     ___flsub@a:
  3047                           	opt callstack 0
  3048                           
  3049                           ; 4 bytes @ 0x2E
  3050  00002F                     	ds	2
  3051  000031                     lcd_draw_string@k:
  3052                           	opt callstack 0
  3053  000031                     _dtoa$1303:
  3054                           	opt callstack 0
  3055  000031                     otoa@p:
  3056                           	opt callstack 0
  3057  000031                     utoa@p:
  3058                           	opt callstack 0
  3059                           
  3060                           ; 2 bytes @ 0x30
  3061  000031                     	ds	1
  3062  000032                     _xtoa$1373:
  3063                           	opt callstack 0
  3064                           
  3065                           ; 2 bytes @ 0x31
  3066  000032                     	ds	1
  3067  000033                     ??___flge:
  3068  000033                     lcd_draw_string@lIndex:
  3069                           	opt callstack 0
  3070  000033                     dtoa@p:
  3071                           	opt callstack 0
  3072  000033                     otoa@t:
  3073                           	opt callstack 0
  3074  000033                     utoa@w:
  3075                           	opt callstack 0
  3076                           
  3077                           ; 2 bytes @ 0x32
  3078  000033                     	ds	1
  3079  000034                     _xtoa$1374:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 2 bytes @ 0x33
  3083  000034                     	ds	1
  3084  000035                     dtoa@w:
  3085                           	opt callstack 0
  3086  000035                     otoa@w:
  3087                           	opt callstack 0
  3088  000035                     utoa@n:
  3089                           	opt callstack 0
  3090                           
  3091                           ; 8 bytes @ 0x34
  3092  000035                     	ds	1
  3093  000036                     xtoa@p:
  3094                           	opt callstack 0
  3095                           
  3096                           ; 2 bytes @ 0x35
  3097  000036                     	ds	1
  3098  000037                     ?_efgtoa:
  3099                           	opt callstack 0
  3100  000037                     dtoa@s:
  3101                           	opt callstack 0
  3102  000037                     efgtoa@fp:
  3103                           	opt callstack 0
  3104  000037                     otoa@n:
  3105                           	opt callstack 0
  3106                           
  3107                           ; 8 bytes @ 0x36
  3108  000037                     	ds	1
  3109  000038                     xtoa@w:
  3110                           	opt callstack 0
  3111                           
  3112                           ; 2 bytes @ 0x37
  3113  000038                     	ds	1
  3114  000039                     efgtoa@f:
  3115                           	opt callstack 0
  3116  000039                     dtoa@n:
  3117                           	opt callstack 0
  3118                           
  3119                           ; 8 bytes @ 0x38
  3120  000039                     	ds	1
  3121  00003A                     xtoa@n:
  3122                           	opt callstack 0
  3123                           
  3124                           ; 8 bytes @ 0x39
  3125  00003A                     	ds	3
  3126  00003D                     efgtoa@c:
  3127                           	opt callstack 0
  3128  00003D                     utoa@i:
  3129                           	opt callstack 0
  3130                           
  3131                           ; 2 bytes @ 0x3C
  3132  00003D                     	ds	1
  3133  00003E                     ??_efgtoa:
  3134                           
  3135                           ; 1 bytes @ 0x3D
  3136  00003E                     	ds	1
  3137  00003F                     otoa@i:
  3138                           	opt callstack 0
  3139                           
  3140                           ; 2 bytes @ 0x3E
  3141  00003F                     	ds	2
  3142  000041                     dtoa@i:
  3143                           	opt callstack 0
  3144                           
  3145                           ; 2 bytes @ 0x40
  3146  000041                     	ds	1
  3147  000042                     xtoa@i:
  3148                           	opt callstack 0
  3149                           
  3150                           ; 2 bytes @ 0x41
  3151  000042                     	ds	2
  3152  000044                     xtoa@c:
  3153                           	opt callstack 0
  3154                           
  3155                           ; 2 bytes @ 0x43
  3156  000044                     	ds	2
  3157  000046                     ?_vfpfcnvrt:
  3158                           	opt callstack 0
  3159  000046                     vfpfcnvrt@fp:
  3160                           	opt callstack 0
  3161                           
  3162                           ; 2 bytes @ 0x45
  3163  000046                     	ds	2
  3164  000048                     vfpfcnvrt@fmt:
  3165                           	opt callstack 0
  3166                           
  3167                           ; 2 bytes @ 0x47
  3168  000048                     	ds	2
  3169  00004A                     vfpfcnvrt@ap:
  3170                           	opt callstack 0
  3171                           
  3172                           ; 2 bytes @ 0x49
  3173  00004A                     	ds	2
  3174  00004C                     ??_vfpfcnvrt:
  3175                           
  3176                           ; 1 bytes @ 0x4B
  3177  00004C                     	ds	4
  3178  000050                     ?_vfprintf:
  3179                           	opt callstack 0
  3180  000050                     vfprintf@fp:
  3181                           	opt callstack 0
  3182                           
  3183                           ; 2 bytes @ 0x4F
  3184  000050                     	ds	2
  3185  000052                     vfprintf@fmt:
  3186                           	opt callstack 0
  3187                           
  3188                           ; 2 bytes @ 0x51
  3189  000052                     	ds	2
  3190  000054                     vfprintf@ap:
  3191                           	opt callstack 0
  3192                           
  3193                           ; 2 bytes @ 0x53
  3194  000054                     	ds	2
  3195  000056                     vfprintf@cfmt:
  3196                           	opt callstack 0
  3197                           
  3198                           ; 2 bytes @ 0x55
  3199  000056                     	ds	2
  3200  000058                     
  3201                           ; 1 bytes @ 0x57
  3202 ;;
  3203 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3204 ;;
  3205 ;; *************** function _main *****************
  3206 ;; Defined at:
  3207 ;;		line 34 in file "main.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels required when called:   13
  3227 ;; This function calls:
  3228 ;;		_ADC_GetConversion
  3229 ;;		_IOCB4_SetInterruptHandler
  3230 ;;		_SPI_Open
  3231 ;;		_SYSTEM_Initialize
  3232 ;;		___flge
  3233 ;;		___flmul
  3234 ;;		___xxtofl
  3235 ;;		_lcd_draw_string
  3236 ;;		_lcd_init
  3237 ;;		_snprintf
  3238 ;; This function is called by:
  3239 ;;		Startup code after reset
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text0
  3244  0036A2                     __ptext0:
  3245                           	opt callstack 0
  3246  0036A2                     _main:
  3247                           	opt callstack 18
  3248  0036A2                     
  3249                           ;main.c: 37:     SYSTEM_Initialize();
  3250  0036A2  EC40  F02E         	call	_SYSTEM_Initialize	;wreg free
  3251  0036A6                     
  3252                           ;main.c: 38:     SPI_Open(SPI_DEFAULT);
  3253  0036A6  0E00               	movlw	0
  3254  0036A8  ECAF  F029         	call	_SPI_Open
  3255  0036AC                     
  3256                           ;main.c: 39:     lcd_init();
  3257  0036AC  ECAD  F016         	call	_lcd_init	;wreg free
  3258  0036B0                     
  3259                           ;main.c: 42:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  3260  0036B0  0EBA               	movlw	low _IOCB4_InterruptCall
  3261  0036B2  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3262  0036B4  0E56               	movlw	high _IOCB4_InterruptCall
  3263  0036B6  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3264  0036B8  EC8D  F02E         	call	_IOCB4_SetInterruptHandler	;wreg free
  3265  0036BC                     
  3266                           ;main.c: 45:     (INTCONbits.GIE = 1);
  3267  0036BC  8EF2               	bsf	242,7,c	;volatile
  3268  0036BE                     
  3269                           ;main.c: 56:     lcd_draw_string(100,120,"HELLO WORLD",0xFFFF,0x0000);
  3270  0036BE  0E00               	movlw	0
  3271  0036C0  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3272  0036C2  0E64               	movlw	100
  3273  0036C4  6E23               	movwf	lcd_draw_string@x^0,c
  3274  0036C6  0E00               	movlw	0
  3275  0036C8  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3276  0036CA  0E78               	movlw	120
  3277  0036CC  6E25               	movwf	lcd_draw_string@y^0,c
  3278  0036CE  0EAE               	movlw	low STR_1
  3279  0036D0  6E27               	movwf	lcd_draw_string@pS^0,c
  3280  0036D2  0EFF               	movlw	high STR_1
  3281  0036D4  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3282  0036D6  0EFF               	movlw	255
  3283  0036D8  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3284  0036DA  6829               	setf	lcd_draw_string@fg_color^0,c
  3285  0036DC  0E00               	movlw	0
  3286  0036DE  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3287  0036E0  0E00               	movlw	0
  3288  0036E2  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3289  0036E4  EC15  F024         	call	_lcd_draw_string	;wreg free
  3290  0036E8                     l9089:
  3291                           
  3292                           ;main.c: 59:     {;main.c: 61:         if (botao){
  3293  0036E8  0100               	movlb	0	; () banked
  3294  0036EA  51FA               	movf	_botao& (0+255),w,b
  3295  0036EC  11FB               	iorwf	(_botao+1)& (0+255),w,b
  3296  0036EE  B4D8               	btfsc	status,2,c
  3297  0036F0  EF7C  F01B         	goto	u12061
  3298  0036F4  EF7E  F01B         	goto	u12060
  3299  0036F8                     u12061:
  3300  0036F8  EF0E  F01C         	goto	l9103
  3301  0036FC                     u12060:
  3302  0036FC                     
  3303                           ; BSR set to: 0
  3304                           ;main.c: 62:             codigo_digit=ADC_GetConversion(TEMP);
  3305  0036FC  0E01               	movlw	1
  3306  0036FE  EC1B  F02D         	call	_ADC_GetConversion
  3307  003702  C004  F0FC         	movff	?_ADC_GetConversion,_codigo_digit
  3308  003706  C005  F0FD         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3309  00370A                     
  3310                           ;main.c: 63:             tensao_in=codigo_digit*0.000805664063;
  3311  00370A  C0FC  F004         	movff	_codigo_digit,___xxtofl@val
  3312  00370E  C0FD  F005         	movff	_codigo_digit+1,___xxtofl@val+1
  3313  003712  0E00               	movlw	0
  3314  003714  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  3315  003716  0EFF               	movlw	-1
  3316  003718  6E06               	movwf	(___xxtofl@val+2)^0,c
  3317  00371A  6E07               	movwf	(___xxtofl@val+3)^0,c
  3318  00371C  0E01               	movlw	1
  3319  00371E  EC78  F01F         	call	___xxtofl
  3320  003722  C004  F012         	movff	?___xxtofl,___flmul@b
  3321  003726  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3322  00372A  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3323  00372E  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3324  003732  0E33               	movlw	51
  3325  003734  6E16               	movwf	___flmul@a^0,c
  3326  003736  0E33               	movlw	51
  3327  003738  6E17               	movwf	(___flmul@a+1)^0,c
  3328  00373A  0E53               	movlw	83
  3329  00373C  6E18               	movwf	(___flmul@a+2)^0,c
  3330  00373E  0E3A               	movlw	58
  3331  003740  6E19               	movwf	(___flmul@a+3)^0,c
  3332  003742  ECCB  F012         	call	___flmul	;wreg free
  3333  003746  C012  F0EC         	movff	?___flmul,_tensao_in
  3334  00374A  C013  F0ED         	movff	?___flmul+1,_tensao_in+1
  3335  00374E  C014  F0EE         	movff	?___flmul+2,_tensao_in+2
  3336  003752  C015  F0EF         	movff	?___flmul+3,_tensao_in+3
  3337  003756                     
  3338                           ;main.c: 64:             temp=tensao_in*33.3333333;
  3339  003756  C0EC  F012         	movff	_tensao_in,___flmul@b
  3340  00375A  C0ED  F013         	movff	_tensao_in+1,___flmul@b+1
  3341  00375E  C0EE  F014         	movff	_tensao_in+2,___flmul@b+2
  3342  003762  C0EF  F015         	movff	_tensao_in+3,___flmul@b+3
  3343  003766  0E55               	movlw	85
  3344  003768  6E16               	movwf	___flmul@a^0,c
  3345  00376A  0E55               	movlw	85
  3346  00376C  6E17               	movwf	(___flmul@a+1)^0,c
  3347  00376E  0E05               	movlw	5
  3348  003770  6E18               	movwf	(___flmul@a+2)^0,c
  3349  003772  0E42               	movlw	66
  3350  003774  6E19               	movwf	(___flmul@a+3)^0,c
  3351  003776  ECCB  F012         	call	___flmul	;wreg free
  3352  00377A  C012  F0E8         	movff	?___flmul,_temp
  3353  00377E  C013  F0E9         	movff	?___flmul+1,_temp+1
  3354  003782  C014  F0EA         	movff	?___flmul+2,_temp+2
  3355  003786  C015  F0EB         	movff	?___flmul+3,_temp+3
  3356  00378A                     
  3357                           ;main.c: 65:             snprintf(string_temp,sizeof(string_temp),"Temp=%.f C      ",tem
      +                          p);
  3358  00378A  0E00               	movlw	low _string_temp
  3359  00378C  0100               	movlb	0	; () banked
  3360  00378E  6FD2               	movwf	snprintf@s& (0+255),b
  3361  003790  0E01               	movlw	high _string_temp
  3362  003792  6FD3               	movwf	(snprintf@s+1)& (0+255),b
  3363  003794  0E00               	movlw	0
  3364  003796  6FD5               	movwf	(snprintf@n+1)& (0+255),b
  3365  003798  0E64               	movlw	100
  3366  00379A  6FD4               	movwf	snprintf@n& (0+255),b
  3367  00379C  0E8D               	movlw	low STR_2
  3368  00379E  6FD6               	movwf	snprintf@fmt& (0+255),b
  3369  0037A0  0EFF               	movlw	high STR_2
  3370  0037A2  6FD7               	movwf	(snprintf@fmt+1)& (0+255),b
  3371  0037A4  C0E8  F0D8         	movff	_temp,?_snprintf+6
  3372  0037A8  C0E9  F0D9         	movff	_temp+1,?_snprintf+7
  3373  0037AC  C0EA  F0DA         	movff	_temp+2,?_snprintf+8
  3374  0037B0  C0EB  F0DB         	movff	_temp+3,?_snprintf+9
  3375  0037B4  ECC3  F02D         	call	_snprintf	;wreg free
  3376  0037B8                     
  3377                           ;main.c: 66:             lcd_draw_string(100,100,string_temp,0xFFFF,0x0000);
  3378  0037B8  0E00               	movlw	0
  3379  0037BA  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3380  0037BC  0E64               	movlw	100
  3381  0037BE  6E23               	movwf	lcd_draw_string@x^0,c
  3382  0037C0  0E00               	movlw	0
  3383  0037C2  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3384  0037C4  0E64               	movlw	100
  3385  0037C6  6E25               	movwf	lcd_draw_string@y^0,c
  3386  0037C8  0E00               	movlw	low _string_temp
  3387  0037CA  6E27               	movwf	lcd_draw_string@pS^0,c
  3388  0037CC  0E01               	movlw	high _string_temp
  3389  0037CE  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3390  0037D0  0EFF               	movlw	255
  3391  0037D2  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3392  0037D4  6829               	setf	lcd_draw_string@fg_color^0,c
  3393  0037D6  0E00               	movlw	0
  3394  0037D8  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3395  0037DA  0E00               	movlw	0
  3396  0037DC  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3397  0037DE  EC15  F024         	call	_lcd_draw_string	;wreg free
  3398  0037E2                     
  3399                           ;main.c: 67:                 if (temp >= 90){
  3400  0037E2  C0E8  F02B         	movff	_temp,___flge@ff1
  3401  0037E6  C0E9  F02C         	movff	_temp+1,___flge@ff1+1
  3402  0037EA  C0EA  F02D         	movff	_temp+2,___flge@ff1+2
  3403  0037EE  C0EB  F02E         	movff	_temp+3,___flge@ff1+3
  3404  0037F2  0E00               	movlw	0
  3405  0037F4  6E2F               	movwf	___flge@ff2^0,c
  3406  0037F6  0E00               	movlw	0
  3407  0037F8  6E30               	movwf	(___flge@ff2+1)^0,c
  3408  0037FA  0EB4               	movlw	180
  3409  0037FC  6E31               	movwf	(___flge@ff2+2)^0,c
  3410  0037FE  0E42               	movlw	66
  3411  003800  6E32               	movwf	(___flge@ff2+3)^0,c
  3412  003802  EC4C  F026         	call	___flge	;wreg free
  3413  003806  A0D8               	btfss	status,0,c
  3414  003808  EF08  F01C         	goto	u12071
  3415  00380C  EF0A  F01C         	goto	u12070
  3416  003810                     u12071:
  3417  003810  EF0D  F01C         	goto	l297
  3418  003814                     u12070:
  3419  003814  8A89               	bsf	137,5,c	;volatile
  3420  003816  EF0E  F01C         	goto	l9103
  3421  00381A                     l297:
  3422  00381A  9A89               	bcf	137,5,c	;volatile
  3423  00381C                     l9103:
  3424                           
  3425                           ;main.c: 74:         if (!botao){
  3426  00381C  0100               	movlb	0	; () banked
  3427  00381E  51FA               	movf	_botao& (0+255),w,b
  3428  003820  11FB               	iorwf	(_botao+1)& (0+255),w,b
  3429  003822  A4D8               	btfss	status,2,c
  3430  003824  EF16  F01C         	goto	u12081
  3431  003828  EF18  F01C         	goto	u12080
  3432  00382C                     u12081:
  3433  00382C  EF74  F01B         	goto	l9089
  3434  003830                     u12080:
  3435  003830                     
  3436                           ; BSR set to: 0
  3437                           ;main.c: 75:             codigo_digit=ADC_GetConversion(POT);
  3438  003830  0E00               	movlw	0
  3439  003832  EC1B  F02D         	call	_ADC_GetConversion
  3440  003836  C004  F0FC         	movff	?_ADC_GetConversion,_codigo_digit
  3441  00383A  C005  F0FD         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3442  00383E                     
  3443                           ;main.c: 76:             pot_val=codigo_digit*0.0244200244200244;
  3444  00383E  C0FC  F004         	movff	_codigo_digit,___xxtofl@val
  3445  003842  C0FD  F005         	movff	_codigo_digit+1,___xxtofl@val+1
  3446  003846  0E00               	movlw	0
  3447  003848  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  3448  00384A  0EFF               	movlw	-1
  3449  00384C  6E06               	movwf	(___xxtofl@val+2)^0,c
  3450  00384E  6E07               	movwf	(___xxtofl@val+3)^0,c
  3451  003850  0E01               	movlw	1
  3452  003852  EC78  F01F         	call	___xxtofl
  3453  003856  C004  F012         	movff	?___xxtofl,___flmul@b
  3454  00385A  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3455  00385E  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3456  003862  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3457  003866  0E81               	movlw	129
  3458  003868  6E16               	movwf	___flmul@a^0,c
  3459  00386A  0E0C               	movlw	12
  3460  00386C  6E17               	movwf	(___flmul@a+1)^0,c
  3461  00386E  0EC8               	movlw	200
  3462  003870  6E18               	movwf	(___flmul@a+2)^0,c
  3463  003872  0E3C               	movlw	60
  3464  003874  6E19               	movwf	(___flmul@a+3)^0,c
  3465  003876  ECCB  F012         	call	___flmul	;wreg free
  3466  00387A  C012  F0E4         	movff	?___flmul,_pot_val
  3467  00387E  C013  F0E5         	movff	?___flmul+1,_pot_val+1
  3468  003882  C014  F0E6         	movff	?___flmul+2,_pot_val+2
  3469  003886  C015  F0E7         	movff	?___flmul+3,_pot_val+3
  3470  00388A                     
  3471                           ;main.c: 77:             snprintf(string_pot,sizeof(string_pot),"Pot=%.f%%      ",pot_va
      +                          l);
  3472  00388A  0E00               	movlw	low _string_pot
  3473  00388C  0100               	movlb	0	; () banked
  3474  00388E  6FD2               	movwf	snprintf@s& (0+255),b
  3475  003890  0E02               	movlw	high _string_pot
  3476  003892  6FD3               	movwf	(snprintf@s+1)& (0+255),b
  3477  003894  0E00               	movlw	0
  3478  003896  6FD5               	movwf	(snprintf@n+1)& (0+255),b
  3479  003898  0E64               	movlw	100
  3480  00389A  6FD4               	movwf	snprintf@n& (0+255),b
  3481  00389C  0E9E               	movlw	low STR_3
  3482  00389E  6FD6               	movwf	snprintf@fmt& (0+255),b
  3483  0038A0  0EFF               	movlw	high STR_3
  3484  0038A2  6FD7               	movwf	(snprintf@fmt+1)& (0+255),b
  3485  0038A4  C0E4  F0D8         	movff	_pot_val,?_snprintf+6
  3486  0038A8  C0E5  F0D9         	movff	_pot_val+1,?_snprintf+7
  3487  0038AC  C0E6  F0DA         	movff	_pot_val+2,?_snprintf+8
  3488  0038B0  C0E7  F0DB         	movff	_pot_val+3,?_snprintf+9
  3489  0038B4  ECC3  F02D         	call	_snprintf	;wreg free
  3490  0038B8                     
  3491                           ;main.c: 78:             lcd_draw_string(100,100,string_pot,0xFFFF,0x0000);
  3492  0038B8  0E00               	movlw	0
  3493  0038BA  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3494  0038BC  0E64               	movlw	100
  3495  0038BE  6E23               	movwf	lcd_draw_string@x^0,c
  3496  0038C0  0E00               	movlw	0
  3497  0038C2  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3498  0038C4  0E64               	movlw	100
  3499  0038C6  6E25               	movwf	lcd_draw_string@y^0,c
  3500  0038C8  0E00               	movlw	low _string_pot
  3501  0038CA  6E27               	movwf	lcd_draw_string@pS^0,c
  3502  0038CC  0E02               	movlw	high _string_pot
  3503  0038CE  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3504  0038D0  0EFF               	movlw	255
  3505  0038D2  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3506  0038D4  6829               	setf	lcd_draw_string@fg_color^0,c
  3507  0038D6  0E00               	movlw	0
  3508  0038D8  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3509  0038DA  0E00               	movlw	0
  3510  0038DC  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3511  0038DE  EC15  F024         	call	_lcd_draw_string	;wreg free
  3512  0038E2  EF74  F01B         	goto	l9089
  3513  0038E6  EF1F  F000         	goto	start
  3514  0038EA                     __end_of_main:
  3515                           	opt callstack 0
  3516                           
  3517 ;; *************** function _snprintf *****************
  3518 ;; Defined at:
  3519 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  s               2  114[BANK0 ] PTR unsigned char 
  3522 ;;		 -> string_pot(100), string_temp(100), 
  3523 ;;  n               2  116[BANK0 ] unsigned int 
  3524 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  3525 ;;		 -> STR_3(16), STR_2(17), 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  ap              2    2[BANK1 ] PTR void [1]
  3528 ;;		 -> ?_snprintf(2), 
  3529 ;;  ret             2    0        int 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2  114[BANK0 ] int 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3539 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3540 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3542 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3543 ;;Total ram usage:       14 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:   12
  3546 ;; This function calls:
  3547 ;;		_vsnprintf
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text1
  3554  005B86                     __ptext1:
  3555                           	opt callstack 0
  3556  005B86                     _snprintf:
  3557                           	opt callstack 18
  3558  005B86  0ED8               	movlw	low (?_snprintf+6)
  3559  005B88  0101               	movlb	1	; () banked
  3560  005B8A  6FC1               	movwf	snprintf@ap& (0+255),b
  3561  005B8C  0E00               	movlw	high (?_snprintf+6)
  3562  005B8E  6FC2               	movwf	(snprintf@ap+1)& (0+255),b
  3563  005B90                     
  3564                           ; BSR set to: 1
  3565  005B90  C0D2  F0BC         	movff	snprintf@s,vsnprintf@s
  3566  005B94  C0D3  F0BD         	movff	snprintf@s+1,vsnprintf@s+1
  3567  005B98  C0D4  F0BE         	movff	snprintf@n,vsnprintf@n
  3568  005B9C  C0D5  F0BF         	movff	snprintf@n+1,vsnprintf@n+1
  3569  005BA0  C0D6  F0C0         	movff	snprintf@fmt,vsnprintf@fmt
  3570  005BA4  C0D7  F0C1         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3571  005BA8  0EC1               	movlw	low snprintf@ap
  3572  005BAA  0100               	movlb	0	; () banked
  3573  005BAC  6FC2               	movwf	vsnprintf@ap& (0+255),b
  3574  005BAE  0E01               	movlw	high snprintf@ap
  3575  005BB0  6FC3               	movwf	(vsnprintf@ap+1)& (0+255),b
  3576  005BB2  EC41  F025         	call	_vsnprintf	;wreg free
  3577  005BB6  0012               	return		;funcret
  3578  005BB8                     __end_of_snprintf:
  3579                           	opt callstack 0
  3580                           
  3581 ;; *************** function _vsnprintf *****************
  3582 ;; Defined at:
  3583 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  s               2   92[BANK0 ] PTR unsigned char 
  3586 ;;		 -> string_pot(100), string_temp(100), 
  3587 ;;  n               2   94[BANK0 ] unsigned int 
  3588 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  3589 ;;		 -> STR_3(16), STR_2(17), 
  3590 ;;  ap              2   98[BANK0 ] PTR PTR void 
  3591 ;;		 -> snprintf@ap(2), 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  f               6  108[BANK0 ] struct _IO_FILE
  3594 ;;  cnt             2  106[BANK0 ] int 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2   92[BANK0 ] int 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3604 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3607 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3608 ;;Total ram usage:       22 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:   11
  3611 ;; This function calls:
  3612 ;;		_vfprintf
  3613 ;; This function is called by:
  3614 ;;		_snprintf
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text2
  3619  004A82                     __ptext2:
  3620                           	opt callstack 0
  3621  004A82                     _vsnprintf:
  3622                           	opt callstack 18
  3623  004A82  0E80               	movlw	128
  3624  004A84  0100               	movlb	0	; () banked
  3625  004A86  5DBF               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3626  004A88  A0D8               	btfss	status,0,c
  3627  004A8A  EF49  F025         	goto	u12011
  3628  004A8E  EF4B  F025         	goto	u12010
  3629  004A92                     u12011:
  3630  004A92  EF53  F025         	goto	l9047
  3631  004A96                     u12010:
  3632  004A96                     
  3633                           ; BSR set to: 0
  3634  004A96  0E00               	movlw	0
  3635  004A98  6FF1               	movwf	(_errno+1)& (0+255),b
  3636  004A9A  0E4B               	movlw	75
  3637  004A9C  6FF0               	movwf	_errno& (0+255),b
  3638  004A9E                     
  3639                           ; BSR set to: 0
  3640  004A9E  69BC               	setf	?_vsnprintf& (0+255),b
  3641  004AA0  69BD               	setf	(?_vsnprintf+1)& (0+255),b
  3642  004AA2  EFC8  F025         	goto	l1648
  3643  004AA6                     l9047:
  3644                           
  3645                           ; BSR set to: 0
  3646  004AA6  C0BC  F0CC         	movff	vsnprintf@s,vsnprintf@f
  3647  004AAA  C0BD  F0CD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3648  004AAE  51BF               	movf	(vsnprintf@n+1)& (0+255),w,b
  3649  004AB0  E109               	bnz	u12020
  3650  004AB2  0E02               	movlw	2
  3651  004AB4  5DBE               	subwf	vsnprintf@n& (0+255),w,b
  3652  004AB6  A0D8               	btfss	status,0,c
  3653  004AB8  EF60  F025         	goto	u12021
  3654  004ABC  EF62  F025         	goto	u12020
  3655  004AC0                     u12021:
  3656  004AC0  EF6E  F025         	goto	l9053
  3657  004AC4                     u12020:
  3658  004AC4                     
  3659                           ; BSR set to: 0
  3660  004AC4  0EFF               	movlw	255
  3661  004AC6  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3662  004AC8  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3663  004ACA  0EFF               	movlw	255
  3664  004ACC  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3665  004ACE  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3666  004AD0                     
  3667                           ; BSR set to: 0
  3668  004AD0  0E00               	movlw	0
  3669  004AD2  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3670  004AD4  0E00               	movlw	0
  3671  004AD6  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3672  004AD8  EF76  F025         	goto	l9055
  3673  004ADC                     l9053:
  3674                           
  3675                           ; BSR set to: 0
  3676  004ADC  0E00               	movlw	0
  3677  004ADE  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3678  004AE0  0E01               	movlw	1
  3679  004AE2  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3680  004AE4  0E00               	movlw	0
  3681  004AE6  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3682  004AE8  0E01               	movlw	1
  3683  004AEA  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3684  004AEC                     l9055:
  3685                           
  3686                           ; BSR set to: 0
  3687  004AEC  0ECC               	movlw	low vsnprintf@f
  3688  004AEE  6E50               	movwf	vfprintf@fp^0,c
  3689  004AF0  0E00               	movlw	high vsnprintf@f
  3690  004AF2  6E51               	movwf	(vfprintf@fp+1)^0,c
  3691  004AF4  C0C0  F052         	movff	vsnprintf@fmt,vfprintf@fmt
  3692  004AF8  C0C1  F053         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3693  004AFC  C0C2  F054         	movff	vsnprintf@ap,vfprintf@ap
  3694  004B00  C0C3  F055         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3695  004B04  EC9D  F02A         	call	_vfprintf	;wreg free
  3696  004B08  C050  F0CA         	movff	?_vfprintf,vsnprintf@cnt
  3697  004B0C  C051  F0CB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3698  004B10  0100               	movlb	0	; () banked
  3699  004B12  51BE               	movf	vsnprintf@n& (0+255),w,b
  3700  004B14  11BF               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3701  004B16  B4D8               	btfsc	status,2,c
  3702  004B18  EF90  F025         	goto	u12031
  3703  004B1C  EF92  F025         	goto	u12030
  3704  004B20                     u12031:
  3705  004B20  EFC4  F025         	goto	l9067
  3706  004B24                     u12030:
  3707  004B24                     
  3708                           ; BSR set to: 0
  3709  004B24  BFCB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3710  004B26  EF97  F025         	goto	u12041
  3711  004B2A  EF99  F025         	goto	u12040
  3712  004B2E                     u12041:
  3713  004B2E  EFC4  F025         	goto	l9067
  3714  004B32                     u12040:
  3715  004B32                     
  3716                           ; BSR set to: 0
  3717  004B32  0EFF               	movlw	255
  3718  004B34  6FC4               	movwf	??_vsnprintf& (0+255),b
  3719  004B36  0EFF               	movlw	255
  3720  004B38  6FC5               	movwf	(??_vsnprintf+1)& (0+255),b
  3721  004B3A  C0BE  F0C6         	movff	vsnprintf@n,??_vsnprintf+2
  3722  004B3E  C0BF  F0C7         	movff	vsnprintf@n+1,??_vsnprintf+3
  3723  004B42  51C4               	movf	??_vsnprintf& (0+255),w,b
  3724  004B44  27C6               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3725  004B46  51C5               	movf	(??_vsnprintf+1)& (0+255),w,b
  3726  004B48  23C7               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3727  004B4A  51C6               	movf	(??_vsnprintf+2)& (0+255),w,b
  3728  004B4C  5DCA               	subwf	vsnprintf@cnt& (0+255),w,b
  3729  004B4E  51C7               	movf	(??_vsnprintf+3)& (0+255),w,b
  3730  004B50  59CB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3731  004B52  A0D8               	btfss	status,0,c
  3732  004B54  EFAE  F025         	goto	u12051
  3733  004B58  EFB0  F025         	goto	u12050
  3734  004B5C                     u12051:
  3735  004B5C  EFB8  F025         	goto	l1653
  3736  004B60                     u12050:
  3737  004B60                     
  3738                           ; BSR set to: 0
  3739  004B60  0EFF               	movlw	255
  3740  004B62  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3741  004B64  6FC8               	movwf	_vsnprintf$2141& (0+255),b
  3742  004B66  0EFF               	movlw	255
  3743  004B68  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3744  004B6A  6FC9               	movwf	(_vsnprintf$2141+1)& (0+255),b
  3745  004B6C  EFBC  F025         	goto	l9065
  3746  004B70                     l1653:
  3747                           
  3748                           ; BSR set to: 0
  3749  004B70  C0CA  F0C8         	movff	vsnprintf@cnt,_vsnprintf$2141
  3750  004B74  C0CB  F0C9         	movff	vsnprintf@cnt+1,_vsnprintf$2141+1
  3751  004B78                     l9065:
  3752                           
  3753                           ; BSR set to: 0
  3754  004B78  51C8               	movf	_vsnprintf$2141& (0+255),w,b
  3755  004B7A  25BC               	addwf	vsnprintf@s& (0+255),w,b
  3756  004B7C  6ED9               	movwf	fsr2l,c
  3757  004B7E  51C9               	movf	(_vsnprintf$2141+1)& (0+255),w,b
  3758  004B80  21BD               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3759  004B82  6EDA               	movwf	fsr2h,c
  3760  004B84  0E00               	movlw	0
  3761  004B86  6EDF               	movwf	indf2,c
  3762  004B88                     l9067:
  3763                           
  3764                           ; BSR set to: 0
  3765  004B88  C0CA  F0BC         	movff	vsnprintf@cnt,?_vsnprintf
  3766  004B8C  C0CB  F0BD         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3767  004B90                     l1648:
  3768                           
  3769                           ; BSR set to: 0
  3770  004B90  0012               	return		;funcret
  3771  004B92                     __end_of_vsnprintf:
  3772                           	opt callstack 0
  3773                           
  3774 ;; *************** function _vfprintf *****************
  3775 ;; Defined at:
  3776 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3779 ;;		 -> vsnprintf@f(6), 
  3780 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3781 ;;		 -> STR_3(16), STR_2(17), 
  3782 ;;  ap              2   83[COMRAM] PTR PTR void 
  3783 ;;		 -> snprintf@ap(2), 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3786 ;;		 -> STR_3(16), STR_2(17), 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2   79[COMRAM] int 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3796 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3799 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3800 ;;Total ram usage:        8 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:   10
  3803 ;; This function calls:
  3804 ;;		_vfpfcnvrt
  3805 ;; This function is called by:
  3806 ;;		_vsnprintf
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text3
  3811  00553A                     __ptext3:
  3812                           	opt callstack 0
  3813  00553A                     _vfprintf:
  3814                           	opt callstack 18
  3815  00553A                     
  3816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3817  00553A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3818  00553E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3819  005542                     
  3820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3821  005542  0E00               	movlw	0
  3822  005544  0100               	movlb	0	; () banked
  3823  005546  6FF3               	movwf	(_nout+1)& (0+255),b
  3824  005548  0E00               	movlw	0
  3825  00554A  6FF2               	movwf	_nout& (0+255),b
  3826                           
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3828  00554C  EFBB  F02A         	goto	l9037
  3829  005550                     l9035:
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3833  005550  C050  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  3834  005554  C051  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3835  005558  0E56               	movlw	low vfprintf@cfmt
  3836  00555A  6E48               	movwf	vfpfcnvrt@fmt^0,c
  3837  00555C  0E00               	movlw	high vfprintf@cfmt
  3838  00555E  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3839  005560  C054  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  3840  005564  C055  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3841  005568  EC21  F000         	call	_vfpfcnvrt	;wreg free
  3842  00556C  5046               	movf	?_vfpfcnvrt^0,w,c
  3843  00556E  0100               	movlb	0	; () banked
  3844  005570  27F2               	addwf	_nout& (0+255),f,b
  3845  005572  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  3846  005574  23F3               	addwfc	(_nout+1)& (0+255),f,b
  3847  005576                     l9037:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3851  005576  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3852  00557A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3853  00557E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3854  00557E  6AF8               	clrf	tblptru,c
  3855  005580                     	endif
  3856  005580                     	if	0	;tblptru may be non-zero
  3857  005580                     	endif
  3858  005580  0008               	tblrd		*
  3859  005582  50F5               	movf	tablat,w,c
  3860  005584  0900               	iorlw	0
  3861  005586  A4D8               	btfss	status,2,c
  3862  005588  EFC8  F02A         	goto	u12001
  3863  00558C  EFCA  F02A         	goto	u12000
  3864  005590                     u12001:
  3865  005590  EFA8  F02A         	goto	l9035
  3866  005594                     u12000:
  3867  005594                     
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3870  005594  C0F2  F050         	movff	_nout,?_vfprintf
  3871  005598  C0F3  F051         	movff	_nout+1,?_vfprintf+1
  3872  00559C                     
  3873                           ; BSR set to: 0
  3874  00559C  0012               	return		;funcret
  3875  00559E                     __end_of_vfprintf:
  3876                           	opt callstack 0
  3877                           
  3878 ;; *************** function _vfpfcnvrt *****************
  3879 ;; Defined at:
  3880 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3883 ;;		 -> vsnprintf@f(6), 
  3884 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  3885 ;;		 -> vfprintf@cfmt(2), 
  3886 ;;  ap              2   73[COMRAM] PTR PTR void 
  3887 ;;		 -> snprintf@ap(2), 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  llu             8   84[BANK0 ] unsigned long long 
  3890 ;;  ll              8   73[BANK0 ] long long 
  3891 ;;  f               4   66[BANK0 ] long long 
  3892 ;;  ct              3   70[BANK0 ] unsigned char [3]
  3893 ;;  vp              2   81[BANK0 ] PTR void 
  3894 ;;		 -> ?_snprintf(2), 
  3895 ;;  done            2   58[BANK0 ] int 
  3896 ;;  cp              2   56[BANK0 ] PTR unsigned char 
  3897 ;;		 -> ?_snprintf(2), 
  3898 ;;  i               2    0        int 
  3899 ;;  c               1   83[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  2   69[COMRAM] int 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3909 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3912 ;;      Totals:        10      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;Total ram usage:       46 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    9
  3916 ;; This function calls:
  3917 ;;		_atoi
  3918 ;;		_ctoa
  3919 ;;		_dtoa
  3920 ;;		_efgtoa
  3921 ;;		_fputc
  3922 ;;		_isdigit
  3923 ;;		_isupper
  3924 ;;		_otoa
  3925 ;;		_stoa
  3926 ;;		_strncmp
  3927 ;;		_tolower
  3928 ;;		_utoa
  3929 ;;		_xtoa
  3930 ;; This function is called by:
  3931 ;;		_vfprintf
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text4
  3936  000042                     __ptext4:
  3937                           	opt callstack 0
  3938  000042                     _vfpfcnvrt:
  3939                           	opt callstack 18
  3940  000042                     
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3942  000042  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3943  000046  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3944  00004A  CFDE FFF6          	movff	postinc2,tblptrl
  3945  00004E  CFDD FFF7          	movff	postdec2,tblptrh
  3946  000052                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3947  000052  6AF8               	clrf	tblptru,c
  3948  000054                     	endif
  3949  000054                     	if	0	;tblptru may be non-zero
  3950  000054                     	endif
  3951  000054  0008               	tblrd		*
  3952  000056  50F5               	movf	tablat,w,c
  3953  000058  0A25               	xorlw	37
  3954  00005A  A4D8               	btfss	status,2,c
  3955  00005C  EF32  F000         	goto	u11481
  3956  000060  EF34  F000         	goto	u11480
  3957  000064                     u11481:
  3958  000064  EF76  F00A         	goto	l9017
  3959  000068                     u11480:
  3960  000068                     
  3961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3962  000068  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3963  00006C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3964  000070  2ADE               	incf	postinc2,f,c
  3965  000072  0E00               	movlw	0
  3966  000074  22DD               	addwfc	postdec2,f,c
  3967  000076                     
  3968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3969  000076  0E00               	movlw	0
  3970  000078  0100               	movlb	0	; () banked
  3971  00007A  6FF5               	movwf	(_width+1)& (0+255),b
  3972  00007C  0E00               	movlw	0
  3973  00007E  6FF4               	movwf	_width& (0+255),b
  3974  000080  C0F4  F0F6         	movff	_width,_flags
  3975  000084  C0F5  F0F7         	movff	_width+1,_flags+1
  3976  000088                     
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3979  000088  6858               	setf	_prec^0,c
  3980  00008A  6859               	setf	(_prec+1)^0,c
  3981  00008C                     
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3984  00008C  0E00               	movlw	0
  3985  00008E  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3986  000090  0E00               	movlw	0
  3987  000092  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  3988                           
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3990  000094  EF93  F000         	goto	l8697
  3991  000098                     l8671:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3995  000098  81F6               	bsf	_flags& (0+255),0,b
  3996  00009A                     l8673:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4000  00009A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4001  00009E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4002  0000A2  2ADE               	incf	postinc2,f,c
  4003  0000A4  0E00               	movlw	0
  4004  0000A6  22DD               	addwfc	postdec2,f,c
  4005                           
  4006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4007  0000A8  EF93  F000         	goto	l8697
  4008  0000AC                     l8675:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4012  0000AC  83F6               	bsf	_flags& (0+255),1,b
  4013  0000AE  EF4D  F000         	goto	l8673
  4014  0000B2                     l8679:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4018  0000B2  85F6               	bsf	_flags& (0+255),2,b
  4019  0000B4  EF4D  F000         	goto	l8673
  4020  0000B8                     l8683:
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4024  0000B8  87F6               	bsf	_flags& (0+255),3,b
  4025  0000BA  EF4D  F000         	goto	l8673
  4026  0000BE                     l8687:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4030  0000BE  89F6               	bsf	_flags& (0+255),4,b
  4031  0000C0  EF4D  F000         	goto	l8673
  4032  0000C4                     l8691:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4036  0000C4  0E00               	movlw	0
  4037  0000C6  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4038  0000C8  0E01               	movlw	1
  4039  0000CA  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  4040                           
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4042  0000CC  EF93  F000         	goto	l8697
  4043  0000D0                     l8695:
  4044                           
  4045                           ; BSR set to: 0
  4046  0000D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  0000D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  0000D8  CFDE FFF6          	movff	postinc2,tblptrl
  4049  0000DC  CFDD FFF7          	movff	postdec2,tblptrh
  4050  0000E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4051  0000E0  6AF8               	clrf	tblptru,c
  4052  0000E2                     	endif
  4053  0000E2                     	if	0	;tblptru may be non-zero
  4054  0000E2                     	endif
  4055  0000E2  0008               	tblrd		*
  4056  0000E4  50F5               	movf	tablat,w,c
  4057  0000E6  6E4C               	movwf	??_vfpfcnvrt^0,c
  4058  0000E8  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  4059                           
  4060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4061                           ; Switch size 1, requested type "simple"
  4062                           ; Number of cases is 1, Range of values is 0 to 0
  4063                           ; switch strategies available:
  4064                           ; Name         Instructions Cycles
  4065                           ; simple_byte            4     3 (average)
  4066                           ;	Chosen strategy is simple_byte
  4067  0000EA  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4068  0000EC  0A00               	xorlw	0	; case 0
  4069  0000EE  B4D8               	btfsc	status,2,c
  4070  0000F0  EF7C  F000         	goto	l9163
  4071  0000F4  EF62  F000         	goto	l8691
  4072  0000F8                     l9163:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ; Switch size 1, requested type "simple"
  4076                           ; Number of cases is 5, Range of values is 32 to 48
  4077                           ; switch strategies available:
  4078                           ; Name         Instructions Cycles
  4079                           ; simple_byte           16     9 (average)
  4080                           ;	Chosen strategy is simple_byte
  4081  0000F8  504C               	movf	??_vfpfcnvrt^0,w,c
  4082  0000FA  0A20               	xorlw	32	; case 32
  4083  0000FC  B4D8               	btfsc	status,2,c
  4084  0000FE  EF5C  F000         	goto	l8683
  4085  000102  0A03               	xorlw	3	; case 35
  4086  000104  B4D8               	btfsc	status,2,c
  4087  000106  EF5F  F000         	goto	l8687
  4088  00010A  0A08               	xorlw	8	; case 43
  4089  00010C  B4D8               	btfsc	status,2,c
  4090  00010E  EF59  F000         	goto	l8679
  4091  000112  0A06               	xorlw	6	; case 45
  4092  000114  B4D8               	btfsc	status,2,c
  4093  000116  EF4C  F000         	goto	l8671
  4094  00011A  0A1D               	xorlw	29	; case 48
  4095  00011C  B4D8               	btfsc	status,2,c
  4096  00011E  EF56  F000         	goto	l8675
  4097  000122  EF62  F000         	goto	l8691
  4098  000126                     l8697:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4102  000126  519A               	movf	vfpfcnvrt@done& (0+255),w,b
  4103  000128  119B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4104  00012A  B4D8               	btfsc	status,2,c
  4105  00012C  EF9A  F000         	goto	u11491
  4106  000130  EF9C  F000         	goto	u11490
  4107  000134                     u11491:
  4108  000134  EF68  F000         	goto	l8695
  4109  000138                     u11490:
  4110  000138                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4113  000138  A1F6               	btfss	_flags& (0+255),0,b
  4114  00013A  EFA1  F000         	goto	u11501
  4115  00013E  EFA3  F000         	goto	u11500
  4116  000142                     u11501:
  4117  000142  EFA4  F000         	goto	l8701
  4118  000146                     u11500:
  4119  000146                     
  4120                           ; BSR set to: 0
  4121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4122  000146  93F6               	bcf	_flags& (0+255),1,b
  4123  000148                     l8701:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4127  000148  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4128  00014C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4129  000150  CFDE FFF6          	movff	postinc2,tblptrl
  4130  000154  CFDD FFF7          	movff	postdec2,tblptrh
  4131  000158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4132  000158  6AF8               	clrf	tblptru,c
  4133  00015A                     	endif
  4134  00015A                     	if	0	;tblptru may be non-zero
  4135  00015A                     	endif
  4136  00015A  0008               	tblrd		*
  4137  00015C  50F5               	movf	tablat,w,c
  4138  00015E  0A2A               	xorlw	42
  4139  000160  A4D8               	btfss	status,2,c
  4140  000162  EFB5  F000         	goto	u11511
  4141  000166  EFB7  F000         	goto	u11510
  4142  00016A                     u11511:
  4143  00016A  EFE0  F000         	goto	l8709
  4144  00016E                     u11510:
  4145  00016E                     
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4148  00016E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4149  000172  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4150  000176  2ADE               	incf	postinc2,f,c
  4151  000178  0E00               	movlw	0
  4152  00017A  22DD               	addwfc	postdec2,f,c
  4153                           
  4154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4155  00017C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4156  000180  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4157  000184  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4158  000188  0E02               	movlw	2
  4159  00018A  26DE               	addwf	postinc2,f,c
  4160  00018C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4161  000190  0E00               	movlw	0
  4162  000192  22DD               	addwfc	postdec2,f,c
  4163  000194  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4164  000198  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4165  00019C  CFDE F0F4          	movff	postinc2,_width
  4166  0001A0  CFDD F0F5          	movff	postdec2,_width+1
  4167  0001A4                     
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4170  0001A4  BFF5               	btfsc	(_width+1)& (0+255),7,b
  4171  0001A6  EFD9  F000         	goto	u11520
  4172  0001AA  EFD7  F000         	goto	u11521
  4173  0001AE                     u11521:
  4174  0001AE  EF25  F001         	goto	l8719
  4175  0001B2                     u11520:
  4176  0001B2                     
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4179  0001B2  81F6               	bsf	_flags& (0+255),0,b
  4180                           
  4181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4182  0001B4  6DF4               	negf	_width& (0+255),b
  4183  0001B6  1FF5               	comf	(_width+1)& (0+255),f,b
  4184  0001B8  B0D8               	btfsc	status,0,c
  4185  0001BA  2BF5               	incf	(_width+1)& (0+255),f,b
  4186  0001BC  EF25  F001         	goto	l8719
  4187  0001C0                     l8709:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4191  0001C0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4192  0001C4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4193  0001C8  CFDE F00B          	movff	postinc2,atoi@s
  4194  0001CC  CFDD F00C          	movff	postdec2,atoi@s+1
  4195  0001D0  EC52  F020         	call	_atoi	;wreg free
  4196  0001D4  C00B  F0F4         	movff	?_atoi,_width
  4197  0001D8  C00C  F0F5         	movff	?_atoi+1,_width+1
  4198                           
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4200  0001DC  EFF7  F000         	goto	l8713
  4201  0001E0                     l8711:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4205  0001E0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4206  0001E4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4207  0001E8  2ADE               	incf	postinc2,f,c
  4208  0001EA  0E00               	movlw	0
  4209  0001EC  22DD               	addwfc	postdec2,f,c
  4210  0001EE                     l8713:
  4211  0001EE  0ED0               	movlw	208
  4212  0001F0  6E4C               	movwf	??_vfpfcnvrt^0,c
  4213  0001F2  0EFF               	movlw	255
  4214  0001F4  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4215  0001F6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4216  0001FA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4217  0001FE  CFDE FFF6          	movff	postinc2,tblptrl
  4218  000202  CFDD FFF7          	movff	postdec2,tblptrh
  4219  000206                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4220  000206  6AF8               	clrf	tblptru,c
  4221  000208                     	endif
  4222  000208                     	if	0	;tblptru may be non-zero
  4223  000208                     	endif
  4224  000208  0008               	tblrd		*
  4225  00020A  50F5               	movf	tablat,w,c
  4226  00020C  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4227  00020E  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4228  000210  504C               	movf	??_vfpfcnvrt^0,w,c
  4229  000212  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4230  000214  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4231  000216  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4232  000218  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4233  00021A  E10A               	bnz	u11530
  4234  00021C  0E0A               	movlw	10
  4235  00021E  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4236  000220  A0D8               	btfss	status,0,c
  4237  000222  EF15  F001         	goto	u11531
  4238  000226  EF18  F001         	goto	u11530
  4239  00022A                     u11531:
  4240  00022A  0E01               	movlw	1
  4241  00022C  EF19  F001         	goto	u11540
  4242  000230                     u11530:
  4243  000230  0E00               	movlw	0
  4244  000232                     u11540:
  4245  000232  0100               	movlb	0	; () banked
  4246  000234  6F9C               	movwf	_vfpfcnvrt$1388& (0+255),b
  4247  000236  6B9D               	clrf	(_vfpfcnvrt$1388+1)& (0+255),b
  4248  000238                     
  4249                           ; BSR set to: 0
  4250  000238  519C               	movf	_vfpfcnvrt$1388& (0+255),w,b
  4251  00023A  119D               	iorwf	(_vfpfcnvrt$1388+1)& (0+255),w,b
  4252  00023C  A4D8               	btfss	status,2,c
  4253  00023E  EF23  F001         	goto	u11551
  4254  000242  EF25  F001         	goto	u11550
  4255  000246                     u11551:
  4256  000246  EFF0  F000         	goto	l8711
  4257  00024A                     u11550:
  4258  00024A                     l8719:
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4262  00024A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4263  00024E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4264  000252  CFDE FFF6          	movff	postinc2,tblptrl
  4265  000256  CFDD FFF7          	movff	postdec2,tblptrh
  4266  00025A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4267  00025A  6AF8               	clrf	tblptru,c
  4268  00025C                     	endif
  4269  00025C                     	if	0	;tblptru may be non-zero
  4270  00025C                     	endif
  4271  00025C  0008               	tblrd		*
  4272  00025E  50F5               	movf	tablat,w,c
  4273  000260  0A2E               	xorlw	46
  4274  000262  A4D8               	btfss	status,2,c
  4275  000264  EF36  F001         	goto	u11561
  4276  000268  EF38  F001         	goto	u11560
  4277  00026C                     u11561:
  4278  00026C  EFB8  F001         	goto	l8739
  4279  000270                     u11560:
  4280  000270                     
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4283  000270  0E00               	movlw	0
  4284  000272  6E59               	movwf	(_prec+1)^0,c
  4285  000274  0E00               	movlw	0
  4286  000276  6E58               	movwf	_prec^0,c
  4287  000278                     
  4288                           ; BSR set to: 0
  4289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4290  000278  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4291  00027C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4292  000280  2ADE               	incf	postinc2,f,c
  4293  000282  0E00               	movlw	0
  4294  000284  22DD               	addwfc	postdec2,f,c
  4295  000286                     
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4298  000286  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4299  00028A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4300  00028E  CFDE FFF6          	movff	postinc2,tblptrl
  4301  000292  CFDD FFF7          	movff	postdec2,tblptrh
  4302  000296                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4303  000296  6AF8               	clrf	tblptru,c
  4304  000298                     	endif
  4305  000298                     	if	0	;tblptru may be non-zero
  4306  000298                     	endif
  4307  000298  0008               	tblrd		*
  4308  00029A  50F5               	movf	tablat,w,c
  4309  00029C  0A2A               	xorlw	42
  4310  00029E  A4D8               	btfss	status,2,c
  4311  0002A0  EF54  F001         	goto	u11571
  4312  0002A4  EF56  F001         	goto	u11570
  4313  0002A8                     u11571:
  4314  0002A8  EF73  F001         	goto	l8729
  4315  0002AC                     u11570:
  4316  0002AC                     
  4317                           ; BSR set to: 0
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4319  0002AC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4320  0002B0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4321  0002B4  2ADE               	incf	postinc2,f,c
  4322  0002B6  0E00               	movlw	0
  4323  0002B8  22DD               	addwfc	postdec2,f,c
  4324                           
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4326  0002BA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4327  0002BE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4328  0002C2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4329  0002C6  0E02               	movlw	2
  4330  0002C8  26DE               	addwf	postinc2,f,c
  4331  0002CA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4332  0002CE  0E00               	movlw	0
  4333  0002D0  22DD               	addwfc	postdec2,f,c
  4334  0002D2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4335  0002D6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4336  0002DA  CFDE F058          	movff	postinc2,_prec
  4337  0002DE  CFDD F059          	movff	postdec2,_prec+1
  4338                           
  4339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4340  0002E2  EFB8  F001         	goto	l8739
  4341  0002E6                     l8729:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4345  0002E6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4346  0002EA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4347  0002EE  CFDE F00B          	movff	postinc2,atoi@s
  4348  0002F2  CFDD F00C          	movff	postdec2,atoi@s+1
  4349  0002F6  EC52  F020         	call	_atoi	;wreg free
  4350  0002FA  C00B  F058         	movff	?_atoi,_prec
  4351  0002FE  C00C  F059         	movff	?_atoi+1,_prec+1
  4352                           
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4354  000302  EF8A  F001         	goto	l8733
  4355  000306                     l8731:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4359  000306  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4360  00030A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4361  00030E  2ADE               	incf	postinc2,f,c
  4362  000310  0E00               	movlw	0
  4363  000312  22DD               	addwfc	postdec2,f,c
  4364  000314                     l8733:
  4365  000314  0ED0               	movlw	208
  4366  000316  6E4C               	movwf	??_vfpfcnvrt^0,c
  4367  000318  0EFF               	movlw	255
  4368  00031A  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  4369  00031C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4370  000320  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4371  000324  CFDE FFF6          	movff	postinc2,tblptrl
  4372  000328  CFDD FFF7          	movff	postdec2,tblptrh
  4373  00032C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4374  00032C  6AF8               	clrf	tblptru,c
  4375  00032E                     	endif
  4376  00032E                     	if	0	;tblptru may be non-zero
  4377  00032E                     	endif
  4378  00032E  0008               	tblrd		*
  4379  000330  50F5               	movf	tablat,w,c
  4380  000332  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4381  000334  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  4382  000336  504C               	movf	??_vfpfcnvrt^0,w,c
  4383  000338  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4384  00033A  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4385  00033C  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4386  00033E  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  4387  000340  E10A               	bnz	u11580
  4388  000342  0E0A               	movlw	10
  4389  000344  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4390  000346  A0D8               	btfss	status,0,c
  4391  000348  EFA8  F001         	goto	u11581
  4392  00034C  EFAB  F001         	goto	u11580
  4393  000350                     u11581:
  4394  000350  0E01               	movlw	1
  4395  000352  EFAC  F001         	goto	u11590
  4396  000356                     u11580:
  4397  000356  0E00               	movlw	0
  4398  000358                     u11590:
  4399  000358  0100               	movlb	0	; () banked
  4400  00035A  6F9E               	movwf	_vfpfcnvrt$1389& (0+255),b
  4401  00035C  6B9F               	clrf	(_vfpfcnvrt$1389+1)& (0+255),b
  4402  00035E                     
  4403                           ; BSR set to: 0
  4404  00035E  519E               	movf	_vfpfcnvrt$1389& (0+255),w,b
  4405  000360  119F               	iorwf	(_vfpfcnvrt$1389+1)& (0+255),w,b
  4406  000362  A4D8               	btfss	status,2,c
  4407  000364  EFB6  F001         	goto	u11601
  4408  000368  EFB8  F001         	goto	u11600
  4409  00036C                     u11601:
  4410  00036C  EF83  F001         	goto	l8731
  4411  000370                     u11600:
  4412  000370                     l8739:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4416  000370  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4417  000374  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4418  000378  CFDE FFF6          	movff	postinc2,tblptrl
  4419  00037C  CFDD FFF7          	movff	postdec2,tblptrh
  4420  000380                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4421  000380  6AF8               	clrf	tblptru,c
  4422  000382                     	endif
  4423  000382                     	if	0	;tblptru may be non-zero
  4424  000382                     	endif
  4425  000382  0008               	tblrd		*
  4426  000384  50F5               	movf	tablat,w,c
  4427  000386  6E0A               	movwf	tolower@c^0,c
  4428  000388  6A0B               	clrf	(tolower@c+1)^0,c
  4429  00038A  ECCF  F02A         	call	_tolower	;wreg free
  4430  00038E  500A               	movf	?_tolower^0,w,c
  4431  000390  0100               	movlb	0	; () banked
  4432  000392  6FA6               	movwf	vfpfcnvrt@ct& (0+255),b
  4433  000394                     
  4434                           ; BSR set to: 0
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4436  000394  51A6               	movf	vfpfcnvrt@ct& (0+255),w,b
  4437  000396  B4D8               	btfsc	status,2,c
  4438  000398  EFD0  F001         	goto	u11611
  4439  00039C  EFD2  F001         	goto	u11610
  4440  0003A0                     u11611:
  4441  0003A0  EF0E  F002         	goto	l8749
  4442  0003A4                     u11610:
  4443  0003A4                     
  4444                           ; BSR set to: 0
  4445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4446  0003A4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4447  0003A8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4448  0003AC  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4449  0003B0  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4450  0003B4  0E01               	movlw	1
  4451  0003B6  264C               	addwf	??_vfpfcnvrt^0,f,c
  4452  0003B8  0E00               	movlw	0
  4453  0003BA  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4454  0003BC  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4455  0003C0  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4456  0003C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4457  0003C4  6AF8               	clrf	tblptru,c
  4458  0003C6                     	endif
  4459  0003C6                     	if	0	;tblptru may be non-zero
  4460  0003C6                     	endif
  4461  0003C6  0008               	tblrd		*
  4462  0003C8  50F5               	movf	tablat,w,c
  4463  0003CA  6E0A               	movwf	tolower@c^0,c
  4464  0003CC  6A0B               	clrf	(tolower@c+1)^0,c
  4465  0003CE  ECCF  F02A         	call	_tolower	;wreg free
  4466  0003D2  500A               	movf	?_tolower^0,w,c
  4467  0003D4  0100               	movlb	0	; () banked
  4468  0003D6  6FA7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4469  0003D8                     
  4470                           ; BSR set to: 0
  4471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4472  0003D8  51A7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4473  0003DA  B4D8               	btfsc	status,2,c
  4474  0003DC  EFF2  F001         	goto	u11621
  4475  0003E0  EFF4  F001         	goto	u11620
  4476  0003E4                     u11621:
  4477  0003E4  EF0E  F002         	goto	l8749
  4478  0003E8                     u11620:
  4479  0003E8                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4482  0003E8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4483  0003EC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4484  0003F0  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4485  0003F4  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4486  0003F8  0E02               	movlw	2
  4487  0003FA  264C               	addwf	??_vfpfcnvrt^0,f,c
  4488  0003FC  0E00               	movlw	0
  4489  0003FE  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4490  000400  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4491  000404  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4492  000408                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4493  000408  6AF8               	clrf	tblptru,c
  4494  00040A                     	endif
  4495  00040A                     	if	0	;tblptru may be non-zero
  4496  00040A                     	endif
  4497  00040A  0008               	tblrd		*
  4498  00040C  50F5               	movf	tablat,w,c
  4499  00040E  6E0A               	movwf	tolower@c^0,c
  4500  000410  6A0B               	clrf	(tolower@c+1)^0,c
  4501  000412  ECCF  F02A         	call	_tolower	;wreg free
  4502  000416  500A               	movf	?_tolower^0,w,c
  4503  000418  0100               	movlb	0	; () banked
  4504  00041A  6FA8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4505  00041C                     l8749:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4509  00041C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4510  000420  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4511  000424  CFDE FFF6          	movff	postinc2,tblptrl
  4512  000428  CFDD FFF7          	movff	postdec2,tblptrh
  4513  00042C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4514  00042C  6AF8               	clrf	tblptru,c
  4515  00042E                     	endif
  4516  00042E                     	if	0	;tblptru may be non-zero
  4517  00042E                     	endif
  4518  00042E  0008               	tblrd		*
  4519  000430  50F5               	movf	tablat,w,c
  4520  000432  0A63               	xorlw	99
  4521  000434  A4D8               	btfss	status,2,c
  4522  000436  EF1F  F002         	goto	u11631
  4523  00043A  EF21  F002         	goto	u11630
  4524  00043E                     u11631:
  4525  00043E  EF48  F002         	goto	l8757
  4526  000442                     u11630:
  4527  000442                     
  4528                           ; BSR set to: 0
  4529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4530  000442  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4531  000446  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4532  00044A  2ADE               	incf	postinc2,f,c
  4533  00044C  0E00               	movlw	0
  4534  00044E  22DD               	addwfc	postdec2,f,c
  4535                           
  4536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4537  000450  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4538  000454  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4539  000458  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4540  00045C  0E02               	movlw	2
  4541  00045E  26DE               	addwf	postinc2,f,c
  4542  000460  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4543  000464  0E00               	movlw	0
  4544  000466  22DD               	addwfc	postdec2,f,c
  4545  000468  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4546  00046C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4547  000470  50DF               	movf	indf2,w,c
  4548  000472  6FB3               	movwf	vfpfcnvrt@c& (0+255),b
  4549  000474                     
  4550                           ; BSR set to: 0
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4552  000474  C046  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  4553  000478  C047  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4554  00047C  C0B3  F021         	movff	vfpfcnvrt@c,ctoa@c
  4555  000480  EC8C  F02B         	call	_ctoa	;wreg free
  4556  000484  C01F  F046         	movff	?_ctoa,?_vfpfcnvrt
  4557  000488  C020  F047         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4558  00048C  EF92  F00A         	goto	l742
  4559  000490                     l8757:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4563  000490  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4564  000494  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4565  000498  CFDE F004          	movff	postinc2,strncmp@_l
  4566  00049C  CFDD F005          	movff	postdec2,strncmp@_l+1
  4567  0004A0  0EC6               	movlw	low STR_12
  4568  0004A2  6E06               	movwf	strncmp@_r^0,c
  4569  0004A4  0EFF               	movlw	high STR_12
  4570  0004A6  6E07               	movwf	(strncmp@_r+1)^0,c
  4571  0004A8  0E00               	movlw	0
  4572  0004AA  6E09               	movwf	(strncmp@n+1)^0,c
  4573  0004AC  0E03               	movlw	3
  4574  0004AE  6E08               	movwf	strncmp@n^0,c
  4575  0004B0  ECAE  F024         	call	_strncmp	;wreg free
  4576  0004B4  5004               	movf	?_strncmp^0,w,c
  4577  0004B6  1005               	iorwf	(?_strncmp+1)^0,w,c
  4578  0004B8  B4D8               	btfsc	status,2,c
  4579  0004BA  EF61  F002         	goto	u11641
  4580  0004BE  EF63  F002         	goto	u11640
  4581  0004C2                     u11641:
  4582  0004C2  EF7E  F002         	goto	l8761
  4583  0004C6                     u11640:
  4584  0004C6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4585  0004CA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4586  0004CE  CFDE F004          	movff	postinc2,strncmp@_l
  4587  0004D2  CFDD F005          	movff	postdec2,strncmp@_l+1
  4588  0004D6  0ECE               	movlw	low STR_16
  4589  0004D8  6E06               	movwf	strncmp@_r^0,c
  4590  0004DA  0EFF               	movlw	high STR_16
  4591  0004DC  6E07               	movwf	(strncmp@_r+1)^0,c
  4592  0004DE  0E00               	movlw	0
  4593  0004E0  6E09               	movwf	(strncmp@n+1)^0,c
  4594  0004E2  0E03               	movlw	3
  4595  0004E4  6E08               	movwf	strncmp@n^0,c
  4596  0004E6  ECAE  F024         	call	_strncmp	;wreg free
  4597  0004EA  5004               	movf	?_strncmp^0,w,c
  4598  0004EC  1005               	iorwf	(?_strncmp+1)^0,w,c
  4599  0004EE  A4D8               	btfss	status,2,c
  4600  0004F0  EF7C  F002         	goto	u11651
  4601  0004F4  EF7E  F002         	goto	u11650
  4602  0004F8                     u11651:
  4603  0004F8  EFBF  F002         	goto	l8767
  4604  0004FC                     u11650:
  4605  0004FC                     l8761:
  4606                           
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4608  0004FC  0E03               	movlw	3
  4609  0004FE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4610  000502  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4611  000506  26DE               	addwf	postinc2,f,c
  4612  000508  0E00               	movlw	0
  4613  00050A  22DD               	addwfc	postdec2,f,c
  4614                           
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4616  00050C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4617  000510  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4618  000514  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4619  000518  0E02               	movlw	2
  4620  00051A  26DE               	addwf	postinc2,f,c
  4621  00051C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4622  000520  0E00               	movlw	0
  4623  000522  22DD               	addwfc	postdec2,f,c
  4624  000524  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4625  000528  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4626  00052C  50DF               	movf	indf2,w,c
  4627  00052E  0100               	movlb	0	; () banked
  4628  000530  6FA9               	movwf	vfpfcnvrt@ll& (0+255),b
  4629  000532  0E00               	movlw	0
  4630  000534  BFA9               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4631  000536  0EFF               	movlw	-1
  4632  000538  6FAA               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4633  00053A  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4634  00053C  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4635  00053E  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4636  000540  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4637  000542  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4638  000544  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4639  000546                     l8763:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4643  000546  C046  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4644  00054A  C047  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4645  00054E  C0A9  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4646  000552  C0AA  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4647  000556  C0AB  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4648  00055A  C0AC  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4649  00055E  C0AD  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4650  000562  C0AE  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4651  000566  C0AF  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4652  00056A  C0B0  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4653  00056E  EC70  F018         	call	_dtoa	;wreg free
  4654  000572  C01F  F046         	movff	?_dtoa,?_vfpfcnvrt
  4655  000576  C020  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4656  00057A  EF92  F00A         	goto	l742
  4657  00057E                     l8767:
  4658                           
  4659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4660  00057E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4661  000582  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4662  000586  CFDE F004          	movff	postinc2,strncmp@_l
  4663  00058A  CFDD F005          	movff	postdec2,strncmp@_l+1
  4664  00058E  0EC7               	movlw	low (STR_12+1)
  4665  000590  6E06               	movwf	strncmp@_r^0,c
  4666  000592  0EFF               	movlw	high (STR_12+1)
  4667  000594  6E07               	movwf	(strncmp@_r+1)^0,c
  4668  000596  0E00               	movlw	0
  4669  000598  6E09               	movwf	(strncmp@n+1)^0,c
  4670  00059A  0E02               	movlw	2
  4671  00059C  6E08               	movwf	strncmp@n^0,c
  4672  00059E  ECAE  F024         	call	_strncmp	;wreg free
  4673  0005A2  5004               	movf	?_strncmp^0,w,c
  4674  0005A4  1005               	iorwf	(?_strncmp+1)^0,w,c
  4675  0005A6  B4D8               	btfsc	status,2,c
  4676  0005A8  EFD8  F002         	goto	u11661
  4677  0005AC  EFDA  F002         	goto	u11660
  4678  0005B0                     u11661:
  4679  0005B0  EFF5  F002         	goto	l8771
  4680  0005B4                     u11660:
  4681  0005B4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4682  0005B8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4683  0005BC  CFDE F004          	movff	postinc2,strncmp@_l
  4684  0005C0  CFDD F005          	movff	postdec2,strncmp@_l+1
  4685  0005C4  0ECF               	movlw	low (STR_16+1)
  4686  0005C6  6E06               	movwf	strncmp@_r^0,c
  4687  0005C8  0EFF               	movlw	high (STR_16+1)
  4688  0005CA  6E07               	movwf	(strncmp@_r+1)^0,c
  4689  0005CC  0E00               	movlw	0
  4690  0005CE  6E09               	movwf	(strncmp@n+1)^0,c
  4691  0005D0  0E02               	movlw	2
  4692  0005D2  6E08               	movwf	strncmp@n^0,c
  4693  0005D4  ECAE  F024         	call	_strncmp	;wreg free
  4694  0005D8  5004               	movf	?_strncmp^0,w,c
  4695  0005DA  1005               	iorwf	(?_strncmp+1)^0,w,c
  4696  0005DC  A4D8               	btfss	status,2,c
  4697  0005DE  EFF3  F002         	goto	u11671
  4698  0005E2  EFF5  F002         	goto	u11670
  4699  0005E6                     u11671:
  4700  0005E6  EF1D  F003         	goto	l8777
  4701  0005EA                     u11670:
  4702  0005EA                     l8771:
  4703                           
  4704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4705  0005EA  0E02               	movlw	2
  4706  0005EC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4707  0005F0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4708  0005F4  26DE               	addwf	postinc2,f,c
  4709  0005F6  0E00               	movlw	0
  4710  0005F8  22DD               	addwfc	postdec2,f,c
  4711                           
  4712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4713  0005FA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4714  0005FE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4715  000602  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4716  000606  0E02               	movlw	2
  4717  000608  26DE               	addwf	postinc2,f,c
  4718  00060A  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4719  00060E  0E00               	movlw	0
  4720  000610  22DD               	addwfc	postdec2,f,c
  4721  000612  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4722  000616  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4723  00061A  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4724  00061E  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4725  000622  0100               	movlb	0	; () banked
  4726  000624  0E00               	movlw	0
  4727  000626  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4728  000628  0EFF               	movlw	-1
  4729  00062A  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4730  00062C  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4731  00062E  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4732  000630  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4733  000632  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4734  000634  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4735  000636  EFA3  F002         	goto	l8763
  4736  00063A                     l8777:
  4737                           
  4738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4739  00063A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4740  00063E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4741  000642  CFDE FFF6          	movff	postinc2,tblptrl
  4742  000646  CFDD FFF7          	movff	postdec2,tblptrh
  4743  00064A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4744  00064A  6AF8               	clrf	tblptru,c
  4745  00064C                     	endif
  4746  00064C                     	if	0	;tblptru may be non-zero
  4747  00064C                     	endif
  4748  00064C  0008               	tblrd		*
  4749  00064E  50F5               	movf	tablat,w,c
  4750  000650  0A64               	xorlw	100
  4751  000652  B4D8               	btfsc	status,2,c
  4752  000654  EF2E  F003         	goto	u11681
  4753  000658  EF30  F003         	goto	u11680
  4754  00065C                     u11681:
  4755  00065C  EF43  F003         	goto	l8781
  4756  000660                     u11680:
  4757  000660  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4758  000664  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4759  000668  CFDE FFF6          	movff	postinc2,tblptrl
  4760  00066C  CFDD FFF7          	movff	postdec2,tblptrh
  4761  000670                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4762  000670  6AF8               	clrf	tblptru,c
  4763  000672                     	endif
  4764  000672                     	if	0	;tblptru may be non-zero
  4765  000672                     	endif
  4766  000672  0008               	tblrd		*
  4767  000674  50F5               	movf	tablat,w,c
  4768  000676  0A69               	xorlw	105
  4769  000678  A4D8               	btfss	status,2,c
  4770  00067A  EF41  F003         	goto	u11691
  4771  00067E  EF43  F003         	goto	u11690
  4772  000682                     u11691:
  4773  000682  EF6A  F003         	goto	l8787
  4774  000686                     u11690:
  4775  000686                     l8781:
  4776                           
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4778  000686  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4779  00068A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4780  00068E  2ADE               	incf	postinc2,f,c
  4781  000690  0E00               	movlw	0
  4782  000692  22DD               	addwfc	postdec2,f,c
  4783                           
  4784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4785  000694  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4786  000698  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4787  00069C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4788  0006A0  0E02               	movlw	2
  4789  0006A2  26DE               	addwf	postinc2,f,c
  4790  0006A4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4791  0006A8  0E00               	movlw	0
  4792  0006AA  22DD               	addwfc	postdec2,f,c
  4793  0006AC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4794  0006B0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4795  0006B4  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4796  0006B8  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4797  0006BC  0100               	movlb	0	; () banked
  4798  0006BE  0E00               	movlw	0
  4799  0006C0  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4800  0006C2  0EFF               	movlw	-1
  4801  0006C4  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4802  0006C6  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4803  0006C8  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4804  0006CA  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4805  0006CC  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4806  0006CE  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4807  0006D0  EFA3  F002         	goto	l8763
  4808  0006D4                     l8787:
  4809                           
  4810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4811  0006D4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4812  0006D8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4813  0006DC  CFDE F004          	movff	postinc2,strncmp@_l
  4814  0006E0  CFDD F005          	movff	postdec2,strncmp@_l+1
  4815  0006E4  0EE9               	movlw	low STR_30
  4816  0006E6  6E06               	movwf	strncmp@_r^0,c
  4817  0006E8  0EFF               	movlw	high STR_30
  4818  0006EA  6E07               	movwf	(strncmp@_r+1)^0,c
  4819  0006EC  0E00               	movlw	0
  4820  0006EE  6E09               	movwf	(strncmp@n+1)^0,c
  4821  0006F0  0E02               	movlw	2
  4822  0006F2  6E08               	movwf	strncmp@n^0,c
  4823  0006F4  ECAE  F024         	call	_strncmp	;wreg free
  4824  0006F8  5004               	movf	?_strncmp^0,w,c
  4825  0006FA  1005               	iorwf	(?_strncmp+1)^0,w,c
  4826  0006FC  B4D8               	btfsc	status,2,c
  4827  0006FE  EF83  F003         	goto	u11701
  4828  000702  EF85  F003         	goto	u11700
  4829  000706                     u11701:
  4830  000706  EFA0  F003         	goto	l8791
  4831  00070A                     u11700:
  4832  00070A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4833  00070E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4834  000712  CFDE F004          	movff	postinc2,strncmp@_l
  4835  000716  CFDD F005          	movff	postdec2,strncmp@_l+1
  4836  00071A  0EEF               	movlw	low STR_34
  4837  00071C  6E06               	movwf	strncmp@_r^0,c
  4838  00071E  0EFF               	movlw	high STR_34
  4839  000720  6E07               	movwf	(strncmp@_r+1)^0,c
  4840  000722  0E00               	movlw	0
  4841  000724  6E09               	movwf	(strncmp@n+1)^0,c
  4842  000726  0E02               	movlw	2
  4843  000728  6E08               	movwf	strncmp@n^0,c
  4844  00072A  ECAE  F024         	call	_strncmp	;wreg free
  4845  00072E  5004               	movf	?_strncmp^0,w,c
  4846  000730  1005               	iorwf	(?_strncmp+1)^0,w,c
  4847  000732  A4D8               	btfss	status,2,c
  4848  000734  EF9E  F003         	goto	u11711
  4849  000738  EFA0  F003         	goto	u11710
  4850  00073C                     u11711:
  4851  00073C  EFC9  F003         	goto	l8797
  4852  000740                     u11710:
  4853  000740                     l8791:
  4854                           
  4855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4856  000740  0E02               	movlw	2
  4857  000742  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4858  000746  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4859  00074A  26DE               	addwf	postinc2,f,c
  4860  00074C  0E00               	movlw	0
  4861  00074E  22DD               	addwfc	postdec2,f,c
  4862                           
  4863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4864  000750  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4865  000754  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4866  000758  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4867  00075C  0E02               	movlw	2
  4868  00075E  26DE               	addwf	postinc2,f,c
  4869  000760  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4870  000764  0E00               	movlw	0
  4871  000766  22DD               	addwfc	postdec2,f,c
  4872  000768  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4873  00076C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4874  000770  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4875  000774  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4876  000778  C04E  F0A9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4877  00077C  C04F  F0AA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4878  000780  0100               	movlb	0	; () banked
  4879  000782  6BAB               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4880  000784  6BAC               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4881  000786  6BAD               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4882  000788  6BAE               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4883  00078A  6BAF               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4884  00078C  6BB0               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4885  00078E  EFA3  F002         	goto	l8763
  4886  000792                     l8797:
  4887                           
  4888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4889  000792  0E66               	movlw	102
  4890  000794  0100               	movlb	0	; () banked
  4891  000796  19A6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4892  000798  A4D8               	btfss	status,2,c
  4893  00079A  EFD1  F003         	goto	u11721
  4894  00079E  EFD3  F003         	goto	u11720
  4895  0007A2                     u11721:
  4896  0007A2  EF14  F004         	goto	l8809
  4897  0007A6                     u11720:
  4898  0007A6                     
  4899                           ; BSR set to: 0
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4901  0007A6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4902  0007AA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4903  0007AE  CFDE FFF6          	movff	postinc2,tblptrl
  4904  0007B2  CFDD FFF7          	movff	postdec2,tblptrh
  4905  0007B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4906  0007B6  6AF8               	clrf	tblptru,c
  4907  0007B8                     	endif
  4908  0007B8                     	if	0	;tblptru may be non-zero
  4909  0007B8                     	endif
  4910  0007B8  0008               	tblrd		*
  4911  0007BA  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4912  0007BE                     
  4913                           ; BSR set to: 0
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4915  0007BE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4916  0007C2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4917  0007C6  2ADE               	incf	postinc2,f,c
  4918  0007C8  0E00               	movlw	0
  4919  0007CA  22DD               	addwfc	postdec2,f,c
  4920  0007CC                     
  4921                           ; BSR set to: 0
  4922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4923  0007CC  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4924  0007D0  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4925  0007D4  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4926  0007D8  0E04               	movlw	4
  4927  0007DA  26DE               	addwf	postinc2,f,c
  4928  0007DC  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4929  0007E0  0E00               	movlw	0
  4930  0007E2  22DD               	addwfc	postdec2,f,c
  4931  0007E4  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4932  0007E8  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4933  0007EC  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  4934  0007F0  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  4935  0007F4  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  4936  0007F8  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  4937  0007FC                     l8805:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4941  0007FC  C046  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  4942  000800  C047  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4943  000804  C0A2  F039         	movff	vfpfcnvrt@f,efgtoa@f
  4944  000808  C0A3  F03A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4945  00080C  C0A4  F03B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4946  000810  C0A5  F03C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4947  000814  C0B3  F03D         	movff	vfpfcnvrt@c,efgtoa@c
  4948  000818  EC93  F00A         	call	_efgtoa	;wreg free
  4949  00081C  C037  F046         	movff	?_efgtoa,?_vfpfcnvrt
  4950  000820  C038  F047         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4951  000824  EF92  F00A         	goto	l742
  4952  000828                     l8809:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4956  000828  0EA6               	movlw	low vfpfcnvrt@ct
  4957  00082A  6E04               	movwf	strncmp@_l^0,c
  4958  00082C  0E00               	movlw	high vfpfcnvrt@ct
  4959  00082E  6E05               	movwf	(strncmp@_l+1)^0,c
  4960  000830  0EEC               	movlw	low STR_39
  4961  000832  6E06               	movwf	strncmp@_r^0,c
  4962  000834  0EFF               	movlw	high STR_39
  4963  000836  6E07               	movwf	(strncmp@_r+1)^0,c
  4964  000838  0E00               	movlw	0
  4965  00083A  6E09               	movwf	(strncmp@n+1)^0,c
  4966  00083C  0E02               	movlw	2
  4967  00083E  6E08               	movwf	strncmp@n^0,c
  4968  000840  ECAE  F024         	call	_strncmp	;wreg free
  4969  000844  5004               	movf	?_strncmp^0,w,c
  4970  000846  1005               	iorwf	(?_strncmp+1)^0,w,c
  4971  000848  A4D8               	btfss	status,2,c
  4972  00084A  EF29  F004         	goto	u11731
  4973  00084E  EF2B  F004         	goto	u11730
  4974  000852                     u11731:
  4975  000852  EFA9  F004         	goto	l8825
  4976  000856                     u11730:
  4977  000856                     
  4978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4979  000856  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4980  00085A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4981  00085E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  4982  000862  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  4983  000866  0E01               	movlw	1
  4984  000868  264C               	addwf	??_vfpfcnvrt^0,f,c
  4985  00086A  0E00               	movlw	0
  4986  00086C  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4987  00086E  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4988  000872  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4989  000876                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4990  000876  6AF8               	clrf	tblptru,c
  4991  000878                     	endif
  4992  000878                     	if	0	;tblptru may be non-zero
  4993  000878                     	endif
  4994  000878  0008               	tblrd		*
  4995  00087A  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4996  00087E  0EBF               	movlw	191
  4997  000880  6E4C               	movwf	??_vfpfcnvrt^0,c
  4998  000882  0EFF               	movlw	255
  4999  000884  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  5000  000886  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5001  00088A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5002  00088E  CFDE FFF6          	movff	postinc2,tblptrl
  5003  000892  CFDD FFF7          	movff	postdec2,tblptrh
  5004  000896                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5005  000896  6AF8               	clrf	tblptru,c
  5006  000898                     	endif
  5007  000898                     	if	0	;tblptru may be non-zero
  5008  000898                     	endif
  5009  000898  0008               	tblrd		*
  5010  00089A  50F5               	movf	tablat,w,c
  5011  00089C  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5012  00089E  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  5013  0008A0  504C               	movf	??_vfpfcnvrt^0,w,c
  5014  0008A2  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5015  0008A4  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  5016  0008A6  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5017  0008A8  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  5018  0008AA  E10A               	bnz	u11740
  5019  0008AC  0E1A               	movlw	26
  5020  0008AE  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5021  0008B0  A0D8               	btfss	status,0,c
  5022  0008B2  EF5D  F004         	goto	u11741
  5023  0008B6  EF60  F004         	goto	u11740
  5024  0008BA                     u11741:
  5025  0008BA  0E01               	movlw	1
  5026  0008BC  EF61  F004         	goto	u11750
  5027  0008C0                     u11740:
  5028  0008C0  0E00               	movlw	0
  5029  0008C2                     u11750:
  5030  0008C2  0100               	movlb	0	; () banked
  5031  0008C4  6FA0               	movwf	_vfpfcnvrt$1410& (0+255),b
  5032  0008C6  6BA1               	clrf	(_vfpfcnvrt$1410+1)& (0+255),b
  5033  0008C8                     
  5034                           ; BSR set to: 0
  5035  0008C8  51A0               	movf	_vfpfcnvrt$1410& (0+255),w,b
  5036  0008CA  11A1               	iorwf	(_vfpfcnvrt$1410+1)& (0+255),w,b
  5037  0008CC  B4D8               	btfsc	status,2,c
  5038  0008CE  EF6B  F004         	goto	u11761
  5039  0008D2  EF6D  F004         	goto	u11760
  5040  0008D6                     u11761:
  5041  0008D6  EF87  F004         	goto	l8819
  5042  0008DA                     u11760:
  5043  0008DA                     
  5044                           ; BSR set to: 0
  5045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5046  0008DA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5047  0008DE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5048  0008E2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5049  0008E6  0E04               	movlw	4
  5050  0008E8  26DE               	addwf	postinc2,f,c
  5051  0008EA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5052  0008EE  0E00               	movlw	0
  5053  0008F0  22DD               	addwfc	postdec2,f,c
  5054  0008F2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5055  0008F6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5056  0008FA  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  5057  0008FE  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  5058  000902  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  5059  000906  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  5060                           
  5061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5062  00090A  EF9F  F004         	goto	l762
  5063  00090E                     l8819:
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5067  00090E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5068  000912  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5069  000916  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5070  00091A  0E04               	movlw	4
  5071  00091C  26DE               	addwf	postinc2,f,c
  5072  00091E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5073  000922  0E00               	movlw	0
  5074  000924  22DD               	addwfc	postdec2,f,c
  5075  000926  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5076  00092A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5077  00092E  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  5078  000932  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  5079  000936  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  5080  00093A  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  5081  00093E                     l762:
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5085  00093E  0E02               	movlw	2
  5086  000940  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5087  000944  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5088  000948  26DE               	addwf	postinc2,f,c
  5089  00094A  0E00               	movlw	0
  5090  00094C  22DD               	addwfc	postdec2,f,c
  5091  00094E  EFFE  F003         	goto	l8805
  5092  000952                     l8825:
  5093                           
  5094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5095  000952  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5096  000956  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5097  00095A  CFDE F004          	movff	postinc2,strncmp@_l
  5098  00095E  CFDD F005          	movff	postdec2,strncmp@_l+1
  5099  000962  0EDA               	movlw	low STR_44
  5100  000964  6E06               	movwf	strncmp@_r^0,c
  5101  000966  0EFF               	movlw	high STR_44
  5102  000968  6E07               	movwf	(strncmp@_r+1)^0,c
  5103  00096A  0E00               	movlw	0
  5104  00096C  6E09               	movwf	(strncmp@n+1)^0,c
  5105  00096E  0E03               	movlw	3
  5106  000970  6E08               	movwf	strncmp@n^0,c
  5107  000972  ECAE  F024         	call	_strncmp	;wreg free
  5108  000976  5004               	movf	?_strncmp^0,w,c
  5109  000978  1005               	iorwf	(?_strncmp+1)^0,w,c
  5110  00097A  A4D8               	btfss	status,2,c
  5111  00097C  EFC2  F004         	goto	u11771
  5112  000980  EFC4  F004         	goto	u11770
  5113  000984                     u11771:
  5114  000984  EF04  F005         	goto	l8833
  5115  000988                     u11770:
  5116  000988                     
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5118  000988  0E03               	movlw	3
  5119  00098A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5120  00098E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5121  000992  26DE               	addwf	postinc2,f,c
  5122  000994  0E00               	movlw	0
  5123  000996  22DD               	addwfc	postdec2,f,c
  5124                           
  5125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5126  000998  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5127  00099C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5128  0009A0  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5129  0009A4  0E02               	movlw	2
  5130  0009A6  26DE               	addwf	postinc2,f,c
  5131  0009A8  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5132  0009AC  0E00               	movlw	0
  5133  0009AE  22DD               	addwfc	postdec2,f,c
  5134  0009B0  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5135  0009B4  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5136  0009B8  50DF               	movf	indf2,w,c
  5137  0009BA  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5138  0009BC  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5139  0009BE  0100               	movlb	0	; () banked
  5140  0009C0  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5141  0009C2  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5142  0009C4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5143  0009C6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5144  0009C8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5145  0009CA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5146  0009CC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5147  0009CE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5148  0009D0                     l8829:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5152  0009D0  C046  F01F         	movff	vfpfcnvrt@fp,otoa@fp
  5153  0009D4  C047  F020         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5154  0009D8  C0B4  F021         	movff	vfpfcnvrt@llu,otoa@d
  5155  0009DC  C0B5  F022         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5156  0009E0  C0B6  F023         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5157  0009E4  C0B7  F024         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5158  0009E8  C0B8  F025         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5159  0009EC  C0B9  F026         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5160  0009F0  C0BA  F027         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5161  0009F4  C0BB  F028         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5162  0009F8  EC80  F01E         	call	_otoa	;wreg free
  5163  0009FC  C01F  F046         	movff	?_otoa,?_vfpfcnvrt
  5164  000A00  C020  F047         	movff	?_otoa+1,?_vfpfcnvrt+1
  5165  000A04  EF92  F00A         	goto	l742
  5166  000A08                     l8833:
  5167                           
  5168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5169  000A08  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5170  000A0C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5171  000A10  CFDE F004          	movff	postinc2,strncmp@_l
  5172  000A14  CFDD F005          	movff	postdec2,strncmp@_l+1
  5173  000A18  0EDB               	movlw	low (STR_44+1)
  5174  000A1A  6E06               	movwf	strncmp@_r^0,c
  5175  000A1C  0EFF               	movlw	high (STR_44+1)
  5176  000A1E  6E07               	movwf	(strncmp@_r+1)^0,c
  5177  000A20  0E00               	movlw	0
  5178  000A22  6E09               	movwf	(strncmp@n+1)^0,c
  5179  000A24  0E02               	movlw	2
  5180  000A26  6E08               	movwf	strncmp@n^0,c
  5181  000A28  ECAE  F024         	call	_strncmp	;wreg free
  5182  000A2C  5004               	movf	?_strncmp^0,w,c
  5183  000A2E  1005               	iorwf	(?_strncmp+1)^0,w,c
  5184  000A30  A4D8               	btfss	status,2,c
  5185  000A32  EF1D  F005         	goto	u11781
  5186  000A36  EF1F  F005         	goto	u11780
  5187  000A3A                     u11781:
  5188  000A3A  EF48  F005         	goto	l8841
  5189  000A3E                     u11780:
  5190  000A3E                     
  5191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5192  000A3E  0E02               	movlw	2
  5193  000A40  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5194  000A44  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5195  000A48  26DE               	addwf	postinc2,f,c
  5196  000A4A  0E00               	movlw	0
  5197  000A4C  22DD               	addwfc	postdec2,f,c
  5198                           
  5199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5200  000A4E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5201  000A52  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5202  000A56  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5203  000A5A  0E02               	movlw	2
  5204  000A5C  26DE               	addwf	postinc2,f,c
  5205  000A5E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5206  000A62  0E00               	movlw	0
  5207  000A64  22DD               	addwfc	postdec2,f,c
  5208  000A66  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5209  000A6A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5210  000A6E  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5211  000A72  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5212  000A76  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5213  000A7A  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5214  000A7E  0100               	movlb	0	; () banked
  5215  000A80  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5216  000A82  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5217  000A84  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5218  000A86  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5219  000A88  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5220  000A8A  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5221  000A8C  EFE8  F004         	goto	l8829
  5222  000A90                     l8841:
  5223                           
  5224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5225  000A90  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5226  000A94  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5227  000A98  CFDE FFF6          	movff	postinc2,tblptrl
  5228  000A9C  CFDD FFF7          	movff	postdec2,tblptrh
  5229  000AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5230  000AA0  6AF8               	clrf	tblptru,c
  5231  000AA2                     	endif
  5232  000AA2                     	if	0	;tblptru may be non-zero
  5233  000AA2                     	endif
  5234  000AA2  0008               	tblrd		*
  5235  000AA4  50F5               	movf	tablat,w,c
  5236  000AA6  0A6F               	xorlw	111
  5237  000AA8  A4D8               	btfss	status,2,c
  5238  000AAA  EF59  F005         	goto	u11791
  5239  000AAE  EF5B  F005         	goto	u11790
  5240  000AB2                     u11791:
  5241  000AB2  EF83  F005         	goto	l8849
  5242  000AB6                     u11790:
  5243  000AB6                     
  5244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5245  000AB6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5246  000ABA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5247  000ABE  2ADE               	incf	postinc2,f,c
  5248  000AC0  0E00               	movlw	0
  5249  000AC2  22DD               	addwfc	postdec2,f,c
  5250                           
  5251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5252  000AC4  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5253  000AC8  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5254  000ACC  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5255  000AD0  0E02               	movlw	2
  5256  000AD2  26DE               	addwf	postinc2,f,c
  5257  000AD4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5258  000AD8  0E00               	movlw	0
  5259  000ADA  22DD               	addwfc	postdec2,f,c
  5260  000ADC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5261  000AE0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5262  000AE4  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5263  000AE8  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5264  000AEC  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5265  000AF0  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5266  000AF4  0100               	movlb	0	; () banked
  5267  000AF6  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5268  000AF8  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5269  000AFA  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5270  000AFC  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5271  000AFE  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5272  000B00  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5273  000B02  EFE8  F004         	goto	l8829
  5274  000B06                     l8849:
  5275                           
  5276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5277  000B06  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5278  000B0A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5279  000B0E  CFDE F004          	movff	postinc2,strncmp@_l
  5280  000B12  CFDD F005          	movff	postdec2,strncmp@_l+1
  5281  000B16  0EF5               	movlw	low STR_54
  5282  000B18  6E06               	movwf	strncmp@_r^0,c
  5283  000B1A  0EFF               	movlw	high STR_54
  5284  000B1C  6E07               	movwf	(strncmp@_r+1)^0,c
  5285  000B1E  0E00               	movlw	0
  5286  000B20  6E09               	movwf	(strncmp@n+1)^0,c
  5287  000B22  0E02               	movlw	2
  5288  000B24  6E08               	movwf	strncmp@n^0,c
  5289  000B26  ECAE  F024         	call	_strncmp	;wreg free
  5290  000B2A  5004               	movf	?_strncmp^0,w,c
  5291  000B2C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5292  000B2E  A4D8               	btfss	status,2,c
  5293  000B30  EF9C  F005         	goto	u11801
  5294  000B34  EF9E  F005         	goto	u11800
  5295  000B38                     u11801:
  5296  000B38  EFC7  F005         	goto	l8857
  5297  000B3C                     u11800:
  5298  000B3C                     
  5299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5300  000B3C  0E02               	movlw	2
  5301  000B3E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5302  000B42  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5303  000B46  26DE               	addwf	postinc2,f,c
  5304  000B48  0E00               	movlw	0
  5305  000B4A  22DD               	addwfc	postdec2,f,c
  5306                           
  5307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5308  000B4C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5309  000B50  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5310  000B54  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5311  000B58  0E02               	movlw	2
  5312  000B5A  26DE               	addwf	postinc2,f,c
  5313  000B5C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5314  000B60  0E00               	movlw	0
  5315  000B62  22DD               	addwfc	postdec2,f,c
  5316  000B64  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5317  000B68  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5318  000B6C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5319  000B70  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5320  000B74  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5321  000B78  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5322  000B7C  0100               	movlb	0	; () banked
  5323  000B7E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5324  000B80  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5325  000B82  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5326  000B84  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5327  000B86  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5328  000B88  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5329  000B8A  EFE8  F004         	goto	l8829
  5330  000B8E                     l8857:
  5331                           
  5332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5333  000B8E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5334  000B92  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5335  000B96  CFDE F004          	movff	postinc2,strncmp@_l
  5336  000B9A  CFDD F005          	movff	postdec2,strncmp@_l+1
  5337  000B9E  0ED6               	movlw	low STR_59
  5338  000BA0  6E06               	movwf	strncmp@_r^0,c
  5339  000BA2  0EFF               	movlw	high STR_59
  5340  000BA4  6E07               	movwf	(strncmp@_r+1)^0,c
  5341  000BA6  0E00               	movlw	0
  5342  000BA8  6E09               	movwf	(strncmp@n+1)^0,c
  5343  000BAA  0E03               	movlw	3
  5344  000BAC  6E08               	movwf	strncmp@n^0,c
  5345  000BAE  ECAE  F024         	call	_strncmp	;wreg free
  5346  000BB2  5004               	movf	?_strncmp^0,w,c
  5347  000BB4  1005               	iorwf	(?_strncmp+1)^0,w,c
  5348  000BB6  A4D8               	btfss	status,2,c
  5349  000BB8  EFE0  F005         	goto	u11811
  5350  000BBC  EFE2  F005         	goto	u11810
  5351  000BC0                     u11811:
  5352  000BC0  EF0A  F006         	goto	l8867
  5353  000BC4                     u11810:
  5354  000BC4                     
  5355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5356  000BC4  0E03               	movlw	3
  5357  000BC6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5358  000BCA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5359  000BCE  26DE               	addwf	postinc2,f,c
  5360  000BD0  0E00               	movlw	0
  5361  000BD2  22DD               	addwfc	postdec2,f,c
  5362                           
  5363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5364  000BD4  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5365  000BD8  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5366  000BDC  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5367  000BE0  0E02               	movlw	2
  5368  000BE2  26DE               	addwf	postinc2,f,c
  5369  000BE4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5370  000BE8  0E00               	movlw	0
  5371  000BEA  22DD               	addwfc	postdec2,f,c
  5372  000BEC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5373  000BF0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5374  000BF4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5375  000BF8  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5376  000BFC                     
  5377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5378  000BFC  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5379  000C00  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5380  000C04  C0F2  FFDF         	movff	_nout,indf2
  5381  000C08                     l8863:
  5382                           
  5383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5384  000C08  0E00               	movlw	0
  5385  000C0A  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  5386  000C0C  0E00               	movlw	0
  5387  000C0E  6E46               	movwf	?_vfpfcnvrt^0,c
  5388  000C10  EF92  F00A         	goto	l742
  5389  000C14                     l8867:
  5390                           
  5391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5392  000C14  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5393  000C18  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5394  000C1C  CFDE F004          	movff	postinc2,strncmp@_l
  5395  000C20  CFDD F005          	movff	postdec2,strncmp@_l+1
  5396  000C24  0ED7               	movlw	low (STR_59+1)
  5397  000C26  6E06               	movwf	strncmp@_r^0,c
  5398  000C28  0EFF               	movlw	high (STR_59+1)
  5399  000C2A  6E07               	movwf	(strncmp@_r+1)^0,c
  5400  000C2C  0E00               	movlw	0
  5401  000C2E  6E09               	movwf	(strncmp@n+1)^0,c
  5402  000C30  0E02               	movlw	2
  5403  000C32  6E08               	movwf	strncmp@n^0,c
  5404  000C34  ECAE  F024         	call	_strncmp	;wreg free
  5405  000C38  5004               	movf	?_strncmp^0,w,c
  5406  000C3A  1005               	iorwf	(?_strncmp+1)^0,w,c
  5407  000C3C  A4D8               	btfss	status,2,c
  5408  000C3E  EF23  F006         	goto	u11821
  5409  000C42  EF25  F006         	goto	u11820
  5410  000C46                     u11821:
  5411  000C46  EF4B  F006         	goto	l8877
  5412  000C4A                     u11820:
  5413  000C4A                     
  5414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5415  000C4A  0E02               	movlw	2
  5416  000C4C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5417  000C50  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5418  000C54  26DE               	addwf	postinc2,f,c
  5419  000C56  0E00               	movlw	0
  5420  000C58  22DD               	addwfc	postdec2,f,c
  5421                           
  5422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5423  000C5A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5424  000C5E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5425  000C62  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5426  000C66  0E02               	movlw	2
  5427  000C68  26DE               	addwf	postinc2,f,c
  5428  000C6A  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5429  000C6E  0E00               	movlw	0
  5430  000C70  22DD               	addwfc	postdec2,f,c
  5431  000C72  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5432  000C76  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5433  000C7A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5434  000C7E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5435  000C82                     
  5436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5437  000C82  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5438  000C86  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5439  000C8A  C0F2  FFDE         	movff	_nout,postinc2
  5440  000C8E  C0F3  FFDD         	movff	_nout+1,postdec2
  5441  000C92  EF04  F006         	goto	l8863
  5442  000C96                     l8877:
  5443                           
  5444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5445  000C96  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5446  000C9A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5447  000C9E  CFDE FFF6          	movff	postinc2,tblptrl
  5448  000CA2  CFDD FFF7          	movff	postdec2,tblptrh
  5449  000CA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5450  000CA6  6AF8               	clrf	tblptru,c
  5451  000CA8                     	endif
  5452  000CA8                     	if	0	;tblptru may be non-zero
  5453  000CA8                     	endif
  5454  000CA8  0008               	tblrd		*
  5455  000CAA  50F5               	movf	tablat,w,c
  5456  000CAC  0A6E               	xorlw	110
  5457  000CAE  A4D8               	btfss	status,2,c
  5458  000CB0  EF5C  F006         	goto	u11831
  5459  000CB4  EF5E  F006         	goto	u11830
  5460  000CB8                     u11831:
  5461  000CB8  EF83  F006         	goto	l8887
  5462  000CBC                     u11830:
  5463  000CBC                     
  5464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5465  000CBC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5466  000CC0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5467  000CC4  2ADE               	incf	postinc2,f,c
  5468  000CC6  0E00               	movlw	0
  5469  000CC8  22DD               	addwfc	postdec2,f,c
  5470                           
  5471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5472  000CCA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5473  000CCE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5474  000CD2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5475  000CD6  0E02               	movlw	2
  5476  000CD8  26DE               	addwf	postinc2,f,c
  5477  000CDA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5478  000CDE  0E00               	movlw	0
  5479  000CE0  22DD               	addwfc	postdec2,f,c
  5480  000CE2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5481  000CE6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5482  000CEA  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5483  000CEE  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5484  000CF2                     
  5485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5486  000CF2  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5487  000CF6  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5488  000CFA  C0F2  FFDE         	movff	_nout,postinc2
  5489  000CFE  C0F3  FFDD         	movff	_nout+1,postdec2
  5490  000D02  EF04  F006         	goto	l8863
  5491  000D06                     l8887:
  5492                           
  5493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5494  000D06  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5495  000D0A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5496  000D0E  CFDE F004          	movff	postinc2,strncmp@_l
  5497  000D12  CFDD F005          	movff	postdec2,strncmp@_l+1
  5498  000D16  0EF2               	movlw	low STR_69
  5499  000D18  6E06               	movwf	strncmp@_r^0,c
  5500  000D1A  0EFF               	movlw	high STR_69
  5501  000D1C  6E07               	movwf	(strncmp@_r+1)^0,c
  5502  000D1E  0E00               	movlw	0
  5503  000D20  6E09               	movwf	(strncmp@n+1)^0,c
  5504  000D22  0E02               	movlw	2
  5505  000D24  6E08               	movwf	strncmp@n^0,c
  5506  000D26  ECAE  F024         	call	_strncmp	;wreg free
  5507  000D2A  5004               	movf	?_strncmp^0,w,c
  5508  000D2C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5509  000D2E  A4D8               	btfss	status,2,c
  5510  000D30  EF9C  F006         	goto	u11841
  5511  000D34  EF9E  F006         	goto	u11840
  5512  000D38                     u11841:
  5513  000D38  EFC4  F006         	goto	l8897
  5514  000D3C                     u11840:
  5515  000D3C                     
  5516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5517  000D3C  0E02               	movlw	2
  5518  000D3E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5519  000D42  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5520  000D46  26DE               	addwf	postinc2,f,c
  5521  000D48  0E00               	movlw	0
  5522  000D4A  22DD               	addwfc	postdec2,f,c
  5523                           
  5524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5525  000D4C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5526  000D50  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5527  000D54  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5528  000D58  0E02               	movlw	2
  5529  000D5A  26DE               	addwf	postinc2,f,c
  5530  000D5C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5531  000D60  0E00               	movlw	0
  5532  000D62  22DD               	addwfc	postdec2,f,c
  5533  000D64  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5534  000D68  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5535  000D6C  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5536  000D70  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5537  000D74                     
  5538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5539  000D74  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5540  000D78  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5541  000D7C  C0F2  FFDE         	movff	_nout,postinc2
  5542  000D80  C0F3  FFDD         	movff	_nout+1,postdec2
  5543  000D84  EF04  F006         	goto	l8863
  5544  000D88                     l8897:
  5545                           
  5546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5547  000D88  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5548  000D8C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5549  000D90  CFDE FFF6          	movff	postinc2,tblptrl
  5550  000D94  CFDD FFF7          	movff	postdec2,tblptrh
  5551  000D98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5552  000D98  6AF8               	clrf	tblptru,c
  5553  000D9A                     	endif
  5554  000D9A                     	if	0	;tblptru may be non-zero
  5555  000D9A                     	endif
  5556  000D9A  0008               	tblrd		*
  5557  000D9C  50F5               	movf	tablat,w,c
  5558  000D9E  0A70               	xorlw	112
  5559  000DA0  A4D8               	btfss	status,2,c
  5560  000DA2  EFD5  F006         	goto	u11851
  5561  000DA6  EFD7  F006         	goto	u11850
  5562  000DAA                     u11851:
  5563  000DAA  EF1B  F007         	goto	l8905
  5564  000DAE                     u11850:
  5565  000DAE                     
  5566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5567  000DAE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5568  000DB2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5569  000DB6  2ADE               	incf	postinc2,f,c
  5570  000DB8  0E00               	movlw	0
  5571  000DBA  22DD               	addwfc	postdec2,f,c
  5572                           
  5573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5574  000DBC  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5575  000DC0  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5576  000DC4  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5577  000DC8  0E02               	movlw	2
  5578  000DCA  26DE               	addwf	postinc2,f,c
  5579  000DCC  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5580  000DD0  0E00               	movlw	0
  5581  000DD2  22DD               	addwfc	postdec2,f,c
  5582  000DD4  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5583  000DD8  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5584  000DDC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5585  000DE0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5586  000DE4  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5587  000DE8  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5588  000DEC  0100               	movlb	0	; () banked
  5589  000DEE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5590  000DF0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5591  000DF2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5592  000DF4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5593  000DF6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5594  000DF8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5595  000DFA                     
  5596                           ; BSR set to: 0
  5597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5598  000DFA  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  5599  000DFE  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5600  000E02  C0B4  F021         	movff	vfpfcnvrt@llu,xtoa@d
  5601  000E06  C0B5  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5602  000E0A  C0B6  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5603  000E0E  C0B7  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5604  000E12  C0B8  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5605  000E16  C0B9  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5606  000E1A  C0BA  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5607  000E1E  C0BB  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5608  000E22  0E78               	movlw	120
  5609  000E24  6E29               	movwf	xtoa@x^0,c
  5610  000E26  ECE3  F019         	call	_xtoa	;wreg free
  5611  000E2A  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  5612  000E2E  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5613  000E32  EF92  F00A         	goto	l742
  5614  000E36                     l8905:
  5615                           
  5616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5617  000E36  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5618  000E3A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5619  000E3E  CFDE FFF6          	movff	postinc2,tblptrl
  5620  000E42  CFDD FFF7          	movff	postdec2,tblptrh
  5621  000E46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5622  000E46  6AF8               	clrf	tblptru,c
  5623  000E48                     	endif
  5624  000E48                     	if	0	;tblptru may be non-zero
  5625  000E48                     	endif
  5626  000E48  0008               	tblrd		*
  5627  000E4A  50F5               	movf	tablat,w,c
  5628  000E4C  0A73               	xorlw	115
  5629  000E4E  A4D8               	btfss	status,2,c
  5630  000E50  EF2C  F007         	goto	u11861
  5631  000E54  EF2E  F007         	goto	u11860
  5632  000E58                     u11861:
  5633  000E58  EF59  F007         	goto	l8913
  5634  000E5C                     u11860:
  5635  000E5C                     
  5636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5637  000E5C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5638  000E60  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5639  000E64  2ADE               	incf	postinc2,f,c
  5640  000E66  0E00               	movlw	0
  5641  000E68  22DD               	addwfc	postdec2,f,c
  5642                           
  5643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5644  000E6A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5645  000E6E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5646  000E72  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5647  000E76  0E02               	movlw	2
  5648  000E78  26DE               	addwf	postinc2,f,c
  5649  000E7A  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5650  000E7E  0E00               	movlw	0
  5651  000E80  22DD               	addwfc	postdec2,f,c
  5652  000E82  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5653  000E86  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5654  000E8A  CFDE F098          	movff	postinc2,vfpfcnvrt@cp
  5655  000E8E  CFDD F099          	movff	postdec2,vfpfcnvrt@cp+1
  5656  000E92                     
  5657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5658  000E92  C046  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  5659  000E96  C047  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5660  000E9A  C098  F00F         	movff	vfpfcnvrt@cp,stoa@s
  5661  000E9E  C099  F010         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5662  000EA2  ECE3  F021         	call	_stoa	;wreg free
  5663  000EA6  C00D  F046         	movff	?_stoa,?_vfpfcnvrt
  5664  000EAA  C00E  F047         	movff	?_stoa+1,?_vfpfcnvrt+1
  5665  000EAE  EF92  F00A         	goto	l742
  5666  000EB2                     l8913:
  5667                           
  5668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5669  000EB2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5670  000EB6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5671  000EBA  CFDE F004          	movff	postinc2,strncmp@_l
  5672  000EBE  CFDD F005          	movff	postdec2,strncmp@_l+1
  5673  000EC2  0EDE               	movlw	low STR_74
  5674  000EC4  6E06               	movwf	strncmp@_r^0,c
  5675  000EC6  0EFF               	movlw	high STR_74
  5676  000EC8  6E07               	movwf	(strncmp@_r+1)^0,c
  5677  000ECA  0E00               	movlw	0
  5678  000ECC  6E09               	movwf	(strncmp@n+1)^0,c
  5679  000ECE  0E03               	movlw	3
  5680  000ED0  6E08               	movwf	strncmp@n^0,c
  5681  000ED2  ECAE  F024         	call	_strncmp	;wreg free
  5682  000ED6  5004               	movf	?_strncmp^0,w,c
  5683  000ED8  1005               	iorwf	(?_strncmp+1)^0,w,c
  5684  000EDA  A4D8               	btfss	status,2,c
  5685  000EDC  EF72  F007         	goto	u11871
  5686  000EE0  EF74  F007         	goto	u11870
  5687  000EE4                     u11871:
  5688  000EE4  EFB4  F007         	goto	l8921
  5689  000EE8                     u11870:
  5690  000EE8                     
  5691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5692  000EE8  0E03               	movlw	3
  5693  000EEA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5694  000EEE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5695  000EF2  26DE               	addwf	postinc2,f,c
  5696  000EF4  0E00               	movlw	0
  5697  000EF6  22DD               	addwfc	postdec2,f,c
  5698                           
  5699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5700  000EF8  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5701  000EFC  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5702  000F00  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5703  000F04  0E02               	movlw	2
  5704  000F06  26DE               	addwf	postinc2,f,c
  5705  000F08  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5706  000F0C  0E00               	movlw	0
  5707  000F0E  22DD               	addwfc	postdec2,f,c
  5708  000F10  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5709  000F14  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5710  000F18  50DF               	movf	indf2,w,c
  5711  000F1A  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5712  000F1C  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5713  000F1E  0100               	movlb	0	; () banked
  5714  000F20  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5715  000F22  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5716  000F24  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5717  000F26  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5718  000F28  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5719  000F2A  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5720  000F2C  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5721  000F2E  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5722  000F30                     l8917:
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5726  000F30  C046  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  5727  000F34  C047  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5728  000F38  C0B4  F021         	movff	vfpfcnvrt@llu,utoa@d
  5729  000F3C  C0B5  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5730  000F40  C0B6  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5731  000F44  C0B7  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5732  000F48  C0B8  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5733  000F4C  C0B9  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5734  000F50  C0BA  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5735  000F54  C0BB  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5736  000F58  EC7E  F01D         	call	_utoa	;wreg free
  5737  000F5C  C01F  F046         	movff	?_utoa,?_vfpfcnvrt
  5738  000F60  C020  F047         	movff	?_utoa+1,?_vfpfcnvrt+1
  5739  000F64  EF92  F00A         	goto	l742
  5740  000F68                     l8921:
  5741                           
  5742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5743  000F68  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5744  000F6C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5745  000F70  CFDE F004          	movff	postinc2,strncmp@_l
  5746  000F74  CFDD F005          	movff	postdec2,strncmp@_l+1
  5747  000F78  0EDF               	movlw	low (STR_74+1)
  5748  000F7A  6E06               	movwf	strncmp@_r^0,c
  5749  000F7C  0EFF               	movlw	high (STR_74+1)
  5750  000F7E  6E07               	movwf	(strncmp@_r+1)^0,c
  5751  000F80  0E00               	movlw	0
  5752  000F82  6E09               	movwf	(strncmp@n+1)^0,c
  5753  000F84  0E02               	movlw	2
  5754  000F86  6E08               	movwf	strncmp@n^0,c
  5755  000F88  ECAE  F024         	call	_strncmp	;wreg free
  5756  000F8C  5004               	movf	?_strncmp^0,w,c
  5757  000F8E  1005               	iorwf	(?_strncmp+1)^0,w,c
  5758  000F90  A4D8               	btfss	status,2,c
  5759  000F92  EFCD  F007         	goto	u11881
  5760  000F96  EFCF  F007         	goto	u11880
  5761  000F9A                     u11881:
  5762  000F9A  EFF8  F007         	goto	l8929
  5763  000F9E                     u11880:
  5764  000F9E                     
  5765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5766  000F9E  0E02               	movlw	2
  5767  000FA0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5768  000FA4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5769  000FA8  26DE               	addwf	postinc2,f,c
  5770  000FAA  0E00               	movlw	0
  5771  000FAC  22DD               	addwfc	postdec2,f,c
  5772                           
  5773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5774  000FAE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5775  000FB2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5776  000FB6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5777  000FBA  0E02               	movlw	2
  5778  000FBC  26DE               	addwf	postinc2,f,c
  5779  000FBE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5780  000FC2  0E00               	movlw	0
  5781  000FC4  22DD               	addwfc	postdec2,f,c
  5782  000FC6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5783  000FCA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5784  000FCE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5785  000FD2  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5786  000FD6  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5787  000FDA  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5788  000FDE  0100               	movlb	0	; () banked
  5789  000FE0  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5790  000FE2  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5791  000FE4  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5792  000FE6  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5793  000FE8  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5794  000FEA  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5795  000FEC  EF98  F007         	goto	l8917
  5796  000FF0                     l8929:
  5797                           
  5798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5799  000FF0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5800  000FF4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5801  000FF8  CFDE FFF6          	movff	postinc2,tblptrl
  5802  000FFC  CFDD FFF7          	movff	postdec2,tblptrh
  5803  001000                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5804  001000  6AF8               	clrf	tblptru,c
  5805  001002                     	endif
  5806  001002                     	if	0	;tblptru may be non-zero
  5807  001002                     	endif
  5808  001002  0008               	tblrd		*
  5809  001004  50F5               	movf	tablat,w,c
  5810  001006  0A75               	xorlw	117
  5811  001008  A4D8               	btfss	status,2,c
  5812  00100A  EF09  F008         	goto	u11891
  5813  00100E  EF0B  F008         	goto	u11890
  5814  001012                     u11891:
  5815  001012  EF33  F008         	goto	l8937
  5816  001016                     u11890:
  5817  001016                     
  5818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5819  001016  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5820  00101A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5821  00101E  2ADE               	incf	postinc2,f,c
  5822  001020  0E00               	movlw	0
  5823  001022  22DD               	addwfc	postdec2,f,c
  5824                           
  5825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5826  001024  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5827  001028  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5828  00102C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5829  001030  0E02               	movlw	2
  5830  001032  26DE               	addwf	postinc2,f,c
  5831  001034  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5832  001038  0E00               	movlw	0
  5833  00103A  22DD               	addwfc	postdec2,f,c
  5834  00103C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5835  001040  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5836  001044  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5837  001048  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5838  00104C  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5839  001050  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5840  001054  0100               	movlb	0	; () banked
  5841  001056  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5842  001058  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5843  00105A  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5844  00105C  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5845  00105E  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5846  001060  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5847  001062  EF98  F007         	goto	l8917
  5848  001066                     l8937:
  5849                           
  5850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5851  001066  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5852  00106A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5853  00106E  CFDE F004          	movff	postinc2,strncmp@_l
  5854  001072  CFDD F005          	movff	postdec2,strncmp@_l+1
  5855  001076  0EF8               	movlw	low STR_84
  5856  001078  6E06               	movwf	strncmp@_r^0,c
  5857  00107A  0EFF               	movlw	high STR_84
  5858  00107C  6E07               	movwf	(strncmp@_r+1)^0,c
  5859  00107E  0E00               	movlw	0
  5860  001080  6E09               	movwf	(strncmp@n+1)^0,c
  5861  001082  0E02               	movlw	2
  5862  001084  6E08               	movwf	strncmp@n^0,c
  5863  001086  ECAE  F024         	call	_strncmp	;wreg free
  5864  00108A  5004               	movf	?_strncmp^0,w,c
  5865  00108C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5866  00108E  A4D8               	btfss	status,2,c
  5867  001090  EF4C  F008         	goto	u11901
  5868  001094  EF4E  F008         	goto	u11900
  5869  001098                     u11901:
  5870  001098  EF77  F008         	goto	l8945
  5871  00109C                     u11900:
  5872  00109C                     
  5873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5874  00109C  0E02               	movlw	2
  5875  00109E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5876  0010A2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5877  0010A6  26DE               	addwf	postinc2,f,c
  5878  0010A8  0E00               	movlw	0
  5879  0010AA  22DD               	addwfc	postdec2,f,c
  5880                           
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5882  0010AC  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5883  0010B0  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5884  0010B4  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5885  0010B8  0E02               	movlw	2
  5886  0010BA  26DE               	addwf	postinc2,f,c
  5887  0010BC  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5888  0010C0  0E00               	movlw	0
  5889  0010C2  22DD               	addwfc	postdec2,f,c
  5890  0010C4  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5891  0010C8  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5892  0010CC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5893  0010D0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5894  0010D4  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5895  0010D8  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5896  0010DC  0100               	movlb	0	; () banked
  5897  0010DE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5898  0010E0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5899  0010E2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5900  0010E4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5901  0010E6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5902  0010E8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5903  0010EA  EF98  F007         	goto	l8917
  5904  0010EE                     l8945:
  5905                           
  5906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5907  0010EE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5908  0010F2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5909  0010F6  CFDE F004          	movff	postinc2,strncmp@_l
  5910  0010FA  CFDD F005          	movff	postdec2,strncmp@_l+1
  5911  0010FE  0EE2               	movlw	low STR_89
  5912  001100  6E06               	movwf	strncmp@_r^0,c
  5913  001102  0EFF               	movlw	high STR_89
  5914  001104  6E07               	movwf	(strncmp@_r+1)^0,c
  5915  001106  0E00               	movlw	0
  5916  001108  6E09               	movwf	(strncmp@n+1)^0,c
  5917  00110A  0E03               	movlw	3
  5918  00110C  6E08               	movwf	strncmp@n^0,c
  5919  00110E  ECAE  F024         	call	_strncmp	;wreg free
  5920  001112  5004               	movf	?_strncmp^0,w,c
  5921  001114  1005               	iorwf	(?_strncmp+1)^0,w,c
  5922  001116  B4D8               	btfsc	status,2,c
  5923  001118  EF90  F008         	goto	u11911
  5924  00111C  EF92  F008         	goto	u11910
  5925  001120                     u11911:
  5926  001120  EFAD  F008         	goto	l8949
  5927  001124                     u11910:
  5928  001124  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5929  001128  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5930  00112C  CFDE F004          	movff	postinc2,strncmp@_l
  5931  001130  CFDD F005          	movff	postdec2,strncmp@_l+1
  5932  001134  0EC2               	movlw	low STR_93
  5933  001136  6E06               	movwf	strncmp@_r^0,c
  5934  001138  0EFF               	movlw	high STR_93
  5935  00113A  6E07               	movwf	(strncmp@_r+1)^0,c
  5936  00113C  0E00               	movlw	0
  5937  00113E  6E09               	movwf	(strncmp@n+1)^0,c
  5938  001140  0E03               	movlw	3
  5939  001142  6E08               	movwf	strncmp@n^0,c
  5940  001144  ECAE  F024         	call	_strncmp	;wreg free
  5941  001148  5004               	movf	?_strncmp^0,w,c
  5942  00114A  1005               	iorwf	(?_strncmp+1)^0,w,c
  5943  00114C  A4D8               	btfss	status,2,c
  5944  00114E  EFAB  F008         	goto	u11921
  5945  001152  EFAD  F008         	goto	u11920
  5946  001156                     u11921:
  5947  001156  EF03  F009         	goto	l8959
  5948  00115A                     u11920:
  5949  00115A                     l8949:
  5950                           
  5951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5952  00115A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5953  00115E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5954  001162  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5955  001166  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5956  00116A  0E02               	movlw	2
  5957  00116C  264C               	addwf	??_vfpfcnvrt^0,f,c
  5958  00116E  0E00               	movlw	0
  5959  001170  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5960  001172  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5961  001176  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5962  00117A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5963  00117A  6AF8               	clrf	tblptru,c
  5964  00117C                     	endif
  5965  00117C                     	if	0	;tblptru may be non-zero
  5966  00117C                     	endif
  5967  00117C  0008               	tblrd		*
  5968  00117E  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  5969  001182                     
  5970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5971  001182  0E03               	movlw	3
  5972  001184  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5973  001188  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5974  00118C  26DE               	addwf	postinc2,f,c
  5975  00118E  0E00               	movlw	0
  5976  001190  22DD               	addwfc	postdec2,f,c
  5977  001192                     
  5978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5979  001192  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5980  001196  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5981  00119A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5982  00119E  0E02               	movlw	2
  5983  0011A0  26DE               	addwf	postinc2,f,c
  5984  0011A2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5985  0011A6  0E00               	movlw	0
  5986  0011A8  22DD               	addwfc	postdec2,f,c
  5987  0011AA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5988  0011AE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5989  0011B2  50DF               	movf	indf2,w,c
  5990  0011B4  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5991  0011B6  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5992  0011B8  0100               	movlb	0	; () banked
  5993  0011BA  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5994  0011BC  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5995  0011BE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5996  0011C0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5997  0011C2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5998  0011C4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5999  0011C6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6000  0011C8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6001  0011CA                     l8955:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6005  0011CA  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  6006  0011CE  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6007  0011D2  C0B4  F021         	movff	vfpfcnvrt@llu,xtoa@d
  6008  0011D6  C0B5  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6009  0011DA  C0B6  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6010  0011DE  C0B7  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6011  0011E2  C0B8  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6012  0011E6  C0B9  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6013  0011EA  C0BA  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6014  0011EE  C0BB  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6015  0011F2  C0B3  F029         	movff	vfpfcnvrt@c,xtoa@x
  6016  0011F6  ECE3  F019         	call	_xtoa	;wreg free
  6017  0011FA  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  6018  0011FE  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6019  001202  EF92  F00A         	goto	l742
  6020  001206                     l8959:
  6021                           
  6022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6023  001206  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6024  00120A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6025  00120E  CFDE F004          	movff	postinc2,strncmp@_l
  6026  001212  CFDD F005          	movff	postdec2,strncmp@_l+1
  6027  001216  0EE3               	movlw	low (STR_89+1)
  6028  001218  6E06               	movwf	strncmp@_r^0,c
  6029  00121A  0EFF               	movlw	high (STR_89+1)
  6030  00121C  6E07               	movwf	(strncmp@_r+1)^0,c
  6031  00121E  0E00               	movlw	0
  6032  001220  6E09               	movwf	(strncmp@n+1)^0,c
  6033  001222  0E02               	movlw	2
  6034  001224  6E08               	movwf	strncmp@n^0,c
  6035  001226  ECAE  F024         	call	_strncmp	;wreg free
  6036  00122A  5004               	movf	?_strncmp^0,w,c
  6037  00122C  1005               	iorwf	(?_strncmp+1)^0,w,c
  6038  00122E  B4D8               	btfsc	status,2,c
  6039  001230  EF1C  F009         	goto	u11931
  6040  001234  EF1E  F009         	goto	u11930
  6041  001238                     u11931:
  6042  001238  EF39  F009         	goto	l8963
  6043  00123C                     u11930:
  6044  00123C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6045  001240  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6046  001244  CFDE F004          	movff	postinc2,strncmp@_l
  6047  001248  CFDD F005          	movff	postdec2,strncmp@_l+1
  6048  00124C  0EC3               	movlw	low (STR_93+1)
  6049  00124E  6E06               	movwf	strncmp@_r^0,c
  6050  001250  0EFF               	movlw	high (STR_93+1)
  6051  001252  6E07               	movwf	(strncmp@_r+1)^0,c
  6052  001254  0E00               	movlw	0
  6053  001256  6E09               	movwf	(strncmp@n+1)^0,c
  6054  001258  0E02               	movlw	2
  6055  00125A  6E08               	movwf	strncmp@n^0,c
  6056  00125C  ECAE  F024         	call	_strncmp	;wreg free
  6057  001260  5004               	movf	?_strncmp^0,w,c
  6058  001262  1005               	iorwf	(?_strncmp+1)^0,w,c
  6059  001264  A4D8               	btfss	status,2,c
  6060  001266  EF37  F009         	goto	u11941
  6061  00126A  EF39  F009         	goto	u11940
  6062  00126E                     u11941:
  6063  00126E  EF76  F009         	goto	l8973
  6064  001272                     u11940:
  6065  001272                     l8963:
  6066                           
  6067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6068  001272  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6069  001276  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6070  00127A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  6071  00127E  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  6072  001282  0E01               	movlw	1
  6073  001284  264C               	addwf	??_vfpfcnvrt^0,f,c
  6074  001286  0E00               	movlw	0
  6075  001288  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6076  00128A  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6077  00128E  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6078  001292                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6079  001292  6AF8               	clrf	tblptru,c
  6080  001294                     	endif
  6081  001294                     	if	0	;tblptru may be non-zero
  6082  001294                     	endif
  6083  001294  0008               	tblrd		*
  6084  001296  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6085  00129A                     
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6087  00129A  0E02               	movlw	2
  6088  00129C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6089  0012A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6090  0012A4  26DE               	addwf	postinc2,f,c
  6091  0012A6  0E00               	movlw	0
  6092  0012A8  22DD               	addwfc	postdec2,f,c
  6093  0012AA                     
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6095  0012AA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6096  0012AE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6097  0012B2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6098  0012B6  0E02               	movlw	2
  6099  0012B8  26DE               	addwf	postinc2,f,c
  6100  0012BA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6101  0012BE  0E00               	movlw	0
  6102  0012C0  22DD               	addwfc	postdec2,f,c
  6103  0012C2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6104  0012C6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6105  0012CA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6106  0012CE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6107  0012D2  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6108  0012D6  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6109  0012DA  0100               	movlb	0	; () banked
  6110  0012DC  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6111  0012DE  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6112  0012E0  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6113  0012E2  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6114  0012E4  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6115  0012E6  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6116  0012E8  EFE5  F008         	goto	l8955
  6117  0012EC                     l8973:
  6118                           
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6120  0012EC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6121  0012F0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6122  0012F4  CFDE FFF6          	movff	postinc2,tblptrl
  6123  0012F8  CFDD FFF7          	movff	postdec2,tblptrh
  6124  0012FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6125  0012FC  6AF8               	clrf	tblptru,c
  6126  0012FE                     	endif
  6127  0012FE                     	if	0	;tblptru may be non-zero
  6128  0012FE                     	endif
  6129  0012FE  0008               	tblrd		*
  6130  001300  50F5               	movf	tablat,w,c
  6131  001302  0A78               	xorlw	120
  6132  001304  B4D8               	btfsc	status,2,c
  6133  001306  EF87  F009         	goto	u11951
  6134  00130A  EF89  F009         	goto	u11950
  6135  00130E                     u11951:
  6136  00130E  EF9C  F009         	goto	l8977
  6137  001312                     u11950:
  6138  001312  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6139  001316  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6140  00131A  CFDE FFF6          	movff	postinc2,tblptrl
  6141  00131E  CFDD FFF7          	movff	postdec2,tblptrh
  6142  001322                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6143  001322  6AF8               	clrf	tblptru,c
  6144  001324                     	endif
  6145  001324                     	if	0	;tblptru may be non-zero
  6146  001324                     	endif
  6147  001324  0008               	tblrd		*
  6148  001326  50F5               	movf	tablat,w,c
  6149  001328  0A58               	xorlw	88
  6150  00132A  A4D8               	btfss	status,2,c
  6151  00132C  EF9A  F009         	goto	u11961
  6152  001330  EF9C  F009         	goto	u11960
  6153  001334                     u11961:
  6154  001334  EFD0  F009         	goto	l8987
  6155  001338                     u11960:
  6156  001338                     l8977:
  6157                           
  6158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6159  001338  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6160  00133C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6161  001340  CFDE FFF6          	movff	postinc2,tblptrl
  6162  001344  CFDD FFF7          	movff	postdec2,tblptrh
  6163  001348                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6164  001348  6AF8               	clrf	tblptru,c
  6165  00134A                     	endif
  6166  00134A                     	if	0	;tblptru may be non-zero
  6167  00134A                     	endif
  6168  00134A  0008               	tblrd		*
  6169  00134C  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6170  001350                     
  6171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6172  001350  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6173  001354  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6174  001358  2ADE               	incf	postinc2,f,c
  6175  00135A  0E00               	movlw	0
  6176  00135C  22DD               	addwfc	postdec2,f,c
  6177  00135E                     
  6178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6179  00135E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6180  001362  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6181  001366  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6182  00136A  0E02               	movlw	2
  6183  00136C  26DE               	addwf	postinc2,f,c
  6184  00136E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6185  001372  0E00               	movlw	0
  6186  001374  22DD               	addwfc	postdec2,f,c
  6187  001376  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6188  00137A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6189  00137E  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6190  001382  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6191  001386  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6192  00138A  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6193  00138E  0100               	movlb	0	; () banked
  6194  001390  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6195  001392  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6196  001394  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6197  001396  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6198  001398  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6199  00139A  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6200  00139C  EFE5  F008         	goto	l8955
  6201  0013A0                     l8987:
  6202                           
  6203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6204  0013A0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6205  0013A4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6206  0013A8  CFDE F004          	movff	postinc2,strncmp@_l
  6207  0013AC  CFDD F005          	movff	postdec2,strncmp@_l+1
  6208  0013B0  0EFB               	movlw	low STR_107
  6209  0013B2  6E06               	movwf	strncmp@_r^0,c
  6210  0013B4  0EFF               	movlw	high STR_107
  6211  0013B6  6E07               	movwf	(strncmp@_r+1)^0,c
  6212  0013B8  0E00               	movlw	0
  6213  0013BA  6E09               	movwf	(strncmp@n+1)^0,c
  6214  0013BC  0E02               	movlw	2
  6215  0013BE  6E08               	movwf	strncmp@n^0,c
  6216  0013C0  ECAE  F024         	call	_strncmp	;wreg free
  6217  0013C4  5004               	movf	?_strncmp^0,w,c
  6218  0013C6  1005               	iorwf	(?_strncmp+1)^0,w,c
  6219  0013C8  B4D8               	btfsc	status,2,c
  6220  0013CA  EFE9  F009         	goto	u11971
  6221  0013CE  EFEB  F009         	goto	u11970
  6222  0013D2                     u11971:
  6223  0013D2  EF06  F00A         	goto	l8991
  6224  0013D6                     u11970:
  6225  0013D6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6226  0013DA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6227  0013DE  CFDE F004          	movff	postinc2,strncmp@_l
  6228  0013E2  CFDD F005          	movff	postdec2,strncmp@_l+1
  6229  0013E6  0EE6               	movlw	low STR_111
  6230  0013E8  6E06               	movwf	strncmp@_r^0,c
  6231  0013EA  0EFF               	movlw	high STR_111
  6232  0013EC  6E07               	movwf	(strncmp@_r+1)^0,c
  6233  0013EE  0E00               	movlw	0
  6234  0013F0  6E09               	movwf	(strncmp@n+1)^0,c
  6235  0013F2  0E02               	movlw	2
  6236  0013F4  6E08               	movwf	strncmp@n^0,c
  6237  0013F6  ECAE  F024         	call	_strncmp	;wreg free
  6238  0013FA  5004               	movf	?_strncmp^0,w,c
  6239  0013FC  1005               	iorwf	(?_strncmp+1)^0,w,c
  6240  0013FE  A4D8               	btfss	status,2,c
  6241  001400  EF04  F00A         	goto	u11981
  6242  001404  EF06  F00A         	goto	u11980
  6243  001408                     u11981:
  6244  001408  EF43  F00A         	goto	l9001
  6245  00140C                     u11980:
  6246  00140C                     l8991:
  6247                           
  6248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6249  00140C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6250  001410  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6251  001414  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  6252  001418  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  6253  00141C  0E01               	movlw	1
  6254  00141E  264C               	addwf	??_vfpfcnvrt^0,f,c
  6255  001420  0E00               	movlw	0
  6256  001422  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6257  001424  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6258  001428  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6259  00142C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6260  00142C  6AF8               	clrf	tblptru,c
  6261  00142E                     	endif
  6262  00142E                     	if	0	;tblptru may be non-zero
  6263  00142E                     	endif
  6264  00142E  0008               	tblrd		*
  6265  001430  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6266  001434                     
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6268  001434  0E02               	movlw	2
  6269  001436  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6270  00143A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6271  00143E  26DE               	addwf	postinc2,f,c
  6272  001440  0E00               	movlw	0
  6273  001442  22DD               	addwfc	postdec2,f,c
  6274  001444                     
  6275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6276  001444  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6277  001448  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6278  00144C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6279  001450  0E02               	movlw	2
  6280  001452  26DE               	addwf	postinc2,f,c
  6281  001454  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6282  001458  0E00               	movlw	0
  6283  00145A  22DD               	addwfc	postdec2,f,c
  6284  00145C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6285  001460  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6286  001464  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  6287  001468  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  6288  00146C  C04E  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6289  001470  C04F  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6290  001474  0100               	movlb	0	; () banked
  6291  001476  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6292  001478  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6293  00147A  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6294  00147C  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6295  00147E  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6296  001480  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6297  001482  EFE5  F008         	goto	l8955
  6298  001486                     l9001:
  6299                           
  6300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6301  001486  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6302  00148A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6303  00148E  CFDE FFF6          	movff	postinc2,tblptrl
  6304  001492  CFDD FFF7          	movff	postdec2,tblptrh
  6305  001496                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6306  001496  6AF8               	clrf	tblptru,c
  6307  001498                     	endif
  6308  001498                     	if	0	;tblptru may be non-zero
  6309  001498                     	endif
  6310  001498  0008               	tblrd		*
  6311  00149A  50F5               	movf	tablat,w,c
  6312  00149C  0A25               	xorlw	37
  6313  00149E  A4D8               	btfss	status,2,c
  6314  0014A0  EF54  F00A         	goto	u11991
  6315  0014A4  EF56  F00A         	goto	u11990
  6316  0014A8                     u11991:
  6317  0014A8  EF6D  F00A         	goto	l9011
  6318  0014AC                     u11990:
  6319  0014AC                     
  6320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6321  0014AC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6322  0014B0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6323  0014B4  2ADE               	incf	postinc2,f,c
  6324  0014B6  0E00               	movlw	0
  6325  0014B8  22DD               	addwfc	postdec2,f,c
  6326  0014BA                     
  6327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6328  0014BA  0E00               	movlw	0
  6329  0014BC  6E05               	movwf	(fputc@c+1)^0,c
  6330  0014BE  0E25               	movlw	37
  6331  0014C0  6E04               	movwf	fputc@c^0,c
  6332  0014C2  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6333  0014C6  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6334  0014CA  EC2D  F028         	call	_fputc	;wreg free
  6335  0014CE                     l9007:
  6336                           
  6337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6338  0014CE  0E00               	movlw	0
  6339  0014D0  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  6340  0014D2  0E01               	movlw	1
  6341  0014D4  6E46               	movwf	?_vfpfcnvrt^0,c
  6342  0014D6  EF92  F00A         	goto	l742
  6343  0014DA                     l9011:
  6344                           
  6345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6346  0014DA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6347  0014DE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6348  0014E2  2ADE               	incf	postinc2,f,c
  6349  0014E4  0E00               	movlw	0
  6350  0014E6  22DD               	addwfc	postdec2,f,c
  6351  0014E8  EF04  F006         	goto	l8863
  6352  0014EC                     l9017:
  6353                           
  6354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6355  0014EC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6356  0014F0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6357  0014F4  CFDE FFF6          	movff	postinc2,tblptrl
  6358  0014F8  CFDD FFF7          	movff	postdec2,tblptrh
  6359  0014FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6360  0014FC  6AF8               	clrf	tblptru,c
  6361  0014FE                     	endif
  6362  0014FE                     	if	0	;tblptru may be non-zero
  6363  0014FE                     	endif
  6364  0014FE  0008               	tblrd		*
  6365  001500  50F5               	movf	tablat,w,c
  6366  001502  6E04               	movwf	fputc@c^0,c
  6367  001504  6A05               	clrf	(fputc@c+1)^0,c
  6368  001506  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6369  00150A  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6370  00150E  EC2D  F028         	call	_fputc	;wreg free
  6371  001512                     
  6372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6373  001512  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6374  001516  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6375  00151A  2ADE               	incf	postinc2,f,c
  6376  00151C  0E00               	movlw	0
  6377  00151E  22DD               	addwfc	postdec2,f,c
  6378  001520  EF67  F00A         	goto	l9007
  6379  001524                     l742:
  6380  001524  0012               	return		;funcret
  6381  001526                     __end_of_vfpfcnvrt:
  6382                           	opt callstack 0
  6383                           
  6384 ;; *************** function _xtoa *****************
  6385 ;; Defined at:
  6386 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6389 ;;		 -> vsnprintf@f(6), 
  6390 ;;  d               8   32[COMRAM] unsigned long long 
  6391 ;;  x               1   40[COMRAM] unsigned char 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;  n               8   57[COMRAM] unsigned long long 
  6394 ;;  c               2   67[COMRAM] int 
  6395 ;;  i               2   65[COMRAM] int 
  6396 ;;  w               2   55[COMRAM] int 
  6397 ;;  p               2   53[COMRAM] int 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2   30[COMRAM] int 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6407 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6408 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6409 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6410 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6411 ;;Total ram usage:       39 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    8
  6414 ;; This function calls:
  6415 ;;		_isalpha
  6416 ;;		_isupper
  6417 ;;		_pad
  6418 ;;		_toupper
  6419 ;; This function is called by:
  6420 ;;		_vfpfcnvrt
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text5
  6425  0033C6                     __ptext5:
  6426                           	opt callstack 0
  6427  0033C6                     _xtoa:
  6428                           	opt callstack 18
  6429  0033C6                     
  6430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6431  0033C6  BE59               	btfsc	(_prec+1)^0,7,c
  6432  0033C8  EFE8  F019         	goto	u11171
  6433  0033CC  EFEA  F019         	goto	u11170
  6434  0033D0                     u11171:
  6435  0033D0  EFEC  F019         	goto	l8537
  6436  0033D4                     u11170:
  6437  0033D4                     
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6439  0033D4  0100               	movlb	0	; () banked
  6440  0033D6  93F6               	bcf	_flags& (0+255),1,b
  6441  0033D8                     l8537:
  6442                           
  6443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6444  0033D8  BE59               	btfsc	(_prec+1)^0,7,c
  6445  0033DA  EFF9  F019         	goto	u11180
  6446  0033DE  5059               	movf	(_prec+1)^0,w,c
  6447  0033E0  E106               	bnz	u11181
  6448  0033E2  0458               	decf	_prec^0,w,c
  6449  0033E4  B0D8               	btfsc	status,0,c
  6450  0033E6  EFF7  F019         	goto	u11181
  6451  0033EA  EFF9  F019         	goto	u11180
  6452  0033EE                     u11181:
  6453  0033EE  EFFF  F019         	goto	l678
  6454  0033F2                     u11180:
  6455  0033F2  0E00               	movlw	0
  6456  0033F4  6E37               	movwf	(xtoa@p+1)^0,c
  6457  0033F6  0E01               	movlw	1
  6458  0033F8  6E36               	movwf	xtoa@p^0,c
  6459  0033FA  EF03  F01A         	goto	l680
  6460  0033FE                     l678:
  6461  0033FE  C058  F036         	movff	_prec,xtoa@p
  6462  003402  C059  F037         	movff	_prec+1,xtoa@p+1
  6463  003406                     l680:
  6464                           
  6465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6466  003406  C0F4  F038         	movff	_width,xtoa@w
  6467  00340A  C0F5  F039         	movff	_width+1,xtoa@w+1
  6468                           
  6469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6470  00340E  0100               	movlb	0	; () banked
  6471  003410  A9F6               	btfss	_flags& (0+255),4,b
  6472  003412  EF0D  F01A         	goto	u11191
  6473  003416  EF0F  F01A         	goto	u11190
  6474  00341A                     u11191:
  6475  00341A  EF13  F01A         	goto	l8543
  6476  00341E                     u11190:
  6477  00341E                     
  6478                           ; BSR set to: 0
  6479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6480  00341E  0EFE               	movlw	254
  6481  003420  2638               	addwf	xtoa@w^0,f,c
  6482  003422  0EFF               	movlw	255
  6483  003424  2239               	addwfc	(xtoa@w+1)^0,f,c
  6484  003426                     l8543:
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6488  003426  C021  F03A         	movff	xtoa@d,xtoa@n
  6489  00342A  C022  F03B         	movff	xtoa@d+1,xtoa@n+1
  6490  00342E  C023  F03C         	movff	xtoa@d+2,xtoa@n+2
  6491  003432  C024  F03D         	movff	xtoa@d+3,xtoa@n+3
  6492  003436  C025  F03E         	movff	xtoa@d+4,xtoa@n+4
  6493  00343A  C026  F03F         	movff	xtoa@d+5,xtoa@n+5
  6494  00343E  C027  F040         	movff	xtoa@d+6,xtoa@n+6
  6495  003442  C028  F041         	movff	xtoa@d+7,xtoa@n+7
  6496  003446                     
  6497                           ; BSR set to: 0
  6498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6499  003446  0E00               	movlw	0
  6500  003448  6E43               	movwf	(xtoa@i+1)^0,c
  6501  00344A  0E4F               	movlw	79
  6502  00344C  6E42               	movwf	xtoa@i^0,c
  6503  00344E                     
  6504                           ; BSR set to: 0
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6506  00344E  0E00               	movlw	0
  6507  003450  0101               	movlb	1	; () banked
  6508  003452  6FB3               	movwf	(_dbuf+79)& (0+255),b
  6509                           
  6510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6511  003454  EFDF  F01A         	goto	l8579
  6512  003458                     l8549:
  6513                           
  6514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6515  003458  0642               	decf	xtoa@i^0,f,c
  6516  00345A  A0D8               	btfss	status,0,c
  6517  00345C  0643               	decf	(xtoa@i+1)^0,f,c
  6518  00345E                     
  6519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6520  00345E  0E0F               	movlw	15
  6521  003460  143A               	andwf	xtoa@n^0,w,c
  6522  003462  6E44               	movwf	xtoa@c^0,c
  6523  003464  6A45               	clrf	(xtoa@c+1)^0,c
  6524  003466                     
  6525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6526  003466  BE45               	btfsc	(xtoa@c+1)^0,7,c
  6527  003468  EF3F  F01A         	goto	u11201
  6528  00346C  5045               	movf	(xtoa@c+1)^0,w,c
  6529  00346E  E109               	bnz	u11200
  6530  003470  0E0A               	movlw	10
  6531  003472  5C44               	subwf	xtoa@c^0,w,c
  6532  003474  A0D8               	btfss	status,0,c
  6533  003476  EF3F  F01A         	goto	u11201
  6534  00347A  EF41  F01A         	goto	u11200
  6535  00347E                     u11201:
  6536  00347E  EF49  F01A         	goto	l8557
  6537  003482                     u11200:
  6538  003482  0E57               	movlw	87
  6539  003484  2444               	addwf	xtoa@c^0,w,c
  6540  003486  6E44               	movwf	xtoa@c^0,c
  6541  003488  0E00               	movlw	0
  6542  00348A  2045               	addwfc	(xtoa@c+1)^0,w,c
  6543  00348C  6E45               	movwf	(xtoa@c+1)^0,c
  6544  00348E  EF4F  F01A         	goto	l687
  6545  003492                     l8557:
  6546  003492  0E30               	movlw	48
  6547  003494  2444               	addwf	xtoa@c^0,w,c
  6548  003496  6E44               	movwf	xtoa@c^0,c
  6549  003498  0E00               	movlw	0
  6550  00349A  2045               	addwfc	(xtoa@c+1)^0,w,c
  6551  00349C  6E45               	movwf	(xtoa@c+1)^0,c
  6552  00349E                     l687:
  6553  00349E  0EBF               	movlw	191
  6554  0034A0  6E2A               	movwf	??_xtoa^0,c
  6555  0034A2  0EFF               	movlw	255
  6556  0034A4  6E2B               	movwf	(??_xtoa+1)^0,c
  6557  0034A6  5029               	movf	xtoa@x^0,w,c
  6558  0034A8  6E2C               	movwf	(??_xtoa+2)^0,c
  6559  0034AA  6A2D               	clrf	(??_xtoa+3)^0,c
  6560  0034AC  502A               	movf	??_xtoa^0,w,c
  6561  0034AE  262C               	addwf	(??_xtoa+2)^0,f,c
  6562  0034B0  502B               	movf	(??_xtoa+1)^0,w,c
  6563  0034B2  222D               	addwfc	(??_xtoa+3)^0,f,c
  6564  0034B4  502D               	movf	(??_xtoa+3)^0,w,c
  6565  0034B6  E10A               	bnz	u11210
  6566  0034B8  0E1A               	movlw	26
  6567  0034BA  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6568  0034BC  A0D8               	btfss	status,0,c
  6569  0034BE  EF63  F01A         	goto	u11211
  6570  0034C2  EF66  F01A         	goto	u11210
  6571  0034C6                     u11211:
  6572  0034C6  0E01               	movlw	1
  6573  0034C8  EF67  F01A         	goto	u11220
  6574  0034CC                     u11210:
  6575  0034CC  0E00               	movlw	0
  6576  0034CE                     u11220:
  6577  0034CE  6E32               	movwf	_xtoa$1373^0,c
  6578  0034D0  6A33               	clrf	(_xtoa$1373+1)^0,c
  6579  0034D2  5032               	movf	_xtoa$1373^0,w,c
  6580  0034D4  1033               	iorwf	(_xtoa$1373+1)^0,w,c
  6581  0034D6  B4D8               	btfsc	status,2,c
  6582  0034D8  EF70  F01A         	goto	u11231
  6583  0034DC  EF72  F01A         	goto	u11230
  6584  0034E0                     u11231:
  6585  0034E0  EFA2  F01A         	goto	l8571
  6586  0034E4                     u11230:
  6587  0034E4  0E9F               	movlw	159
  6588  0034E6  6E2A               	movwf	??_xtoa^0,c
  6589  0034E8  0EFF               	movlw	255
  6590  0034EA  6E2B               	movwf	(??_xtoa+1)^0,c
  6591  0034EC  0E20               	movlw	32
  6592  0034EE  1044               	iorwf	xtoa@c^0,w,c
  6593  0034F0  6E2C               	movwf	(??_xtoa+2)^0,c
  6594  0034F2  0E00               	movlw	0
  6595  0034F4  1045               	iorwf	(xtoa@c+1)^0,w,c
  6596  0034F6  6E2D               	movwf	(??_xtoa+3)^0,c
  6597  0034F8  502A               	movf	??_xtoa^0,w,c
  6598  0034FA  262C               	addwf	(??_xtoa+2)^0,f,c
  6599  0034FC  502B               	movf	(??_xtoa+1)^0,w,c
  6600  0034FE  222D               	addwfc	(??_xtoa+3)^0,f,c
  6601  003500  502D               	movf	(??_xtoa+3)^0,w,c
  6602  003502  E10A               	bnz	u11240
  6603  003504  0E1A               	movlw	26
  6604  003506  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6605  003508  A0D8               	btfss	status,0,c
  6606  00350A  EF89  F01A         	goto	u11241
  6607  00350E  EF8C  F01A         	goto	u11240
  6608  003512                     u11241:
  6609  003512  0E01               	movlw	1
  6610  003514  EF8D  F01A         	goto	u11250
  6611  003518                     u11240:
  6612  003518  0E00               	movlw	0
  6613  00351A                     u11250:
  6614  00351A  6E34               	movwf	_xtoa$1374^0,c
  6615  00351C  6A35               	clrf	(_xtoa$1374+1)^0,c
  6616  00351E  5034               	movf	_xtoa$1374^0,w,c
  6617  003520  1035               	iorwf	(_xtoa$1374+1)^0,w,c
  6618  003522  B4D8               	btfsc	status,2,c
  6619  003524  EF96  F01A         	goto	u11261
  6620  003528  EF98  F01A         	goto	u11260
  6621  00352C                     u11261:
  6622  00352C  EFA2  F01A         	goto	l8571
  6623  003530                     u11260:
  6624  003530                     
  6625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6626  003530  C044  F00A         	movff	xtoa@c,toupper@c
  6627  003534  C045  F00B         	movff	xtoa@c+1,toupper@c+1
  6628  003538  ECFF  F02A         	call	_toupper	;wreg free
  6629  00353C  C00A  F044         	movff	?_toupper,xtoa@c
  6630  003540  C00B  F045         	movff	?_toupper+1,xtoa@c+1
  6631  003544                     l8571:
  6632                           
  6633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6634  003544  0E64               	movlw	low _dbuf
  6635  003546  2442               	addwf	xtoa@i^0,w,c
  6636  003548  6ED9               	movwf	fsr2l,c
  6637  00354A  0E01               	movlw	high _dbuf
  6638  00354C  2043               	addwfc	(xtoa@i+1)^0,w,c
  6639  00354E  6EDA               	movwf	fsr2h,c
  6640  003550  C044  FFDF         	movff	xtoa@c,indf2
  6641  003554                     
  6642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6643  003554  0636               	decf	xtoa@p^0,f,c
  6644  003556  A0D8               	btfss	status,0,c
  6645  003558  0637               	decf	(xtoa@p+1)^0,f,c
  6646  00355A                     
  6647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6648  00355A  0638               	decf	xtoa@w^0,f,c
  6649  00355C  A0D8               	btfss	status,0,c
  6650  00355E  0639               	decf	(xtoa@w+1)^0,f,c
  6651  003560                     
  6652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6653  003560  C03A  F02A         	movff	xtoa@n,??_xtoa
  6654  003564  C03B  F02B         	movff	xtoa@n+1,??_xtoa+1
  6655  003568  C03C  F02C         	movff	xtoa@n+2,??_xtoa+2
  6656  00356C  C03D  F02D         	movff	xtoa@n+3,??_xtoa+3
  6657  003570  C03E  F02E         	movff	xtoa@n+4,??_xtoa+4
  6658  003574  C03F  F02F         	movff	xtoa@n+5,??_xtoa+5
  6659  003578  C040  F030         	movff	xtoa@n+6,??_xtoa+6
  6660  00357C  C041  F031         	movff	xtoa@n+7,??_xtoa+7
  6661  003580  0E05               	movlw	5
  6662  003582  EFCC  F01A         	goto	u11270
  6663  003586                     u11275:
  6664  003586  90D8               	bcf	status,0,c
  6665  003588  3231               	rrcf	(??_xtoa+7)^0,f,c
  6666  00358A  3230               	rrcf	(??_xtoa+6)^0,f,c
  6667  00358C  322F               	rrcf	(??_xtoa+5)^0,f,c
  6668  00358E  322E               	rrcf	(??_xtoa+4)^0,f,c
  6669  003590  322D               	rrcf	(??_xtoa+3)^0,f,c
  6670  003592  322C               	rrcf	(??_xtoa+2)^0,f,c
  6671  003594  322B               	rrcf	(??_xtoa+1)^0,f,c
  6672  003596  322A               	rrcf	??_xtoa^0,f,c
  6673  003598                     u11270:
  6674  003598  2EE8               	decfsz	wreg,f,c
  6675  00359A  EFC3  F01A         	goto	u11275
  6676  00359E  C02A  F03A         	movff	??_xtoa,xtoa@n
  6677  0035A2  C02B  F03B         	movff	??_xtoa+1,xtoa@n+1
  6678  0035A6  C02C  F03C         	movff	??_xtoa+2,xtoa@n+2
  6679  0035AA  C02D  F03D         	movff	??_xtoa+3,xtoa@n+3
  6680  0035AE  C02E  F03E         	movff	??_xtoa+4,xtoa@n+4
  6681  0035B2  C02F  F03F         	movff	??_xtoa+5,xtoa@n+5
  6682  0035B6  C030  F040         	movff	??_xtoa+6,xtoa@n+6
  6683  0035BA  C031  F041         	movff	??_xtoa+7,xtoa@n+7
  6684  0035BE                     l8579:
  6685                           
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6687  0035BE  BE43               	btfsc	(xtoa@i+1)^0,7,c
  6688  0035C0  EFEB  F01A         	goto	u11281
  6689  0035C4  5043               	movf	(xtoa@i+1)^0,w,c
  6690  0035C6  E109               	bnz	u11280
  6691  0035C8  0E02               	movlw	2
  6692  0035CA  5C42               	subwf	xtoa@i^0,w,c
  6693  0035CC  A0D8               	btfss	status,0,c
  6694  0035CE  EFEB  F01A         	goto	u11281
  6695  0035D2  EFED  F01A         	goto	u11280
  6696  0035D6                     u11281:
  6697  0035D6  EF1E  F01B         	goto	l701
  6698  0035DA                     u11280:
  6699  0035DA  503A               	movf	xtoa@n^0,w,c
  6700  0035DC  103B               	iorwf	(xtoa@n+1)^0,w,c
  6701  0035DE  103C               	iorwf	(xtoa@n+2)^0,w,c
  6702  0035E0  103D               	iorwf	(xtoa@n+3)^0,w,c
  6703  0035E2  103E               	iorwf	(xtoa@n+4)^0,w,c
  6704  0035E4  103F               	iorwf	(xtoa@n+5)^0,w,c
  6705  0035E6  1040               	iorwf	(xtoa@n+6)^0,w,c
  6706  0035E8  1041               	iorwf	(xtoa@n+7)^0,w,c
  6707  0035EA  A4D8               	btfss	status,2,c
  6708  0035EC  EFFA  F01A         	goto	u11291
  6709  0035F0  EFFC  F01A         	goto	u11290
  6710  0035F4                     u11291:
  6711  0035F4  EF2C  F01A         	goto	l8549
  6712  0035F8                     u11290:
  6713  0035F8  BE37               	btfsc	(xtoa@p+1)^0,7,c
  6714  0035FA  EF09  F01B         	goto	u11300
  6715  0035FE  5037               	movf	(xtoa@p+1)^0,w,c
  6716  003600  E106               	bnz	u11301
  6717  003602  0436               	decf	xtoa@p^0,w,c
  6718  003604  B0D8               	btfsc	status,0,c
  6719  003606  EF07  F01B         	goto	u11301
  6720  00360A  EF09  F01B         	goto	u11300
  6721  00360E                     u11301:
  6722  00360E  EF2C  F01A         	goto	l8549
  6723  003612                     u11300:
  6724  003612  BE39               	btfsc	(xtoa@w+1)^0,7,c
  6725  003614  EF14  F01B         	goto	u11311
  6726  003618  5039               	movf	(xtoa@w+1)^0,w,c
  6727  00361A  E108               	bnz	u11310
  6728  00361C  0438               	decf	xtoa@w^0,w,c
  6729  00361E  A0D8               	btfss	status,0,c
  6730  003620  EF14  F01B         	goto	u11311
  6731  003624  EF16  F01B         	goto	u11310
  6732  003628                     u11311:
  6733  003628  EF1E  F01B         	goto	l701
  6734  00362C                     u11310:
  6735  00362C  0100               	movlb	0	; () banked
  6736  00362E  B3F6               	btfsc	_flags& (0+255),1,b
  6737  003630  EF1C  F01B         	goto	u11321
  6738  003634  EF1E  F01B         	goto	u11320
  6739  003638                     u11321:
  6740  003638  EF2C  F01A         	goto	l8549
  6741  00363C                     u11320:
  6742  00363C                     l701:
  6743                           
  6744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6745  00363C  0100               	movlb	0	; () banked
  6746  00363E  A9F6               	btfss	_flags& (0+255),4,b
  6747  003640  EF24  F01B         	goto	u11331
  6748  003644  EF26  F01B         	goto	u11330
  6749  003648                     u11331:
  6750  003648  EF3C  F01B         	goto	l8595
  6751  00364C                     u11330:
  6752  00364C                     
  6753                           ; BSR set to: 0
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6755  00364C  0642               	decf	xtoa@i^0,f,c
  6756  00364E  A0D8               	btfss	status,0,c
  6757  003650  0643               	decf	(xtoa@i+1)^0,f,c
  6758  003652                     
  6759                           ; BSR set to: 0
  6760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6761  003652  0E64               	movlw	low _dbuf
  6762  003654  2442               	addwf	xtoa@i^0,w,c
  6763  003656  6ED9               	movwf	fsr2l,c
  6764  003658  0E01               	movlw	high _dbuf
  6765  00365A  2043               	addwfc	(xtoa@i+1)^0,w,c
  6766  00365C  6EDA               	movwf	fsr2h,c
  6767  00365E  C029  FFDF         	movff	xtoa@x,indf2
  6768  003662                     
  6769                           ; BSR set to: 0
  6770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6771  003662  0642               	decf	xtoa@i^0,f,c
  6772  003664  A0D8               	btfss	status,0,c
  6773  003666  0643               	decf	(xtoa@i+1)^0,f,c
  6774                           
  6775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6776  003668  0E64               	movlw	low _dbuf
  6777  00366A  2442               	addwf	xtoa@i^0,w,c
  6778  00366C  6ED9               	movwf	fsr2l,c
  6779  00366E  0E01               	movlw	high _dbuf
  6780  003670  2043               	addwfc	(xtoa@i+1)^0,w,c
  6781  003672  6EDA               	movwf	fsr2h,c
  6782  003674  0E30               	movlw	48
  6783  003676  6EDF               	movwf	indf2,c
  6784  003678                     l8595:
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6788  003678  C01F  F014         	movff	xtoa@fp,pad@fp
  6789  00367C  C020  F015         	movff	xtoa@fp+1,pad@fp+1
  6790  003680  0E64               	movlw	low _dbuf
  6791  003682  2442               	addwf	xtoa@i^0,w,c
  6792  003684  6E16               	movwf	pad@buf^0,c
  6793  003686  0E01               	movlw	high _dbuf
  6794  003688  2043               	addwfc	(xtoa@i+1)^0,w,c
  6795  00368A  6E17               	movwf	(pad@buf+1)^0,c
  6796  00368C  C038  F018         	movff	xtoa@w,pad@p
  6797  003690  C039  F019         	movff	xtoa@w+1,pad@p+1
  6798  003694  EC92  F028         	call	_pad	;wreg free
  6799  003698  C014  F01F         	movff	?_pad,?_xtoa
  6800  00369C  C015  F020         	movff	?_pad+1,?_xtoa+1
  6801  0036A0  0012               	return		;funcret
  6802  0036A2                     __end_of_xtoa:
  6803                           	opt callstack 0
  6804                           
  6805 ;; *************** function _toupper *****************
  6806 ;; Defined at:
  6807 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  c               2    9[COMRAM] int 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  2    9[COMRAM] int 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;Total ram usage:        8 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    5
  6828 ;; This function calls:
  6829 ;;		_islower
  6830 ;; This function is called by:
  6831 ;;		_xtoa
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text6
  6836  0055FE                     __ptext6:
  6837                           	opt callstack 0
  6838  0055FE                     _toupper:
  6839                           	opt callstack 20
  6840  0055FE  0E9F               	movlw	159
  6841  005600  6E0C               	movwf	??_toupper^0,c
  6842  005602  0EFF               	movlw	255
  6843  005604  6E0D               	movwf	(??_toupper+1)^0,c
  6844  005606  C00A  F00E         	movff	toupper@c,??_toupper+2
  6845  00560A  C00B  F00F         	movff	toupper@c+1,??_toupper+3
  6846  00560E  500C               	movf	??_toupper^0,w,c
  6847  005610  260E               	addwf	(??_toupper+2)^0,f,c
  6848  005612  500D               	movf	(??_toupper+1)^0,w,c
  6849  005614  220F               	addwfc	(??_toupper+3)^0,f,c
  6850  005616  500F               	movf	(??_toupper+3)^0,w,c
  6851  005618  E10A               	bnz	u9260
  6852  00561A  0E1A               	movlw	26
  6853  00561C  5C0E               	subwf	(??_toupper+2)^0,w,c
  6854  00561E  A0D8               	btfss	status,0,c
  6855  005620  EF14  F02B         	goto	u9261
  6856  005624  EF17  F02B         	goto	u9260
  6857  005628                     u9261:
  6858  005628  0E01               	movlw	1
  6859  00562A  EF18  F02B         	goto	u9270
  6860  00562E                     u9260:
  6861  00562E  0E00               	movlw	0
  6862  005630                     u9270:
  6863  005630  6E10               	movwf	_toupper$2109^0,c
  6864  005632  6A11               	clrf	(_toupper$2109+1)^0,c
  6865  005634  5010               	movf	_toupper$2109^0,w,c
  6866  005636  1011               	iorwf	(_toupper$2109+1)^0,w,c
  6867  005638  B4D8               	btfsc	status,2,c
  6868  00563A  EF21  F02B         	goto	u9281
  6869  00563E  EF23  F02B         	goto	u9280
  6870  005642                     u9281:
  6871  005642  EF29  F02B         	goto	l1626
  6872  005646                     u9280:
  6873  005646  0E5F               	movlw	95
  6874  005648  140A               	andwf	toupper@c^0,w,c
  6875  00564A  6E0A               	movwf	?_toupper^0,c
  6876  00564C  6A0B               	clrf	(?_toupper+1)^0,c
  6877  00564E  EF2D  F02B         	goto	l1631
  6878  005652                     l1626:
  6879  005652  C00A  F00A         	movff	toupper@c,?_toupper
  6880  005656  C00B  F00B         	movff	toupper@c+1,?_toupper+1
  6881  00565A                     l1631:
  6882  00565A  0012               	return		;funcret
  6883  00565C                     __end_of_toupper:
  6884                           	opt callstack 0
  6885                           
  6886 ;; *************** function _islower *****************
  6887 ;; Defined at:
  6888 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  c               2    3[COMRAM] int 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  2    3[COMRAM] int 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6905 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6906 ;;Total ram usage:        6 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    4
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_toupper
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text7
  6917  005A70                     __ptext7:
  6918                           	opt callstack 0
  6919  005A70                     _islower:
  6920                           	opt callstack 20
  6921  005A70  0E9F               	movlw	159
  6922  005A72  6E06               	movwf	??_islower^0,c
  6923  005A74  0EFF               	movlw	255
  6924  005A76  6E07               	movwf	(??_islower+1)^0,c
  6925  005A78  C004  F008         	movff	islower@c,??_islower+2
  6926  005A7C  C005  F009         	movff	islower@c+1,??_islower+3
  6927  005A80  5006               	movf	??_islower^0,w,c
  6928  005A82  2608               	addwf	(??_islower+2)^0,f,c
  6929  005A84  5007               	movf	(??_islower+1)^0,w,c
  6930  005A86  2209               	addwfc	(??_islower+3)^0,f,c
  6931  005A88  5009               	movf	(??_islower+3)^0,w,c
  6932  005A8A  E10A               	bnz	u8950
  6933  005A8C  0E1A               	movlw	26
  6934  005A8E  5C08               	subwf	(??_islower+2)^0,w,c
  6935  005A90  A0D8               	btfss	status,0,c
  6936  005A92  EF4D  F02D         	goto	u8951
  6937  005A96  EF50  F02D         	goto	u8950
  6938  005A9A                     u8951:
  6939  005A9A  0E01               	movlw	1
  6940  005A9C  EF51  F02D         	goto	u8960
  6941  005AA0                     u8950:
  6942  005AA0  0E00               	movlw	0
  6943  005AA2                     u8960:
  6944  005AA2  6E04               	movwf	?_islower^0,c
  6945  005AA4  6A05               	clrf	(?_islower+1)^0,c
  6946  005AA6  0012               	return		;funcret
  6947  005AA8                     __end_of_islower:
  6948                           	opt callstack 0
  6949                           
  6950 ;; *************** function _isalpha *****************
  6951 ;; Defined at:
  6952 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  c               2    3[COMRAM] int 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;		None
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2    3[COMRAM] int 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;Total ram usage:        6 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    4
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_xtoa
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text8
  6981  0059FA                     __ptext8:
  6982                           	opt callstack 0
  6983  0059FA                     _isalpha:
  6984                           	opt callstack 21
  6985  0059FA  0E9F               	movlw	159
  6986  0059FC  6E06               	movwf	??_isalpha^0,c
  6987  0059FE  0EFF               	movlw	255
  6988  005A00  6E07               	movwf	(??_isalpha+1)^0,c
  6989  005A02  0E20               	movlw	32
  6990  005A04  1004               	iorwf	isalpha@c^0,w,c
  6991  005A06  6E08               	movwf	(??_isalpha+2)^0,c
  6992  005A08  0E00               	movlw	0
  6993  005A0A  1005               	iorwf	(isalpha@c+1)^0,w,c
  6994  005A0C  6E09               	movwf	(??_isalpha+3)^0,c
  6995  005A0E  5006               	movf	??_isalpha^0,w,c
  6996  005A10  2608               	addwf	(??_isalpha+2)^0,f,c
  6997  005A12  5007               	movf	(??_isalpha+1)^0,w,c
  6998  005A14  2209               	addwfc	(??_isalpha+3)^0,f,c
  6999  005A16  5009               	movf	(??_isalpha+3)^0,w,c
  7000  005A18  E10A               	bnz	u9240
  7001  005A1A  0E1A               	movlw	26
  7002  005A1C  5C08               	subwf	(??_isalpha+2)^0,w,c
  7003  005A1E  A0D8               	btfss	status,0,c
  7004  005A20  EF14  F02D         	goto	u9241
  7005  005A24  EF17  F02D         	goto	u9240
  7006  005A28                     u9241:
  7007  005A28  0E01               	movlw	1
  7008  005A2A  EF18  F02D         	goto	u9250
  7009  005A2E                     u9240:
  7010  005A2E  0E00               	movlw	0
  7011  005A30                     u9250:
  7012  005A30  6E04               	movwf	?_isalpha^0,c
  7013  005A32  6A05               	clrf	(?_isalpha+1)^0,c
  7014  005A34  0012               	return		;funcret
  7015  005A36                     __end_of_isalpha:
  7016                           	opt callstack 0
  7017                           
  7018 ;; *************** function _utoa *****************
  7019 ;; Defined at:
  7020 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7023 ;;		 -> vsnprintf@f(6), 
  7024 ;;  d               8   32[COMRAM] unsigned long long 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  n               8   52[COMRAM] unsigned long long 
  7027 ;;  i               2   60[COMRAM] int 
  7028 ;;  w               2   50[COMRAM] int 
  7029 ;;  p               2   48[COMRAM] int 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  2   30[COMRAM] int 
  7032 ;; Registers used:
  7033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7039 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7042 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7043 ;;Total ram usage:       32 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    8
  7046 ;; This function calls:
  7047 ;;		___lodiv
  7048 ;;		___lomod
  7049 ;;		_pad
  7050 ;; This function is called by:
  7051 ;;		_vfpfcnvrt
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text9
  7056  003AFC                     __ptext9:
  7057                           	opt callstack 0
  7058  003AFC                     _utoa:
  7059                           	opt callstack 18
  7060  003AFC                     
  7061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7062  003AFC  BE59               	btfsc	(_prec+1)^0,7,c
  7063  003AFE  EF83  F01D         	goto	u11101
  7064  003B02  EF85  F01D         	goto	u11100
  7065  003B06                     u11101:
  7066  003B06  EF87  F01D         	goto	l8501
  7067  003B0A                     u11100:
  7068  003B0A                     
  7069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7070  003B0A  0100               	movlb	0	; () banked
  7071  003B0C  93F6               	bcf	_flags& (0+255),1,b
  7072  003B0E                     l8501:
  7073                           
  7074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7075  003B0E  BE59               	btfsc	(_prec+1)^0,7,c
  7076  003B10  EF94  F01D         	goto	u11110
  7077  003B14  5059               	movf	(_prec+1)^0,w,c
  7078  003B16  E106               	bnz	u11111
  7079  003B18  0458               	decf	_prec^0,w,c
  7080  003B1A  B0D8               	btfsc	status,0,c
  7081  003B1C  EF92  F01D         	goto	u11111
  7082  003B20  EF94  F01D         	goto	u11110
  7083  003B24                     u11111:
  7084  003B24  EF9A  F01D         	goto	l663
  7085  003B28                     u11110:
  7086  003B28  0E00               	movlw	0
  7087  003B2A  6E32               	movwf	(utoa@p+1)^0,c
  7088  003B2C  0E01               	movlw	1
  7089  003B2E  6E31               	movwf	utoa@p^0,c
  7090  003B30  EF9E  F01D         	goto	l665
  7091  003B34                     l663:
  7092  003B34  C058  F031         	movff	_prec,utoa@p
  7093  003B38  C059  F032         	movff	_prec+1,utoa@p+1
  7094  003B3C                     l665:
  7095                           
  7096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7097  003B3C  C0F4  F033         	movff	_width,utoa@w
  7098  003B40  C0F5  F034         	movff	_width+1,utoa@w+1
  7099                           
  7100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7101  003B44  C021  F035         	movff	utoa@d,utoa@n
  7102  003B48  C022  F036         	movff	utoa@d+1,utoa@n+1
  7103  003B4C  C023  F037         	movff	utoa@d+2,utoa@n+2
  7104  003B50  C024  F038         	movff	utoa@d+3,utoa@n+3
  7105  003B54  C025  F039         	movff	utoa@d+4,utoa@n+4
  7106  003B58  C026  F03A         	movff	utoa@d+5,utoa@n+5
  7107  003B5C  C027  F03B         	movff	utoa@d+6,utoa@n+6
  7108  003B60  C028  F03C         	movff	utoa@d+7,utoa@n+7
  7109  003B64                     
  7110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7111  003B64  0E00               	movlw	0
  7112  003B66  6E3E               	movwf	(utoa@i+1)^0,c
  7113  003B68  0E4F               	movlw	79
  7114  003B6A  6E3D               	movwf	utoa@i^0,c
  7115  003B6C                     
  7116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7117  003B6C  0E00               	movlw	0
  7118  003B6E  0101               	movlb	1	; () banked
  7119  003B70  6FB3               	movwf	(_dbuf+79)& (0+255),b
  7120                           
  7121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7122  003B72  EF31  F01E         	goto	l8519
  7123  003B76                     l8509:
  7124                           
  7125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7126  003B76  063D               	decf	utoa@i^0,f,c
  7127  003B78  A0D8               	btfss	status,0,c
  7128  003B7A  063E               	decf	(utoa@i+1)^0,f,c
  7129  003B7C                     
  7130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7131  003B7C  0E64               	movlw	low _dbuf
  7132  003B7E  243D               	addwf	utoa@i^0,w,c
  7133  003B80  6ED9               	movwf	fsr2l,c
  7134  003B82  0E01               	movlw	high _dbuf
  7135  003B84  203E               	addwfc	(utoa@i+1)^0,w,c
  7136  003B86  6EDA               	movwf	fsr2h,c
  7137  003B88  C035  F004         	movff	utoa@n,___lomod@dividend
  7138  003B8C  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  7139  003B90  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  7140  003B94  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  7141  003B98  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  7142  003B9C  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  7143  003BA0  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  7144  003BA4  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  7145  003BA8  0E0A               	movlw	10
  7146  003BAA  6E0C               	movwf	___lomod@divisor^0,c
  7147  003BAC  0E00               	movlw	0
  7148  003BAE  6E0D               	movwf	(___lomod@divisor+1)^0,c
  7149  003BB0  0E00               	movlw	0
  7150  003BB2  6E0E               	movwf	(___lomod@divisor+2)^0,c
  7151  003BB4  0E00               	movlw	0
  7152  003BB6  6E0F               	movwf	(___lomod@divisor+3)^0,c
  7153  003BB8  0E00               	movlw	0
  7154  003BBA  6E10               	movwf	(___lomod@divisor+4)^0,c
  7155  003BBC  0E00               	movlw	0
  7156  003BBE  6E11               	movwf	(___lomod@divisor+5)^0,c
  7157  003BC0  0E00               	movlw	0
  7158  003BC2  6E12               	movwf	(___lomod@divisor+6)^0,c
  7159  003BC4  0E00               	movlw	0
  7160  003BC6  6E13               	movwf	(___lomod@divisor+7)^0,c
  7161  003BC8  ECC5  F027         	call	___lomod	;wreg free
  7162  003BCC  C004  F029         	movff	?___lomod,??_utoa
  7163  003BD0  C005  F02A         	movff	?___lomod+1,??_utoa+1
  7164  003BD4  C006  F02B         	movff	?___lomod+2,??_utoa+2
  7165  003BD8  C007  F02C         	movff	?___lomod+3,??_utoa+3
  7166  003BDC  C008  F02D         	movff	?___lomod+4,??_utoa+4
  7167  003BE0  C009  F02E         	movff	?___lomod+5,??_utoa+5
  7168  003BE4  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  7169  003BE8  C00B  F030         	movff	?___lomod+7,??_utoa+7
  7170  003BEC  5029               	movf	??_utoa^0,w,c
  7171  003BEE  0F30               	addlw	48
  7172  003BF0  6EDF               	movwf	indf2,c
  7173  003BF2                     
  7174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7175  003BF2  0631               	decf	utoa@p^0,f,c
  7176  003BF4  A0D8               	btfss	status,0,c
  7177  003BF6  0632               	decf	(utoa@p+1)^0,f,c
  7178  003BF8                     
  7179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7180  003BF8  0633               	decf	utoa@w^0,f,c
  7181  003BFA  A0D8               	btfss	status,0,c
  7182  003BFC  0634               	decf	(utoa@w+1)^0,f,c
  7183  003BFE                     
  7184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7185  003BFE  C035  F004         	movff	utoa@n,___lodiv@dividend
  7186  003C02  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  7187  003C06  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  7188  003C0A  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  7189  003C0E  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  7190  003C12  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  7191  003C16  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  7192  003C1A  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  7193  003C1E  0E0A               	movlw	10
  7194  003C20  6E0C               	movwf	___lodiv@divisor^0,c
  7195  003C22  0E00               	movlw	0
  7196  003C24  6E0D               	movwf	(___lodiv@divisor+1)^0,c
  7197  003C26  0E00               	movlw	0
  7198  003C28  6E0E               	movwf	(___lodiv@divisor+2)^0,c
  7199  003C2A  0E00               	movlw	0
  7200  003C2C  6E0F               	movwf	(___lodiv@divisor+3)^0,c
  7201  003C2E  0E00               	movlw	0
  7202  003C30  6E10               	movwf	(___lodiv@divisor+4)^0,c
  7203  003C32  0E00               	movlw	0
  7204  003C34  6E11               	movwf	(___lodiv@divisor+5)^0,c
  7205  003C36  0E00               	movlw	0
  7206  003C38  6E12               	movwf	(___lodiv@divisor+6)^0,c
  7207  003C3A  0E00               	movlw	0
  7208  003C3C  6E13               	movwf	(___lodiv@divisor+7)^0,c
  7209  003C3E  EC4D  F027         	call	___lodiv	;wreg free
  7210  003C42  C004  F035         	movff	?___lodiv,utoa@n
  7211  003C46  C005  F036         	movff	?___lodiv+1,utoa@n+1
  7212  003C4A  C006  F037         	movff	?___lodiv+2,utoa@n+2
  7213  003C4E  C007  F038         	movff	?___lodiv+3,utoa@n+3
  7214  003C52  C008  F039         	movff	?___lodiv+4,utoa@n+4
  7215  003C56  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  7216  003C5A  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  7217  003C5E  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  7218  003C62                     l8519:
  7219                           
  7220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7221  003C62  503D               	movf	utoa@i^0,w,c
  7222  003C64  103E               	iorwf	(utoa@i+1)^0,w,c
  7223  003C66  B4D8               	btfsc	status,2,c
  7224  003C68  EF38  F01E         	goto	u11121
  7225  003C6C  EF3A  F01E         	goto	u11120
  7226  003C70                     u11121:
  7227  003C70  EF6B  F01E         	goto	l8529
  7228  003C74                     u11120:
  7229  003C74  5035               	movf	utoa@n^0,w,c
  7230  003C76  1036               	iorwf	(utoa@n+1)^0,w,c
  7231  003C78  1037               	iorwf	(utoa@n+2)^0,w,c
  7232  003C7A  1038               	iorwf	(utoa@n+3)^0,w,c
  7233  003C7C  1039               	iorwf	(utoa@n+4)^0,w,c
  7234  003C7E  103A               	iorwf	(utoa@n+5)^0,w,c
  7235  003C80  103B               	iorwf	(utoa@n+6)^0,w,c
  7236  003C82  103C               	iorwf	(utoa@n+7)^0,w,c
  7237  003C84  A4D8               	btfss	status,2,c
  7238  003C86  EF47  F01E         	goto	u11131
  7239  003C8A  EF49  F01E         	goto	u11130
  7240  003C8E                     u11131:
  7241  003C8E  EFBB  F01D         	goto	l8509
  7242  003C92                     u11130:
  7243  003C92  BE32               	btfsc	(utoa@p+1)^0,7,c
  7244  003C94  EF56  F01E         	goto	u11140
  7245  003C98  5032               	movf	(utoa@p+1)^0,w,c
  7246  003C9A  E106               	bnz	u11141
  7247  003C9C  0431               	decf	utoa@p^0,w,c
  7248  003C9E  B0D8               	btfsc	status,0,c
  7249  003CA0  EF54  F01E         	goto	u11141
  7250  003CA4  EF56  F01E         	goto	u11140
  7251  003CA8                     u11141:
  7252  003CA8  EFBB  F01D         	goto	l8509
  7253  003CAC                     u11140:
  7254  003CAC  BE34               	btfsc	(utoa@w+1)^0,7,c
  7255  003CAE  EF61  F01E         	goto	u11151
  7256  003CB2  5034               	movf	(utoa@w+1)^0,w,c
  7257  003CB4  E108               	bnz	u11150
  7258  003CB6  0433               	decf	utoa@w^0,w,c
  7259  003CB8  A0D8               	btfss	status,0,c
  7260  003CBA  EF61  F01E         	goto	u11151
  7261  003CBE  EF63  F01E         	goto	u11150
  7262  003CC2                     u11151:
  7263  003CC2  EF6B  F01E         	goto	l8529
  7264  003CC6                     u11150:
  7265  003CC6  0100               	movlb	0	; () banked
  7266  003CC8  B3F6               	btfsc	_flags& (0+255),1,b
  7267  003CCA  EF69  F01E         	goto	u11161
  7268  003CCE  EF6B  F01E         	goto	u11160
  7269  003CD2                     u11161:
  7270  003CD2  EFBB  F01D         	goto	l8509
  7271  003CD6                     u11160:
  7272  003CD6                     l8529:
  7273                           
  7274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7275  003CD6  C01F  F014         	movff	utoa@fp,pad@fp
  7276  003CDA  C020  F015         	movff	utoa@fp+1,pad@fp+1
  7277  003CDE  0E64               	movlw	low _dbuf
  7278  003CE0  243D               	addwf	utoa@i^0,w,c
  7279  003CE2  6E16               	movwf	pad@buf^0,c
  7280  003CE4  0E01               	movlw	high _dbuf
  7281  003CE6  203E               	addwfc	(utoa@i+1)^0,w,c
  7282  003CE8  6E17               	movwf	(pad@buf+1)^0,c
  7283  003CEA  C033  F018         	movff	utoa@w,pad@p
  7284  003CEE  C034  F019         	movff	utoa@w+1,pad@p+1
  7285  003CF2  EC92  F028         	call	_pad	;wreg free
  7286  003CF6  C014  F01F         	movff	?_pad,?_utoa
  7287  003CFA  C015  F020         	movff	?_pad+1,?_utoa+1
  7288  003CFE  0012               	return		;funcret
  7289  003D00                     __end_of_utoa:
  7290                           	opt callstack 0
  7291                           
  7292 ;; *************** function ___lomod *****************
  7293 ;; Defined at:
  7294 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  dividend        8    3[COMRAM] unsigned long long 
  7297 ;;  divisor         8   11[COMRAM] unsigned long long 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  counter         1   19[COMRAM] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  8    3[COMRAM] unsigned long long 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7309 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;Total ram usage:       17 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    4
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_utoa
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text10
  7324  004F8A                     __ptext10:
  7325                           	opt callstack 0
  7326  004F8A                     ___lomod:
  7327                           	opt callstack 21
  7328  004F8A  500C               	movf	___lomod@divisor^0,w,c
  7329  004F8C  100D               	iorwf	(___lomod@divisor+1)^0,w,c
  7330  004F8E  100E               	iorwf	(___lomod@divisor+2)^0,w,c
  7331  004F90  100F               	iorwf	(___lomod@divisor+3)^0,w,c
  7332  004F92  1010               	iorwf	(___lomod@divisor+4)^0,w,c
  7333  004F94  1011               	iorwf	(___lomod@divisor+5)^0,w,c
  7334  004F96  1012               	iorwf	(___lomod@divisor+6)^0,w,c
  7335  004F98  1013               	iorwf	(___lomod@divisor+7)^0,w,c
  7336  004F9A  B4D8               	btfsc	status,2,c
  7337  004F9C  EFD2  F027         	goto	u10181
  7338  004FA0  EFD4  F027         	goto	u10180
  7339  004FA4                     u10181:
  7340  004FA4  EF1C  F028         	goto	l1246
  7341  004FA8                     u10180:
  7342  004FA8  0E01               	movlw	1
  7343  004FAA  6E14               	movwf	___lomod@counter^0,c
  7344  004FAC  EFE2  F027         	goto	l8011
  7345  004FB0                     l8009:
  7346  004FB0  90D8               	bcf	status,0,c
  7347  004FB2  360C               	rlcf	___lomod@divisor^0,f,c
  7348  004FB4  360D               	rlcf	(___lomod@divisor+1)^0,f,c
  7349  004FB6  360E               	rlcf	(___lomod@divisor+2)^0,f,c
  7350  004FB8  360F               	rlcf	(___lomod@divisor+3)^0,f,c
  7351  004FBA  3610               	rlcf	(___lomod@divisor+4)^0,f,c
  7352  004FBC  3611               	rlcf	(___lomod@divisor+5)^0,f,c
  7353  004FBE  3612               	rlcf	(___lomod@divisor+6)^0,f,c
  7354  004FC0  3613               	rlcf	(___lomod@divisor+7)^0,f,c
  7355  004FC2  2A14               	incf	___lomod@counter^0,f,c
  7356  004FC4                     l8011:
  7357  004FC4  AE13               	btfss	(___lomod@divisor+7)^0,7,c
  7358  004FC6  EFE7  F027         	goto	u10191
  7359  004FCA  EFE9  F027         	goto	u10190
  7360  004FCE                     u10191:
  7361  004FCE  EFD8  F027         	goto	l8009
  7362  004FD2                     u10190:
  7363  004FD2                     l8013:
  7364  004FD2  500C               	movf	___lomod@divisor^0,w,c
  7365  004FD4  5C04               	subwf	___lomod@dividend^0,w,c
  7366  004FD6  500D               	movf	(___lomod@divisor+1)^0,w,c
  7367  004FD8  5805               	subwfb	(___lomod@dividend+1)^0,w,c
  7368  004FDA  500E               	movf	(___lomod@divisor+2)^0,w,c
  7369  004FDC  5806               	subwfb	(___lomod@dividend+2)^0,w,c
  7370  004FDE  500F               	movf	(___lomod@divisor+3)^0,w,c
  7371  004FE0  5807               	subwfb	(___lomod@dividend+3)^0,w,c
  7372  004FE2  5010               	movf	(___lomod@divisor+4)^0,w,c
  7373  004FE4  5808               	subwfb	(___lomod@dividend+4)^0,w,c
  7374  004FE6  5011               	movf	(___lomod@divisor+5)^0,w,c
  7375  004FE8  5809               	subwfb	(___lomod@dividend+5)^0,w,c
  7376  004FEA  5012               	movf	(___lomod@divisor+6)^0,w,c
  7377  004FEC  580A               	subwfb	(___lomod@dividend+6)^0,w,c
  7378  004FEE  5013               	movf	(___lomod@divisor+7)^0,w,c
  7379  004FF0  580B               	subwfb	(___lomod@dividend+7)^0,w,c
  7380  004FF2  A0D8               	btfss	status,0,c
  7381  004FF4  EFFE  F027         	goto	u10201
  7382  004FF8  EF00  F028         	goto	u10200
  7383  004FFC                     u10201:
  7384  004FFC  EF10  F028         	goto	l8017
  7385  005000                     u10200:
  7386  005000  500C               	movf	___lomod@divisor^0,w,c
  7387  005002  5E04               	subwf	___lomod@dividend^0,f,c
  7388  005004  500D               	movf	(___lomod@divisor+1)^0,w,c
  7389  005006  5A05               	subwfb	(___lomod@dividend+1)^0,f,c
  7390  005008  500E               	movf	(___lomod@divisor+2)^0,w,c
  7391  00500A  5A06               	subwfb	(___lomod@dividend+2)^0,f,c
  7392  00500C  500F               	movf	(___lomod@divisor+3)^0,w,c
  7393  00500E  5A07               	subwfb	(___lomod@dividend+3)^0,f,c
  7394  005010  5010               	movf	(___lomod@divisor+4)^0,w,c
  7395  005012  5A08               	subwfb	(___lomod@dividend+4)^0,f,c
  7396  005014  5011               	movf	(___lomod@divisor+5)^0,w,c
  7397  005016  5A09               	subwfb	(___lomod@dividend+5)^0,f,c
  7398  005018  5012               	movf	(___lomod@divisor+6)^0,w,c
  7399  00501A  5A0A               	subwfb	(___lomod@dividend+6)^0,f,c
  7400  00501C  5013               	movf	(___lomod@divisor+7)^0,w,c
  7401  00501E  5A0B               	subwfb	(___lomod@dividend+7)^0,f,c
  7402  005020                     l8017:
  7403  005020  90D8               	bcf	status,0,c
  7404  005022  3213               	rrcf	(___lomod@divisor+7)^0,f,c
  7405  005024  3212               	rrcf	(___lomod@divisor+6)^0,f,c
  7406  005026  3211               	rrcf	(___lomod@divisor+5)^0,f,c
  7407  005028  3210               	rrcf	(___lomod@divisor+4)^0,f,c
  7408  00502A  320F               	rrcf	(___lomod@divisor+3)^0,f,c
  7409  00502C  320E               	rrcf	(___lomod@divisor+2)^0,f,c
  7410  00502E  320D               	rrcf	(___lomod@divisor+1)^0,f,c
  7411  005030  320C               	rrcf	___lomod@divisor^0,f,c
  7412  005032  2E14               	decfsz	___lomod@counter^0,f,c
  7413  005034  EFE9  F027         	goto	l8013
  7414  005038                     l1246:
  7415  005038  C004  F004         	movff	___lomod@dividend,?___lomod
  7416  00503C  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  7417  005040  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  7418  005044  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  7419  005048  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  7420  00504C  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  7421  005050  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  7422  005054  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  7423  005058  0012               	return		;funcret
  7424  00505A                     __end_of___lomod:
  7425                           	opt callstack 0
  7426                           
  7427 ;; *************** function ___lodiv *****************
  7428 ;; Defined at:
  7429 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  dividend        8    3[COMRAM] unsigned long long 
  7432 ;;  divisor         8   11[COMRAM] unsigned long long 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  quotient        8   19[COMRAM] unsigned long long 
  7435 ;;  counter         1   27[COMRAM] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  8    3[COMRAM] unsigned long long 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7445 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7446 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;Total ram usage:       25 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    4
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_utoa
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text11
  7460  004E9A                     __ptext11:
  7461                           	opt callstack 0
  7462  004E9A                     ___lodiv:
  7463                           	opt callstack 21
  7464  004E9A  EE20  F014         	lfsr	2,___lodiv@quotient
  7465  004E9E  0E07               	movlw	7
  7466  004EA0                     u10141:
  7467  004EA0  6ADE               	clrf	postinc2,c
  7468  004EA2  06E8               	decf	wreg,f,c
  7469  004EA4  E2FD               	bc	u10141
  7470  004EA6  500C               	movf	___lodiv@divisor^0,w,c
  7471  004EA8  100D               	iorwf	(___lodiv@divisor+1)^0,w,c
  7472  004EAA  100E               	iorwf	(___lodiv@divisor+2)^0,w,c
  7473  004EAC  100F               	iorwf	(___lodiv@divisor+3)^0,w,c
  7474  004EAE  1010               	iorwf	(___lodiv@divisor+4)^0,w,c
  7475  004EB0  1011               	iorwf	(___lodiv@divisor+5)^0,w,c
  7476  004EB2  1012               	iorwf	(___lodiv@divisor+6)^0,w,c
  7477  004EB4  1013               	iorwf	(___lodiv@divisor+7)^0,w,c
  7478  004EB6  B4D8               	btfsc	status,2,c
  7479  004EB8  EF60  F027         	goto	u10151
  7480  004EBC  EF62  F027         	goto	u10150
  7481  004EC0                     u10151:
  7482  004EC0  EFB4  F027         	goto	l1236
  7483  004EC4                     u10150:
  7484  004EC4  0E01               	movlw	1
  7485  004EC6  6E1C               	movwf	___lodiv@counter^0,c
  7486  004EC8  EF70  F027         	goto	l7991
  7487  004ECC                     l7989:
  7488  004ECC  90D8               	bcf	status,0,c
  7489  004ECE  360C               	rlcf	___lodiv@divisor^0,f,c
  7490  004ED0  360D               	rlcf	(___lodiv@divisor+1)^0,f,c
  7491  004ED2  360E               	rlcf	(___lodiv@divisor+2)^0,f,c
  7492  004ED4  360F               	rlcf	(___lodiv@divisor+3)^0,f,c
  7493  004ED6  3610               	rlcf	(___lodiv@divisor+4)^0,f,c
  7494  004ED8  3611               	rlcf	(___lodiv@divisor+5)^0,f,c
  7495  004EDA  3612               	rlcf	(___lodiv@divisor+6)^0,f,c
  7496  004EDC  3613               	rlcf	(___lodiv@divisor+7)^0,f,c
  7497  004EDE  2A1C               	incf	___lodiv@counter^0,f,c
  7498  004EE0                     l7991:
  7499  004EE0  AE13               	btfss	(___lodiv@divisor+7)^0,7,c
  7500  004EE2  EF75  F027         	goto	u10161
  7501  004EE6  EF77  F027         	goto	u10160
  7502  004EEA                     u10161:
  7503  004EEA  EF66  F027         	goto	l7989
  7504  004EEE                     u10160:
  7505  004EEE                     l7993:
  7506  004EEE  90D8               	bcf	status,0,c
  7507  004EF0  3614               	rlcf	___lodiv@quotient^0,f,c
  7508  004EF2  3615               	rlcf	(___lodiv@quotient+1)^0,f,c
  7509  004EF4  3616               	rlcf	(___lodiv@quotient+2)^0,f,c
  7510  004EF6  3617               	rlcf	(___lodiv@quotient+3)^0,f,c
  7511  004EF8  3618               	rlcf	(___lodiv@quotient+4)^0,f,c
  7512  004EFA  3619               	rlcf	(___lodiv@quotient+5)^0,f,c
  7513  004EFC  361A               	rlcf	(___lodiv@quotient+6)^0,f,c
  7514  004EFE  361B               	rlcf	(___lodiv@quotient+7)^0,f,c
  7515  004F00  500C               	movf	___lodiv@divisor^0,w,c
  7516  004F02  5C04               	subwf	___lodiv@dividend^0,w,c
  7517  004F04  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7518  004F06  5805               	subwfb	(___lodiv@dividend+1)^0,w,c
  7519  004F08  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7520  004F0A  5806               	subwfb	(___lodiv@dividend+2)^0,w,c
  7521  004F0C  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7522  004F0E  5807               	subwfb	(___lodiv@dividend+3)^0,w,c
  7523  004F10  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7524  004F12  5808               	subwfb	(___lodiv@dividend+4)^0,w,c
  7525  004F14  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7526  004F16  5809               	subwfb	(___lodiv@dividend+5)^0,w,c
  7527  004F18  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7528  004F1A  580A               	subwfb	(___lodiv@dividend+6)^0,w,c
  7529  004F1C  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7530  004F1E  580B               	subwfb	(___lodiv@dividend+7)^0,w,c
  7531  004F20  A0D8               	btfss	status,0,c
  7532  004F22  EF95  F027         	goto	u10171
  7533  004F26  EF97  F027         	goto	u10170
  7534  004F2A                     u10171:
  7535  004F2A  EFA8  F027         	goto	l8001
  7536  004F2E                     u10170:
  7537  004F2E  500C               	movf	___lodiv@divisor^0,w,c
  7538  004F30  5E04               	subwf	___lodiv@dividend^0,f,c
  7539  004F32  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7540  004F34  5A05               	subwfb	(___lodiv@dividend+1)^0,f,c
  7541  004F36  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7542  004F38  5A06               	subwfb	(___lodiv@dividend+2)^0,f,c
  7543  004F3A  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7544  004F3C  5A07               	subwfb	(___lodiv@dividend+3)^0,f,c
  7545  004F3E  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7546  004F40  5A08               	subwfb	(___lodiv@dividend+4)^0,f,c
  7547  004F42  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7548  004F44  5A09               	subwfb	(___lodiv@dividend+5)^0,f,c
  7549  004F46  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7550  004F48  5A0A               	subwfb	(___lodiv@dividend+6)^0,f,c
  7551  004F4A  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7552  004F4C  5A0B               	subwfb	(___lodiv@dividend+7)^0,f,c
  7553  004F4E  8014               	bsf	___lodiv@quotient^0,0,c
  7554  004F50                     l8001:
  7555  004F50  90D8               	bcf	status,0,c
  7556  004F52  3213               	rrcf	(___lodiv@divisor+7)^0,f,c
  7557  004F54  3212               	rrcf	(___lodiv@divisor+6)^0,f,c
  7558  004F56  3211               	rrcf	(___lodiv@divisor+5)^0,f,c
  7559  004F58  3210               	rrcf	(___lodiv@divisor+4)^0,f,c
  7560  004F5A  320F               	rrcf	(___lodiv@divisor+3)^0,f,c
  7561  004F5C  320E               	rrcf	(___lodiv@divisor+2)^0,f,c
  7562  004F5E  320D               	rrcf	(___lodiv@divisor+1)^0,f,c
  7563  004F60  320C               	rrcf	___lodiv@divisor^0,f,c
  7564  004F62  2E1C               	decfsz	___lodiv@counter^0,f,c
  7565  004F64  EF77  F027         	goto	l7993
  7566  004F68                     l1236:
  7567  004F68  C014  F004         	movff	___lodiv@quotient,?___lodiv
  7568  004F6C  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  7569  004F70  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  7570  004F74  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  7571  004F78  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  7572  004F7C  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  7573  004F80  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  7574  004F84  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  7575  004F88  0012               	return		;funcret
  7576  004F8A                     __end_of___lodiv:
  7577                           	opt callstack 0
  7578                           
  7579 ;; *************** function _strncmp *****************
  7580 ;; Defined at:
  7581 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  7584 ;;		 -> vfpfcnvrt@ct(3), STR_3(16), STR_2(17), 
  7585 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  7586 ;;		 -> STR_113(3), STR_109(3), STR_104(3), STR_100(3), 
  7587 ;;		 -> STR_95(4), STR_91(4), STR_86(3), STR_81(3), 
  7588 ;;		 -> STR_76(4), STR_71(3), STR_66(3), STR_61(4), 
  7589 ;;		 -> STR_56(3), STR_51(3), STR_46(4), STR_41(3), 
  7590 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  7591 ;;		 -> STR_18(4), STR_14(4), 
  7592 ;;  n               2    7[COMRAM] unsigned int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  r               2   12[COMRAM] PTR const unsigned char 
  7595 ;;		 -> STR_113(3), STR_109(3), STR_104(3), STR_100(3), 
  7596 ;;		 -> STR_95(4), STR_91(4), STR_86(3), STR_81(3), 
  7597 ;;		 -> STR_76(4), STR_71(3), STR_66(3), STR_61(4), 
  7598 ;;		 -> STR_56(3), STR_51(3), STR_46(4), STR_41(3), 
  7599 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  7600 ;;		 -> STR_18(4), STR_14(4), 
  7601 ;;  l               2   10[COMRAM] PTR const unsigned char 
  7602 ;;		 -> vfpfcnvrt@ct(3), STR_3(16), STR_2(17), 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  2    3[COMRAM] int 
  7605 ;; Registers used:
  7606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7612 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7613 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7615 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;Total ram usage:       11 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    4
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_vfpfcnvrt
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text12
  7627  00495C                     __ptext12:
  7628                           	opt callstack 0
  7629  00495C                     _strncmp:
  7630                           	opt callstack 22
  7631  00495C  C004  F00B         	movff	strncmp@_l,strncmp@l
  7632  004960  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  7633  004964  C006  F00D         	movff	strncmp@_r,strncmp@r
  7634  004968  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  7635  00496C  0608               	decf	strncmp@n^0,f,c
  7636  00496E  A0D8               	btfss	status,0,c
  7637  004970  0609               	decf	(strncmp@n+1)^0,f,c
  7638  004972  2808               	incf	strncmp@n^0,w,c
  7639  004974  E106               	bnz	u11411
  7640  004976  2809               	incf	(strncmp@n+1)^0,w,c
  7641  004978  A4D8               	btfss	status,2,c
  7642  00497A  EFC1  F024         	goto	u11411
  7643  00497E  EFC3  F024         	goto	u11410
  7644  004982                     u11411:
  7645  004982  EFD0  F024         	goto	l8649
  7646  004986                     u11410:
  7647  004986  0E00               	movlw	0
  7648  004988  6E05               	movwf	(?_strncmp+1)^0,c
  7649  00498A  0E00               	movlw	0
  7650  00498C  6E04               	movwf	?_strncmp^0,c
  7651  00498E  EF40  F025         	goto	l1603
  7652  004992                     l8647:
  7653  004992  4A0B               	infsnz	strncmp@l^0,f,c
  7654  004994  2A0C               	incf	(strncmp@l+1)^0,f,c
  7655  004996  4A0D               	infsnz	strncmp@r^0,f,c
  7656  004998  2A0E               	incf	(strncmp@r+1)^0,f,c
  7657  00499A  0608               	decf	strncmp@n^0,f,c
  7658  00499C  A0D8               	btfss	status,0,c
  7659  00499E  0609               	decf	(strncmp@n+1)^0,f,c
  7660  0049A0                     l8649:
  7661  0049A0  C00B  FFF6         	movff	strncmp@l,tblptrl
  7662  0049A4  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7663  0049A8  0E00               	movlw	low (__mediumconst shr (0+16))
  7664  0049AA  6EF8               	movwf	tblptru,c
  7665  0049AC  0E0E               	movlw	(high __ramtop+-1)
  7666  0049AE  64F7               	cpfsgt	tblptrh,c
  7667  0049B0  D003               	bra	u11427
  7668  0049B2  0008               	tblrd		*
  7669  0049B4  50F5               	movf	tablat,w,c
  7670  0049B6  D005               	bra	u11420
  7671  0049B8                     u11427:
  7672  0049B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7673  0049BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7674  0049C0  50E7               	movf	indf1,w,c
  7675  0049C2                     u11420:
  7676  0049C2  0900               	iorlw	0
  7677  0049C4  B4D8               	btfsc	status,2,c
  7678  0049C6  EFE7  F024         	goto	u11431
  7679  0049CA  EFE9  F024         	goto	u11430
  7680  0049CE                     u11431:
  7681  0049CE  EF22  F025         	goto	l8657
  7682  0049D2                     u11430:
  7683  0049D2  C00D  FFF6         	movff	strncmp@r,tblptrl
  7684  0049D6  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7685  0049DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7686  0049DA  6AF8               	clrf	tblptru,c
  7687  0049DC                     	endif
  7688  0049DC                     	if	0	;tblptru may be non-zero
  7689  0049DC                     	endif
  7690  0049DC  0008               	tblrd		*
  7691  0049DE  50F5               	movf	tablat,w,c
  7692  0049E0  0900               	iorlw	0
  7693  0049E2  B4D8               	btfsc	status,2,c
  7694  0049E4  EFF6  F024         	goto	u11441
  7695  0049E8  EFF8  F024         	goto	u11440
  7696  0049EC                     u11441:
  7697  0049EC  EF22  F025         	goto	l8657
  7698  0049F0                     u11440:
  7699  0049F0  5008               	movf	strncmp@n^0,w,c
  7700  0049F2  1009               	iorwf	(strncmp@n+1)^0,w,c
  7701  0049F4  B4D8               	btfsc	status,2,c
  7702  0049F6  EFFF  F024         	goto	u11451
  7703  0049FA  EF01  F025         	goto	u11450
  7704  0049FE                     u11451:
  7705  0049FE  EF22  F025         	goto	l8657
  7706  004A02                     u11450:
  7707  004A02  C00D  FFF6         	movff	strncmp@r,tblptrl
  7708  004A06  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7709  004A0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7710  004A0A  6AF8               	clrf	tblptru,c
  7711  004A0C                     	endif
  7712  004A0C                     	if	0	;tblptru may be non-zero
  7713  004A0C                     	endif
  7714  004A0C  0008               	tblrd		*
  7715  004A0E  CFF5 F00A          	movff	tablat,??_strncmp
  7716  004A12  C00B  FFF6         	movff	strncmp@l,tblptrl
  7717  004A16  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7718  004A1A  0E00               	movlw	low (__mediumconst shr (0+16))
  7719  004A1C  6EF8               	movwf	tblptru,c
  7720  004A1E  0E0E               	movlw	(high __ramtop+-1)
  7721  004A20  64F7               	cpfsgt	tblptrh,c
  7722  004A22  D003               	bra	u11467
  7723  004A24  0008               	tblrd		*
  7724  004A26  50F5               	movf	tablat,w,c
  7725  004A28  D005               	bra	u11465
  7726  004A2A                     u11467:
  7727  004A2A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7728  004A2E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7729  004A32  50E7               	movf	indf1,w,c
  7730  004A34                     u11465:
  7731  004A34  180A               	xorwf	??_strncmp^0,w,c
  7732  004A36  B4D8               	btfsc	status,2,c
  7733  004A38  EF20  F025         	goto	u11461
  7734  004A3C  EF22  F025         	goto	u11460
  7735  004A40                     u11461:
  7736  004A40  EFC9  F024         	goto	l8647
  7737  004A44                     u11460:
  7738  004A44                     l8657:
  7739  004A44  C00B  FFF6         	movff	strncmp@l,tblptrl
  7740  004A48  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7741  004A4C  0E00               	movlw	low (__mediumconst shr (0+16))
  7742  004A4E  6EF8               	movwf	tblptru,c
  7743  004A50  0E0E               	movlw	(high __ramtop+-1)
  7744  004A52  64F7               	cpfsgt	tblptrh,c
  7745  004A54  D003               	bra	u11477
  7746  004A56  0008               	tblrd		*
  7747  004A58  50F5               	movf	tablat,w,c
  7748  004A5A  D005               	bra	u11470
  7749  004A5C                     u11477:
  7750  004A5C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7751  004A60  CFF7 FFE2          	movff	tblptrh,fsr1h
  7752  004A64  50E7               	movf	indf1,w,c
  7753  004A66                     u11470:
  7754  004A66  6E0A               	movwf	??_strncmp^0,c
  7755  004A68  C00D  FFF6         	movff	strncmp@r,tblptrl
  7756  004A6C  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7757  004A70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7758  004A70  6AF8               	clrf	tblptru,c
  7759  004A72                     	endif
  7760  004A72                     	if	0	;tblptru may be non-zero
  7761  004A72                     	endif
  7762  004A72  0008               	tblrd		*
  7763  004A74  50F5               	movf	tablat,w,c
  7764  004A76  5C0A               	subwf	??_strncmp^0,w,c
  7765  004A78  6E04               	movwf	?_strncmp^0,c
  7766  004A7A  6A05               	clrf	(?_strncmp+1)^0,c
  7767  004A7C  A0D8               	btfss	status,0,c
  7768  004A7E  0605               	decf	(?_strncmp+1)^0,f,c
  7769  004A80                     l1603:
  7770  004A80  0012               	return		;funcret
  7771  004A82                     __end_of_strncmp:
  7772                           	opt callstack 0
  7773                           
  7774 ;; *************** function _stoa *****************
  7775 ;; Defined at:
  7776 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7779 ;;		 -> vsnprintf@f(6), 
  7780 ;;  s               2   14[COMRAM] PTR unsigned char 
  7781 ;;		 -> ?_snprintf(2), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  nuls            7   17[COMRAM] unsigned char [7]
  7784 ;;  l               2   32[COMRAM] int 
  7785 ;;  p               2   30[COMRAM] int 
  7786 ;;  cp              2   28[COMRAM] PTR unsigned char 
  7787 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7788 ;;  w               2   26[COMRAM] int 
  7789 ;;  i               2   24[COMRAM] int 
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  2   12[COMRAM] int 
  7792 ;; Registers used:
  7793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7800 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7802 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7803 ;;Total ram usage:       22 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:    6
  7806 ;; This function calls:
  7807 ;;		_fputc
  7808 ;;		_strlen
  7809 ;; This function is called by:
  7810 ;;		_vfpfcnvrt
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text13
  7815  0043C6                     __ptext13:
  7816                           	opt callstack 0
  7817  0043C6                     _stoa:
  7818                           	opt callstack 20
  7819  0043C6                     
  7820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7821  0043C6  EE21  F0B4         	lfsr	2,stoa@F1174
  7822  0043CA  EE10  F012         	lfsr	1,stoa@nuls
  7823  0043CE  0E06               	movlw	6
  7824  0043D0                     u11011:
  7825  0043D0  CFDB FFE3          	movff	plusw2,plusw1
  7826  0043D4  06E8               	decf	wreg,f,c
  7827  0043D6  E2FC               	bc	u11011
  7828  0043D8                     
  7829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7830  0043D8  C00F  F01D         	movff	stoa@s,stoa@cp
  7831  0043DC  C010  F01E         	movff	stoa@s+1,stoa@cp+1
  7832  0043E0                     
  7833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7834  0043E0  501D               	movf	stoa@cp^0,w,c
  7835  0043E2  101E               	iorwf	(stoa@cp+1)^0,w,c
  7836  0043E4  A4D8               	btfss	status,2,c
  7837  0043E6  EFF7  F021         	goto	u11021
  7838  0043EA  EFF9  F021         	goto	u11020
  7839  0043EE                     u11021:
  7840  0043EE  EFFD  F021         	goto	l8463
  7841  0043F2                     u11020:
  7842  0043F2                     
  7843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7844  0043F2  0E12               	movlw	low stoa@nuls
  7845  0043F4  6E1D               	movwf	stoa@cp^0,c
  7846  0043F6  0E00               	movlw	high stoa@nuls
  7847  0043F8  6E1E               	movwf	(stoa@cp+1)^0,c
  7848  0043FA                     l8463:
  7849                           
  7850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7851  0043FA  C01D  F004         	movff	stoa@cp,strlen@s
  7852  0043FE  C01E  F005         	movff	stoa@cp+1,strlen@s+1
  7853  004402  ECA8  F02D         	call	_strlen	;wreg free
  7854  004406  C004  F021         	movff	?_strlen,stoa@l
  7855  00440A  C005  F022         	movff	?_strlen+1,stoa@l+1
  7856  00440E                     
  7857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7858  00440E  C058  F01F         	movff	_prec,stoa@p
  7859  004412  C059  F020         	movff	_prec+1,stoa@p+1
  7860  004416                     
  7861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7862  004416  BE20               	btfsc	(stoa@p+1)^0,7,c
  7863  004418  EF10  F022         	goto	u11031
  7864  00441C  EF12  F022         	goto	u11030
  7865  004420                     u11031:
  7866  004420  EF27  F022         	goto	l644
  7867  004424                     u11030:
  7868  004424  5021               	movf	stoa@l^0,w,c
  7869  004426  5C1F               	subwf	stoa@p^0,w,c
  7870  004428  5020               	movf	(stoa@p+1)^0,w,c
  7871  00442A  0A80               	xorlw	128
  7872  00442C  6E11               	movwf	??_stoa^0,c
  7873  00442E  5022               	movf	(stoa@l+1)^0,w,c
  7874  004430  0A80               	xorlw	128
  7875  004432  5811               	subwfb	??_stoa^0,w,c
  7876  004434  A0D8               	btfss	status,0,c
  7877  004436  EF1F  F022         	goto	u11041
  7878  00443A  EF21  F022         	goto	u11040
  7879  00443E                     u11041:
  7880  00443E  EF23  F022         	goto	l642
  7881  004442                     u11040:
  7882  004442  EF27  F022         	goto	l644
  7883  004446                     l642:
  7884  004446  C01F  F021         	movff	stoa@p,stoa@l
  7885  00444A  C020  F022         	movff	stoa@p+1,stoa@l+1
  7886  00444E                     l644:
  7887                           
  7888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7889  00444E  C021  F01F         	movff	stoa@l,stoa@p
  7890  004452  C022  F020         	movff	stoa@l+1,stoa@p+1
  7891                           
  7892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7893  004456  C0F4  F01B         	movff	_width,stoa@w
  7894  00445A  C0F5  F01C         	movff	_width+1,stoa@w+1
  7895                           
  7896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7897  00445E  0100               	movlb	0	; () banked
  7898  004460  B1F6               	btfsc	_flags& (0+255),0,b
  7899  004462  EF35  F022         	goto	u11051
  7900  004466  EF37  F022         	goto	u11050
  7901  00446A                     u11051:
  7902  00446A  EF54  F022         	goto	l8479
  7903  00446E                     u11050:
  7904  00446E  EF45  F022         	goto	l8477
  7905  004472                     l8473:
  7906                           
  7907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7908  004472  0E00               	movlw	0
  7909  004474  6E05               	movwf	(fputc@c+1)^0,c
  7910  004476  0E20               	movlw	32
  7911  004478  6E04               	movwf	fputc@c^0,c
  7912  00447A  C00D  F006         	movff	stoa@fp,fputc@fp
  7913  00447E  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7914  004482  EC2D  F028         	call	_fputc	;wreg free
  7915  004486                     
  7916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7917  004486  4A21               	infsnz	stoa@l^0,f,c
  7918  004488  2A22               	incf	(stoa@l+1)^0,f,c
  7919  00448A                     l8477:
  7920                           
  7921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7922  00448A  501B               	movf	stoa@w^0,w,c
  7923  00448C  5C21               	subwf	stoa@l^0,w,c
  7924  00448E  5022               	movf	(stoa@l+1)^0,w,c
  7925  004490  0A80               	xorlw	128
  7926  004492  6E11               	movwf	??_stoa^0,c
  7927  004494  501C               	movf	(stoa@w+1)^0,w,c
  7928  004496  0A80               	xorlw	128
  7929  004498  5811               	subwfb	??_stoa^0,w,c
  7930  00449A  A0D8               	btfss	status,0,c
  7931  00449C  EF52  F022         	goto	u11061
  7932  0044A0  EF54  F022         	goto	u11060
  7933  0044A4                     u11061:
  7934  0044A4  EF39  F022         	goto	l8473
  7935  0044A8                     u11060:
  7936  0044A8                     l8479:
  7937                           
  7938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7939  0044A8  0E00               	movlw	0
  7940  0044AA  6E1A               	movwf	(stoa@i+1)^0,c
  7941  0044AC  0E00               	movlw	0
  7942  0044AE  6E19               	movwf	stoa@i^0,c
  7943                           
  7944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7945  0044B0  EF6D  F022         	goto	l8487
  7946  0044B4                     l8481:
  7947                           
  7948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7949  0044B4  C01D  FFD9         	movff	stoa@cp,fsr2l
  7950  0044B8  C01E  FFDA         	movff	stoa@cp+1,fsr2h
  7951  0044BC  50DF               	movf	indf2,w,c
  7952  0044BE  6E11               	movwf	??_stoa^0,c
  7953  0044C0  5011               	movf	??_stoa^0,w,c
  7954  0044C2  6E04               	movwf	fputc@c^0,c
  7955  0044C4  6A05               	clrf	(fputc@c+1)^0,c
  7956  0044C6  C00D  F006         	movff	stoa@fp,fputc@fp
  7957  0044CA  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7958  0044CE  EC2D  F028         	call	_fputc	;wreg free
  7959  0044D2                     
  7960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7961  0044D2  4A1D               	infsnz	stoa@cp^0,f,c
  7962  0044D4  2A1E               	incf	(stoa@cp+1)^0,f,c
  7963  0044D6                     
  7964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7965  0044D6  4A19               	infsnz	stoa@i^0,f,c
  7966  0044D8  2A1A               	incf	(stoa@i+1)^0,f,c
  7967  0044DA                     l8487:
  7968                           
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7970  0044DA  501F               	movf	stoa@p^0,w,c
  7971  0044DC  5C19               	subwf	stoa@i^0,w,c
  7972  0044DE  501A               	movf	(stoa@i+1)^0,w,c
  7973  0044E0  0A80               	xorlw	128
  7974  0044E2  6E11               	movwf	??_stoa^0,c
  7975  0044E4  5020               	movf	(stoa@p+1)^0,w,c
  7976  0044E6  0A80               	xorlw	128
  7977  0044E8  5811               	subwfb	??_stoa^0,w,c
  7978  0044EA  A0D8               	btfss	status,0,c
  7979  0044EC  EF7A  F022         	goto	u11071
  7980  0044F0  EF7C  F022         	goto	u11070
  7981  0044F4                     u11071:
  7982  0044F4  EF5A  F022         	goto	l8481
  7983  0044F8                     u11070:
  7984  0044F8                     
  7985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7986  0044F8  0100               	movlb	0	; () banked
  7987  0044FA  A1F6               	btfss	_flags& (0+255),0,b
  7988  0044FC  EF82  F022         	goto	u11081
  7989  004500  EF84  F022         	goto	u11080
  7990  004504                     u11081:
  7991  004504  EFA1  F022         	goto	l654
  7992  004508                     u11080:
  7993  004508  EF92  F022         	goto	l8495
  7994  00450C                     l8491:
  7995                           
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7997  00450C  0E00               	movlw	0
  7998  00450E  6E05               	movwf	(fputc@c+1)^0,c
  7999  004510  0E20               	movlw	32
  8000  004512  6E04               	movwf	fputc@c^0,c
  8001  004514  C00D  F006         	movff	stoa@fp,fputc@fp
  8002  004518  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  8003  00451C  EC2D  F028         	call	_fputc	;wreg free
  8004  004520                     
  8005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8006  004520  4A21               	infsnz	stoa@l^0,f,c
  8007  004522  2A22               	incf	(stoa@l+1)^0,f,c
  8008  004524                     l8495:
  8009                           
  8010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8011  004524  501B               	movf	stoa@w^0,w,c
  8012  004526  5C21               	subwf	stoa@l^0,w,c
  8013  004528  5022               	movf	(stoa@l+1)^0,w,c
  8014  00452A  0A80               	xorlw	128
  8015  00452C  6E11               	movwf	??_stoa^0,c
  8016  00452E  501C               	movf	(stoa@w+1)^0,w,c
  8017  004530  0A80               	xorlw	128
  8018  004532  5811               	subwfb	??_stoa^0,w,c
  8019  004534  A0D8               	btfss	status,0,c
  8020  004536  EF9F  F022         	goto	u11091
  8021  00453A  EFA1  F022         	goto	u11090
  8022  00453E                     u11091:
  8023  00453E  EF86  F022         	goto	l8491
  8024  004542                     u11090:
  8025  004542                     l654:
  8026                           
  8027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8028  004542  C021  F00D         	movff	stoa@l,?_stoa
  8029  004546  C022  F00E         	movff	stoa@l+1,?_stoa+1
  8030  00454A  0012               	return		;funcret
  8031  00454C                     __end_of_stoa:
  8032                           	opt callstack 0
  8033                           
  8034 ;; *************** function _otoa *****************
  8035 ;; Defined at:
  8036 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  8039 ;;		 -> vsnprintf@f(6), 
  8040 ;;  d               8   32[COMRAM] unsigned long long 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  n               8   54[COMRAM] unsigned long long 
  8043 ;;  i               2   62[COMRAM] int 
  8044 ;;  w               2   52[COMRAM] int 
  8045 ;;  t               2   50[COMRAM] int 
  8046 ;;  p               2   48[COMRAM] int 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  2   30[COMRAM] int 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8056 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8058 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8059 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8060 ;;Total ram usage:       34 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    8
  8063 ;; This function calls:
  8064 ;;		_pad
  8065 ;; This function is called by:
  8066 ;;		_vfpfcnvrt
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text14
  8071  003D00                     __ptext14:
  8072                           	opt callstack 0
  8073  003D00                     _otoa:
  8074                           	opt callstack 18
  8075  003D00                     
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8077  003D00  BE59               	btfsc	(_prec+1)^0,7,c
  8078  003D02  EF85  F01E         	goto	u10911
  8079  003D06  EF87  F01E         	goto	u10910
  8080  003D0A                     u10911:
  8081  003D0A  EF89  F01E         	goto	l8411
  8082  003D0E                     u10910:
  8083  003D0E                     
  8084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8085  003D0E  0100               	movlb	0	; () banked
  8086  003D10  93F6               	bcf	_flags& (0+255),1,b
  8087  003D12                     l8411:
  8088                           
  8089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8090  003D12  BE59               	btfsc	(_prec+1)^0,7,c
  8091  003D14  EF96  F01E         	goto	u10920
  8092  003D18  5059               	movf	(_prec+1)^0,w,c
  8093  003D1A  E106               	bnz	u10921
  8094  003D1C  0458               	decf	_prec^0,w,c
  8095  003D1E  B0D8               	btfsc	status,0,c
  8096  003D20  EF94  F01E         	goto	u10921
  8097  003D24  EF96  F01E         	goto	u10920
  8098  003D28                     u10921:
  8099  003D28  EF9C  F01E         	goto	l624
  8100  003D2C                     u10920:
  8101  003D2C  0E00               	movlw	0
  8102  003D2E  6E32               	movwf	(otoa@p+1)^0,c
  8103  003D30  0E01               	movlw	1
  8104  003D32  6E31               	movwf	otoa@p^0,c
  8105  003D34  EFA0  F01E         	goto	l626
  8106  003D38                     l624:
  8107  003D38  C058  F031         	movff	_prec,otoa@p
  8108  003D3C  C059  F032         	movff	_prec+1,otoa@p+1
  8109  003D40                     l626:
  8110                           
  8111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8112  003D40  C0F4  F035         	movff	_width,otoa@w
  8113  003D44  C0F5  F036         	movff	_width+1,otoa@w+1
  8114                           
  8115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8116  003D48  C021  F037         	movff	otoa@d,otoa@n
  8117  003D4C  C022  F038         	movff	otoa@d+1,otoa@n+1
  8118  003D50  C023  F039         	movff	otoa@d+2,otoa@n+2
  8119  003D54  C024  F03A         	movff	otoa@d+3,otoa@n+3
  8120  003D58  C025  F03B         	movff	otoa@d+4,otoa@n+4
  8121  003D5C  C026  F03C         	movff	otoa@d+5,otoa@n+5
  8122  003D60  C027  F03D         	movff	otoa@d+6,otoa@n+6
  8123  003D64  C028  F03E         	movff	otoa@d+7,otoa@n+7
  8124  003D68                     
  8125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8126  003D68  0E00               	movlw	0
  8127  003D6A  6E40               	movwf	(otoa@i+1)^0,c
  8128  003D6C  0E4F               	movlw	79
  8129  003D6E  6E3F               	movwf	otoa@i^0,c
  8130  003D70                     
  8131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8132  003D70  0E00               	movlw	0
  8133  003D72  0101               	movlb	1	; () banked
  8134  003D74  6FB3               	movwf	(_dbuf+79)& (0+255),b
  8135  003D76                     
  8136                           ; BSR set to: 1
  8137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8138  003D76  0E00               	movlw	0
  8139  003D78  6E34               	movwf	(otoa@t+1)^0,c
  8140  003D7A  0E00               	movlw	0
  8141  003D7C  6E33               	movwf	otoa@t^0,c
  8142                           
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8144  003D7E  EF06  F01F         	goto	l8433
  8145  003D82                     l8421:
  8146                           
  8147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8148  003D82  063F               	decf	otoa@i^0,f,c
  8149  003D84  A0D8               	btfss	status,0,c
  8150  003D86  0640               	decf	(otoa@i+1)^0,f,c
  8151  003D88                     
  8152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8153  003D88  0E07               	movlw	7
  8154  003D8A  1437               	andwf	otoa@n^0,w,c
  8155  003D8C  6E33               	movwf	otoa@t^0,c
  8156  003D8E  6A34               	clrf	(otoa@t+1)^0,c
  8157  003D90                     
  8158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8159  003D90  0E64               	movlw	low _dbuf
  8160  003D92  243F               	addwf	otoa@i^0,w,c
  8161  003D94  6ED9               	movwf	fsr2l,c
  8162  003D96  0E01               	movlw	high _dbuf
  8163  003D98  2040               	addwfc	(otoa@i+1)^0,w,c
  8164  003D9A  6EDA               	movwf	fsr2h,c
  8165  003D9C  5033               	movf	otoa@t^0,w,c
  8166  003D9E  0F30               	addlw	48
  8167  003DA0  6EDF               	movwf	indf2,c
  8168  003DA2                     
  8169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8170  003DA2  0631               	decf	otoa@p^0,f,c
  8171  003DA4  A0D8               	btfss	status,0,c
  8172  003DA6  0632               	decf	(otoa@p+1)^0,f,c
  8173  003DA8                     
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8175  003DA8  0635               	decf	otoa@w^0,f,c
  8176  003DAA  A0D8               	btfss	status,0,c
  8177  003DAC  0636               	decf	(otoa@w+1)^0,f,c
  8178  003DAE                     
  8179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8180  003DAE  C037  F029         	movff	otoa@n,??_otoa
  8181  003DB2  C038  F02A         	movff	otoa@n+1,??_otoa+1
  8182  003DB6  C039  F02B         	movff	otoa@n+2,??_otoa+2
  8183  003DBA  C03A  F02C         	movff	otoa@n+3,??_otoa+3
  8184  003DBE  C03B  F02D         	movff	otoa@n+4,??_otoa+4
  8185  003DC2  C03C  F02E         	movff	otoa@n+5,??_otoa+5
  8186  003DC6  C03D  F02F         	movff	otoa@n+6,??_otoa+6
  8187  003DCA  C03E  F030         	movff	otoa@n+7,??_otoa+7
  8188  003DCE  0E04               	movlw	4
  8189  003DD0  EFF3  F01E         	goto	u10930
  8190  003DD4                     u10935:
  8191  003DD4  90D8               	bcf	status,0,c
  8192  003DD6  3230               	rrcf	(??_otoa+7)^0,f,c
  8193  003DD8  322F               	rrcf	(??_otoa+6)^0,f,c
  8194  003DDA  322E               	rrcf	(??_otoa+5)^0,f,c
  8195  003DDC  322D               	rrcf	(??_otoa+4)^0,f,c
  8196  003DDE  322C               	rrcf	(??_otoa+3)^0,f,c
  8197  003DE0  322B               	rrcf	(??_otoa+2)^0,f,c
  8198  003DE2  322A               	rrcf	(??_otoa+1)^0,f,c
  8199  003DE4  3229               	rrcf	??_otoa^0,f,c
  8200  003DE6                     u10930:
  8201  003DE6  2EE8               	decfsz	wreg,f,c
  8202  003DE8  EFEA  F01E         	goto	u10935
  8203  003DEC  C029  F037         	movff	??_otoa,otoa@n
  8204  003DF0  C02A  F038         	movff	??_otoa+1,otoa@n+1
  8205  003DF4  C02B  F039         	movff	??_otoa+2,otoa@n+2
  8206  003DF8  C02C  F03A         	movff	??_otoa+3,otoa@n+3
  8207  003DFC  C02D  F03B         	movff	??_otoa+4,otoa@n+4
  8208  003E00  C02E  F03C         	movff	??_otoa+5,otoa@n+5
  8209  003E04  C02F  F03D         	movff	??_otoa+6,otoa@n+6
  8210  003E08  C030  F03E         	movff	??_otoa+7,otoa@n+7
  8211  003E0C                     l8433:
  8212                           
  8213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8214  003E0C  BE40               	btfsc	(otoa@i+1)^0,7,c
  8215  003E0E  EF11  F01F         	goto	u10941
  8216  003E12  5040               	movf	(otoa@i+1)^0,w,c
  8217  003E14  E108               	bnz	u10940
  8218  003E16  043F               	decf	otoa@i^0,w,c
  8219  003E18  A0D8               	btfss	status,0,c
  8220  003E1A  EF11  F01F         	goto	u10941
  8221  003E1E  EF13  F01F         	goto	u10940
  8222  003E22                     u10941:
  8223  003E22  EF44  F01F         	goto	l633
  8224  003E26                     u10940:
  8225  003E26  5037               	movf	otoa@n^0,w,c
  8226  003E28  1038               	iorwf	(otoa@n+1)^0,w,c
  8227  003E2A  1039               	iorwf	(otoa@n+2)^0,w,c
  8228  003E2C  103A               	iorwf	(otoa@n+3)^0,w,c
  8229  003E2E  103B               	iorwf	(otoa@n+4)^0,w,c
  8230  003E30  103C               	iorwf	(otoa@n+5)^0,w,c
  8231  003E32  103D               	iorwf	(otoa@n+6)^0,w,c
  8232  003E34  103E               	iorwf	(otoa@n+7)^0,w,c
  8233  003E36  A4D8               	btfss	status,2,c
  8234  003E38  EF20  F01F         	goto	u10951
  8235  003E3C  EF22  F01F         	goto	u10950
  8236  003E40                     u10951:
  8237  003E40  EFC1  F01E         	goto	l8421
  8238  003E44                     u10950:
  8239  003E44  BE32               	btfsc	(otoa@p+1)^0,7,c
  8240  003E46  EF2F  F01F         	goto	u10960
  8241  003E4A  5032               	movf	(otoa@p+1)^0,w,c
  8242  003E4C  E106               	bnz	u10961
  8243  003E4E  0431               	decf	otoa@p^0,w,c
  8244  003E50  B0D8               	btfsc	status,0,c
  8245  003E52  EF2D  F01F         	goto	u10961
  8246  003E56  EF2F  F01F         	goto	u10960
  8247  003E5A                     u10961:
  8248  003E5A  EFC1  F01E         	goto	l8421
  8249  003E5E                     u10960:
  8250  003E5E  BE36               	btfsc	(otoa@w+1)^0,7,c
  8251  003E60  EF3A  F01F         	goto	u10971
  8252  003E64  5036               	movf	(otoa@w+1)^0,w,c
  8253  003E66  E108               	bnz	u10970
  8254  003E68  0435               	decf	otoa@w^0,w,c
  8255  003E6A  A0D8               	btfss	status,0,c
  8256  003E6C  EF3A  F01F         	goto	u10971
  8257  003E70  EF3C  F01F         	goto	u10970
  8258  003E74                     u10971:
  8259  003E74  EF44  F01F         	goto	l633
  8260  003E78                     u10970:
  8261  003E78  0100               	movlb	0	; () banked
  8262  003E7A  B3F6               	btfsc	_flags& (0+255),1,b
  8263  003E7C  EF42  F01F         	goto	u10981
  8264  003E80  EF44  F01F         	goto	u10980
  8265  003E84                     u10981:
  8266  003E84  EFC1  F01E         	goto	l8421
  8267  003E88                     u10980:
  8268  003E88                     l633:
  8269                           
  8270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8271  003E88  0100               	movlb	0	; () banked
  8272  003E8A  A9F6               	btfss	_flags& (0+255),4,b
  8273  003E8C  EF4A  F01F         	goto	u10991
  8274  003E90  EF4C  F01F         	goto	u10990
  8275  003E94                     u10991:
  8276  003E94  EF63  F01F         	goto	l8451
  8277  003E98                     u10990:
  8278  003E98                     
  8279                           ; BSR set to: 0
  8280  003E98  5033               	movf	otoa@t^0,w,c
  8281  003E9A  1034               	iorwf	(otoa@t+1)^0,w,c
  8282  003E9C  B4D8               	btfsc	status,2,c
  8283  003E9E  EF53  F01F         	goto	u11001
  8284  003EA2  EF55  F01F         	goto	u11000
  8285  003EA6                     u11001:
  8286  003EA6  EF63  F01F         	goto	l8451
  8287  003EAA                     u11000:
  8288  003EAA                     
  8289                           ; BSR set to: 0
  8290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8291  003EAA  063F               	decf	otoa@i^0,f,c
  8292  003EAC  A0D8               	btfss	status,0,c
  8293  003EAE  0640               	decf	(otoa@i+1)^0,f,c
  8294  003EB0                     
  8295                           ; BSR set to: 0
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8297  003EB0  0E64               	movlw	low _dbuf
  8298  003EB2  243F               	addwf	otoa@i^0,w,c
  8299  003EB4  6ED9               	movwf	fsr2l,c
  8300  003EB6  0E01               	movlw	high _dbuf
  8301  003EB8  2040               	addwfc	(otoa@i+1)^0,w,c
  8302  003EBA  6EDA               	movwf	fsr2h,c
  8303  003EBC  0E30               	movlw	48
  8304  003EBE  6EDF               	movwf	indf2,c
  8305  003EC0                     
  8306                           ; BSR set to: 0
  8307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8308  003EC0  0635               	decf	otoa@w^0,f,c
  8309  003EC2  A0D8               	btfss	status,0,c
  8310  003EC4  0636               	decf	(otoa@w+1)^0,f,c
  8311  003EC6                     l8451:
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8315  003EC6  C01F  F014         	movff	otoa@fp,pad@fp
  8316  003ECA  C020  F015         	movff	otoa@fp+1,pad@fp+1
  8317  003ECE  0E64               	movlw	low _dbuf
  8318  003ED0  243F               	addwf	otoa@i^0,w,c
  8319  003ED2  6E16               	movwf	pad@buf^0,c
  8320  003ED4  0E01               	movlw	high _dbuf
  8321  003ED6  2040               	addwfc	(otoa@i+1)^0,w,c
  8322  003ED8  6E17               	movwf	(pad@buf+1)^0,c
  8323  003EDA  C035  F018         	movff	otoa@w,pad@p
  8324  003EDE  C036  F019         	movff	otoa@w+1,pad@p+1
  8325  003EE2  EC92  F028         	call	_pad	;wreg free
  8326  003EE6  C014  F01F         	movff	?_pad,?_otoa
  8327  003EEA  C015  F020         	movff	?_pad+1,?_otoa+1
  8328  003EEE  0012               	return		;funcret
  8329  003EF0                     __end_of_otoa:
  8330                           	opt callstack 0
  8331                           
  8332 ;; *************** function _efgtoa *****************
  8333 ;; Defined at:
  8334 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  8337 ;;		 -> vsnprintf@f(6), 
  8338 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  8339 ;;  c               1   60[COMRAM] unsigned char 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  u               4   52[BANK0 ] unsigned char 
  8342 ;;  g               4   44[BANK0 ] unsigned char 
  8343 ;;  l               4   38[BANK0 ] unsigned char 
  8344 ;;  h               4   34[BANK0 ] unsigned char 
  8345 ;;  ou              4    0[BANK0 ] unsigned char 
  8346 ;;  n               2   50[BANK0 ] int 
  8347 ;;  e               2   48[BANK0 ] int 
  8348 ;;  i               2   42[BANK0 ] int 
  8349 ;;  w               2   31[BANK0 ] int 
  8350 ;;  p               2   28[BANK0 ] int 
  8351 ;;  sign            2   26[BANK0 ] int 
  8352 ;;  d               2   24[BANK0 ] int 
  8353 ;;  ne              2   22[BANK0 ] int 
  8354 ;;  m               2   20[BANK0 ] int 
  8355 ;;  pp              2   18[BANK0 ] int 
  8356 ;;  t               2   16[BANK0 ] int 
  8357 ;;  mode            1   33[BANK0 ] unsigned char 
  8358 ;;  nmode           1   30[BANK0 ] unsigned char 
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  2   54[COMRAM] int 
  8361 ;; Registers used:
  8362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8368 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8369 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8370 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8371 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8372 ;;Total ram usage:       68 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; Hardware stack levels required when called:    8
  8375 ;; This function calls:
  8376 ;;		___awdiv
  8377 ;;		___awmod
  8378 ;;		___fladd
  8379 ;;		___fldiv
  8380 ;;		___fleq
  8381 ;;		___flge
  8382 ;;		___flmul
  8383 ;;		___flneg
  8384 ;;		___flsub
  8385 ;;		___fltol
  8386 ;;		___fpclassifyf
  8387 ;;		_floorf
  8388 ;;		_isupper
  8389 ;;		_pad
  8390 ;;		_strcpy
  8391 ;;		_tolower
  8392 ;; This function is called by:
  8393 ;;		_vfpfcnvrt
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text15
  8398  001526                     __ptext15:
  8399                           	opt callstack 0
  8400  001526                     _efgtoa:
  8401                           	opt callstack 18
  8402  001526                     
  8403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8404  001526  0E00               	movlw	0
  8405  001528  0100               	movlb	0	; () banked
  8406  00152A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8407  00152C  0E00               	movlw	0
  8408  00152E  6F7A               	movwf	efgtoa@sign& (0+255),b
  8409  001530                     
  8410                           ; BSR set to: 0
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8412  001530  C039  F08C         	movff	efgtoa@f,efgtoa@g
  8413  001534  C03A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  8414  001538  C03B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  8415  00153C  C03C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  8416  001540                     
  8417                           ; BSR set to: 0
  8418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8419  001540  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8420  001542  EFA7  F00A         	goto	u10390
  8421  001546  EFA5  F00A         	goto	u10391
  8422  00154A                     u10391:
  8423  00154A  EFBD  F00A         	goto	l8119
  8424  00154E                     u10390:
  8425  00154E                     
  8426                           ; BSR set to: 0
  8427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8428  00154E  0E00               	movlw	0
  8429  001550  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8430  001552  0E01               	movlw	1
  8431  001554  6F7A               	movwf	efgtoa@sign& (0+255),b
  8432  001556                     
  8433                           ; BSR set to: 0
  8434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8435  001556  C08C  F004         	movff	efgtoa@g,___flneg@f1
  8436  00155A  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  8437  00155E  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  8438  001562  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  8439  001566  EC70  F02D         	call	___flneg	;wreg free
  8440  00156A  C004  F08C         	movff	?___flneg,efgtoa@g
  8441  00156E  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  8442  001572  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  8443  001576  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  8444  00157A                     l8119:
  8445                           
  8446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8447  00157A  0E00               	movlw	0
  8448  00157C  0100               	movlb	0	; () banked
  8449  00157E  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  8450  001580  0E00               	movlw	0
  8451  001582  6F92               	movwf	efgtoa@n& (0+255),b
  8452  001584                     
  8453                           ; BSR set to: 0
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8455  001584  C0F4  F07F         	movff	_width,efgtoa@w
  8456  001588  C0F5  F080         	movff	_width+1,efgtoa@w+1
  8457  00158C                     
  8458                           ; BSR set to: 0
  8459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8460  00158C  517A               	movf	efgtoa@sign& (0+255),w,b
  8461  00158E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8462  001590  A4D8               	btfss	status,2,c
  8463  001592  EFCD  F00A         	goto	u10401
  8464  001596  EFCF  F00A         	goto	u10400
  8465  00159A                     u10401:
  8466  00159A  EFD6  F00A         	goto	l8127
  8467  00159E                     u10400:
  8468  00159E                     
  8469                           ; BSR set to: 0
  8470  00159E  A5F6               	btfss	_flags& (0+255),2,b
  8471  0015A0  EFD4  F00A         	goto	u10411
  8472  0015A4  EFD6  F00A         	goto	u10410
  8473  0015A8                     u10411:
  8474  0015A8  EFF0  F00A         	goto	l8139
  8475  0015AC                     u10410:
  8476  0015AC                     l8127:
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8480  0015AC  517A               	movf	efgtoa@sign& (0+255),w,b
  8481  0015AE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8482  0015B0  A4D8               	btfss	status,2,c
  8483  0015B2  EFDD  F00A         	goto	u10421
  8484  0015B6  EFDF  F00A         	goto	u10420
  8485  0015BA                     u10421:
  8486  0015BA  EFE5  F00A         	goto	l8131
  8487  0015BE                     u10420:
  8488  0015BE                     
  8489                           ; BSR set to: 0
  8490  0015BE  0E00               	movlw	0
  8491  0015C0  6F65               	movwf	(_efgtoa$1326+1)& (0+255),b
  8492  0015C2  0E2B               	movlw	43
  8493  0015C4  6F64               	movwf	_efgtoa$1326& (0+255),b
  8494  0015C6  EFE9  F00A         	goto	l8133
  8495  0015CA                     l8131:
  8496                           
  8497                           ; BSR set to: 0
  8498  0015CA  0E00               	movlw	0
  8499  0015CC  6F65               	movwf	(_efgtoa$1326+1)& (0+255),b
  8500  0015CE  0E2D               	movlw	45
  8501  0015D0  6F64               	movwf	_efgtoa$1326& (0+255),b
  8502  0015D2                     l8133:
  8503                           
  8504                           ; BSR set to: 0
  8505  0015D2  C064  F164         	movff	_efgtoa$1326,_dbuf
  8506  0015D6                     
  8507                           ; BSR set to: 0
  8508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8509  0015D6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  8510  0015D8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  8511  0015DA                     
  8512                           ; BSR set to: 0
  8513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8514  0015DA  077F               	decf	efgtoa@w& (0+255),f,b
  8515  0015DC  A0D8               	btfss	status,0,c
  8516  0015DE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  8517  0015E0                     l8139:
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8521  0015E0  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  8522  0015E4  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8523  0015E8  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8524  0015EC  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8525  0015F0  ECCE  F026         	call	___fpclassifyf	;wreg free
  8526  0015F4  0404               	decf	?___fpclassifyf^0,w,c
  8527  0015F6  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8528  0015F8  A4D8               	btfss	status,2,c
  8529  0015FA  EF01  F00B         	goto	u10431
  8530  0015FE  EF03  F00B         	goto	u10430
  8531  001602                     u10431:
  8532  001602  EF5A  F00B         	goto	l8157
  8533  001606                     u10430:
  8534  001606  0EBF               	movlw	191
  8535  001608  6E3E               	movwf	??_efgtoa^0,c
  8536  00160A  0EFF               	movlw	255
  8537  00160C  6E3F               	movwf	(??_efgtoa+1)^0,c
  8538  00160E  503D               	movf	efgtoa@c^0,w,c
  8539  001610  6E40               	movwf	(??_efgtoa+2)^0,c
  8540  001612  6A41               	clrf	(??_efgtoa+3)^0,c
  8541  001614  503E               	movf	??_efgtoa^0,w,c
  8542  001616  2640               	addwf	(??_efgtoa+2)^0,f,c
  8543  001618  503F               	movf	(??_efgtoa+1)^0,w,c
  8544  00161A  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8545  00161C  5041               	movf	(??_efgtoa+3)^0,w,c
  8546  00161E  E10A               	bnz	u10440
  8547  001620  0E1A               	movlw	26
  8548  001622  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8549  001624  A0D8               	btfss	status,0,c
  8550  001626  EF17  F00B         	goto	u10441
  8551  00162A  EF1A  F00B         	goto	u10440
  8552  00162E                     u10441:
  8553  00162E  0E01               	movlw	1
  8554  001630  EF1B  F00B         	goto	u10450
  8555  001634                     u10440:
  8556  001634  0E00               	movlw	0
  8557  001636                     u10450:
  8558  001636  0100               	movlb	0	; () banked
  8559  001638  6F66               	movwf	_efgtoa$1327& (0+255),b
  8560  00163A  6B67               	clrf	(_efgtoa$1327+1)& (0+255),b
  8561  00163C                     
  8562                           ; BSR set to: 0
  8563  00163C  5166               	movf	_efgtoa$1327& (0+255),w,b
  8564  00163E  1167               	iorwf	(_efgtoa$1327+1)& (0+255),w,b
  8565  001640  B4D8               	btfsc	status,2,c
  8566  001642  EF25  F00B         	goto	u10461
  8567  001646  EF27  F00B         	goto	u10460
  8568  00164A                     u10461:
  8569  00164A  EF35  F00B         	goto	l8149
  8570  00164E                     u10460:
  8571  00164E                     
  8572                           ; BSR set to: 0
  8573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8574  00164E  0E64               	movlw	low _dbuf
  8575  001650  2592               	addwf	efgtoa@n& (0+255),w,b
  8576  001652  6E04               	movwf	strcpy@dest^0,c
  8577  001654  0E01               	movlw	high _dbuf
  8578  001656  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8579  001658  6E05               	movwf	(strcpy@dest+1)^0,c
  8580  00165A  0EBA               	movlw	low STR_4
  8581  00165C  6E06               	movwf	strcpy@src^0,c
  8582  00165E  0EFF               	movlw	high STR_4
  8583  001660  6E07               	movwf	(strcpy@src+1)^0,c
  8584  001662  EC2E  F02B         	call	_strcpy	;wreg free
  8585                           
  8586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8587  001666  EF41  F00B         	goto	l8151
  8588  00166A                     l8149:
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8592  00166A  0E64               	movlw	low _dbuf
  8593  00166C  2592               	addwf	efgtoa@n& (0+255),w,b
  8594  00166E  6E04               	movwf	strcpy@dest^0,c
  8595  001670  0E01               	movlw	high _dbuf
  8596  001672  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8597  001674  6E05               	movwf	(strcpy@dest+1)^0,c
  8598  001676  0ECA               	movlw	low STR_5
  8599  001678  6E06               	movwf	strcpy@src^0,c
  8600  00167A  0EFF               	movlw	high STR_5
  8601  00167C  6E07               	movwf	(strcpy@src+1)^0,c
  8602  00167E  EC2E  F02B         	call	_strcpy	;wreg free
  8603  001682                     l8151:
  8604                           
  8605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8606  001682  0100               	movlb	0	; () banked
  8607  001684  0EFD               	movlw	253
  8608  001686  277F               	addwf	efgtoa@w& (0+255),f,b
  8609  001688  0EFF               	movlw	255
  8610  00168A  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8611  00168C                     l8153:
  8612                           
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8614  00168C  C037  F014         	movff	efgtoa@fp,pad@fp
  8615  001690  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  8616  001694  0E64               	movlw	low _dbuf
  8617  001696  6E16               	movwf	pad@buf^0,c
  8618  001698  0E01               	movlw	high _dbuf
  8619  00169A  6E17               	movwf	(pad@buf+1)^0,c
  8620  00169C  C07F  F018         	movff	efgtoa@w,pad@p
  8621  0016A0  C080  F019         	movff	efgtoa@w+1,pad@p+1
  8622  0016A4  EC92  F028         	call	_pad	;wreg free
  8623  0016A8  C014  F037         	movff	?_pad,?_efgtoa
  8624  0016AC  C015  F038         	movff	?_pad+1,?_efgtoa+1
  8625  0016B0  EF6A  F010         	goto	l546
  8626  0016B4                     l8157:
  8627                           
  8628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8629  0016B4  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  8630  0016B8  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8631  0016BC  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8632  0016C0  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8633  0016C4  ECCE  F026         	call	___fpclassifyf	;wreg free
  8634  0016C8  5004               	movf	?___fpclassifyf^0,w,c
  8635  0016CA  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8636  0016CC  A4D8               	btfss	status,2,c
  8637  0016CE  EF6B  F00B         	goto	u10471
  8638  0016D2  EF6D  F00B         	goto	u10470
  8639  0016D6                     u10471:
  8640  0016D6  EFAD  F00B         	goto	l8175
  8641  0016DA                     u10470:
  8642  0016DA  0EBF               	movlw	191
  8643  0016DC  6E3E               	movwf	??_efgtoa^0,c
  8644  0016DE  0EFF               	movlw	255
  8645  0016E0  6E3F               	movwf	(??_efgtoa+1)^0,c
  8646  0016E2  503D               	movf	efgtoa@c^0,w,c
  8647  0016E4  6E40               	movwf	(??_efgtoa+2)^0,c
  8648  0016E6  6A41               	clrf	(??_efgtoa+3)^0,c
  8649  0016E8  503E               	movf	??_efgtoa^0,w,c
  8650  0016EA  2640               	addwf	(??_efgtoa+2)^0,f,c
  8651  0016EC  503F               	movf	(??_efgtoa+1)^0,w,c
  8652  0016EE  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8653  0016F0  5041               	movf	(??_efgtoa+3)^0,w,c
  8654  0016F2  E10A               	bnz	u10480
  8655  0016F4  0E1A               	movlw	26
  8656  0016F6  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8657  0016F8  A0D8               	btfss	status,0,c
  8658  0016FA  EF81  F00B         	goto	u10481
  8659  0016FE  EF84  F00B         	goto	u10480
  8660  001702                     u10481:
  8661  001702  0E01               	movlw	1
  8662  001704  EF85  F00B         	goto	u10490
  8663  001708                     u10480:
  8664  001708  0E00               	movlw	0
  8665  00170A                     u10490:
  8666  00170A  0100               	movlb	0	; () banked
  8667  00170C  6F68               	movwf	_efgtoa$1331& (0+255),b
  8668  00170E  6B69               	clrf	(_efgtoa$1331+1)& (0+255),b
  8669  001710                     
  8670                           ; BSR set to: 0
  8671  001710  5168               	movf	_efgtoa$1331& (0+255),w,b
  8672  001712  1169               	iorwf	(_efgtoa$1331+1)& (0+255),w,b
  8673  001714  B4D8               	btfsc	status,2,c
  8674  001716  EF8F  F00B         	goto	u10501
  8675  00171A  EF91  F00B         	goto	u10500
  8676  00171E                     u10501:
  8677  00171E  EF9F  F00B         	goto	l8167
  8678  001722                     u10500:
  8679  001722                     
  8680                           ; BSR set to: 0
  8681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8682  001722  0E64               	movlw	low _dbuf
  8683  001724  2592               	addwf	efgtoa@n& (0+255),w,b
  8684  001726  6E04               	movwf	strcpy@dest^0,c
  8685  001728  0E01               	movlw	high _dbuf
  8686  00172A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8687  00172C  6E05               	movwf	(strcpy@dest+1)^0,c
  8688  00172E  0EBE               	movlw	low STR_8
  8689  001730  6E06               	movwf	strcpy@src^0,c
  8690  001732  0EFF               	movlw	high STR_8
  8691  001734  6E07               	movwf	(strcpy@src+1)^0,c
  8692  001736  EC2E  F02B         	call	_strcpy	;wreg free
  8693                           
  8694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8695  00173A  EF41  F00B         	goto	l8151
  8696  00173E                     l8167:
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8700  00173E  0E64               	movlw	low _dbuf
  8701  001740  2592               	addwf	efgtoa@n& (0+255),w,b
  8702  001742  6E04               	movwf	strcpy@dest^0,c
  8703  001744  0E01               	movlw	high _dbuf
  8704  001746  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8705  001748  6E05               	movwf	(strcpy@dest+1)^0,c
  8706  00174A  0ED2               	movlw	low STR_9
  8707  00174C  6E06               	movwf	strcpy@src^0,c
  8708  00174E  0EFF               	movlw	high STR_9
  8709  001750  6E07               	movwf	(strcpy@src+1)^0,c
  8710  001752  EC2E  F02B         	call	_strcpy	;wreg free
  8711  001756  EF41  F00B         	goto	l8151
  8712  00175A                     l8175:
  8713                           
  8714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8715  00175A  0E00               	movlw	0
  8716  00175C  0100               	movlb	0	; () banked
  8717  00175E  6F94               	movwf	efgtoa@u& (0+255),b
  8718  001760  0E00               	movlw	0
  8719  001762  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  8720  001764  0E80               	movlw	128
  8721  001766  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  8722  001768  0E3F               	movlw	63
  8723  00176A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  8724                           
  8725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8726  00176C  0E00               	movlw	0
  8727  00176E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  8728  001770  0E00               	movlw	0
  8729  001772  6F90               	movwf	efgtoa@e& (0+255),b
  8730  001774                     
  8731                           ; BSR set to: 0
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8733  001774  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  8734  001778  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  8735  00177C  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  8736  001780  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  8737  001784  0E00               	movlw	0
  8738  001786  6E08               	movwf	___fleq@ff2^0,c
  8739  001788  0E00               	movlw	0
  8740  00178A  6E09               	movwf	(___fleq@ff2+1)^0,c
  8741  00178C  0E00               	movlw	0
  8742  00178E  6E0A               	movwf	(___fleq@ff2+2)^0,c
  8743  001790  0E00               	movlw	0
  8744  001792  6E0B               	movwf	(___fleq@ff2+3)^0,c
  8745  001794  EC07  F02A         	call	___fleq	;wreg free
  8746  001798  B0D8               	btfsc	status,0,c
  8747  00179A  EFD1  F00B         	goto	u10511
  8748  00179E  EFD3  F00B         	goto	u10510
  8749  0017A2                     u10511:
  8750  0017A2  EF56  F00C         	goto	l8193
  8751  0017A6                     u10510:
  8752  0017A6  EFF2  F00B         	goto	l8185
  8753  0017AA                     l8181:
  8754                           
  8755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8756  0017AA  C094  F012         	movff	efgtoa@u,___flmul@b
  8757  0017AE  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  8758  0017B2  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  8759  0017B6  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  8760  0017BA  0E00               	movlw	0
  8761  0017BC  6E16               	movwf	___flmul@a^0,c
  8762  0017BE  0E00               	movlw	0
  8763  0017C0  6E17               	movwf	(___flmul@a+1)^0,c
  8764  0017C2  0E20               	movlw	32
  8765  0017C4  6E18               	movwf	(___flmul@a+2)^0,c
  8766  0017C6  0E41               	movlw	65
  8767  0017C8  6E19               	movwf	(___flmul@a+3)^0,c
  8768  0017CA  ECCB  F012         	call	___flmul	;wreg free
  8769  0017CE  C012  F094         	movff	?___flmul,efgtoa@u
  8770  0017D2  C013  F095         	movff	?___flmul+1,efgtoa@u+1
  8771  0017D6  C014  F096         	movff	?___flmul+2,efgtoa@u+2
  8772  0017DA  C015  F097         	movff	?___flmul+3,efgtoa@u+3
  8773  0017DE                     
  8774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8775  0017DE  0100               	movlb	0	; () banked
  8776  0017E0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  8777  0017E2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  8778  0017E4                     l8185:
  8779                           
  8780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8781  0017E4  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  8782  0017E8  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  8783  0017EC  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  8784  0017F0  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  8785  0017F4  0E00               	movlw	0
  8786  0017F6  6E16               	movwf	___flmul@a^0,c
  8787  0017F8  0E00               	movlw	0
  8788  0017FA  6E17               	movwf	(___flmul@a+1)^0,c
  8789  0017FC  0E20               	movlw	32
  8790  0017FE  6E18               	movwf	(___flmul@a+2)^0,c
  8791  001800  0E41               	movlw	65
  8792  001802  6E19               	movwf	(___flmul@a+3)^0,c
  8793  001804  C094  F012         	movff	efgtoa@u,___flmul@b
  8794  001808  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  8795  00180C  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  8796  001810  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  8797  001814  ECCB  F012         	call	___flmul	;wreg free
  8798  001818  C012  F02F         	movff	?___flmul,___flge@ff2
  8799  00181C  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  8800  001820  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  8801  001824  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  8802  001828  EC4C  F026         	call	___flge	;wreg free
  8803  00182C  B0D8               	btfsc	status,0,c
  8804  00182E  EF1B  F00C         	goto	u10521
  8805  001832  EF1D  F00C         	goto	u10520
  8806  001836                     u10521:
  8807  001836  EFD5  F00B         	goto	l8181
  8808  00183A                     u10520:
  8809  00183A  EF3D  F00C         	goto	l8191
  8810  00183E                     l8187:
  8811                           
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8813  00183E  C094  F004         	movff	efgtoa@u,___fldiv@b
  8814  001842  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  8815  001846  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  8816  00184A  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  8817  00184E  0E00               	movlw	0
  8818  001850  6E08               	movwf	___fldiv@a^0,c
  8819  001852  0E00               	movlw	0
  8820  001854  6E09               	movwf	(___fldiv@a+1)^0,c
  8821  001856  0E20               	movlw	32
  8822  001858  6E0A               	movwf	(___fldiv@a+2)^0,c
  8823  00185A  0E41               	movlw	65
  8824  00185C  6E0B               	movwf	(___fldiv@a+3)^0,c
  8825  00185E  ECE0  F014         	call	___fldiv	;wreg free
  8826  001862  C004  F094         	movff	?___fldiv,efgtoa@u
  8827  001866  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  8828  00186A  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  8829  00186E  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  8830  001872                     
  8831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  8832  001872  0100               	movlb	0	; () banked
  8833  001874  0790               	decf	efgtoa@e& (0+255),f,b
  8834  001876  A0D8               	btfss	status,0,c
  8835  001878  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  8836  00187A                     l8191:
  8837                           
  8838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  8839  00187A  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  8840  00187E  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  8841  001882  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  8842  001886  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  8843  00188A  C094  F02F         	movff	efgtoa@u,___flge@ff2
  8844  00188E  C095  F030         	movff	efgtoa@u+1,___flge@ff2+1
  8845  001892  C096  F031         	movff	efgtoa@u+2,___flge@ff2+2
  8846  001896  C097  F032         	movff	efgtoa@u+3,___flge@ff2+3
  8847  00189A  EC4C  F026         	call	___flge	;wreg free
  8848  00189E  A0D8               	btfss	status,0,c
  8849  0018A0  EF54  F00C         	goto	u10531
  8850  0018A4  EF56  F00C         	goto	u10530
  8851  0018A8                     u10531:
  8852  0018A8  EF1F  F00C         	goto	l8187
  8853  0018AC                     u10530:
  8854  0018AC                     l8193:
  8855                           
  8856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  8857  0018AC  C03D  F00A         	movff	efgtoa@c,tolower@c
  8858  0018B0  6A0B               	clrf	(tolower@c+1)^0,c
  8859  0018B2  ECCF  F02A         	call	_tolower	;wreg free
  8860  0018B6  500A               	movf	?_tolower^0,w,c
  8861  0018B8  0100               	movlb	0	; () banked
  8862  0018BA  6F81               	movwf	efgtoa@mode& (0+255),b
  8863  0018BC                     
  8864                           ; BSR set to: 0
  8865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  8866  0018BC  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  8867  0018C0                     
  8868                           ; BSR set to: 0
  8869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  8870  0018C0  0E67               	movlw	103
  8871  0018C2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8872  0018C4  A4D8               	btfss	status,2,c
  8873  0018C6  EF67  F00C         	goto	u10541
  8874  0018CA  EF69  F00C         	goto	u10540
  8875  0018CE                     u10541:
  8876  0018CE  EF8F  F00C         	goto	l8207
  8877  0018D2                     u10540:
  8878  0018D2                     
  8879                           ; BSR set to: 0
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  8881  0018D2  5058               	movf	_prec^0,w,c
  8882  0018D4  1059               	iorwf	(_prec+1)^0,w,c
  8883  0018D6  A4D8               	btfss	status,2,c
  8884  0018D8  EF70  F00C         	goto	u10551
  8885  0018DC  EF72  F00C         	goto	u10550
  8886  0018E0                     u10551:
  8887  0018E0  EF76  F00C         	goto	l8203
  8888  0018E4                     u10550:
  8889  0018E4                     
  8890                           ; BSR set to: 0
  8891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  8892  0018E4  0E00               	movlw	0
  8893  0018E6  6E59               	movwf	(_prec+1)^0,c
  8894  0018E8  0E01               	movlw	1
  8895  0018EA  6E58               	movwf	_prec^0,c
  8896  0018EC                     l8203:
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  8900  0018EC  BE59               	btfsc	(_prec+1)^0,7,c
  8901  0018EE  EF83  F00C         	goto	u10560
  8902  0018F2  5059               	movf	(_prec+1)^0,w,c
  8903  0018F4  E106               	bnz	u10561
  8904  0018F6  0458               	decf	_prec^0,w,c
  8905  0018F8  B0D8               	btfsc	status,0,c
  8906  0018FA  EF81  F00C         	goto	u10561
  8907  0018FE  EF83  F00C         	goto	u10560
  8908  001902                     u10561:
  8909  001902  EF89  F00C         	goto	l564
  8910  001906                     u10560:
  8911  001906                     l8205:
  8912                           
  8913                           ; BSR set to: 0
  8914  001906  0E00               	movlw	0
  8915  001908  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  8916  00190A  0E06               	movlw	6
  8917  00190C  6F7C               	movwf	efgtoa@p& (0+255),b
  8918  00190E  EF98  F00C         	goto	l8213
  8919  001912                     l564:
  8920                           
  8921                           ; BSR set to: 0
  8922  001912  C058  F07C         	movff	_prec,efgtoa@p
  8923  001916  C059  F07D         	movff	_prec+1,efgtoa@p+1
  8924  00191A  EF98  F00C         	goto	l8213
  8925  00191E                     l8207:
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  8929  00191E  BE59               	btfsc	(_prec+1)^0,7,c
  8930  001920  EF94  F00C         	goto	u10571
  8931  001924  EF96  F00C         	goto	u10570
  8932  001928                     u10571:
  8933  001928  EF83  F00C         	goto	l8205
  8934  00192C                     u10570:
  8935  00192C  EF89  F00C         	goto	l564
  8936  001930                     l8213:
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  8940  001930  0E67               	movlw	103
  8941  001932  1981               	xorwf	efgtoa@mode& (0+255),w,b
  8942  001934  A4D8               	btfss	status,2,c
  8943  001936  EF9F  F00C         	goto	u10581
  8944  00193A  EFA1  F00C         	goto	u10580
  8945  00193E                     u10581:
  8946  00193E  EFD0  F00C         	goto	l8223
  8947  001942                     u10580:
  8948  001942                     
  8949                           ; BSR set to: 0
  8950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  8951  001942  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  8952  001944  EFAF  F00C         	goto	u10590
  8953  001948  0EFC               	movlw	252
  8954  00194A  5D90               	subwf	efgtoa@e& (0+255),w,b
  8955  00194C  0EFF               	movlw	255
  8956  00194E  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8957  001950  A0D8               	btfss	status,0,c
  8958  001952  EFAD  F00C         	goto	u10591
  8959  001956  EFAF  F00C         	goto	u10590
  8960  00195A                     u10591:
  8961  00195A  EFCE  F00C         	goto	l8221
  8962  00195E                     u10590:
  8963  00195E                     
  8964                           ; BSR set to: 0
  8965  00195E  0EFF               	movlw	255
  8966  001960  6E3E               	movwf	??_efgtoa^0,c
  8967  001962  0EFF               	movlw	255
  8968  001964  6E3F               	movwf	(??_efgtoa+1)^0,c
  8969  001966  C07C  F040         	movff	efgtoa@p,??_efgtoa+2
  8970  00196A  C07D  F041         	movff	efgtoa@p+1,??_efgtoa+3
  8971  00196E  503E               	movf	??_efgtoa^0,w,c
  8972  001970  2640               	addwf	(??_efgtoa+2)^0,f,c
  8973  001972  503F               	movf	(??_efgtoa+1)^0,w,c
  8974  001974  2241               	addwfc	(??_efgtoa+3)^0,f,c
  8975  001976  5190               	movf	efgtoa@e& (0+255),w,b
  8976  001978  5C40               	subwf	(??_efgtoa+2)^0,w,c
  8977  00197A  5041               	movf	(??_efgtoa+3)^0,w,c
  8978  00197C  0A80               	xorlw	128
  8979  00197E  6E42               	movwf	(??_efgtoa+4)^0,c
  8980  001980  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  8981  001982  0A80               	xorlw	128
  8982  001984  5842               	subwfb	(??_efgtoa+4)^0,w,c
  8983  001986  A0D8               	btfss	status,0,c
  8984  001988  EFC8  F00C         	goto	u10601
  8985  00198C  EFCA  F00C         	goto	u10600
  8986  001990                     u10601:
  8987  001990  EFCE  F00C         	goto	l8221
  8988  001994                     u10600:
  8989  001994                     
  8990                           ; BSR set to: 0
  8991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  8992  001994  0E66               	movlw	102
  8993  001996  6F7E               	movwf	efgtoa@nmode& (0+255),b
  8994                           
  8995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  8996  001998  EFD0  F00C         	goto	l8223
  8997  00199C                     l8221:
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9001  00199C  0E65               	movlw	101
  9002  00199E  6F7E               	movwf	efgtoa@nmode& (0+255),b
  9003  0019A0                     l8223:
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9007  0019A0  C07C  F074         	movff	efgtoa@p,efgtoa@m
  9008  0019A4  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  9009  0019A8                     
  9010                           ; BSR set to: 0
  9011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9012  0019A8  0E67               	movlw	103
  9013  0019AA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9014  0019AC  A4D8               	btfss	status,2,c
  9015  0019AE  EFDB  F00C         	goto	u10611
  9016  0019B2  EFDD  F00C         	goto	u10610
  9017  0019B6                     u10611:
  9018  0019B6  EFED  F00C         	goto	l8231
  9019  0019BA                     u10610:
  9020  0019BA                     
  9021                           ; BSR set to: 0
  9022  0019BA  0E66               	movlw	102
  9023  0019BC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9024  0019BE  A4D8               	btfss	status,2,c
  9025  0019C0  EFE4  F00C         	goto	u10621
  9026  0019C4  EFE6  F00C         	goto	u10620
  9027  0019C8                     u10621:
  9028  0019C8  EFEF  F00C         	goto	l8233
  9029  0019CC                     u10620:
  9030  0019CC                     
  9031                           ; BSR set to: 0
  9032  0019CC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9033  0019CE  EFED  F00C         	goto	u10630
  9034  0019D2  EFEB  F00C         	goto	u10631
  9035  0019D6                     u10631:
  9036  0019D6  EFEF  F00C         	goto	l8233
  9037  0019DA                     u10630:
  9038  0019DA                     l8231:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9042  0019DA  4B74               	infsnz	efgtoa@m& (0+255),f,b
  9043  0019DC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  9044  0019DE                     l8233:
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9048  0019DE  0E66               	movlw	102
  9049  0019E0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9050  0019E2  A4D8               	btfss	status,2,c
  9051  0019E4  EFF6  F00C         	goto	u10641
  9052  0019E8  EFF8  F00C         	goto	u10640
  9053  0019EC                     u10641:
  9054  0019EC  EF18  F00D         	goto	l8243
  9055  0019F0                     u10640:
  9056  0019F0                     
  9057                           ; BSR set to: 0
  9058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9059  0019F0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9060  0019F2  EFFF  F00C         	goto	u10650
  9061  0019F6  EFFD  F00C         	goto	u10651
  9062  0019FA                     u10651:
  9063  0019FA  EF0B  F00D         	goto	l8239
  9064  0019FE                     u10650:
  9065  0019FE                     
  9066                           ; BSR set to: 0
  9067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9068  0019FE  0E00               	movlw	0
  9069  001A00  6F94               	movwf	efgtoa@u& (0+255),b
  9070  001A02  0E00               	movlw	0
  9071  001A04  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  9072  001A06  0E80               	movlw	128
  9073  001A08  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  9074  001A0A  0E3F               	movlw	63
  9075  001A0C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  9076                           
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9078  001A0E  0E00               	movlw	0
  9079  001A10  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  9080  001A12  0E00               	movlw	0
  9081  001A14  6F90               	movwf	efgtoa@e& (0+255),b
  9082  001A16                     l8239:
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9086  001A16  0E67               	movlw	103
  9087  001A18  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9088  001A1A  B4D8               	btfsc	status,2,c
  9089  001A1C  EF12  F00D         	goto	u10661
  9090  001A20  EF14  F00D         	goto	u10660
  9091  001A24                     u10661:
  9092  001A24  EF18  F00D         	goto	l8243
  9093  001A28                     u10660:
  9094  001A28                     
  9095                           ; BSR set to: 0
  9096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9097  001A28  5190               	movf	efgtoa@e& (0+255),w,b
  9098  001A2A  2774               	addwf	efgtoa@m& (0+255),f,b
  9099  001A2C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  9100  001A2E  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9101  001A30                     l8243:
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9105  001A30  0E00               	movlw	0
  9106  001A32  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9107  001A34  0E00               	movlw	0
  9108  001A36  6F8A               	movwf	efgtoa@i& (0+255),b
  9109  001A38                     
  9110                           ; BSR set to: 0
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9112  001A38  C08C  F082         	movff	efgtoa@g,efgtoa@h
  9113  001A3C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  9114  001A40  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  9115  001A44  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  9116  001A48                     
  9117                           ; BSR set to: 0
  9118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9119  001A48  C094  F060         	movff	efgtoa@u,efgtoa@ou
  9120  001A4C  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  9121  001A50  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  9122  001A54  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  9123                           
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9125  001A58  EFA9  F00D         	goto	l8257
  9126  001A5C                     l8249:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9130  001A5C  C082  F004         	movff	efgtoa@h,___fldiv@b
  9131  001A60  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  9132  001A64  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  9133  001A68  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  9134  001A6C  C094  F008         	movff	efgtoa@u,___fldiv@a
  9135  001A70  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  9136  001A74  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  9137  001A78  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  9138  001A7C  ECE0  F014         	call	___fldiv	;wreg free
  9139  001A80  C004  F01D         	movff	?___fldiv,floorf@x
  9140  001A84  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  9141  001A88  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  9142  001A8C  C007  F020         	movff	?___fldiv+3,floorf@x+3
  9143  001A90  EC75  F01C         	call	_floorf	;wreg free
  9144  001A94  C01D  F086         	movff	?_floorf,efgtoa@l
  9145  001A98  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  9146  001A9C  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  9147  001AA0  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  9148                           
  9149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9150  001AA4  C086  F004         	movff	efgtoa@l,___fltol@f1
  9151  001AA8  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9152  001AAC  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9153  001AB0  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9154  001AB4  ECC9  F025         	call	___fltol	;wreg free
  9155  001AB8  C004  F078         	movff	?___fltol,efgtoa@d
  9156  001ABC  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  9157  001AC0                     
  9158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9159  001AC0  C082  F02B         	movff	efgtoa@h,___flsub@b
  9160  001AC4  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  9161  001AC8  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  9162  001ACC  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  9163  001AD0  C094  F016         	movff	efgtoa@u,___flmul@a
  9164  001AD4  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  9165  001AD8  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  9166  001ADC  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  9167  001AE0  C086  F012         	movff	efgtoa@l,___flmul@b
  9168  001AE4  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  9169  001AE8  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  9170  001AEC  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  9171  001AF0  ECCB  F012         	call	___flmul	;wreg free
  9172  001AF4  C012  F02F         	movff	?___flmul,___flsub@a
  9173  001AF8  C013  F030         	movff	?___flmul+1,___flsub@a+1
  9174  001AFC  C014  F031         	movff	?___flmul+2,___flsub@a+2
  9175  001B00  C015  F032         	movff	?___flmul+3,___flsub@a+3
  9176  001B04  EC54  F02C         	call	___flsub	;wreg free
  9177  001B08  C02B  F082         	movff	?___flsub,efgtoa@h
  9178  001B0C  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  9179  001B10  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  9180  001B14  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  9181  001B18                     
  9182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9183  001B18  C094  F004         	movff	efgtoa@u,___fldiv@b
  9184  001B1C  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  9185  001B20  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  9186  001B24  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  9187  001B28  0E00               	movlw	0
  9188  001B2A  6E08               	movwf	___fldiv@a^0,c
  9189  001B2C  0E00               	movlw	0
  9190  001B2E  6E09               	movwf	(___fldiv@a+1)^0,c
  9191  001B30  0E20               	movlw	32
  9192  001B32  6E0A               	movwf	(___fldiv@a+2)^0,c
  9193  001B34  0E41               	movlw	65
  9194  001B36  6E0B               	movwf	(___fldiv@a+3)^0,c
  9195  001B38  ECE0  F014         	call	___fldiv	;wreg free
  9196  001B3C  C004  F094         	movff	?___fldiv,efgtoa@u
  9197  001B40  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  9198  001B44  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  9199  001B48  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  9200  001B4C                     
  9201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9202  001B4C  0100               	movlb	0	; () banked
  9203  001B4E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9204  001B50  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9205  001B52                     l8257:
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9209  001B52  5174               	movf	efgtoa@m& (0+255),w,b
  9210  001B54  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9211  001B56  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9212  001B58  0A80               	xorlw	128
  9213  001B5A  6E3E               	movwf	??_efgtoa^0,c
  9214  001B5C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9215  001B5E  0A80               	xorlw	128
  9216  001B60  583E               	subwfb	??_efgtoa^0,w,c
  9217  001B62  A0D8               	btfss	status,0,c
  9218  001B64  EFB6  F00D         	goto	u10671
  9219  001B68  EFB8  F00D         	goto	u10670
  9220  001B6C                     u10671:
  9221  001B6C  EF2E  F00D         	goto	l8249
  9222  001B70                     u10670:
  9223  001B70                     
  9224                           ; BSR set to: 0
  9225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9226  001B70  C094  F012         	movff	efgtoa@u,___flmul@b
  9227  001B74  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  9228  001B78  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  9229  001B7C  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  9230  001B80  0E00               	movlw	0
  9231  001B82  6E16               	movwf	___flmul@a^0,c
  9232  001B84  0E00               	movlw	0
  9233  001B86  6E17               	movwf	(___flmul@a+1)^0,c
  9234  001B88  0EA0               	movlw	160
  9235  001B8A  6E18               	movwf	(___flmul@a+2)^0,c
  9236  001B8C  0E40               	movlw	64
  9237  001B8E  6E19               	movwf	(___flmul@a+3)^0,c
  9238  001B90  ECCB  F012         	call	___flmul	;wreg free
  9239  001B94  C012  F086         	movff	?___flmul,efgtoa@l
  9240  001B98  C013  F087         	movff	?___flmul+1,efgtoa@l+1
  9241  001B9C  C014  F088         	movff	?___flmul+2,efgtoa@l+2
  9242  001BA0  C015  F089         	movff	?___flmul+3,efgtoa@l+3
  9243  001BA4                     
  9244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9245  001BA4  C082  F02B         	movff	efgtoa@h,___flge@ff1
  9246  001BA8  C083  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  9247  001BAC  C084  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  9248  001BB0  C085  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  9249  001BB4  C086  F02F         	movff	efgtoa@l,___flge@ff2
  9250  001BB8  C087  F030         	movff	efgtoa@l+1,___flge@ff2+1
  9251  001BBC  C088  F031         	movff	efgtoa@l+2,___flge@ff2+2
  9252  001BC0  C089  F032         	movff	efgtoa@l+3,___flge@ff2+3
  9253  001BC4  EC4C  F026         	call	___flge	;wreg free
  9254  001BC8  B0D8               	btfsc	status,0,c
  9255  001BCA  EFE9  F00D         	goto	u10681
  9256  001BCE  EFEB  F00D         	goto	u10680
  9257  001BD2                     u10681:
  9258  001BD2  EFF6  F00D         	goto	l8265
  9259  001BD6                     u10680:
  9260  001BD6                     
  9261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9262  001BD6  0E00               	movlw	0
  9263  001BD8  0100               	movlb	0	; () banked
  9264  001BDA  6F86               	movwf	efgtoa@l& (0+255),b
  9265  001BDC  0E00               	movlw	0
  9266  001BDE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9267  001BE0  0E00               	movlw	0
  9268  001BE2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9269  001BE4  0E00               	movlw	0
  9270  001BE6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9271                           
  9272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9273  001BE8  EF1F  F00E         	goto	l8271
  9274  001BEC                     l8265:
  9275                           
  9276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9277  001BEC  C082  F004         	movff	efgtoa@h,___fleq@ff1
  9278  001BF0  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  9279  001BF4  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  9280  001BF8  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  9281  001BFC  C086  F008         	movff	efgtoa@l,___fleq@ff2
  9282  001C00  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  9283  001C04  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  9284  001C08  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  9285  001C0C  EC07  F02A         	call	___fleq	;wreg free
  9286  001C10  A0D8               	btfss	status,0,c
  9287  001C12  EF0D  F00E         	goto	u10691
  9288  001C16  EF0F  F00E         	goto	u10690
  9289  001C1A                     u10691:
  9290  001C1A  EF1F  F00E         	goto	l8271
  9291  001C1E                     u10690:
  9292  001C1E  0100               	movlb	0	; () banked
  9293  001C20  B178               	btfsc	efgtoa@d& (0+255),0,b
  9294  001C22  EF15  F00E         	goto	u10701
  9295  001C26  EF17  F00E         	goto	u10700
  9296  001C2A                     u10701:
  9297  001C2A  EF1F  F00E         	goto	l8271
  9298  001C2E                     u10700:
  9299  001C2E                     
  9300                           ; BSR set to: 0
  9301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9302  001C2E  0E00               	movlw	0
  9303  001C30  6F86               	movwf	efgtoa@l& (0+255),b
  9304  001C32  0E00               	movlw	0
  9305  001C34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9306  001C36  0E00               	movlw	0
  9307  001C38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9308  001C3A  0E00               	movlw	0
  9309  001C3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9310  001C3E                     l8271:
  9311                           
  9312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9313  001C3E  C08C  F004         	movff	efgtoa@g,___fladd@b
  9314  001C42  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  9315  001C46  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  9316  001C4A  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  9317  001C4E  C086  F008         	movff	efgtoa@l,___fladd@a
  9318  001C52  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  9319  001C56  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  9320  001C5A  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  9321  001C5E  EC6B  F010         	call	___fladd	;wreg free
  9322  001C62  C004  F082         	movff	?___fladd,efgtoa@h
  9323  001C66  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  9324  001C6A  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  9325  001C6E  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  9326  001C72                     
  9327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9328  001C72  C060  F094         	movff	efgtoa@ou,efgtoa@u
  9329  001C76  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  9330  001C7A  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  9331  001C7E  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  9332  001C82                     
  9333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9334  001C82  0E65               	movlw	101
  9335  001C84  0100               	movlb	0	; () banked
  9336  001C86  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9337  001C88  B4D8               	btfsc	status,2,c
  9338  001C8A  EF49  F00E         	goto	u10711
  9339  001C8E  EF4B  F00E         	goto	u10710
  9340  001C92                     u10711:
  9341  001C92  EF51  F00E         	goto	l8279
  9342  001C96                     u10710:
  9343  001C96                     
  9344                           ; BSR set to: 0
  9345  001C96  C090  F076         	movff	efgtoa@e,efgtoa@ne
  9346  001C9A  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  9347  001C9E  EF55  F00E         	goto	l590
  9348  001CA2                     l8279:
  9349                           
  9350                           ; BSR set to: 0
  9351  001CA2  0E00               	movlw	0
  9352  001CA4  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  9353  001CA6  0E00               	movlw	0
  9354  001CA8  6F76               	movwf	efgtoa@ne& (0+255),b
  9355  001CAA                     l590:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9359  001CAA  0E00               	movlw	0
  9360  001CAC  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9361  001CAE  0E00               	movlw	0
  9362  001CB0  6F72               	movwf	efgtoa@pp& (0+255),b
  9363                           
  9364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9365  001CB2  0E00               	movlw	0
  9366  001CB4  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  9367  001CB6  0E00               	movlw	0
  9368  001CB8  6F70               	movwf	efgtoa@t& (0+255),b
  9369                           
  9370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9371  001CBA  0E00               	movlw	0
  9372  001CBC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9373  001CBE  0E00               	movlw	0
  9374  001CC0  6F8A               	movwf	efgtoa@i& (0+255),b
  9375                           
  9376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9377  001CC2  EF50  F00F         	goto	l8329
  9378  001CC6                     l8281:
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9382  001CC6  C082  F004         	movff	efgtoa@h,___fldiv@b
  9383  001CCA  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  9384  001CCE  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  9385  001CD2  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  9386  001CD6  C094  F008         	movff	efgtoa@u,___fldiv@a
  9387  001CDA  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  9388  001CDE  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  9389  001CE2  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  9390  001CE6  ECE0  F014         	call	___fldiv	;wreg free
  9391  001CEA  C004  F01D         	movff	?___fldiv,floorf@x
  9392  001CEE  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  9393  001CF2  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  9394  001CF6  C007  F020         	movff	?___fldiv+3,floorf@x+3
  9395  001CFA  EC75  F01C         	call	_floorf	;wreg free
  9396  001CFE  C01D  F086         	movff	?_floorf,efgtoa@l
  9397  001D02  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  9398  001D06  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  9399  001D0A  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  9400                           
  9401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9402  001D0E  C086  F004         	movff	efgtoa@l,___fltol@f1
  9403  001D12  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9404  001D16  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9405  001D1A  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9406  001D1E  ECC9  F025         	call	___fltol	;wreg free
  9407  001D22  C004  F078         	movff	?___fltol,efgtoa@d
  9408  001D26  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  9409  001D2A                     
  9410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9411  001D2A  0100               	movlb	0	; () banked
  9412  001D2C  B9F6               	btfsc	_flags& (0+255),4,b
  9413  001D2E  EF9B  F00E         	goto	u10721
  9414  001D32  EF9D  F00E         	goto	u10720
  9415  001D36                     u10721:
  9416  001D36  EFBA  F00E         	goto	l8293
  9417  001D3A                     u10720:
  9418  001D3A                     
  9419                           ; BSR set to: 0
  9420  001D3A  5178               	movf	efgtoa@d& (0+255),w,b
  9421  001D3C  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9422  001D3E  A4D8               	btfss	status,2,c
  9423  001D40  EFA4  F00E         	goto	u10731
  9424  001D44  EFA6  F00E         	goto	u10730
  9425  001D48                     u10731:
  9426  001D48  EFBA  F00E         	goto	l8293
  9427  001D4C                     u10730:
  9428  001D4C                     
  9429                           ; BSR set to: 0
  9430  001D4C  0E67               	movlw	103
  9431  001D4E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9432  001D50  A4D8               	btfss	status,2,c
  9433  001D52  EFAD  F00E         	goto	u10741
  9434  001D56  EFAF  F00E         	goto	u10740
  9435  001D5A                     u10741:
  9436  001D5A  EFBA  F00E         	goto	l8293
  9437  001D5E                     u10740:
  9438  001D5E                     
  9439                           ; BSR set to: 0
  9440  001D5E  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9441  001D60  EFB6  F00E         	goto	u10750
  9442  001D64  EFB4  F00E         	goto	u10751
  9443  001D68                     u10751:
  9444  001D68  EFBA  F00E         	goto	l8293
  9445  001D6C                     u10750:
  9446  001D6C                     
  9447                           ; BSR set to: 0
  9448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9449  001D6C  4B70               	infsnz	efgtoa@t& (0+255),f,b
  9450  001D6E  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  9451                           
  9452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9453  001D70  EF04  F00F         	goto	l8321
  9454  001D74                     l8293:
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9458  001D74  5172               	movf	efgtoa@pp& (0+255),w,b
  9459  001D76  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9460  001D78  A4D8               	btfss	status,2,c
  9461  001D7A  EFC1  F00E         	goto	u10761
  9462  001D7E  EFC3  F00E         	goto	u10760
  9463  001D82                     u10761:
  9464  001D82  EFED  F00E         	goto	l8313
  9465  001D86                     u10760:
  9466  001D86                     
  9467                           ; BSR set to: 0
  9468  001D86  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9469  001D88  EFCA  F00E         	goto	u10770
  9470  001D8C  EFC8  F00E         	goto	u10771
  9471  001D90                     u10771:
  9472  001D90  EFED  F00E         	goto	l8313
  9473  001D94                     u10770:
  9474  001D94                     
  9475                           ; BSR set to: 0
  9476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9477  001D94  0E64               	movlw	low _dbuf
  9478  001D96  2592               	addwf	efgtoa@n& (0+255),w,b
  9479  001D98  6ED9               	movwf	fsr2l,c
  9480  001D9A  0E01               	movlw	high _dbuf
  9481  001D9C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9482  001D9E  6EDA               	movwf	fsr2h,c
  9483  001DA0  0E2E               	movlw	46
  9484  001DA2  6EDF               	movwf	indf2,c
  9485  001DA4                     
  9486                           ; BSR set to: 0
  9487  001DA4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9488  001DA6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9489  001DA8                     
  9490                           ; BSR set to: 0
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9492  001DA8  077F               	decf	efgtoa@w& (0+255),f,b
  9493  001DAA  A0D8               	btfss	status,0,c
  9494  001DAC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9495  001DAE                     
  9496                           ; BSR set to: 0
  9497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9498  001DAE  0E00               	movlw	0
  9499  001DB0  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9500  001DB2  0E01               	movlw	1
  9501  001DB4  6F72               	movwf	efgtoa@pp& (0+255),b
  9502  001DB6  EFED  F00E         	goto	l8313
  9503  001DBA                     l8305:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9507  001DBA  0E64               	movlw	low _dbuf
  9508  001DBC  2592               	addwf	efgtoa@n& (0+255),w,b
  9509  001DBE  6ED9               	movwf	fsr2l,c
  9510  001DC0  0E01               	movlw	high _dbuf
  9511  001DC2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9512  001DC4  6EDA               	movwf	fsr2h,c
  9513  001DC6  0E30               	movlw	48
  9514  001DC8  6EDF               	movwf	indf2,c
  9515  001DCA                     
  9516                           ; BSR set to: 0
  9517  001DCA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9518  001DCC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9519  001DCE                     
  9520                           ; BSR set to: 0
  9521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9522  001DCE  077F               	decf	efgtoa@w& (0+255),f,b
  9523  001DD0  A0D8               	btfss	status,0,c
  9524  001DD2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9525  001DD4                     
  9526                           ; BSR set to: 0
  9527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9528  001DD4  0770               	decf	efgtoa@t& (0+255),f,b
  9529  001DD6  A0D8               	btfss	status,0,c
  9530  001DD8  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  9531  001DDA                     l8313:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9535  001DDA  5170               	movf	efgtoa@t& (0+255),w,b
  9536  001DDC  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9537  001DDE  A4D8               	btfss	status,2,c
  9538  001DE0  EFF4  F00E         	goto	u10781
  9539  001DE4  EFF6  F00E         	goto	u10780
  9540  001DE8                     u10781:
  9541  001DE8  EFDD  F00E         	goto	l8305
  9542  001DEC                     u10780:
  9543  001DEC                     
  9544                           ; BSR set to: 0
  9545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9546  001DEC  0E64               	movlw	low _dbuf
  9547  001DEE  2592               	addwf	efgtoa@n& (0+255),w,b
  9548  001DF0  6ED9               	movwf	fsr2l,c
  9549  001DF2  0E01               	movlw	high _dbuf
  9550  001DF4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9551  001DF6  6EDA               	movwf	fsr2h,c
  9552  001DF8  5178               	movf	efgtoa@d& (0+255),w,b
  9553  001DFA  0F30               	addlw	48
  9554  001DFC  6EDF               	movwf	indf2,c
  9555  001DFE                     
  9556                           ; BSR set to: 0
  9557  001DFE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9558  001E00  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9559  001E02                     
  9560                           ; BSR set to: 0
  9561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9562  001E02  077F               	decf	efgtoa@w& (0+255),f,b
  9563  001E04  A0D8               	btfss	status,0,c
  9564  001E06  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9565  001E08                     l8321:
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9569  001E08  C082  F02B         	movff	efgtoa@h,___flsub@b
  9570  001E0C  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  9571  001E10  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  9572  001E14  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  9573  001E18  C094  F016         	movff	efgtoa@u,___flmul@a
  9574  001E1C  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  9575  001E20  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  9576  001E24  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  9577  001E28  C086  F012         	movff	efgtoa@l,___flmul@b
  9578  001E2C  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  9579  001E30  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  9580  001E34  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  9581  001E38  ECCB  F012         	call	___flmul	;wreg free
  9582  001E3C  C012  F02F         	movff	?___flmul,___flsub@a
  9583  001E40  C013  F030         	movff	?___flmul+1,___flsub@a+1
  9584  001E44  C014  F031         	movff	?___flmul+2,___flsub@a+2
  9585  001E48  C015  F032         	movff	?___flmul+3,___flsub@a+3
  9586  001E4C  EC54  F02C         	call	___flsub	;wreg free
  9587  001E50  C02B  F082         	movff	?___flsub,efgtoa@h
  9588  001E54  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  9589  001E58  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  9590  001E5C  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  9591  001E60                     
  9592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9593  001E60  C094  F004         	movff	efgtoa@u,___fldiv@b
  9594  001E64  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  9595  001E68  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  9596  001E6C  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  9597  001E70  0E00               	movlw	0
  9598  001E72  6E08               	movwf	___fldiv@a^0,c
  9599  001E74  0E00               	movlw	0
  9600  001E76  6E09               	movwf	(___fldiv@a+1)^0,c
  9601  001E78  0E20               	movlw	32
  9602  001E7A  6E0A               	movwf	(___fldiv@a+2)^0,c
  9603  001E7C  0E41               	movlw	65
  9604  001E7E  6E0B               	movwf	(___fldiv@a+3)^0,c
  9605  001E80  ECE0  F014         	call	___fldiv	;wreg free
  9606  001E84  C004  F094         	movff	?___fldiv,efgtoa@u
  9607  001E88  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  9608  001E8C  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  9609  001E90  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  9610  001E94                     
  9611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9612  001E94  0100               	movlb	0	; () banked
  9613  001E96  0776               	decf	efgtoa@ne& (0+255),f,b
  9614  001E98  A0D8               	btfss	status,0,c
  9615  001E9A  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  9616  001E9C                     
  9617                           ; BSR set to: 0
  9618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9619  001E9C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9620  001E9E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9621  001EA0                     l8329:
  9622                           
  9623                           ; BSR set to: 0
  9624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9625  001EA0  5174               	movf	efgtoa@m& (0+255),w,b
  9626  001EA2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9627  001EA4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9628  001EA6  0A80               	xorlw	128
  9629  001EA8  6E3E               	movwf	??_efgtoa^0,c
  9630  001EAA  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9631  001EAC  0A80               	xorlw	128
  9632  001EAE  583E               	subwfb	??_efgtoa^0,w,c
  9633  001EB0  B0D8               	btfsc	status,0,c
  9634  001EB2  EF5D  F00F         	goto	u10791
  9635  001EB6  EF5F  F00F         	goto	u10790
  9636  001EBA                     u10791:
  9637  001EBA  EF6D  F00F         	goto	l8333
  9638  001EBE                     u10790:
  9639  001EBE                     
  9640                           ; BSR set to: 0
  9641  001EBE  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9642  001EC0  EF6B  F00F         	goto	u10801
  9643  001EC4  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  9644  001EC6  E109               	bnz	u10800
  9645  001EC8  0E4B               	movlw	75
  9646  001ECA  5D92               	subwf	efgtoa@n& (0+255),w,b
  9647  001ECC  A0D8               	btfss	status,0,c
  9648  001ECE  EF6B  F00F         	goto	u10801
  9649  001ED2  EF6D  F00F         	goto	u10800
  9650  001ED6                     u10801:
  9651  001ED6  EF63  F00E         	goto	l8281
  9652  001EDA                     u10800:
  9653  001EDA                     l8333:
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9657  001EDA  5172               	movf	efgtoa@pp& (0+255),w,b
  9658  001EDC  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9659  001EDE  A4D8               	btfss	status,2,c
  9660  001EE0  EF74  F00F         	goto	u10811
  9661  001EE4  EF76  F00F         	goto	u10810
  9662  001EE8                     u10811:
  9663  001EE8  EF87  F00F         	goto	l8341
  9664  001EEC                     u10810:
  9665  001EEC                     
  9666                           ; BSR set to: 0
  9667  001EEC  A9F6               	btfss	_flags& (0+255),4,b
  9668  001EEE  EF7B  F00F         	goto	u10821
  9669  001EF2  EF7D  F00F         	goto	u10820
  9670  001EF6                     u10821:
  9671  001EF6  EF87  F00F         	goto	l8341
  9672  001EFA                     u10820:
  9673  001EFA                     
  9674                           ; BSR set to: 0
  9675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9676  001EFA  0E64               	movlw	low _dbuf
  9677  001EFC  2592               	addwf	efgtoa@n& (0+255),w,b
  9678  001EFE  6ED9               	movwf	fsr2l,c
  9679  001F00  0E01               	movlw	high _dbuf
  9680  001F02  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9681  001F04  6EDA               	movwf	fsr2h,c
  9682  001F06  0E2E               	movlw	46
  9683  001F08  6EDF               	movwf	indf2,c
  9684  001F0A                     
  9685                           ; BSR set to: 0
  9686  001F0A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9687  001F0C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9688  001F0E                     l8341:
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9692  001F0E  0E64               	movlw	low _dbuf
  9693  001F10  2592               	addwf	efgtoa@n& (0+255),w,b
  9694  001F12  6ED9               	movwf	fsr2l,c
  9695  001F14  0E01               	movlw	high _dbuf
  9696  001F16  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9697  001F18  6EDA               	movwf	fsr2h,c
  9698  001F1A  0E00               	movlw	0
  9699  001F1C  6EDF               	movwf	indf2,c
  9700  001F1E                     
  9701                           ; BSR set to: 0
  9702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9703  001F1E  0E65               	movlw	101
  9704  001F20  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9705  001F22  A4D8               	btfss	status,2,c
  9706  001F24  EF96  F00F         	goto	u10831
  9707  001F28  EF98  F00F         	goto	u10830
  9708  001F2C                     u10831:
  9709  001F2C  EF46  F00B         	goto	l8153
  9710  001F30                     u10830:
  9711  001F30                     
  9712                           ; BSR set to: 0
  9713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9714  001F30  0E00               	movlw	0
  9715  001F32  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9716  001F34  0E4F               	movlw	79
  9717  001F36  6F8A               	movwf	efgtoa@i& (0+255),b
  9718  001F38                     
  9719                           ; BSR set to: 0
  9720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9721  001F38  0E64               	movlw	low _dbuf
  9722  001F3A  258A               	addwf	efgtoa@i& (0+255),w,b
  9723  001F3C  6ED9               	movwf	fsr2l,c
  9724  001F3E  0E01               	movlw	high _dbuf
  9725  001F40  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9726  001F42  6EDA               	movwf	fsr2h,c
  9727  001F44  0E00               	movlw	0
  9728  001F46  6EDF               	movwf	indf2,c
  9729  001F48                     
  9730                           ; BSR set to: 0
  9731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9732  001F48  0E00               	movlw	0
  9733  001F4A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9734  001F4C  0E00               	movlw	0
  9735  001F4E  6F7A               	movwf	efgtoa@sign& (0+255),b
  9736  001F50                     
  9737                           ; BSR set to: 0
  9738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9739  001F50  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9740  001F52  EFAF  F00F         	goto	u10840
  9741  001F56  EFAD  F00F         	goto	u10841
  9742  001F5A                     u10841:
  9743  001F5A  EFB7  F00F         	goto	l8357
  9744  001F5E                     u10840:
  9745  001F5E                     
  9746                           ; BSR set to: 0
  9747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9748  001F5E  0E00               	movlw	0
  9749  001F60  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9750  001F62  0E01               	movlw	1
  9751  001F64  6F7A               	movwf	efgtoa@sign& (0+255),b
  9752  001F66                     
  9753                           ; BSR set to: 0
  9754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9755  001F66  6D90               	negf	efgtoa@e& (0+255),b
  9756  001F68  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  9757  001F6A  B0D8               	btfsc	status,0,c
  9758  001F6C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  9759  001F6E                     l8357:
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9763  001F6E  0E00               	movlw	0
  9764  001F70  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  9765  001F72  0E02               	movlw	2
  9766  001F74  6F7C               	movwf	efgtoa@p& (0+255),b
  9767                           
  9768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9769  001F76  EFE8  F00F         	goto	l8369
  9770  001F7A                     l8359:
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9774  001F7A  078A               	decf	efgtoa@i& (0+255),f,b
  9775  001F7C  A0D8               	btfss	status,0,c
  9776  001F7E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9777  001F80                     
  9778                           ; BSR set to: 0
  9779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9780  001F80  0E64               	movlw	low _dbuf
  9781  001F82  258A               	addwf	efgtoa@i& (0+255),w,b
  9782  001F84  6ED9               	movwf	fsr2l,c
  9783  001F86  0E01               	movlw	high _dbuf
  9784  001F88  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9785  001F8A  6EDA               	movwf	fsr2h,c
  9786  001F8C  C090  F004         	movff	efgtoa@e,___awmod@dividend
  9787  001F90  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  9788  001F94  0E00               	movlw	0
  9789  001F96  6E07               	movwf	(___awmod@divisor+1)^0,c
  9790  001F98  0E0A               	movlw	10
  9791  001F9A  6E06               	movwf	___awmod@divisor^0,c
  9792  001F9C  EC57  F029         	call	___awmod	;wreg free
  9793  001FA0  5004               	movf	?___awmod^0,w,c
  9794  001FA2  0F30               	addlw	48
  9795  001FA4  6EDF               	movwf	indf2,c
  9796  001FA6                     
  9797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9798  001FA6  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  9799  001FAA  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  9800  001FAE  0E00               	movlw	0
  9801  001FB0  6E07               	movwf	(___awdiv@divisor+1)^0,c
  9802  001FB2  0E0A               	movlw	10
  9803  001FB4  6E06               	movwf	___awdiv@divisor^0,c
  9804  001FB6  ECF5  F028         	call	___awdiv	;wreg free
  9805  001FBA  C004  F090         	movff	?___awdiv,efgtoa@e
  9806  001FBE  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  9807  001FC2                     
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9809  001FC2  0100               	movlb	0	; () banked
  9810  001FC4  077C               	decf	efgtoa@p& (0+255),f,b
  9811  001FC6  A0D8               	btfss	status,0,c
  9812  001FC8  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  9813  001FCA                     
  9814                           ; BSR set to: 0
  9815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  9816  001FCA  077F               	decf	efgtoa@w& (0+255),f,b
  9817  001FCC  A0D8               	btfss	status,0,c
  9818  001FCE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9819  001FD0                     l8369:
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9823  001FD0  5190               	movf	efgtoa@e& (0+255),w,b
  9824  001FD2  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9825  001FD4  A4D8               	btfss	status,2,c
  9826  001FD6  EFEF  F00F         	goto	u10851
  9827  001FDA  EFF1  F00F         	goto	u10850
  9828  001FDE                     u10851:
  9829  001FDE  EFBD  F00F         	goto	l8359
  9830  001FE2                     u10850:
  9831  001FE2                     
  9832                           ; BSR set to: 0
  9833  001FE2  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9834  001FE4  EFFE  F00F         	goto	u10860
  9835  001FE8  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  9836  001FEA  E106               	bnz	u10861
  9837  001FEC  057C               	decf	efgtoa@p& (0+255),w,b
  9838  001FEE  B0D8               	btfsc	status,0,c
  9839  001FF0  EFFC  F00F         	goto	u10861
  9840  001FF4  EFFE  F00F         	goto	u10860
  9841  001FF8                     u10861:
  9842  001FF8  EFBD  F00F         	goto	l8359
  9843  001FFC                     u10860:
  9844  001FFC                     
  9845                           ; BSR set to: 0
  9846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  9847  001FFC  078A               	decf	efgtoa@i& (0+255),f,b
  9848  001FFE  A0D8               	btfss	status,0,c
  9849  002000  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9850  002002                     
  9851                           ; BSR set to: 0
  9852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  9853  002002  517A               	movf	efgtoa@sign& (0+255),w,b
  9854  002004  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9855  002006  A4D8               	btfss	status,2,c
  9856  002008  EF08  F010         	goto	u10871
  9857  00200C  EF0A  F010         	goto	u10870
  9858  002010                     u10871:
  9859  002010  EF10  F010         	goto	l8379
  9860  002014                     u10870:
  9861  002014                     
  9862                           ; BSR set to: 0
  9863  002014  0E00               	movlw	0
  9864  002016  6F6B               	movwf	(_efgtoa$1335+1)& (0+255),b
  9865  002018  0E2B               	movlw	43
  9866  00201A  6F6A               	movwf	_efgtoa$1335& (0+255),b
  9867  00201C  EF14  F010         	goto	l8381
  9868  002020                     l8379:
  9869                           
  9870                           ; BSR set to: 0
  9871  002020  0E00               	movlw	0
  9872  002022  6F6B               	movwf	(_efgtoa$1335+1)& (0+255),b
  9873  002024  0E2D               	movlw	45
  9874  002026  6F6A               	movwf	_efgtoa$1335& (0+255),b
  9875  002028                     l8381:
  9876                           
  9877                           ; BSR set to: 0
  9878  002028  0E64               	movlw	low _dbuf
  9879  00202A  258A               	addwf	efgtoa@i& (0+255),w,b
  9880  00202C  6ED9               	movwf	fsr2l,c
  9881  00202E  0E01               	movlw	high _dbuf
  9882  002030  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9883  002032  6EDA               	movwf	fsr2h,c
  9884  002034  C06A  FFDF         	movff	_efgtoa$1335,indf2
  9885  002038                     
  9886                           ; BSR set to: 0
  9887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  9888  002038  077F               	decf	efgtoa@w& (0+255),f,b
  9889  00203A  A0D8               	btfss	status,0,c
  9890  00203C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9891  00203E                     
  9892                           ; BSR set to: 0
  9893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9894  00203E  078A               	decf	efgtoa@i& (0+255),f,b
  9895  002040  A0D8               	btfss	status,0,c
  9896  002042  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9897  002044                     
  9898                           ; BSR set to: 0
  9899  002044  0EBF               	movlw	191
  9900  002046  6E3E               	movwf	??_efgtoa^0,c
  9901  002048  0EFF               	movlw	255
  9902  00204A  6E3F               	movwf	(??_efgtoa+1)^0,c
  9903  00204C  503D               	movf	efgtoa@c^0,w,c
  9904  00204E  6E40               	movwf	(??_efgtoa+2)^0,c
  9905  002050  6A41               	clrf	(??_efgtoa+3)^0,c
  9906  002052  503E               	movf	??_efgtoa^0,w,c
  9907  002054  2640               	addwf	(??_efgtoa+2)^0,f,c
  9908  002056  503F               	movf	(??_efgtoa+1)^0,w,c
  9909  002058  2241               	addwfc	(??_efgtoa+3)^0,f,c
  9910  00205A  5041               	movf	(??_efgtoa+3)^0,w,c
  9911  00205C  E10A               	bnz	u10880
  9912  00205E  0E1A               	movlw	26
  9913  002060  5C40               	subwf	(??_efgtoa+2)^0,w,c
  9914  002062  A0D8               	btfss	status,0,c
  9915  002064  EF36  F010         	goto	u10881
  9916  002068  EF39  F010         	goto	u10880
  9917  00206C                     u10881:
  9918  00206C  0E01               	movlw	1
  9919  00206E  EF3A  F010         	goto	u10890
  9920  002072                     u10880:
  9921  002072  0E00               	movlw	0
  9922  002074                     u10890:
  9923  002074  6F6E               	movwf	_efgtoa$1337& (0+255),b
  9924  002076  6B6F               	clrf	(_efgtoa$1337+1)& (0+255),b
  9925  002078                     
  9926                           ; BSR set to: 0
  9927  002078  516E               	movf	_efgtoa$1337& (0+255),w,b
  9928  00207A  116F               	iorwf	(_efgtoa$1337+1)& (0+255),w,b
  9929  00207C  A4D8               	btfss	status,2,c
  9930  00207E  EF43  F010         	goto	u10901
  9931  002082  EF45  F010         	goto	u10900
  9932  002086                     u10901:
  9933  002086  EF4B  F010         	goto	l8395
  9934  00208A                     u10900:
  9935  00208A                     
  9936                           ; BSR set to: 0
  9937  00208A  0E00               	movlw	0
  9938  00208C  6F6D               	movwf	(_efgtoa$1336+1)& (0+255),b
  9939  00208E  0E65               	movlw	101
  9940  002090  6F6C               	movwf	_efgtoa$1336& (0+255),b
  9941  002092  EF4F  F010         	goto	l8397
  9942  002096                     l8395:
  9943                           
  9944                           ; BSR set to: 0
  9945  002096  0E00               	movlw	0
  9946  002098  6F6D               	movwf	(_efgtoa$1336+1)& (0+255),b
  9947  00209A  0E45               	movlw	69
  9948  00209C  6F6C               	movwf	_efgtoa$1336& (0+255),b
  9949  00209E                     l8397:
  9950                           
  9951                           ; BSR set to: 0
  9952  00209E  0E64               	movlw	low _dbuf
  9953  0020A0  258A               	addwf	efgtoa@i& (0+255),w,b
  9954  0020A2  6ED9               	movwf	fsr2l,c
  9955  0020A4  0E01               	movlw	high _dbuf
  9956  0020A6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9957  0020A8  6EDA               	movwf	fsr2h,c
  9958  0020AA  C06C  FFDF         	movff	_efgtoa$1336,indf2
  9959  0020AE                     
  9960                           ; BSR set to: 0
  9961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  9962  0020AE  077F               	decf	efgtoa@w& (0+255),f,b
  9963  0020B0  A0D8               	btfss	status,0,c
  9964  0020B2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9965  0020B4                     
  9966                           ; BSR set to: 0
  9967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  9968  0020B4  0E64               	movlw	low _dbuf
  9969  0020B6  2592               	addwf	efgtoa@n& (0+255),w,b
  9970  0020B8  6E04               	movwf	strcpy@dest^0,c
  9971  0020BA  0E01               	movlw	high _dbuf
  9972  0020BC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9973  0020BE  6E05               	movwf	(strcpy@dest+1)^0,c
  9974  0020C0  0E64               	movlw	low _dbuf
  9975  0020C2  258A               	addwf	efgtoa@i& (0+255),w,b
  9976  0020C4  6E06               	movwf	strcpy@src^0,c
  9977  0020C6  0E01               	movlw	high _dbuf
  9978  0020C8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9979  0020CA  6E07               	movwf	(strcpy@src+1)^0,c
  9980  0020CC  EC2E  F02B         	call	_strcpy	;wreg free
  9981  0020D0  EF46  F00B         	goto	l8153
  9982  0020D4                     l546:
  9983  0020D4  0012               	return		;funcret
  9984  0020D6                     __end_of_efgtoa:
  9985                           	opt callstack 0
  9986                           
  9987 ;; *************** function _tolower *****************
  9988 ;; Defined at:
  9989 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  c               2    9[COMRAM] int 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  2    9[COMRAM] int 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10005 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10006 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10007 ;;Total ram usage:        8 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:    5
 10010 ;; This function calls:
 10011 ;;		_isupper
 10012 ;; This function is called by:
 10013 ;;		_efgtoa
 10014 ;;		_vfpfcnvrt
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text16
 10019  00559E                     __ptext16:
 10020                           	opt callstack 0
 10021  00559E                     _tolower:
 10022                           	opt callstack 21
 10023  00559E  0EBF               	movlw	191
 10024  0055A0  6E0C               	movwf	??_tolower^0,c
 10025  0055A2  0EFF               	movlw	255
 10026  0055A4  6E0D               	movwf	(??_tolower+1)^0,c
 10027  0055A6  C00A  F00E         	movff	tolower@c,??_tolower+2
 10028  0055AA  C00B  F00F         	movff	tolower@c+1,??_tolower+3
 10029  0055AE  500C               	movf	??_tolower^0,w,c
 10030  0055B0  260E               	addwf	(??_tolower+2)^0,f,c
 10031  0055B2  500D               	movf	(??_tolower+1)^0,w,c
 10032  0055B4  220F               	addwfc	(??_tolower+3)^0,f,c
 10033  0055B6  500F               	movf	(??_tolower+3)^0,w,c
 10034  0055B8  E10A               	bnz	u9110
 10035  0055BA  0E1A               	movlw	26
 10036  0055BC  5C0E               	subwf	(??_tolower+2)^0,w,c
 10037  0055BE  A0D8               	btfss	status,0,c
 10038  0055C0  EFE4  F02A         	goto	u9111
 10039  0055C4  EFE7  F02A         	goto	u9110
 10040  0055C8                     u9111:
 10041  0055C8  0E01               	movlw	1
 10042  0055CA  EFE8  F02A         	goto	u9120
 10043  0055CE                     u9110:
 10044  0055CE  0E00               	movlw	0
 10045  0055D0                     u9120:
 10046  0055D0  6E10               	movwf	_tolower$2094^0,c
 10047  0055D2  6A11               	clrf	(_tolower$2094+1)^0,c
 10048  0055D4  5010               	movf	_tolower$2094^0,w,c
 10049  0055D6  1011               	iorwf	(_tolower$2094+1)^0,w,c
 10050  0055D8  B4D8               	btfsc	status,2,c
 10051  0055DA  EFF1  F02A         	goto	u9131
 10052  0055DE  EFF3  F02A         	goto	u9130
 10053  0055E2                     u9131:
 10054  0055E2  EFFA  F02A         	goto	l1613
 10055  0055E6                     u9130:
 10056  0055E6  0E20               	movlw	32
 10057  0055E8  100A               	iorwf	tolower@c^0,w,c
 10058  0055EA  6E0A               	movwf	?_tolower^0,c
 10059  0055EC  500B               	movf	(tolower@c+1)^0,w,c
 10060  0055EE  6E0B               	movwf	(?_tolower+1)^0,c
 10061  0055F0  EFFE  F02A         	goto	l1618
 10062  0055F4                     l1613:
 10063  0055F4  C00A  F00A         	movff	tolower@c,?_tolower
 10064  0055F8  C00B  F00B         	movff	tolower@c+1,?_tolower+1
 10065  0055FC                     l1618:
 10066  0055FC  0012               	return		;funcret
 10067  0055FE                     __end_of_tolower:
 10068                           	opt callstack 0
 10069                           
 10070 ;; *************** function _isupper *****************
 10071 ;; Defined at:
 10072 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  c               2    3[COMRAM] int 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;		None
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  2    3[COMRAM] int 
 10079 ;; Registers used:
 10080 ;;		wreg, status,2, status,0
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10089 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10090 ;;Total ram usage:        6 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    4
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		_efgtoa
 10097 ;;		_xtoa
 10098 ;;		_vfpfcnvrt
 10099 ;;		_tolower
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           	psect	text17
 10104  005AA8                     __ptext17:
 10105                           	opt callstack 0
 10106  005AA8                     _isupper:
 10107                           	opt callstack 21
 10108  005AA8  0EBF               	movlw	191
 10109  005AAA  6E06               	movwf	??_isupper^0,c
 10110  005AAC  0EFF               	movlw	255
 10111  005AAE  6E07               	movwf	(??_isupper+1)^0,c
 10112  005AB0  C004  F008         	movff	isupper@c,??_isupper+2
 10113  005AB4  C005  F009         	movff	isupper@c+1,??_isupper+3
 10114  005AB8  5006               	movf	??_isupper^0,w,c
 10115  005ABA  2608               	addwf	(??_isupper+2)^0,f,c
 10116  005ABC  5007               	movf	(??_isupper+1)^0,w,c
 10117  005ABE  2209               	addwfc	(??_isupper+3)^0,f,c
 10118  005AC0  5009               	movf	(??_isupper+3)^0,w,c
 10119  005AC2  E10A               	bnz	u8540
 10120  005AC4  0E1A               	movlw	26
 10121  005AC6  5C08               	subwf	(??_isupper+2)^0,w,c
 10122  005AC8  A0D8               	btfss	status,0,c
 10123  005ACA  EF69  F02D         	goto	u8541
 10124  005ACE  EF6C  F02D         	goto	u8540
 10125  005AD2                     u8541:
 10126  005AD2  0E01               	movlw	1
 10127  005AD4  EF6D  F02D         	goto	u8550
 10128  005AD8                     u8540:
 10129  005AD8  0E00               	movlw	0
 10130  005ADA                     u8550:
 10131  005ADA  6E04               	movwf	?_isupper^0,c
 10132  005ADC  6A05               	clrf	(?_isupper+1)^0,c
 10133  005ADE  0012               	return		;funcret
 10134  005AE0                     __end_of_isupper:
 10135                           	opt callstack 0
 10136                           
 10137 ;; *************** function _strcpy *****************
 10138 ;; Defined at:
 10139 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;  dest            2    3[COMRAM] PTR unsigned char 
 10142 ;;		 -> dbuf(80), 
 10143 ;;  src             2    5[COMRAM] PTR const unsigned char 
 10144 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 10145 ;;		 -> dbuf(80), 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  d               2   11[COMRAM] PTR unsigned char 
 10148 ;;		 -> dbuf(80), 
 10149 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10150 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
 10151 ;;		 -> dbuf(80), 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  2    3[COMRAM] PTR unsigned char 
 10154 ;; Registers used:
 10155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10162 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10164 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10165 ;;Total ram usage:       10 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; Hardware stack levels required when called:    4
 10168 ;; This function calls:
 10169 ;;		Nothing
 10170 ;; This function is called by:
 10171 ;;		_efgtoa
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           	psect	text18
 10176  00565C                     __ptext18:
 10177                           	opt callstack 0
 10178  00565C                     _strcpy:
 10179                           	opt callstack 21
 10180  00565C  C006  F00A         	movff	strcpy@src,strcpy@s
 10181  005660  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
 10182  005664  C004  F00C         	movff	strcpy@dest,strcpy@d
 10183  005668  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
 10184  00566C                     l7395:
 10185  00566C  500A               	movf	strcpy@s^0,w,c
 10186  00566E  6E08               	movwf	??_strcpy^0,c
 10187  005670  500B               	movf	(strcpy@s+1)^0,w,c
 10188  005672  6E09               	movwf	(??_strcpy+1)^0,c
 10189  005674  4A0A               	infsnz	strcpy@s^0,f,c
 10190  005676  2A0B               	incf	(strcpy@s+1)^0,f,c
 10191  005678  C008  FFF6         	movff	??_strcpy,tblptrl
 10192  00567C  C009  FFF7         	movff	??_strcpy+1,tblptrh
 10193  005680  0E00               	movlw	low (__mediumconst shr (0+16))
 10194  005682  6EF8               	movwf	tblptru,c
 10195  005684  C00C  FFD9         	movff	strcpy@d,fsr2l
 10196  005688  C00D  FFDA         	movff	strcpy@d+1,fsr2h
 10197  00568C  4A0C               	infsnz	strcpy@d^0,f,c
 10198  00568E  2A0D               	incf	(strcpy@d+1)^0,f,c
 10199  005690  0E0E               	movlw	(high __ramtop+-1)
 10200  005692  64F7               	cpfsgt	tblptrh,c
 10201  005694  D003               	bra	u9097
 10202  005696  0008               	tblrd		*
 10203  005698  50F5               	movf	tablat,w,c
 10204  00569A  D005               	bra	u9090
 10205  00569C                     u9097:
 10206  00569C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10207  0056A0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10208  0056A4  50E7               	movf	indf1,w,c
 10209  0056A6                     u9090:
 10210  0056A6  6EDF               	movwf	indf2,c
 10211  0056A8  50DF               	movf	indf2,w,c
 10212  0056AA  A4D8               	btfss	status,2,c
 10213  0056AC  EF5A  F02B         	goto	u9101
 10214  0056B0  EF5C  F02B         	goto	u9100
 10215  0056B4                     u9101:
 10216  0056B4  EF36  F02B         	goto	l7395
 10217  0056B8                     u9100:
 10218  0056B8  0012               	return		;funcret
 10219  0056BA                     __end_of_strcpy:
 10220                           	opt callstack 0
 10221                           
 10222 ;; *************** function _floorf *****************
 10223 ;; Defined at:
 10224 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  x               4   28[COMRAM] float 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;  u               4   44[COMRAM] struct .
 10229 ;;  m               4   38[COMRAM] unsigned long 
 10230 ;;  e               2   42[COMRAM] int 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  4   28[COMRAM] float 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2, status,0
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10243 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10244 ;;Total ram usage:       20 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    4
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_efgtoa
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text19
 10255  0038EA                     __ptext19:
 10256                           	opt callstack 0
 10257  0038EA                     _floorf:
 10258                           	opt callstack 21
 10259  0038EA  C0DC  F02D         	movff	floorf@F524,floorf@u
 10260  0038EE  C0DD  F02E         	movff	floorf@F524+1,floorf@u+1
 10261  0038F2  C0DE  F02F         	movff	floorf@F524+2,floorf@u+2
 10262  0038F6  C0DF  F030         	movff	floorf@F524+3,floorf@u+3
 10263  0038FA  C01D  F02D         	movff	floorf@x,floorf@u
 10264  0038FE  C01E  F02E         	movff	floorf@x+1,floorf@u+1
 10265  003902  C01F  F02F         	movff	floorf@x+2,floorf@u+2
 10266  003906  C020  F030         	movff	floorf@x+3,floorf@u+3
 10267  00390A  0E81               	movlw	129
 10268  00390C  6E21               	movwf	??_floorf^0,c
 10269  00390E  0EFF               	movlw	255
 10270  003910  6E22               	movwf	(??_floorf+1)^0,c
 10271  003912  C02D  F023         	movff	floorf@u,??_floorf+2
 10272  003916  C02E  F024         	movff	floorf@u+1,??_floorf+3
 10273  00391A  C02F  F025         	movff	floorf@u+2,??_floorf+4
 10274  00391E  C030  F026         	movff	floorf@u+3,??_floorf+5
 10275  003922  0E18               	movlw	24
 10276  003924  EF99  F01C         	goto	u9140
 10277  003928                     u9145:
 10278  003928  90D8               	bcf	status,0,c
 10279  00392A  3226               	rrcf	(??_floorf+5)^0,f,c
 10280  00392C  3225               	rrcf	(??_floorf+4)^0,f,c
 10281  00392E  3224               	rrcf	(??_floorf+3)^0,f,c
 10282  003930  3223               	rrcf	(??_floorf+2)^0,f,c
 10283  003932                     u9140:
 10284  003932  2EE8               	decfsz	wreg,f,c
 10285  003934  EF94  F01C         	goto	u9145
 10286  003938  5023               	movf	(??_floorf+2)^0,w,c
 10287  00393A  2421               	addwf	??_floorf^0,w,c
 10288  00393C  6E2B               	movwf	floorf@e^0,c
 10289  00393E  0E00               	movlw	0
 10290  003940  2022               	addwfc	(??_floorf+1)^0,w,c
 10291  003942  6E2C               	movwf	(floorf@e+1)^0,c
 10292  003944  BE2C               	btfsc	(floorf@e+1)^0,7,c
 10293  003946  EFAE  F01C         	goto	u9151
 10294  00394A  502C               	movf	(floorf@e+1)^0,w,c
 10295  00394C  E109               	bnz	u9150
 10296  00394E  0E17               	movlw	23
 10297  003950  5C2B               	subwf	floorf@e^0,w,c
 10298  003952  A0D8               	btfss	status,0,c
 10299  003954  EFAE  F01C         	goto	u9151
 10300  003958  EFB0  F01C         	goto	u9150
 10301  00395C                     u9151:
 10302  00395C  EFBA  F01C         	goto	l7413
 10303  003960                     u9150:
 10304  003960                     l7411:
 10305  003960  C01D  F01D         	movff	floorf@x,?_floorf
 10306  003964  C01E  F01E         	movff	floorf@x+1,?_floorf+1
 10307  003968  C01F  F01F         	movff	floorf@x+2,?_floorf+2
 10308  00396C  C020  F020         	movff	floorf@x+3,?_floorf+3
 10309  003970  EF7D  F01D         	goto	l1524
 10310  003974                     l7413:
 10311  003974  BE2C               	btfsc	(floorf@e+1)^0,7,c
 10312  003976  EFBF  F01C         	goto	u9161
 10313  00397A  EFC1  F01C         	goto	u9160
 10314  00397E                     u9161:
 10315  00397E  EF31  F01D         	goto	l7423
 10316  003982                     u9160:
 10317  003982  C02B  F021         	movff	floorf@e,??_floorf
 10318  003986  0EFF               	movlw	255
 10319  003988  6E22               	movwf	(??_floorf+1)^0,c
 10320  00398A  0EFF               	movlw	255
 10321  00398C  6E23               	movwf	(??_floorf+2)^0,c
 10322  00398E  0E7F               	movlw	127
 10323  003990  6E24               	movwf	(??_floorf+3)^0,c
 10324  003992  0E00               	movlw	0
 10325  003994  6E25               	movwf	(??_floorf+4)^0,c
 10326  003996                     u9175:
 10327  003996  6621               	tstfsz	??_floorf^0,c
 10328  003998  EFD0  F01C         	goto	u9176
 10329  00399C  EFD8  F01C         	goto	u9177
 10330  0039A0                     u9176:
 10331  0039A0  3425               	rlcf	(??_floorf+4)^0,w,c
 10332  0039A2  3225               	rrcf	(??_floorf+4)^0,f,c
 10333  0039A4  3224               	rrcf	(??_floorf+3)^0,f,c
 10334  0039A6  3223               	rrcf	(??_floorf+2)^0,f,c
 10335  0039A8  3222               	rrcf	(??_floorf+1)^0,f,c
 10336  0039AA  2E21               	decfsz	??_floorf^0,f,c
 10337  0039AC  EFCB  F01C         	goto	u9175
 10338  0039B0                     u9177:
 10339  0039B0  C022  F027         	movff	??_floorf+1,floorf@m
 10340  0039B4  C023  F028         	movff	??_floorf+2,floorf@m+1
 10341  0039B8  C024  F029         	movff	??_floorf+3,floorf@m+2
 10342  0039BC  C025  F02A         	movff	??_floorf+4,floorf@m+3
 10343  0039C0  5027               	movf	floorf@m^0,w,c
 10344  0039C2  142D               	andwf	floorf@u^0,w,c
 10345  0039C4  6E21               	movwf	??_floorf^0,c
 10346  0039C6  5028               	movf	(floorf@m+1)^0,w,c
 10347  0039C8  142E               	andwf	(floorf@u+1)^0,w,c
 10348  0039CA  6E22               	movwf	(??_floorf+1)^0,c
 10349  0039CC  5029               	movf	(floorf@m+2)^0,w,c
 10350  0039CE  142F               	andwf	(floorf@u+2)^0,w,c
 10351  0039D0  6E23               	movwf	(??_floorf+2)^0,c
 10352  0039D2  502A               	movf	(floorf@m+3)^0,w,c
 10353  0039D4  1430               	andwf	(floorf@u+3)^0,w,c
 10354  0039D6  6E24               	movwf	(??_floorf+3)^0,c
 10355  0039D8  5021               	movf	??_floorf^0,w,c
 10356  0039DA  1022               	iorwf	(??_floorf+1)^0,w,c
 10357  0039DC  1023               	iorwf	(??_floorf+2)^0,w,c
 10358  0039DE  1024               	iorwf	(??_floorf+3)^0,w,c
 10359  0039E0  A4D8               	btfss	status,2,c
 10360  0039E2  EFF5  F01C         	goto	u9181
 10361  0039E6  EFF7  F01C         	goto	u9180
 10362  0039EA                     u9181:
 10363  0039EA  EFF9  F01C         	goto	l7419
 10364  0039EE                     u9180:
 10365  0039EE  EFB0  F01C         	goto	l7411
 10366  0039F2                     l7419:
 10367  0039F2  C02D  F021         	movff	floorf@u,??_floorf
 10368  0039F6  C02E  F022         	movff	floorf@u+1,??_floorf+1
 10369  0039FA  C02F  F023         	movff	floorf@u+2,??_floorf+2
 10370  0039FE  C030  F024         	movff	floorf@u+3,??_floorf+3
 10371  003A02  0E20               	movlw	32
 10372  003A04  EF09  F01D         	goto	u9190
 10373  003A08                     u9195:
 10374  003A08  90D8               	bcf	status,0,c
 10375  003A0A  3224               	rrcf	(??_floorf+3)^0,f,c
 10376  003A0C  3223               	rrcf	(??_floorf+2)^0,f,c
 10377  003A0E  3222               	rrcf	(??_floorf+1)^0,f,c
 10378  003A10  3221               	rrcf	??_floorf^0,f,c
 10379  003A12                     u9190:
 10380  003A12  2EE8               	decfsz	wreg,f,c
 10381  003A14  EF04  F01D         	goto	u9195
 10382  003A18  5021               	movf	??_floorf^0,w,c
 10383  003A1A  1022               	iorwf	(??_floorf+1)^0,w,c
 10384  003A1C  1023               	iorwf	(??_floorf+2)^0,w,c
 10385  003A1E  1024               	iorwf	(??_floorf+3)^0,w,c
 10386  003A20  B4D8               	btfsc	status,2,c
 10387  003A22  EF15  F01D         	goto	u9201
 10388  003A26  EF17  F01D         	goto	u9200
 10389  003A2A                     u9201:
 10390  003A2A  EF1F  F01D         	goto	l1527
 10391  003A2E                     u9200:
 10392  003A2E  5027               	movf	floorf@m^0,w,c
 10393  003A30  262D               	addwf	floorf@u^0,f,c
 10394  003A32  5028               	movf	(floorf@m+1)^0,w,c
 10395  003A34  222E               	addwfc	(floorf@u+1)^0,f,c
 10396  003A36  5029               	movf	(floorf@m+2)^0,w,c
 10397  003A38  222F               	addwfc	(floorf@u+2)^0,f,c
 10398  003A3A  502A               	movf	(floorf@m+3)^0,w,c
 10399  003A3C  2230               	addwfc	(floorf@u+3)^0,f,c
 10400  003A3E                     l1527:
 10401  003A3E  1C27               	comf	floorf@m^0,w,c
 10402  003A40  6E21               	movwf	??_floorf^0,c
 10403  003A42  1C28               	comf	(floorf@m+1)^0,w,c
 10404  003A44  6E22               	movwf	(??_floorf+1)^0,c
 10405  003A46  1C29               	comf	(floorf@m+2)^0,w,c
 10406  003A48  6E23               	movwf	(??_floorf+2)^0,c
 10407  003A4A  1C2A               	comf	(floorf@m+3)^0,w,c
 10408  003A4C  6E24               	movwf	(??_floorf+3)^0,c
 10409  003A4E  5021               	movf	??_floorf^0,w,c
 10410  003A50  162D               	andwf	floorf@u^0,f,c
 10411  003A52  5022               	movf	(??_floorf+1)^0,w,c
 10412  003A54  162E               	andwf	(floorf@u+1)^0,f,c
 10413  003A56  5023               	movf	(??_floorf+2)^0,w,c
 10414  003A58  162F               	andwf	(floorf@u+2)^0,f,c
 10415  003A5A  5024               	movf	(??_floorf+3)^0,w,c
 10416  003A5C  1630               	andwf	(floorf@u+3)^0,f,c
 10417  003A5E  EF75  F01D         	goto	l7431
 10418  003A62                     l7423:
 10419  003A62  C02D  F021         	movff	floorf@u,??_floorf
 10420  003A66  C02E  F022         	movff	floorf@u+1,??_floorf+1
 10421  003A6A  C02F  F023         	movff	floorf@u+2,??_floorf+2
 10422  003A6E  C030  F024         	movff	floorf@u+3,??_floorf+3
 10423  003A72  0E20               	movlw	32
 10424  003A74  EF41  F01D         	goto	u9210
 10425  003A78                     u9215:
 10426  003A78  90D8               	bcf	status,0,c
 10427  003A7A  3224               	rrcf	(??_floorf+3)^0,f,c
 10428  003A7C  3223               	rrcf	(??_floorf+2)^0,f,c
 10429  003A7E  3222               	rrcf	(??_floorf+1)^0,f,c
 10430  003A80  3221               	rrcf	??_floorf^0,f,c
 10431  003A82                     u9210:
 10432  003A82  2EE8               	decfsz	wreg,f,c
 10433  003A84  EF3C  F01D         	goto	u9215
 10434  003A88  5021               	movf	??_floorf^0,w,c
 10435  003A8A  1022               	iorwf	(??_floorf+1)^0,w,c
 10436  003A8C  1023               	iorwf	(??_floorf+2)^0,w,c
 10437  003A8E  1024               	iorwf	(??_floorf+3)^0,w,c
 10438  003A90  A4D8               	btfss	status,2,c
 10439  003A92  EF4D  F01D         	goto	u9221
 10440  003A96  EF4F  F01D         	goto	u9220
 10441  003A9A                     u9221:
 10442  003A9A  EF59  F01D         	goto	l7427
 10443  003A9E                     u9220:
 10444  003A9E  0E00               	movlw	0
 10445  003AA0  6E2D               	movwf	floorf@u^0,c
 10446  003AA2  0E00               	movlw	0
 10447  003AA4  6E2E               	movwf	(floorf@u+1)^0,c
 10448  003AA6  0E00               	movlw	0
 10449  003AA8  6E2F               	movwf	(floorf@u+2)^0,c
 10450  003AAA  0E00               	movlw	0
 10451  003AAC  6E30               	movwf	(floorf@u+3)^0,c
 10452  003AAE  EF75  F01D         	goto	l7431
 10453  003AB2                     l7427:
 10454  003AB2  90D8               	bcf	status,0,c
 10455  003AB4  342D               	rlcf	floorf@u^0,w,c
 10456  003AB6  6E21               	movwf	??_floorf^0,c
 10457  003AB8  342E               	rlcf	(floorf@u+1)^0,w,c
 10458  003ABA  6E22               	movwf	(??_floorf+1)^0,c
 10459  003ABC  342F               	rlcf	(floorf@u+2)^0,w,c
 10460  003ABE  6E23               	movwf	(??_floorf+2)^0,c
 10461  003AC0  3430               	rlcf	(floorf@u+3)^0,w,c
 10462  003AC2  6E24               	movwf	(??_floorf+3)^0,c
 10463  003AC4  5021               	movf	??_floorf^0,w,c
 10464  003AC6  1022               	iorwf	(??_floorf+1)^0,w,c
 10465  003AC8  1023               	iorwf	(??_floorf+2)^0,w,c
 10466  003ACA  1024               	iorwf	(??_floorf+3)^0,w,c
 10467  003ACC  B4D8               	btfsc	status,2,c
 10468  003ACE  EF6B  F01D         	goto	u9231
 10469  003AD2  EF6D  F01D         	goto	u9230
 10470  003AD6                     u9231:
 10471  003AD6  EF75  F01D         	goto	l7431
 10472  003ADA                     u9230:
 10473  003ADA  0E00               	movlw	0
 10474  003ADC  6E2D               	movwf	floorf@u^0,c
 10475  003ADE  0E00               	movlw	0
 10476  003AE0  6E2E               	movwf	(floorf@u+1)^0,c
 10477  003AE2  0E80               	movlw	128
 10478  003AE4  6E2F               	movwf	(floorf@u+2)^0,c
 10479  003AE6  0EBF               	movlw	191
 10480  003AE8  6E30               	movwf	(floorf@u+3)^0,c
 10481  003AEA                     l7431:
 10482  003AEA  C02D  F01D         	movff	floorf@u,?_floorf
 10483  003AEE  C02E  F01E         	movff	floorf@u+1,?_floorf+1
 10484  003AF2  C02F  F01F         	movff	floorf@u+2,?_floorf+2
 10485  003AF6  C030  F020         	movff	floorf@u+3,?_floorf+3
 10486  003AFA                     l1524:
 10487  003AFA  0012               	return		;funcret
 10488  003AFC                     __end_of_floorf:
 10489                           	opt callstack 0
 10490                           
 10491 ;; *************** function ___fpclassifyf *****************
 10492 ;; Defined at:
 10493 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  x               4    3[COMRAM] float 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  u               4   13[COMRAM] struct .
 10498 ;;  e               2   11[COMRAM] int 
 10499 ;; Return value:  Size  Location     Type
 10500 ;;                  2    3[COMRAM] int 
 10501 ;; Registers used:
 10502 ;;		wreg, status,2, status,0
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/0
 10505 ;;		On exit  : 0/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10509 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10510 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10511 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10512 ;;Total ram usage:       14 bytes
 10513 ;; Hardware stack levels used:    1
 10514 ;; Hardware stack levels required when called:    4
 10515 ;; This function calls:
 10516 ;;		Nothing
 10517 ;; This function is called by:
 10518 ;;		_efgtoa
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           	psect	text20
 10523  004D9C                     __ptext20:
 10524                           	opt callstack 0
 10525  004D9C                     ___fpclassifyf:
 10526                           	opt callstack 21
 10527  004D9C  C0E0  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10528  004DA0  C0E1  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10529  004DA4  C0E2  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10530  004DA8  C0E3  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10531  004DAC  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
 10532  004DB0  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10533  004DB4  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10534  004DB8  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10535  004DBC  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10536  004DC0  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10537  004DC4  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10538  004DC8  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10539  004DCC  0E18               	movlw	24
 10540  004DCE  EFEE  F026         	goto	u9020
 10541  004DD2                     u9025:
 10542  004DD2  90D8               	bcf	status,0,c
 10543  004DD4  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
 10544  004DD6  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
 10545  004DD8  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
 10546  004DDA  3208               	rrcf	??___fpclassifyf^0,f,c
 10547  004DDC                     u9020:
 10548  004DDC  2EE8               	decfsz	wreg,f,c
 10549  004DDE  EFE9  F026         	goto	u9025
 10550  004DE2  5008               	movf	??___fpclassifyf^0,w,c
 10551  004DE4  6E0C               	movwf	___fpclassifyf@e^0,c
 10552  004DE6  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
 10553  004DE8  500C               	movf	___fpclassifyf@e^0,w,c
 10554  004DEA  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10555  004DEC  A4D8               	btfss	status,2,c
 10556  004DEE  EFFB  F026         	goto	u9031
 10557  004DF2  EFFD  F026         	goto	u9030
 10558  004DF6                     u9031:
 10559  004DF6  EF1D  F027         	goto	l7383
 10560  004DFA                     u9030:
 10561  004DFA  90D8               	bcf	status,0,c
 10562  004DFC  340E               	rlcf	___fpclassifyf@u^0,w,c
 10563  004DFE  6E08               	movwf	??___fpclassifyf^0,c
 10564  004E00  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10565  004E02  6E09               	movwf	(??___fpclassifyf+1)^0,c
 10566  004E04  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10567  004E06  6E0A               	movwf	(??___fpclassifyf+2)^0,c
 10568  004E08  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10569  004E0A  6E0B               	movwf	(??___fpclassifyf+3)^0,c
 10570  004E0C  5008               	movf	??___fpclassifyf^0,w,c
 10571  004E0E  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10572  004E10  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10573  004E12  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10574  004E14  A4D8               	btfss	status,2,c
 10575  004E16  EF0F  F027         	goto	u9041
 10576  004E1A  EF11  F027         	goto	u9040
 10577  004E1E                     u9041:
 10578  004E1E  EF17  F027         	goto	l7379
 10579  004E22                     u9040:
 10580  004E22  0E00               	movlw	0
 10581  004E24  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10582  004E26  0E02               	movlw	2
 10583  004E28  6E04               	movwf	?___fpclassifyf^0,c
 10584  004E2A  EF4C  F027         	goto	l1479
 10585  004E2E                     l7379:
 10586  004E2E  0E00               	movlw	0
 10587  004E30  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10588  004E32  0E03               	movlw	3
 10589  004E34  6E04               	movwf	?___fpclassifyf^0,c
 10590  004E36  EF4C  F027         	goto	l1479
 10591  004E3A                     l7383:
 10592  004E3A  280C               	incf	___fpclassifyf@e^0,w,c
 10593  004E3C  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10594  004E3E  A4D8               	btfss	status,2,c
 10595  004E40  EF24  F027         	goto	u9051
 10596  004E44  EF26  F027         	goto	u9050
 10597  004E48                     u9051:
 10598  004E48  EF48  F027         	goto	l7389
 10599  004E4C                     u9050:
 10600  004E4C  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10601  004E50  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10602  004E54  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10603  004E58  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10604  004E5C  0E09               	movlw	9
 10605  004E5E                     u9065:
 10606  004E5E  90D8               	bcf	status,0,c
 10607  004E60  3608               	rlcf	??___fpclassifyf^0,f,c
 10608  004E62  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
 10609  004E64  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
 10610  004E66  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
 10611  004E68  2EE8               	decfsz	wreg,f,c
 10612  004E6A  EF2F  F027         	goto	u9065
 10613  004E6E  5008               	movf	??___fpclassifyf^0,w,c
 10614  004E70  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10615  004E72  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10616  004E74  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10617  004E76  B4D8               	btfsc	status,2,c
 10618  004E78  EF40  F027         	goto	u9071
 10619  004E7C  EF43  F027         	goto	u9070
 10620  004E80                     u9071:
 10621  004E80  0E01               	movlw	1
 10622  004E82  EF44  F027         	goto	u9080
 10623  004E86                     u9070:
 10624  004E86  0E00               	movlw	0
 10625  004E88                     u9080:
 10626  004E88  6E04               	movwf	?___fpclassifyf^0,c
 10627  004E8A  6A05               	clrf	(?___fpclassifyf+1)^0,c
 10628  004E8C  EF4C  F027         	goto	l1479
 10629  004E90                     l7389:
 10630  004E90  0E00               	movlw	0
 10631  004E92  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10632  004E94  0E04               	movlw	4
 10633  004E96  6E04               	movwf	?___fpclassifyf^0,c
 10634  004E98                     l1479:
 10635  004E98  0012               	return		;funcret
 10636  004E9A                     __end_of___fpclassifyf:
 10637                           	opt callstack 0
 10638                           
 10639 ;; *************** function ___fltol *****************
 10640 ;; Defined at:
 10641 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;  f1              4    3[COMRAM] int 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  exp1            1   12[COMRAM] unsigned char 
 10646 ;;  sign1           1   11[COMRAM] unsigned char 
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  4    3[COMRAM] long 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10659 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10660 ;;Total ram usage:       10 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    4
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_efgtoa
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text21
 10671  004B92                     __ptext21:
 10672                           	opt callstack 0
 10673  004B92                     ___fltol:
 10674                           	opt callstack 21
 10675  004B92  3406               	rlcf	(___fltol@f1+2)^0,w,c
 10676  004B94  3407               	rlcf	(___fltol@f1+3)^0,w,c
 10677  004B96  6E0D               	movwf	___fltol@exp1^0,c
 10678  004B98  500D               	movf	___fltol@exp1^0,w,c
 10679  004B9A  A4D8               	btfss	status,2,c
 10680  004B9C  EFD2  F025         	goto	u10071
 10681  004BA0  EFD4  F025         	goto	u10070
 10682  004BA4                     u10071:
 10683  004BA4  EFDE  F025         	goto	l7945
 10684  004BA8                     u10070:
 10685  004BA8                     l7941:
 10686  004BA8  0E00               	movlw	0
 10687  004BAA  6E04               	movwf	?___fltol^0,c
 10688  004BAC  0E00               	movlw	0
 10689  004BAE  6E05               	movwf	(?___fltol+1)^0,c
 10690  004BB0  0E00               	movlw	0
 10691  004BB2  6E06               	movwf	(?___fltol+2)^0,c
 10692  004BB4  0E00               	movlw	0
 10693  004BB6  6E07               	movwf	(?___fltol+3)^0,c
 10694  004BB8  EF4B  F026         	goto	l1095
 10695  004BBC                     l7945:
 10696  004BBC  C004  F008         	movff	___fltol@f1,??___fltol
 10697  004BC0  C005  F009         	movff	___fltol@f1+1,??___fltol+1
 10698  004BC4  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
 10699  004BC8  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
 10700  004BCC  0E20               	movlw	32
 10701  004BCE  EFEE  F025         	goto	u10080
 10702  004BD2                     u10085:
 10703  004BD2  90D8               	bcf	status,0,c
 10704  004BD4  320B               	rrcf	(??___fltol+3)^0,f,c
 10705  004BD6  320A               	rrcf	(??___fltol+2)^0,f,c
 10706  004BD8  3209               	rrcf	(??___fltol+1)^0,f,c
 10707  004BDA  3208               	rrcf	??___fltol^0,f,c
 10708  004BDC                     u10080:
 10709  004BDC  2EE8               	decfsz	wreg,f,c
 10710  004BDE  EFE9  F025         	goto	u10085
 10711  004BE2  5008               	movf	??___fltol^0,w,c
 10712  004BE4  6E0C               	movwf	___fltol@sign1^0,c
 10713  004BE6  8E06               	bsf	(___fltol@f1+2)^0,7,c
 10714  004BE8  0EFF               	movlw	255
 10715  004BEA  1604               	andwf	___fltol@f1^0,f,c
 10716  004BEC  0EFF               	movlw	255
 10717  004BEE  1605               	andwf	(___fltol@f1+1)^0,f,c
 10718  004BF0  0EFF               	movlw	255
 10719  004BF2  1606               	andwf	(___fltol@f1+2)^0,f,c
 10720  004BF4  0E00               	movlw	0
 10721  004BF6  1607               	andwf	(___fltol@f1+3)^0,f,c
 10722  004BF8  0E96               	movlw	150
 10723  004BFA  5E0D               	subwf	___fltol@exp1^0,f,c
 10724  004BFC  BE0D               	btfsc	___fltol@exp1^0,7,c
 10725  004BFE  EF05  F026         	goto	u10090
 10726  004C02  EF03  F026         	goto	u10091
 10727  004C06                     u10091:
 10728  004C06  EF1B  F026         	goto	l7965
 10729  004C0A                     u10090:
 10730  004C0A  500D               	movf	___fltol@exp1^0,w,c
 10731  004C0C  0A80               	xorlw	128
 10732  004C0E  0F97               	addlw	151
 10733  004C10  B0D8               	btfsc	status,0,c
 10734  004C12  EF0D  F026         	goto	u10101
 10735  004C16  EF0F  F026         	goto	u10100
 10736  004C1A                     u10101:
 10737  004C1A  EF11  F026         	goto	l7961
 10738  004C1E                     u10100:
 10739  004C1E  EFD4  F025         	goto	l7941
 10740  004C22                     l7961:
 10741  004C22  90D8               	bcf	status,0,c
 10742  004C24  3207               	rrcf	(___fltol@f1+3)^0,f,c
 10743  004C26  3206               	rrcf	(___fltol@f1+2)^0,f,c
 10744  004C28  3205               	rrcf	(___fltol@f1+1)^0,f,c
 10745  004C2A  3204               	rrcf	___fltol@f1^0,f,c
 10746  004C2C  3E0D               	incfsz	___fltol@exp1^0,f,c
 10747  004C2E  EF11  F026         	goto	l7961
 10748  004C32  EF33  F026         	goto	l7975
 10749  004C36                     l7965:
 10750  004C36  0E1F               	movlw	31
 10751  004C38  640D               	cpfsgt	___fltol@exp1^0,c
 10752  004C3A  EF21  F026         	goto	u10111
 10753  004C3E  EF23  F026         	goto	u10110
 10754  004C42                     u10111:
 10755  004C42  EF2B  F026         	goto	l7973
 10756  004C46                     u10110:
 10757  004C46  EFD4  F025         	goto	l7941
 10758  004C4A                     l7971:
 10759  004C4A  90D8               	bcf	status,0,c
 10760  004C4C  3604               	rlcf	___fltol@f1^0,f,c
 10761  004C4E  3605               	rlcf	(___fltol@f1+1)^0,f,c
 10762  004C50  3606               	rlcf	(___fltol@f1+2)^0,f,c
 10763  004C52  3607               	rlcf	(___fltol@f1+3)^0,f,c
 10764  004C54  060D               	decf	___fltol@exp1^0,f,c
 10765  004C56                     l7973:
 10766  004C56  500D               	movf	___fltol@exp1^0,w,c
 10767  004C58  A4D8               	btfss	status,2,c
 10768  004C5A  EF31  F026         	goto	u10121
 10769  004C5E  EF33  F026         	goto	u10120
 10770  004C62                     u10121:
 10771  004C62  EF25  F026         	goto	l7971
 10772  004C66                     u10120:
 10773  004C66                     l7975:
 10774  004C66  500C               	movf	___fltol@sign1^0,w,c
 10775  004C68  B4D8               	btfsc	status,2,c
 10776  004C6A  EF39  F026         	goto	u10131
 10777  004C6E  EF3B  F026         	goto	u10130
 10778  004C72                     u10131:
 10779  004C72  EF43  F026         	goto	l7979
 10780  004C76                     u10130:
 10781  004C76  1E07               	comf	(___fltol@f1+3)^0,f,c
 10782  004C78  1E06               	comf	(___fltol@f1+2)^0,f,c
 10783  004C7A  1E05               	comf	(___fltol@f1+1)^0,f,c
 10784  004C7C  6C04               	negf	___fltol@f1^0,c
 10785  004C7E  0E00               	movlw	0
 10786  004C80  2205               	addwfc	(___fltol@f1+1)^0,f,c
 10787  004C82  2206               	addwfc	(___fltol@f1+2)^0,f,c
 10788  004C84  2207               	addwfc	(___fltol@f1+3)^0,f,c
 10789  004C86                     l7979:
 10790  004C86  C004  F004         	movff	___fltol@f1,?___fltol
 10791  004C8A  C005  F005         	movff	___fltol@f1+1,?___fltol+1
 10792  004C8E  C006  F006         	movff	___fltol@f1+2,?___fltol+2
 10793  004C92  C007  F007         	movff	___fltol@f1+3,?___fltol+3
 10794  004C96                     l1095:
 10795  004C96  0012               	return		;funcret
 10796  004C98                     __end_of___fltol:
 10797                           	opt callstack 0
 10798                           
 10799 ;; *************** function ___flsub *****************
 10800 ;; Defined at:
 10801 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;  b               4   42[COMRAM] long 
 10804 ;;  a               4   46[COMRAM] long 
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  4   42[COMRAM] long 
 10809 ;; Registers used:
 10810 ;;		wreg, status,2, status,0, cstack
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10816 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10819 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10820 ;;Total ram usage:        8 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:    5
 10823 ;; This function calls:
 10824 ;;		___fladd
 10825 ;; This function is called by:
 10826 ;;		_efgtoa
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text22
 10831  0058A8                     __ptext22:
 10832                           	opt callstack 0
 10833  0058A8                     ___flsub:
 10834                           	opt callstack 20
 10835  0058A8  0E00               	movlw	0
 10836  0058AA  1A2F               	xorwf	___flsub@a^0,f,c
 10837  0058AC  0E00               	movlw	0
 10838  0058AE  1A30               	xorwf	(___flsub@a+1)^0,f,c
 10839  0058B0  0E00               	movlw	0
 10840  0058B2  1A31               	xorwf	(___flsub@a+2)^0,f,c
 10841  0058B4  0E80               	movlw	128
 10842  0058B6  1A32               	xorwf	(___flsub@a+3)^0,f,c
 10843  0058B8  C02B  F004         	movff	___flsub@b,___fladd@b
 10844  0058BC  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
 10845  0058C0  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
 10846  0058C4  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
 10847  0058C8  C02F  F008         	movff	___flsub@a,___fladd@a
 10848  0058CC  C030  F009         	movff	___flsub@a+1,___fladd@a+1
 10849  0058D0  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
 10850  0058D4  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
 10851  0058D8  EC6B  F010         	call	___fladd	;wreg free
 10852  0058DC  C004  F02B         	movff	?___fladd,?___flsub
 10853  0058E0  C005  F02C         	movff	?___fladd+1,?___flsub+1
 10854  0058E4  C006  F02D         	movff	?___fladd+2,?___flsub+2
 10855  0058E8  C007  F02E         	movff	?___fladd+3,?___flsub+3
 10856  0058EC  0012               	return		;funcret
 10857  0058EE                     __end_of___flsub:
 10858                           	opt callstack 0
 10859                           
 10860 ;; *************** function ___fladd *****************
 10861 ;; Defined at:
 10862 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  b               4    3[COMRAM] long 
 10865 ;;  a               4    7[COMRAM] long 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  grs             1   18[COMRAM] unsigned char 
 10868 ;;  bexp            1   17[COMRAM] unsigned char 
 10869 ;;  aexp            1   16[COMRAM] unsigned char 
 10870 ;;  signs           1   15[COMRAM] unsigned char 
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  4    3[COMRAM] unsigned char 
 10873 ;; Registers used:
 10874 ;;		wreg, status,2, status,0
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10880 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10881 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10882 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10883 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;Total ram usage:       16 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:    4
 10887 ;; This function calls:
 10888 ;;		Nothing
 10889 ;; This function is called by:
 10890 ;;		_efgtoa
 10891 ;;		___flsub
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text23
 10896  0020D6                     __ptext23:
 10897                           	opt callstack 0
 10898  0020D6                     ___fladd:
 10899                           	opt callstack 20
 10900  0020D6  5007               	movf	(___fladd@b+3)^0,w,c
 10901  0020D8  0B80               	andlw	128
 10902  0020DA  6E10               	movwf	___fladd@signs^0,c
 10903  0020DC  5007               	movf	(___fladd@b+3)^0,w,c
 10904  0020DE  2407               	addwf	(___fladd@b+3)^0,w,c
 10905  0020E0  6E12               	movwf	___fladd@bexp^0,c
 10906  0020E2  AE06               	btfss	(___fladd@b+2)^0,7,c
 10907  0020E4  EF76  F010         	goto	u8561
 10908  0020E8  EF78  F010         	goto	u8560
 10909  0020EC                     u8561:
 10910  0020EC  EF79  F010         	goto	l7145
 10911  0020F0                     u8560:
 10912  0020F0  8012               	bsf	___fladd@bexp^0,0,c
 10913  0020F2                     l7145:
 10914  0020F2  5012               	movf	___fladd@bexp^0,w,c
 10915  0020F4  B4D8               	btfsc	status,2,c
 10916  0020F6  EF7F  F010         	goto	u8571
 10917  0020FA  EF81  F010         	goto	u8570
 10918  0020FE                     u8571:
 10919  0020FE  EF96  F010         	goto	l7155
 10920  002102                     u8570:
 10921  002102  2812               	incf	___fladd@bexp^0,w,c
 10922  002104  A4D8               	btfss	status,2,c
 10923  002106  EF87  F010         	goto	u8581
 10924  00210A  EF89  F010         	goto	u8580
 10925  00210E                     u8581:
 10926  00210E  EF91  F010         	goto	l7151
 10927  002112                     u8580:
 10928  002112  0E00               	movlw	0
 10929  002114  6E04               	movwf	___fladd@b^0,c
 10930  002116  0E00               	movlw	0
 10931  002118  6E05               	movwf	(___fladd@b+1)^0,c
 10932  00211A  0E00               	movlw	0
 10933  00211C  6E06               	movwf	(___fladd@b+2)^0,c
 10934  00211E  0E00               	movlw	0
 10935  002120  6E07               	movwf	(___fladd@b+3)^0,c
 10936  002122                     l7151:
 10937  002122  8E06               	bsf	(___fladd@b+2)^0,7,c
 10938  002124  0E00               	movlw	0
 10939  002126  6E07               	movwf	(___fladd@b+3)^0,c
 10940  002128  EF9E  F010         	goto	l7157
 10941  00212C                     l7155:
 10942  00212C  0E00               	movlw	0
 10943  00212E  6E04               	movwf	___fladd@b^0,c
 10944  002130  0E00               	movlw	0
 10945  002132  6E05               	movwf	(___fladd@b+1)^0,c
 10946  002134  0E00               	movlw	0
 10947  002136  6E06               	movwf	(___fladd@b+2)^0,c
 10948  002138  0E00               	movlw	0
 10949  00213A  6E07               	movwf	(___fladd@b+3)^0,c
 10950  00213C                     l7157:
 10951  00213C  500B               	movf	(___fladd@a+3)^0,w,c
 10952  00213E  0B80               	andlw	128
 10953  002140  6E11               	movwf	___fladd@aexp^0,c
 10954  002142  5010               	movf	___fladd@signs^0,w,c
 10955  002144  1811               	xorwf	___fladd@aexp^0,w,c
 10956  002146  B4D8               	btfsc	status,2,c
 10957  002148  EFA8  F010         	goto	u8591
 10958  00214C  EFAA  F010         	goto	u8590
 10959  002150                     u8591:
 10960  002150  EFAB  F010         	goto	l7163
 10961  002154                     u8590:
 10962  002154  8C10               	bsf	___fladd@signs^0,6,c
 10963  002156                     l7163:
 10964  002156  500B               	movf	(___fladd@a+3)^0,w,c
 10965  002158  240B               	addwf	(___fladd@a+3)^0,w,c
 10966  00215A  6E11               	movwf	___fladd@aexp^0,c
 10967  00215C  AE0A               	btfss	(___fladd@a+2)^0,7,c
 10968  00215E  EFB3  F010         	goto	u8601
 10969  002162  EFB5  F010         	goto	u8600
 10970  002166                     u8601:
 10971  002166  EFB6  F010         	goto	l7169
 10972  00216A                     u8600:
 10973  00216A  8011               	bsf	___fladd@aexp^0,0,c
 10974  00216C                     l7169:
 10975  00216C  5011               	movf	___fladd@aexp^0,w,c
 10976  00216E  B4D8               	btfsc	status,2,c
 10977  002170  EFBC  F010         	goto	u8611
 10978  002174  EFBE  F010         	goto	u8610
 10979  002178                     u8611:
 10980  002178  EFD3  F010         	goto	l7179
 10981  00217C                     u8610:
 10982  00217C  2811               	incf	___fladd@aexp^0,w,c
 10983  00217E  A4D8               	btfss	status,2,c
 10984  002180  EFC4  F010         	goto	u8621
 10985  002184  EFC6  F010         	goto	u8620
 10986  002188                     u8621:
 10987  002188  EFCE  F010         	goto	l7175
 10988  00218C                     u8620:
 10989  00218C  0E00               	movlw	0
 10990  00218E  6E08               	movwf	___fladd@a^0,c
 10991  002190  0E00               	movlw	0
 10992  002192  6E09               	movwf	(___fladd@a+1)^0,c
 10993  002194  0E00               	movlw	0
 10994  002196  6E0A               	movwf	(___fladd@a+2)^0,c
 10995  002198  0E00               	movlw	0
 10996  00219A  6E0B               	movwf	(___fladd@a+3)^0,c
 10997  00219C                     l7175:
 10998  00219C  8E0A               	bsf	(___fladd@a+2)^0,7,c
 10999  00219E  0E00               	movlw	0
 11000  0021A0  6E0B               	movwf	(___fladd@a+3)^0,c
 11001  0021A2  EFDB  F010         	goto	l7181
 11002  0021A6                     l7179:
 11003  0021A6  0E00               	movlw	0
 11004  0021A8  6E08               	movwf	___fladd@a^0,c
 11005  0021AA  0E00               	movlw	0
 11006  0021AC  6E09               	movwf	(___fladd@a+1)^0,c
 11007  0021AE  0E00               	movlw	0
 11008  0021B0  6E0A               	movwf	(___fladd@a+2)^0,c
 11009  0021B2  0E00               	movlw	0
 11010  0021B4  6E0B               	movwf	(___fladd@a+3)^0,c
 11011  0021B6                     l7181:
 11012  0021B6  5012               	movf	___fladd@bexp^0,w,c
 11013  0021B8  5C11               	subwf	___fladd@aexp^0,w,c
 11014  0021BA  B0D8               	btfsc	status,0,c
 11015  0021BC  EFE2  F010         	goto	u8631
 11016  0021C0  EFE4  F010         	goto	u8630
 11017  0021C4                     u8631:
 11018  0021C4  EF0B  F011         	goto	l7217
 11019  0021C8                     u8630:
 11020  0021C8  AC10               	btfss	___fladd@signs^0,6,c
 11021  0021CA  EFE9  F010         	goto	u8641
 11022  0021CE  EFEB  F010         	goto	u8640
 11023  0021D2                     u8641:
 11024  0021D2  EFED  F010         	goto	l7187
 11025  0021D6                     u8640:
 11026  0021D6  0E80               	movlw	128
 11027  0021D8  1A10               	xorwf	___fladd@signs^0,f,c
 11028  0021DA                     l7187:
 11029  0021DA  C012  F013         	movff	___fladd@bexp,___fladd@grs
 11030  0021DE  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 11031  0021E2  C013  F011         	movff	___fladd@grs,___fladd@aexp
 11032  0021E6  C004  F013         	movff	___fladd@b,___fladd@grs
 11033  0021EA  C008  F004         	movff	___fladd@a,___fladd@b
 11034  0021EE  C013  F008         	movff	___fladd@grs,___fladd@a
 11035  0021F2  C005  F013         	movff	___fladd@b+1,___fladd@grs
 11036  0021F6  C009  F005         	movff	___fladd@a+1,___fladd@b+1
 11037  0021FA  C013  F009         	movff	___fladd@grs,___fladd@a+1
 11038  0021FE  C006  F013         	movff	___fladd@b+2,___fladd@grs
 11039  002202  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
 11040  002206  C013  F00A         	movff	___fladd@grs,___fladd@a+2
 11041  00220A  C007  F013         	movff	___fladd@b+3,___fladd@grs
 11042  00220E  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
 11043  002212  C013  F00B         	movff	___fladd@grs,___fladd@a+3
 11044  002216                     l7217:
 11045  002216  0E00               	movlw	0
 11046  002218  6E13               	movwf	___fladd@grs^0,c
 11047  00221A  5012               	movf	___fladd@bexp^0,w,c
 11048  00221C  C011  F00C         	movff	___fladd@aexp,??___fladd
 11049  002220  6A0D               	clrf	(??___fladd+1)^0,c
 11050  002222  5E0C               	subwf	??___fladd^0,f,c
 11051  002224  0E00               	movlw	0
 11052  002226  5A0D               	subwfb	(??___fladd+1)^0,f,c
 11053  002228  BE0D               	btfsc	(??___fladd+1)^0,7,c
 11054  00222A  EF20  F011         	goto	u8651
 11055  00222E  500D               	movf	(??___fladd+1)^0,w,c
 11056  002230  E109               	bnz	u8650
 11057  002232  0E1A               	movlw	26
 11058  002234  5C0C               	subwf	??___fladd^0,w,c
 11059  002236  A0D8               	btfss	status,0,c
 11060  002238  EF20  F011         	goto	u8651
 11061  00223C  EF22  F011         	goto	u8650
 11062  002240                     u8651:
 11063  002240  EF59  F011         	goto	l1327
 11064  002244                     u8650:
 11065  002244  5004               	movf	___fladd@b^0,w,c
 11066  002246  1005               	iorwf	(___fladd@b+1)^0,w,c
 11067  002248  1006               	iorwf	(___fladd@b+2)^0,w,c
 11068  00224A  1007               	iorwf	(___fladd@b+3)^0,w,c
 11069  00224C  A4D8               	btfss	status,2,c
 11070  00224E  EF2B  F011         	goto	u8661
 11071  002252  EF2E  F011         	goto	u8660
 11072  002256                     u8661:
 11073  002256  0E01               	movlw	1
 11074  002258  EF2F  F011         	goto	u8670
 11075  00225C                     u8660:
 11076  00225C  0E00               	movlw	0
 11077  00225E                     u8670:
 11078  00225E  6E13               	movwf	___fladd@grs^0,c
 11079  002260  0E00               	movlw	0
 11080  002262  6E04               	movwf	___fladd@b^0,c
 11081  002264  0E00               	movlw	0
 11082  002266  6E05               	movwf	(___fladd@b+1)^0,c
 11083  002268  0E00               	movlw	0
 11084  00226A  6E06               	movwf	(___fladd@b+2)^0,c
 11085  00226C  0E00               	movlw	0
 11086  00226E  6E07               	movwf	(___fladd@b+3)^0,c
 11087  002270  C011  F012         	movff	___fladd@aexp,___fladd@bexp
 11088  002274  EF62  F011         	goto	l1326
 11089  002278                     l1328:
 11090  002278  A013               	btfss	___fladd@grs^0,0,c
 11091  00227A  EF41  F011         	goto	u8681
 11092  00227E  EF43  F011         	goto	u8680
 11093  002282                     u8681:
 11094  002282  EF49  F011         	goto	l7229
 11095  002286                     u8680:
 11096  002286  90D8               	bcf	status,0,c
 11097  002288  3013               	rrcf	___fladd@grs^0,w,c
 11098  00228A  0901               	iorlw	1
 11099  00228C  6E13               	movwf	___fladd@grs^0,c
 11100  00228E  EF4B  F011         	goto	l7231
 11101  002292                     l7229:
 11102  002292  90D8               	bcf	status,0,c
 11103  002294  3213               	rrcf	___fladd@grs^0,f,c
 11104  002296                     l7231:
 11105  002296  A004               	btfss	___fladd@b^0,0,c
 11106  002298  EF50  F011         	goto	u8691
 11107  00229C  EF52  F011         	goto	u8690
 11108  0022A0                     u8691:
 11109  0022A0  EF53  F011         	goto	l7235
 11110  0022A4                     u8690:
 11111  0022A4  8E13               	bsf	___fladd@grs^0,7,c
 11112  0022A6                     l7235:
 11113  0022A6  3407               	rlcf	(___fladd@b+3)^0,w,c
 11114  0022A8  3207               	rrcf	(___fladd@b+3)^0,f,c
 11115  0022AA  3206               	rrcf	(___fladd@b+2)^0,f,c
 11116  0022AC  3205               	rrcf	(___fladd@b+1)^0,f,c
 11117  0022AE  3204               	rrcf	___fladd@b^0,f,c
 11118  0022B0  2A12               	incf	___fladd@bexp^0,f,c
 11119  0022B2                     l1327:
 11120  0022B2  5011               	movf	___fladd@aexp^0,w,c
 11121  0022B4  5C12               	subwf	___fladd@bexp^0,w,c
 11122  0022B6  A0D8               	btfss	status,0,c
 11123  0022B8  EF60  F011         	goto	u8701
 11124  0022BC  EF62  F011         	goto	u8700
 11125  0022C0                     u8701:
 11126  0022C0  EF3C  F011         	goto	l1328
 11127  0022C4                     u8700:
 11128  0022C4                     l1326:
 11129  0022C4  BC10               	btfsc	___fladd@signs^0,6,c
 11130  0022C6  EF67  F011         	goto	u8711
 11131  0022CA  EF69  F011         	goto	u8710
 11132  0022CE                     u8711:
 11133  0022CE  EFA9  F011         	goto	l7263
 11134  0022D2                     u8710:
 11135  0022D2  5012               	movf	___fladd@bexp^0,w,c
 11136  0022D4  A4D8               	btfss	status,2,c
 11137  0022D6  EF6F  F011         	goto	u8721
 11138  0022DA  EF71  F011         	goto	u8720
 11139  0022DE                     u8721:
 11140  0022DE  EF7B  F011         	goto	l7245
 11141  0022E2                     u8720:
 11142  0022E2  0E00               	movlw	0
 11143  0022E4  6E04               	movwf	?___fladd^0,c
 11144  0022E6  0E00               	movlw	0
 11145  0022E8  6E05               	movwf	(?___fladd+1)^0,c
 11146  0022EA  0E00               	movlw	0
 11147  0022EC  6E06               	movwf	(?___fladd+2)^0,c
 11148  0022EE  0E00               	movlw	0
 11149  0022F0  6E07               	movwf	(?___fladd+3)^0,c
 11150  0022F2  EFCA  F012         	goto	l1335
 11151  0022F6                     l7245:
 11152  0022F6  5008               	movf	___fladd@a^0,w,c
 11153  0022F8  2604               	addwf	___fladd@b^0,f,c
 11154  0022FA  5009               	movf	(___fladd@a+1)^0,w,c
 11155  0022FC  2205               	addwfc	(___fladd@b+1)^0,f,c
 11156  0022FE  500A               	movf	(___fladd@a+2)^0,w,c
 11157  002300  2206               	addwfc	(___fladd@b+2)^0,f,c
 11158  002302  500B               	movf	(___fladd@a+3)^0,w,c
 11159  002304  2207               	addwfc	(___fladd@b+3)^0,f,c
 11160  002306  A007               	btfss	(___fladd@b+3)^0,0,c
 11161  002308  EF88  F011         	goto	u8731
 11162  00230C  EF8A  F011         	goto	u8730
 11163  002310                     u8731:
 11164  002310  EF36  F012         	goto	l7299
 11165  002314                     u8730:
 11166  002314  A013               	btfss	___fladd@grs^0,0,c
 11167  002316  EF8F  F011         	goto	u8741
 11168  00231A  EF91  F011         	goto	u8740
 11169  00231E                     u8741:
 11170  00231E  EF97  F011         	goto	l7253
 11171  002322                     u8740:
 11172  002322  90D8               	bcf	status,0,c
 11173  002324  3013               	rrcf	___fladd@grs^0,w,c
 11174  002326  0901               	iorlw	1
 11175  002328  6E13               	movwf	___fladd@grs^0,c
 11176  00232A  EF99  F011         	goto	l7255
 11177  00232E                     l7253:
 11178  00232E  90D8               	bcf	status,0,c
 11179  002330  3213               	rrcf	___fladd@grs^0,f,c
 11180  002332                     l7255:
 11181  002332  A004               	btfss	___fladd@b^0,0,c
 11182  002334  EF9E  F011         	goto	u8751
 11183  002338  EFA0  F011         	goto	u8750
 11184  00233C                     u8751:
 11185  00233C  EFA1  F011         	goto	l7259
 11186  002340                     u8750:
 11187  002340  8E13               	bsf	___fladd@grs^0,7,c
 11188  002342                     l7259:
 11189  002342  3407               	rlcf	(___fladd@b+3)^0,w,c
 11190  002344  3207               	rrcf	(___fladd@b+3)^0,f,c
 11191  002346  3206               	rrcf	(___fladd@b+2)^0,f,c
 11192  002348  3205               	rrcf	(___fladd@b+1)^0,f,c
 11193  00234A  3204               	rrcf	___fladd@b^0,f,c
 11194  00234C  2A12               	incf	___fladd@bexp^0,f,c
 11195  00234E  EF36  F012         	goto	l7299
 11196  002352                     l7263:
 11197  002352  5008               	movf	___fladd@a^0,w,c
 11198  002354  5C04               	subwf	___fladd@b^0,w,c
 11199  002356  5009               	movf	(___fladd@a+1)^0,w,c
 11200  002358  5805               	subwfb	(___fladd@b+1)^0,w,c
 11201  00235A  500A               	movf	(___fladd@a+2)^0,w,c
 11202  00235C  5806               	subwfb	(___fladd@b+2)^0,w,c
 11203  00235E  5007               	movf	(___fladd@b+3)^0,w,c
 11204  002360  0A80               	xorlw	128
 11205  002362  6E0C               	movwf	??___fladd^0,c
 11206  002364  500B               	movf	(___fladd@a+3)^0,w,c
 11207  002366  0A80               	xorlw	128
 11208  002368  580C               	subwfb	??___fladd^0,w,c
 11209  00236A  B0D8               	btfsc	status,0,c
 11210  00236C  EFBA  F011         	goto	u8761
 11211  002370  EFBC  F011         	goto	u8760
 11212  002374                     u8761:
 11213  002374  EFE7  F011         	goto	l7273
 11214  002378                     u8760:
 11215  002378  5004               	movf	___fladd@b^0,w,c
 11216  00237A  5C08               	subwf	___fladd@a^0,w,c
 11217  00237C  6E0C               	movwf	??___fladd^0,c
 11218  00237E  5005               	movf	(___fladd@b+1)^0,w,c
 11219  002380  5809               	subwfb	(___fladd@a+1)^0,w,c
 11220  002382  6E0D               	movwf	(??___fladd+1)^0,c
 11221  002384  5006               	movf	(___fladd@b+2)^0,w,c
 11222  002386  580A               	subwfb	(___fladd@a+2)^0,w,c
 11223  002388  6E0E               	movwf	(??___fladd+2)^0,c
 11224  00238A  5007               	movf	(___fladd@b+3)^0,w,c
 11225  00238C  580B               	subwfb	(___fladd@a+3)^0,w,c
 11226  00238E  6E0F               	movwf	(??___fladd+3)^0,c
 11227  002390  0EFF               	movlw	255
 11228  002392  240C               	addwf	??___fladd^0,w,c
 11229  002394  6E04               	movwf	___fladd@b^0,c
 11230  002396  0EFF               	movlw	255
 11231  002398  200D               	addwfc	(??___fladd+1)^0,w,c
 11232  00239A  6E05               	movwf	(___fladd@b+1)^0,c
 11233  00239C  0EFF               	movlw	255
 11234  00239E  200E               	addwfc	(??___fladd+2)^0,w,c
 11235  0023A0  6E06               	movwf	(___fladd@b+2)^0,c
 11236  0023A2  0EFF               	movlw	255
 11237  0023A4  200F               	addwfc	(??___fladd+3)^0,w,c
 11238  0023A6  6E07               	movwf	(___fladd@b+3)^0,c
 11239  0023A8  0E80               	movlw	128
 11240  0023AA  1A10               	xorwf	___fladd@signs^0,f,c
 11241  0023AC  6C13               	negf	___fladd@grs^0,c
 11242  0023AE  5013               	movf	___fladd@grs^0,w,c
 11243  0023B0  A4D8               	btfss	status,2,c
 11244  0023B2  EFDD  F011         	goto	u8771
 11245  0023B6  EFDF  F011         	goto	u8770
 11246  0023BA                     u8771:
 11247  0023BA  EFEF  F011         	goto	l1343
 11248  0023BE                     u8770:
 11249  0023BE  0E01               	movlw	1
 11250  0023C0  2604               	addwf	___fladd@b^0,f,c
 11251  0023C2  0E00               	movlw	0
 11252  0023C4  2205               	addwfc	(___fladd@b+1)^0,f,c
 11253  0023C6  2206               	addwfc	(___fladd@b+2)^0,f,c
 11254  0023C8  2207               	addwfc	(___fladd@b+3)^0,f,c
 11255  0023CA  EFEF  F011         	goto	l1343
 11256  0023CE                     l7273:
 11257  0023CE  5008               	movf	___fladd@a^0,w,c
 11258  0023D0  5E04               	subwf	___fladd@b^0,f,c
 11259  0023D2  5009               	movf	(___fladd@a+1)^0,w,c
 11260  0023D4  5A05               	subwfb	(___fladd@b+1)^0,f,c
 11261  0023D6  500A               	movf	(___fladd@a+2)^0,w,c
 11262  0023D8  5A06               	subwfb	(___fladd@b+2)^0,f,c
 11263  0023DA  500B               	movf	(___fladd@a+3)^0,w,c
 11264  0023DC  5A07               	subwfb	(___fladd@b+3)^0,f,c
 11265  0023DE                     l1343:
 11266  0023DE  5004               	movf	___fladd@b^0,w,c
 11267  0023E0  1005               	iorwf	(___fladd@b+1)^0,w,c
 11268  0023E2  1006               	iorwf	(___fladd@b+2)^0,w,c
 11269  0023E4  1007               	iorwf	(___fladd@b+3)^0,w,c
 11270  0023E6  A4D8               	btfss	status,2,c
 11271  0023E8  EFF8  F011         	goto	u8781
 11272  0023EC  EFFA  F011         	goto	u8780
 11273  0023F0                     u8781:
 11274  0023F0  EF2F  F012         	goto	l7297
 11275  0023F4                     u8780:
 11276  0023F4  5013               	movf	___fladd@grs^0,w,c
 11277  0023F6  A4D8               	btfss	status,2,c
 11278  0023F8  EF00  F012         	goto	u8791
 11279  0023FC  EF02  F012         	goto	u8790
 11280  002400                     u8791:
 11281  002400  EF2F  F012         	goto	l7297
 11282  002404                     u8790:
 11283  002404  0E00               	movlw	0
 11284  002406  6E04               	movwf	?___fladd^0,c
 11285  002408  0E00               	movlw	0
 11286  00240A  6E05               	movwf	(?___fladd+1)^0,c
 11287  00240C  0E00               	movlw	0
 11288  00240E  6E06               	movwf	(?___fladd+2)^0,c
 11289  002410  0E00               	movlw	0
 11290  002412  6E07               	movwf	(?___fladd+3)^0,c
 11291  002414  EFCA  F012         	goto	l1335
 11292  002418                     l7281:
 11293  002418  90D8               	bcf	status,0,c
 11294  00241A  3604               	rlcf	___fladd@b^0,f,c
 11295  00241C  3605               	rlcf	(___fladd@b+1)^0,f,c
 11296  00241E  3606               	rlcf	(___fladd@b+2)^0,f,c
 11297  002420  3607               	rlcf	(___fladd@b+3)^0,f,c
 11298  002422  AE13               	btfss	___fladd@grs^0,7,c
 11299  002424  EF16  F012         	goto	u8801
 11300  002428  EF18  F012         	goto	u8800
 11301  00242C                     u8801:
 11302  00242C  EF19  F012         	goto	l7287
 11303  002430                     u8800:
 11304  002430  8004               	bsf	___fladd@b^0,0,c
 11305  002432                     l7287:
 11306  002432  A013               	btfss	___fladd@grs^0,0,c
 11307  002434  EF1E  F012         	goto	u8811
 11308  002438  EF20  F012         	goto	u8810
 11309  00243C                     u8811:
 11310  00243C  EF24  F012         	goto	l7291
 11311  002440                     u8810:
 11312  002440  80D8               	bsf	status,0,c
 11313  002442  3613               	rlcf	___fladd@grs^0,f,c
 11314  002444  EF26  F012         	goto	l7293
 11315  002448                     l7291:
 11316  002448  90D8               	bcf	status,0,c
 11317  00244A  3613               	rlcf	___fladd@grs^0,f,c
 11318  00244C                     l7293:
 11319  00244C  5012               	movf	___fladd@bexp^0,w,c
 11320  00244E  B4D8               	btfsc	status,2,c
 11321  002450  EF2C  F012         	goto	u8821
 11322  002454  EF2E  F012         	goto	u8820
 11323  002458                     u8821:
 11324  002458  EF2F  F012         	goto	l7297
 11325  00245C                     u8820:
 11326  00245C  0612               	decf	___fladd@bexp^0,f,c
 11327  00245E                     l7297:
 11328  00245E  AE06               	btfss	(___fladd@b+2)^0,7,c
 11329  002460  EF34  F012         	goto	u8831
 11330  002464  EF36  F012         	goto	u8830
 11331  002468                     u8831:
 11332  002468  EF0C  F012         	goto	l7281
 11333  00246C                     u8830:
 11334  00246C                     l7299:
 11335  00246C  0E00               	movlw	0
 11336  00246E  6E11               	movwf	___fladd@aexp^0,c
 11337  002470  AE13               	btfss	___fladd@grs^0,7,c
 11338  002472  EF3D  F012         	goto	u8841
 11339  002476  EF3F  F012         	goto	u8840
 11340  00247A                     u8841:
 11341  00247A  EF57  F012         	goto	l1352
 11342  00247E                     u8840:
 11343  00247E  C013  F00C         	movff	___fladd@grs,??___fladd
 11344  002482  0E7F               	movlw	127
 11345  002484  160C               	andwf	??___fladd^0,f,c
 11346  002486  B4D8               	btfsc	status,2,c
 11347  002488  EF48  F012         	goto	u8851
 11348  00248C  EF4A  F012         	goto	u8850
 11349  002490                     u8851:
 11350  002490  EF4E  F012         	goto	l1353
 11351  002494                     u8850:
 11352  002494                     l7305:
 11353  002494  0E01               	movlw	1
 11354  002496  6E11               	movwf	___fladd@aexp^0,c
 11355  002498  EF57  F012         	goto	l1352
 11356  00249C                     l1353:
 11357  00249C  A004               	btfss	___fladd@b^0,0,c
 11358  00249E  EF53  F012         	goto	u8861
 11359  0024A2  EF55  F012         	goto	u8860
 11360  0024A6                     u8861:
 11361  0024A6  EF57  F012         	goto	l1352
 11362  0024AA                     u8860:
 11363  0024AA  EF4A  F012         	goto	l7305
 11364  0024AE                     l1352:
 11365  0024AE  5011               	movf	___fladd@aexp^0,w,c
 11366  0024B0  B4D8               	btfsc	status,2,c
 11367  0024B2  EF5D  F012         	goto	u8871
 11368  0024B6  EF5F  F012         	goto	u8870
 11369  0024BA                     u8871:
 11370  0024BA  EF8A  F012         	goto	l7317
 11371  0024BE                     u8870:
 11372  0024BE  0E01               	movlw	1
 11373  0024C0  2604               	addwf	___fladd@b^0,f,c
 11374  0024C2  0E00               	movlw	0
 11375  0024C4  2205               	addwfc	(___fladd@b+1)^0,f,c
 11376  0024C6  2206               	addwfc	(___fladd@b+2)^0,f,c
 11377  0024C8  2207               	addwfc	(___fladd@b+3)^0,f,c
 11378  0024CA  A007               	btfss	(___fladd@b+3)^0,0,c
 11379  0024CC  EF6A  F012         	goto	u8881
 11380  0024D0  EF6C  F012         	goto	u8880
 11381  0024D4                     u8881:
 11382  0024D4  EF8A  F012         	goto	l7317
 11383  0024D8                     u8880:
 11384  0024D8  C004  F00C         	movff	___fladd@b,??___fladd
 11385  0024DC  C005  F00D         	movff	___fladd@b+1,??___fladd+1
 11386  0024E0  C006  F00E         	movff	___fladd@b+2,??___fladd+2
 11387  0024E4  C007  F00F         	movff	___fladd@b+3,??___fladd+3
 11388  0024E8  340F               	rlcf	(??___fladd+3)^0,w,c
 11389  0024EA  320F               	rrcf	(??___fladd+3)^0,f,c
 11390  0024EC  320E               	rrcf	(??___fladd+2)^0,f,c
 11391  0024EE  320D               	rrcf	(??___fladd+1)^0,f,c
 11392  0024F0  320C               	rrcf	??___fladd^0,f,c
 11393  0024F2  C00C  F004         	movff	??___fladd,___fladd@b
 11394  0024F6  C00D  F005         	movff	??___fladd+1,___fladd@b+1
 11395  0024FA  C00E  F006         	movff	??___fladd+2,___fladd@b+2
 11396  0024FE  C00F  F007         	movff	??___fladd+3,___fladd@b+3
 11397  002502  2812               	incf	___fladd@bexp^0,w,c
 11398  002504  B4D8               	btfsc	status,2,c
 11399  002506  EF87  F012         	goto	u8891
 11400  00250A  EF89  F012         	goto	u8890
 11401  00250E                     u8891:
 11402  00250E  EF8A  F012         	goto	l7317
 11403  002512                     u8890:
 11404  002512  2A12               	incf	___fladd@bexp^0,f,c
 11405  002514                     l7317:
 11406  002514  2812               	incf	___fladd@bexp^0,w,c
 11407  002516  B4D8               	btfsc	status,2,c
 11408  002518  EF90  F012         	goto	u8901
 11409  00251C  EF92  F012         	goto	u8900
 11410  002520                     u8901:
 11411  002520  EF9A  F012         	goto	l7321
 11412  002524                     u8900:
 11413  002524  5012               	movf	___fladd@bexp^0,w,c
 11414  002526  A4D8               	btfss	status,2,c
 11415  002528  EF98  F012         	goto	u8911
 11416  00252C  EF9A  F012         	goto	u8910
 11417  002530                     u8911:
 11418  002530  EFAC  F012         	goto	l7325
 11419  002534                     u8910:
 11420  002534                     l7321:
 11421  002534  0E00               	movlw	0
 11422  002536  6E04               	movwf	___fladd@b^0,c
 11423  002538  0E00               	movlw	0
 11424  00253A  6E05               	movwf	(___fladd@b+1)^0,c
 11425  00253C  0E00               	movlw	0
 11426  00253E  6E06               	movwf	(___fladd@b+2)^0,c
 11427  002540  0E00               	movlw	0
 11428  002542  6E07               	movwf	(___fladd@b+3)^0,c
 11429  002544  5012               	movf	___fladd@bexp^0,w,c
 11430  002546  A4D8               	btfss	status,2,c
 11431  002548  EFA8  F012         	goto	u8921
 11432  00254C  EFAA  F012         	goto	u8920
 11433  002550                     u8921:
 11434  002550  EFAC  F012         	goto	l7325
 11435  002554                     u8920:
 11436  002554  0E00               	movlw	0
 11437  002556  6E10               	movwf	___fladd@signs^0,c
 11438  002558                     l7325:
 11439  002558  A012               	btfss	___fladd@bexp^0,0,c
 11440  00255A  EFB1  F012         	goto	u8931
 11441  00255E  EFB3  F012         	goto	u8930
 11442  002562                     u8931:
 11443  002562  EFB6  F012         	goto	l7329
 11444  002566                     u8930:
 11445  002566  8E06               	bsf	(___fladd@b+2)^0,7,c
 11446  002568  EFB7  F012         	goto	l7331
 11447  00256C                     l7329:
 11448  00256C  9E06               	bcf	(___fladd@b+2)^0,7,c
 11449  00256E                     l7331:
 11450  00256E  90D8               	bcf	status,0,c
 11451  002570  3012               	rrcf	___fladd@bexp^0,w,c
 11452  002572  6E07               	movwf	(___fladd@b+3)^0,c
 11453  002574  AE10               	btfss	___fladd@signs^0,7,c
 11454  002576  EFBF  F012         	goto	u8941
 11455  00257A  EFC1  F012         	goto	u8940
 11456  00257E                     u8941:
 11457  00257E  EFC2  F012         	goto	l7337
 11458  002582                     u8940:
 11459  002582  8E07               	bsf	(___fladd@b+3)^0,7,c
 11460  002584                     l7337:
 11461  002584  C004  F004         	movff	___fladd@b,?___fladd
 11462  002588  C005  F005         	movff	___fladd@b+1,?___fladd+1
 11463  00258C  C006  F006         	movff	___fladd@b+2,?___fladd+2
 11464  002590  C007  F007         	movff	___fladd@b+3,?___fladd+3
 11465  002594                     l1335:
 11466  002594  0012               	return		;funcret
 11467  002596                     __end_of___fladd:
 11468                           	opt callstack 0
 11469                           
 11470 ;; *************** function ___flneg *****************
 11471 ;; Defined at:
 11472 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  f1              4    3[COMRAM] unsigned char 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  4    3[COMRAM] unsigned char 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2, status,0
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11490 ;;Total ram usage:        4 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:    4
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_efgtoa
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text24
 11501  005AE0                     __ptext24:
 11502                           	opt callstack 0
 11503  005AE0                     ___flneg:
 11504                           	opt callstack 21
 11505  005AE0  5004               	movf	___flneg@f1^0,w,c
 11506  005AE2  1005               	iorwf	(___flneg@f1+1)^0,w,c
 11507  005AE4  1006               	iorwf	(___flneg@f1+2)^0,w,c
 11508  005AE6  1007               	iorwf	(___flneg@f1+3)^0,w,c
 11509  005AE8  B4D8               	btfsc	status,2,c
 11510  005AEA  EF79  F02D         	goto	u10061
 11511  005AEE  EF7B  F02D         	goto	u10060
 11512  005AF2                     u10061:
 11513  005AF2  EF83  F02D         	goto	l7935
 11514  005AF6                     u10060:
 11515  005AF6  0E00               	movlw	0
 11516  005AF8  1A04               	xorwf	___flneg@f1^0,f,c
 11517  005AFA  0E00               	movlw	0
 11518  005AFC  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 11519  005AFE  0E00               	movlw	0
 11520  005B00  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 11521  005B02  0E80               	movlw	128
 11522  005B04  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 11523  005B06                     l7935:
 11524  005B06  C004  F004         	movff	___flneg@f1,?___flneg
 11525  005B0A  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 11526  005B0E  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 11527  005B12  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 11528  005B16  0012               	return		;funcret
 11529  005B18                     __end_of___flneg:
 11530                           	opt callstack 0
 11531                           
 11532 ;; *************** function ___flmul *****************
 11533 ;; Defined at:
 11534 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;  b               4   17[COMRAM] unsigned char 
 11537 ;;  a               4   21[COMRAM] unsigned char 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  prod            4   36[COMRAM] struct .
 11540 ;;  grs             4   31[COMRAM] unsigned long 
 11541 ;;  temp            2   40[COMRAM] struct .
 11542 ;;  bexp            1   35[COMRAM] unsigned char 
 11543 ;;  aexp            1   30[COMRAM] unsigned char 
 11544 ;;  sign            1   29[COMRAM] unsigned char 
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  4   17[COMRAM] unsigned char 
 11547 ;; Registers used:
 11548 ;;		wreg, status,2, status,0, prodl, prodh
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 0/0
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11554 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11555 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11556 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11557 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11558 ;;Total ram usage:       25 bytes
 11559 ;; Hardware stack levels used:    1
 11560 ;; Hardware stack levels required when called:    4
 11561 ;; This function calls:
 11562 ;;		Nothing
 11563 ;; This function is called by:
 11564 ;;		_main
 11565 ;;		_efgtoa
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text25
 11570  002596                     __ptext25:
 11571                           	opt callstack 0
 11572  002596                     ___flmul:
 11573                           	opt callstack 21
 11574  002596  5015               	movf	(___flmul@b+3)^0,w,c
 11575  002598  0B80               	andlw	128
 11576  00259A  6E1E               	movwf	___flmul@sign^0,c
 11577  00259C  5015               	movf	(___flmul@b+3)^0,w,c
 11578  00259E  2415               	addwf	(___flmul@b+3)^0,w,c
 11579  0025A0  6E24               	movwf	___flmul@bexp^0,c
 11580  0025A2  AE14               	btfss	(___flmul@b+2)^0,7,c
 11581  0025A4  EFD6  F012         	goto	u9671
 11582  0025A8  EFD8  F012         	goto	u9670
 11583  0025AC                     u9671:
 11584  0025AC  EFD9  F012         	goto	l7683
 11585  0025B0                     u9670:
 11586  0025B0  8024               	bsf	___flmul@bexp^0,0,c
 11587  0025B2                     l7683:
 11588  0025B2  5024               	movf	___flmul@bexp^0,w,c
 11589  0025B4  B4D8               	btfsc	status,2,c
 11590  0025B6  EFDF  F012         	goto	u9681
 11591  0025BA  EFE1  F012         	goto	u9680
 11592  0025BE                     u9681:
 11593  0025BE  EFF4  F012         	goto	l7691
 11594  0025C2                     u9680:
 11595  0025C2  2824               	incf	___flmul@bexp^0,w,c
 11596  0025C4  A4D8               	btfss	status,2,c
 11597  0025C6  EFE7  F012         	goto	u9691
 11598  0025CA  EFE9  F012         	goto	u9690
 11599  0025CE                     u9691:
 11600  0025CE  EFF1  F012         	goto	l7689
 11601  0025D2                     u9690:
 11602  0025D2  0E00               	movlw	0
 11603  0025D4  6E12               	movwf	___flmul@b^0,c
 11604  0025D6  0E00               	movlw	0
 11605  0025D8  6E13               	movwf	(___flmul@b+1)^0,c
 11606  0025DA  0E00               	movlw	0
 11607  0025DC  6E14               	movwf	(___flmul@b+2)^0,c
 11608  0025DE  0E00               	movlw	0
 11609  0025E0  6E15               	movwf	(___flmul@b+3)^0,c
 11610  0025E2                     l7689:
 11611  0025E2  8E14               	bsf	(___flmul@b+2)^0,7,c
 11612  0025E4  EFFC  F012         	goto	l7693
 11613  0025E8                     l7691:
 11614  0025E8  0E00               	movlw	0
 11615  0025EA  6E12               	movwf	___flmul@b^0,c
 11616  0025EC  0E00               	movlw	0
 11617  0025EE  6E13               	movwf	(___flmul@b+1)^0,c
 11618  0025F0  0E00               	movlw	0
 11619  0025F2  6E14               	movwf	(___flmul@b+2)^0,c
 11620  0025F4  0E00               	movlw	0
 11621  0025F6  6E15               	movwf	(___flmul@b+3)^0,c
 11622  0025F8                     l7693:
 11623  0025F8  5019               	movf	(___flmul@a+3)^0,w,c
 11624  0025FA  0B80               	andlw	128
 11625  0025FC  1A1E               	xorwf	___flmul@sign^0,f,c
 11626  0025FE  5019               	movf	(___flmul@a+3)^0,w,c
 11627  002600  2419               	addwf	(___flmul@a+3)^0,w,c
 11628  002602  6E1F               	movwf	___flmul@aexp^0,c
 11629  002604  AE18               	btfss	(___flmul@a+2)^0,7,c
 11630  002606  EF07  F013         	goto	u9701
 11631  00260A  EF09  F013         	goto	u9700
 11632  00260E                     u9701:
 11633  00260E  EF0A  F013         	goto	l7701
 11634  002612                     u9700:
 11635  002612  801F               	bsf	___flmul@aexp^0,0,c
 11636  002614                     l7701:
 11637  002614  501F               	movf	___flmul@aexp^0,w,c
 11638  002616  B4D8               	btfsc	status,2,c
 11639  002618  EF10  F013         	goto	u9711
 11640  00261C  EF12  F013         	goto	u9710
 11641  002620                     u9711:
 11642  002620  EF25  F013         	goto	l7709
 11643  002624                     u9710:
 11644  002624  281F               	incf	___flmul@aexp^0,w,c
 11645  002626  A4D8               	btfss	status,2,c
 11646  002628  EF18  F013         	goto	u9721
 11647  00262C  EF1A  F013         	goto	u9720
 11648  002630                     u9721:
 11649  002630  EF22  F013         	goto	l7707
 11650  002634                     u9720:
 11651  002634  0E00               	movlw	0
 11652  002636  6E16               	movwf	___flmul@a^0,c
 11653  002638  0E00               	movlw	0
 11654  00263A  6E17               	movwf	(___flmul@a+1)^0,c
 11655  00263C  0E00               	movlw	0
 11656  00263E  6E18               	movwf	(___flmul@a+2)^0,c
 11657  002640  0E00               	movlw	0
 11658  002642  6E19               	movwf	(___flmul@a+3)^0,c
 11659  002644                     l7707:
 11660  002644  8E18               	bsf	(___flmul@a+2)^0,7,c
 11661  002646  EF2D  F013         	goto	l1412
 11662  00264A                     l7709:
 11663  00264A  0E00               	movlw	0
 11664  00264C  6E16               	movwf	___flmul@a^0,c
 11665  00264E  0E00               	movlw	0
 11666  002650  6E17               	movwf	(___flmul@a+1)^0,c
 11667  002652  0E00               	movlw	0
 11668  002654  6E18               	movwf	(___flmul@a+2)^0,c
 11669  002656  0E00               	movlw	0
 11670  002658  6E19               	movwf	(___flmul@a+3)^0,c
 11671  00265A                     l1412:
 11672  00265A  501F               	movf	___flmul@aexp^0,w,c
 11673  00265C  B4D8               	btfsc	status,2,c
 11674  00265E  EF33  F013         	goto	u9731
 11675  002662  EF35  F013         	goto	u9730
 11676  002666                     u9731:
 11677  002666  EF3D  F013         	goto	l7713
 11678  00266A                     u9730:
 11679  00266A  5024               	movf	___flmul@bexp^0,w,c
 11680  00266C  A4D8               	btfss	status,2,c
 11681  00266E  EF3B  F013         	goto	u9741
 11682  002672  EF3D  F013         	goto	u9740
 11683  002676                     u9741:
 11684  002676  EF47  F013         	goto	l7717
 11685  00267A                     u9740:
 11686  00267A                     l7713:
 11687  00267A  0E00               	movlw	0
 11688  00267C  6E12               	movwf	?___flmul^0,c
 11689  00267E  0E00               	movlw	0
 11690  002680  6E13               	movwf	(?___flmul+1)^0,c
 11691  002682  0E00               	movlw	0
 11692  002684  6E14               	movwf	(?___flmul+2)^0,c
 11693  002686  0E00               	movlw	0
 11694  002688  6E15               	movwf	(?___flmul+3)^0,c
 11695  00268A  EFDF  F014         	goto	l1416
 11696  00268E                     l7717:
 11697  00268E  5018               	movf	(___flmul@a+2)^0,w,c
 11698  002690  0212               	mulwf	___flmul@b^0,c
 11699  002692  CFF3 F029          	movff	prodl,___flmul@temp
 11700  002696  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11701  00269A  5029               	movf	___flmul@temp^0,w,c
 11702  00269C  6E20               	movwf	___flmul@grs^0,c
 11703  00269E  6A21               	clrf	(___flmul@grs+1)^0,c
 11704  0026A0  6A22               	clrf	(___flmul@grs+2)^0,c
 11705  0026A2  6A23               	clrf	(___flmul@grs+3)^0,c
 11706  0026A4  502A               	movf	(___flmul@temp+1)^0,w,c
 11707  0026A6  6E25               	movwf	___flmul@prod^0,c
 11708  0026A8  6A26               	clrf	(___flmul@prod+1)^0,c
 11709  0026AA  6A27               	clrf	(___flmul@prod+2)^0,c
 11710  0026AC  6A28               	clrf	(___flmul@prod+3)^0,c
 11711  0026AE  5017               	movf	(___flmul@a+1)^0,w,c
 11712  0026B0  0213               	mulwf	(___flmul@b+1)^0,c
 11713  0026B2  CFF3 F029          	movff	prodl,___flmul@temp
 11714  0026B6  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11715  0026BA  5029               	movf	___flmul@temp^0,w,c
 11716  0026BC  2620               	addwf	___flmul@grs^0,f,c
 11717  0026BE  0E00               	movlw	0
 11718  0026C0  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11719  0026C2  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11720  0026C4  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11721  0026C6  502A               	movf	(___flmul@temp+1)^0,w,c
 11722  0026C8  2625               	addwf	___flmul@prod^0,f,c
 11723  0026CA  0E00               	movlw	0
 11724  0026CC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11725  0026CE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11726  0026D0  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11727  0026D2  5016               	movf	___flmul@a^0,w,c
 11728  0026D4  0214               	mulwf	(___flmul@b+2)^0,c
 11729  0026D6  CFF3 F029          	movff	prodl,___flmul@temp
 11730  0026DA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11731  0026DE  5029               	movf	___flmul@temp^0,w,c
 11732  0026E0  2620               	addwf	___flmul@grs^0,f,c
 11733  0026E2  0E00               	movlw	0
 11734  0026E4  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11735  0026E6  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11736  0026E8  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11737  0026EA  502A               	movf	(___flmul@temp+1)^0,w,c
 11738  0026EC  2625               	addwf	___flmul@prod^0,f,c
 11739  0026EE  0E00               	movlw	0
 11740  0026F0  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11741  0026F2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11742  0026F4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11743  0026F6  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11744  0026FA  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11745  0026FE  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11746  002702  6A20               	clrf	___flmul@grs^0,c
 11747  002704  5016               	movf	___flmul@a^0,w,c
 11748  002706  0213               	mulwf	(___flmul@b+1)^0,c
 11749  002708  CFF3 F029          	movff	prodl,___flmul@temp
 11750  00270C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11751  002710  5029               	movf	___flmul@temp^0,w,c
 11752  002712  2620               	addwf	___flmul@grs^0,f,c
 11753  002714  502A               	movf	(___flmul@temp+1)^0,w,c
 11754  002716  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11755  002718  0E00               	movlw	0
 11756  00271A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11757  00271C  0E00               	movlw	0
 11758  00271E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11759  002720  5017               	movf	(___flmul@a+1)^0,w,c
 11760  002722  0212               	mulwf	___flmul@b^0,c
 11761  002724  CFF3 F029          	movff	prodl,___flmul@temp
 11762  002728  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11763  00272C  5029               	movf	___flmul@temp^0,w,c
 11764  00272E  2620               	addwf	___flmul@grs^0,f,c
 11765  002730  502A               	movf	(___flmul@temp+1)^0,w,c
 11766  002732  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11767  002734  0E00               	movlw	0
 11768  002736  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11769  002738  0E00               	movlw	0
 11770  00273A  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11771  00273C  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11772  002740  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11773  002744  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11774  002748  6A20               	clrf	___flmul@grs^0,c
 11775  00274A  5016               	movf	___flmul@a^0,w,c
 11776  00274C  0212               	mulwf	___flmul@b^0,c
 11777  00274E  CFF3 F029          	movff	prodl,___flmul@temp
 11778  002752  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11779  002756  5029               	movf	___flmul@temp^0,w,c
 11780  002758  2620               	addwf	___flmul@grs^0,f,c
 11781  00275A  502A               	movf	(___flmul@temp+1)^0,w,c
 11782  00275C  2221               	addwfc	(___flmul@grs+1)^0,f,c
 11783  00275E  0E00               	movlw	0
 11784  002760  2222               	addwfc	(___flmul@grs+2)^0,f,c
 11785  002762  0E00               	movlw	0
 11786  002764  2223               	addwfc	(___flmul@grs+3)^0,f,c
 11787  002766  5018               	movf	(___flmul@a+2)^0,w,c
 11788  002768  0213               	mulwf	(___flmul@b+1)^0,c
 11789  00276A  CFF3 F029          	movff	prodl,___flmul@temp
 11790  00276E  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11791  002772  5029               	movf	___flmul@temp^0,w,c
 11792  002774  2625               	addwf	___flmul@prod^0,f,c
 11793  002776  502A               	movf	(___flmul@temp+1)^0,w,c
 11794  002778  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11795  00277A  0E00               	movlw	0
 11796  00277C  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11797  00277E  0E00               	movlw	0
 11798  002780  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11799  002782  5017               	movf	(___flmul@a+1)^0,w,c
 11800  002784  0214               	mulwf	(___flmul@b+2)^0,c
 11801  002786  CFF3 F029          	movff	prodl,___flmul@temp
 11802  00278A  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11803  00278E  5029               	movf	___flmul@temp^0,w,c
 11804  002790  2625               	addwf	___flmul@prod^0,f,c
 11805  002792  502A               	movf	(___flmul@temp+1)^0,w,c
 11806  002794  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11807  002796  0E00               	movlw	0
 11808  002798  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11809  00279A  0E00               	movlw	0
 11810  00279C  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11811  00279E  5018               	movf	(___flmul@a+2)^0,w,c
 11812  0027A0  0214               	mulwf	(___flmul@b+2)^0,c
 11813  0027A2  CFF3 F029          	movff	prodl,___flmul@temp
 11814  0027A6  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11815  0027AA  5029               	movf	___flmul@temp^0,w,c
 11816  0027AC  6E1A               	movwf	??___flmul^0,c
 11817  0027AE  502A               	movf	(___flmul@temp+1)^0,w,c
 11818  0027B0  6E1B               	movwf	(??___flmul+1)^0,c
 11819  0027B2  6A1C               	clrf	(??___flmul+2)^0,c
 11820  0027B4  6A1D               	clrf	(??___flmul+3)^0,c
 11821  0027B6  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 11822  0027BA  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 11823  0027BE  C01A  F01B         	movff	??___flmul,??___flmul+1
 11824  0027C2  6A1A               	clrf	??___flmul^0,c
 11825  0027C4  501A               	movf	??___flmul^0,w,c
 11826  0027C6  2625               	addwf	___flmul@prod^0,f,c
 11827  0027C8  501B               	movf	(??___flmul+1)^0,w,c
 11828  0027CA  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11829  0027CC  501C               	movf	(??___flmul+2)^0,w,c
 11830  0027CE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11831  0027D0  501D               	movf	(??___flmul+3)^0,w,c
 11832  0027D2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11833  0027D4  C020  F01A         	movff	___flmul@grs,??___flmul
 11834  0027D8  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
 11835  0027DC  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
 11836  0027E0  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
 11837  0027E4  0E19               	movlw	25
 11838  0027E6  EFFA  F013         	goto	u9750
 11839  0027EA                     u9755:
 11840  0027EA  90D8               	bcf	status,0,c
 11841  0027EC  321D               	rrcf	(??___flmul+3)^0,f,c
 11842  0027EE  321C               	rrcf	(??___flmul+2)^0,f,c
 11843  0027F0  321B               	rrcf	(??___flmul+1)^0,f,c
 11844  0027F2  321A               	rrcf	??___flmul^0,f,c
 11845  0027F4                     u9750:
 11846  0027F4  2EE8               	decfsz	wreg,f,c
 11847  0027F6  EFF5  F013         	goto	u9755
 11848  0027FA  501A               	movf	??___flmul^0,w,c
 11849  0027FC  2625               	addwf	___flmul@prod^0,f,c
 11850  0027FE  501B               	movf	(??___flmul+1)^0,w,c
 11851  002800  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11852  002802  501C               	movf	(??___flmul+2)^0,w,c
 11853  002804  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11854  002806  501D               	movf	(??___flmul+3)^0,w,c
 11855  002808  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11856  00280A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 11857  00280E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 11858  002812  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 11859  002816  6A20               	clrf	___flmul@grs^0,c
 11860  002818  501F               	movf	___flmul@aexp^0,w,c
 11861  00281A  C024  F01A         	movff	___flmul@bexp,??___flmul
 11862  00281E  6A1B               	clrf	(??___flmul+1)^0,c
 11863  002820  261A               	addwf	??___flmul^0,f,c
 11864  002822  0E00               	movlw	0
 11865  002824  221B               	addwfc	(??___flmul+1)^0,f,c
 11866  002826  0E82               	movlw	130
 11867  002828  241A               	addwf	??___flmul^0,w,c
 11868  00282A  6E29               	movwf	___flmul@temp^0,c
 11869  00282C  0EFF               	movlw	255
 11870  00282E  201B               	addwfc	(??___flmul+1)^0,w,c
 11871  002830  6E2A               	movwf	(___flmul@temp+1)^0,c
 11872  002832  EF30  F014         	goto	l7765
 11873  002836                     l7759:
 11874  002836  90D8               	bcf	status,0,c
 11875  002838  3625               	rlcf	___flmul@prod^0,f,c
 11876  00283A  3626               	rlcf	(___flmul@prod+1)^0,f,c
 11877  00283C  3627               	rlcf	(___flmul@prod+2)^0,f,c
 11878  00283E  3628               	rlcf	(___flmul@prod+3)^0,f,c
 11879  002840  AE23               	btfss	(___flmul@grs+3)^0,7,c
 11880  002842  EF25  F014         	goto	u9761
 11881  002846  EF27  F014         	goto	u9760
 11882  00284A                     u9761:
 11883  00284A  EF28  F014         	goto	l1419
 11884  00284E                     u9760:
 11885  00284E  8025               	bsf	___flmul@prod^0,0,c
 11886  002850                     l1419:
 11887  002850  90D8               	bcf	status,0,c
 11888  002852  3620               	rlcf	___flmul@grs^0,f,c
 11889  002854  3621               	rlcf	(___flmul@grs+1)^0,f,c
 11890  002856  3622               	rlcf	(___flmul@grs+2)^0,f,c
 11891  002858  3623               	rlcf	(___flmul@grs+3)^0,f,c
 11892  00285A  0629               	decf	___flmul@temp^0,f,c
 11893  00285C  A0D8               	btfss	status,0,c
 11894  00285E  062A               	decf	(___flmul@temp+1)^0,f,c
 11895  002860                     l7765:
 11896  002860  AE27               	btfss	(___flmul@prod+2)^0,7,c
 11897  002862  EF35  F014         	goto	u9771
 11898  002866  EF37  F014         	goto	u9770
 11899  00286A                     u9771:
 11900  00286A  EF1B  F014         	goto	l7759
 11901  00286E                     u9770:
 11902  00286E  0E00               	movlw	0
 11903  002870  6E1F               	movwf	___flmul@aexp^0,c
 11904  002872  AE23               	btfss	(___flmul@grs+3)^0,7,c
 11905  002874  EF3E  F014         	goto	u9781
 11906  002878  EF40  F014         	goto	u9780
 11907  00287C                     u9781:
 11908  00287C  EF64  F014         	goto	l1421
 11909  002880                     u9780:
 11910  002880  0EFF               	movlw	255
 11911  002882  1420               	andwf	___flmul@grs^0,w,c
 11912  002884  6E1A               	movwf	??___flmul^0,c
 11913  002886  0EFF               	movlw	255
 11914  002888  1421               	andwf	(___flmul@grs+1)^0,w,c
 11915  00288A  6E1B               	movwf	(??___flmul+1)^0,c
 11916  00288C  0EFF               	movlw	255
 11917  00288E  1422               	andwf	(___flmul@grs+2)^0,w,c
 11918  002890  6E1C               	movwf	(??___flmul+2)^0,c
 11919  002892  0E7F               	movlw	127
 11920  002894  1423               	andwf	(___flmul@grs+3)^0,w,c
 11921  002896  6E1D               	movwf	(??___flmul+3)^0,c
 11922  002898  501A               	movf	??___flmul^0,w,c
 11923  00289A  101B               	iorwf	(??___flmul+1)^0,w,c
 11924  00289C  101C               	iorwf	(??___flmul+2)^0,w,c
 11925  00289E  101D               	iorwf	(??___flmul+3)^0,w,c
 11926  0028A0  B4D8               	btfsc	status,2,c
 11927  0028A2  EF55  F014         	goto	u9791
 11928  0028A6  EF57  F014         	goto	u9790
 11929  0028AA                     u9791:
 11930  0028AA  EF5B  F014         	goto	l1422
 11931  0028AE                     u9790:
 11932  0028AE                     l7773:
 11933  0028AE  0E01               	movlw	1
 11934  0028B0  6E1F               	movwf	___flmul@aexp^0,c
 11935  0028B2  EF64  F014         	goto	l1421
 11936  0028B6                     l1422:
 11937  0028B6  A025               	btfss	___flmul@prod^0,0,c
 11938  0028B8  EF60  F014         	goto	u9801
 11939  0028BC  EF62  F014         	goto	u9800
 11940  0028C0                     u9801:
 11941  0028C0  EF64  F014         	goto	l1421
 11942  0028C4                     u9800:
 11943  0028C4  EF57  F014         	goto	l7773
 11944  0028C8                     l1421:
 11945  0028C8  501F               	movf	___flmul@aexp^0,w,c
 11946  0028CA  B4D8               	btfsc	status,2,c
 11947  0028CC  EF6A  F014         	goto	u9811
 11948  0028D0  EF6C  F014         	goto	u9810
 11949  0028D4                     u9811:
 11950  0028D4  EF90  F014         	goto	l7785
 11951  0028D8                     u9810:
 11952  0028D8  0E01               	movlw	1
 11953  0028DA  2625               	addwf	___flmul@prod^0,f,c
 11954  0028DC  0E00               	movlw	0
 11955  0028DE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11956  0028E0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11957  0028E2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11958  0028E4  A028               	btfss	(___flmul@prod+3)^0,0,c
 11959  0028E6  EF77  F014         	goto	u9821
 11960  0028EA  EF79  F014         	goto	u9820
 11961  0028EE                     u9821:
 11962  0028EE  EF90  F014         	goto	l7785
 11963  0028F2                     u9820:
 11964  0028F2  C025  F01A         	movff	___flmul@prod,??___flmul
 11965  0028F6  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 11966  0028FA  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 11967  0028FE  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 11968  002902  341D               	rlcf	(??___flmul+3)^0,w,c
 11969  002904  321D               	rrcf	(??___flmul+3)^0,f,c
 11970  002906  321C               	rrcf	(??___flmul+2)^0,f,c
 11971  002908  321B               	rrcf	(??___flmul+1)^0,f,c
 11972  00290A  321A               	rrcf	??___flmul^0,f,c
 11973  00290C  C01A  F025         	movff	??___flmul,___flmul@prod
 11974  002910  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 11975  002914  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 11976  002918  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 11977  00291C  4A29               	infsnz	___flmul@temp^0,f,c
 11978  00291E  2A2A               	incf	(___flmul@temp+1)^0,f,c
 11979  002920                     l7785:
 11980  002920  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 11981  002922  EF9B  F014         	goto	u9831
 11982  002926  502A               	movf	(___flmul@temp+1)^0,w,c
 11983  002928  E108               	bnz	u9830
 11984  00292A  2829               	incf	___flmul@temp^0,w,c
 11985  00292C  A0D8               	btfss	status,0,c
 11986  00292E  EF9B  F014         	goto	u9831
 11987  002932  EF9D  F014         	goto	u9830
 11988  002936                     u9831:
 11989  002936  EFA7  F014         	goto	l7789
 11990  00293A                     u9830:
 11991  00293A  0E00               	movlw	0
 11992  00293C  6E25               	movwf	___flmul@prod^0,c
 11993  00293E  0E00               	movlw	0
 11994  002940  6E26               	movwf	(___flmul@prod+1)^0,c
 11995  002942  0E80               	movlw	128
 11996  002944  6E27               	movwf	(___flmul@prod+2)^0,c
 11997  002946  0E7F               	movlw	127
 11998  002948  6E28               	movwf	(___flmul@prod+3)^0,c
 11999  00294A  EFD5  F014         	goto	l7801
 12000  00294E                     l7789:
 12001  00294E  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12002  002950  EFB4  F014         	goto	u9840
 12003  002954  502A               	movf	(___flmul@temp+1)^0,w,c
 12004  002956  E106               	bnz	u9841
 12005  002958  0429               	decf	___flmul@temp^0,w,c
 12006  00295A  B0D8               	btfsc	status,0,c
 12007  00295C  EFB2  F014         	goto	u9841
 12008  002960  EFB4  F014         	goto	u9840
 12009  002964                     u9841:
 12010  002964  EFC0  F014         	goto	l1429
 12011  002968                     u9840:
 12012  002968  0E00               	movlw	0
 12013  00296A  6E25               	movwf	___flmul@prod^0,c
 12014  00296C  0E00               	movlw	0
 12015  00296E  6E26               	movwf	(___flmul@prod+1)^0,c
 12016  002970  0E00               	movlw	0
 12017  002972  6E27               	movwf	(___flmul@prod+2)^0,c
 12018  002974  0E00               	movlw	0
 12019  002976  6E28               	movwf	(___flmul@prod+3)^0,c
 12020  002978  0E00               	movlw	0
 12021  00297A  6E1E               	movwf	___flmul@sign^0,c
 12022  00297C  EFD5  F014         	goto	l7801
 12023  002980                     l1429:
 12024  002980  C029  F024         	movff	___flmul@temp,___flmul@bexp
 12025  002984  0EFF               	movlw	255
 12026  002986  1625               	andwf	___flmul@prod^0,f,c
 12027  002988  0EFF               	movlw	255
 12028  00298A  1626               	andwf	(___flmul@prod+1)^0,f,c
 12029  00298C  0E7F               	movlw	127
 12030  00298E  1627               	andwf	(___flmul@prod+2)^0,f,c
 12031  002990  0E00               	movlw	0
 12032  002992  1628               	andwf	(___flmul@prod+3)^0,f,c
 12033  002994  A024               	btfss	___flmul@bexp^0,0,c
 12034  002996  EFCF  F014         	goto	u9851
 12035  00299A  EFD1  F014         	goto	u9850
 12036  00299E                     u9851:
 12037  00299E  EFD2  F014         	goto	l7799
 12038  0029A2                     u9850:
 12039  0029A2  8E27               	bsf	(___flmul@prod+2)^0,7,c
 12040  0029A4                     l7799:
 12041  0029A4  90D8               	bcf	status,0,c
 12042  0029A6  3024               	rrcf	___flmul@bexp^0,w,c
 12043  0029A8  6E28               	movwf	(___flmul@prod+3)^0,c
 12044  0029AA                     l7801:
 12045  0029AA  501E               	movf	___flmul@sign^0,w,c
 12046  0029AC  1228               	iorwf	(___flmul@prod+3)^0,f,c
 12047  0029AE  C025  F012         	movff	___flmul@prod,?___flmul
 12048  0029B2  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 12049  0029B6  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 12050  0029BA  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 12051  0029BE                     l1416:
 12052  0029BE  0012               	return		;funcret
 12053  0029C0                     __end_of___flmul:
 12054                           	opt callstack 0
 12055                           
 12056 ;; *************** function ___flge *****************
 12057 ;; Defined at:
 12058 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;  ff1             4   42[COMRAM] unsigned char 
 12061 ;;  ff2             4   46[COMRAM] unsigned char 
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;		None               void
 12066 ;; Registers used:
 12067 ;;		wreg, status,2, status,0
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12073 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12075 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12076 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12077 ;;Total ram usage:       12 bytes
 12078 ;; Hardware stack levels used:    1
 12079 ;; Hardware stack levels required when called:    4
 12080 ;; This function calls:
 12081 ;;		Nothing
 12082 ;; This function is called by:
 12083 ;;		_main
 12084 ;;		_efgtoa
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           	psect	text26
 12089  004C98                     __ptext26:
 12090                           	opt callstack 0
 12091  004C98                     ___flge:
 12092                           	opt callstack 21
 12093  004C98  0E00               	movlw	0
 12094  004C9A  142B               	andwf	___flge@ff1^0,w,c
 12095  004C9C  6E33               	movwf	??___flge^0,c
 12096  004C9E  0E00               	movlw	0
 12097  004CA0  142C               	andwf	(___flge@ff1+1)^0,w,c
 12098  004CA2  6E34               	movwf	(??___flge+1)^0,c
 12099  004CA4  0E80               	movlw	128
 12100  004CA6  142D               	andwf	(___flge@ff1+2)^0,w,c
 12101  004CA8  6E35               	movwf	(??___flge+2)^0,c
 12102  004CAA  0E7F               	movlw	127
 12103  004CAC  142E               	andwf	(___flge@ff1+3)^0,w,c
 12104  004CAE  6E36               	movwf	(??___flge+3)^0,c
 12105  004CB0  5033               	movf	??___flge^0,w,c
 12106  004CB2  1034               	iorwf	(??___flge+1)^0,w,c
 12107  004CB4  1035               	iorwf	(??___flge+2)^0,w,c
 12108  004CB6  1036               	iorwf	(??___flge+3)^0,w,c
 12109  004CB8  A4D8               	btfss	status,2,c
 12110  004CBA  EF61  F026         	goto	u10011
 12111  004CBE  EF63  F026         	goto	u10010
 12112  004CC2                     u10011:
 12113  004CC2  EF6B  F026         	goto	l7913
 12114  004CC6                     u10010:
 12115  004CC6  0E00               	movlw	0
 12116  004CC8  6E2B               	movwf	___flge@ff1^0,c
 12117  004CCA  0E00               	movlw	0
 12118  004CCC  6E2C               	movwf	(___flge@ff1+1)^0,c
 12119  004CCE  0E00               	movlw	0
 12120  004CD0  6E2D               	movwf	(___flge@ff1+2)^0,c
 12121  004CD2  0E00               	movlw	0
 12122  004CD4  6E2E               	movwf	(___flge@ff1+3)^0,c
 12123  004CD6                     l7913:
 12124  004CD6  0E00               	movlw	0
 12125  004CD8  142F               	andwf	___flge@ff2^0,w,c
 12126  004CDA  6E33               	movwf	??___flge^0,c
 12127  004CDC  0E00               	movlw	0
 12128  004CDE  1430               	andwf	(___flge@ff2+1)^0,w,c
 12129  004CE0  6E34               	movwf	(??___flge+1)^0,c
 12130  004CE2  0E80               	movlw	128
 12131  004CE4  1431               	andwf	(___flge@ff2+2)^0,w,c
 12132  004CE6  6E35               	movwf	(??___flge+2)^0,c
 12133  004CE8  0E7F               	movlw	127
 12134  004CEA  1432               	andwf	(___flge@ff2+3)^0,w,c
 12135  004CEC  6E36               	movwf	(??___flge+3)^0,c
 12136  004CEE  5033               	movf	??___flge^0,w,c
 12137  004CF0  1034               	iorwf	(??___flge+1)^0,w,c
 12138  004CF2  1035               	iorwf	(??___flge+2)^0,w,c
 12139  004CF4  1036               	iorwf	(??___flge+3)^0,w,c
 12140  004CF6  A4D8               	btfss	status,2,c
 12141  004CF8  EF80  F026         	goto	u10021
 12142  004CFC  EF82  F026         	goto	u10020
 12143  004D00                     u10021:
 12144  004D00  EF8A  F026         	goto	l7917
 12145  004D04                     u10020:
 12146  004D04  0E00               	movlw	0
 12147  004D06  6E2F               	movwf	___flge@ff2^0,c
 12148  004D08  0E00               	movlw	0
 12149  004D0A  6E30               	movwf	(___flge@ff2+1)^0,c
 12150  004D0C  0E00               	movlw	0
 12151  004D0E  6E31               	movwf	(___flge@ff2+2)^0,c
 12152  004D10  0E00               	movlw	0
 12153  004D12  6E32               	movwf	(___flge@ff2+3)^0,c
 12154  004D14                     l7917:
 12155  004D14  AE2E               	btfss	(___flge@ff1+3)^0,7,c
 12156  004D16  EF8F  F026         	goto	u10031
 12157  004D1A  EF91  F026         	goto	u10030
 12158  004D1E                     u10031:
 12159  004D1E  EF9A  F026         	goto	l7921
 12160  004D22                     u10030:
 12161  004D22  6C2B               	negf	___flge@ff1^0,c
 12162  004D24  1E2C               	comf	(___flge@ff1+1)^0,f,c
 12163  004D26  B0D8               	btfsc	status,0,c
 12164  004D28  2A2C               	incf	(___flge@ff1+1)^0,f,c
 12165  004D2A  1E2D               	comf	(___flge@ff1+2)^0,f,c
 12166  004D2C  B0D8               	btfsc	status,0,c
 12167  004D2E  2A2D               	incf	(___flge@ff1+2)^0,f,c
 12168  004D30  0E80               	movlw	128
 12169  004D32  562E               	subfwb	(___flge@ff1+3)^0,f,c
 12170  004D34                     l7921:
 12171  004D34  AE32               	btfss	(___flge@ff2+3)^0,7,c
 12172  004D36  EF9F  F026         	goto	u10041
 12173  004D3A  EFA1  F026         	goto	u10040
 12174  004D3E                     u10041:
 12175  004D3E  EFAA  F026         	goto	l1063
 12176  004D42                     u10040:
 12177  004D42  6C2F               	negf	___flge@ff2^0,c
 12178  004D44  1E30               	comf	(___flge@ff2+1)^0,f,c
 12179  004D46  B0D8               	btfsc	status,0,c
 12180  004D48  2A30               	incf	(___flge@ff2+1)^0,f,c
 12181  004D4A  1E31               	comf	(___flge@ff2+2)^0,f,c
 12182  004D4C  B0D8               	btfsc	status,0,c
 12183  004D4E  2A31               	incf	(___flge@ff2+2)^0,f,c
 12184  004D50  0E80               	movlw	128
 12185  004D52  5632               	subfwb	(___flge@ff2+3)^0,f,c
 12186  004D54                     l1063:
 12187  004D54  0E00               	movlw	0
 12188  004D56  1A2B               	xorwf	___flge@ff1^0,f,c
 12189  004D58  0E00               	movlw	0
 12190  004D5A  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
 12191  004D5C  0E00               	movlw	0
 12192  004D5E  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
 12193  004D60  0E80               	movlw	128
 12194  004D62  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
 12195  004D64  0E00               	movlw	0
 12196  004D66  1A2F               	xorwf	___flge@ff2^0,f,c
 12197  004D68  0E00               	movlw	0
 12198  004D6A  1A30               	xorwf	(___flge@ff2+1)^0,f,c
 12199  004D6C  0E00               	movlw	0
 12200  004D6E  1A31               	xorwf	(___flge@ff2+2)^0,f,c
 12201  004D70  0E80               	movlw	128
 12202  004D72  1A32               	xorwf	(___flge@ff2+3)^0,f,c
 12203  004D74  502F               	movf	___flge@ff2^0,w,c
 12204  004D76  5C2B               	subwf	___flge@ff1^0,w,c
 12205  004D78  5030               	movf	(___flge@ff2+1)^0,w,c
 12206  004D7A  582C               	subwfb	(___flge@ff1+1)^0,w,c
 12207  004D7C  5031               	movf	(___flge@ff2+2)^0,w,c
 12208  004D7E  582D               	subwfb	(___flge@ff1+2)^0,w,c
 12209  004D80  5032               	movf	(___flge@ff2+3)^0,w,c
 12210  004D82  582E               	subwfb	(___flge@ff1+3)^0,w,c
 12211  004D84  B0D8               	btfsc	status,0,c
 12212  004D86  EFC7  F026         	goto	u10051
 12213  004D8A  EFC9  F026         	goto	u10050
 12214  004D8E                     u10051:
 12215  004D8E  EFCC  F026         	goto	l7927
 12216  004D92                     u10050:
 12217  004D92  90D8               	bcf	status,0,c
 12218  004D94  EFCD  F026         	goto	l1068
 12219  004D98                     l7927:
 12220  004D98  80D8               	bsf	status,0,c
 12221  004D9A                     l1068:
 12222  004D9A  0012               	return		;funcret
 12223  004D9C                     __end_of___flge:
 12224                           	opt callstack 0
 12225                           
 12226 ;; *************** function ___fleq *****************
 12227 ;; Defined at:
 12228 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;  ff1             4    3[COMRAM] unsigned char 
 12231 ;;  ff2             4    7[COMRAM] unsigned char 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;		None
 12234 ;; Return value:  Size  Location     Type
 12235 ;;		None               void
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12243 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12245 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12246 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12247 ;;Total ram usage:       12 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    4
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_efgtoa
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257                           	psect	text27
 12258  00540E                     __ptext27:
 12259                           	opt callstack 0
 12260  00540E                     ___fleq:
 12261                           	opt callstack 21
 12262  00540E  0E00               	movlw	0
 12263  005410  1404               	andwf	___fleq@ff1^0,w,c
 12264  005412  6E0C               	movwf	??___fleq^0,c
 12265  005414  0E00               	movlw	0
 12266  005416  1405               	andwf	(___fleq@ff1+1)^0,w,c
 12267  005418  6E0D               	movwf	(??___fleq+1)^0,c
 12268  00541A  0E80               	movlw	128
 12269  00541C  1406               	andwf	(___fleq@ff1+2)^0,w,c
 12270  00541E  6E0E               	movwf	(??___fleq+2)^0,c
 12271  005420  0E7F               	movlw	127
 12272  005422  1407               	andwf	(___fleq@ff1+3)^0,w,c
 12273  005424  6E0F               	movwf	(??___fleq+3)^0,c
 12274  005426  500C               	movf	??___fleq^0,w,c
 12275  005428  100D               	iorwf	(??___fleq+1)^0,w,c
 12276  00542A  100E               	iorwf	(??___fleq+2)^0,w,c
 12277  00542C  100F               	iorwf	(??___fleq+3)^0,w,c
 12278  00542E  A4D8               	btfss	status,2,c
 12279  005430  EF1C  F02A         	goto	u9981
 12280  005434  EF1E  F02A         	goto	u9980
 12281  005438                     u9981:
 12282  005438  EF26  F02A         	goto	l7897
 12283  00543C                     u9980:
 12284  00543C  0E00               	movlw	0
 12285  00543E  6E04               	movwf	___fleq@ff1^0,c
 12286  005440  0E00               	movlw	0
 12287  005442  6E05               	movwf	(___fleq@ff1+1)^0,c
 12288  005444  0E00               	movlw	0
 12289  005446  6E06               	movwf	(___fleq@ff1+2)^0,c
 12290  005448  0E00               	movlw	0
 12291  00544A  6E07               	movwf	(___fleq@ff1+3)^0,c
 12292  00544C                     l7897:
 12293  00544C  0E00               	movlw	0
 12294  00544E  1408               	andwf	___fleq@ff2^0,w,c
 12295  005450  6E0C               	movwf	??___fleq^0,c
 12296  005452  0E00               	movlw	0
 12297  005454  1409               	andwf	(___fleq@ff2+1)^0,w,c
 12298  005456  6E0D               	movwf	(??___fleq+1)^0,c
 12299  005458  0E80               	movlw	128
 12300  00545A  140A               	andwf	(___fleq@ff2+2)^0,w,c
 12301  00545C  6E0E               	movwf	(??___fleq+2)^0,c
 12302  00545E  0E7F               	movlw	127
 12303  005460  140B               	andwf	(___fleq@ff2+3)^0,w,c
 12304  005462  6E0F               	movwf	(??___fleq+3)^0,c
 12305  005464  500C               	movf	??___fleq^0,w,c
 12306  005466  100D               	iorwf	(??___fleq+1)^0,w,c
 12307  005468  100E               	iorwf	(??___fleq+2)^0,w,c
 12308  00546A  100F               	iorwf	(??___fleq+3)^0,w,c
 12309  00546C  A4D8               	btfss	status,2,c
 12310  00546E  EF3B  F02A         	goto	u9991
 12311  005472  EF3D  F02A         	goto	u9990
 12312  005476                     u9991:
 12313  005476  EF45  F02A         	goto	l7901
 12314  00547A                     u9990:
 12315  00547A  0E00               	movlw	0
 12316  00547C  6E08               	movwf	___fleq@ff2^0,c
 12317  00547E  0E00               	movlw	0
 12318  005480  6E09               	movwf	(___fleq@ff2+1)^0,c
 12319  005482  0E00               	movlw	0
 12320  005484  6E0A               	movwf	(___fleq@ff2+2)^0,c
 12321  005486  0E00               	movlw	0
 12322  005488  6E0B               	movwf	(___fleq@ff2+3)^0,c
 12323  00548A                     l7901:
 12324  00548A  5008               	movf	___fleq@ff2^0,w,c
 12325  00548C  1804               	xorwf	___fleq@ff1^0,w,c
 12326  00548E  E10F               	bnz	u10000
 12327  005490  5009               	movf	(___fleq@ff2+1)^0,w,c
 12328  005492  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 12329  005494  E10C               	bnz	u10000
 12330  005496  500A               	movf	(___fleq@ff2+2)^0,w,c
 12331  005498  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 12332  00549A  E109               	bnz	u10000
 12333  00549C  500B               	movf	(___fleq@ff2+3)^0,w,c
 12334  00549E  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 12335  0054A0  B4D8               	btfsc	status,2,c
 12336  0054A2  EF55  F02A         	goto	u10001
 12337  0054A6  EF57  F02A         	goto	u10000
 12338  0054AA                     u10001:
 12339  0054AA  EF5A  F02A         	goto	l7905
 12340  0054AE                     u10000:
 12341  0054AE  90D8               	bcf	status,0,c
 12342  0054B0  EF5B  F02A         	goto	l1057
 12343  0054B4                     l7905:
 12344  0054B4  80D8               	bsf	status,0,c
 12345  0054B6                     l1057:
 12346  0054B6  0012               	return		;funcret
 12347  0054B8                     __end_of___fleq:
 12348                           	opt callstack 0
 12349                           
 12350 ;; *************** function ___fldiv *****************
 12351 ;; Defined at:
 12352 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;  b               4    3[COMRAM] unsigned char 
 12355 ;;  a               4    7[COMRAM] unsigned char 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  grs             4   22[COMRAM] unsigned long 
 12358 ;;  rem             4   15[COMRAM] unsigned long 
 12359 ;;  new_exp         2   20[COMRAM] short 
 12360 ;;  aexp            1   27[COMRAM] unsigned char 
 12361 ;;  bexp            1   26[COMRAM] unsigned char 
 12362 ;;  sign            1   19[COMRAM] unsigned char 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  4    3[COMRAM] unsigned char 
 12365 ;; Registers used:
 12366 ;;		wreg, status,2, status,0
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12372 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12374 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12375 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12376 ;;Total ram usage:       25 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:    4
 12379 ;; This function calls:
 12380 ;;		Nothing
 12381 ;; This function is called by:
 12382 ;;		_efgtoa
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text28
 12387  0029C0                     __ptext28:
 12388                           	opt callstack 0
 12389  0029C0                     ___fldiv:
 12390                           	opt callstack 21
 12391  0029C0  5007               	movf	(___fldiv@b+3)^0,w,c
 12392  0029C2  0B80               	andlw	128
 12393  0029C4  6E14               	movwf	___fldiv@sign^0,c
 12394  0029C6  5007               	movf	(___fldiv@b+3)^0,w,c
 12395  0029C8  2407               	addwf	(___fldiv@b+3)^0,w,c
 12396  0029CA  6E1B               	movwf	___fldiv@bexp^0,c
 12397  0029CC  AE06               	btfss	(___fldiv@b+2)^0,7,c
 12398  0029CE  EFEB  F014         	goto	u9441
 12399  0029D2  EFED  F014         	goto	u9440
 12400  0029D6                     u9441:
 12401  0029D6  EFEE  F014         	goto	l7545
 12402  0029DA                     u9440:
 12403  0029DA  801B               	bsf	___fldiv@bexp^0,0,c
 12404  0029DC                     l7545:
 12405  0029DC  501B               	movf	___fldiv@bexp^0,w,c
 12406  0029DE  B4D8               	btfsc	status,2,c
 12407  0029E0  EFF4  F014         	goto	u9451
 12408  0029E4  EFF6  F014         	goto	u9450
 12409  0029E8                     u9451:
 12410  0029E8  EF0B  F015         	goto	l7555
 12411  0029EC                     u9450:
 12412  0029EC  281B               	incf	___fldiv@bexp^0,w,c
 12413  0029EE  A4D8               	btfss	status,2,c
 12414  0029F0  EFFC  F014         	goto	u9461
 12415  0029F4  EFFE  F014         	goto	u9460
 12416  0029F8                     u9461:
 12417  0029F8  EF06  F015         	goto	l7551
 12418  0029FC                     u9460:
 12419  0029FC  0E00               	movlw	0
 12420  0029FE  6E04               	movwf	___fldiv@b^0,c
 12421  002A00  0E00               	movlw	0
 12422  002A02  6E05               	movwf	(___fldiv@b+1)^0,c
 12423  002A04  0E00               	movlw	0
 12424  002A06  6E06               	movwf	(___fldiv@b+2)^0,c
 12425  002A08  0E00               	movlw	0
 12426  002A0A  6E07               	movwf	(___fldiv@b+3)^0,c
 12427  002A0C                     l7551:
 12428  002A0C  8E06               	bsf	(___fldiv@b+2)^0,7,c
 12429  002A0E  0E00               	movlw	0
 12430  002A10  6E07               	movwf	(___fldiv@b+3)^0,c
 12431  002A12  EF13  F015         	goto	l7557
 12432  002A16                     l7555:
 12433  002A16  0E00               	movlw	0
 12434  002A18  6E04               	movwf	___fldiv@b^0,c
 12435  002A1A  0E00               	movlw	0
 12436  002A1C  6E05               	movwf	(___fldiv@b+1)^0,c
 12437  002A1E  0E00               	movlw	0
 12438  002A20  6E06               	movwf	(___fldiv@b+2)^0,c
 12439  002A22  0E00               	movlw	0
 12440  002A24  6E07               	movwf	(___fldiv@b+3)^0,c
 12441  002A26                     l7557:
 12442  002A26  500B               	movf	(___fldiv@a+3)^0,w,c
 12443  002A28  0B80               	andlw	128
 12444  002A2A  1A14               	xorwf	___fldiv@sign^0,f,c
 12445  002A2C  500B               	movf	(___fldiv@a+3)^0,w,c
 12446  002A2E  240B               	addwf	(___fldiv@a+3)^0,w,c
 12447  002A30  6E1C               	movwf	___fldiv@aexp^0,c
 12448  002A32  AE0A               	btfss	(___fldiv@a+2)^0,7,c
 12449  002A34  EF1E  F015         	goto	u9471
 12450  002A38  EF20  F015         	goto	u9470
 12451  002A3C                     u9471:
 12452  002A3C  EF21  F015         	goto	l7565
 12453  002A40                     u9470:
 12454  002A40  801C               	bsf	___fldiv@aexp^0,0,c
 12455  002A42                     l7565:
 12456  002A42  501C               	movf	___fldiv@aexp^0,w,c
 12457  002A44  B4D8               	btfsc	status,2,c
 12458  002A46  EF27  F015         	goto	u9481
 12459  002A4A  EF29  F015         	goto	u9480
 12460  002A4E                     u9481:
 12461  002A4E  EF3E  F015         	goto	l7575
 12462  002A52                     u9480:
 12463  002A52  281C               	incf	___fldiv@aexp^0,w,c
 12464  002A54  A4D8               	btfss	status,2,c
 12465  002A56  EF2F  F015         	goto	u9491
 12466  002A5A  EF31  F015         	goto	u9490
 12467  002A5E                     u9491:
 12468  002A5E  EF39  F015         	goto	l7571
 12469  002A62                     u9490:
 12470  002A62  0E00               	movlw	0
 12471  002A64  6E08               	movwf	___fldiv@a^0,c
 12472  002A66  0E00               	movlw	0
 12473  002A68  6E09               	movwf	(___fldiv@a+1)^0,c
 12474  002A6A  0E00               	movlw	0
 12475  002A6C  6E0A               	movwf	(___fldiv@a+2)^0,c
 12476  002A6E  0E00               	movlw	0
 12477  002A70  6E0B               	movwf	(___fldiv@a+3)^0,c
 12478  002A72                     l7571:
 12479  002A72  8E0A               	bsf	(___fldiv@a+2)^0,7,c
 12480  002A74  0E00               	movlw	0
 12481  002A76  6E0B               	movwf	(___fldiv@a+3)^0,c
 12482  002A78  EF46  F015         	goto	l7577
 12483  002A7C                     l7575:
 12484  002A7C  0E00               	movlw	0
 12485  002A7E  6E08               	movwf	___fldiv@a^0,c
 12486  002A80  0E00               	movlw	0
 12487  002A82  6E09               	movwf	(___fldiv@a+1)^0,c
 12488  002A84  0E00               	movlw	0
 12489  002A86  6E0A               	movwf	(___fldiv@a+2)^0,c
 12490  002A88  0E00               	movlw	0
 12491  002A8A  6E0B               	movwf	(___fldiv@a+3)^0,c
 12492  002A8C                     l7577:
 12493  002A8C  5008               	movf	___fldiv@a^0,w,c
 12494  002A8E  1009               	iorwf	(___fldiv@a+1)^0,w,c
 12495  002A90  100A               	iorwf	(___fldiv@a+2)^0,w,c
 12496  002A92  100B               	iorwf	(___fldiv@a+3)^0,w,c
 12497  002A94  A4D8               	btfss	status,2,c
 12498  002A96  EF4F  F015         	goto	u9501
 12499  002A9A  EF51  F015         	goto	u9500
 12500  002A9E                     u9501:
 12501  002A9E  EF69  F015         	goto	l7589
 12502  002AA2                     u9500:
 12503  002AA2  0E00               	movlw	0
 12504  002AA4  6E04               	movwf	___fldiv@b^0,c
 12505  002AA6  0E00               	movlw	0
 12506  002AA8  6E05               	movwf	(___fldiv@b+1)^0,c
 12507  002AAA  0E00               	movlw	0
 12508  002AAC  6E06               	movwf	(___fldiv@b+2)^0,c
 12509  002AAE  0E00               	movlw	0
 12510  002AB0  6E07               	movwf	(___fldiv@b+3)^0,c
 12511  002AB2  0E80               	movlw	128
 12512  002AB4  1206               	iorwf	(___fldiv@b+2)^0,f,c
 12513  002AB6  0E7F               	movlw	127
 12514  002AB8  1207               	iorwf	(___fldiv@b+3)^0,f,c
 12515  002ABA                     l7583:
 12516  002ABA  5014               	movf	___fldiv@sign^0,w,c
 12517  002ABC  1207               	iorwf	(___fldiv@b+3)^0,f,c
 12518  002ABE  C004  F004         	movff	___fldiv@b,?___fldiv
 12519  002AC2  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
 12520  002AC6  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
 12521  002ACA  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
 12522  002ACE  EFAC  F016         	goto	l1380
 12523  002AD2                     l7589:
 12524  002AD2  501B               	movf	___fldiv@bexp^0,w,c
 12525  002AD4  A4D8               	btfss	status,2,c
 12526  002AD6  EF6F  F015         	goto	u9511
 12527  002ADA  EF71  F015         	goto	u9510
 12528  002ADE                     u9511:
 12529  002ADE  EF7B  F015         	goto	l7597
 12530  002AE2                     u9510:
 12531  002AE2  0E00               	movlw	0
 12532  002AE4  6E04               	movwf	?___fldiv^0,c
 12533  002AE6  0E00               	movlw	0
 12534  002AE8  6E05               	movwf	(?___fldiv+1)^0,c
 12535  002AEA  0E00               	movlw	0
 12536  002AEC  6E06               	movwf	(?___fldiv+2)^0,c
 12537  002AEE  0E00               	movlw	0
 12538  002AF0  6E07               	movwf	(?___fldiv+3)^0,c
 12539  002AF2  EFAC  F016         	goto	l1380
 12540  002AF6                     l7597:
 12541  002AF6  501C               	movf	___fldiv@aexp^0,w,c
 12542  002AF8  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
 12543  002AFC  6A0D               	clrf	(??___fldiv+1)^0,c
 12544  002AFE  5E0C               	subwf	??___fldiv^0,f,c
 12545  002B00  0E00               	movlw	0
 12546  002B02  5A0D               	subwfb	(??___fldiv+1)^0,f,c
 12547  002B04  0E7F               	movlw	127
 12548  002B06  240C               	addwf	??___fldiv^0,w,c
 12549  002B08  6E15               	movwf	___fldiv@new_exp^0,c
 12550  002B0A  0E00               	movlw	0
 12551  002B0C  200D               	addwfc	(??___fldiv+1)^0,w,c
 12552  002B0E  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12553  002B10  C004  F010         	movff	___fldiv@b,___fldiv@rem
 12554  002B14  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
 12555  002B18  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
 12556  002B1C  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
 12557  002B20  0E00               	movlw	0
 12558  002B22  6E04               	movwf	___fldiv@b^0,c
 12559  002B24  0E00               	movlw	0
 12560  002B26  6E05               	movwf	(___fldiv@b+1)^0,c
 12561  002B28  0E00               	movlw	0
 12562  002B2A  6E06               	movwf	(___fldiv@b+2)^0,c
 12563  002B2C  0E00               	movlw	0
 12564  002B2E  6E07               	movwf	(___fldiv@b+3)^0,c
 12565  002B30  0E00               	movlw	0
 12566  002B32  6E17               	movwf	___fldiv@grs^0,c
 12567  002B34  0E00               	movlw	0
 12568  002B36  6E18               	movwf	(___fldiv@grs+1)^0,c
 12569  002B38  0E00               	movlw	0
 12570  002B3A  6E19               	movwf	(___fldiv@grs+2)^0,c
 12571  002B3C  0E00               	movlw	0
 12572  002B3E  6E1A               	movwf	(___fldiv@grs+3)^0,c
 12573  002B40  0E00               	movlw	0
 12574  002B42  6E1C               	movwf	___fldiv@aexp^0,c
 12575  002B44  EFDC  F015         	goto	l1382
 12576  002B48                     l7607:
 12577  002B48  501C               	movf	___fldiv@aexp^0,w,c
 12578  002B4A  B4D8               	btfsc	status,2,c
 12579  002B4C  EFAA  F015         	goto	u9521
 12580  002B50  EFAC  F015         	goto	u9520
 12581  002B54                     u9521:
 12582  002B54  EFC3  F015         	goto	l7615
 12583  002B58                     u9520:
 12584  002B58  90D8               	bcf	status,0,c
 12585  002B5A  3610               	rlcf	___fldiv@rem^0,f,c
 12586  002B5C  3611               	rlcf	(___fldiv@rem+1)^0,f,c
 12587  002B5E  3612               	rlcf	(___fldiv@rem+2)^0,f,c
 12588  002B60  3613               	rlcf	(___fldiv@rem+3)^0,f,c
 12589  002B62  90D8               	bcf	status,0,c
 12590  002B64  3604               	rlcf	___fldiv@b^0,f,c
 12591  002B66  3605               	rlcf	(___fldiv@b+1)^0,f,c
 12592  002B68  3606               	rlcf	(___fldiv@b+2)^0,f,c
 12593  002B6A  3607               	rlcf	(___fldiv@b+3)^0,f,c
 12594  002B6C  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12595  002B6E  EFBB  F015         	goto	u9531
 12596  002B72  EFBD  F015         	goto	u9530
 12597  002B76                     u9531:
 12598  002B76  EFBE  F015         	goto	l1385
 12599  002B7A                     u9530:
 12600  002B7A  8004               	bsf	___fldiv@b^0,0,c
 12601  002B7C                     l1385:
 12602  002B7C  90D8               	bcf	status,0,c
 12603  002B7E  3617               	rlcf	___fldiv@grs^0,f,c
 12604  002B80  3618               	rlcf	(___fldiv@grs+1)^0,f,c
 12605  002B82  3619               	rlcf	(___fldiv@grs+2)^0,f,c
 12606  002B84  361A               	rlcf	(___fldiv@grs+3)^0,f,c
 12607  002B86                     l7615:
 12608  002B86  5008               	movf	___fldiv@a^0,w,c
 12609  002B88  5C10               	subwf	___fldiv@rem^0,w,c
 12610  002B8A  5009               	movf	(___fldiv@a+1)^0,w,c
 12611  002B8C  5811               	subwfb	(___fldiv@rem+1)^0,w,c
 12612  002B8E  500A               	movf	(___fldiv@a+2)^0,w,c
 12613  002B90  5812               	subwfb	(___fldiv@rem+2)^0,w,c
 12614  002B92  500B               	movf	(___fldiv@a+3)^0,w,c
 12615  002B94  5813               	subwfb	(___fldiv@rem+3)^0,w,c
 12616  002B96  A0D8               	btfss	status,0,c
 12617  002B98  EFD0  F015         	goto	u9541
 12618  002B9C  EFD2  F015         	goto	u9540
 12619  002BA0                     u9541:
 12620  002BA0  EFDB  F015         	goto	l7621
 12621  002BA4                     u9540:
 12622  002BA4  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
 12623  002BA6  5008               	movf	___fldiv@a^0,w,c
 12624  002BA8  5E10               	subwf	___fldiv@rem^0,f,c
 12625  002BAA  5009               	movf	(___fldiv@a+1)^0,w,c
 12626  002BAC  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
 12627  002BAE  500A               	movf	(___fldiv@a+2)^0,w,c
 12628  002BB0  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
 12629  002BB2  500B               	movf	(___fldiv@a+3)^0,w,c
 12630  002BB4  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
 12631  002BB6                     l7621:
 12632  002BB6  2A1C               	incf	___fldiv@aexp^0,f,c
 12633  002BB8                     l1382:
 12634  002BB8  0E19               	movlw	25
 12635  002BBA  641C               	cpfsgt	___fldiv@aexp^0,c
 12636  002BBC  EFE2  F015         	goto	u9551
 12637  002BC0  EFE4  F015         	goto	u9550
 12638  002BC4                     u9551:
 12639  002BC4  EFA4  F015         	goto	l7607
 12640  002BC8                     u9550:
 12641  002BC8  5010               	movf	___fldiv@rem^0,w,c
 12642  002BCA  1011               	iorwf	(___fldiv@rem+1)^0,w,c
 12643  002BCC  1012               	iorwf	(___fldiv@rem+2)^0,w,c
 12644  002BCE  1013               	iorwf	(___fldiv@rem+3)^0,w,c
 12645  002BD0  B4D8               	btfsc	status,2,c
 12646  002BD2  EFED  F015         	goto	u9561
 12647  002BD6  EFEF  F015         	goto	u9560
 12648  002BDA                     u9561:
 12649  002BDA  EF07  F016         	goto	l7633
 12650  002BDE                     u9560:
 12651  002BDE  8017               	bsf	___fldiv@grs^0,0,c
 12652  002BE0  EF07  F016         	goto	l7633
 12653  002BE4                     l7627:
 12654  002BE4  90D8               	bcf	status,0,c
 12655  002BE6  3604               	rlcf	___fldiv@b^0,f,c
 12656  002BE8  3605               	rlcf	(___fldiv@b+1)^0,f,c
 12657  002BEA  3606               	rlcf	(___fldiv@b+2)^0,f,c
 12658  002BEC  3607               	rlcf	(___fldiv@b+3)^0,f,c
 12659  002BEE  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12660  002BF0  EFFC  F015         	goto	u9571
 12661  002BF4  EFFE  F015         	goto	u9570
 12662  002BF8                     u9571:
 12663  002BF8  EFFF  F015         	goto	l1391
 12664  002BFC                     u9570:
 12665  002BFC  8004               	bsf	___fldiv@b^0,0,c
 12666  002BFE                     l1391:
 12667  002BFE  90D8               	bcf	status,0,c
 12668  002C00  3617               	rlcf	___fldiv@grs^0,f,c
 12669  002C02  3618               	rlcf	(___fldiv@grs+1)^0,f,c
 12670  002C04  3619               	rlcf	(___fldiv@grs+2)^0,f,c
 12671  002C06  361A               	rlcf	(___fldiv@grs+3)^0,f,c
 12672  002C08  0615               	decf	___fldiv@new_exp^0,f,c
 12673  002C0A  A0D8               	btfss	status,0,c
 12674  002C0C  0616               	decf	(___fldiv@new_exp+1)^0,f,c
 12675  002C0E                     l7633:
 12676  002C0E  AE06               	btfss	(___fldiv@b+2)^0,7,c
 12677  002C10  EF0C  F016         	goto	u9581
 12678  002C14  EF0E  F016         	goto	u9580
 12679  002C18                     u9581:
 12680  002C18  EFF2  F015         	goto	l7627
 12681  002C1C                     u9580:
 12682  002C1C  0E00               	movlw	0
 12683  002C1E  6E1C               	movwf	___fldiv@aexp^0,c
 12684  002C20  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
 12685  002C22  EF15  F016         	goto	u9591
 12686  002C26  EF17  F016         	goto	u9590
 12687  002C2A                     u9591:
 12688  002C2A  EF3B  F016         	goto	l1393
 12689  002C2E                     u9590:
 12690  002C2E  0EFF               	movlw	255
 12691  002C30  1417               	andwf	___fldiv@grs^0,w,c
 12692  002C32  6E0C               	movwf	??___fldiv^0,c
 12693  002C34  0EFF               	movlw	255
 12694  002C36  1418               	andwf	(___fldiv@grs+1)^0,w,c
 12695  002C38  6E0D               	movwf	(??___fldiv+1)^0,c
 12696  002C3A  0EFF               	movlw	255
 12697  002C3C  1419               	andwf	(___fldiv@grs+2)^0,w,c
 12698  002C3E  6E0E               	movwf	(??___fldiv+2)^0,c
 12699  002C40  0E7F               	movlw	127
 12700  002C42  141A               	andwf	(___fldiv@grs+3)^0,w,c
 12701  002C44  6E0F               	movwf	(??___fldiv+3)^0,c
 12702  002C46  500C               	movf	??___fldiv^0,w,c
 12703  002C48  100D               	iorwf	(??___fldiv+1)^0,w,c
 12704  002C4A  100E               	iorwf	(??___fldiv+2)^0,w,c
 12705  002C4C  100F               	iorwf	(??___fldiv+3)^0,w,c
 12706  002C4E  B4D8               	btfsc	status,2,c
 12707  002C50  EF2C  F016         	goto	u9601
 12708  002C54  EF2E  F016         	goto	u9600
 12709  002C58                     u9601:
 12710  002C58  EF32  F016         	goto	l1394
 12711  002C5C                     u9600:
 12712  002C5C                     l7641:
 12713  002C5C  0E01               	movlw	1
 12714  002C5E  6E1C               	movwf	___fldiv@aexp^0,c
 12715  002C60  EF3B  F016         	goto	l1393
 12716  002C64                     l1394:
 12717  002C64  A004               	btfss	___fldiv@b^0,0,c
 12718  002C66  EF37  F016         	goto	u9611
 12719  002C6A  EF39  F016         	goto	u9610
 12720  002C6E                     u9611:
 12721  002C6E  EF3B  F016         	goto	l1393
 12722  002C72                     u9610:
 12723  002C72  EF2E  F016         	goto	l7641
 12724  002C76                     l1393:
 12725  002C76  501C               	movf	___fldiv@aexp^0,w,c
 12726  002C78  B4D8               	btfsc	status,2,c
 12727  002C7A  EF41  F016         	goto	u9621
 12728  002C7E  EF43  F016         	goto	u9620
 12729  002C82                     u9621:
 12730  002C82  EF67  F016         	goto	l7653
 12731  002C86                     u9620:
 12732  002C86  0E01               	movlw	1
 12733  002C88  2604               	addwf	___fldiv@b^0,f,c
 12734  002C8A  0E00               	movlw	0
 12735  002C8C  2205               	addwfc	(___fldiv@b+1)^0,f,c
 12736  002C8E  2206               	addwfc	(___fldiv@b+2)^0,f,c
 12737  002C90  2207               	addwfc	(___fldiv@b+3)^0,f,c
 12738  002C92  A007               	btfss	(___fldiv@b+3)^0,0,c
 12739  002C94  EF4E  F016         	goto	u9631
 12740  002C98  EF50  F016         	goto	u9630
 12741  002C9C                     u9631:
 12742  002C9C  EF67  F016         	goto	l7653
 12743  002CA0                     u9630:
 12744  002CA0  C004  F00C         	movff	___fldiv@b,??___fldiv
 12745  002CA4  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
 12746  002CA8  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
 12747  002CAC  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
 12748  002CB0  340F               	rlcf	(??___fldiv+3)^0,w,c
 12749  002CB2  320F               	rrcf	(??___fldiv+3)^0,f,c
 12750  002CB4  320E               	rrcf	(??___fldiv+2)^0,f,c
 12751  002CB6  320D               	rrcf	(??___fldiv+1)^0,f,c
 12752  002CB8  320C               	rrcf	??___fldiv^0,f,c
 12753  002CBA  C00C  F004         	movff	??___fldiv,___fldiv@b
 12754  002CBE  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
 12755  002CC2  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
 12756  002CC6  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
 12757  002CCA  4A15               	infsnz	___fldiv@new_exp^0,f,c
 12758  002CCC  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
 12759  002CCE                     l7653:
 12760  002CCE  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12761  002CD0  EF72  F016         	goto	u9641
 12762  002CD4  5016               	movf	(___fldiv@new_exp+1)^0,w,c
 12763  002CD6  E108               	bnz	u9640
 12764  002CD8  2815               	incf	___fldiv@new_exp^0,w,c
 12765  002CDA  A0D8               	btfss	status,0,c
 12766  002CDC  EF72  F016         	goto	u9641
 12767  002CE0  EF74  F016         	goto	u9640
 12768  002CE4                     u9641:
 12769  002CE4  EF7F  F016         	goto	l7657
 12770  002CE8                     u9640:
 12771  002CE8  0E00               	movlw	0
 12772  002CEA  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12773  002CEC  6815               	setf	___fldiv@new_exp^0,c
 12774  002CEE  0E00               	movlw	0
 12775  002CF0  6E04               	movwf	___fldiv@b^0,c
 12776  002CF2  0E00               	movlw	0
 12777  002CF4  6E05               	movwf	(___fldiv@b+1)^0,c
 12778  002CF6  0E00               	movlw	0
 12779  002CF8  6E06               	movwf	(___fldiv@b+2)^0,c
 12780  002CFA  0E00               	movlw	0
 12781  002CFC  6E07               	movwf	(___fldiv@b+3)^0,c
 12782  002CFE                     l7657:
 12783  002CFE  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12784  002D00  EF8C  F016         	goto	u9650
 12785  002D04  5016               	movf	(___fldiv@new_exp+1)^0,w,c
 12786  002D06  E106               	bnz	u9651
 12787  002D08  0415               	decf	___fldiv@new_exp^0,w,c
 12788  002D0A  B0D8               	btfsc	status,0,c
 12789  002D0C  EF8A  F016         	goto	u9651
 12790  002D10  EF8C  F016         	goto	u9650
 12791  002D14                     u9651:
 12792  002D14  EF9A  F016         	goto	l7661
 12793  002D18                     u9650:
 12794  002D18  0E00               	movlw	0
 12795  002D1A  6E16               	movwf	(___fldiv@new_exp+1)^0,c
 12796  002D1C  0E00               	movlw	0
 12797  002D1E  6E15               	movwf	___fldiv@new_exp^0,c
 12798  002D20  0E00               	movlw	0
 12799  002D22  6E04               	movwf	___fldiv@b^0,c
 12800  002D24  0E00               	movlw	0
 12801  002D26  6E05               	movwf	(___fldiv@b+1)^0,c
 12802  002D28  0E00               	movlw	0
 12803  002D2A  6E06               	movwf	(___fldiv@b+2)^0,c
 12804  002D2C  0E00               	movlw	0
 12805  002D2E  6E07               	movwf	(___fldiv@b+3)^0,c
 12806  002D30  0E00               	movlw	0
 12807  002D32  6E14               	movwf	___fldiv@sign^0,c
 12808  002D34                     l7661:
 12809  002D34  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
 12810  002D38  A01B               	btfss	___fldiv@bexp^0,0,c
 12811  002D3A  EFA1  F016         	goto	u9661
 12812  002D3E  EFA3  F016         	goto	u9660
 12813  002D42                     u9661:
 12814  002D42  EFA6  F016         	goto	l7667
 12815  002D46                     u9660:
 12816  002D46  8E06               	bsf	(___fldiv@b+2)^0,7,c
 12817  002D48  EFA7  F016         	goto	l7669
 12818  002D4C                     l7667:
 12819  002D4C  9E06               	bcf	(___fldiv@b+2)^0,7,c
 12820  002D4E                     l7669:
 12821  002D4E  90D8               	bcf	status,0,c
 12822  002D50  301B               	rrcf	___fldiv@bexp^0,w,c
 12823  002D52  6E07               	movwf	(___fldiv@b+3)^0,c
 12824  002D54  EF5D  F015         	goto	l7583
 12825  002D58                     l1380:
 12826  002D58  0012               	return		;funcret
 12827  002D5A                     __end_of___fldiv:
 12828                           	opt callstack 0
 12829                           
 12830 ;; *************** function ___awmod *****************
 12831 ;; Defined at:
 12832 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;  dividend        2    3[COMRAM] int 
 12835 ;;  divisor         2    5[COMRAM] int 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;  sign            1    8[COMRAM] unsigned char 
 12838 ;;  counter         1    7[COMRAM] unsigned char 
 12839 ;; Return value:  Size  Location     Type
 12840 ;;                  2    3[COMRAM] int 
 12841 ;; Registers used:
 12842 ;;		wreg, status,2, status,0
 12843 ;; Tracked objects:
 12844 ;;		On entry : 0/0
 12845 ;;		On exit  : 0/0
 12846 ;;		Unchanged: 0/0
 12847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12852 ;;Total ram usage:        6 bytes
 12853 ;; Hardware stack levels used:    1
 12854 ;; Hardware stack levels required when called:    4
 12855 ;; This function calls:
 12856 ;;		Nothing
 12857 ;; This function is called by:
 12858 ;;		_efgtoa
 12859 ;; This function uses a non-reentrant model
 12860 ;;
 12861                           
 12862                           	psect	text29
 12863  0052AE                     __ptext29:
 12864                           	opt callstack 0
 12865  0052AE                     ___awmod:
 12866                           	opt callstack 21
 12867  0052AE  0E00               	movlw	0
 12868  0052B0  6E09               	movwf	___awmod@sign^0,c
 12869  0052B2  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
 12870  0052B4  EF60  F029         	goto	u9920
 12871  0052B8  EF5E  F029         	goto	u9921
 12872  0052BC                     u9921:
 12873  0052BC  EF66  F029         	goto	l7865
 12874  0052C0                     u9920:
 12875  0052C0  6C04               	negf	___awmod@dividend^0,c
 12876  0052C2  1E05               	comf	(___awmod@dividend+1)^0,f,c
 12877  0052C4  B0D8               	btfsc	status,0,c
 12878  0052C6  2A05               	incf	(___awmod@dividend+1)^0,f,c
 12879  0052C8  0E01               	movlw	1
 12880  0052CA  6E09               	movwf	___awmod@sign^0,c
 12881  0052CC                     l7865:
 12882  0052CC  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
 12883  0052CE  EF6D  F029         	goto	u9930
 12884  0052D2  EF6B  F029         	goto	u9931
 12885  0052D6                     u9931:
 12886  0052D6  EF71  F029         	goto	l7869
 12887  0052DA                     u9930:
 12888  0052DA  6C06               	negf	___awmod@divisor^0,c
 12889  0052DC  1E07               	comf	(___awmod@divisor+1)^0,f,c
 12890  0052DE  B0D8               	btfsc	status,0,c
 12891  0052E0  2A07               	incf	(___awmod@divisor+1)^0,f,c
 12892  0052E2                     l7869:
 12893  0052E2  5006               	movf	___awmod@divisor^0,w,c
 12894  0052E4  1007               	iorwf	(___awmod@divisor+1)^0,w,c
 12895  0052E6  B4D8               	btfsc	status,2,c
 12896  0052E8  EF78  F029         	goto	u9941
 12897  0052EC  EF7A  F029         	goto	u9940
 12898  0052F0                     u9941:
 12899  0052F0  EF9E  F029         	goto	l7885
 12900  0052F4                     u9940:
 12901  0052F4  0E01               	movlw	1
 12902  0052F6  6E08               	movwf	___awmod@counter^0,c
 12903  0052F8  EF82  F029         	goto	l7875
 12904  0052FC                     l7873:
 12905  0052FC  90D8               	bcf	status,0,c
 12906  0052FE  3606               	rlcf	___awmod@divisor^0,f,c
 12907  005300  3607               	rlcf	(___awmod@divisor+1)^0,f,c
 12908  005302  2A08               	incf	___awmod@counter^0,f,c
 12909  005304                     l7875:
 12910  005304  AE07               	btfss	(___awmod@divisor+1)^0,7,c
 12911  005306  EF87  F029         	goto	u9951
 12912  00530A  EF89  F029         	goto	u9950
 12913  00530E                     u9951:
 12914  00530E  EF7E  F029         	goto	l7873
 12915  005312                     u9950:
 12916  005312                     l7877:
 12917  005312  5006               	movf	___awmod@divisor^0,w,c
 12918  005314  5C04               	subwf	___awmod@dividend^0,w,c
 12919  005316  5007               	movf	(___awmod@divisor+1)^0,w,c
 12920  005318  5805               	subwfb	(___awmod@dividend+1)^0,w,c
 12921  00531A  A0D8               	btfss	status,0,c
 12922  00531C  EF92  F029         	goto	u9961
 12923  005320  EF94  F029         	goto	u9960
 12924  005324                     u9961:
 12925  005324  EF98  F029         	goto	l7881
 12926  005328                     u9960:
 12927  005328  5006               	movf	___awmod@divisor^0,w,c
 12928  00532A  5E04               	subwf	___awmod@dividend^0,f,c
 12929  00532C  5007               	movf	(___awmod@divisor+1)^0,w,c
 12930  00532E  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
 12931  005330                     l7881:
 12932  005330  90D8               	bcf	status,0,c
 12933  005332  3207               	rrcf	(___awmod@divisor+1)^0,f,c
 12934  005334  3206               	rrcf	___awmod@divisor^0,f,c
 12935  005336  2E08               	decfsz	___awmod@counter^0,f,c
 12936  005338  EF89  F029         	goto	l7877
 12937  00533C                     l7885:
 12938  00533C  5009               	movf	___awmod@sign^0,w,c
 12939  00533E  B4D8               	btfsc	status,2,c
 12940  005340  EFA4  F029         	goto	u9971
 12941  005344  EFA6  F029         	goto	u9970
 12942  005348                     u9971:
 12943  005348  EFAA  F029         	goto	l7889
 12944  00534C                     u9970:
 12945  00534C  6C04               	negf	___awmod@dividend^0,c
 12946  00534E  1E05               	comf	(___awmod@dividend+1)^0,f,c
 12947  005350  B0D8               	btfsc	status,0,c
 12948  005352  2A05               	incf	(___awmod@dividend+1)^0,f,c
 12949  005354                     l7889:
 12950  005354  C004  F004         	movff	___awmod@dividend,?___awmod
 12951  005358  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
 12952  00535C  0012               	return		;funcret
 12953  00535E                     __end_of___awmod:
 12954                           	opt callstack 0
 12955                           
 12956 ;; *************** function ___awdiv *****************
 12957 ;; Defined at:
 12958 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 12959 ;; Parameters:    Size  Location     Type
 12960 ;;  dividend        2    3[COMRAM] int 
 12961 ;;  divisor         2    5[COMRAM] int 
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;  quotient        2    9[COMRAM] int 
 12964 ;;  sign            1    8[COMRAM] unsigned char 
 12965 ;;  counter         1    7[COMRAM] unsigned char 
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  2    3[COMRAM] int 
 12968 ;; Registers used:
 12969 ;;		wreg, status,2, status,0
 12970 ;; Tracked objects:
 12971 ;;		On entry : 0/0
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12976 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12978 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12979 ;;Total ram usage:        8 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:    4
 12982 ;; This function calls:
 12983 ;;		Nothing
 12984 ;; This function is called by:
 12985 ;;		_efgtoa
 12986 ;; This function uses a non-reentrant model
 12987 ;;
 12988                           
 12989                           	psect	text30
 12990  0051EA                     __ptext30:
 12991                           	opt callstack 0
 12992  0051EA                     ___awdiv:
 12993                           	opt callstack 21
 12994  0051EA  0E00               	movlw	0
 12995  0051EC  6E09               	movwf	___awdiv@sign^0,c
 12996  0051EE  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
 12997  0051F0  EFFE  F028         	goto	u9860
 12998  0051F4  EFFC  F028         	goto	u9861
 12999  0051F8                     u9861:
 13000  0051F8  EF04  F029         	goto	l7821
 13001  0051FC                     u9860:
 13002  0051FC  6C06               	negf	___awdiv@divisor^0,c
 13003  0051FE  1E07               	comf	(___awdiv@divisor+1)^0,f,c
 13004  005200  B0D8               	btfsc	status,0,c
 13005  005202  2A07               	incf	(___awdiv@divisor+1)^0,f,c
 13006  005204  0E01               	movlw	1
 13007  005206  6E09               	movwf	___awdiv@sign^0,c
 13008  005208                     l7821:
 13009  005208  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
 13010  00520A  EF0B  F029         	goto	u9870
 13011  00520E  EF09  F029         	goto	u9871
 13012  005212                     u9871:
 13013  005212  EF11  F029         	goto	l7827
 13014  005216                     u9870:
 13015  005216  6C04               	negf	___awdiv@dividend^0,c
 13016  005218  1E05               	comf	(___awdiv@dividend+1)^0,f,c
 13017  00521A  B0D8               	btfsc	status,0,c
 13018  00521C  2A05               	incf	(___awdiv@dividend+1)^0,f,c
 13019  00521E  0E01               	movlw	1
 13020  005220  1A09               	xorwf	___awdiv@sign^0,f,c
 13021  005222                     l7827:
 13022  005222  0E00               	movlw	0
 13023  005224  6E0B               	movwf	(___awdiv@quotient+1)^0,c
 13024  005226  0E00               	movlw	0
 13025  005228  6E0A               	movwf	___awdiv@quotient^0,c
 13026  00522A  5006               	movf	___awdiv@divisor^0,w,c
 13027  00522C  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
 13028  00522E  B4D8               	btfsc	status,2,c
 13029  005230  EF1C  F029         	goto	u9881
 13030  005234  EF1E  F029         	goto	u9880
 13031  005238                     u9881:
 13032  005238  EF46  F029         	goto	l7849
 13033  00523C                     u9880:
 13034  00523C  0E01               	movlw	1
 13035  00523E  6E08               	movwf	___awdiv@counter^0,c
 13036  005240  EF26  F029         	goto	l7835
 13037  005244                     l7833:
 13038  005244  90D8               	bcf	status,0,c
 13039  005246  3606               	rlcf	___awdiv@divisor^0,f,c
 13040  005248  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
 13041  00524A  2A08               	incf	___awdiv@counter^0,f,c
 13042  00524C                     l7835:
 13043  00524C  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
 13044  00524E  EF2B  F029         	goto	u9891
 13045  005252  EF2D  F029         	goto	u9890
 13046  005256                     u9891:
 13047  005256  EF22  F029         	goto	l7833
 13048  00525A                     u9890:
 13049  00525A                     l7837:
 13050  00525A  90D8               	bcf	status,0,c
 13051  00525C  360A               	rlcf	___awdiv@quotient^0,f,c
 13052  00525E  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13053  005260  5006               	movf	___awdiv@divisor^0,w,c
 13054  005262  5C04               	subwf	___awdiv@dividend^0,w,c
 13055  005264  5007               	movf	(___awdiv@divisor+1)^0,w,c
 13056  005266  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
 13057  005268  A0D8               	btfss	status,0,c
 13058  00526A  EF39  F029         	goto	u9901
 13059  00526E  EF3B  F029         	goto	u9900
 13060  005272                     u9901:
 13061  005272  EF40  F029         	goto	l7845
 13062  005276                     u9900:
 13063  005276  5006               	movf	___awdiv@divisor^0,w,c
 13064  005278  5E04               	subwf	___awdiv@dividend^0,f,c
 13065  00527A  5007               	movf	(___awdiv@divisor+1)^0,w,c
 13066  00527C  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
 13067  00527E  800A               	bsf	___awdiv@quotient^0,0,c
 13068  005280                     l7845:
 13069  005280  90D8               	bcf	status,0,c
 13070  005282  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
 13071  005284  3206               	rrcf	___awdiv@divisor^0,f,c
 13072  005286  2E08               	decfsz	___awdiv@counter^0,f,c
 13073  005288  EF2D  F029         	goto	l7837
 13074  00528C                     l7849:
 13075  00528C  5009               	movf	___awdiv@sign^0,w,c
 13076  00528E  B4D8               	btfsc	status,2,c
 13077  005290  EF4C  F029         	goto	u9911
 13078  005294  EF4E  F029         	goto	u9910
 13079  005298                     u9911:
 13080  005298  EF52  F029         	goto	l7853
 13081  00529C                     u9910:
 13082  00529C  6C0A               	negf	___awdiv@quotient^0,c
 13083  00529E  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
 13084  0052A0  B0D8               	btfsc	status,0,c
 13085  0052A2  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
 13086  0052A4                     l7853:
 13087  0052A4  C00A  F004         	movff	___awdiv@quotient,?___awdiv
 13088  0052A8  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
 13089  0052AC  0012               	return		;funcret
 13090  0052AE                     __end_of___awdiv:
 13091                           	opt callstack 0
 13092                           
 13093 ;; *************** function _dtoa *****************
 13094 ;; Defined at:
 13095 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13096 ;; Parameters:    Size  Location     Type
 13097 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 13098 ;;		 -> vsnprintf@f(6), 
 13099 ;;  d               8   32[COMRAM] long long 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;  n               8   56[COMRAM] long long 
 13102 ;;  i               2   64[COMRAM] int 
 13103 ;;  s               2   54[COMRAM] int 
 13104 ;;  w               2   52[COMRAM] int 
 13105 ;;  p               2   50[COMRAM] int 
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  2   30[COMRAM] int 
 13108 ;; Registers used:
 13109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13115 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13116 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13117 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13118 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13119 ;;Total ram usage:       36 bytes
 13120 ;; Hardware stack levels used:    1
 13121 ;; Hardware stack levels required when called:    8
 13122 ;; This function calls:
 13123 ;;		___aodiv
 13124 ;;		___aomod
 13125 ;;		_abs
 13126 ;;		_pad
 13127 ;; This function is called by:
 13128 ;;		_vfpfcnvrt
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132                           	psect	text31
 13133  0030E0                     __ptext31:
 13134                           	opt callstack 0
 13135  0030E0                     _dtoa:
 13136                           	opt callstack 18
 13137  0030E0                     
 13138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13139  0030E0  C021  F039         	movff	dtoa@d,dtoa@n
 13140  0030E4  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
 13141  0030E8  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
 13142  0030EC  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
 13143  0030F0  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
 13144  0030F4  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
 13145  0030F8  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
 13146  0030FC  C028  F040         	movff	dtoa@d+7,dtoa@n+7
 13147  003100                     
 13148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13149  003100  BE40               	btfsc	(dtoa@n+7)^0,7,c
 13150  003102  EF85  F018         	goto	u10241
 13151  003106  EF88  F018         	goto	u10240
 13152  00310A                     u10241:
 13153  00310A  0E01               	movlw	1
 13154  00310C  EF89  F018         	goto	u10250
 13155  003110                     u10240:
 13156  003110  0E00               	movlw	0
 13157  003112                     u10250:
 13158  003112  6E37               	movwf	dtoa@s^0,c
 13159  003114  6A38               	clrf	(dtoa@s+1)^0,c
 13160                           
 13161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13162  003116  5037               	movf	dtoa@s^0,w,c
 13163  003118  1038               	iorwf	(dtoa@s+1)^0,w,c
 13164  00311A  B4D8               	btfsc	status,2,c
 13165  00311C  EF92  F018         	goto	u10261
 13166  003120  EF94  F018         	goto	u10260
 13167  003124                     u10261:
 13168  003124  EFA4  F018         	goto	l8053
 13169  003128                     u10260:
 13170  003128                     
 13171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13172  003128  1E40               	comf	(dtoa@n+7)^0,f,c
 13173  00312A  1E3F               	comf	(dtoa@n+6)^0,f,c
 13174  00312C  1E3E               	comf	(dtoa@n+5)^0,f,c
 13175  00312E  1E3D               	comf	(dtoa@n+4)^0,f,c
 13176  003130  1E3C               	comf	(dtoa@n+3)^0,f,c
 13177  003132  1E3B               	comf	(dtoa@n+2)^0,f,c
 13178  003134  1E3A               	comf	(dtoa@n+1)^0,f,c
 13179  003136  6C39               	negf	dtoa@n^0,c
 13180  003138  0E00               	movlw	0
 13181  00313A  223A               	addwfc	(dtoa@n+1)^0,f,c
 13182  00313C  223B               	addwfc	(dtoa@n+2)^0,f,c
 13183  00313E  223C               	addwfc	(dtoa@n+3)^0,f,c
 13184  003140  223D               	addwfc	(dtoa@n+4)^0,f,c
 13185  003142  223E               	addwfc	(dtoa@n+5)^0,f,c
 13186  003144  223F               	addwfc	(dtoa@n+6)^0,f,c
 13187  003146  2240               	addwfc	(dtoa@n+7)^0,f,c
 13188  003148                     l8053:
 13189                           
 13190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13191  003148  BE59               	btfsc	(_prec+1)^0,7,c
 13192  00314A  EFA9  F018         	goto	u10271
 13193  00314E  EFAB  F018         	goto	u10270
 13194  003152                     u10271:
 13195  003152  EFAD  F018         	goto	l8057
 13196  003156                     u10270:
 13197  003156                     
 13198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13199  003156  0100               	movlb	0	; () banked
 13200  003158  93F6               	bcf	_flags& (0+255),1,b
 13201  00315A                     l8057:
 13202                           
 13203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13204  00315A  BE59               	btfsc	(_prec+1)^0,7,c
 13205  00315C  EFBA  F018         	goto	u10280
 13206  003160  5059               	movf	(_prec+1)^0,w,c
 13207  003162  E106               	bnz	u10281
 13208  003164  0458               	decf	_prec^0,w,c
 13209  003166  B0D8               	btfsc	status,0,c
 13210  003168  EFB8  F018         	goto	u10281
 13211  00316C  EFBA  F018         	goto	u10280
 13212  003170                     u10281:
 13213  003170  EFC0  F018         	goto	l508
 13214  003174                     u10280:
 13215  003174  0E00               	movlw	0
 13216  003176  6E34               	movwf	(dtoa@p+1)^0,c
 13217  003178  0E01               	movlw	1
 13218  00317A  6E33               	movwf	dtoa@p^0,c
 13219  00317C  EFC4  F018         	goto	l510
 13220  003180                     l508:
 13221  003180  C058  F033         	movff	_prec,dtoa@p
 13222  003184  C059  F034         	movff	_prec+1,dtoa@p+1
 13223  003188                     l510:
 13224                           
 13225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13226  003188  C0F4  F035         	movff	_width,dtoa@w
 13227  00318C  C0F5  F036         	movff	_width+1,dtoa@w+1
 13228  003190                     
 13229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13230  003190  5037               	movf	dtoa@s^0,w,c
 13231  003192  1038               	iorwf	(dtoa@s+1)^0,w,c
 13232  003194  A4D8               	btfss	status,2,c
 13233  003196  EFCF  F018         	goto	u10291
 13234  00319A  EFD1  F018         	goto	u10290
 13235  00319E                     u10291:
 13236  00319E  EFD9  F018         	goto	l8065
 13237  0031A2                     u10290:
 13238  0031A2  0100               	movlb	0	; () banked
 13239  0031A4  A5F6               	btfss	_flags& (0+255),2,b
 13240  0031A6  EFD7  F018         	goto	u10301
 13241  0031AA  EFD9  F018         	goto	u10300
 13242  0031AE                     u10301:
 13243  0031AE  EFDC  F018         	goto	l8067
 13244  0031B2                     u10300:
 13245  0031B2                     l8065:
 13246                           
 13247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13248  0031B2  0635               	decf	dtoa@w^0,f,c
 13249  0031B4  A0D8               	btfss	status,0,c
 13250  0031B6  0636               	decf	(dtoa@w+1)^0,f,c
 13251  0031B8                     l8067:
 13252                           
 13253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13254  0031B8  0E00               	movlw	0
 13255  0031BA  6E42               	movwf	(dtoa@i+1)^0,c
 13256  0031BC  0E4F               	movlw	79
 13257  0031BE  6E41               	movwf	dtoa@i^0,c
 13258  0031C0                     
 13259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13260  0031C0  0E00               	movlw	0
 13261  0031C2  0101               	movlb	1	; () banked
 13262  0031C4  6FB3               	movwf	(_dbuf+79)& (0+255),b
 13263                           
 13264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13265  0031C6  EF61  F019         	goto	l8081
 13266  0031CA                     l8071:
 13267                           
 13268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13269  0031CA  0641               	decf	dtoa@i^0,f,c
 13270  0031CC  A0D8               	btfss	status,0,c
 13271  0031CE  0642               	decf	(dtoa@i+1)^0,f,c
 13272  0031D0                     
 13273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13274  0031D0  0E64               	movlw	low _dbuf
 13275  0031D2  2441               	addwf	dtoa@i^0,w,c
 13276  0031D4  6ED9               	movwf	fsr2l,c
 13277  0031D6  0E01               	movlw	high _dbuf
 13278  0031D8  2042               	addwfc	(dtoa@i+1)^0,w,c
 13279  0031DA  6EDA               	movwf	fsr2h,c
 13280  0031DC  C039  F004         	movff	dtoa@n,___aomod@dividend
 13281  0031E0  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
 13282  0031E4  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
 13283  0031E8  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
 13284  0031EC  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
 13285  0031F0  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
 13286  0031F4  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
 13287  0031F8  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
 13288  0031FC  0E0A               	movlw	10
 13289  0031FE  6E0C               	movwf	___aomod@divisor^0,c
 13290  003200  0E00               	movlw	0
 13291  003202  6E0D               	movwf	(___aomod@divisor+1)^0,c
 13292  003204  0E00               	movlw	0
 13293  003206  6E0E               	movwf	(___aomod@divisor+2)^0,c
 13294  003208  0E00               	movlw	0
 13295  00320A  6E0F               	movwf	(___aomod@divisor+3)^0,c
 13296  00320C  0E00               	movlw	0
 13297  00320E  6E10               	movwf	(___aomod@divisor+4)^0,c
 13298  003210  0E00               	movlw	0
 13299  003212  6E11               	movwf	(___aomod@divisor+5)^0,c
 13300  003214  0E00               	movlw	0
 13301  003216  6E12               	movwf	(___aomod@divisor+6)^0,c
 13302  003218  0E00               	movlw	0
 13303  00321A  6E13               	movwf	(___aomod@divisor+7)^0,c
 13304  00321C  EC63  F023         	call	___aomod	;wreg free
 13305  003220  C004  F029         	movff	?___aomod,??_dtoa
 13306  003224  C005  F02A         	movff	?___aomod+1,??_dtoa+1
 13307  003228  C006  F02B         	movff	?___aomod+2,??_dtoa+2
 13308  00322C  C007  F02C         	movff	?___aomod+3,??_dtoa+3
 13309  003230  C008  F02D         	movff	?___aomod+4,??_dtoa+4
 13310  003234  C009  F02E         	movff	?___aomod+5,??_dtoa+5
 13311  003238  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
 13312  00323C  C00B  F030         	movff	?___aomod+7,??_dtoa+7
 13313  003240  C029  F016         	movff	??_dtoa,abs@a
 13314  003244  C02B  F017         	movff	??_dtoa+2,abs@a+1
 13315  003248  ECDD  F02C         	call	_abs	;wreg free
 13316  00324C  5016               	movf	?_abs^0,w,c
 13317  00324E  0F30               	addlw	48
 13318  003250  6EDF               	movwf	indf2,c
 13319  003252                     
 13320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13321  003252  0633               	decf	dtoa@p^0,f,c
 13322  003254  A0D8               	btfss	status,0,c
 13323  003256  0634               	decf	(dtoa@p+1)^0,f,c
 13324  003258                     
 13325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13326  003258  0635               	decf	dtoa@w^0,f,c
 13327  00325A  A0D8               	btfss	status,0,c
 13328  00325C  0636               	decf	(dtoa@w+1)^0,f,c
 13329  00325E                     
 13330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13331  00325E  C039  F004         	movff	dtoa@n,___aodiv@dividend
 13332  003262  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
 13333  003266  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
 13334  00326A  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
 13335  00326E  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
 13336  003272  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
 13337  003276  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
 13338  00327A  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
 13339  00327E  0E0A               	movlw	10
 13340  003280  6E0C               	movwf	___aodiv@divisor^0,c
 13341  003282  0E00               	movlw	0
 13342  003284  6E0D               	movwf	(___aodiv@divisor+1)^0,c
 13343  003286  0E00               	movlw	0
 13344  003288  6E0E               	movwf	(___aodiv@divisor+2)^0,c
 13345  00328A  0E00               	movlw	0
 13346  00328C  6E0F               	movwf	(___aodiv@divisor+3)^0,c
 13347  00328E  0E00               	movlw	0
 13348  003290  6E10               	movwf	(___aodiv@divisor+4)^0,c
 13349  003292  0E00               	movlw	0
 13350  003294  6E11               	movwf	(___aodiv@divisor+5)^0,c
 13351  003296  0E00               	movlw	0
 13352  003298  6E12               	movwf	(___aodiv@divisor+6)^0,c
 13353  00329A  0E00               	movlw	0
 13354  00329C  6E13               	movwf	(___aodiv@divisor+7)^0,c
 13355  00329E  EC1F  F021         	call	___aodiv	;wreg free
 13356  0032A2  C004  F039         	movff	?___aodiv,dtoa@n
 13357  0032A6  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
 13358  0032AA  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
 13359  0032AE  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
 13360  0032B2  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
 13361  0032B6  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
 13362  0032BA  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
 13363  0032BE  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
 13364  0032C2                     l8081:
 13365                           
 13366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13367  0032C2  BE42               	btfsc	(dtoa@i+1)^0,7,c
 13368  0032C4  EF6C  F019         	goto	u10311
 13369  0032C8  5042               	movf	(dtoa@i+1)^0,w,c
 13370  0032CA  E108               	bnz	u10310
 13371  0032CC  0441               	decf	dtoa@i^0,w,c
 13372  0032CE  A0D8               	btfss	status,0,c
 13373  0032D0  EF6C  F019         	goto	u10311
 13374  0032D4  EF6E  F019         	goto	u10310
 13375  0032D8                     u10311:
 13376  0032D8  EF9F  F019         	goto	l8091
 13377  0032DC                     u10310:
 13378  0032DC  5039               	movf	dtoa@n^0,w,c
 13379  0032DE  103A               	iorwf	(dtoa@n+1)^0,w,c
 13380  0032E0  103B               	iorwf	(dtoa@n+2)^0,w,c
 13381  0032E2  103C               	iorwf	(dtoa@n+3)^0,w,c
 13382  0032E4  103D               	iorwf	(dtoa@n+4)^0,w,c
 13383  0032E6  103E               	iorwf	(dtoa@n+5)^0,w,c
 13384  0032E8  103F               	iorwf	(dtoa@n+6)^0,w,c
 13385  0032EA  1040               	iorwf	(dtoa@n+7)^0,w,c
 13386  0032EC  A4D8               	btfss	status,2,c
 13387  0032EE  EF7B  F019         	goto	u10321
 13388  0032F2  EF7D  F019         	goto	u10320
 13389  0032F6                     u10321:
 13390  0032F6  EFE5  F018         	goto	l8071
 13391  0032FA                     u10320:
 13392  0032FA  BE34               	btfsc	(dtoa@p+1)^0,7,c
 13393  0032FC  EF8A  F019         	goto	u10330
 13394  003300  5034               	movf	(dtoa@p+1)^0,w,c
 13395  003302  E106               	bnz	u10331
 13396  003304  0433               	decf	dtoa@p^0,w,c
 13397  003306  B0D8               	btfsc	status,0,c
 13398  003308  EF88  F019         	goto	u10331
 13399  00330C  EF8A  F019         	goto	u10330
 13400  003310                     u10331:
 13401  003310  EFE5  F018         	goto	l8071
 13402  003314                     u10330:
 13403  003314  BE36               	btfsc	(dtoa@w+1)^0,7,c
 13404  003316  EF95  F019         	goto	u10341
 13405  00331A  5036               	movf	(dtoa@w+1)^0,w,c
 13406  00331C  E108               	bnz	u10340
 13407  00331E  0435               	decf	dtoa@w^0,w,c
 13408  003320  A0D8               	btfss	status,0,c
 13409  003322  EF95  F019         	goto	u10341
 13410  003326  EF97  F019         	goto	u10340
 13411  00332A                     u10341:
 13412  00332A  EF9F  F019         	goto	l8091
 13413  00332E                     u10340:
 13414  00332E  0100               	movlb	0	; () banked
 13415  003330  B3F6               	btfsc	_flags& (0+255),1,b
 13416  003332  EF9D  F019         	goto	u10351
 13417  003336  EF9F  F019         	goto	u10350
 13418  00333A                     u10351:
 13419  00333A  EFE5  F018         	goto	l8071
 13420  00333E                     u10350:
 13421  00333E                     l8091:
 13422                           
 13423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13424  00333E  5037               	movf	dtoa@s^0,w,c
 13425  003340  1038               	iorwf	(dtoa@s+1)^0,w,c
 13426  003342  A4D8               	btfss	status,2,c
 13427  003344  EFA6  F019         	goto	u10361
 13428  003348  EFA8  F019         	goto	u10360
 13429  00334C                     u10361:
 13430  00334C  EFB0  F019         	goto	l8095
 13431  003350                     u10360:
 13432  003350  0100               	movlb	0	; () banked
 13433  003352  A5F6               	btfss	_flags& (0+255),2,b
 13434  003354  EFAE  F019         	goto	u10371
 13435  003358  EFB0  F019         	goto	u10370
 13436  00335C                     u10371:
 13437  00335C  EFCE  F019         	goto	l8105
 13438  003360                     u10370:
 13439  003360                     l8095:
 13440                           
 13441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13442  003360  0641               	decf	dtoa@i^0,f,c
 13443  003362  A0D8               	btfss	status,0,c
 13444  003364  0642               	decf	(dtoa@i+1)^0,f,c
 13445  003366                     
 13446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13447  003366  5037               	movf	dtoa@s^0,w,c
 13448  003368  1038               	iorwf	(dtoa@s+1)^0,w,c
 13449  00336A  A4D8               	btfss	status,2,c
 13450  00336C  EFBA  F019         	goto	u10381
 13451  003370  EFBC  F019         	goto	u10380
 13452  003374                     u10381:
 13453  003374  EFC2  F019         	goto	l8101
 13454  003378                     u10380:
 13455  003378  0E00               	movlw	0
 13456  00337A  6E32               	movwf	(_dtoa$1303+1)^0,c
 13457  00337C  0E2B               	movlw	43
 13458  00337E  6E31               	movwf	_dtoa$1303^0,c
 13459  003380  EFC6  F019         	goto	l8103
 13460  003384                     l8101:
 13461  003384  0E00               	movlw	0
 13462  003386  6E32               	movwf	(_dtoa$1303+1)^0,c
 13463  003388  0E2D               	movlw	45
 13464  00338A  6E31               	movwf	_dtoa$1303^0,c
 13465  00338C                     l8103:
 13466  00338C  0E64               	movlw	low _dbuf
 13467  00338E  2441               	addwf	dtoa@i^0,w,c
 13468  003390  6ED9               	movwf	fsr2l,c
 13469  003392  0E01               	movlw	high _dbuf
 13470  003394  2042               	addwfc	(dtoa@i+1)^0,w,c
 13471  003396  6EDA               	movwf	fsr2h,c
 13472  003398  C031  FFDF         	movff	_dtoa$1303,indf2
 13473  00339C                     l8105:
 13474                           
 13475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13476  00339C  C01F  F014         	movff	dtoa@fp,pad@fp
 13477  0033A0  C020  F015         	movff	dtoa@fp+1,pad@fp+1
 13478  0033A4  0E64               	movlw	low _dbuf
 13479  0033A6  2441               	addwf	dtoa@i^0,w,c
 13480  0033A8  6E16               	movwf	pad@buf^0,c
 13481  0033AA  0E01               	movlw	high _dbuf
 13482  0033AC  2042               	addwfc	(dtoa@i+1)^0,w,c
 13483  0033AE  6E17               	movwf	(pad@buf+1)^0,c
 13484  0033B0  C035  F018         	movff	dtoa@w,pad@p
 13485  0033B4  C036  F019         	movff	dtoa@w+1,pad@p+1
 13486  0033B8  EC92  F028         	call	_pad	;wreg free
 13487  0033BC  C014  F01F         	movff	?_pad,?_dtoa
 13488  0033C0  C015  F020         	movff	?_pad+1,?_dtoa+1
 13489  0033C4  0012               	return		;funcret
 13490  0033C6                     __end_of_dtoa:
 13491                           	opt callstack 0
 13492                           
 13493 ;; *************** function _abs *****************
 13494 ;; Defined at:
 13495 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13496 ;; Parameters:    Size  Location     Type
 13497 ;;  a               2   21[COMRAM] int 
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;		None
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  2   21[COMRAM] int 
 13502 ;; Registers used:
 13503 ;;		wreg, status,2, status,0
 13504 ;; Tracked objects:
 13505 ;;		On entry : 0/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13513 ;;Total ram usage:        4 bytes
 13514 ;; Hardware stack levels used:    1
 13515 ;; Hardware stack levels required when called:    4
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		_dtoa
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text32
 13524  0059BA                     __ptext32:
 13525                           	opt callstack 0
 13526  0059BA                     _abs:
 13527                           	opt callstack 21
 13528  0059BA  BE17               	btfsc	(abs@a+1)^0,7,c
 13529  0059BC  EFEA  F02C         	goto	u9010
 13530  0059C0  5017               	movf	(abs@a+1)^0,w,c
 13531  0059C2  E106               	bnz	u9011
 13532  0059C4  0416               	decf	abs@a^0,w,c
 13533  0059C6  B0D8               	btfsc	status,0,c
 13534  0059C8  EFE8  F02C         	goto	u9011
 13535  0059CC  EFEA  F02C         	goto	u9010
 13536  0059D0                     u9011:
 13537  0059D0  EFF8  F02C         	goto	l1484
 13538  0059D4                     u9010:
 13539  0059D4  C016  F018         	movff	abs@a,??_abs
 13540  0059D8  C017  F019         	movff	abs@a+1,??_abs+1
 13541  0059DC  1E18               	comf	??_abs^0,f,c
 13542  0059DE  1E19               	comf	(??_abs+1)^0,f,c
 13543  0059E0  4A18               	infsnz	??_abs^0,f,c
 13544  0059E2  2A19               	incf	(??_abs+1)^0,f,c
 13545  0059E4  C018  F016         	movff	??_abs,?_abs
 13546  0059E8  C019  F017         	movff	??_abs+1,?_abs+1
 13547  0059EC  EFFC  F02C         	goto	l1487
 13548  0059F0                     l1484:
 13549  0059F0  C016  F016         	movff	abs@a,?_abs
 13550  0059F4  C017  F017         	movff	abs@a+1,?_abs+1
 13551  0059F8                     l1487:
 13552  0059F8  0012               	return		;funcret
 13553  0059FA                     __end_of_abs:
 13554                           	opt callstack 0
 13555                           
 13556 ;; *************** function ___aomod *****************
 13557 ;; Defined at:
 13558 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13559 ;; Parameters:    Size  Location     Type
 13560 ;;  dividend        8    3[COMRAM] long long 
 13561 ;;  divisor         8   11[COMRAM] long long 
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;  sign            1   20[COMRAM] unsigned char 
 13564 ;;  counter         1   19[COMRAM] unsigned char 
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  8    3[COMRAM] long long 
 13567 ;; Registers used:
 13568 ;;		wreg, status,2, status,0
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13574 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13577 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13578 ;;Total ram usage:       18 bytes
 13579 ;; Hardware stack levels used:    1
 13580 ;; Hardware stack levels required when called:    4
 13581 ;; This function calls:
 13582 ;;		Nothing
 13583 ;; This function is called by:
 13584 ;;		_dtoa
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           	psect	text33
 13589  0046C6                     __ptext33:
 13590                           	opt callstack 0
 13591  0046C6                     ___aomod:
 13592                           	opt callstack 21
 13593  0046C6  0E00               	movlw	0
 13594  0046C8  6E15               	movwf	___aomod@sign^0,c
 13595  0046CA  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
 13596  0046CC  EF6C  F023         	goto	u9380
 13597  0046D0  EF6A  F023         	goto	u9381
 13598  0046D4                     u9381:
 13599  0046D4  EF7E  F023         	goto	l7511
 13600  0046D8                     u9380:
 13601  0046D8  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 13602  0046DA  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 13603  0046DC  1E09               	comf	(___aomod@dividend+5)^0,f,c
 13604  0046DE  1E08               	comf	(___aomod@dividend+4)^0,f,c
 13605  0046E0  1E07               	comf	(___aomod@dividend+3)^0,f,c
 13606  0046E2  1E06               	comf	(___aomod@dividend+2)^0,f,c
 13607  0046E4  1E05               	comf	(___aomod@dividend+1)^0,f,c
 13608  0046E6  6C04               	negf	___aomod@dividend^0,c
 13609  0046E8  0E00               	movlw	0
 13610  0046EA  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 13611  0046EC  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 13612  0046EE  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 13613  0046F0  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 13614  0046F2  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 13615  0046F4  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 13616  0046F6  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 13617  0046F8  0E01               	movlw	1
 13618  0046FA  6E15               	movwf	___aomod@sign^0,c
 13619  0046FC                     l7511:
 13620  0046FC  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
 13621  0046FE  EF85  F023         	goto	u9390
 13622  004702  EF83  F023         	goto	u9391
 13623  004706                     u9391:
 13624  004706  EF95  F023         	goto	l7515
 13625  00470A                     u9390:
 13626  00470A  1E13               	comf	(___aomod@divisor+7)^0,f,c
 13627  00470C  1E12               	comf	(___aomod@divisor+6)^0,f,c
 13628  00470E  1E11               	comf	(___aomod@divisor+5)^0,f,c
 13629  004710  1E10               	comf	(___aomod@divisor+4)^0,f,c
 13630  004712  1E0F               	comf	(___aomod@divisor+3)^0,f,c
 13631  004714  1E0E               	comf	(___aomod@divisor+2)^0,f,c
 13632  004716  1E0D               	comf	(___aomod@divisor+1)^0,f,c
 13633  004718  6C0C               	negf	___aomod@divisor^0,c
 13634  00471A  0E00               	movlw	0
 13635  00471C  220D               	addwfc	(___aomod@divisor+1)^0,f,c
 13636  00471E  220E               	addwfc	(___aomod@divisor+2)^0,f,c
 13637  004720  220F               	addwfc	(___aomod@divisor+3)^0,f,c
 13638  004722  2210               	addwfc	(___aomod@divisor+4)^0,f,c
 13639  004724  2211               	addwfc	(___aomod@divisor+5)^0,f,c
 13640  004726  2212               	addwfc	(___aomod@divisor+6)^0,f,c
 13641  004728  2213               	addwfc	(___aomod@divisor+7)^0,f,c
 13642  00472A                     l7515:
 13643  00472A  500C               	movf	___aomod@divisor^0,w,c
 13644  00472C  100D               	iorwf	(___aomod@divisor+1)^0,w,c
 13645  00472E  100E               	iorwf	(___aomod@divisor+2)^0,w,c
 13646  004730  100F               	iorwf	(___aomod@divisor+3)^0,w,c
 13647  004732  1010               	iorwf	(___aomod@divisor+4)^0,w,c
 13648  004734  1011               	iorwf	(___aomod@divisor+5)^0,w,c
 13649  004736  1012               	iorwf	(___aomod@divisor+6)^0,w,c
 13650  004738  1013               	iorwf	(___aomod@divisor+7)^0,w,c
 13651  00473A  B4D8               	btfsc	status,2,c
 13652  00473C  EFA2  F023         	goto	u9401
 13653  004740  EFA4  F023         	goto	u9400
 13654  004744                     u9401:
 13655  004744  EFEC  F023         	goto	l7531
 13656  004748                     u9400:
 13657  004748  0E01               	movlw	1
 13658  00474A  6E14               	movwf	___aomod@counter^0,c
 13659  00474C  EFB2  F023         	goto	l7521
 13660  004750                     l7519:
 13661  004750  90D8               	bcf	status,0,c
 13662  004752  360C               	rlcf	___aomod@divisor^0,f,c
 13663  004754  360D               	rlcf	(___aomod@divisor+1)^0,f,c
 13664  004756  360E               	rlcf	(___aomod@divisor+2)^0,f,c
 13665  004758  360F               	rlcf	(___aomod@divisor+3)^0,f,c
 13666  00475A  3610               	rlcf	(___aomod@divisor+4)^0,f,c
 13667  00475C  3611               	rlcf	(___aomod@divisor+5)^0,f,c
 13668  00475E  3612               	rlcf	(___aomod@divisor+6)^0,f,c
 13669  004760  3613               	rlcf	(___aomod@divisor+7)^0,f,c
 13670  004762  2A14               	incf	___aomod@counter^0,f,c
 13671  004764                     l7521:
 13672  004764  AE13               	btfss	(___aomod@divisor+7)^0,7,c
 13673  004766  EFB7  F023         	goto	u9411
 13674  00476A  EFB9  F023         	goto	u9410
 13675  00476E                     u9411:
 13676  00476E  EFA8  F023         	goto	l7519
 13677  004772                     u9410:
 13678  004772                     l7523:
 13679  004772  500C               	movf	___aomod@divisor^0,w,c
 13680  004774  5C04               	subwf	___aomod@dividend^0,w,c
 13681  004776  500D               	movf	(___aomod@divisor+1)^0,w,c
 13682  004778  5805               	subwfb	(___aomod@dividend+1)^0,w,c
 13683  00477A  500E               	movf	(___aomod@divisor+2)^0,w,c
 13684  00477C  5806               	subwfb	(___aomod@dividend+2)^0,w,c
 13685  00477E  500F               	movf	(___aomod@divisor+3)^0,w,c
 13686  004780  5807               	subwfb	(___aomod@dividend+3)^0,w,c
 13687  004782  5010               	movf	(___aomod@divisor+4)^0,w,c
 13688  004784  5808               	subwfb	(___aomod@dividend+4)^0,w,c
 13689  004786  5011               	movf	(___aomod@divisor+5)^0,w,c
 13690  004788  5809               	subwfb	(___aomod@dividend+5)^0,w,c
 13691  00478A  5012               	movf	(___aomod@divisor+6)^0,w,c
 13692  00478C  580A               	subwfb	(___aomod@dividend+6)^0,w,c
 13693  00478E  5013               	movf	(___aomod@divisor+7)^0,w,c
 13694  004790  580B               	subwfb	(___aomod@dividend+7)^0,w,c
 13695  004792  A0D8               	btfss	status,0,c
 13696  004794  EFCE  F023         	goto	u9421
 13697  004798  EFD0  F023         	goto	u9420
 13698  00479C                     u9421:
 13699  00479C  EFE0  F023         	goto	l7527
 13700  0047A0                     u9420:
 13701  0047A0  500C               	movf	___aomod@divisor^0,w,c
 13702  0047A2  5E04               	subwf	___aomod@dividend^0,f,c
 13703  0047A4  500D               	movf	(___aomod@divisor+1)^0,w,c
 13704  0047A6  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
 13705  0047A8  500E               	movf	(___aomod@divisor+2)^0,w,c
 13706  0047AA  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
 13707  0047AC  500F               	movf	(___aomod@divisor+3)^0,w,c
 13708  0047AE  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
 13709  0047B0  5010               	movf	(___aomod@divisor+4)^0,w,c
 13710  0047B2  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
 13711  0047B4  5011               	movf	(___aomod@divisor+5)^0,w,c
 13712  0047B6  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
 13713  0047B8  5012               	movf	(___aomod@divisor+6)^0,w,c
 13714  0047BA  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
 13715  0047BC  5013               	movf	(___aomod@divisor+7)^0,w,c
 13716  0047BE  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
 13717  0047C0                     l7527:
 13718  0047C0  90D8               	bcf	status,0,c
 13719  0047C2  3213               	rrcf	(___aomod@divisor+7)^0,f,c
 13720  0047C4  3212               	rrcf	(___aomod@divisor+6)^0,f,c
 13721  0047C6  3211               	rrcf	(___aomod@divisor+5)^0,f,c
 13722  0047C8  3210               	rrcf	(___aomod@divisor+4)^0,f,c
 13723  0047CA  320F               	rrcf	(___aomod@divisor+3)^0,f,c
 13724  0047CC  320E               	rrcf	(___aomod@divisor+2)^0,f,c
 13725  0047CE  320D               	rrcf	(___aomod@divisor+1)^0,f,c
 13726  0047D0  320C               	rrcf	___aomod@divisor^0,f,c
 13727  0047D2  2E14               	decfsz	___aomod@counter^0,f,c
 13728  0047D4  EFB9  F023         	goto	l7523
 13729  0047D8                     l7531:
 13730  0047D8  5015               	movf	___aomod@sign^0,w,c
 13731  0047DA  B4D8               	btfsc	status,2,c
 13732  0047DC  EFF2  F023         	goto	u9431
 13733  0047E0  EFF4  F023         	goto	u9430
 13734  0047E4                     u9431:
 13735  0047E4  EF04  F024         	goto	l7535
 13736  0047E8                     u9430:
 13737  0047E8  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 13738  0047EA  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 13739  0047EC  1E09               	comf	(___aomod@dividend+5)^0,f,c
 13740  0047EE  1E08               	comf	(___aomod@dividend+4)^0,f,c
 13741  0047F0  1E07               	comf	(___aomod@dividend+3)^0,f,c
 13742  0047F2  1E06               	comf	(___aomod@dividend+2)^0,f,c
 13743  0047F4  1E05               	comf	(___aomod@dividend+1)^0,f,c
 13744  0047F6  6C04               	negf	___aomod@dividend^0,c
 13745  0047F8  0E00               	movlw	0
 13746  0047FA  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 13747  0047FC  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 13748  0047FE  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 13749  004800  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 13750  004802  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 13751  004804  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 13752  004806  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 13753  004808                     l7535:
 13754  004808  C004  F004         	movff	___aomod@dividend,?___aomod
 13755  00480C  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
 13756  004810  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
 13757  004814  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
 13758  004818  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
 13759  00481C  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
 13760  004820  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
 13761  004824  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
 13762  004828  0012               	return		;funcret
 13763  00482A                     __end_of___aomod:
 13764                           	opt callstack 0
 13765                           
 13766 ;; *************** function ___aodiv *****************
 13767 ;; Defined at:
 13768 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13769 ;; Parameters:    Size  Location     Type
 13770 ;;  dividend        8    3[COMRAM] long long 
 13771 ;;  divisor         8   11[COMRAM] long long 
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;  quotient        8   21[COMRAM] long long 
 13774 ;;  sign            1   20[COMRAM] unsigned char 
 13775 ;;  counter         1   19[COMRAM] unsigned char 
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  8    3[COMRAM] long long 
 13778 ;; Registers used:
 13779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13785 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13786 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13788 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13789 ;;Total ram usage:       26 bytes
 13790 ;; Hardware stack levels used:    1
 13791 ;; Hardware stack levels required when called:    4
 13792 ;; This function calls:
 13793 ;;		Nothing
 13794 ;; This function is called by:
 13795 ;;		_dtoa
 13796 ;; This function uses a non-reentrant model
 13797 ;;
 13798                           
 13799                           	psect	text34
 13800  00423E                     __ptext34:
 13801                           	opt callstack 0
 13802  00423E                     ___aodiv:
 13803                           	opt callstack 21
 13804  00423E  0E00               	movlw	0
 13805  004240  6E15               	movwf	___aodiv@sign^0,c
 13806  004242  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
 13807  004244  EF28  F021         	goto	u9310
 13808  004248  EF26  F021         	goto	u9311
 13809  00424C                     u9311:
 13810  00424C  EF3A  F021         	goto	l7467
 13811  004250                     u9310:
 13812  004250  1E13               	comf	(___aodiv@divisor+7)^0,f,c
 13813  004252  1E12               	comf	(___aodiv@divisor+6)^0,f,c
 13814  004254  1E11               	comf	(___aodiv@divisor+5)^0,f,c
 13815  004256  1E10               	comf	(___aodiv@divisor+4)^0,f,c
 13816  004258  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
 13817  00425A  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
 13818  00425C  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
 13819  00425E  6C0C               	negf	___aodiv@divisor^0,c
 13820  004260  0E00               	movlw	0
 13821  004262  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
 13822  004264  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
 13823  004266  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
 13824  004268  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
 13825  00426A  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
 13826  00426C  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
 13827  00426E  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
 13828  004270  0E01               	movlw	1
 13829  004272  6E15               	movwf	___aodiv@sign^0,c
 13830  004274                     l7467:
 13831  004274  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
 13832  004276  EF41  F021         	goto	u9320
 13833  00427A  EF3F  F021         	goto	u9321
 13834  00427E                     u9321:
 13835  00427E  EF53  F021         	goto	l7473
 13836  004282                     u9320:
 13837  004282  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
 13838  004284  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
 13839  004286  1E09               	comf	(___aodiv@dividend+5)^0,f,c
 13840  004288  1E08               	comf	(___aodiv@dividend+4)^0,f,c
 13841  00428A  1E07               	comf	(___aodiv@dividend+3)^0,f,c
 13842  00428C  1E06               	comf	(___aodiv@dividend+2)^0,f,c
 13843  00428E  1E05               	comf	(___aodiv@dividend+1)^0,f,c
 13844  004290  6C04               	negf	___aodiv@dividend^0,c
 13845  004292  0E00               	movlw	0
 13846  004294  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
 13847  004296  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
 13848  004298  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
 13849  00429A  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
 13850  00429C  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
 13851  00429E  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
 13852  0042A0  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
 13853  0042A2  0E01               	movlw	1
 13854  0042A4  1A15               	xorwf	___aodiv@sign^0,f,c
 13855  0042A6                     l7473:
 13856  0042A6  EE20  F016         	lfsr	2,___aodiv@quotient
 13857  0042AA  0E07               	movlw	7
 13858  0042AC                     u9331:
 13859  0042AC  6ADE               	clrf	postinc2,c
 13860  0042AE  06E8               	decf	wreg,f,c
 13861  0042B0  E2FD               	bc	u9331
 13862  0042B2  500C               	movf	___aodiv@divisor^0,w,c
 13863  0042B4  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
 13864  0042B6  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
 13865  0042B8  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
 13866  0042BA  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
 13867  0042BC  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
 13868  0042BE  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
 13869  0042C0  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
 13870  0042C2  B4D8               	btfsc	status,2,c
 13871  0042C4  EF66  F021         	goto	u9341
 13872  0042C8  EF68  F021         	goto	u9340
 13873  0042CC                     u9341:
 13874  0042CC  EFBA  F021         	goto	l7495
 13875  0042D0                     u9340:
 13876  0042D0  0E01               	movlw	1
 13877  0042D2  6E14               	movwf	___aodiv@counter^0,c
 13878  0042D4  EF76  F021         	goto	l7481
 13879  0042D8                     l7479:
 13880  0042D8  90D8               	bcf	status,0,c
 13881  0042DA  360C               	rlcf	___aodiv@divisor^0,f,c
 13882  0042DC  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
 13883  0042DE  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
 13884  0042E0  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
 13885  0042E2  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
 13886  0042E4  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
 13887  0042E6  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
 13888  0042E8  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
 13889  0042EA  2A14               	incf	___aodiv@counter^0,f,c
 13890  0042EC                     l7481:
 13891  0042EC  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
 13892  0042EE  EF7B  F021         	goto	u9351
 13893  0042F2  EF7D  F021         	goto	u9350
 13894  0042F6                     u9351:
 13895  0042F6  EF6C  F021         	goto	l7479
 13896  0042FA                     u9350:
 13897  0042FA                     l7483:
 13898  0042FA  90D8               	bcf	status,0,c
 13899  0042FC  3616               	rlcf	___aodiv@quotient^0,f,c
 13900  0042FE  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
 13901  004300  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
 13902  004302  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
 13903  004304  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
 13904  004306  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
 13905  004308  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
 13906  00430A  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
 13907  00430C  500C               	movf	___aodiv@divisor^0,w,c
 13908  00430E  5C04               	subwf	___aodiv@dividend^0,w,c
 13909  004310  500D               	movf	(___aodiv@divisor+1)^0,w,c
 13910  004312  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
 13911  004314  500E               	movf	(___aodiv@divisor+2)^0,w,c
 13912  004316  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
 13913  004318  500F               	movf	(___aodiv@divisor+3)^0,w,c
 13914  00431A  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
 13915  00431C  5010               	movf	(___aodiv@divisor+4)^0,w,c
 13916  00431E  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
 13917  004320  5011               	movf	(___aodiv@divisor+5)^0,w,c
 13918  004322  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
 13919  004324  5012               	movf	(___aodiv@divisor+6)^0,w,c
 13920  004326  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
 13921  004328  5013               	movf	(___aodiv@divisor+7)^0,w,c
 13922  00432A  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
 13923  00432C  A0D8               	btfss	status,0,c
 13924  00432E  EF9B  F021         	goto	u9361
 13925  004332  EF9D  F021         	goto	u9360
 13926  004336                     u9361:
 13927  004336  EFAE  F021         	goto	l7491
 13928  00433A                     u9360:
 13929  00433A  500C               	movf	___aodiv@divisor^0,w,c
 13930  00433C  5E04               	subwf	___aodiv@dividend^0,f,c
 13931  00433E  500D               	movf	(___aodiv@divisor+1)^0,w,c
 13932  004340  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
 13933  004342  500E               	movf	(___aodiv@divisor+2)^0,w,c
 13934  004344  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
 13935  004346  500F               	movf	(___aodiv@divisor+3)^0,w,c
 13936  004348  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
 13937  00434A  5010               	movf	(___aodiv@divisor+4)^0,w,c
 13938  00434C  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
 13939  00434E  5011               	movf	(___aodiv@divisor+5)^0,w,c
 13940  004350  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
 13941  004352  5012               	movf	(___aodiv@divisor+6)^0,w,c
 13942  004354  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
 13943  004356  5013               	movf	(___aodiv@divisor+7)^0,w,c
 13944  004358  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
 13945  00435A  8016               	bsf	___aodiv@quotient^0,0,c
 13946  00435C                     l7491:
 13947  00435C  90D8               	bcf	status,0,c
 13948  00435E  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
 13949  004360  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
 13950  004362  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
 13951  004364  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
 13952  004366  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
 13953  004368  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
 13954  00436A  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
 13955  00436C  320C               	rrcf	___aodiv@divisor^0,f,c
 13956  00436E  2E14               	decfsz	___aodiv@counter^0,f,c
 13957  004370  EF7D  F021         	goto	l7483
 13958  004374                     l7495:
 13959  004374  5015               	movf	___aodiv@sign^0,w,c
 13960  004376  B4D8               	btfsc	status,2,c
 13961  004378  EFC0  F021         	goto	u9371
 13962  00437C  EFC2  F021         	goto	u9370
 13963  004380                     u9371:
 13964  004380  EFD2  F021         	goto	l7499
 13965  004384                     u9370:
 13966  004384  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
 13967  004386  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
 13968  004388  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
 13969  00438A  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
 13970  00438C  1E19               	comf	(___aodiv@quotient+3)^0,f,c
 13971  00438E  1E18               	comf	(___aodiv@quotient+2)^0,f,c
 13972  004390  1E17               	comf	(___aodiv@quotient+1)^0,f,c
 13973  004392  6C16               	negf	___aodiv@quotient^0,c
 13974  004394  0E00               	movlw	0
 13975  004396  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
 13976  004398  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
 13977  00439A  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
 13978  00439C  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
 13979  00439E  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
 13980  0043A0  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
 13981  0043A2  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
 13982  0043A4                     l7499:
 13983  0043A4  C016  F004         	movff	___aodiv@quotient,?___aodiv
 13984  0043A8  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
 13985  0043AC  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
 13986  0043B0  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
 13987  0043B4  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
 13988  0043B8  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
 13989  0043BC  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
 13990  0043C0  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
 13991  0043C4  0012               	return		;funcret
 13992  0043C6                     __end_of___aodiv:
 13993                           	opt callstack 0
 13994                           
 13995 ;; *************** function _ctoa *****************
 13996 ;; Defined at:
 13997 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13998 ;; Parameters:    Size  Location     Type
 13999 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 14000 ;;		 -> vsnprintf@f(6), 
 14001 ;;  c               1   32[COMRAM] unsigned char 
 14002 ;; Auto vars:     Size  Location     Type
 14003 ;;  w               2   33[COMRAM] int 
 14004 ;;  l               2    0        int 
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  2   30[COMRAM] int 
 14007 ;; Registers used:
 14008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14014 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14018 ;;Total ram usage:        5 bytes
 14019 ;; Hardware stack levels used:    1
 14020 ;; Hardware stack levels required when called:    8
 14021 ;; This function calls:
 14022 ;;		_pad
 14023 ;; This function is called by:
 14024 ;;		_vfpfcnvrt
 14025 ;; This function uses a non-reentrant model
 14026 ;;
 14027                           
 14028                           	psect	text35
 14029  005718                     __ptext35:
 14030                           	opt callstack 0
 14031  005718                     _ctoa:
 14032                           	opt callstack 18
 14033  005718                     
 14034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14035  005718  0100               	movlb	0	; () banked
 14036  00571A  51F4               	movf	_width& (0+255),w,b
 14037  00571C  11F5               	iorwf	(_width+1)& (0+255),w,b
 14038  00571E  A4D8               	btfss	status,2,c
 14039  005720  EF94  F02B         	goto	u10231
 14040  005724  EF96  F02B         	goto	u10230
 14041  005728                     u10231:
 14042  005728  EF9C  F02B         	goto	l8037
 14043  00572C                     u10230:
 14044  00572C                     
 14045                           ; BSR set to: 0
 14046  00572C  C0F4  F022         	movff	_width,ctoa@w
 14047  005730  C0F5  F023         	movff	_width+1,ctoa@w+1
 14048  005734  EFA2  F02B         	goto	l8039
 14049  005738                     l8037:
 14050                           
 14051                           ; BSR set to: 0
 14052  005738  0EFF               	movlw	255
 14053  00573A  25F4               	addwf	_width& (0+255),w,b
 14054  00573C  6E22               	movwf	ctoa@w^0,c
 14055  00573E  0EFF               	movlw	255
 14056  005740  21F5               	addwfc	(_width+1)& (0+255),w,b
 14057  005742  6E23               	movwf	(ctoa@w+1)^0,c
 14058  005744                     l8039:
 14059                           
 14060                           ; BSR set to: 0
 14061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14062  005744  C021  F164         	movff	ctoa@c,_dbuf
 14063  005748                     
 14064                           ; BSR set to: 0
 14065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14066  005748  0E00               	movlw	0
 14067  00574A  0101               	movlb	1	; () banked
 14068  00574C  6F65               	movwf	(_dbuf+1)& (0+255),b
 14069  00574E                     
 14070                           ; BSR set to: 1
 14071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14072  00574E  C01F  F014         	movff	ctoa@fp,pad@fp
 14073  005752  C020  F015         	movff	ctoa@fp+1,pad@fp+1
 14074  005756  0E64               	movlw	low _dbuf
 14075  005758  6E16               	movwf	pad@buf^0,c
 14076  00575A  0E01               	movlw	high _dbuf
 14077  00575C  6E17               	movwf	(pad@buf+1)^0,c
 14078  00575E  C022  F018         	movff	ctoa@w,pad@p
 14079  005762  C023  F019         	movff	ctoa@w+1,pad@p+1
 14080  005766  EC92  F028         	call	_pad	;wreg free
 14081  00576A  C014  F01F         	movff	?_pad,?_ctoa
 14082  00576E  C015  F020         	movff	?_pad+1,?_ctoa+1
 14083  005772  0012               	return		;funcret
 14084  005774                     __end_of_ctoa:
 14085                           	opt callstack 0
 14086                           
 14087 ;; *************** function _pad *****************
 14088 ;; Defined at:
 14089 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 14092 ;;		 -> vsnprintf@f(6), 
 14093 ;;  buf             2   21[COMRAM] PTR unsigned char 
 14094 ;;		 -> dbuf(80), 
 14095 ;;  p               2   23[COMRAM] int 
 14096 ;; Auto vars:     Size  Location     Type
 14097 ;;  w               2   28[COMRAM] int 
 14098 ;;  i               2   26[COMRAM] int 
 14099 ;; Return value:  Size  Location     Type
 14100 ;;                  2   19[COMRAM] int 
 14101 ;; Registers used:
 14102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/0
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14108 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14109 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;Total ram usage:       11 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:    7
 14115 ;; This function calls:
 14116 ;;		_fputc
 14117 ;;		_fputs
 14118 ;;		_strlen
 14119 ;; This function is called by:
 14120 ;;		_ctoa
 14121 ;;		_dtoa
 14122 ;;		_efgtoa
 14123 ;;		_otoa
 14124 ;;		_utoa
 14125 ;;		_xtoa
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           	psect	text36
 14130  005124                     __ptext36:
 14131                           	opt callstack 0
 14132  005124                     _pad:
 14133                           	opt callstack 18
 14134  005124                     
 14135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14136  005124  0100               	movlb	0	; () banked
 14137  005126  A1F6               	btfss	_flags& (0+255),0,b
 14138  005128  EF98  F028         	goto	u8971
 14139  00512C  EF9A  F028         	goto	u8970
 14140  005130                     u8971:
 14141  005130  EFA4  F028         	goto	l7349
 14142  005134                     u8970:
 14143  005134                     
 14144                           ; BSR set to: 0
 14145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14146  005134  C016  F00D         	movff	pad@buf,fputs@s
 14147  005138  C017  F00E         	movff	pad@buf+1,fputs@s+1
 14148  00513C  C014  F00F         	movff	pad@fp,fputs@fp
 14149  005140  C015  F010         	movff	pad@fp+1,fputs@fp+1
 14150  005144  EC9A  F02C         	call	_fputs	;wreg free
 14151  005148                     l7349:
 14152                           
 14153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14154  005148  BE19               	btfsc	(pad@p+1)^0,7,c
 14155  00514A  EFA9  F028         	goto	u8981
 14156  00514E  EFAB  F028         	goto	u8980
 14157  005152                     u8981:
 14158  005152  EFB1  F028         	goto	l7353
 14159  005156                     u8980:
 14160  005156  C018  F01D         	movff	pad@p,pad@w
 14161  00515A  C019  F01E         	movff	pad@p+1,pad@w+1
 14162  00515E  EFB5  F028         	goto	l490
 14163  005162                     l7353:
 14164  005162  0E00               	movlw	0
 14165  005164  6E1E               	movwf	(pad@w+1)^0,c
 14166  005166  0E00               	movlw	0
 14167  005168  6E1D               	movwf	pad@w^0,c
 14168  00516A                     l490:
 14169                           
 14170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14171  00516A  0E00               	movlw	0
 14172  00516C  6E1C               	movwf	(pad@i+1)^0,c
 14173  00516E  0E00               	movlw	0
 14174  005170  6E1B               	movwf	pad@i^0,c
 14175                           
 14176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14177  005172  EFC7  F028         	goto	l7359
 14178  005176                     l7355:
 14179                           
 14180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14181  005176  0E00               	movlw	0
 14182  005178  6E05               	movwf	(fputc@c+1)^0,c
 14183  00517A  0E20               	movlw	32
 14184  00517C  6E04               	movwf	fputc@c^0,c
 14185  00517E  C014  F006         	movff	pad@fp,fputc@fp
 14186  005182  C015  F007         	movff	pad@fp+1,fputc@fp+1
 14187  005186  EC2D  F028         	call	_fputc	;wreg free
 14188  00518A                     
 14189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14190  00518A  4A1B               	infsnz	pad@i^0,f,c
 14191  00518C  2A1C               	incf	(pad@i+1)^0,f,c
 14192  00518E                     l7359:
 14193                           
 14194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14195  00518E  501D               	movf	pad@w^0,w,c
 14196  005190  5C1B               	subwf	pad@i^0,w,c
 14197  005192  501C               	movf	(pad@i+1)^0,w,c
 14198  005194  0A80               	xorlw	128
 14199  005196  6E1A               	movwf	??_pad^0,c
 14200  005198  501E               	movf	(pad@w+1)^0,w,c
 14201  00519A  0A80               	xorlw	128
 14202  00519C  581A               	subwfb	??_pad^0,w,c
 14203  00519E  A0D8               	btfss	status,0,c
 14204  0051A0  EFD4  F028         	goto	u8991
 14205  0051A4  EFD6  F028         	goto	u8990
 14206  0051A8                     u8991:
 14207  0051A8  EFBB  F028         	goto	l7355
 14208  0051AC                     u8990:
 14209  0051AC                     
 14210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14211  0051AC  0100               	movlb	0	; () banked
 14212  0051AE  B1F6               	btfsc	_flags& (0+255),0,b
 14213  0051B0  EFDC  F028         	goto	u9001
 14214  0051B4  EFDE  F028         	goto	u9000
 14215  0051B8                     u9001:
 14216  0051B8  EFE8  F028         	goto	l7363
 14217  0051BC                     u9000:
 14218  0051BC                     
 14219                           ; BSR set to: 0
 14220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14221  0051BC  C016  F00D         	movff	pad@buf,fputs@s
 14222  0051C0  C017  F00E         	movff	pad@buf+1,fputs@s+1
 14223  0051C4  C014  F00F         	movff	pad@fp,fputs@fp
 14224  0051C8  C015  F010         	movff	pad@fp+1,fputs@fp+1
 14225  0051CC  EC9A  F02C         	call	_fputs	;wreg free
 14226  0051D0                     l7363:
 14227                           
 14228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14229  0051D0  C016  F004         	movff	pad@buf,strlen@s
 14230  0051D4  C017  F005         	movff	pad@buf+1,strlen@s+1
 14231  0051D8  ECA8  F02D         	call	_strlen	;wreg free
 14232  0051DC  501D               	movf	pad@w^0,w,c
 14233  0051DE  2404               	addwf	?_strlen^0,w,c
 14234  0051E0  6E14               	movwf	?_pad^0,c
 14235  0051E2  501E               	movf	(pad@w+1)^0,w,c
 14236  0051E4  2005               	addwfc	(?_strlen+1)^0,w,c
 14237  0051E6  6E15               	movwf	(?_pad+1)^0,c
 14238  0051E8  0012               	return		;funcret
 14239  0051EA                     __end_of_pad:
 14240                           	opt callstack 0
 14241                           
 14242 ;; *************** function _strlen *****************
 14243 ;; Defined at:
 14244 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;  s               2    3[COMRAM] PTR const unsigned char 
 14247 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14248 ;; Auto vars:     Size  Location     Type
 14249 ;;  a               2    5[COMRAM] PTR const unsigned char 
 14250 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 14251 ;; Return value:  Size  Location     Type
 14252 ;;                  2    3[COMRAM] unsigned int 
 14253 ;; Registers used:
 14254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14255 ;; Tracked objects:
 14256 ;;		On entry : 0/0
 14257 ;;		On exit  : 0/0
 14258 ;;		Unchanged: 0/0
 14259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14264 ;;Total ram usage:        4 bytes
 14265 ;; Hardware stack levels used:    1
 14266 ;; Hardware stack levels required when called:    4
 14267 ;; This function calls:
 14268 ;;		Nothing
 14269 ;; This function is called by:
 14270 ;;		_pad
 14271 ;;		_stoa
 14272 ;; This function uses a non-reentrant model
 14273 ;;
 14274                           
 14275                           	psect	text37
 14276  005B50                     __ptext37:
 14277                           	opt callstack 0
 14278  005B50                     _strlen:
 14279                           	opt callstack 20
 14280  005B50  C004  F006         	movff	strlen@s,strlen@a
 14281  005B54  C005  F007         	movff	strlen@s+1,strlen@a+1
 14282  005B58  EFB0  F02D         	goto	l7129
 14283  005B5C                     l7127:
 14284  005B5C  4A04               	infsnz	strlen@s^0,f,c
 14285  005B5E  2A05               	incf	(strlen@s+1)^0,f,c
 14286  005B60                     l7129:
 14287  005B60  C004  FFD9         	movff	strlen@s,fsr2l
 14288  005B64  C005  FFDA         	movff	strlen@s+1,fsr2h
 14289  005B68  50DF               	movf	indf2,w,c
 14290  005B6A  A4D8               	btfss	status,2,c
 14291  005B6C  EFBA  F02D         	goto	u8531
 14292  005B70  EFBC  F02D         	goto	u8530
 14293  005B74                     u8531:
 14294  005B74  EFAE  F02D         	goto	l7127
 14295  005B78                     u8530:
 14296  005B78  5006               	movf	strlen@a^0,w,c
 14297  005B7A  5C04               	subwf	strlen@s^0,w,c
 14298  005B7C  6E04               	movwf	?_strlen^0,c
 14299  005B7E  5007               	movf	(strlen@a+1)^0,w,c
 14300  005B80  5805               	subwfb	(strlen@s+1)^0,w,c
 14301  005B82  6E05               	movwf	(?_strlen+1)^0,c
 14302  005B84  0012               	return		;funcret
 14303  005B86                     __end_of_strlen:
 14304                           	opt callstack 0
 14305                           
 14306 ;; *************** function _fputs *****************
 14307 ;; Defined at:
 14308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14309 ;; Parameters:    Size  Location     Type
 14310 ;;  s               2   12[COMRAM] PTR const unsigned char 
 14311 ;;		 -> dbuf(80), 
 14312 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 14313 ;;		 -> vsnprintf@f(6), 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;  i               2   17[COMRAM] int 
 14316 ;;  c               1   16[COMRAM] unsigned char 
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  2   12[COMRAM] int 
 14319 ;; Registers used:
 14320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14327 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14329 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14330 ;;Total ram usage:        7 bytes
 14331 ;; Hardware stack levels used:    1
 14332 ;; Hardware stack levels required when called:    6
 14333 ;; This function calls:
 14334 ;;		_fputc
 14335 ;; This function is called by:
 14336 ;;		_pad
 14337 ;; This function uses a non-reentrant model
 14338 ;;
 14339                           
 14340                           	psect	text38
 14341  005934                     __ptext38:
 14342                           	opt callstack 0
 14343  005934                     _fputs:
 14344                           	opt callstack 18
 14345  005934  0E00               	movlw	0
 14346  005936  6E13               	movwf	(fputs@i+1)^0,c
 14347  005938  0E00               	movlw	0
 14348  00593A  6E12               	movwf	fputs@i^0,c
 14349  00593C  EFAB  F02C         	goto	l7123
 14350  005940                     l7119:
 14351  005940  C011  F004         	movff	fputs@c,fputc@c
 14352  005944  6A05               	clrf	(fputc@c+1)^0,c
 14353  005946  C00F  F006         	movff	fputs@fp,fputc@fp
 14354  00594A  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 14355  00594E  EC2D  F028         	call	_fputc	;wreg free
 14356  005952  4A12               	infsnz	fputs@i^0,f,c
 14357  005954  2A13               	incf	(fputs@i+1)^0,f,c
 14358  005956                     l7123:
 14359  005956  5012               	movf	fputs@i^0,w,c
 14360  005958  240D               	addwf	fputs@s^0,w,c
 14361  00595A  6ED9               	movwf	fsr2l,c
 14362  00595C  5013               	movf	(fputs@i+1)^0,w,c
 14363  00595E  200E               	addwfc	(fputs@s+1)^0,w,c
 14364  005960  6EDA               	movwf	fsr2h,c
 14365  005962  50DF               	movf	indf2,w,c
 14366  005964  6E11               	movwf	fputs@c^0,c
 14367  005966  5011               	movf	fputs@c^0,w,c
 14368  005968  A4D8               	btfss	status,2,c
 14369  00596A  EFB9  F02C         	goto	u8521
 14370  00596E  EFBB  F02C         	goto	u8520
 14371  005972                     u8521:
 14372  005972  EFA0  F02C         	goto	l7119
 14373  005976                     u8520:
 14374  005976  0012               	return		;funcret
 14375  005978                     __end_of_fputs:
 14376                           	opt callstack 0
 14377                           
 14378 ;; *************** function _fputc *****************
 14379 ;; Defined at:
 14380 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14381 ;; Parameters:    Size  Location     Type
 14382 ;;  c               2    3[COMRAM] int 
 14383 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 14384 ;;		 -> vsnprintf@f(6), 
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;		None
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  2    3[COMRAM] int 
 14389 ;; Registers used:
 14390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14391 ;; Tracked objects:
 14392 ;;		On entry : 0/0
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14398 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14399 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14400 ;;Total ram usage:        9 bytes
 14401 ;; Hardware stack levels used:    1
 14402 ;; Hardware stack levels required when called:    5
 14403 ;; This function calls:
 14404 ;;		_putch
 14405 ;; This function is called by:
 14406 ;;		_pad
 14407 ;;		_stoa
 14408 ;;		_vfpfcnvrt
 14409 ;;		_fputs
 14410 ;; This function uses a non-reentrant model
 14411 ;;
 14412                           
 14413                           	psect	text39
 14414  00505A                     __ptext39:
 14415                           	opt callstack 0
 14416  00505A                     _fputc:
 14417                           	opt callstack 18
 14418  00505A  5006               	movf	fputc@fp^0,w,c
 14419  00505C  1007               	iorwf	(fputc@fp+1)^0,w,c
 14420  00505E  B4D8               	btfsc	status,2,c
 14421  005060  EF34  F028         	goto	u8481
 14422  005064  EF36  F028         	goto	u8480
 14423  005068                     u8481:
 14424  005068  EF3F  F028         	goto	l7107
 14425  00506C                     u8480:
 14426  00506C  5006               	movf	fputc@fp^0,w,c
 14427  00506E  1007               	iorwf	(fputc@fp+1)^0,w,c
 14428  005070  A4D8               	btfss	status,2,c
 14429  005072  EF3D  F028         	goto	u8491
 14430  005076  EF3F  F028         	goto	u8490
 14431  00507A                     u8491:
 14432  00507A  EF44  F028         	goto	l7109
 14433  00507E                     u8490:
 14434  00507E                     l7107:
 14435  00507E  5004               	movf	fputc@c^0,w,c
 14436  005080  EC98  F02E         	call	_putch
 14437  005084  EF91  F028         	goto	l1569
 14438  005088                     l7109:
 14439  005088  EE20 F004          	lfsr	2,4
 14440  00508C  5006               	movf	fputc@fp^0,w,c
 14441  00508E  26D9               	addwf	fsr2l,f,c
 14442  005090  5007               	movf	(fputc@fp+1)^0,w,c
 14443  005092  22DA               	addwfc	fsr2h,f,c
 14444  005094  50DE               	movf	postinc2,w,c
 14445  005096  10DE               	iorwf	postinc2,w,c
 14446  005098  B4D8               	btfsc	status,2,c
 14447  00509A  EF51  F028         	goto	u8501
 14448  00509E  EF53  F028         	goto	u8500
 14449  0050A2                     u8501:
 14450  0050A2  EF6E  F028         	goto	l7113
 14451  0050A6                     u8500:
 14452  0050A6  EE20 F004          	lfsr	2,4
 14453  0050AA  5006               	movf	fputc@fp^0,w,c
 14454  0050AC  26D9               	addwf	fsr2l,f,c
 14455  0050AE  5007               	movf	(fputc@fp+1)^0,w,c
 14456  0050B0  22DA               	addwfc	fsr2h,f,c
 14457  0050B2  EE10 F002          	lfsr	1,2
 14458  0050B6  5006               	movf	fputc@fp^0,w,c
 14459  0050B8  26E1               	addwf	fsr1l,f,c
 14460  0050BA  5007               	movf	(fputc@fp+1)^0,w,c
 14461  0050BC  22E2               	addwfc	fsr1h,f,c
 14462  0050BE  50DE               	movf	postinc2,w,c
 14463  0050C0  5CE6               	subwf	postinc1,w,c
 14464  0050C2  50E6               	movf	postinc1,w,c
 14465  0050C4  0A80               	xorlw	128
 14466  0050C6  6E0C               	movwf	(??_fputc+4)^0,c
 14467  0050C8  50DE               	movf	postinc2,w,c
 14468  0050CA  0A80               	xorlw	128
 14469  0050CC  580C               	subwfb	(??_fputc+4)^0,w,c
 14470  0050CE  B0D8               	btfsc	status,0,c
 14471  0050D0  EF6C  F028         	goto	u8511
 14472  0050D4  EF6E  F028         	goto	u8510
 14473  0050D8                     u8511:
 14474  0050D8  EF91  F028         	goto	l1569
 14475  0050DC                     u8510:
 14476  0050DC                     l7113:
 14477  0050DC  EE20 F002          	lfsr	2,2
 14478  0050E0  5006               	movf	fputc@fp^0,w,c
 14479  0050E2  26D9               	addwf	fsr2l,f,c
 14480  0050E4  5007               	movf	(fputc@fp+1)^0,w,c
 14481  0050E6  22DA               	addwfc	fsr2h,f,c
 14482  0050E8  CFDE F008          	movff	postinc2,??_fputc
 14483  0050EC  CFDD F009          	movff	postdec2,??_fputc+1
 14484  0050F0  C006  FFD9         	movff	fputc@fp,fsr2l
 14485  0050F4  C007  FFDA         	movff	fputc@fp+1,fsr2h
 14486  0050F8  CFDE F00A          	movff	postinc2,??_fputc+2
 14487  0050FC  CFDD F00B          	movff	postdec2,??_fputc+3
 14488  005100  5008               	movf	??_fputc^0,w,c
 14489  005102  240A               	addwf	(??_fputc+2)^0,w,c
 14490  005104  6ED9               	movwf	fsr2l,c
 14491  005106  5009               	movf	(??_fputc+1)^0,w,c
 14492  005108  200B               	addwfc	(??_fputc+3)^0,w,c
 14493  00510A  6EDA               	movwf	fsr2h,c
 14494  00510C  C004  FFDF         	movff	fputc@c,indf2
 14495  005110  EE20 F002          	lfsr	2,2
 14496  005114  5006               	movf	fputc@fp^0,w,c
 14497  005116  26D9               	addwf	fsr2l,f,c
 14498  005118  5007               	movf	(fputc@fp+1)^0,w,c
 14499  00511A  22DA               	addwfc	fsr2h,f,c
 14500  00511C  2ADE               	incf	postinc2,f,c
 14501  00511E  0E00               	movlw	0
 14502  005120  22DD               	addwfc	postdec2,f,c
 14503  005122                     l1569:
 14504  005122  0012               	return		;funcret
 14505  005124                     __end_of_fputc:
 14506                           	opt callstack 0
 14507                           
 14508 ;; *************** function _putch *****************
 14509 ;; Defined at:
 14510 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;  c               1    wreg     unsigned char 
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;  c               1    0[COMRAM] unsigned char 
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1    wreg      void 
 14517 ;; Registers used:
 14518 ;;		wreg
 14519 ;; Tracked objects:
 14520 ;;		On entry : 0/0
 14521 ;;		On exit  : 0/0
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14528 ;;Total ram usage:        0 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:    4
 14531 ;; This function calls:
 14532 ;;		Nothing
 14533 ;; This function is called by:
 14534 ;;		_fputc
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538                           	psect	text40
 14539  005D30                     __ptext40:
 14540                           	opt callstack 0
 14541  005D30                     _putch:
 14542                           	opt callstack 18
 14543  005D30  0012               	return		;funcret
 14544  005D32                     __end_of_putch:
 14545                           	opt callstack 0
 14546                           
 14547 ;; *************** function _atoi *****************
 14548 ;; Defined at:
 14549 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14550 ;; Parameters:    Size  Location     Type
 14551 ;;  s               2   10[COMRAM] PTR const unsigned char 
 14552 ;;		 -> STR_3(16), STR_2(17), 
 14553 ;; Auto vars:     Size  Location     Type
 14554 ;;  n               2   23[COMRAM] int 
 14555 ;;  neg             2   16[COMRAM] int 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  2   10[COMRAM] int 
 14558 ;; Registers used:
 14559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14568 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14569 ;;Total ram usage:       15 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:    5
 14572 ;; This function calls:
 14573 ;;		___wmul
 14574 ;;		_isdigit
 14575 ;;		_isspace
 14576 ;; This function is called by:
 14577 ;;		_vfpfcnvrt
 14578 ;; This function uses a non-reentrant model
 14579 ;;
 14580                           
 14581                           	psect	text41
 14582  0040A4                     __ptext41:
 14583                           	opt callstack 0
 14584  0040A4                     _atoi:
 14585                           	opt callstack 21
 14586  0040A4  0E00               	movlw	0
 14587  0040A6  6E19               	movwf	(atoi@n+1)^0,c
 14588  0040A8  0E00               	movlw	0
 14589  0040AA  6E18               	movwf	atoi@n^0,c
 14590  0040AC  0E00               	movlw	0
 14591  0040AE  6E12               	movwf	(atoi@neg+1)^0,c
 14592  0040B0  0E00               	movlw	0
 14593  0040B2  6E11               	movwf	atoi@neg^0,c
 14594  0040B4  EF5E  F020         	goto	l8603
 14595  0040B8                     l8601:
 14596  0040B8  4A0B               	infsnz	atoi@s^0,f,c
 14597  0040BA  2A0C               	incf	(atoi@s+1)^0,f,c
 14598  0040BC                     l8603:
 14599  0040BC  0E01               	movlw	1
 14600  0040BE  6E17               	movwf	_atoi$1972^0,c
 14601  0040C0  C00B  FFF6         	movff	atoi@s,tblptrl
 14602  0040C4  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14603  0040C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14604  0040C8  6AF8               	clrf	tblptru,c
 14605  0040CA                     	endif
 14606  0040CA                     	if	0	;tblptru may be non-zero
 14607  0040CA                     	endif
 14608  0040CA  0008               	tblrd		*
 14609  0040CC  50F5               	movf	tablat,w,c
 14610  0040CE  0A20               	xorlw	32
 14611  0040D0  B4D8               	btfsc	status,2,c
 14612  0040D2  EF6D  F020         	goto	u11341
 14613  0040D6  EF6F  F020         	goto	u11340
 14614  0040DA                     u11341:
 14615  0040DA  EF8D  F020         	goto	l8611
 14616  0040DE                     u11340:
 14617  0040DE  0EF7               	movlw	247
 14618  0040E0  6E0D               	movwf	??_atoi^0,c
 14619  0040E2  0EFF               	movlw	255
 14620  0040E4  6E0E               	movwf	(??_atoi+1)^0,c
 14621  0040E6  C00B  FFF6         	movff	atoi@s,tblptrl
 14622  0040EA  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14623  0040EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14624  0040EE  6AF8               	clrf	tblptru,c
 14625  0040F0                     	endif
 14626  0040F0                     	if	0	;tblptru may be non-zero
 14627  0040F0                     	endif
 14628  0040F0  0008               	tblrd		*
 14629  0040F2  50F5               	movf	tablat,w,c
 14630  0040F4  6E0F               	movwf	(??_atoi+2)^0,c
 14631  0040F6  6A10               	clrf	(??_atoi+3)^0,c
 14632  0040F8  500D               	movf	??_atoi^0,w,c
 14633  0040FA  260F               	addwf	(??_atoi+2)^0,f,c
 14634  0040FC  500E               	movf	(??_atoi+1)^0,w,c
 14635  0040FE  2210               	addwfc	(??_atoi+3)^0,f,c
 14636  004100  5010               	movf	(??_atoi+3)^0,w,c
 14637  004102  E109               	bnz	u11350
 14638  004104  0E05               	movlw	5
 14639  004106  5C0F               	subwf	(??_atoi+2)^0,w,c
 14640  004108  A0D8               	btfss	status,0,c
 14641  00410A  EF89  F020         	goto	u11351
 14642  00410E  EF8B  F020         	goto	u11350
 14643  004112                     u11351:
 14644  004112  EF8D  F020         	goto	l8611
 14645  004116                     u11350:
 14646  004116  0E00               	movlw	0
 14647  004118  6E17               	movwf	_atoi$1972^0,c
 14648  00411A                     l8611:
 14649  00411A  C017  F013         	movff	_atoi$1972,_atoi$1971
 14650  00411E  6A14               	clrf	(_atoi$1971+1)^0,c
 14651  004120  5013               	movf	_atoi$1971^0,w,c
 14652  004122  1014               	iorwf	(_atoi$1971+1)^0,w,c
 14653  004124  A4D8               	btfss	status,2,c
 14654  004126  EF97  F020         	goto	u11361
 14655  00412A  EF99  F020         	goto	u11360
 14656  00412E                     u11361:
 14657  00412E  EF5C  F020         	goto	l8601
 14658  004132                     u11360:
 14659  004132  EFA3  F020         	goto	l8621
 14660  004136                     l8617:
 14661  004136  0E00               	movlw	0
 14662  004138  6E12               	movwf	(atoi@neg+1)^0,c
 14663  00413A  0E01               	movlw	1
 14664  00413C  6E11               	movwf	atoi@neg^0,c
 14665  00413E                     l8619:
 14666  00413E  4A0B               	infsnz	atoi@s^0,f,c
 14667  004140  2A0C               	incf	(atoi@s+1)^0,f,c
 14668  004142  EFDA  F020         	goto	l8627
 14669  004146                     l8621:
 14670  004146  C00B  FFF6         	movff	atoi@s,tblptrl
 14671  00414A  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14672  00414E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14673  00414E  6AF8               	clrf	tblptru,c
 14674  004150                     	endif
 14675  004150                     	if	0	;tblptru may be non-zero
 14676  004150                     	endif
 14677  004150  0008               	tblrd		*
 14678  004152  50F5               	movf	tablat,w,c
 14679  004154  6E0D               	movwf	??_atoi^0,c
 14680  004156  6A0E               	clrf	(??_atoi+1)^0,c
 14681                           
 14682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14683                           ; Switch size 1, requested type "simple"
 14684                           ; Number of cases is 1, Range of values is 0 to 0
 14685                           ; switch strategies available:
 14686                           ; Name         Instructions Cycles
 14687                           ; simple_byte            4     3 (average)
 14688                           ;	Chosen strategy is simple_byte
 14689  004158  500E               	movf	(??_atoi+1)^0,w,c
 14690  00415A  0A00               	xorlw	0	; case 0
 14691  00415C  B4D8               	btfsc	status,2,c
 14692  00415E  EFB3  F020         	goto	l9165
 14693  004162  EFDA  F020         	goto	l8627
 14694  004166                     l9165:
 14695                           
 14696                           ; Switch size 1, requested type "simple"
 14697                           ; Number of cases is 2, Range of values is 43 to 45
 14698                           ; switch strategies available:
 14699                           ; Name         Instructions Cycles
 14700                           ; simple_byte            7     4 (average)
 14701                           ;	Chosen strategy is simple_byte
 14702  004166  500D               	movf	??_atoi^0,w,c
 14703  004168  0A2B               	xorlw	43	; case 43
 14704  00416A  B4D8               	btfsc	status,2,c
 14705  00416C  EF9F  F020         	goto	l8619
 14706  004170  0A06               	xorlw	6	; case 45
 14707  004172  B4D8               	btfsc	status,2,c
 14708  004174  EF9B  F020         	goto	l8617
 14709  004178  EFDA  F020         	goto	l8627
 14710  00417C                     l8623:
 14711  00417C  C018  F004         	movff	atoi@n,___wmul@multiplier
 14712  004180  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
 14713  004184  0E00               	movlw	0
 14714  004186  6E07               	movwf	(___wmul@multiplicand+1)^0,c
 14715  004188  0E0A               	movlw	10
 14716  00418A  6E06               	movwf	___wmul@multiplicand^0,c
 14717  00418C  EC20  F02E         	call	___wmul	;wreg free
 14718  004190  C00B  FFF6         	movff	atoi@s,tblptrl
 14719  004194  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14720  004198                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14721  004198  6AF8               	clrf	tblptru,c
 14722  00419A                     	endif
 14723  00419A                     	if	0	;tblptru may be non-zero
 14724  00419A                     	endif
 14725  00419A  0008               	tblrd		*
 14726  00419C  50F5               	movf	tablat,w,c
 14727  00419E  5E04               	subwf	?___wmul^0,f,c
 14728  0041A0  0E00               	movlw	0
 14729  0041A2  5A05               	subwfb	(?___wmul+1)^0,f,c
 14730  0041A4  0E30               	movlw	48
 14731  0041A6  2404               	addwf	?___wmul^0,w,c
 14732  0041A8  6E18               	movwf	atoi@n^0,c
 14733  0041AA  0E00               	movlw	0
 14734  0041AC  2005               	addwfc	(?___wmul+1)^0,w,c
 14735  0041AE  6E19               	movwf	(atoi@n+1)^0,c
 14736  0041B0  EF9F  F020         	goto	l8619
 14737  0041B4                     l8627:
 14738  0041B4  0ED0               	movlw	208
 14739  0041B6  6E0D               	movwf	??_atoi^0,c
 14740  0041B8  0EFF               	movlw	255
 14741  0041BA  6E0E               	movwf	(??_atoi+1)^0,c
 14742  0041BC  C00B  FFF6         	movff	atoi@s,tblptrl
 14743  0041C0  C00C  FFF7         	movff	atoi@s+1,tblptrh
 14744  0041C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14745  0041C4  6AF8               	clrf	tblptru,c
 14746  0041C6                     	endif
 14747  0041C6                     	if	0	;tblptru may be non-zero
 14748  0041C6                     	endif
 14749  0041C6  0008               	tblrd		*
 14750  0041C8  50F5               	movf	tablat,w,c
 14751  0041CA  6E0F               	movwf	(??_atoi+2)^0,c
 14752  0041CC  6A10               	clrf	(??_atoi+3)^0,c
 14753  0041CE  500D               	movf	??_atoi^0,w,c
 14754  0041D0  260F               	addwf	(??_atoi+2)^0,f,c
 14755  0041D2  500E               	movf	(??_atoi+1)^0,w,c
 14756  0041D4  2210               	addwfc	(??_atoi+3)^0,f,c
 14757  0041D6  5010               	movf	(??_atoi+3)^0,w,c
 14758  0041D8  E10A               	bnz	u11370
 14759  0041DA  0E0A               	movlw	10
 14760  0041DC  5C0F               	subwf	(??_atoi+2)^0,w,c
 14761  0041DE  A0D8               	btfss	status,0,c
 14762  0041E0  EFF4  F020         	goto	u11371
 14763  0041E4  EFF7  F020         	goto	u11370
 14764  0041E8                     u11371:
 14765  0041E8  0E01               	movlw	1
 14766  0041EA  EFF8  F020         	goto	u11380
 14767  0041EE                     u11370:
 14768  0041EE  0E00               	movlw	0
 14769  0041F0                     u11380:
 14770  0041F0  6E15               	movwf	_atoi$1973^0,c
 14771  0041F2  6A16               	clrf	(_atoi$1973+1)^0,c
 14772  0041F4  5015               	movf	_atoi$1973^0,w,c
 14773  0041F6  1016               	iorwf	(_atoi$1973+1)^0,w,c
 14774  0041F8  A4D8               	btfss	status,2,c
 14775  0041FA  EF01  F021         	goto	u11391
 14776  0041FE  EF03  F021         	goto	u11390
 14777  004202                     u11391:
 14778  004202  EFBE  F020         	goto	l8623
 14779  004206                     u11390:
 14780  004206  5011               	movf	atoi@neg^0,w,c
 14781  004208  1012               	iorwf	(atoi@neg+1)^0,w,c
 14782  00420A  A4D8               	btfss	status,2,c
 14783  00420C  EF0A  F021         	goto	u11401
 14784  004210  EF0C  F021         	goto	u11400
 14785  004214                     u11401:
 14786  004214  EF1A  F021         	goto	l1515
 14787  004218                     u11400:
 14788  004218  C018  F00D         	movff	atoi@n,??_atoi
 14789  00421C  C019  F00E         	movff	atoi@n+1,??_atoi+1
 14790  004220  1E0D               	comf	??_atoi^0,f,c
 14791  004222  1E0E               	comf	(??_atoi+1)^0,f,c
 14792  004224  4A0D               	infsnz	??_atoi^0,f,c
 14793  004226  2A0E               	incf	(??_atoi+1)^0,f,c
 14794  004228  C00D  F00B         	movff	??_atoi,?_atoi
 14795  00422C  C00E  F00C         	movff	??_atoi+1,?_atoi+1
 14796  004230  EF1E  F021         	goto	l1518
 14797  004234                     l1515:
 14798  004234  C018  F00B         	movff	atoi@n,?_atoi
 14799  004238  C019  F00C         	movff	atoi@n+1,?_atoi+1
 14800  00423C                     l1518:
 14801  00423C  0012               	return		;funcret
 14802  00423E                     __end_of_atoi:
 14803                           	opt callstack 0
 14804                           
 14805 ;; *************** function _isspace *****************
 14806 ;; Defined at:
 14807 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14808 ;; Parameters:    Size  Location     Type
 14809 ;;  c               2    3[COMRAM] int 
 14810 ;; Auto vars:     Size  Location     Type
 14811 ;;		None
 14812 ;; Return value:  Size  Location     Type
 14813 ;;                  2    3[COMRAM] int 
 14814 ;; Registers used:
 14815 ;;		wreg, status,2, status,0
 14816 ;; Tracked objects:
 14817 ;;		On entry : 0/0
 14818 ;;		On exit  : 0/0
 14819 ;;		Unchanged: 0/0
 14820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14823 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14824 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;Total ram usage:        7 bytes
 14826 ;; Hardware stack levels used:    1
 14827 ;; Hardware stack levels required when called:    4
 14828 ;; This function calls:
 14829 ;;		Nothing
 14830 ;; This function is called by:
 14831 ;;		_atoi
 14832 ;; This function uses a non-reentrant model
 14833 ;;
 14834                           
 14835                           	psect	text42
 14836  0057C6                     __ptext42:
 14837                           	opt callstack 0
 14838  0057C6                     _isspace:
 14839                           	opt callstack 21
 14840  0057C6  0E01               	movlw	1
 14841  0057C8  6E0A               	movwf	_isspace$2011^0,c
 14842  0057CA  0E20               	movlw	32
 14843  0057CC  1804               	xorwf	isspace@c^0,w,c
 14844  0057CE  1005               	iorwf	(isspace@c+1)^0,w,c
 14845  0057D0  B4D8               	btfsc	status,2,c
 14846  0057D2  EFED  F02B         	goto	u10211
 14847  0057D6  EFEF  F02B         	goto	u10210
 14848  0057DA                     u10211:
 14849  0057DA  EF08  F02C         	goto	l8029
 14850  0057DE                     u10210:
 14851  0057DE  0EF7               	movlw	247
 14852  0057E0  6E06               	movwf	??_isspace^0,c
 14853  0057E2  0EFF               	movlw	255
 14854  0057E4  6E07               	movwf	(??_isspace+1)^0,c
 14855  0057E6  C004  F008         	movff	isspace@c,??_isspace+2
 14856  0057EA  C005  F009         	movff	isspace@c+1,??_isspace+3
 14857  0057EE  5006               	movf	??_isspace^0,w,c
 14858  0057F0  2608               	addwf	(??_isspace+2)^0,f,c
 14859  0057F2  5007               	movf	(??_isspace+1)^0,w,c
 14860  0057F4  2209               	addwfc	(??_isspace+3)^0,f,c
 14861  0057F6  5009               	movf	(??_isspace+3)^0,w,c
 14862  0057F8  E109               	bnz	u10220
 14863  0057FA  0E05               	movlw	5
 14864  0057FC  5C08               	subwf	(??_isspace+2)^0,w,c
 14865  0057FE  A0D8               	btfss	status,0,c
 14866  005800  EF04  F02C         	goto	u10221
 14867  005804  EF06  F02C         	goto	u10220
 14868  005808                     u10221:
 14869  005808  EF08  F02C         	goto	l8029
 14870  00580C                     u10220:
 14871  00580C  0E00               	movlw	0
 14872  00580E  6E0A               	movwf	_isspace$2011^0,c
 14873  005810                     l8029:
 14874  005810  C00A  F004         	movff	_isspace$2011,?_isspace
 14875  005814  6A05               	clrf	(?_isspace+1)^0,c
 14876  005816  0012               	return		;funcret
 14877  005818                     __end_of_isspace:
 14878                           	opt callstack 0
 14879                           
 14880 ;; *************** function _isdigit *****************
 14881 ;; Defined at:
 14882 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14883 ;; Parameters:    Size  Location     Type
 14884 ;;  c               2    3[COMRAM] int 
 14885 ;; Auto vars:     Size  Location     Type
 14886 ;;		None
 14887 ;; Return value:  Size  Location     Type
 14888 ;;                  2    3[COMRAM] int 
 14889 ;; Registers used:
 14890 ;;		wreg, status,2, status,0
 14891 ;; Tracked objects:
 14892 ;;		On entry : 0/0
 14893 ;;		On exit  : 0/0
 14894 ;;		Unchanged: 0/0
 14895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14898 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14899 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14900 ;;Total ram usage:        6 bytes
 14901 ;; Hardware stack levels used:    1
 14902 ;; Hardware stack levels required when called:    4
 14903 ;; This function calls:
 14904 ;;		Nothing
 14905 ;; This function is called by:
 14906 ;;		_vfpfcnvrt
 14907 ;;		_atoi
 14908 ;; This function uses a non-reentrant model
 14909 ;;
 14910                           
 14911                           	psect	text43
 14912  005B18                     __ptext43:
 14913                           	opt callstack 0
 14914  005B18                     _isdigit:
 14915                           	opt callstack 22
 14916  005B18  0ED0               	movlw	208
 14917  005B1A  6E06               	movwf	??_isdigit^0,c
 14918  005B1C  0EFF               	movlw	255
 14919  005B1E  6E07               	movwf	(??_isdigit+1)^0,c
 14920  005B20  C004  F008         	movff	isdigit@c,??_isdigit+2
 14921  005B24  C005  F009         	movff	isdigit@c+1,??_isdigit+3
 14922  005B28  5006               	movf	??_isdigit^0,w,c
 14923  005B2A  2608               	addwf	(??_isdigit+2)^0,f,c
 14924  005B2C  5007               	movf	(??_isdigit+1)^0,w,c
 14925  005B2E  2209               	addwfc	(??_isdigit+3)^0,f,c
 14926  005B30  5009               	movf	(??_isdigit+3)^0,w,c
 14927  005B32  E10A               	bnz	u9290
 14928  005B34  0E0A               	movlw	10
 14929  005B36  5C08               	subwf	(??_isdigit+2)^0,w,c
 14930  005B38  A0D8               	btfss	status,0,c
 14931  005B3A  EFA1  F02D         	goto	u9291
 14932  005B3E  EFA4  F02D         	goto	u9290
 14933  005B42                     u9291:
 14934  005B42  0E01               	movlw	1
 14935  005B44  EFA5  F02D         	goto	u9300
 14936  005B48                     u9290:
 14937  005B48  0E00               	movlw	0
 14938  005B4A                     u9300:
 14939  005B4A  6E04               	movwf	?_isdigit^0,c
 14940  005B4C  6A05               	clrf	(?_isdigit+1)^0,c
 14941  005B4E  0012               	return		;funcret
 14942  005B50                     __end_of_isdigit:
 14943                           	opt callstack 0
 14944                           
 14945 ;; *************** function ___wmul *****************
 14946 ;; Defined at:
 14947 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14948 ;; Parameters:    Size  Location     Type
 14949 ;;  multiplier      2    3[COMRAM] unsigned int 
 14950 ;;  multiplicand    2    5[COMRAM] unsigned int 
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;  product         2    7[COMRAM] unsigned int 
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  2    3[COMRAM] unsigned int 
 14955 ;; Registers used:
 14956 ;;		wreg, status,2, status,0, prodl, prodh
 14957 ;; Tracked objects:
 14958 ;;		On entry : 0/0
 14959 ;;		On exit  : 0/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14966 ;;Total ram usage:        6 bytes
 14967 ;; Hardware stack levels used:    1
 14968 ;; Hardware stack levels required when called:    4
 14969 ;; This function calls:
 14970 ;;		Nothing
 14971 ;; This function is called by:
 14972 ;;		_atoi
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           	psect	text44
 14977  005C40                     __ptext44:
 14978                           	opt callstack 0
 14979  005C40                     ___wmul:
 14980                           	opt callstack 21
 14981  005C40  5004               	movf	___wmul@multiplier^0,w,c
 14982  005C42  0206               	mulwf	___wmul@multiplicand^0,c
 14983  005C44  CFF3 F008          	movff	prodl,___wmul@product
 14984  005C48  CFF4 F009          	movff	prodh,___wmul@product+1
 14985  005C4C  5004               	movf	___wmul@multiplier^0,w,c
 14986  005C4E  0207               	mulwf	(___wmul@multiplicand+1)^0,c
 14987  005C50  50F3               	movf	243,w,c
 14988  005C52  2609               	addwf	(___wmul@product+1)^0,f,c
 14989  005C54  5005               	movf	(___wmul@multiplier+1)^0,w,c
 14990  005C56  0206               	mulwf	___wmul@multiplicand^0,c
 14991  005C58  50F3               	movf	243,w,c
 14992  005C5A  2609               	addwf	(___wmul@product+1)^0,f,c
 14993  005C5C  C008  F004         	movff	___wmul@product,?___wmul
 14994  005C60  C009  F005         	movff	___wmul@product+1,?___wmul+1
 14995  005C64  0012               	return		;funcret
 14996  005C66                     __end_of___wmul:
 14997                           	opt callstack 0
 14998                           
 14999 ;; *************** function _lcd_init *****************
 15000 ;; Defined at:
 15001 ;;		line 34 in file "lib_ili9341.c"
 15002 ;; Parameters:    Size  Location     Type
 15003 ;;		None
 15004 ;; Auto vars:     Size  Location     Type
 15005 ;;		None
 15006 ;; Return value:  Size  Location     Type
 15007 ;;                  1    wreg      void 
 15008 ;; Registers used:
 15009 ;;		wreg, status,2, status,0, cstack
 15010 ;; Tracked objects:
 15011 ;;		On entry : 0/0
 15012 ;;		On exit  : 0/0
 15013 ;;		Unchanged: 0/0
 15014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15019 ;;Total ram usage:        0 bytes
 15020 ;; Hardware stack levels used:    1
 15021 ;; Hardware stack levels required when called:    9
 15022 ;; This function calls:
 15023 ;;		_lcd_fill
 15024 ;;		_lcd_send
 15025 ;;		_msDelay
 15026 ;; This function is called by:
 15027 ;;		_main
 15028 ;; This function uses a non-reentrant model
 15029 ;;
 15030                           
 15031                           	psect	text45
 15032  002D5A                     __ptext45:
 15033                           	opt callstack 0
 15034  002D5A                     _lcd_init:
 15035                           	opt callstack 21
 15036  002D5A                     
 15037                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 15038  002D5A  0E01               	movlw	1
 15039  002D5C  6E05               	movwf	lcd_send@value^0,c
 15040  002D5E  0E00               	movlw	0
 15041  002D60  EC4D  F02E         	call	_lcd_send
 15042  002D64                     
 15043                           ;lib_ili9341.c: 38:     msDelay(150);
 15044  002D64  0E96               	movlw	150
 15045  002D66  ECDC  F02D         	call	_msDelay
 15046  002D6A                     
 15047                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 15048  002D6A  0EEF               	movlw	239
 15049  002D6C  6E05               	movwf	lcd_send@value^0,c
 15050  002D6E  0E00               	movlw	0
 15051  002D70  EC4D  F02E         	call	_lcd_send
 15052  002D74                     
 15053                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 15054  002D74  0E03               	movlw	3
 15055  002D76  6E05               	movwf	lcd_send@value^0,c
 15056  002D78  0E01               	movlw	1
 15057  002D7A  EC4D  F02E         	call	_lcd_send
 15058  002D7E                     
 15059                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 15060  002D7E  0E80               	movlw	128
 15061  002D80  6E05               	movwf	lcd_send@value^0,c
 15062  002D82  0E01               	movlw	1
 15063  002D84  EC4D  F02E         	call	_lcd_send
 15064  002D88                     
 15065                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 15066  002D88  0E02               	movlw	2
 15067  002D8A  6E05               	movwf	lcd_send@value^0,c
 15068  002D8C  0E01               	movlw	1
 15069  002D8E  EC4D  F02E         	call	_lcd_send
 15070  002D92                     
 15071                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 15072  002D92  0ECF               	movlw	207
 15073  002D94  6E05               	movwf	lcd_send@value^0,c
 15074  002D96  0E00               	movlw	0
 15075  002D98  EC4D  F02E         	call	_lcd_send
 15076  002D9C                     
 15077                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 15078  002D9C  0E00               	movlw	0
 15079  002D9E  6E05               	movwf	lcd_send@value^0,c
 15080  002DA0  0E01               	movlw	1
 15081  002DA2  EC4D  F02E         	call	_lcd_send
 15082  002DA6                     
 15083                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 15084  002DA6  0EC1               	movlw	193
 15085  002DA8  6E05               	movwf	lcd_send@value^0,c
 15086  002DAA  0E01               	movlw	1
 15087  002DAC  EC4D  F02E         	call	_lcd_send
 15088  002DB0                     
 15089                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 15090  002DB0  0E30               	movlw	48
 15091  002DB2  6E05               	movwf	lcd_send@value^0,c
 15092  002DB4  0E01               	movlw	1
 15093  002DB6  EC4D  F02E         	call	_lcd_send
 15094  002DBA                     
 15095                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 15096  002DBA  0EED               	movlw	237
 15097  002DBC  6E05               	movwf	lcd_send@value^0,c
 15098  002DBE  0E00               	movlw	0
 15099  002DC0  EC4D  F02E         	call	_lcd_send
 15100  002DC4                     
 15101                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 15102  002DC4  0E64               	movlw	100
 15103  002DC6  6E05               	movwf	lcd_send@value^0,c
 15104  002DC8  0E01               	movlw	1
 15105  002DCA  EC4D  F02E         	call	_lcd_send
 15106  002DCE                     
 15107                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 15108  002DCE  0E03               	movlw	3
 15109  002DD0  6E05               	movwf	lcd_send@value^0,c
 15110  002DD2  0E01               	movlw	1
 15111  002DD4  EC4D  F02E         	call	_lcd_send
 15112  002DD8                     
 15113                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 15114  002DD8  0E12               	movlw	18
 15115  002DDA  6E05               	movwf	lcd_send@value^0,c
 15116  002DDC  0E01               	movlw	1
 15117  002DDE  EC4D  F02E         	call	_lcd_send
 15118  002DE2                     
 15119                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 15120  002DE2  0E81               	movlw	129
 15121  002DE4  6E05               	movwf	lcd_send@value^0,c
 15122  002DE6  0E01               	movlw	1
 15123  002DE8  EC4D  F02E         	call	_lcd_send
 15124  002DEC                     
 15125                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 15126  002DEC  0EE8               	movlw	232
 15127  002DEE  6E05               	movwf	lcd_send@value^0,c
 15128  002DF0  0E00               	movlw	0
 15129  002DF2  EC4D  F02E         	call	_lcd_send
 15130  002DF6                     
 15131                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 15132  002DF6  0E85               	movlw	133
 15133  002DF8  6E05               	movwf	lcd_send@value^0,c
 15134  002DFA  0E01               	movlw	1
 15135  002DFC  EC4D  F02E         	call	_lcd_send
 15136  002E00                     
 15137                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 15138  002E00  0E00               	movlw	0
 15139  002E02  6E05               	movwf	lcd_send@value^0,c
 15140  002E04  0E01               	movlw	1
 15141  002E06  EC4D  F02E         	call	_lcd_send
 15142  002E0A                     
 15143                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 15144  002E0A  0E78               	movlw	120
 15145  002E0C  6E05               	movwf	lcd_send@value^0,c
 15146  002E0E  0E01               	movlw	1
 15147  002E10  EC4D  F02E         	call	_lcd_send
 15148  002E14                     
 15149                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 15150  002E14  0ECB               	movlw	203
 15151  002E16  6E05               	movwf	lcd_send@value^0,c
 15152  002E18  0E00               	movlw	0
 15153  002E1A  EC4D  F02E         	call	_lcd_send
 15154  002E1E                     
 15155                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 15156  002E1E  0E39               	movlw	57
 15157  002E20  6E05               	movwf	lcd_send@value^0,c
 15158  002E22  0E01               	movlw	1
 15159  002E24  EC4D  F02E         	call	_lcd_send
 15160  002E28                     
 15161                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 15162  002E28  0E2C               	movlw	44
 15163  002E2A  6E05               	movwf	lcd_send@value^0,c
 15164  002E2C  0E01               	movlw	1
 15165  002E2E  EC4D  F02E         	call	_lcd_send
 15166  002E32                     
 15167                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 15168  002E32  0E00               	movlw	0
 15169  002E34  6E05               	movwf	lcd_send@value^0,c
 15170  002E36  0E01               	movlw	1
 15171  002E38  EC4D  F02E         	call	_lcd_send
 15172  002E3C                     
 15173                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 15174  002E3C  0E34               	movlw	52
 15175  002E3E  6E05               	movwf	lcd_send@value^0,c
 15176  002E40  0E01               	movlw	1
 15177  002E42  EC4D  F02E         	call	_lcd_send
 15178  002E46                     
 15179                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 15180  002E46  0E02               	movlw	2
 15181  002E48  6E05               	movwf	lcd_send@value^0,c
 15182  002E4A  0E01               	movlw	1
 15183  002E4C  EC4D  F02E         	call	_lcd_send
 15184  002E50                     
 15185                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 15186  002E50  0EF7               	movlw	247
 15187  002E52  6E05               	movwf	lcd_send@value^0,c
 15188  002E54  0E00               	movlw	0
 15189  002E56  EC4D  F02E         	call	_lcd_send
 15190  002E5A                     
 15191                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 15192  002E5A  0E20               	movlw	32
 15193  002E5C  6E05               	movwf	lcd_send@value^0,c
 15194  002E5E  0E01               	movlw	1
 15195  002E60  EC4D  F02E         	call	_lcd_send
 15196  002E64                     
 15197                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 15198  002E64  0EEA               	movlw	234
 15199  002E66  6E05               	movwf	lcd_send@value^0,c
 15200  002E68  0E00               	movlw	0
 15201  002E6A  EC4D  F02E         	call	_lcd_send
 15202  002E6E                     
 15203                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 15204  002E6E  0E00               	movlw	0
 15205  002E70  6E05               	movwf	lcd_send@value^0,c
 15206  002E72  0E01               	movlw	1
 15207  002E74  EC4D  F02E         	call	_lcd_send
 15208  002E78                     
 15209                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 15210  002E78  0E00               	movlw	0
 15211  002E7A  6E05               	movwf	lcd_send@value^0,c
 15212  002E7C  0E01               	movlw	1
 15213  002E7E  EC4D  F02E         	call	_lcd_send
 15214  002E82                     
 15215                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 15216  002E82  0EC0               	movlw	192
 15217  002E84  6E05               	movwf	lcd_send@value^0,c
 15218  002E86  0E00               	movlw	0
 15219  002E88  EC4D  F02E         	call	_lcd_send
 15220  002E8C                     
 15221                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 15222  002E8C  0E23               	movlw	35
 15223  002E8E  6E05               	movwf	lcd_send@value^0,c
 15224  002E90  0E01               	movlw	1
 15225  002E92  EC4D  F02E         	call	_lcd_send
 15226  002E96                     
 15227                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 15228  002E96  0EC1               	movlw	193
 15229  002E98  6E05               	movwf	lcd_send@value^0,c
 15230  002E9A  0E00               	movlw	0
 15231  002E9C  EC4D  F02E         	call	_lcd_send
 15232  002EA0                     
 15233                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 15234  002EA0  0E10               	movlw	16
 15235  002EA2  6E05               	movwf	lcd_send@value^0,c
 15236  002EA4  0E01               	movlw	1
 15237  002EA6  EC4D  F02E         	call	_lcd_send
 15238  002EAA                     
 15239                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 15240  002EAA  0EC5               	movlw	197
 15241  002EAC  6E05               	movwf	lcd_send@value^0,c
 15242  002EAE  0E00               	movlw	0
 15243  002EB0  EC4D  F02E         	call	_lcd_send
 15244  002EB4                     
 15245                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 15246  002EB4  0E3E               	movlw	62
 15247  002EB6  6E05               	movwf	lcd_send@value^0,c
 15248  002EB8  0E01               	movlw	1
 15249  002EBA  EC4D  F02E         	call	_lcd_send
 15250  002EBE                     
 15251                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 15252  002EBE  0E28               	movlw	40
 15253  002EC0  6E05               	movwf	lcd_send@value^0,c
 15254  002EC2  0E01               	movlw	1
 15255  002EC4  EC4D  F02E         	call	_lcd_send
 15256  002EC8                     
 15257                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 15258  002EC8  0EC7               	movlw	199
 15259  002ECA  6E05               	movwf	lcd_send@value^0,c
 15260  002ECC  0E00               	movlw	0
 15261  002ECE  EC4D  F02E         	call	_lcd_send
 15262  002ED2                     
 15263                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 15264  002ED2  0E86               	movlw	134
 15265  002ED4  6E05               	movwf	lcd_send@value^0,c
 15266  002ED6  0E01               	movlw	1
 15267  002ED8  EC4D  F02E         	call	_lcd_send
 15268  002EDC                     
 15269                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 15270  002EDC  0E36               	movlw	54
 15271  002EDE  6E05               	movwf	lcd_send@value^0,c
 15272  002EE0  0E00               	movlw	0
 15273  002EE2  EC4D  F02E         	call	_lcd_send
 15274  002EE6                     
 15275                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 15276  002EE6  0E48               	movlw	72
 15277  002EE8  6E05               	movwf	lcd_send@value^0,c
 15278  002EEA  0E01               	movlw	1
 15279  002EEC  EC4D  F02E         	call	_lcd_send
 15280  002EF0                     
 15281                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 15282  002EF0  0E3A               	movlw	58
 15283  002EF2  6E05               	movwf	lcd_send@value^0,c
 15284  002EF4  0E00               	movlw	0
 15285  002EF6  EC4D  F02E         	call	_lcd_send
 15286  002EFA                     
 15287                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 15288  002EFA  0E55               	movlw	85
 15289  002EFC  6E05               	movwf	lcd_send@value^0,c
 15290  002EFE  0E01               	movlw	1
 15291  002F00  EC4D  F02E         	call	_lcd_send
 15292  002F04                     
 15293                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 15294  002F04  0EB1               	movlw	177
 15295  002F06  6E05               	movwf	lcd_send@value^0,c
 15296  002F08  0E00               	movlw	0
 15297  002F0A  EC4D  F02E         	call	_lcd_send
 15298  002F0E                     
 15299                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 15300  002F0E  0E00               	movlw	0
 15301  002F10  6E05               	movwf	lcd_send@value^0,c
 15302  002F12  0E01               	movlw	1
 15303  002F14  EC4D  F02E         	call	_lcd_send
 15304  002F18                     
 15305                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 15306  002F18  0E18               	movlw	24
 15307  002F1A  6E05               	movwf	lcd_send@value^0,c
 15308  002F1C  0E01               	movlw	1
 15309  002F1E  EC4D  F02E         	call	_lcd_send
 15310  002F22                     
 15311                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 15312  002F22  0EB6               	movlw	182
 15313  002F24  6E05               	movwf	lcd_send@value^0,c
 15314  002F26  0E00               	movlw	0
 15315  002F28  EC4D  F02E         	call	_lcd_send
 15316  002F2C                     
 15317                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 15318  002F2C  0E08               	movlw	8
 15319  002F2E  6E05               	movwf	lcd_send@value^0,c
 15320  002F30  0E01               	movlw	1
 15321  002F32  EC4D  F02E         	call	_lcd_send
 15322  002F36                     
 15323                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 15324  002F36  0E82               	movlw	130
 15325  002F38  6E05               	movwf	lcd_send@value^0,c
 15326  002F3A  0E01               	movlw	1
 15327  002F3C  EC4D  F02E         	call	_lcd_send
 15328  002F40                     
 15329                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 15330  002F40  0E27               	movlw	39
 15331  002F42  6E05               	movwf	lcd_send@value^0,c
 15332  002F44  0E01               	movlw	1
 15333  002F46  EC4D  F02E         	call	_lcd_send
 15334  002F4A                     
 15335                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 15336  002F4A  0EF2               	movlw	242
 15337  002F4C  6E05               	movwf	lcd_send@value^0,c
 15338  002F4E  0E00               	movlw	0
 15339  002F50  EC4D  F02E         	call	_lcd_send
 15340  002F54                     
 15341                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 15342  002F54  0E00               	movlw	0
 15343  002F56  6E05               	movwf	lcd_send@value^0,c
 15344  002F58  0E01               	movlw	1
 15345  002F5A  EC4D  F02E         	call	_lcd_send
 15346  002F5E                     
 15347                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 15348  002F5E  0E26               	movlw	38
 15349  002F60  6E05               	movwf	lcd_send@value^0,c
 15350  002F62  0E00               	movlw	0
 15351  002F64  EC4D  F02E         	call	_lcd_send
 15352  002F68                     
 15353                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 15354  002F68  0E01               	movlw	1
 15355  002F6A  6E05               	movwf	lcd_send@value^0,c
 15356  002F6C  0E01               	movlw	1
 15357  002F6E  EC4D  F02E         	call	_lcd_send
 15358  002F72                     
 15359                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 15360  002F72  0EE0               	movlw	224
 15361  002F74  6E05               	movwf	lcd_send@value^0,c
 15362  002F76  0E00               	movlw	0
 15363  002F78  EC4D  F02E         	call	_lcd_send
 15364  002F7C                     
 15365                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 15366  002F7C  0E0F               	movlw	15
 15367  002F7E  6E05               	movwf	lcd_send@value^0,c
 15368  002F80  0E01               	movlw	1
 15369  002F82  EC4D  F02E         	call	_lcd_send
 15370  002F86                     
 15371                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 15372  002F86  0E31               	movlw	49
 15373  002F88  6E05               	movwf	lcd_send@value^0,c
 15374  002F8A  0E01               	movlw	1
 15375  002F8C  EC4D  F02E         	call	_lcd_send
 15376  002F90                     
 15377                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 15378  002F90  0E2B               	movlw	43
 15379  002F92  6E05               	movwf	lcd_send@value^0,c
 15380  002F94  0E01               	movlw	1
 15381  002F96  EC4D  F02E         	call	_lcd_send
 15382  002F9A                     
 15383                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 15384  002F9A  0E0C               	movlw	12
 15385  002F9C  6E05               	movwf	lcd_send@value^0,c
 15386  002F9E  0E01               	movlw	1
 15387  002FA0  EC4D  F02E         	call	_lcd_send
 15388  002FA4                     
 15389                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 15390  002FA4  0E0E               	movlw	14
 15391  002FA6  6E05               	movwf	lcd_send@value^0,c
 15392  002FA8  0E01               	movlw	1
 15393  002FAA  EC4D  F02E         	call	_lcd_send
 15394  002FAE                     
 15395                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 15396  002FAE  0E08               	movlw	8
 15397  002FB0  6E05               	movwf	lcd_send@value^0,c
 15398  002FB2  0E01               	movlw	1
 15399  002FB4  EC4D  F02E         	call	_lcd_send
 15400  002FB8                     
 15401                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 15402  002FB8  0E4E               	movlw	78
 15403  002FBA  6E05               	movwf	lcd_send@value^0,c
 15404  002FBC  0E01               	movlw	1
 15405  002FBE  EC4D  F02E         	call	_lcd_send
 15406  002FC2                     
 15407                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 15408  002FC2  0EF1               	movlw	241
 15409  002FC4  6E05               	movwf	lcd_send@value^0,c
 15410  002FC6  0E01               	movlw	1
 15411  002FC8  EC4D  F02E         	call	_lcd_send
 15412  002FCC                     
 15413                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 15414  002FCC  0E37               	movlw	55
 15415  002FCE  6E05               	movwf	lcd_send@value^0,c
 15416  002FD0  0E01               	movlw	1
 15417  002FD2  EC4D  F02E         	call	_lcd_send
 15418  002FD6                     
 15419                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 15420  002FD6  0E07               	movlw	7
 15421  002FD8  6E05               	movwf	lcd_send@value^0,c
 15422  002FDA  0E01               	movlw	1
 15423  002FDC  EC4D  F02E         	call	_lcd_send
 15424  002FE0                     
 15425                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 15426  002FE0  0E10               	movlw	16
 15427  002FE2  6E05               	movwf	lcd_send@value^0,c
 15428  002FE4  0E01               	movlw	1
 15429  002FE6  EC4D  F02E         	call	_lcd_send
 15430  002FEA                     
 15431                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 15432  002FEA  0E03               	movlw	3
 15433  002FEC  6E05               	movwf	lcd_send@value^0,c
 15434  002FEE  0E01               	movlw	1
 15435  002FF0  EC4D  F02E         	call	_lcd_send
 15436  002FF4                     
 15437                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 15438  002FF4  0E0E               	movlw	14
 15439  002FF6  6E05               	movwf	lcd_send@value^0,c
 15440  002FF8  0E01               	movlw	1
 15441  002FFA  EC4D  F02E         	call	_lcd_send
 15442  002FFE                     
 15443                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 15444  002FFE  0E09               	movlw	9
 15445  003000  6E05               	movwf	lcd_send@value^0,c
 15446  003002  0E01               	movlw	1
 15447  003004  EC4D  F02E         	call	_lcd_send
 15448  003008                     
 15449                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15450  003008  0E00               	movlw	0
 15451  00300A  6E05               	movwf	lcd_send@value^0,c
 15452  00300C  0E01               	movlw	1
 15453  00300E  EC4D  F02E         	call	_lcd_send
 15454  003012                     
 15455                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 15456  003012  0EE1               	movlw	225
 15457  003014  6E05               	movwf	lcd_send@value^0,c
 15458  003016  0E00               	movlw	0
 15459  003018  EC4D  F02E         	call	_lcd_send
 15460  00301C                     
 15461                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 15462  00301C  0E00               	movlw	0
 15463  00301E  6E05               	movwf	lcd_send@value^0,c
 15464  003020  0E01               	movlw	1
 15465  003022  EC4D  F02E         	call	_lcd_send
 15466  003026                     
 15467                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 15468  003026  0E0E               	movlw	14
 15469  003028  6E05               	movwf	lcd_send@value^0,c
 15470  00302A  0E01               	movlw	1
 15471  00302C  EC4D  F02E         	call	_lcd_send
 15472  003030                     
 15473                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 15474  003030  0E14               	movlw	20
 15475  003032  6E05               	movwf	lcd_send@value^0,c
 15476  003034  0E01               	movlw	1
 15477  003036  EC4D  F02E         	call	_lcd_send
 15478  00303A                     
 15479                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 15480  00303A  0E03               	movlw	3
 15481  00303C  6E05               	movwf	lcd_send@value^0,c
 15482  00303E  0E01               	movlw	1
 15483  003040  EC4D  F02E         	call	_lcd_send
 15484  003044                     
 15485                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 15486  003044  0E11               	movlw	17
 15487  003046  6E05               	movwf	lcd_send@value^0,c
 15488  003048  0E01               	movlw	1
 15489  00304A  EC4D  F02E         	call	_lcd_send
 15490  00304E                     
 15491                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 15492  00304E  0E07               	movlw	7
 15493  003050  6E05               	movwf	lcd_send@value^0,c
 15494  003052  0E01               	movlw	1
 15495  003054  EC4D  F02E         	call	_lcd_send
 15496  003058                     
 15497                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 15498  003058  0E31               	movlw	49
 15499  00305A  6E05               	movwf	lcd_send@value^0,c
 15500  00305C  0E01               	movlw	1
 15501  00305E  EC4D  F02E         	call	_lcd_send
 15502  003062                     
 15503                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 15504  003062  0EC1               	movlw	193
 15505  003064  6E05               	movwf	lcd_send@value^0,c
 15506  003066  0E01               	movlw	1
 15507  003068  EC4D  F02E         	call	_lcd_send
 15508  00306C                     
 15509                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 15510  00306C  0E48               	movlw	72
 15511  00306E  6E05               	movwf	lcd_send@value^0,c
 15512  003070  0E01               	movlw	1
 15513  003072  EC4D  F02E         	call	_lcd_send
 15514  003076                     
 15515                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 15516  003076  0E08               	movlw	8
 15517  003078  6E05               	movwf	lcd_send@value^0,c
 15518  00307A  0E01               	movlw	1
 15519  00307C  EC4D  F02E         	call	_lcd_send
 15520  003080                     
 15521                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 15522  003080  0E0F               	movlw	15
 15523  003082  6E05               	movwf	lcd_send@value^0,c
 15524  003084  0E01               	movlw	1
 15525  003086  EC4D  F02E         	call	_lcd_send
 15526  00308A                     
 15527                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 15528  00308A  0E0C               	movlw	12
 15529  00308C  6E05               	movwf	lcd_send@value^0,c
 15530  00308E  0E01               	movlw	1
 15531  003090  EC4D  F02E         	call	_lcd_send
 15532  003094                     
 15533                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 15534  003094  0E31               	movlw	49
 15535  003096  6E05               	movwf	lcd_send@value^0,c
 15536  003098  0E01               	movlw	1
 15537  00309A  EC4D  F02E         	call	_lcd_send
 15538  00309E                     
 15539                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 15540  00309E  0E36               	movlw	54
 15541  0030A0  6E05               	movwf	lcd_send@value^0,c
 15542  0030A2  0E01               	movlw	1
 15543  0030A4  EC4D  F02E         	call	_lcd_send
 15544  0030A8                     
 15545                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 15546  0030A8  0E0F               	movlw	15
 15547  0030AA  6E05               	movwf	lcd_send@value^0,c
 15548  0030AC  0E01               	movlw	1
 15549  0030AE  EC4D  F02E         	call	_lcd_send
 15550  0030B2                     
 15551                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 15552  0030B2  0E11               	movlw	17
 15553  0030B4  6E05               	movwf	lcd_send@value^0,c
 15554  0030B6  0E00               	movlw	0
 15555  0030B8  EC4D  F02E         	call	_lcd_send
 15556                           
 15557                           ;lib_ili9341.c: 125:     msDelay(120);
 15558  0030BC  0E78               	movlw	120
 15559  0030BE  ECDC  F02D         	call	_msDelay
 15560  0030C2                     
 15561                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 15562  0030C2  0E29               	movlw	41
 15563  0030C4  6E05               	movwf	lcd_send@value^0,c
 15564  0030C6  0E00               	movlw	0
 15565  0030C8  EC4D  F02E         	call	_lcd_send
 15566  0030CC                     
 15567                           ;lib_ili9341.c: 127:     msDelay(120);
 15568  0030CC  0E78               	movlw	120
 15569  0030CE  ECDC  F02D         	call	_msDelay
 15570  0030D2                     
 15571                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 15572  0030D2  0E00               	movlw	0
 15573  0030D4  6E0E               	movwf	(lcd_fill@bg_color+1)^0,c
 15574  0030D6  0E00               	movlw	0
 15575  0030D8  6E0D               	movwf	lcd_fill@bg_color^0,c
 15576  0030DA  EC5C  F02A         	call	_lcd_fill	;wreg free
 15577  0030DE  0012               	return		;funcret
 15578  0030E0                     __end_of_lcd_init:
 15579                           	opt callstack 0
 15580                           
 15581 ;; *************** function _msDelay *****************
 15582 ;; Defined at:
 15583 ;;		line 16 in file "lib_ili9341.c"
 15584 ;; Parameters:    Size  Location     Type
 15585 ;;  ms              1    wreg     unsigned char 
 15586 ;; Auto vars:     Size  Location     Type
 15587 ;;  ms              1    4[COMRAM] unsigned char 
 15588 ;;  k               1    5[COMRAM] unsigned char 
 15589 ;; Return value:  Size  Location     Type
 15590 ;;                  1    wreg      void 
 15591 ;; Registers used:
 15592 ;;		wreg, status,2, status,0
 15593 ;; Tracked objects:
 15594 ;;		On entry : 0/0
 15595 ;;		On exit  : 0/0
 15596 ;;		Unchanged: 0/0
 15597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15602 ;;Total ram usage:        3 bytes
 15603 ;; Hardware stack levels used:    1
 15604 ;; Hardware stack levels required when called:    4
 15605 ;; This function calls:
 15606 ;;		Nothing
 15607 ;; This function is called by:
 15608 ;;		_lcd_init
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612                           	psect	text46
 15613  005BB8                     __ptext46:
 15614                           	opt callstack 0
 15615  005BB8                     _msDelay:
 15616                           	opt callstack 25
 15617                           
 15618                           ;incstack = 0
 15619                           ;msDelay@ms stored from wreg
 15620  005BB8  6E05               	movwf	msDelay@ms^0,c
 15621  005BBA                     
 15622                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 15623  005BBA  0E00               	movlw	0
 15624  005BBC  6E06               	movwf	msDelay@k^0,c
 15625  005BBE  EFE9  F02D         	goto	l6459
 15626  005BC2                     l6455:
 15627                           
 15628                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 15629  005BC2  0E03               	movlw	3
 15630  005BC4  6E04               	movwf	??_msDelay^0,c
 15631  005BC6  0E98               	movlw	152
 15632  005BC8                     u12097:
 15633  005BC8  2EE8               	decfsz	wreg,f,c
 15634  005BCA  D7FE               	bra	u12097
 15635  005BCC  2E04               	decfsz	??_msDelay^0,f,c
 15636  005BCE  D7FC               	bra	u12097
 15637  005BD0                     
 15638                           ;lib_ili9341.c: 23:     }
 15639  005BD0  2A06               	incf	msDelay@k^0,f,c
 15640  005BD2                     l6459:
 15641  005BD2  5005               	movf	msDelay@ms^0,w,c
 15642  005BD4  5C06               	subwf	msDelay@k^0,w,c
 15643  005BD6  A0D8               	btfss	status,0,c
 15644  005BD8  EFF0  F02D         	goto	u7901
 15645  005BDC  EFF2  F02D         	goto	u7900
 15646  005BE0                     u7901:
 15647  005BE0  EFE1  F02D         	goto	l6455
 15648  005BE4                     u7900:
 15649  005BE4  0012               	return		;funcret
 15650  005BE6                     __end_of_msDelay:
 15651                           	opt callstack 0
 15652                           
 15653 ;; *************** function _lcd_fill *****************
 15654 ;; Defined at:
 15655 ;;		line 193 in file "lib_ili9341.c"
 15656 ;; Parameters:    Size  Location     Type
 15657 ;;  bg_color        2   12[COMRAM] unsigned short 
 15658 ;; Auto vars:     Size  Location     Type
 15659 ;;  width           2   16[COMRAM] unsigned short 
 15660 ;;  height          2   14[COMRAM] unsigned short 
 15661 ;; Return value:  Size  Location     Type
 15662 ;;                  1    wreg      void 
 15663 ;; Registers used:
 15664 ;;		wreg, status,2, status,0, cstack
 15665 ;; Tracked objects:
 15666 ;;		On entry : 0/0
 15667 ;;		On exit  : 0/0
 15668 ;;		Unchanged: 0/0
 15669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15674 ;;Total ram usage:        6 bytes
 15675 ;; Hardware stack levels used:    1
 15676 ;; Hardware stack levels required when called:    8
 15677 ;; This function calls:
 15678 ;;		_lcd_draw_pixel
 15679 ;;		_lcd_set_cursor
 15680 ;; This function is called by:
 15681 ;;		_lcd_init
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           	psect	text47
 15686  0054B8                     __ptext47:
 15687                           	opt callstack 0
 15688  0054B8                     _lcd_fill:
 15689                           	opt callstack 21
 15690  0054B8                     
 15691                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 15692  0054B8  0E01               	movlw	1
 15693  0054BA  6E12               	movwf	(lcd_fill@width+1)^0,c
 15694  0054BC  0E40               	movlw	64
 15695  0054BE  6E11               	movwf	lcd_fill@width^0,c
 15696  0054C0  0E00               	movlw	0
 15697  0054C2  6E10               	movwf	(lcd_fill@height+1)^0,c
 15698  0054C4  0EF0               	movlw	240
 15699  0054C6  6E0F               	movwf	lcd_fill@height^0,c
 15700  0054C8                     
 15701                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 15702  0054C8  0E00               	movlw	0
 15703  0054CA  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 15704  0054CC  0E00               	movlw	0
 15705  0054CE  6E09               	movwf	lcd_set_cursor@x^0,c
 15706  0054D0  0E00               	movlw	0
 15707  0054D2  6E0C               	movwf	(lcd_set_cursor@y+1)^0,c
 15708  0054D4  0E00               	movlw	0
 15709  0054D6  6E0B               	movwf	lcd_set_cursor@y^0,c
 15710  0054D8  ECBC  F02C         	call	_lcd_set_cursor	;wreg free
 15711  0054DC  0900               	iorlw	0
 15712  0054DE  B4D8               	btfsc	status,2,c
 15713  0054E0  EF74  F02A         	goto	u7911
 15714  0054E4  EF76  F02A         	goto	u7910
 15715  0054E8                     u7911:
 15716  0054E8  EF8F  F02A         	goto	l6473
 15717  0054EC                     u7910:
 15718  0054EC  EF9C  F02A         	goto	l365
 15719  0054F0                     l6467:
 15720                           
 15721                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 15722  0054F0  C00D  F007         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 15723  0054F4  C00E  F008         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 15724  0054F8  EC65  F02E         	call	_lcd_draw_pixel	;wreg free
 15725  0054FC                     l6469:
 15726                           
 15727                           ;lib_ili9341.c: 204:         while(width--)
 15728  0054FC  0611               	decf	lcd_fill@width^0,f,c
 15729  0054FE  A0D8               	btfss	status,0,c
 15730  005500  0612               	decf	(lcd_fill@width+1)^0,f,c
 15731  005502  2811               	incf	lcd_fill@width^0,w,c
 15732  005504  E106               	bnz	u7921
 15733  005506  2812               	incf	(lcd_fill@width+1)^0,w,c
 15734  005508  A4D8               	btfss	status,2,c
 15735  00550A  EF89  F02A         	goto	u7921
 15736  00550E  EF8B  F02A         	goto	u7920
 15737  005512                     u7921:
 15738  005512  EF78  F02A         	goto	l6467
 15739  005516                     u7920:
 15740  005516                     
 15741                           ;lib_ili9341.c: 208:         width = 320;
 15742  005516  0E01               	movlw	1
 15743  005518  6E12               	movwf	(lcd_fill@width+1)^0,c
 15744  00551A  0E40               	movlw	64
 15745  00551C  6E11               	movwf	lcd_fill@width^0,c
 15746  00551E                     l6473:
 15747                           
 15748                           ;lib_ili9341.c: 202:     while(height--)
 15749  00551E  060F               	decf	lcd_fill@height^0,f,c
 15750  005520  A0D8               	btfss	status,0,c
 15751  005522  0610               	decf	(lcd_fill@height+1)^0,f,c
 15752  005524  280F               	incf	lcd_fill@height^0,w,c
 15753  005526  E106               	bnz	u7931
 15754  005528  2810               	incf	(lcd_fill@height+1)^0,w,c
 15755  00552A  A4D8               	btfss	status,2,c
 15756  00552C  EF9A  F02A         	goto	u7931
 15757  005530  EF9C  F02A         	goto	u7930
 15758  005534                     u7931:
 15759  005534  EF7E  F02A         	goto	l6469
 15760  005538                     u7930:
 15761  005538                     l365:
 15762  005538  0012               	return		;funcret
 15763  00553A                     __end_of_lcd_fill:
 15764                           	opt callstack 0
 15765                           
 15766 ;; *************** function _lcd_draw_string *****************
 15767 ;; Defined at:
 15768 ;;		line 379 in file "lib_ili9341.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;  x               2   34[COMRAM] unsigned short 
 15771 ;;  y               2   36[COMRAM] unsigned short 
 15772 ;;  pS              2   38[COMRAM] PTR const unsigned char 
 15773 ;;		 -> string_pot(100), string_temp(100), STR_1(12), 
 15774 ;;  fg_color        2   40[COMRAM] unsigned short 
 15775 ;;  bg_color        2   42[COMRAM] unsigned short 
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;  lIndex          2   50[COMRAM] unsigned short 
 15778 ;;  k               2   48[COMRAM] unsigned short 
 15779 ;; Return value:  Size  Location     Type
 15780 ;;                  1    wreg      void 
 15781 ;; Registers used:
 15782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15783 ;; Tracked objects:
 15784 ;;		On entry : 0/0
 15785 ;;		On exit  : 0/0
 15786 ;;		Unchanged: 0/0
 15787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15788 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15789 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15790 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15791 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15792 ;;Total ram usage:       18 bytes
 15793 ;; Hardware stack levels used:    1
 15794 ;; Hardware stack levels required when called:    9
 15795 ;; This function calls:
 15796 ;;		_lcd_draw_char
 15797 ;; This function is called by:
 15798 ;;		_main
 15799 ;; This function uses a non-reentrant model
 15800 ;;
 15801                           
 15802                           	psect	text48
 15803  00482A                     __ptext48:
 15804                           	opt callstack 0
 15805  00482A                     _lcd_draw_string:
 15806                           	opt callstack 21
 15807  00482A                     
 15808                           ;lib_ili9341.c: 379: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 380: {;lib_ili9341.c: 381:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 383:     while(*pS)
 15809  00482A  EF94  F024         	goto	l6797
 15810  00482E                     l6783:
 15811                           
 15812                           ;lib_ili9341.c: 384:     {;lib_ili9341.c: 385:         lIndex = 0;
 15813  00482E  0E00               	movlw	0
 15814  004830  6E34               	movwf	(lcd_draw_string@lIndex+1)^0,c
 15815  004832  0E00               	movlw	0
 15816  004834  6E33               	movwf	lcd_draw_string@lIndex^0,c
 15817                           
 15818                           ;lib_ili9341.c: 386:         for(k=0; k<(*pS - ' '); k++)
 15819  004836  0E00               	movlw	0
 15820  004838  6E32               	movwf	(lcd_draw_string@k+1)^0,c
 15821  00483A  0E00               	movlw	0
 15822  00483C  6E31               	movwf	lcd_draw_string@k^0,c
 15823  00483E  EF40  F024         	goto	l6789
 15824  004842                     l6785:
 15825                           
 15826                           ;lib_ili9341.c: 387:         {;lib_ili9341.c: 388:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 15827  004842  90D8               	bcf	status,0,c
 15828  004844  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 15829  004846  6EF6               	movwf	tblptrl,c
 15830  004848  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 15831  00484A  6EF7               	movwf	tblptrh,c
 15832  00484C  0EBD               	movlw	low _font
 15833  00484E  26F6               	addwf	tblptrl,f,c
 15834  004850  0EF1               	movlw	high _font
 15835  004852  22F7               	addwfc	tblptrh,f,c
 15836  004854                     	if	1	;There are 3 active tblptr bytes
 15837  004854  6AF8               	clrf	tblptru,c
 15838  004856  0E00               	movlw	low (__mediumconst shr (0+16))
 15839  004858  22F8               	addwfc	tblptru,f,c
 15840  00485A                     	endif
 15841  00485A  0009               	tblrd		*+
 15842  00485C  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 15843  004860  0009               	tblrd		*+
 15844  004862  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 15845  004866  90D8               	bcf	status,0,c
 15846  004868  362D               	rlcf	??_lcd_draw_string^0,f,c
 15847  00486A  362E               	rlcf	(??_lcd_draw_string+1)^0,f,c
 15848  00486C  0E01               	movlw	1
 15849  00486E  262D               	addwf	??_lcd_draw_string^0,f,c
 15850  004870  0E00               	movlw	0
 15851  004872  222E               	addwfc	(??_lcd_draw_string+1)^0,f,c
 15852  004874  502D               	movf	??_lcd_draw_string^0,w,c
 15853  004876  2633               	addwf	lcd_draw_string@lIndex^0,f,c
 15854  004878  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15855  00487A  2234               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 15856  00487C                     
 15857                           ;lib_ili9341.c: 389:         }
 15858  00487C  4A31               	infsnz	lcd_draw_string@k^0,f,c
 15859  00487E  2A32               	incf	(lcd_draw_string@k+1)^0,f,c
 15860  004880                     l6789:
 15861  004880  0EE0               	movlw	224
 15862  004882  6E2D               	movwf	??_lcd_draw_string^0,c
 15863  004884  0EFF               	movlw	255
 15864  004886  6E2E               	movwf	(??_lcd_draw_string+1)^0,c
 15865  004888  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 15866  00488C  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 15867  004890  0E00               	movlw	low (__mediumconst shr (0+16))
 15868  004892  6EF8               	movwf	tblptru,c
 15869  004894  0E0E               	movlw	(high __ramtop+-1)
 15870  004896  64F7               	cpfsgt	tblptrh,c
 15871  004898  D003               	bra	u8097
 15872  00489A  0008               	tblrd		*
 15873  00489C  50F5               	movf	tablat,w,c
 15874  00489E  D005               	bra	u8090
 15875  0048A0                     u8097:
 15876  0048A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 15877  0048A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 15878  0048A8  50E7               	movf	indf1,w,c
 15879  0048AA                     u8090:
 15880  0048AA  6E2F               	movwf	(??_lcd_draw_string+2)^0,c
 15881  0048AC  6A30               	clrf	(??_lcd_draw_string+3)^0,c
 15882  0048AE  502D               	movf	??_lcd_draw_string^0,w,c
 15883  0048B0  262F               	addwf	(??_lcd_draw_string+2)^0,f,c
 15884  0048B2  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15885  0048B4  2230               	addwfc	(??_lcd_draw_string+3)^0,f,c
 15886  0048B6  502F               	movf	(??_lcd_draw_string+2)^0,w,c
 15887  0048B8  5C31               	subwf	lcd_draw_string@k^0,w,c
 15888  0048BA  5030               	movf	(??_lcd_draw_string+3)^0,w,c
 15889  0048BC  5832               	subwfb	(lcd_draw_string@k+1)^0,w,c
 15890  0048BE  A0D8               	btfss	status,0,c
 15891  0048C0  EF64  F024         	goto	u8101
 15892  0048C4  EF66  F024         	goto	u8100
 15893  0048C8                     u8101:
 15894  0048C8  EF21  F024         	goto	l6785
 15895  0048CC                     u8100:
 15896  0048CC                     
 15897                           ;lib_ili9341.c: 391:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 15898  0048CC  C023  F00D         	movff	lcd_draw_string@x,lcd_draw_char@x
 15899  0048D0  C024  F00E         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 15900  0048D4  C025  F00F         	movff	lcd_draw_string@y,lcd_draw_char@y
 15901  0048D8  C026  F010         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 15902  0048DC  C033  F011         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 15903  0048E0  C034  F012         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 15904  0048E4  C029  F013         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 15905  0048E8  C02A  F014         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 15906  0048EC  C02B  F015         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 15907  0048F0  C02C  F016         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 15908  0048F4  ECA6  F022         	call	_lcd_draw_char	;wreg free
 15909  0048F8                     
 15910                           ;lib_ili9341.c: 393:         x += font[lIndex];
 15911  0048F8  90D8               	bcf	status,0,c
 15912  0048FA  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 15913  0048FC  6EF6               	movwf	tblptrl,c
 15914  0048FE  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 15915  004900  6EF7               	movwf	tblptrh,c
 15916  004902  0EBD               	movlw	low _font
 15917  004904  26F6               	addwf	tblptrl,f,c
 15918  004906  0EF1               	movlw	high _font
 15919  004908  22F7               	addwfc	tblptrh,f,c
 15920  00490A                     	if	1	;There are 3 active tblptr bytes
 15921  00490A  6AF8               	clrf	tblptru,c
 15922  00490C  0E00               	movlw	low (__mediumconst shr (0+16))
 15923  00490E  22F8               	addwfc	tblptru,f,c
 15924  004910                     	endif
 15925  004910  0009               	tblrd		*+
 15926  004912  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 15927  004916  0009               	tblrd		*+
 15928  004918  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 15929  00491C  502D               	movf	??_lcd_draw_string^0,w,c
 15930  00491E  2623               	addwf	lcd_draw_string@x^0,f,c
 15931  004920  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 15932  004922  2224               	addwfc	(lcd_draw_string@x+1)^0,f,c
 15933  004924                     
 15934                           ;lib_ili9341.c: 395:         pS++;
 15935  004924  4A27               	infsnz	lcd_draw_string@pS^0,f,c
 15936  004926  2A28               	incf	(lcd_draw_string@pS+1)^0,f,c
 15937  004928                     l6797:
 15938                           
 15939                           ;lib_ili9341.c: 383:     while(*pS)
 15940  004928  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 15941  00492C  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 15942  004930  0E00               	movlw	low (__mediumconst shr (0+16))
 15943  004932  6EF8               	movwf	tblptru,c
 15944  004934  0E0E               	movlw	(high __ramtop+-1)
 15945  004936  64F7               	cpfsgt	tblptrh,c
 15946  004938  D003               	bra	u8117
 15947  00493A  0008               	tblrd		*
 15948  00493C  50F5               	movf	tablat,w,c
 15949  00493E  D005               	bra	u8110
 15950  004940                     u8117:
 15951  004940  CFF6 FFE1          	movff	tblptrl,fsr1l
 15952  004944  CFF7 FFE2          	movff	tblptrh,fsr1h
 15953  004948  50E7               	movf	indf1,w,c
 15954  00494A                     u8110:
 15955  00494A  0900               	iorlw	0
 15956  00494C  A4D8               	btfss	status,2,c
 15957  00494E  EFAB  F024         	goto	u8121
 15958  004952  EFAD  F024         	goto	u8120
 15959  004956                     u8121:
 15960  004956  EF17  F024         	goto	l6783
 15961  00495A                     u8120:
 15962  00495A  0012               	return		;funcret
 15963  00495C                     __end_of_lcd_draw_string:
 15964                           	opt callstack 0
 15965                           
 15966 ;; *************** function _lcd_draw_char *****************
 15967 ;; Defined at:
 15968 ;;		line 355 in file "lib_ili9341.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  x               2   12[COMRAM] unsigned short 
 15971 ;;  y               2   14[COMRAM] unsigned short 
 15972 ;;  fIndex          2   16[COMRAM] unsigned short 
 15973 ;;  fg_color        2   18[COMRAM] unsigned short 
 15974 ;;  bg_color        2   20[COMRAM] unsigned short 
 15975 ;; Auto vars:     Size  Location     Type
 15976 ;;  i               1   33[COMRAM] unsigned char 
 15977 ;;  k               1   32[COMRAM] unsigned char 
 15978 ;;  j               1   31[COMRAM] unsigned char 
 15979 ;; Return value:  Size  Location     Type
 15980 ;;                  1    wreg      void 
 15981 ;; Registers used:
 15982 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15983 ;; Tracked objects:
 15984 ;;		On entry : 0/0
 15985 ;;		On exit  : 0/0
 15986 ;;		Unchanged: 0/0
 15987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15988 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15989 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15990 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;Total ram usage:       22 bytes
 15993 ;; Hardware stack levels used:    1
 15994 ;; Hardware stack levels required when called:    8
 15995 ;; This function calls:
 15996 ;;		_lcd_draw_pixel
 15997 ;;		_lcd_set_cursor
 15998 ;; This function is called by:
 15999 ;;		_lcd_draw_string
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text49
 16004  00454C                     __ptext49:
 16005                           	opt callstack 0
 16006  00454C                     _lcd_draw_char:
 16007                           	opt callstack 21
 16008  00454C                     
 16009                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 16010  00454C  0E00               	movlw	0
 16011  00454E  6E20               	movwf	lcd_draw_char@j^0,c
 16012  004550  EF46  F023         	goto	l6511
 16013  004554                     l6481:
 16014                           
 16015                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 16016  004554  90D8               	bcf	status,0,c
 16017  004556  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16018  004558  6EF6               	movwf	tblptrl,c
 16019  00455A  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16020  00455C  6EF7               	movwf	tblptrh,c
 16021  00455E  0EBD               	movlw	low _font
 16022  004560  26F6               	addwf	tblptrl,f,c
 16023  004562  0EF1               	movlw	high _font
 16024  004564  22F7               	addwfc	tblptrh,f,c
 16025  004566                     	if	1	;There are 3 active tblptr bytes
 16026  004566  6AF8               	clrf	tblptru,c
 16027  004568  0E00               	movlw	low (__mediumconst shr (0+16))
 16028  00456A  22F8               	addwfc	tblptru,f,c
 16029  00456C                     	endif
 16030  00456C  0009               	tblrd		*+
 16031  00456E  CFF5 F017          	movff	tablat,??_lcd_draw_char
 16032  004572  0009               	tblrd		*+
 16033  004574  CFF5 F018          	movff	tablat,??_lcd_draw_char+1
 16034  004578  5020               	movf	lcd_draw_char@j^0,w,c
 16035  00457A  5E17               	subwf	??_lcd_draw_char^0,f,c
 16036  00457C  0E00               	movlw	0
 16037  00457E  5A18               	subwfb	(??_lcd_draw_char+1)^0,f,c
 16038  004580  500D               	movf	lcd_draw_char@x^0,w,c
 16039  004582  2417               	addwf	??_lcd_draw_char^0,w,c
 16040  004584  6E09               	movwf	lcd_set_cursor@x^0,c
 16041  004586  500E               	movf	(lcd_draw_char@x+1)^0,w,c
 16042  004588  2018               	addwfc	(??_lcd_draw_char+1)^0,w,c
 16043  00458A  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 16044  00458C  C00F  F00B         	movff	lcd_draw_char@y,lcd_set_cursor@y
 16045  004590  C010  F00C         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 16046  004594  ECBC  F02C         	call	_lcd_set_cursor	;wreg free
 16047  004598                     
 16048                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 16049  004598  0E00               	movlw	0
 16050  00459A  6E21               	movwf	lcd_draw_char@k^0,c
 16051  00459C                     l6489:
 16052                           
 16053                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 16054  00459C  0E00               	movlw	0
 16055  00459E  6E22               	movwf	lcd_draw_char@i^0,c
 16056  0045A0                     l6495:
 16057                           
 16058                           ;lib_ili9341.c: 366:             { if( font[ (fIndex + ((font[fIndex]) << 1)) - (j<<1) -
      +                           k ] & (0x80 >> i) )
 16059  0045A0  5020               	movf	lcd_draw_char@j^0,w,c
 16060  0045A2  6E17               	movwf	??_lcd_draw_char^0,c
 16061  0045A4  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 16062  0045A6  90D8               	bcf	status,0,c
 16063  0045A8  3617               	rlcf	??_lcd_draw_char^0,f,c
 16064  0045AA  3618               	rlcf	(??_lcd_draw_char+1)^0,f,c
 16065  0045AC  90D8               	bcf	status,0,c
 16066  0045AE  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16067  0045B0  6EF6               	movwf	tblptrl,c
 16068  0045B2  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16069  0045B4  6EF7               	movwf	tblptrh,c
 16070  0045B6  0EBD               	movlw	low _font
 16071  0045B8  26F6               	addwf	tblptrl,f,c
 16072  0045BA  0EF1               	movlw	high _font
 16073  0045BC  22F7               	addwfc	tblptrh,f,c
 16074  0045BE                     	if	1	;There are 3 active tblptr bytes
 16075  0045BE  6AF8               	clrf	tblptru,c
 16076  0045C0  0E00               	movlw	low (__mediumconst shr (0+16))
 16077  0045C2  22F8               	addwfc	tblptru,f,c
 16078  0045C4                     	endif
 16079  0045C4  0009               	tblrd		*+
 16080  0045C6  CFF5 F019          	movff	tablat,??_lcd_draw_char+2
 16081  0045CA  0009               	tblrd		*+
 16082  0045CC  CFF5 F01A          	movff	tablat,??_lcd_draw_char+3
 16083  0045D0  90D8               	bcf	status,0,c
 16084  0045D2  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16085  0045D4  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16086  0045D6  5017               	movf	??_lcd_draw_char^0,w,c
 16087  0045D8  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 16088  0045DA  5018               	movf	(??_lcd_draw_char+1)^0,w,c
 16089  0045DC  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16090  0045DE  5021               	movf	lcd_draw_char@k^0,w,c
 16091  0045E0  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 16092  0045E2  0E00               	movlw	0
 16093  0045E4  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16094  0045E6  5011               	movf	lcd_draw_char@fIndex^0,w,c
 16095  0045E8  2619               	addwf	(??_lcd_draw_char+2)^0,f,c
 16096  0045EA  5012               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 16097  0045EC  221A               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16098  0045EE  90D8               	bcf	status,0,c
 16099  0045F0  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16100  0045F2  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16101  0045F4  0EBD               	movlw	low _font
 16102  0045F6  2419               	addwf	(??_lcd_draw_char+2)^0,w,c
 16103  0045F8  6EF6               	movwf	tblptrl,c
 16104  0045FA  0EF1               	movlw	high _font
 16105  0045FC  201A               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16106  0045FE  6EF7               	movwf	tblptrh,c
 16107  004600                     	if	1	;There are 3 active tblptr bytes
 16108  004600  6AF8               	clrf	tblptru,c
 16109  004602  0E00               	movlw	low (__mediumconst shr (0+16))
 16110  004604  22F8               	addwfc	tblptru,f,c
 16111  004606                     	endif
 16112  004606  0009               	tblrd		*+
 16113  004608  CFF5 F01B          	movff	tablat,??_lcd_draw_char+4
 16114  00460C  0009               	tblrd		*+
 16115  00460E  CFF5 F01C          	movff	tablat,??_lcd_draw_char+5
 16116  004612  C022  F01D         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16117  004616  0E80               	movlw	128
 16118  004618  6E1E               	movwf	(??_lcd_draw_char+7)^0,c
 16119  00461A  0E00               	movlw	0
 16120  00461C  6E1F               	movwf	(??_lcd_draw_char+8)^0,c
 16121  00461E  2A1D               	incf	(??_lcd_draw_char+6)^0,f,c
 16122  004620  EF15  F023         	goto	u7954
 16123  004624                     u7955:
 16124  004624  341F               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16125  004626  321F               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16126  004628  321E               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16127  00462A                     u7954:
 16128  00462A  2E1D               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16129  00462C  EF12  F023         	goto	u7955
 16130  004630  501B               	movf	(??_lcd_draw_char+4)^0,w,c
 16131  004632  161E               	andwf	(??_lcd_draw_char+7)^0,f,c
 16132  004634  501C               	movf	(??_lcd_draw_char+5)^0,w,c
 16133  004636  161F               	andwf	(??_lcd_draw_char+8)^0,f,c
 16134  004638  501E               	movf	(??_lcd_draw_char+7)^0,w,c
 16135  00463A  101F               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16136  00463C  B4D8               	btfsc	status,2,c
 16137  00463E  EF23  F023         	goto	u7961
 16138  004642  EF25  F023         	goto	u7960
 16139  004646                     u7961:
 16140  004646  EF2D  F023         	goto	l6499
 16141  00464A                     u7960:
 16142  00464A                     
 16143                           ;lib_ili9341.c: 367:                 {;lib_ili9341.c: 368:                     lcd_draw_
      +                          pixel(fg_color);
 16144  00464A  C013  F007         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16145  00464E  C014  F008         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16146  004652  EC65  F02E         	call	_lcd_draw_pixel	;wreg free
 16147                           
 16148                           ;lib_ili9341.c: 369:                 }
 16149  004656  EF33  F023         	goto	l6501
 16150  00465A                     l6499:
 16151                           
 16152                           ;lib_ili9341.c: 371:                 {;lib_ili9341.c: 372:                     lcd_draw_
      +                          pixel(bg_color);
 16153  00465A  C015  F007         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16154  00465E  C016  F008         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16155  004662  EC65  F02E         	call	_lcd_draw_pixel	;wreg free
 16156  004666                     l6501:
 16157                           
 16158                           ;lib_ili9341.c: 374:             }
 16159  004666  2A22               	incf	lcd_draw_char@i^0,f,c
 16160  004668  0E07               	movlw	7
 16161  00466A  6422               	cpfsgt	lcd_draw_char@i^0,c
 16162  00466C  EF3A  F023         	goto	u7971
 16163  004670  EF3C  F023         	goto	u7970
 16164  004674                     u7971:
 16165  004674  EFD0  F022         	goto	l6495
 16166  004678                     u7970:
 16167  004678                     
 16168                           ;lib_ili9341.c: 375:         }
 16169  004678  2A21               	incf	lcd_draw_char@k^0,f,c
 16170  00467A  0E01               	movlw	1
 16171  00467C  6421               	cpfsgt	lcd_draw_char@k^0,c
 16172  00467E  EF43  F023         	goto	u7981
 16173  004682  EF45  F023         	goto	u7980
 16174  004686                     u7981:
 16175  004686  EFCE  F022         	goto	l6489
 16176  00468A                     u7980:
 16177  00468A                     
 16178                           ;lib_ili9341.c: 376:     }
 16179  00468A  2A20               	incf	lcd_draw_char@j^0,f,c
 16180  00468C                     l6511:
 16181  00468C  90D8               	bcf	status,0,c
 16182  00468E  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16183  004690  6EF6               	movwf	tblptrl,c
 16184  004692  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16185  004694  6EF7               	movwf	tblptrh,c
 16186  004696  0EBD               	movlw	low _font
 16187  004698  26F6               	addwf	tblptrl,f,c
 16188  00469A  0EF1               	movlw	high _font
 16189  00469C  22F7               	addwfc	tblptrh,f,c
 16190  00469E                     	if	1	;There are 3 active tblptr bytes
 16191  00469E  6AF8               	clrf	tblptru,c
 16192  0046A0  0E00               	movlw	low (__mediumconst shr (0+16))
 16193  0046A2  22F8               	addwfc	tblptru,f,c
 16194  0046A4                     	endif
 16195  0046A4  5020               	movf	lcd_draw_char@j^0,w,c
 16196  0046A6  6E17               	movwf	??_lcd_draw_char^0,c
 16197  0046A8  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 16198  0046AA  0009               	tblrd		*+
 16199  0046AC  50F5               	movf	tablat,w,c
 16200  0046AE  5C17               	subwf	??_lcd_draw_char^0,w,c
 16201  0046B0  0009               	tblrd		*+
 16202  0046B2  50F5               	movf	tablat,w,c
 16203  0046B4  5818               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16204  0046B6  A0D8               	btfss	status,0,c
 16205  0046B8  EF60  F023         	goto	u7991
 16206  0046BC  EF62  F023         	goto	u7990
 16207  0046C0                     u7991:
 16208  0046C0  EFAA  F022         	goto	l6481
 16209  0046C4                     u7990:
 16210  0046C4  0012               	return		;funcret
 16211  0046C6                     __end_of_lcd_draw_char:
 16212                           	opt callstack 0
 16213                           
 16214 ;; *************** function _lcd_set_cursor *****************
 16215 ;; Defined at:
 16216 ;;		line 144 in file "lib_ili9341.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  x               2    8[COMRAM] unsigned short 
 16219 ;;  y               2   10[COMRAM] unsigned short 
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;		None
 16222 ;; Return value:  Size  Location     Type
 16223 ;;                  1    wreg      unsigned char 
 16224 ;; Registers used:
 16225 ;;		wreg, status,2, status,0, cstack
 16226 ;; Tracked objects:
 16227 ;;		On entry : 0/0
 16228 ;;		On exit  : 0/0
 16229 ;;		Unchanged: 0/0
 16230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16234 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16235 ;;Total ram usage:        4 bytes
 16236 ;; Hardware stack levels used:    1
 16237 ;; Hardware stack levels required when called:    7
 16238 ;; This function calls:
 16239 ;;		_lcd_set_cursor_x
 16240 ;;		_lcd_set_cursor_y
 16241 ;; This function is called by:
 16242 ;;		_lcd_fill
 16243 ;;		_lcd_draw_char
 16244 ;;		_lcd_draw_pixel_at
 16245 ;;		_lcd_fill_rect
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249                           	psect	text50
 16250  005978                     __ptext50:
 16251                           	opt callstack 0
 16252  005978                     _lcd_set_cursor:
 16253                           	opt callstack 21
 16254  005978                     
 16255                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16256  005978  C009  F007         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16257  00597C  C00A  F008         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16258  005980  EC30  F02C         	call	_lcd_set_cursor_x	;wreg free
 16259  005984  0900               	iorlw	0
 16260  005986  A4D8               	btfss	status,2,c
 16261  005988  EFC8  F02C         	goto	u7851
 16262  00598C  EFCA  F02C         	goto	u7850
 16263  005990                     u7851:
 16264  005990  EFD8  F02C         	goto	l6395
 16265  005994                     u7850:
 16266  005994  C00B  F007         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16267  005998  C00C  F008         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16268  00599C  EC0C  F02C         	call	_lcd_set_cursor_y	;wreg free
 16269  0059A0  0900               	iorlw	0
 16270  0059A2  B4D8               	btfsc	status,2,c
 16271  0059A4  EFD6  F02C         	goto	u7861
 16272  0059A8  EFD8  F02C         	goto	u7860
 16273  0059AC                     u7861:
 16274  0059AC  EFDB  F02C         	goto	l6399
 16275  0059B0                     u7860:
 16276  0059B0                     l6395:
 16277                           
 16278                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 16279  0059B0  0E01               	movlw	1
 16280  0059B2  EFDC  F02C         	goto	l350
 16281  0059B6                     l6399:
 16282                           
 16283                           ;lib_ili9341.c: 151:     return 0;
 16284  0059B6  0E00               	movlw	0
 16285  0059B8                     l350:
 16286  0059B8  0012               	return		;funcret
 16287  0059BA                     __end_of_lcd_set_cursor:
 16288                           	opt callstack 0
 16289                           
 16290 ;; *************** function _lcd_set_cursor_y *****************
 16291 ;; Defined at:
 16292 ;;		line 170 in file "lib_ili9341.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;  y               2    6[COMRAM] unsigned short 
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;		None
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      unsigned char 
 16299 ;; Registers used:
 16300 ;;		wreg, status,2, status,0, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;Total ram usage:        2 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; Hardware stack levels required when called:    6
 16313 ;; This function calls:
 16314 ;;		_lcd_send
 16315 ;; This function is called by:
 16316 ;;		_lcd_set_cursor
 16317 ;; This function uses a non-reentrant model
 16318 ;;
 16319                           
 16320                           	psect	text51
 16321  005818                     __ptext51:
 16322                           	opt callstack 0
 16323  005818                     _lcd_set_cursor_y:
 16324                           	opt callstack 21
 16325  005818                     
 16326                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 16327  005818  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16328  00581A  E109               	bnz	u7290
 16329  00581C  0EF0               	movlw	240
 16330  00581E  5C07               	subwf	lcd_set_cursor_y@y^0,w,c
 16331  005820  A0D8               	btfss	status,0,c
 16332  005822  EF15  F02C         	goto	u7291
 16333  005826  EF17  F02C         	goto	u7290
 16334  00582A                     u7291:
 16335  00582A  EF1A  F02C         	goto	l6005
 16336  00582E                     u7290:
 16337  00582E                     
 16338                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 16339  00582E  0E01               	movlw	1
 16340  005830  EF2F  F02C         	goto	l358
 16341  005834                     l6005:
 16342                           
 16343                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 16344  005834  0E2A               	movlw	42
 16345  005836  6E05               	movwf	lcd_send@value^0,c
 16346  005838  0E00               	movlw	0
 16347  00583A  EC4D  F02E         	call	_lcd_send
 16348                           
 16349                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 16350  00583E  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16351  005840  6E05               	movwf	lcd_send@value^0,c
 16352  005842  0E01               	movlw	1
 16353  005844  EC4D  F02E         	call	_lcd_send
 16354                           
 16355                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 16356  005848  C007  F005         	movff	lcd_set_cursor_y@y,lcd_send@value
 16357  00584C  0E01               	movlw	1
 16358  00584E  EC4D  F02E         	call	_lcd_send
 16359                           
 16360                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 16361  005852  0E2C               	movlw	44
 16362  005854  6E05               	movwf	lcd_send@value^0,c
 16363  005856  0E00               	movlw	0
 16364  005858  EC4D  F02E         	call	_lcd_send
 16365  00585C                     
 16366                           ;lib_ili9341.c: 182:     return 0;
 16367  00585C  0E00               	movlw	0
 16368  00585E                     l358:
 16369  00585E  0012               	return		;funcret
 16370  005860                     __end_of_lcd_set_cursor_y:
 16371                           	opt callstack 0
 16372                           
 16373 ;; *************** function _lcd_set_cursor_x *****************
 16374 ;; Defined at:
 16375 ;;		line 155 in file "lib_ili9341.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;  x               2    6[COMRAM] unsigned short 
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;		None
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      unsigned char 
 16382 ;; Registers used:
 16383 ;;		wreg, status,2, status,0, cstack
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16393 ;;Total ram usage:        2 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    6
 16396 ;; This function calls:
 16397 ;;		_lcd_send
 16398 ;; This function is called by:
 16399 ;;		_lcd_set_cursor
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           	psect	text52
 16404  005860                     __ptext52:
 16405                           	opt callstack 0
 16406  005860                     _lcd_set_cursor_x:
 16407                           	opt callstack 21
 16408  005860                     
 16409                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 16410  005860  0E40               	movlw	64
 16411  005862  5C07               	subwf	lcd_set_cursor_x@x^0,w,c
 16412  005864  0E01               	movlw	1
 16413  005866  5808               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16414  005868  A0D8               	btfss	status,0,c
 16415  00586A  EF39  F02C         	goto	u7281
 16416  00586E  EF3B  F02C         	goto	u7280
 16417  005872                     u7281:
 16418  005872  EF3E  F02C         	goto	l5993
 16419  005876                     u7280:
 16420  005876                     
 16421                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 16422  005876  0E01               	movlw	1
 16423  005878  EF53  F02C         	goto	l354
 16424  00587C                     l5993:
 16425                           
 16426                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 16427  00587C  0E2B               	movlw	43
 16428  00587E  6E05               	movwf	lcd_send@value^0,c
 16429  005880  0E00               	movlw	0
 16430  005882  EC4D  F02E         	call	_lcd_send
 16431                           
 16432                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 16433  005886  5008               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16434  005888  6E05               	movwf	lcd_send@value^0,c
 16435  00588A  0E01               	movlw	1
 16436  00588C  EC4D  F02E         	call	_lcd_send
 16437                           
 16438                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 16439  005890  C007  F005         	movff	lcd_set_cursor_x@x,lcd_send@value
 16440  005894  0E01               	movlw	1
 16441  005896  EC4D  F02E         	call	_lcd_send
 16442                           
 16443                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 16444  00589A  0E2C               	movlw	44
 16445  00589C  6E05               	movwf	lcd_send@value^0,c
 16446  00589E  0E00               	movlw	0
 16447  0058A0  EC4D  F02E         	call	_lcd_send
 16448  0058A4                     
 16449                           ;lib_ili9341.c: 167:     return 0;
 16450  0058A4  0E00               	movlw	0
 16451  0058A6                     l354:
 16452  0058A6  0012               	return		;funcret
 16453  0058A8                     __end_of_lcd_set_cursor_x:
 16454                           	opt callstack 0
 16455                           
 16456 ;; *************** function _lcd_draw_pixel *****************
 16457 ;; Defined at:
 16458 ;;		line 185 in file "lib_ili9341.c"
 16459 ;; Parameters:    Size  Location     Type
 16460 ;;  color           2    6[COMRAM] unsigned short 
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;		None
 16463 ;; Return value:  Size  Location     Type
 16464 ;;                  1    wreg      unsigned char 
 16465 ;; Registers used:
 16466 ;;		wreg, status,2, cstack
 16467 ;; Tracked objects:
 16468 ;;		On entry : 0/0
 16469 ;;		On exit  : 0/0
 16470 ;;		Unchanged: 0/0
 16471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16476 ;;Total ram usage:        2 bytes
 16477 ;; Hardware stack levels used:    1
 16478 ;; Hardware stack levels required when called:    6
 16479 ;; This function calls:
 16480 ;;		_lcd_send
 16481 ;; This function is called by:
 16482 ;;		_lcd_fill
 16483 ;;		_lcd_draw_char
 16484 ;;		_lcd_draw_pixel_at
 16485 ;;		_lcd_fill_rect
 16486 ;; This function uses a non-reentrant model
 16487 ;;
 16488                           
 16489                           	psect	text53
 16490  005CCA                     __ptext53:
 16491                           	opt callstack 0
 16492  005CCA                     _lcd_draw_pixel:
 16493                           	opt callstack 22
 16494  005CCA                     
 16495                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 16496  005CCA  5008               	movf	(lcd_draw_pixel@color+1)^0,w,c
 16497  005CCC  6E05               	movwf	lcd_send@value^0,c
 16498  005CCE  0E01               	movlw	1
 16499  005CD0  EC4D  F02E         	call	_lcd_send
 16500                           
 16501                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 16502  005CD4  C007  F005         	movff	lcd_draw_pixel@color,lcd_send@value
 16503  005CD8  0E01               	movlw	1
 16504  005CDA  EC4D  F02E         	call	_lcd_send
 16505  005CDE  0012               	return		;funcret
 16506  005CE0                     __end_of_lcd_draw_pixel:
 16507                           	opt callstack 0
 16508                           
 16509 ;; *************** function _lcd_send *****************
 16510 ;; Defined at:
 16511 ;;		line 134 in file "lib_ili9341.c"
 16512 ;; Parameters:    Size  Location     Type
 16513 ;;  dc              1    wreg     _Bool 
 16514 ;;  value           1    4[COMRAM] unsigned char 
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;  dc              1    5[COMRAM] _Bool 
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  1    wreg      void 
 16519 ;; Registers used:
 16520 ;;		wreg, status,2, cstack
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16530 ;;Total ram usage:        2 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; Hardware stack levels required when called:    5
 16533 ;; This function calls:
 16534 ;;		_SPI_ExchangeByte
 16535 ;; This function is called by:
 16536 ;;		_lcd_init
 16537 ;;		_lcd_set_cursor_x
 16538 ;;		_lcd_set_cursor_y
 16539 ;;		_lcd_draw_pixel
 16540 ;; This function uses a non-reentrant model
 16541 ;;
 16542                           
 16543                           	psect	text54
 16544  005C9A                     __ptext54:
 16545                           	opt callstack 0
 16546  005C9A                     _lcd_send:
 16547                           	opt callstack 24
 16548                           
 16549                           ;incstack = 0
 16550                           ;lcd_send@dc stored from wreg
 16551  005C9A  6E06               	movwf	lcd_send@dc^0,c
 16552  005C9C                     
 16553                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 16554  005C9C  B006               	btfsc	lcd_send@dc^0,0,c
 16555  005C9E  D002               	bra	u6025
 16556  005CA0  908D               	bcf	141,0,c	;volatile
 16557  005CA2  D001               	bra	u6026
 16558  005CA4                     u6025:
 16559  005CA4  808D               	bsf	141,0,c	;volatile
 16560  005CA6                     u6026:
 16561  005CA6                     
 16562                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 16563  005CA6  928D               	bcf	141,1,c	;volatile
 16564  005CA8                     
 16565                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 16566  005CA8  5005               	movf	lcd_send@value^0,w,c
 16567  005CAA  EC33  F02E         	call	_SPI_ExchangeByte
 16568  005CAE                     
 16569                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 16570  005CAE  828D               	bsf	141,1,c	;volatile
 16571  005CB0  0012               	return		;funcret
 16572  005CB2                     __end_of_lcd_send:
 16573                           	opt callstack 0
 16574                           
 16575 ;; *************** function _SPI_ExchangeByte *****************
 16576 ;; Defined at:
 16577 ;;		line 92 in file "mcc_generated_files/spi.c"
 16578 ;; Parameters:    Size  Location     Type
 16579 ;;  data            1    wreg     unsigned char 
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;  data            1    3[COMRAM] unsigned char 
 16582 ;; Return value:  Size  Location     Type
 16583 ;;                  1    wreg      unsigned char 
 16584 ;; Registers used:
 16585 ;;		wreg, status,2
 16586 ;; Tracked objects:
 16587 ;;		On entry : 0/0
 16588 ;;		On exit  : 0/0
 16589 ;;		Unchanged: 0/0
 16590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16595 ;;Total ram usage:        1 bytes
 16596 ;; Hardware stack levels used:    1
 16597 ;; Hardware stack levels required when called:    4
 16598 ;; This function calls:
 16599 ;;		Nothing
 16600 ;; This function is called by:
 16601 ;;		_lcd_send
 16602 ;;		_SPI_WriteBlock
 16603 ;;		_SPI_ReadBlock
 16604 ;; This function uses a non-reentrant model
 16605 ;;
 16606                           
 16607                           	psect	text55
 16608  005C66                     __ptext55:
 16609                           	opt callstack 0
 16610  005C66                     _SPI_ExchangeByte:
 16611                           	opt callstack 24
 16612                           
 16613                           ;incstack = 0
 16614                           ;SPI_ExchangeByte@data stored from wreg
 16615  005C66  6E04               	movwf	SPI_ExchangeByte@data^0,c
 16616  005C68                     
 16617                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 16618  005C68  C004  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 16619  005C6C                     l130:
 16620  005C6C  A69E               	btfss	158,3,c	;volatile
 16621  005C6E  EF3B  F02E         	goto	u4751
 16622  005C72  EF3D  F02E         	goto	u4750
 16623  005C76                     u4751:
 16624  005C76  EF36  F02E         	goto	l130
 16625  005C7A                     u4750:
 16626  005C7A                     
 16627                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 16628  005C7A  969E               	bcf	158,3,c	;volatile
 16629                           
 16630                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 16631  005C7C  50C9               	movf	201,w,c	;volatile
 16632  005C7E  0012               	return		;funcret
 16633  005C80                     __end_of_SPI_ExchangeByte:
 16634                           	opt callstack 0
 16635                           
 16636 ;; *************** function ___xxtofl *****************
 16637 ;; Defined at:
 16638 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 16639 ;; Parameters:    Size  Location     Type
 16640 ;;  sign            1    wreg     unsigned char 
 16641 ;;  val             4    3[COMRAM] long 
 16642 ;; Auto vars:     Size  Location     Type
 16643 ;;  sign            1   11[COMRAM] unsigned char 
 16644 ;;  arg             4   13[COMRAM] unsigned long 
 16645 ;;  exp             1   12[COMRAM] unsigned char 
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  4    3[COMRAM] unsigned char 
 16648 ;; Registers used:
 16649 ;;		wreg, status,2, status,0
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16656 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16658 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16659 ;;Total ram usage:       14 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:    4
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_main
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text56
 16670  003EF0                     __ptext56:
 16671                           	opt callstack 0
 16672  003EF0                     ___xxtofl:
 16673                           	opt callstack 26
 16674                           
 16675                           ;incstack = 0
 16676                           ;___xxtofl@sign stored from wreg
 16677  003EF0  6E0C               	movwf	___xxtofl@sign^0,c
 16678  003EF2  500C               	movf	___xxtofl@sign^0,w,c
 16679  003EF4  B4D8               	btfsc	status,2,c
 16680  003EF6  EF7F  F01F         	goto	u8211
 16681  003EFA  EF81  F01F         	goto	u8210
 16682  003EFE                     u8211:
 16683  003EFE  EFA3  F01F         	goto	l1453
 16684  003F02                     u8210:
 16685  003F02  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 16686  003F04  EF88  F01F         	goto	u8220
 16687  003F08  EF86  F01F         	goto	u8221
 16688  003F0C                     u8221:
 16689  003F0C  EFA3  F01F         	goto	l1453
 16690  003F10                     u8220:
 16691  003F10  C004  F008         	movff	___xxtofl@val,??___xxtofl
 16692  003F14  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
 16693  003F18  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
 16694  003F1C  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
 16695  003F20  1E08               	comf	??___xxtofl^0,f,c
 16696  003F22  1E09               	comf	(??___xxtofl+1)^0,f,c
 16697  003F24  1E0A               	comf	(??___xxtofl+2)^0,f,c
 16698  003F26  1E0B               	comf	(??___xxtofl+3)^0,f,c
 16699  003F28  2A08               	incf	??___xxtofl^0,f,c
 16700  003F2A  0E00               	movlw	0
 16701  003F2C  2209               	addwfc	(??___xxtofl+1)^0,f,c
 16702  003F2E  220A               	addwfc	(??___xxtofl+2)^0,f,c
 16703  003F30  220B               	addwfc	(??___xxtofl+3)^0,f,c
 16704  003F32  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
 16705  003F36  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
 16706  003F3A  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
 16707  003F3E  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
 16708  003F42  EFAB  F01F         	goto	l6849
 16709  003F46                     l1453:
 16710  003F46  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
 16711  003F4A  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 16712  003F4E  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
 16713  003F52  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
 16714  003F56                     l6849:
 16715  003F56  5004               	movf	___xxtofl@val^0,w,c
 16716  003F58  1005               	iorwf	(___xxtofl@val+1)^0,w,c
 16717  003F5A  1006               	iorwf	(___xxtofl@val+2)^0,w,c
 16718  003F5C  1007               	iorwf	(___xxtofl@val+3)^0,w,c
 16719  003F5E  A4D8               	btfss	status,2,c
 16720  003F60  EFB4  F01F         	goto	u8231
 16721  003F64  EFB6  F01F         	goto	u8230
 16722  003F68                     u8231:
 16723  003F68  EFC0  F01F         	goto	l6855
 16724  003F6C                     u8230:
 16725  003F6C  0E00               	movlw	0
 16726  003F6E  6E04               	movwf	?___xxtofl^0,c
 16727  003F70  0E00               	movlw	0
 16728  003F72  6E05               	movwf	(?___xxtofl+1)^0,c
 16729  003F74  0E00               	movlw	0
 16730  003F76  6E06               	movwf	(?___xxtofl+2)^0,c
 16731  003F78  0E00               	movlw	0
 16732  003F7A  6E07               	movwf	(?___xxtofl+3)^0,c
 16733  003F7C  EF51  F020         	goto	l1456
 16734  003F80                     l6855:
 16735  003F80  0E96               	movlw	150
 16736  003F82  6E0D               	movwf	___xxtofl@exp^0,c
 16737  003F84  EFCA  F01F         	goto	l6859
 16738  003F88                     l6857:
 16739  003F88  2A0D               	incf	___xxtofl@exp^0,f,c
 16740  003F8A  90D8               	bcf	status,0,c
 16741  003F8C  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 16742  003F8E  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 16743  003F90  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 16744  003F92  320E               	rrcf	___xxtofl@arg^0,f,c
 16745  003F94                     l6859:
 16746  003F94  0E00               	movlw	0
 16747  003F96  140E               	andwf	___xxtofl@arg^0,w,c
 16748  003F98  6E08               	movwf	??___xxtofl^0,c
 16749  003F9A  0E00               	movlw	0
 16750  003F9C  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 16751  003F9E  6E09               	movwf	(??___xxtofl+1)^0,c
 16752  003FA0  0E00               	movlw	0
 16753  003FA2  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 16754  003FA4  6E0A               	movwf	(??___xxtofl+2)^0,c
 16755  003FA6  0EFE               	movlw	254
 16756  003FA8  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 16757  003FAA  6E0B               	movwf	(??___xxtofl+3)^0,c
 16758  003FAC  5008               	movf	??___xxtofl^0,w,c
 16759  003FAE  1009               	iorwf	(??___xxtofl+1)^0,w,c
 16760  003FB0  100A               	iorwf	(??___xxtofl+2)^0,w,c
 16761  003FB2  100B               	iorwf	(??___xxtofl+3)^0,w,c
 16762  003FB4  A4D8               	btfss	status,2,c
 16763  003FB6  EFDF  F01F         	goto	u8241
 16764  003FBA  EFE1  F01F         	goto	u8240
 16765  003FBE                     u8241:
 16766  003FBE  EFC4  F01F         	goto	l6857
 16767  003FC2                     u8240:
 16768  003FC2  EFEF  F01F         	goto	l1460
 16769  003FC6                     l6861:
 16770  003FC6  2A0D               	incf	___xxtofl@exp^0,f,c
 16771  003FC8  0E01               	movlw	1
 16772  003FCA  260E               	addwf	___xxtofl@arg^0,f,c
 16773  003FCC  0E00               	movlw	0
 16774  003FCE  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
 16775  003FD0  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
 16776  003FD2  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
 16777  003FD4  90D8               	bcf	status,0,c
 16778  003FD6  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 16779  003FD8  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 16780  003FDA  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 16781  003FDC  320E               	rrcf	___xxtofl@arg^0,f,c
 16782  003FDE                     l1460:
 16783  003FDE  0E00               	movlw	0
 16784  003FE0  140E               	andwf	___xxtofl@arg^0,w,c
 16785  003FE2  6E08               	movwf	??___xxtofl^0,c
 16786  003FE4  0E00               	movlw	0
 16787  003FE6  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 16788  003FE8  6E09               	movwf	(??___xxtofl+1)^0,c
 16789  003FEA  0E00               	movlw	0
 16790  003FEC  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 16791  003FEE  6E0A               	movwf	(??___xxtofl+2)^0,c
 16792  003FF0  0EFF               	movlw	255
 16793  003FF2  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 16794  003FF4  6E0B               	movwf	(??___xxtofl+3)^0,c
 16795  003FF6  5008               	movf	??___xxtofl^0,w,c
 16796  003FF8  1009               	iorwf	(??___xxtofl+1)^0,w,c
 16797  003FFA  100A               	iorwf	(??___xxtofl+2)^0,w,c
 16798  003FFC  100B               	iorwf	(??___xxtofl+3)^0,w,c
 16799  003FFE  A4D8               	btfss	status,2,c
 16800  004000  EF04  F020         	goto	u8251
 16801  004004  EF06  F020         	goto	u8250
 16802  004008                     u8251:
 16803  004008  EFE3  F01F         	goto	l6861
 16804  00400C                     u8250:
 16805  00400C  EF0E  F020         	goto	l6869
 16806  004010                     l6867:
 16807  004010  060D               	decf	___xxtofl@exp^0,f,c
 16808  004012  90D8               	bcf	status,0,c
 16809  004014  360E               	rlcf	___xxtofl@arg^0,f,c
 16810  004016  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
 16811  004018  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
 16812  00401A  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
 16813  00401C                     l6869:
 16814  00401C  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
 16815  00401E  EF13  F020         	goto	u8261
 16816  004022  EF15  F020         	goto	u8260
 16817  004026                     u8261:
 16818  004026  EF1D  F020         	goto	l1467
 16819  00402A                     u8260:
 16820  00402A  0E02               	movlw	2
 16821  00402C  600D               	cpfslt	___xxtofl@exp^0,c
 16822  00402E  EF1B  F020         	goto	u8271
 16823  004032  EF1D  F020         	goto	u8270
 16824  004036                     u8271:
 16825  004036  EF08  F020         	goto	l6867
 16826  00403A                     u8270:
 16827  00403A                     l1467:
 16828  00403A  B00D               	btfsc	___xxtofl@exp^0,0,c
 16829  00403C  EF22  F020         	goto	u8281
 16830  004040  EF24  F020         	goto	u8280
 16831  004044                     u8281:
 16832  004044  EF25  F020         	goto	l6875
 16833  004048                     u8280:
 16834  004048  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
 16835  00404A                     l6875:
 16836  00404A  90D8               	bcf	status,0,c
 16837  00404C  320D               	rrcf	___xxtofl@exp^0,f,c
 16838  00404E  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
 16839  004052  6A09               	clrf	(??___xxtofl+1)^0,c
 16840  004054  6A0A               	clrf	(??___xxtofl+2)^0,c
 16841  004056  6A0B               	clrf	(??___xxtofl+3)^0,c
 16842  004058  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
 16843  00405C  6A0A               	clrf	(??___xxtofl+2)^0,c
 16844  00405E  6A09               	clrf	(??___xxtofl+1)^0,c
 16845  004060  6A08               	clrf	??___xxtofl^0,c
 16846  004062  5008               	movf	??___xxtofl^0,w,c
 16847  004064  120E               	iorwf	___xxtofl@arg^0,f,c
 16848  004066  5009               	movf	(??___xxtofl+1)^0,w,c
 16849  004068  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
 16850  00406A  500A               	movf	(??___xxtofl+2)^0,w,c
 16851  00406C  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
 16852  00406E  500B               	movf	(??___xxtofl+3)^0,w,c
 16853  004070  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
 16854  004072  500C               	movf	___xxtofl@sign^0,w,c
 16855  004074  B4D8               	btfsc	status,2,c
 16856  004076  EF3F  F020         	goto	u8291
 16857  00407A  EF41  F020         	goto	u8290
 16858  00407E                     u8291:
 16859  00407E  EF49  F020         	goto	l6885
 16860  004082                     u8290:
 16861  004082  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 16862  004084  EF48  F020         	goto	u8300
 16863  004088  EF46  F020         	goto	u8301
 16864  00408C                     u8301:
 16865  00408C  EF49  F020         	goto	l6885
 16866  004090                     u8300:
 16867  004090  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
 16868  004092                     l6885:
 16869  004092  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
 16870  004096  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
 16871  00409A  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
 16872  00409E  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
 16873  0040A2                     l1456:
 16874  0040A2  0012               	return		;funcret
 16875  0040A4                     __end_of___xxtofl:
 16876                           	opt callstack 0
 16877                           
 16878 ;; *************** function _SYSTEM_Initialize *****************
 16879 ;; Defined at:
 16880 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16881 ;; Parameters:    Size  Location     Type
 16882 ;;		None
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;		None
 16885 ;; Return value:  Size  Location     Type
 16886 ;;                  1    wreg      void 
 16887 ;; Registers used:
 16888 ;;		wreg, status,2, status,0, cstack
 16889 ;; Tracked objects:
 16890 ;;		On entry : 0/0
 16891 ;;		On exit  : 0/0
 16892 ;;		Unchanged: 0/0
 16893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;Total ram usage:        0 bytes
 16899 ;; Hardware stack levels used:    1
 16900 ;; Hardware stack levels required when called:    6
 16901 ;; This function calls:
 16902 ;;		_ADC_Initialize
 16903 ;;		_INTERRUPT_Initialize
 16904 ;;		_OSCILLATOR_Initialize
 16905 ;;		_PIN_MANAGER_Initialize
 16906 ;;		_SPI_Initialize
 16907 ;;		_TMR1_Initialize
 16908 ;; This function is called by:
 16909 ;;		_main
 16910 ;; This function uses a non-reentrant model
 16911 ;;
 16912                           
 16913                           	psect	text57
 16914  005C80                     __ptext57:
 16915                           	opt callstack 0
 16916  005C80                     _SYSTEM_Initialize:
 16917                           	opt callstack 24
 16918  005C80                     
 16919                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 16920  005C80  EC96  F02E         	call	_INTERRUPT_Initialize	;wreg free
 16921  005C84                     
 16922                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 16923  005C84  EC7B  F02E         	call	_SPI_Initialize	;wreg free
 16924  005C88                     
 16925                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 16926  005C88  EC77  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
 16927  005C8C                     
 16928                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 16929  005C8C  EC84  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 16930  005C90                     
 16931                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 16932  005C90  EC0A  F02E         	call	_TMR1_Initialize	;wreg free
 16933  005C94                     
 16934                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 16935  005C94  EC70  F02E         	call	_ADC_Initialize	;wreg free
 16936  005C98  0012               	return		;funcret
 16937  005C9A                     __end_of_SYSTEM_Initialize:
 16938                           	opt callstack 0
 16939                           
 16940 ;; *************** function _TMR1_Initialize *****************
 16941 ;; Defined at:
 16942 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 16943 ;; Parameters:    Size  Location     Type
 16944 ;;		None
 16945 ;; Auto vars:     Size  Location     Type
 16946 ;;		None
 16947 ;; Return value:  Size  Location     Type
 16948 ;;                  1    wreg      void 
 16949 ;; Registers used:
 16950 ;;		wreg, status,2, status,0
 16951 ;; Tracked objects:
 16952 ;;		On entry : 0/0
 16953 ;;		On exit  : 0/0
 16954 ;;		Unchanged: 0/0
 16955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16960 ;;Total ram usage:        2 bytes
 16961 ;; Hardware stack levels used:    1
 16962 ;; Hardware stack levels required when called:    4
 16963 ;; This function calls:
 16964 ;;		Nothing
 16965 ;; This function is called by:
 16966 ;;		_SYSTEM_Initialize
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970                           	psect	text58
 16971  005C14                     __ptext58:
 16972                           	opt callstack 0
 16973  005C14                     _TMR1_Initialize:
 16974                           	opt callstack 25
 16975  005C14                     
 16976                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 16977  005C14  0E00               	movlw	0
 16978  005C16  6EAA               	movwf	170,c	;volatile
 16979                           
 16980                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 16981  005C18  0E0B               	movlw	11
 16982  005C1A  6ECF               	movwf	207,c	;volatile
 16983                           
 16984                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 16985  005C1C  0EDC               	movlw	220
 16986  005C1E  6ECE               	movwf	206,c	;volatile
 16987  005C20                     
 16988                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 16989  005C20  909E               	bcf	158,0,c	;volatile
 16990  005C22                     
 16991                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16992  005C22  50CE               	movf	206,w,c	;volatile
 16993  005C24  CFCF F004          	movff	4047,??_TMR1_Initialize	;volatile
 16994  005C28  6A05               	clrf	(??_TMR1_Initialize+1)^0,c
 16995  005C2A  C004  F005         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 16996  005C2E  6A04               	clrf	??_TMR1_Initialize^0,c
 16997  005C30  1004               	iorwf	??_TMR1_Initialize^0,w,c
 16998  005C32  0101               	movlb	1	; () banked
 16999  005C34  6FBB               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17000  005C36  5005               	movf	(??_TMR1_Initialize+1)^0,w,c
 17001  005C38  6FBC               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17002  005C3A                     
 17003                           ; BSR set to: 1
 17004                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 17005  005C3A  0E31               	movlw	49
 17006  005C3C  6ECD               	movwf	205,c	;volatile
 17007  005C3E                     
 17008                           ; BSR set to: 1
 17009  005C3E  0012               	return		;funcret
 17010  005C40                     __end_of_TMR1_Initialize:
 17011                           	opt callstack 0
 17012                           
 17013 ;; *************** function _SPI_Initialize *****************
 17014 ;; Defined at:
 17015 ;;		line 62 in file "mcc_generated_files/spi.c"
 17016 ;; Parameters:    Size  Location     Type
 17017 ;;		None
 17018 ;; Auto vars:     Size  Location     Type
 17019 ;;		None
 17020 ;; Return value:  Size  Location     Type
 17021 ;;                  1    wreg      void 
 17022 ;; Registers used:
 17023 ;;		wreg, status,2
 17024 ;; Tracked objects:
 17025 ;;		On entry : 0/0
 17026 ;;		On exit  : 0/0
 17027 ;;		Unchanged: 0/0
 17028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17033 ;;Total ram usage:        0 bytes
 17034 ;; Hardware stack levels used:    1
 17035 ;; Hardware stack levels required when called:    4
 17036 ;; This function calls:
 17037 ;;		Nothing
 17038 ;; This function is called by:
 17039 ;;		_SYSTEM_Initialize
 17040 ;; This function uses a non-reentrant model
 17041 ;;
 17042                           
 17043                           	psect	text59
 17044  005CF6                     __ptext59:
 17045                           	opt callstack 0
 17046  005CF6                     _SPI_Initialize:
 17047                           	opt callstack 25
 17048  005CF6                     
 17049                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 17050  005CF6  0E40               	movlw	64
 17051  005CF8  6EC7               	movwf	199,c	;volatile
 17052                           
 17053                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 17054  005CFA  0E00               	movlw	0
 17055  005CFC  6EC6               	movwf	198,c	;volatile
 17056                           
 17057                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 17058  005CFE  0E01               	movlw	1
 17059  005D00  6EC8               	movwf	200,c	;volatile
 17060  005D02                     
 17061                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 17062  005D02  9694               	bcf	148,3,c	;volatile
 17063  005D04                     
 17064                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 17065  005D04  9AC6               	bcf	198,5,c	;volatile
 17066  005D06  0012               	return		;funcret
 17067  005D08                     __end_of_SPI_Initialize:
 17068                           	opt callstack 0
 17069                           
 17070 ;; *************** function _PIN_MANAGER_Initialize *****************
 17071 ;; Defined at:
 17072 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;		None
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;		None
 17077 ;; Return value:  Size  Location     Type
 17078 ;;                  1    wreg      void 
 17079 ;; Registers used:
 17080 ;;		wreg, status,2, status,0, cstack
 17081 ;; Tracked objects:
 17082 ;;		On entry : 0/0
 17083 ;;		On exit  : 0/0
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17090 ;;Total ram usage:        0 bytes
 17091 ;; Hardware stack levels used:    1
 17092 ;; Hardware stack levels required when called:    5
 17093 ;; This function calls:
 17094 ;;		_IOCB4_SetInterruptHandler
 17095 ;; This function is called by:
 17096 ;;		_SYSTEM_Initialize
 17097 ;; This function uses a non-reentrant model
 17098 ;;
 17099                           
 17100                           	psect	text60
 17101  0058EE                     __ptext60:
 17102                           	opt callstack 0
 17103  0058EE                     _PIN_MANAGER_Initialize:
 17104                           	opt callstack 24
 17105  0058EE                     
 17106                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 17107  0058EE  0E00               	movlw	0
 17108  0058F0  6E8D               	movwf	141,c	;volatile
 17109                           
 17110                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17111  0058F2  0E00               	movlw	0
 17112  0058F4  6E8C               	movwf	140,c	;volatile
 17113                           
 17114                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17115  0058F6  0E00               	movlw	0
 17116  0058F8  6E89               	movwf	137,c	;volatile
 17117                           
 17118                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 17119  0058FA  0E00               	movlw	0
 17120  0058FC  6E8A               	movwf	138,c	;volatile
 17121                           
 17122                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 17123  0058FE  0E00               	movlw	0
 17124  005900  6E8B               	movwf	139,c	;volatile
 17125                           
 17126                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 17127  005902  0E04               	movlw	4
 17128  005904  6E96               	movwf	150,c	;volatile
 17129                           
 17130                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 17131  005906  0E0F               	movlw	15
 17132  005908  6E92               	movwf	146,c	;volatile
 17133  00590A                     
 17134                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 17135  00590A  6893               	setf	147,c	;volatile
 17136                           
 17137                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 17138  00590C  0ED7               	movlw	215
 17139  00590E  6E94               	movwf	148,c	;volatile
 17140  005910                     
 17141                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 17142  005910  6895               	setf	149,c	;volatile
 17143                           
 17144                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
 17145  005912  0E87               	movlw	135
 17146  005914  010F               	movlb	15	; () banked
 17147  005916  6F5D               	movwf	93,b	;volatile
 17148                           
 17149                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 17150  005918  0E7D               	movlw	125
 17151  00591A  6F5C               	movwf	92,b	;volatile
 17152                           
 17153                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17154  00591C  0E00               	movlw	0
 17155  00591E  6F5B               	movwf	91,b	;volatile
 17156  005920                     
 17157                           ; BSR set to: 15
 17158                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 17159  005920  8EF1               	bsf	241,7,c	;volatile
 17160  005922                     
 17161                           ; BSR set to: 15
 17162                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 17163  005922  895A               	bsf	90,4,b	;volatile
 17164  005924                     
 17165                           ; BSR set to: 15
 17166                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 17167  005924  0E32               	movlw	low _IOCB4_DefaultInterruptHandler
 17168  005926  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 17169  005928  0E5D               	movlw	high _IOCB4_DefaultInterruptHandler
 17170  00592A  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 17171  00592C  EC8D  F02E         	call	_IOCB4_SetInterruptHandler	;wreg free
 17172  005930                     
 17173                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 17174  005930  86F2               	bsf	242,3,c	;volatile
 17175  005932  0012               	return		;funcret
 17176  005934                     __end_of_PIN_MANAGER_Initialize:
 17177                           	opt callstack 0
 17178                           
 17179 ;; *************** function _IOCB4_SetInterruptHandler *****************
 17180 ;; Defined at:
 17181 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 17182 ;; Parameters:    Size  Location     Type
 17183 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
 17184 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 17185 ;; Auto vars:     Size  Location     Type
 17186 ;;		None
 17187 ;; Return value:  Size  Location     Type
 17188 ;;                  1    wreg      void 
 17189 ;; Registers used:
 17190 ;;		wreg, status,2, status,0
 17191 ;; Tracked objects:
 17192 ;;		On entry : 0/0
 17193 ;;		On exit  : 0/0
 17194 ;;		Unchanged: 0/0
 17195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17200 ;;Total ram usage:        2 bytes
 17201 ;; Hardware stack levels used:    1
 17202 ;; Hardware stack levels required when called:    4
 17203 ;; This function calls:
 17204 ;;		Nothing
 17205 ;; This function is called by:
 17206 ;;		_PIN_MANAGER_Initialize
 17207 ;;		_main
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           
 17211                           	psect	text61
 17212  005D1A                     __ptext61:
 17213                           	opt callstack 0
 17214  005D1A                     _IOCB4_SetInterruptHandler:
 17215                           	opt callstack 24
 17216  005D1A                     
 17217                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 17218  005D1A  C004  F1BD         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 17219  005D1E  C005  F1BE         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 17220  005D22  0012               	return		;funcret
 17221  005D24                     __end_of_IOCB4_SetInterruptHandler:
 17222                           	opt callstack 0
 17223                           
 17224 ;; *************** function _OSCILLATOR_Initialize *****************
 17225 ;; Defined at:
 17226 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17227 ;; Parameters:    Size  Location     Type
 17228 ;;		None
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;		None
 17231 ;; Return value:  Size  Location     Type
 17232 ;;                  1    wreg      void 
 17233 ;; Registers used:
 17234 ;;		wreg, status,2
 17235 ;; Tracked objects:
 17236 ;;		On entry : 0/0
 17237 ;;		On exit  : 0/0
 17238 ;;		Unchanged: 0/0
 17239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17244 ;;Total ram usage:        0 bytes
 17245 ;; Hardware stack levels used:    1
 17246 ;; Hardware stack levels required when called:    4
 17247 ;; This function calls:
 17248 ;;		Nothing
 17249 ;; This function is called by:
 17250 ;;		_SYSTEM_Initialize
 17251 ;; This function uses a non-reentrant model
 17252 ;;
 17253                           
 17254                           	psect	text62
 17255  005D08                     __ptext62:
 17256                           	opt callstack 0
 17257  005D08                     _OSCILLATOR_Initialize:
 17258                           	opt callstack 25
 17259  005D08                     
 17260                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x62;
 17261  005D08  0E62               	movlw	98
 17262  005D0A  6ED3               	movwf	211,c	;volatile
 17263                           
 17264                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
 17265  005D0C  0E00               	movlw	0
 17266  005D0E  6ED2               	movwf	210,c	;volatile
 17267                           
 17268                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
 17269  005D10  0E00               	movlw	0
 17270  005D12  6E9B               	movwf	155,c	;volatile
 17271                           
 17272                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
 17273  005D14  0E00               	movlw	0
 17274  005D16  6E9A               	movwf	154,c	;volatile
 17275  005D18  0012               	return		;funcret
 17276  005D1A                     __end_of_OSCILLATOR_Initialize:
 17277                           	opt callstack 0
 17278                           
 17279 ;; *************** function _INTERRUPT_Initialize *****************
 17280 ;; Defined at:
 17281 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17282 ;; Parameters:    Size  Location     Type
 17283 ;;		None
 17284 ;; Auto vars:     Size  Location     Type
 17285 ;;		None
 17286 ;; Return value:  Size  Location     Type
 17287 ;;                  1    wreg      void 
 17288 ;; Registers used:
 17289 ;;		None
 17290 ;; Tracked objects:
 17291 ;;		On entry : 0/0
 17292 ;;		On exit  : 0/0
 17293 ;;		Unchanged: 0/0
 17294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17299 ;;Total ram usage:        0 bytes
 17300 ;; Hardware stack levels used:    1
 17301 ;; Hardware stack levels required when called:    4
 17302 ;; This function calls:
 17303 ;;		Nothing
 17304 ;; This function is called by:
 17305 ;;		_SYSTEM_Initialize
 17306 ;; This function uses a non-reentrant model
 17307 ;;
 17308                           
 17309                           	psect	text63
 17310  005D2C                     __ptext63:
 17311                           	opt callstack 0
 17312  005D2C                     _INTERRUPT_Initialize:
 17313                           	opt callstack 25
 17314  005D2C                     
 17315                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 17316  005D2C  9ED0               	bcf	208,7,c	;volatile
 17317  005D2E  0012               	return		;funcret
 17318  005D30                     __end_of_INTERRUPT_Initialize:
 17319                           	opt callstack 0
 17320                           
 17321 ;; *************** function _ADC_Initialize *****************
 17322 ;; Defined at:
 17323 ;;		line 62 in file "mcc_generated_files/adc.c"
 17324 ;; Parameters:    Size  Location     Type
 17325 ;;		None
 17326 ;; Auto vars:     Size  Location     Type
 17327 ;;		None
 17328 ;; Return value:  Size  Location     Type
 17329 ;;                  1    wreg      void 
 17330 ;; Registers used:
 17331 ;;		wreg, status,2
 17332 ;; Tracked objects:
 17333 ;;		On entry : 0/0
 17334 ;;		On exit  : 0/0
 17335 ;;		Unchanged: 0/0
 17336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17341 ;;Total ram usage:        0 bytes
 17342 ;; Hardware stack levels used:    1
 17343 ;; Hardware stack levels required when called:    4
 17344 ;; This function calls:
 17345 ;;		Nothing
 17346 ;; This function is called by:
 17347 ;;		_SYSTEM_Initialize
 17348 ;; This function uses a non-reentrant model
 17349 ;;
 17350                           
 17351                           	psect	text64
 17352  005CE0                     __ptext64:
 17353                           	opt callstack 0
 17354  005CE0                     _ADC_Initialize:
 17355                           	opt callstack 25
 17356  005CE0                     
 17357                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 17358  005CE0  0E01               	movlw	1
 17359  005CE2  6EC2               	movwf	194,c	;volatile
 17360                           
 17361                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 17362  005CE4  0E80               	movlw	128
 17363  005CE6  6EC1               	movwf	193,c	;volatile
 17364                           
 17365                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 17366  005CE8  0EAD               	movlw	173
 17367  005CEA  6EC0               	movwf	192,c	;volatile
 17368                           
 17369                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 17370  005CEC  0E00               	movlw	0
 17371  005CEE  6EC4               	movwf	196,c	;volatile
 17372                           
 17373                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 17374  005CF0  0E00               	movlw	0
 17375  005CF2  6EC3               	movwf	195,c	;volatile
 17376  005CF4  0012               	return		;funcret
 17377  005CF6                     __end_of_ADC_Initialize:
 17378                           	opt callstack 0
 17379                           
 17380 ;; *************** function _SPI_Open *****************
 17381 ;; Defined at:
 17382 ;;		line 72 in file "mcc_generated_files/spi.c"
 17383 ;; Parameters:    Size  Location     Type
 17384 ;;  spiUniqueCon    1    wreg     enum E353
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;  spiUniqueCon    1    4[COMRAM] enum E353
 17387 ;; Return value:  Size  Location     Type
 17388 ;;                  1    wreg      _Bool 
 17389 ;; Registers used:
 17390 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17391 ;; Tracked objects:
 17392 ;;		On entry : 0/0
 17393 ;;		On exit  : 0/0
 17394 ;;		Unchanged: 0/0
 17395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17400 ;;Total ram usage:        2 bytes
 17401 ;; Hardware stack levels used:    1
 17402 ;; Hardware stack levels required when called:    4
 17403 ;; This function calls:
 17404 ;;		Nothing
 17405 ;; This function is called by:
 17406 ;;		_main
 17407 ;; This function uses a non-reentrant model
 17408 ;;
 17409                           
 17410                           	psect	text65
 17411  00535E                     __ptext65:
 17412                           	opt callstack 0
 17413  00535E                     _SPI_Open:
 17414                           	opt callstack 26
 17415                           
 17416                           ;incstack = 0
 17417                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 17418  00535E  6E05               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 17419  005360                     
 17420                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 17421  005360  BAC6               	btfsc	198,5,c	;volatile
 17422  005362  EFB5  F029         	goto	u8061
 17423  005366  EFB7  F029         	goto	u8060
 17424  00536A                     u8061:
 17425  00536A  EF06  F02A         	goto	l124
 17426  00536E                     u8060:
 17427  00536E                     
 17428                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 17429  00536E  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17430  005370  0D04               	mullw	4
 17431  005372  0E01               	movlw	1
 17432  005374  26F3               	addwf	243,f,c
 17433  005376  0E00               	movlw	0
 17434  005378  22F4               	addwfc	244,f,c
 17435  00537A  0E89               	movlw	low _spi_configuration
 17436  00537C  24F3               	addwf	243,w,c
 17437  00537E  6EF6               	movwf	tblptrl,c
 17438  005380  0EFF               	movlw	high _spi_configuration
 17439  005382  20F4               	addwfc	244,w,c
 17440  005384  6EF7               	movwf	tblptrh,c
 17441  005386                     	if	1	;There are 3 active tblptr bytes
 17442  005386  6AF8               	clrf	tblptru,c
 17443  005388  0E00               	movlw	low (__mediumconst shr (0+16))
 17444  00538A  22F8               	addwfc	tblptru,f,c
 17445  00538C                     	endif
 17446  00538C  0008               	tblrd		*
 17447  00538E  CFF5 FFC7          	movff	tablat,4039	;volatile
 17448                           
 17449                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 17450  005392  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17451  005394  0D04               	mullw	4
 17452  005396  0E89               	movlw	low _spi_configuration
 17453  005398  24F3               	addwf	243,w,c
 17454  00539A  6EF6               	movwf	tblptrl,c
 17455  00539C  0EFF               	movlw	high _spi_configuration
 17456  00539E  20F4               	addwfc	244,w,c
 17457  0053A0  6EF7               	movwf	tblptrh,c
 17458  0053A2                     	if	1	;There are 3 active tblptr bytes
 17459  0053A2  6AF8               	clrf	tblptru,c
 17460  0053A4  0E00               	movlw	low (__mediumconst shr (0+16))
 17461  0053A6  22F8               	addwfc	tblptru,f,c
 17462  0053A8                     	endif
 17463  0053A8  0008               	tblrd		*
 17464  0053AA  CFF5 FFC6          	movff	tablat,4038	;volatile
 17465  0053AE                     
 17466                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 17467  0053AE  0E00               	movlw	0
 17468  0053B0  6EC5               	movwf	197,c	;volatile
 17469  0053B2                     
 17470                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 17471  0053B2  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17472  0053B4  0D04               	mullw	4
 17473  0053B6  0E02               	movlw	2
 17474  0053B8  26F3               	addwf	243,f,c
 17475  0053BA  0E00               	movlw	0
 17476  0053BC  22F4               	addwfc	244,f,c
 17477  0053BE  0E89               	movlw	low _spi_configuration
 17478  0053C0  24F3               	addwf	243,w,c
 17479  0053C2  6EF6               	movwf	tblptrl,c
 17480  0053C4  0EFF               	movlw	high _spi_configuration
 17481  0053C6  20F4               	addwfc	244,w,c
 17482  0053C8  6EF7               	movwf	tblptrh,c
 17483  0053CA                     	if	1	;There are 3 active tblptr bytes
 17484  0053CA  6AF8               	clrf	tblptru,c
 17485  0053CC  0E00               	movlw	low (__mediumconst shr (0+16))
 17486  0053CE  22F8               	addwfc	tblptru,f,c
 17487  0053D0                     	endif
 17488  0053D0  0008               	tblrd		*
 17489  0053D2  CFF5 FFC8          	movff	tablat,4040	;volatile
 17490  0053D6                     
 17491                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 17492  0053D6  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17493  0053D8  0D04               	mullw	4
 17494  0053DA  0E03               	movlw	3
 17495  0053DC  26F3               	addwf	243,f,c
 17496  0053DE  0E00               	movlw	0
 17497  0053E0  22F4               	addwfc	244,f,c
 17498  0053E2  0E89               	movlw	low _spi_configuration
 17499  0053E4  24F3               	addwf	243,w,c
 17500  0053E6  6EF6               	movwf	tblptrl,c
 17501  0053E8  0EFF               	movlw	high _spi_configuration
 17502  0053EA  20F4               	addwfc	244,w,c
 17503  0053EC  6EF7               	movwf	tblptrh,c
 17504  0053EE                     	if	1	;There are 3 active tblptr bytes
 17505  0053EE  6AF8               	clrf	tblptru,c
 17506  0053F0  0E00               	movlw	low (__mediumconst shr (0+16))
 17507  0053F2  22F8               	addwfc	tblptru,f,c
 17508  0053F4                     	endif
 17509  0053F4  0008               	tblrd		*
 17510  0053F6  CFF5 F004          	movff	tablat,??_SPI_Open
 17511  0053FA  4604               	rlncf	??_SPI_Open^0,f,c
 17512  0053FC  4604               	rlncf	??_SPI_Open^0,f,c
 17513  0053FE  4604               	rlncf	??_SPI_Open^0,f,c
 17514  005400  5094               	movf	148,w,c	;volatile
 17515  005402  1804               	xorwf	??_SPI_Open^0,w,c
 17516  005404  0BF7               	andlw	-9
 17517  005406  1804               	xorwf	??_SPI_Open^0,w,c
 17518  005408  6E94               	movwf	148,c	;volatile
 17519  00540A                     
 17520                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 17521  00540A  8AC6               	bsf	198,5,c	;volatile
 17522  00540C                     l124:
 17523  00540C  0012               	return		;funcret
 17524  00540E                     __end_of_SPI_Open:
 17525                           	opt callstack 0
 17526                           
 17527 ;; *************** function _ADC_GetConversion *****************
 17528 ;; Defined at:
 17529 ;;		line 108 in file "mcc_generated_files/adc.c"
 17530 ;; Parameters:    Size  Location     Type
 17531 ;;  channel         1    wreg     enum E12385
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;  channel         1    7[COMRAM] enum E12385
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  2    3[COMRAM] unsigned short 
 17536 ;; Registers used:
 17537 ;;		wreg, status,2, status,0
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17546 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17547 ;;Total ram usage:        5 bytes
 17548 ;; Hardware stack levels used:    1
 17549 ;; Hardware stack levels required when called:    4
 17550 ;; This function calls:
 17551 ;;		Nothing
 17552 ;; This function is called by:
 17553 ;;		_main
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557                           	psect	text66
 17558  005A36                     __ptext66:
 17559                           	opt callstack 0
 17560  005A36                     _ADC_GetConversion:
 17561                           	opt callstack 26
 17562                           
 17563                           ;incstack = 0
 17564                           ;ADC_GetConversion@channel stored from wreg
 17565  005A36  6E08               	movwf	ADC_GetConversion@channel^0,c
 17566  005A38                     
 17567                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 17568  005A38  C008  F006         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 17569  005A3C  4606               	rlncf	??_ADC_GetConversion^0,f,c
 17570  005A3E  4606               	rlncf	??_ADC_GetConversion^0,f,c
 17571  005A40  50C2               	movf	194,w,c	;volatile
 17572  005A42  1806               	xorwf	??_ADC_GetConversion^0,w,c
 17573  005A44  0B83               	andlw	-125
 17574  005A46  1806               	xorwf	??_ADC_GetConversion^0,w,c
 17575  005A48  6EC2               	movwf	194,c	;volatile
 17576  005A4A                     
 17577                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 17578  005A4A  80C2               	bsf	194,0,c	;volatile
 17579  005A4C                     
 17580                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 17581  005A4C  82C2               	bsf	194,1,c	;volatile
 17582  005A4E                     l191:
 17583                           
 17584                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 17585  005A4E  B2C2               	btfsc	194,1,c	;volatile
 17586  005A50  EF2C  F02D         	goto	u8071
 17587  005A54  EF2E  F02D         	goto	u8070
 17588  005A58                     u8071:
 17589  005A58  EF27  F02D         	goto	l191
 17590  005A5C                     u8070:
 17591  005A5C                     
 17592                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17593  005A5C  50C4               	movf	196,w,c	;volatile
 17594  005A5E  6E07               	movwf	(??_ADC_GetConversion+1)^0,c
 17595  005A60  6A06               	clrf	??_ADC_GetConversion^0,c
 17596  005A62  50C3               	movf	195,w,c	;volatile
 17597  005A64  2406               	addwf	??_ADC_GetConversion^0,w,c
 17598  005A66  6E04               	movwf	?_ADC_GetConversion^0,c
 17599  005A68  0E00               	movlw	0
 17600  005A6A  2007               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 17601  005A6C  6E05               	movwf	(?_ADC_GetConversion+1)^0,c
 17602  005A6E  0012               	return		;funcret
 17603  005A70                     __end_of_ADC_GetConversion:
 17604                           	opt callstack 0
 17605                           
 17606 ;; *************** function _INTERRUPT_InterruptManager *****************
 17607 ;; Defined at:
 17608 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;		None
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;		None
 17613 ;; Return value:  Size  Location     Type
 17614 ;;                  1    wreg      void 
 17615 ;; Registers used:
 17616 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17617 ;; Tracked objects:
 17618 ;;		On entry : 0/0
 17619 ;;		On exit  : 0/0
 17620 ;;		Unchanged: 0/0
 17621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;Total ram usage:        2 bytes
 17627 ;; Hardware stack levels used:    1
 17628 ;; Hardware stack levels required when called:    3
 17629 ;; This function calls:
 17630 ;;		_PIN_MANAGER_IOC
 17631 ;; This function is called by:
 17632 ;;		Interrupt level 2
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           	psect	intcode
 17637  000008                     __pintcode:
 17638                           	opt callstack 0
 17639  000008                     _INTERRUPT_InterruptManager:
 17640                           	opt callstack 18
 17641                           
 17642                           ;incstack = 0
 17643  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17644  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
 17645  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17646  000012                     
 17647                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 17648  000012  A6F2               	btfss	242,3,c	;volatile
 17649  000014  EF0E  F000         	goto	i2u831_41
 17650  000018  EF10  F000         	goto	i2u831_40
 17651  00001C                     i2u831_41:
 17652  00001C  EF19  F000         	goto	i2l42
 17653  000020                     i2u831_40:
 17654  000020  A0F2               	btfss	242,0,c	;volatile
 17655  000022  EF15  F000         	goto	i2u832_41
 17656  000026  EF17  F000         	goto	i2u832_40
 17657  00002A                     i2u832_41:
 17658  00002A  EF19  F000         	goto	i2l42
 17659  00002E                     i2u832_40:
 17660  00002E                     
 17661                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 17662  00002E  EC59  F02E         	call	_PIN_MANAGER_IOC	;wreg free
 17663  000032                     i2l42:
 17664  000032  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17665  000036  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17666  00003A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17667  00003C  0011               	retfie		f
 17668  00003E                     __end_of_INTERRUPT_InterruptManager:
 17669                           	opt callstack 0
 17670                           
 17671 ;; *************** function _PIN_MANAGER_IOC *****************
 17672 ;; Defined at:
 17673 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 17674 ;; Parameters:    Size  Location     Type
 17675 ;;		None
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;		None
 17678 ;; Return value:  Size  Location     Type
 17679 ;;                  1    wreg      void 
 17680 ;; Registers used:
 17681 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17682 ;; Tracked objects:
 17683 ;;		On entry : 0/0
 17684 ;;		On exit  : 0/0
 17685 ;;		Unchanged: 0/0
 17686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17691 ;;Total ram usage:        0 bytes
 17692 ;; Hardware stack levels used:    1
 17693 ;; Hardware stack levels required when called:    2
 17694 ;; This function calls:
 17695 ;;		_IOCB4_ISR
 17696 ;; This function is called by:
 17697 ;;		_INTERRUPT_InterruptManager
 17698 ;; This function uses a non-reentrant model
 17699 ;;
 17700                           
 17701                           	psect	text68
 17702  005CB2                     __ptext68:
 17703                           	opt callstack 0
 17704  005CB2                     _PIN_MANAGER_IOC:
 17705                           	opt callstack 18
 17706  005CB2                     
 17707                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 17708  005CB2  010F               	movlb	15	; () banked
 17709  005CB4  A95A               	btfss	90,4,b	;volatile
 17710  005CB6  EF5F  F02E         	goto	i2u805_41
 17711  005CBA  EF61  F02E         	goto	i2u805_40
 17712  005CBE                     i2u805_41:
 17713  005CBE  EF63  F02E         	goto	i2l6561
 17714  005CC2                     i2u805_40:
 17715  005CC2                     
 17716                           ; BSR set to: 15
 17717                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 17718  005CC2  ECF3  F02D         	call	_IOCB4_ISR	;wreg free
 17719  005CC6                     i2l6561:
 17720                           
 17721                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 17722  005CC6  90F2               	bcf	242,0,c	;volatile
 17723  005CC8  0012               	return		;funcret
 17724  005CCA                     __end_of_PIN_MANAGER_IOC:
 17725                           	opt callstack 0
 17726                           
 17727 ;; *************** function _IOCB4_ISR *****************
 17728 ;; Defined at:
 17729 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 17730 ;; Parameters:    Size  Location     Type
 17731 ;;		None
 17732 ;; Auto vars:     Size  Location     Type
 17733 ;;		None
 17734 ;; Return value:  Size  Location     Type
 17735 ;;                  1    wreg      void 
 17736 ;; Registers used:
 17737 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17738 ;; Tracked objects:
 17739 ;;		On entry : 0/0
 17740 ;;		On exit  : 0/0
 17741 ;;		Unchanged: 0/0
 17742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17747 ;;Total ram usage:        0 bytes
 17748 ;; Hardware stack levels used:    1
 17749 ;; Hardware stack levels required when called:    1
 17750 ;; This function calls:
 17751 ;;		Absolute function
 17752 ;;		_IOCB4_DefaultInterruptHandler
 17753 ;;		_IOCB4_InterruptCall
 17754 ;; This function is called by:
 17755 ;;		_PIN_MANAGER_IOC
 17756 ;; This function uses a non-reentrant model
 17757 ;;
 17758                           
 17759                           	psect	text69
 17760  005BE6                     __ptext69:
 17761                           	opt callstack 0
 17762  005BE6                     _IOCB4_ISR:
 17763                           	opt callstack 18
 17764  005BE6                     
 17765                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 17766  005BE6  0101               	movlb	1	; () banked
 17767  005BE8  51BD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 17768  005BEA  11BE               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 17769  005BEC  B4D8               	btfsc	status,2,c
 17770  005BEE  EFFB  F02D         	goto	i2u788_41
 17771  005BF2  EFFD  F02D         	goto	i2u788_40
 17772  005BF6                     i2u788_41:
 17773  005BF6  EF09  F02E         	goto	i2l93
 17774  005BFA                     i2u788_40:
 17775  005BFA                     
 17776                           ; BSR set to: 1
 17777                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 17778  005BFA  D802               	call	i2u789_48
 17779  005BFC  EF09  F02E         	goto	i2u789_49
 17780  005C00                     i2u789_48:
 17781  005C00  0005               	push	
 17782  005C02  6EFA               	movwf	pclath,c
 17783  005C04  51BD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 17784  005C06  6EFD               	movwf	tosl,c
 17785  005C08  51BE               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 17786  005C0A  6EFE               	movwf	tosh,c
 17787  005C0C  6AFF               	clrf	tosu,c
 17788  005C0E  50FA               	movf	pclath,w,c
 17789  005C10  0012               	return		;indir
 17790  005C12                     i2u789_49:
 17791  005C12                     i2l93:
 17792  005C12  0012               	return		;funcret
 17793  005C14                     __end_of_IOCB4_ISR:
 17794                           	opt callstack 0
 17795                           
 17796 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 17797 ;; Defined at:
 17798 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 17799 ;; Parameters:    Size  Location     Type
 17800 ;;		None
 17801 ;; Auto vars:     Size  Location     Type
 17802 ;;		None
 17803 ;; Return value:  Size  Location     Type
 17804 ;;                  1    wreg      void 
 17805 ;; Registers used:
 17806 ;;		None
 17807 ;; Tracked objects:
 17808 ;;		On entry : 0/0
 17809 ;;		On exit  : 0/0
 17810 ;;		Unchanged: 0/0
 17811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17816 ;;Total ram usage:        0 bytes
 17817 ;; Hardware stack levels used:    1
 17818 ;; This function calls:
 17819 ;;		Nothing
 17820 ;; This function is called by:
 17821 ;;		_PIN_MANAGER_Initialize
 17822 ;;		_IOCB4_ISR
 17823 ;; This function uses a non-reentrant model
 17824 ;;
 17825                           
 17826                           	psect	text70
 17827  005D32                     __ptext70:
 17828                           	opt callstack 0
 17829  005D32                     _IOCB4_DefaultInterruptHandler:
 17830                           	opt callstack 18
 17831  005D32  0012               	return		;funcret
 17832  005D34                     __end_of_IOCB4_DefaultInterruptHandler:
 17833                           	opt callstack 0
 17834                           
 17835 ;; *************** function _IOCB4_InterruptCall *****************
 17836 ;; Defined at:
 17837 ;;		line 18 in file "main.c"
 17838 ;; Parameters:    Size  Location     Type
 17839 ;;		None
 17840 ;; Auto vars:     Size  Location     Type
 17841 ;;		None
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  1    wreg      void 
 17844 ;; Registers used:
 17845 ;;		wreg, status,2, status,0
 17846 ;; Tracked objects:
 17847 ;;		On entry : 0/0
 17848 ;;		On exit  : 0/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17855 ;;Total ram usage:        1 bytes
 17856 ;; Hardware stack levels used:    1
 17857 ;; This function calls:
 17858 ;;		Nothing
 17859 ;; This function is called by:
 17860 ;;		_main
 17861 ;;		_IOCB4_ISR
 17862 ;; This function uses a non-reentrant model
 17863 ;;
 17864                           
 17865                           	psect	text71
 17866  0056BA                     __ptext71:
 17867                           	opt callstack 0
 17868  0056BA                     _IOCB4_InterruptCall:
 17869                           	opt callstack 18
 17870  0056BA                     
 17871                           ;main.c: 20:     if(!PORTBbits.RB4){
 17872  0056BA  B881               	btfsc	129,4,c	;volatile
 17873  0056BC  EF62  F02B         	goto	i2u782_41
 17874  0056C0  EF64  F02B         	goto	i2u782_40
 17875  0056C4                     i2u782_41:
 17876  0056C4  EF8B  F02B         	goto	i2l286
 17877  0056C8                     i2u782_40:
 17878  0056C8  BC89               	btfsc	137,6,c	;volatile
 17879  0056CA  EF69  F02B         	goto	i2u783_41
 17880  0056CE  EF6C  F02B         	goto	i2u783_40
 17881  0056D2                     i2u783_41:
 17882  0056D2  0E01               	movlw	1
 17883  0056D4  EF6D  F02B         	goto	i2u783_46
 17884  0056D8                     i2u783_40:
 17885  0056D8  0E00               	movlw	0
 17886  0056DA                     i2u783_46:
 17887  0056DA  0AFF               	xorlw	255
 17888  0056DC  6E01               	movwf	??_IOCB4_InterruptCall^0,c
 17889  0056DE  3A01               	swapf	??_IOCB4_InterruptCall^0,f,c
 17890  0056E0  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 17891  0056E2  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 17892  0056E4  5089               	movf	137,w,c	;volatile
 17893  0056E6  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 17894  0056E8  0BBF               	andlw	-65
 17895  0056EA  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 17896  0056EC  6E89               	movwf	137,c	;volatile
 17897  0056EE                     
 17898                           ;main.c: 22:         if(!botao){
 17899  0056EE  0100               	movlb	0	; () banked
 17900  0056F0  51FA               	movf	_botao& (0+255),w,b
 17901  0056F2  11FB               	iorwf	(_botao+1)& (0+255),w,b
 17902  0056F4  A4D8               	btfss	status,2,c
 17903  0056F6  EF7F  F02B         	goto	i2u784_41
 17904  0056FA  EF81  F02B         	goto	i2u784_40
 17905  0056FE                     i2u784_41:
 17906  0056FE  EF87  F02B         	goto	i2l6389
 17907  005702                     i2u784_40:
 17908  005702                     
 17909                           ; BSR set to: 0
 17910                           ;main.c: 23:             botao=1;
 17911  005702  0E00               	movlw	0
 17912  005704  6FFB               	movwf	(_botao+1)& (0+255),b
 17913  005706  0E01               	movlw	1
 17914  005708  6FFA               	movwf	_botao& (0+255),b
 17915                           
 17916                           ;main.c: 24:         }
 17917  00570A  EF8B  F02B         	goto	i2l286
 17918  00570E                     i2l6389:
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;main.c: 26:             botao=0;
 17922  00570E  0E00               	movlw	0
 17923  005710  6FFB               	movwf	(_botao+1)& (0+255),b
 17924  005712  0E00               	movlw	0
 17925  005714  6FFA               	movwf	_botao& (0+255),b
 17926  005716                     i2l286:
 17927  005716  0012               	return		;funcret
 17928  005718                     __end_of_IOCB4_InterruptCall:
 17929                           	opt callstack 0
 17930                           
 17931                           	psect	text72
 17932  000000                     __ptext72:
 17933                           	opt callstack 0
 17934  000000                     
 17935                           	psect	rparam
 17936  0000                     
 17937                           	psect	temp
 17938  00005A                     btemp:
 17939                           	opt callstack 0
 17940  00005A                     	ds	1
 17941  0000                     int$flags	set	btemp
 17942  0000                     wtemp8	set	btemp+1
 17943  0000                     ttemp5	set	btemp+1
 17944  0000                     ttemp6	set	btemp+4
 17945  0000                     ttemp7	set	btemp+8
 17946                           tosu	equ	0xFFF
 17947                           tosh	equ	0xFFE
 17948                           tosl	equ	0xFFD
 17949                           stkptr	equ	0xFFC
 17950                           pclatu	equ	0xFFB
 17951                           pclath	equ	0xFFA
 17952                           pcl	equ	0xFF9
 17953                           tblptru	equ	0xFF8
 17954                           tblptrh	equ	0xFF7
 17955                           tblptrl	equ	0xFF6
 17956                           tablat	equ	0xFF5
 17957                           prodh	equ	0xFF4
 17958                           prodl	equ	0xFF3
 17959                           indf0	equ	0xFEF
 17960                           postinc0	equ	0xFEE
 17961                           postdec0	equ	0xFED
 17962                           preinc0	equ	0xFEC
 17963                           plusw0	equ	0xFEB
 17964                           fsr0h	equ	0xFEA
 17965                           fsr0l	equ	0xFE9
 17966                           wreg	equ	0xFE8
 17967                           indf1	equ	0xFE7
 17968                           postinc1	equ	0xFE6
 17969                           postdec1	equ	0xFE5
 17970                           preinc1	equ	0xFE4
 17971                           plusw1	equ	0xFE3
 17972                           fsr1h	equ	0xFE2
 17973                           fsr1l	equ	0xFE1
 17974                           bsr	equ	0xFE0
 17975                           indf2	equ	0xFDF
 17976                           postinc2	equ	0xFDE
 17977                           postdec2	equ	0xFDD
 17978                           preinc2	equ	0xFDC
 17979                           plusw2	equ	0xFDB
 17980                           fsr2h	equ	0xFDA
 17981                           fsr2l	equ	0xFD9
 17982                           status	equ	0xFD8


Data Sizes:
    Strings     113
    Constant    3536
    Data        7
    BSS         318
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      89
    BANK0           160    124     160
    BANK1           256      4     195
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_pot(BANK2[100]), string_temp(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_pot(BANK2[100]), string_temp(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_113(CODE[3]), STR_109(CODE[3]), STR_104(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[4]), STR_91(CODE[4]), STR_86(CODE[3]), STR_81(CODE[3]), 
		 -> STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), STR_41(CODE[3]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[4]), STR_14(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_113(CODE[3]), STR_109(CODE[3]), STR_104(CODE[3]), STR_100(CODE[3]), 
		 -> STR_95(CODE[4]), STR_91(CODE[4]), STR_86(CODE[3]), STR_81(CODE[3]), 
		 -> STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), STR_41(CODE[3]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[4]), STR_14(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 17
		 -> vfpfcnvrt@ct(BANK0[3]), STR_3(CODE[16]), STR_2(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 17
		 -> vfpfcnvrt@ct(BANK0[3]), STR_3(CODE[16]), STR_2(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_pot(BANK2[100]), string_temp(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S2024_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_pot(BANK2[100]), string_temp(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_pot(BANK2[100]), string_temp(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string_pot(BANK2[100]), string_temp(BANK1[100]), STR_1(CODE[12]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_IOCB4_InterruptCall

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  161192
                  _ADC_GetConversion
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                             ___flge
                            ___flmul
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   98398
                                            114 BANK0     10     0     10
                                              0 BANK1      4     4      0
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   97553
                                             92 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   96516
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   95689
                                             69 COMRAM    10     4      6
                                             56 BANK0     36    36      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              9 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             12 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             30 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   32287
                                             54 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             28 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             30 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             12 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25800
                                             34 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             12 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              8 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              4 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      64      10       39.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      C3       8       76.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      59       1       94.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     220       6        0.0%
DATA                 0      0     220       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 11 12:03:31 2020

                           _SPI_Initialize 5CF6                               ___fldiv@aexp 001C  
                             ___fldiv@bexp 001B                               ___fldiv@sign 0014  
                              _SSPSTATbits 000FC7                                         l23 5C98  
                                       l26 5D18                                         l35 5D2E  
                                       l85 5932                                         l96 5D22  
                             ___awdiv@sign 0009                        ___wmul@multiplicand 0006  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
              __end_of_IOCB4_InterruptCall 5718                 ?_IOCB4_SetInterruptHandler 0004  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l120 5D06                                        l130 5C6C  
                                      l124 540C                                        l132 5C7A  
                                      l133 5C7E                                        l216 5C3E  
                                      l332 5BE4                                        l341 30DE  
                                      l350 59B8                                        l502 5772  
                                      l510 3188                                        l191 5A4E  
                                      l344 5CB0                                        l361 5CDE  
                                      l194 5A6E                                        l354 58A6  
                                      l434 46C4                                        l179 5CF4  
                                      l443 495A                                        l508 3180  
                                      l365 5538                                        l701 363C  
                                      l358 585E                                        l294 3814  
                                      l703 36A0                                        l528 33C4  
                                      l624 3D38                                        l633 3E88  
                                      l297 381A                                        l490 516A  
                                      l546 20D4                                        l626 3D40  
                                      l642 4446                                        l635 3EEE  
                                      l564 1912                                        l644 444E  
                                      l493 51AC                                        l653 44F8  
                                      l717 0138                                        l590 1CAA  
                                      l654 4542                                        l742 1524  
                                      l495 51E8                                        l663 3B34  
                                      l912 43C4                                        l680 3406  
                                      l673 3CFE                                        l665 3B3C  
                                      l658 454A                                        l762 093E  
                                      l925 4828                                        l678 33FE  
                                      l687 349E                                        l794 5594  
                                      l795 559C                                        l798 5C64  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                          _timer1ReloadVal 01BB                                        _abs 59BA  
                                      _pad 5124                               ___awmod@sign 0009  
                                      tosl 000FFD                                        wreg 000FE8  
                             ___flmul@aexp 001F                               ___flmul@bexp 0024  
                             ___flmul@sign 001E                               ___flmul@temp 0029  
                             ___flmul@prod 0025                            ?_lcd_set_cursor 0009  
                             ___fltol@exp1 000D                         __size_of_IOCB4_ISR 002E  
                                     l1042 535C                                       ?_abs 0016  
                                     l1029 52AC                                       l1063 4D54  
                                     l1072 5B16                                       l1057 54B6  
                                     l1243 4F88                                       l1068 4D9A  
                                     l1412 265A                                       l1236 4F68  
                                     l1421 28C8                                       l1253 5058  
                                     l1422 28B6                                       l1326 22C4  
                                     l1246 5038                                       l1343 23DE  
                                     l1335 2594                                       l1327 22B2  
                                     l1095 4C96                                       l1416 29BE  
                                     l1352 24AE                                       l1328 2278  
                                     l1353 249C                                       l1515 4234  
                                     l1419 2850                                       l1603 4A80  
                                     l1460 3FDE                                       l1540 5B4E  
                                     l1380 2D58                                       l1524 3AFA  
                                     l1453 3F46                                       l1429 2980  
                                     l1613 55F4                                       l1518 423C  
                                     l1382 2BB8                                       l1534 5A34  
                                     l1391 2BFE                                       l1527 3A3E  
                                     l1631 565A                                       l1456 40A2  
                                     l1368 58EC                                       l1393 2C76  
                                     l1385 2B7C                                       l1394 2C64  
                                     l1554 5ADE                                       l1618 55FC  
                                     l1626 5652                                       l1467 403A  
                                     l1548 5816                                       l1580 5D30  
                                     l1484 59F0                                       l1637 5AA6  
                                     l1653 4B70                                       l1487 59F8  
                                     l1479 4E98                                       l1648 4B90  
                                     l6001 582E                                       l1569 5122  
                                     l1577 5976                                       l1593 56B8  
                                     l1587 5BB6                                       l6005 5834  
                                     l6007 585C                                       l1599 5B84  
                                     ?_pad 0014                                       l5351 5C9C  
                                     l7111 50A6                                       l7103 505A  
                                     l5353 5CA6                                       l7113 50DC  
                                     l7105 506C                                       l7121 5952  
                                     l7201 21F6                                       l8001 4F50  
                                     l5355 5CA8                                       l6403 5CCA  
                                     l7107 507E                                       l7123 5956  
                                     l7131 5B78                                       l7211 220A  
                                     l7203 21FA                                       l8003 4F62  
                                     l8011 4FC4                                       l6421 5D04  
                                     l4661 5C68                                       l5357 5CAE  
                                     l6501 4666                                       l8021 57C6  
                                     l7109 5088                                       l7117 5934  
                                     l7125 5B50                                       l8101 3384  
                                     l7301 2470                                       l7221 2244  
                                     l7213 220E                                       l7205 21FE  
                                     l7141 20E2                                       l8013 4FD2  
                                     l8005 4F8A                                       l6415 5D2C  
                                     l6431 5922                                       l6423 58EE  
                                     l6503 4668                                       l6511 468C  
                                     l8023 57CA                                       l7119 5940  
                                     l7127 5B5C                                       l8103 338C  
                                     l7311 24CA                                       l7303 247E  
                                     l7231 2296                                       l7223 2260  
                                     l7215 2212                                       l7207 2202  
                                     l7151 2122                                       l7143 20F0  
                                     l7135 5AA8                                       l8111 1530  
                                     l8015 5000                                       l8007 4FA8  
                                     l6433 5924                                       l6425 590A  
                                     l6417 5CF6                                       l6441 5C20  
                                     l6505 4678                                       l6601 2D5A  
                                     l8025 57DE                                       l7129 5B60  
                                     l8041 5748                                       l8033 5718  
                                     l8105 339C                                       l7321 2534  
                                     l7313 24D8                                       l7305 2494  
                                     l7241 22E2                                       l7233 22A4  
                                     l7225 2270                                       l7209 2206  
                                     l7217 2216                                       l7161 2154  
                                     l7153 2124                                       l7145 20F2  
                                     l7401 55D4                                       l8201 18E4  
                                     l8121 1584                                       l8113 1540  
                                     l8017 5020                                       l8009 4FB0  
                                     l9001 1486                                       l6435 5930  
                                     l6427 5910                                       l6419 5D02  
                                     l6443 5C22                                       l6507 467A  
                                     l6611 2D88                                       l6603 2D64  
                                     l8027 580C                                       l8043 574E  
                                     l8035 572C                                       l8051 3128  
                                     l7331 256E                                       l7323 2554  
                                     l7315 2512                                       l7251 2322  
                                     l7235 22A6                                       l7227 2286  
                                     l7219 221A                                       l7171 217C  
                                     l7163 2156                                       l7147 2102  
                                     l7155 212C                                       l7139 20D6  
                                     l7411 3960                                       l7403 55E6  
                                     l8203 18EC                                       l8131 15CA  
                                     l8123 158C                                       l8115 154E  
                                     l8019 5032                                       l9003 14AC  
                                     l9011 14DA                                       l6437 5D08  
                                     l6381 5D1A                                       l6429 5920  
                                     l6445 5C3A                                       l6509 468A  
                                     l6461 54B8                                       l6453 5BBA  
                                     l6701 2F4A                                       l6621 2DBA  
                                     l6613 2D92                                       l6605 2D6A  
                                     l8029 5810                                       l8037 5738  
                                     l8061 3190                                       l8053 3148  
                                     l7333 2574                                       l7325 2558  
                                     l7309 24BE                                       l7317 2514  
                                     l7261 234C                                       l7253 232E  
                                     l7245 22F6                                       l7237 22B0  
                                     l7229 2292                                       l7181 21B6  
                                     l7173 218C                                       l7165 215C  
                                     l7157 213C                                       l7149 2112  
                                     l7421 3A2E                                       l7413 3974  
                                     l8301 1DA8                                       l8221 199C  
                                     l8213 1930                                       l8205 1906  
                                     l8141 1606                                       l8133 15D2  
                                     l8125 159E                                       l8117 1556  
                                     l8109 1526                                       l7341 5A70  
                                     l9005 14BA                                       l9101 37E2  
                                     l6447 5CE0                                       l6439 5C14  
                                     l6551 5C8C                                       l6391 5978  
                                     l6471 5516                                       l6463 54C8  
                                     l6455 5BC2                                       l6711 2F7C  
                                     l6703 2F54                                       l6631 2DEC  
                                     l6623 2DC4                                       l6615 2D9C  
                                     l6607 2D74                                       l7351 5156  
                                     l8039 5744                                       l7511 46FC  
                                     l7503 46C6                                       l8071 31CA  
                                     l8063 31A2                                       l8055 3156  
                                     l8047 30E0                                       l7335 2582  
                                     l7327 2566                                       l7319 2524  
                                     l7271 23BE                                       l7255 2332  
                                     l7247 2306                                       l7239 22D2  
                                     l7263 2352                                       l7191 21E2  
                                     l7183 21C8                                       l7175 219C  
                                     l7167 216A                                       l7159 2142  
                                     l7431 3AEA                                       l7415 3982  
                                     l7423 3A62                                       l7407 38EA  
                                     l8311 1DD4                                       l8303 1DAE  
                                     l8231 19DA                                       l8215 1942  
                                     l8223 19A0                                       l8207 191E  
                                     l8151 1682                                       l8135 15D6  
                                     l8127 15AC                                       l8119 157A  
                                     l9007 14CE                                       l9031 553A  
                                     l9111 38B8                                       l9103 381C  
                                     l6553 5C90                                       l6545 5C80  
                                     l6393 5994                                       l6481 4554  
                                     l6473 551E                                       l6457 5BD0  
                                     l6721 2FAE                                       l6713 2F86  
                                     l6705 2F5E                                       l6641 2E1E  
                                     l6633 2DF6                                       l6625 2DCE  
                                     l6617 2DA6                                       l6609 2D7E  
                                     l7361 51BC                                       l7353 5162  
                                     l7345 5124                                       l7521 4764  
                                     l7513 470A                                       l7505 46CA  
                                     l8073 31D0                                       l8081 32C2  
                                     l8065 31B2                                       l8057 315A  
                                     l8049 3100                                       l7601 2B20  
                                     l7337 2584                                       l7329 256C  
                                     l7281 2418                                       l7265 2378  
                                     l7273 23CE                                       l7257 2340  
                                     l7249 2314                                       l7193 21E6  
                                     l7185 21D6                                       l7177 219E  
                                     l7169 216C                                       l7425 3A9E  
                                     l7409 390A                                       l8401 20B4  
                                     l8305 1DBA                                       l8313 1DDA  
                                     l8321 1E08                                       l8241 1A28  
                                     l8233 19DE                                       l8225 19A8  
                                     l8217 195E                                       l8153 168C  
                                     l8145 163C                                       l8137 15DA  
                                     l8129 15BE                                       l9017 14EC  
                                     l9033 5542                                       l9041 4A96  
                                     l9105 3830                                       l6571 53D6  
                                     l6563 5360                                       l6555 5C94  
                                     l6547 5C84                                       l6395 59B0  
                                     l6483 4598                                       l6467 54F0  
                                     l6459 5BD2                                       l6731 2FE0  
                                     l6723 2FB8                                       l6715 2F90  
                                     l6707 2F68                                       l6651 2E50  
                                     l6643 2E28                                       l6635 2E00  
                                     l6627 2DD8                                       l6619 2DB0  
                                     l7363 51D0                                       l7355 5176  
                                     l7347 5134                                       l7523 4772  
                                     l7531 47D8                                       l7515 472A  
                                     l7507 46D8                                       l8083 32DC  
                                     l8091 333E                                       l8075 3252  
                                     l8067 31B8                                       l8059 3174  
                                     l7611 2B6C                                       l7603 2B30  
                                     l7291 2448                                       l7283 2422  
                                     l7275 23F4                                       l7267 23AC  
                                     l7259 2342                                       l7195 21EA  
                                     l7187 21DA                                       l7179 21A6  
                                     l7371 4D9C                                       l7427 3AB2  
                                     l7419 39F2                                       l8331 1EBE  
                                     l8323 1E60                                       l8315 1DEC  
                                     l8307 1DCA                                       l8251 1AC0  
                                     l8235 19F0                                       l8243 1A30  
                                     l8227 19BA                                       l8219 1994  
                                     l8163 1710                                       l8147 164E  
                                     l8139 15E0                                       l8411 3D12  
                                     l7435 59FA                                       l7443 5634  
                                     l9019 1512                                       l9035 5550  
                                     l9051 4AD0                                       l9043 4A9E  
                                     l9107 383E                                       l6581 5A4C  
                                     l6573 540A                                       l6565 536E  
                                     l6549 5C88                                       l6469 54FC  
                                     l6741 3012                                       l6733 2FEA  
                                     l6725 2FC2                                       l6717 2F9A  
                                     l6709 2F72                                       l6661 2E82  
                                     l6653 2E5A                                       l6645 2E32  
                                     l6637 2E0A                                       l6629 2DE2  
                                     l7453 5C40                                       l7357 518A  
                                     l7349 5148                                       l7461 4242  
                                     l7533 47E8                                       l7525 47A0  
                                     l7517 4748                                       l7509 46F8  
                                     l8093 3350                                       l8085 32FA  
                                     l8077 3258                                       l8069 31C0  
                                     l7621 2BB6                                       l7613 2B7A  
                                     l7605 2B40                                       l7541 29CC  
                                     l7701 2614                                       l7293 244C  
                                     l7285 2430                                       l7277 2404  
                                     l7269 23AE                                       l7197 21EE  
                                     l7189 21DE                                       l7373 4DBC  
                                     l7429 3ADA                                       l8341 1F0E  
                                     l8333 1EDA                                       l8325 1E94  
                                     l8317 1DFE                                       l8309 1DCE  
                                     l8261 1BA4                                       l8253 1B18  
                                     l8245 1A38                                       l8237 19FE  
                                     l8229 19CC                                       l8181 17AA  
                                     l8165 1722                                       l8149 166A  
                                     l8157 16B4                                       l8421 3D82  
                                     l8413 3D2C                                       l8501 3B0E  
                                     l7445 5646                                       l9037 5576  
                                     l9061 4B32                                       l9053 4ADC  
                                     l9109 388A                                       l6583 5A5C  
                                     l6567 53AE                                       l6399 59B6  
                                     l6495 45A0                                       l6479 454C  
                                     l6751 3044                                       l6743 301C  
                                     l6735 2FF4                                       l6727 2FCC  
                                     l6719 2FA4                                       l6671 2EB4  
                                     l6663 2E8C                                       l6655 2E64  
                                     l6647 2E3C                                       l6639 2E14  
                                     l7455 5C5C                                       l7359 518E  
                                     l7471 42A2                                       l7463 4250  
                                     l7535 4808                                       l7527 47C0  
                                     l7519 4750                                       l7367 59BA  
                                     l8095 3360                                       l8087 3314  
                                     l8079 325E                                       l7631 2BFC  
                                     l7623 2BC8                                       l7615 2B86  
                                     l7607 2B48                                       l7551 2A0C  
                                     l7543 29DA                                       l7711 266A  
                                     l7703 2624                                       l7295 245C  
                                     l7287 2432                                       l7199 21F2  
                                     l7375 4DFA                                       l7383 4E3A  
                                     l8351 1F50                                       l8343 1F1E  
                                     l8335 1EEC                                       l8327 1E9C  
                                     l8319 1E02                                       l8271 1C3E  
                                     l8263 1BD6                                       l8255 1B4C  
                                     l8247 1A48                                       l8239 1A16  
                                     l8191 187A                                       l8183 17DE  
                                     l8167 173E                                       l8159 16DA  
                                     l8175 175A                                       l8431 3DAE  
                                     l8423 3D88                                       l8415 3D68  
                                     l8407 3D00                                       l8511 3B7C  
                                     l8503 3B28                                       l7439 55FE  
                                     l9063 4B60                                       l9055 4AEC  
                                     l9047 4AA6                                       l9039 4A82  
                                     l9071 5B86                                       l6577 5A38  
                                     l6569 53B2                                       l6497 464A  
                                     l6489 459C                                       l6761 3076  
                                     l6753 304E                                       l6745 3026  
                                     l6737 2FFE                                       l6729 2FD6  
                                     l6681 2EE6                                       l6673 2EBE  
                                     l6665 2E96                                       l6657 2E6E  
                                     l6649 2E46                                       l7449 5B18  
                                     l8601 40B8                                       l7481 42EC  
                                     l7473 42A6                                       l7465 4270  
                                     l7529 47D2                                       l7369 59D4  
                                     l8097 3366                                       l8089 332E  
                                     l7641 2C5C                                       l7625 2BDE  
                                     l7633 2C0E                                       l7617 2BA4  
                                     l7609 2B58                                       l7561 2A32  
                                     l7553 2A0E                                       l7545 29DC  
                                     l7801 29AA                                       l7721 26A4  
                                     l7713 267A                                       l7705 2634  
                                     l7289 2440                                       l7297 245E  
                                     l7385 4E4C                                       l7377 4E22  
                                     l7393 565C                                       l8361 1F80  
                                     l8353 1F5E                                       l8345 1F30  
                                     l8337 1EFA                                       l8281 1CC6  
                                     l8329 1EA0                                       l8273 1C72  
                                     l8265 1BEC                                       l8249 1A5C  
                                     l8257 1B52                                       l8185 17E4  
                                     l8193 18AC                                       l8177 1774  
                                     l8441 3E78                                       l8425 3D90  
                                     l8433 3E0C                                       l8417 3D70  
                                     l8409 3D0E                                       l8521 3C74  
                                     l8513 3BF2                                       l8505 3B64  
                                     l9065 4B78                                       l9057 4B10  
                                     l9049 4AC4                                       l9073 5B90  
                                     l9081 36AC                                       l6579 5A4A  
                                     l6851 3F6C                                       l6843 3EF2  
                                     l6499 465A                                       l6771 30A8  
                                     l6763 3080                                       l6755 3058  
                                     l6747 3030                                       l6739 3008  
                                     l6691 2F18                                       l6683 2EF0  
                                     l6675 2EC8                                       l6667 2EA0  
                                     l6659 2E78                                       l8611 411A  
                                     l8603 40BC                                       l7491 435C  
                                     l7483 42FA                                       l7475 42B2  
                                     l7467 4274                                       l7459 423E  
                                     l8099 3378                                       l7651 2CCA  
                                     l7635 2C1C                                       l7627 2BE4  
                                     l7619 2BA6                                       l7571 2A72  
                                     l7563 2A40                                       l7547 29EC  
                                     l7555 2A16                                       l7539 29C0  
                                     l7803 29AE                                       l7731 26F6  
                                     l7723 26BA                                       l7707 2644  
                                     l7299 246C                                       l7379 4E2E  
                                     l7395 566C                                       l8371 1FE2  
                                     l8363 1FA6                                       l8355 1F66  
                                     l8347 1F38                                       l8339 1F0A  
                                     l8291 1D6C                                       l8283 1D2A  
                                     l8275 1C82                                       l8267 1C1E  
                                     l8259 1B70                                       l8195 18BC  
                                     l8187 183E                                       l8443 3E98  
                                     l8451 3EC6                                       l8435 3E26  
                                     l8427 3DA2                                       l8419 3D76  
                                     l8523 3C92                                       l8515 3BF8  
                                     l8507 3B6C                                       l9163 00F8  
                                     l9059 4B24                                       l9067 4B88  
                                     l9091 36FC                                       l9083 36B0  
                                     l6861 3FC6                                       l6845 3F02  
                                     l6781 482A                                       l6773 30B2  
                                     l6765 308A                                       l6757 3062  
                                     l6749 303A                                       l6693 2F22  
                                     l6685 2EFA                                       l6677 2ED2  
                                     l6669 2EAA                                       l9165 4166  
                                     l8621 4146                                       l8605 40C0  
                                     l7493 436E                                       l7485 430C  
                                     l7477 42D0                                       l7469 4282  
                                     l7821 5208                                       l7813 51EA  
                                     l7661 2D34                                       l7645 2C86  
                                     l7653 2CCE                                       l7637 2C20  
                                     l7629 2BEE                                       l7581 2AB2  
                                     l7573 2A74                                       l7565 2A42  
                                     l7557 2A26                                       l7549 29FC  
                                     l7901 548A                                       l7741 273C  
                                     l7733 2704                                       l7725 26C6  
                                     l7717 268E                                       l7709 264A  
                                     l7389 4E90                                       l7397 559E  
                                     l8381 2028                                       l8373 1FFC  
                                     l8365 1FC2                                       l8357 1F6E  
                                     l8349 1F48                                       l8285 1D3A  
                                     l8293 1D74                                       l8277 1C96  
                                     l8269 1C2E                                       l8197 18C0  
                                     l8189 1872                                       l8445 3EAA  
                                     l8437 3E44                                       l8429 3DA8  
                                     l8461 43F2                                       l8525 3CAC  
                                     l8517 3BFE                                       l8509 3B76  
                                     l8541 341E                                       l8533 33C6  
                                     l8701 0148                                       l9093 370A  
                                     l9085 36BC                                       l9077 36A2  
                                     l6871 402A                                       l6863 3FC8  
                                     l6855 3F80                                       l6847 3F10  
                                     l6791 48CC                                       l6783 482E  
                                     l6775 30C2                                       l6767 3094  
                                     l6759 306C                                       l6695 2F2C  
                                     l6687 2F04                                       l6679 2EDC  
                                     l8631 41F4                                       l8623 417C  
                                     l8615 4120                                       l8607 40DE  
                                     l7487 433A                                       l7479 42D8  
                                     l7495 4374                                       l7831 523C  
                                     l7823 5216                                       l7815 51EE  
                                     l7663 2D38                                       l7655 2CE8  
                                     l7647 2C92                                       l7639 2C2E  
                                     l7591 2AE2                                       l7583 2ABA  
                                     l7567 2A52                                       l7575 2A7C  
                                     l7559 2A2C                                       l7903 54AE  
                                     l7911 4CC6                                       l7751 27AA  
                                     l7743 2756                                       l7735 2710  
                                     l7727 26DE                                       l7719 269A  
                                     l7807 58A8                                       l8391 2078  
                                     l8383 2038                                       l8375 2002  
                                     l8367 1FCA                                       l8359 1F7A  
                                     l8295 1D86                                       l8287 1D4C  
                                     l8279 1CA2                                       l8199 18D2  
                                     l8447 3EB0                                       l8439 3E5E  
                                     l8463 43FA                                       l8455 43C6  
                                     l8527 3CC6                                       l8519 3C62  
                                     l8551 345E                                       l8543 3426  
                                     l8535 33D4                                       l8711 01E0  
                                     l8703 016E                                       l9095 3756  
                                     l9087 36BE                                       l9079 36A6  
                                     l6881 4082                                       l6873 4048  
                                     l6865 3FD4                                       l6857 3F88  
                                     l6849 3F56                                       l5993 587C  
                                     l6793 48F8                                       l6785 4842  
                                     l6777 30CC                                       l6769 309E  
                                     l6697 2F36                                       l6689 2F0E  
                                     l8633 4206                                       l8617 4136  
                                     l8609 4116                                       l7497 4384  
                                     l7489 435A                                       l7841 5276  
                                     l7833 5244                                       l7825 521E  
                                     l7817 51FC                                       l7665 2D46  
                                     l7657 2CFE                                       l7649 2CA0  
                                     l7593 2AE2                                       l7585 2ABE  
                                     l7577 2A8C                                       l7569 2A62  
                                     l7905 54B4                                       l7921 4D34  
                                     l7913 4CD6                                       l7761 2840  
                                     l7753 27D4                                       l7745 2766  
                                     l7737 2720                                       l7729 26EA  
                                     l7681 25B0                                       l7809 58B8  
                                     l8393 208A                                       l8385 203E  
                                     l8377 2014                                       l8369 1FD0  
                                     l8297 1D94                                       l8289 1D5E  
                                     l8449 3EC0                                       l8481 44B4  
                                     l8473 4472                                       l8465 440E  
                                     l8457 43D8                                       l8641 495C  
                                     l8529 3CD6                                       l8561 34D2  
                                     l8553 3466                                       l8545 3446  
                                     l8537 33D8                                       l8801 07BE  
                                     l8721 0270                                       l8713 01EE  
                                     l8705 01A4                                       l9097 378A  
                                     l9089 36E8                                       l6883 4090  
                                     l6875 404A                                       l6867 4010  
                                     l6859 3F94                                       l5995 58A4  
                                     l5987 5860                                       l6795 4924  
                                     l6787 487C                                       l6779 30D2  
                                     l6699 2F40                                       l8635 4218  
                                     l8627 41B4                                       l8619 413E  
                                     l7499 43A4                                       l7851 529C  
                                     l7843 527E                                       l7835 524C  
                                     l7827 5222                                       l7819 5204  
                                     l7667 2D4C                                       l7659 2D18  
                                     l7579 2AA2                                       l7923 4D42  
                                     l7915 4D04                                       l7771 2880  
                                     l7763 284E                                       l7755 280A  
                                     l7747 2782                                       l7739 272C  
                                     l7691 25E8                                       l7683 25B2  
                                     l7931 5AE0                                       l8395 2096  
                                     l8387 2044                                       l8379 2020  
                                     l8299 1DA4                                       l8491 450C  
                                     l8483 44D2                                       l8475 4486  
                                     l8467 4416                                       l8459 43E0  
                                     l8651 49D2                                       l8643 4986  
                                     l8563 34E4                                       l8571 3544  
                                     l8555 3482                                       l8547 344E  
                                     l8539 33F2                                       l8811 0856  
                                     l8803 07CC                                       l8731 0306  
                                     l8723 0278                                       l8707 01B2  
                                     l9099 37B8                                       l6885 4092  
                                     l6877 404E                                       l6869 401C  
                                     l5989 5876                                       l6789 4880  
                                     l6797 4928                                       l7853 52A4  
                                     l7845 5280                                       l7837 525A  
                                     l7829 522A                                       l7861 52C0  
                                     l7669 2D4E                                       l7597 2AF6  
                                     l7589 2AD2                                       l7925 4D92  
                                     l7917 4D14                                       l7909 4C98  
                                     l7781 28F2                                       l7773 28AE  
                                     l7765 2860                                       l7757 2818  
                                     l7749 278E                                       l7693 25F8  
                                     l7685 25C2                                       l7677 2596  
                                     l7933 5AF6                                       l7941 4BA8  
                                     l8397 209E                                       l8493 4520  
                                     l8485 44D6                                       l8477 448A  
                                     l8469 4424                                       l8653 49F0  
                                     l8581 35DA                                       l8573 3554  
                                     l8557 3492                                       l8549 3458  
                                     l8901 0DFA                                       l8805 07FC  
                                     l8741 0394                                       l8733 0314  
                                     l8725 0286                                       l8717 0238  
                                     l8709 01C0                                       l8661 0042  
                                     l6879 4072                                       l5999 5818  
                                     l7847 5286                                       l7839 5260  
                                     l7871 52F4                                       l7863 52C8  
                                     l7599 2B10                                       l7927 4D98  
                                     l7919 4D22                                       l7791 2968  
                                     l7783 291C                                       l7767 286E  
                                     l7759 2836                                       l7695 25FE  
                                     l7687 25D2                                       l7679 25A2  
                                     l7935 5B06                                       l7951 4BF8  
                                     l8399 20AE                                       l8495 4524  
                                     l8487 44DA                                       l8479 44A8  
                                     l8655 4A02                                       l8647 4992  
                                     l8591 3652                                       l8583 35F8  
                                     l8575 355A                                       l8567 351E  
                                     l8815 08C8                                       l8751 0442  
                                     l8743 03A4                                       l8727 02AC  
                                     l8719 024A                                       l8671 0098  
                                     l8663 0068                                       l7849 528C  
                                     l7881 5330                                       l7873 52FC  
                                     l7865 52CC                                       l7857 52AE  
                                     l7793 2984                                       l7777 28D8  
                                     l7785 2920                                       l7769 2872  
                                     l7697 2604                                       l7689 25E2  
                                     l7961 4C22                                       l7953 4BFC  
                                     l7945 4BBC                                       l8657 4A44  
                                     l8649 49A0                                       l8497 3AFC  
                                     l8593 3662                                       l8585 3612  
                                     l8577 3560                                       l8569 3530  
                                     l8921 0F68                                       l8913 0EB2  
                                     l8905 0E36                                       l8841 0A90  
                                     l8833 0A08                                       l8817 08DA  
                                     l8825 0952                                       l8809 0828  
                                     l8761 04FC                                       l8753 0474  
                                     l8745 03D8                                       l8737 035E  
                                     l8729 02E6                                       l8673 009A  
                                     l8665 0076                                       l7883 5336  
                                     l7875 5304                                       l7867 52DA  
                                     l7859 52B2                                       l7795 2994  
                                     l7787 293A                                       l7779 28E4  
                                     l7699 2612                                       l7971 4C4A  
                                     l7963 4C2C                                       l7955 4C0A  
                                     l7947 4BE6                                       l7939 4B92  
                                     l8499 3B0A                                       l8595 3678  
                                     l8587 362C                                       l8579 35BE  
                                     l8931 1016                                       l8923 0F9E  
                                     l8915 0EE8                                       l8907 0E5C  
                                     l8851 0B3C                                       l8843 0AB6  
                                     l8835 0A3E                                       l8827 0988  
                                     l8819 090E                                       l8771 05EA  
                                     l8763 0546                                       l8747 03E8  
                                     l8739 0370                                       l8691 00C4  
                                     l8683 00B8                                       l8675 00AC  
                                     l8667 0088                                       l7877 5312  
                                     l7885 533C                                       l7869 52E2  
                                     l7893 540E                                       l7797 29A2  
                                     l7789 294E                                       l7973 4C56  
                                     l7965 4C36                                       l7949 4BE8  
                                     l8589 364C                                       l8917 0F30  
                                     l8909 0E92                                       l8861 0BFC  
                                     l8829 09D0                                       l8781 0686  
                                     l8757 0490                                       l8749 041C  
                                     l8669 008C                                       l8599 40A4  
                                     l7887 534C                                       l7879 5328  
                                     l7895 543C                                       l7799 29A4  
                                     l7975 4C66                                       l7991 4EE0  
                                     l7983 4E9A                                       l8951 1182  
                                     l8871 0C82                                       l8863 0C08  
                                     l8791 0740                                       l8767 057E  
                                     l8759 04C6                                       l8695 00D0  
                                     l8687 00BE                                       l8679 00B2  
                                     l7889 5354                                       l7897 544C  
                                     l7977 4C76                                       l7993 4EEE  
                                     l7985 4EA6                                       l8961 123C  
                                     l8953 1192                                       l8945 10EE  
                                     l8937 1066                                       l8929 0FF0  
                                     l8881 0CF2                                       l8857 0B8E  
                                     l8849 0B06                                       l8777 063A  
                                     l8769 05B4                                       l8697 0126  
                                     l7899 547A                                       l7979 4C86  
                                     l7995 4F00                                       l7987 4EC4  
                                     l8963 1272                                       l8955 11CA  
                                     l8947 1124                                       l8939 109C  
                                     l8891 0D74                                       l8859 0BC4  
                                     l8867 0C14                                       l8787 06D4  
                                     l8779 0660                                       l8699 0146  
                                     l7997 4F2E                                       l7989 4ECC  
                                     l8981 135E                                       l8965 129A  
                                     l8973 12EC                                       l8949 115A  
                                     l8869 0C4A                                       l8877 0C96  
                                     l8797 0792                                       l8789 070A  
                                     l7999 4F4E                                       l8991 140C  
                                     l8975 1312                                       l8967 12AA  
                                     l8959 1206                                       l8879 0CBC  
                                     l8887 0D06                                       l8799 07A6  
                                     STR_1 FFAE                                       STR_2 FF8D  
                                     l8993 1434                                       l8977 1338  
                                     l8889 0D3C                                       l8897 0D88  
                                     STR_3 FF9E                                       STR_4 FFBA  
                                     l8995 1444                                       l8979 1350  
                                     l8987 13A0                                       l8899 0DAE  
                                     STR_5 FFCA                                       l8989 13D6  
                                     STR_8 FFBE                                       STR_9 FFD2  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u6025 5CA4  
                                     u6026 5CA6                                       u8100 48CC  
                                     u8101 48C8                                       u4750 5C7A  
                                     u8110 494A                                       u4751 5C76  
                                     u8120 495A                                       u9000 51BC  
                                     u8121 4956                                       u9001 51B8  
                                     i2l42 0032                                       u8210 3F02  
                                     u9010 59D4                                       u8211 3EFE  
                                     u9011 59D0                                       u8060 536E  
                                     u8300 4090                                       u8220 3F10  
                                     u9020 4DDC                                       u9100 56B8  
                                     u8061 536A                                       u8301 408C  
                                     u8221 3F0C                                       u8117 4940  
                                     u9101 56B4                                       u8070 5A5C  
                                     u8230 3F6C                                       u9030 4DFA  
                                     u9110 55CE                                       u8071 5A58  
                                     u8231 3F68                                       u9031 4DF6  
                                     u9111 55C8                                       u8240 3FC2  
                                     u7280 5876                                       u9040 4E22  
                                     u9200 3A2E                                       u9120 55D0  
                                     u8241 3FBE                                       u7281 5872  
                                     u9041 4E1E                                       u9025 4DD2  
                                     u9201 3A2A                                       u8250 400C  
                                     u7290 582E                                       u8090 48AA  
                                     u9050 4E4C                                       u9210 3A82  
                                     u9130 55E6                                       u8251 4008  
                                     u7291 582A                                       u9051 4E48  
                                     u9131 55E2                                       u8260 402A  
                                     u9300 5B4A                                       u8500 50A6  
                                     u9220 3A9E                                       u9140 3932  
                                     i2l93 5C12                                       u8261 4026  
                                     u8501 50A2                                       u9221 3A9A  
                                     u8270 403A                                       u8510 50DC  
                                     u9310 4250                                       u9070 4E86  
                                     u9230 3ADA                                       u9150 3960  
                                     u8271 4036                                       u8511 50D8  
                                     u9311 424C                                       u9071 4E80  
                                     u9231 3AD6                                       u9215 3A78  
                                     u9151 395C                                       u8280 4048  
                                     u8520 5976                                       u9320 4282  
                                     u9400 4748                                       u8600 216A  
                                     u9080 4E88                                       u9160 3982  
                                     u9240 5A2E                                       i2l89 5CC8  
                                     u8281 4044                                       u8097 48A0  
                                     u8521 5972                                       u9321 427E  
                                     u9401 4744                                       u8601 2166  
                                     u9065 4E5E                                       u9161 397E  
                                     u9145 3928                                       u9241 5A28  
                                     u8290 4082                                       u8530 5B78  
                                     u9410 4772                                       u8610 217C  
                                     u9090 56A6                                       u9250 5A30  
                                     i2l99 5D32                                       u8291 407E  
                                     u8531 5B74                                       u9331 42AC  
                                     u9411 476E                                       u8611 2178  
                                     u7900 5BE4                                       u9340 42D0  
                                     u9420 47A0                                       u9500 2AA2  
                                     u8700 22C4                                       u8620 218C  
                                     u9180 39EE                                       u8540 5AD8  
                                     u9260 562E                                       u7901 5BE0  
                                     u9341 42CC                                       u9421 479C  
                                     u9501 2A9E                                       u8701 22C0  
                                     u8621 2188                                       u9181 39EA  
                                     u8541 5AD2                                       u9261 5628  
                                     u7910 54EC                                       u9350 42FA  
                                     u9430 47E8                                       u9510 2AE2  
                                     u8710 22D2                                       u8630 21C8  
                                     u9190 3A12                                       u8550 5ADA  
                                     u9270 5630                                       u7911 54E8  
                                     u9351 42F6                                       u9431 47E4  
                                     u9511 2ADE                                       u8711 22CE  
                                     u8631 21C4                                       u9175 3996  
                                     u7920 5516                                       u8480 506C  
                                     u9360 433A                                       u9600 2C5C  
                                     u9520 2B58                                       u9440 29DA  
                                     u8800 2430                                       u8720 22E2  
                                     u8640 21D6                                       u8560 20F0  
                                     u9176 39A0                                       u9280 5646  
                                     u7921 5512                                       u8481 5068  
                                     u9361 4336                                       u9601 2C58  
                                     u9521 2B54                                       u9441 29D6  
                                     u8801 242C                                       u8721 22DE  
                                     u8641 21D2                                       u8561 20EC  
                                     u9177 39B0                                       u9097 569C  
                                     u9281 5642                                       u7850 5994  
                                     u7930 5538                                       u9290 5B48  
                                     u8490 507E                                       u9370 4384  
                                     u9610 2C72                                       u9530 2B7A  
                                     u9450 29EC                                       u8810 2440  
                                     u8730 2314                                       u8650 2244  
                                     u8570 2102                                       u7851 5990  
                                     u7931 5534                                       u9291 5B42  
                                     u8491 507A                                       u9371 4380  
                                     u9611 2C6E                                       u9531 2B76  
                                     u9451 29E8                                       u8811 243C  
                                     u8731 2310                                       u8651 2240  
                                     u8571 20FE                                       u9195 3A08  
                                     u7860 59B0                                       u9380 46D8  
                                     u9620 2C86                                       u9540 2BA4  
                                     u9460 29FC                                       u9700 2612  
                                     u8900 2524                                       u8820 245C  
                                     u8740 2322                                       u8660 225C  
                                     u8580 2112                                       u7861 59AC  
                                     u9381 46D4                                       u9621 2C82  
                                     u9541 2BA0                                       u9461 29F8  
                                     u9701 260E                                       u8901 2520  
                                     u8821 2458                                       u8741 231E  
                                     u8661 2256                                       u8581 210E  
                                     u9390 470A                                       u9630 2CA0  
                                     u9550 2BC8                                       u9470 2A40  
                                     u9710 2624                                       u8910 2534  
                                     u8830 246C                                       u8750 2340  
                                     u8670 225E                                       u8590 2154  
                                     u9391 4706                                       u9631 2C9C  
                                     u9551 2BC4                                       u9471 2A3C  
                                     u9711 2620                                       u8911 2530  
                                     u8831 2468                                       u8751 233C  
                                     u8591 2150                                       u7960 464A  
                                     u9640 2CE8                                       u9560 2BDE  
                                     u9480 2A52                                       u9800 28C4  
                                     u9720 2634                                       u8920 2554  
                                     u8840 247E                                       u8760 2378  
                                     u8680 2286                                       u7961 4646  
                                     u9641 2CE4                                       u9561 2BDA  
                                     u9481 2A4E                                       u9801 28C0  
                                     u9721 2630                                       u8921 2550  
                                     u8841 247A                                       u8761 2374  
                                     u8681 2282                                       u7970 4678  
                                     u7954 462A                                       u9650 2D18  
                                     u9570 2BFC                                       u9490 2A62  
                                     u9810 28D8                                       u9730 266A  
                                     u8930 2566                                       u8850 2494  
                                     u8770 23BE                                       u8690 22A4  
                                     u7971 4674                                       u7955 4624  
                                     u9651 2D14                                       u9571 2BF8  
                                     u9491 2A5E                                       u9811 28D4  
                                     u9731 2666                                       u8931 2562  
                                     u8851 2490                                       u8771 23BA  
                                     u8691 22A0                                       u7980 468A  
                                     u9900 5276                                       u9660 2D46  
                                     u9580 2C1C                                       u9820 28F2  
                                     u9740 267A                                       u8940 2582  
                                     u8860 24AA                                       u8780 23F4  
                                     u7981 4686                                       u9901 5272  
                                     u9661 2D42                                       u9581 2C18  
                                     u9821 28EE                                       u9741 2676  
                                     u8941 257E                                       u8861 24A6  
                                     u8781 23F0                                       u7990 46C4  
                                     u9910 529C                                       u9590 2C2E  
                                     u9830 293A                                       u9750 27F4  
                                     u9670 25B0                                       u8870 24BE  
                                     u8790 2404                                       u8950 5AA0  
                                     u7991 46C0                                       u9911 5298  
                                     u9591 2C2A                                       u9831 2936  
                                     u9671 25AC                                       u8871 24BA  
                                     u8791 2400                                       u8951 5A9A  
                                     u9920 52C0                                       u9840 2968  
                                     u9760 284E                                       u9680 25C2  
                                     u8880 24D8                                       u8960 5AA2  
                                     u9921 52BC                                       u9841 2964  
                                     u9761 284A                                       u9681 25BE  
                                     u8881 24D4                                       u8970 5134  
                                     u9930 52DA                                       u9850 29A2  
                                     u9770 286E                                       u9690 25D2  
                                     u8890 2512                                       u8971 5130  
                                     u9931 52D6                                       u9851 299E  
                                     u9771 286A                                       u9755 27EA  
                                     u9691 25CE                                       u8891 250E  
                                     u8980 5156                                       u9860 51FC  
                                     u9940 52F4                                       u9780 2880  
                                     u8981 5152                                       u9861 51F8  
                                     u9941 52F0                                       u9781 287C  
                                     u8990 51AC                                       u9870 5216  
                                     u9950 5312                                       u9790 28AE  
                                     u8991 51A8                                       u9871 5212  
                                     u9951 530E                                       u9791 28AA  
                                     u9880 523C                                       u9960 5328  
                                     u9881 5238                                       u9961 5324  
                                     u9890 525A                                       u9970 534C  
                                     u9891 5256                                       u9971 5348  
                                     u9980 543C                                       u9981 5438  
                                     u9990 547A                                       u9991 5476  
                                     _WPUB 000F5B                                       abs@a 0016  
                                     _dbuf 0164                                       _atoi 40A4  
                                     _ctoa 5718                                       _main 36A2  
                                     _dtoa 30E0                                       _font F1BD  
                                     _prec 0058                                       _temp 00E8  
                                     _otoa 3D00                                       _nout 00F2  
                                     pad@i 001B                                       pad@p 0018  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 001D  
                                     fsr2l 000FD9                                       _stoa 43C6  
                                     btemp 005A                                       _utoa 3AFC  
                                     _xtoa 33C6                              ___fpclassifyf 4D9C  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 003E                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0015                     __end_of_SPI_Initialize 5D08  
                             _tolower$2094 0010                              lcd_fill@width 0011  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                              _string_temp 0100                                      ??_abs 0018  
                                    ??_pad 001A             __size_of_OSCILLATOR_Initialize 0012  
            __end_of_OSCILLATOR_Initialize 5D1A                              ___fltol@sign1 000C  
                          __end_of___aodiv 43C6                                      ?_atoi 000B  
                                    ?_ctoa 001F                            __end_of___fladd 2596  
                                    ?_main 0001                                      ?_dtoa 001F  
                          __end_of___aomod 482A                            __end_of___fldiv 2D5A  
                          __end_of___awdiv 52AE                            __end_of___flneg 5B18  
                                    STR_12 FFC6                                      STR_14 FFC6  
                                    STR_30 FFE9                                      STR_23 FFC7  
                                    STR_32 FFE9                                      STR_16 FFCE  
                                    STR_41 FFEC                                      STR_18 FFCE  
                                    STR_34 FFEF                                      STR_27 FFCF  
                                    STR_51 FFDB                                      STR_36 FFEF  
                                    STR_44 FFDA                            __end_of___awmod 535E  
                                    STR_61 FFD6                                      STR_46 FFDA  
                                    STR_54 FFF5                                      STR_71 FFF2  
                                    STR_39 FFEC                                      STR_56 FFF5  
                                    STR_81 FFDF                                      STR_66 FFD7  
                                    STR_74 FFDE                                      STR_91 FFE2  
                                    STR_59 FFD6                                      STR_76 FFDE  
                                    STR_84 FFF8                                      STR_69 FFF2  
                                    STR_93 FFC2                                      STR_86 FFF8  
                                    STR_95 FFC2                            __end_of___flmul 29C0  
                                    STR_89 FFE2                                      ?_otoa 001F  
                          __end_of___flsub 58EE                            __end_of___fltol 4C98  
        __end_of_IOCB4_SetInterruptHandler 5D24                                      ?_stoa 000D  
                                    u10000 54AE                                      u10001 54AA  
                                    u10010 4CC6                                      u10011 4CC2  
                                    u10020 4D04                                      u10100 4C1E  
                                    u10021 4D00                                      u10101 4C1A  
                                    u10030 4D22                                      u10110 4C46  
                                    u10031 4D1E                                      u10111 4C42  
                                    ?_utoa 001F                                      u10040 4D42  
                                    u10120 4C66                                      u11000 3EAA  
                                    u10200 5000                                      u10041 4D3E  
                                    u10121 4C62                                      u11001 3EA6  
                                    u10201 4FFC                                      u10210 57DE  
                                    u10050 4D92                                      u10130 4C76  
                                    u10211 57DA                                      u10051 4D8E  
                                    u10131 4C72                                      u11011 43D0  
                                    u10220 580C                                      u10300 31B2  
                                    u10060 5AF6                                      u11020 43F2  
                                    u11100 3B0A                                      u10221 5808  
                                    u10301 31AE                                      u10061 5AF2  
                                    u11021 43EE                                      u10141 4EA0  
                                    u11101 3B06                                      u10230 572C  
                                    u10310 32DC                                      u10070 4BA8  
                                    u11030 4424                                      u10150 4EC4  
                                    u11110 3B28                                      u10231 5728  
                                    u10311 32D8                                      u10071 4BA4  
                                    u11031 4420                                      u10151 4EC0  
                                    u11111 3B24                                      u10320 32FA  
                                    u10240 3110                                      u10080 4BDC  
                                    u10400 159E                                      u11040 4442  
                                    u10160 4EEE                                      u11120 3C74  
                                    u11200 3482                                      u12000 5594  
                                    u10321 32F6                                      u10241 310A  
                                    u10401 159A                                      u11041 443E  
                                    u10161 4EEA                                      u11121 3C70  
                                    u11201 347E                                      u12001 5590  
                                    u10330 3314                                      u10250 3112  
                                    u10090 4C0A                                      u10410 15AC  
                                    u11050 446E                                      u10170 4F2E  
                                    u11130 3C92                                      u11210 34CC  
                                    u12010 4A96                                      u10331 3310  
                                    u10091 4C06                                      u10411 15A8  
                                    u11051 446A                                      u10171 4F2A  
                                    u11131 3C8E                                      u11211 34C6  
                                    u12011 4A92                                      u10340 332E  
                                    u10260 3128                                      u10500 1722  
                                    u10420 15BE                                      u11060 44A8  
                                    u10180 4FA8                                      u11140 3CAC  
                                    u11300 3612                                      u11220 34CE  
                                    u12020 4AC4                                      u10341 332A  
                                    u10261 3124                                      u10085 4BD2  
                                    u10501 171E                                      u10421 15BA  
                                    u11061 44A4                                      u10181 4FA4  
                                    u11141 3CA8                                      u11301 360E  
                                    u12021 4AC0                                      u10350 333E  
                                    u10270 3156                                      u10510 17A6  
                                    u10430 1606                                      u11070 44F8  
                                    u10190 4FD2                                      u11150 3CC6  
                                    u11310 362C                                      u11230 34E4  
                                    u12030 4B24                                      u10351 333A  
                                    u10271 3152                                      u10511 17A2  
                                    u10431 1602                                      u11071 44F4  
                                    u10191 4FCE                                      u11151 3CC2  
                                    u11311 3628                                      u11231 34E0  
                                    u12031 4B20                                      u11400 4218  
                                    u10360 3350                                      u10280 3174  
                                    u10600 1994                                      u10520 183A  
                                    u10440 1634                                      u11080 4508  
                                    u11160 3CD6                                      u11320 363C  
                                    u11240 3518                                      u12040 4B32  
                                    u11401 4214                                      u10361 334C  
                                    u10281 3170                                      u10601 1990  
                                    u10521 1836                                      u10441 162E  
                                    u11081 4504                                      u11161 3CD2  
                                    u11321 3638                                      u11241 3512  
                                    u12041 4B2E                                      u10370 3360  
                                    u10290 31A2                                      u10610 19BA  
                                    u10530 18AC                                      u10450 1636  
                                    u11090 4542                                      u11410 4986  
                                    u11330 364C                                      u11250 351A  
                                    u11170 33D4                                      u12050 4B60  
                                    u10371 335C                                      u10291 319E  
                                    u10611 19B6                                      u10531 18A8  
                                    u11091 453E                                      u11411 4982  
                          __end_of___lodiv 4F8A                                      u11331 3648  
                                    u11171 33D0                                      u12051 4B5C  
                                    u11340 40DE                                      u10380 3378  
                                    u10700 1C2E                                      u10620 19CC  
                                    u10540 18D2                                      u10460 164E  
                                    u11420 49C2                                      u11260 3530  
                                    u11180 33F2                                      u11500 0146  
                                    u12060 36FC                            ___awdiv@divisor 0006  
                                    u11341 40DA                                      u10381 3374  
                                    u10701 1C2A                                      u10621 19C8  
                                    u10541 18CE                                      u10461 164A  
                                    u11261 352C                                      u11181 33EE  
                                    u11501 0142                                      u12061 36F8  
                                    u11350 4116                                      u10710 1C96  
                                    u10630 19DA                                      u10550 18E4  
                                    u10470 16DA                                      u10390 154E  
                                    u11430 49D2                                      u11270 3598  
                                    u11190 341E                                      u11510 016E  
                                    u12070 3814                                      u11351 4112  
                                    u10711 1C92                                      u10631 19D6  
                                    u10551 18E0                                      u10471 16D6  
                                    u10391 154A                                      u11431 49CE  
                                    u11191 341A                                      u11511 016A  
                                    u12071 3810                                      ?_xtoa 001F  
                                    u11360 4132                                      u10800 1EDA  
                                    u10720 1D3A                                      u10640 19F0  
                                    u10560 1906                                      u10480 1708  
                                    u11440 49F0                                      u11280 35DA  
                                    u11600 0370                                      u11520 01B2  
                                    u12080 3830                                      _T1CON 000FCD  
                                    u11361 412E                                      u10801 1ED6  
                                    u10721 1D36                                      u10641 19EC  
                                    u10561 1902                                      u10481 1702  
                                    u11441 49EC                                      u11281 35D6  
                                    u11601 036C                                      u11521 01AE  
                                    u12081 382C                                      u11370 41EE  
                                    u10810 1EEC                                      u10730 1D4C  
                                    u10650 19FE                                      u10570 192C  
                                    u10490 170A                                      u11450 4A02  
                                    u11290 35F8                                      u11610 03A4  
                                    u11530 0230                                      u11371 41E8  
                                    u10811 1EE8                                      u10731 1D48  
                                    u10651 19FA                                      u10571 1928  
                                    u11451 49FE                                      u11427 49B8  
                                    u11291 35F4                                      u11275 3586  
                                    u11611 03A0                                      u11531 022A  
                                    u11380 41F0                                      u10900 208A  
                                    u10820 1EFA                                      u10740 1D5E  
                                    u10660 1A28                                      u10580 1942  
                                    u11460 4A44                                      u11700 070A  
                                    u11620 03E8                                      u11540 0232  
                                    u10901 2086                                      u10821 1EF6  
                                    u10741 1D5A                                      u10661 1A24  
                                    u10581 193E                                      u11461 4A40  
                                    u11701 0706                                      u11621 03E4  
                                    u11390 4206                                      u10830 1F30  
                                    u10750 1D6C                                      u10670 1B70  
                                    u10590 195E                                      u10910 3D0E  
                                    u11470 4A66                                      u11710 0740  
                                    u11630 0442                                      u11550 024A  
                                    u11391 4202                                      u10831 1F2C  
                                    u10751 1D68                                      u10671 1B6C  
                                    u10591 195A                                      u10911 3D0A  
                                    u11711 073C                                      u11631 043E  
                                    u11551 0246                                      u10840 1F5E  
                                    u10760 1D86                                      u10680 1BD6  
                                    u10920 3D2C                                      u11800 0B3C  
                                    u11720 07A6                                      u11640 04C6  
                                    u11560 0270                                      u11480 0068  
                                    u12097 5BC8                                      u10841 1F5A  
                                    u10761 1D82                                      u10681 1BD2  
                                    u10921 3D28                                      u11465 4A34  
                                    u11801 0B38                                      u11721 07A2  
                                    u11641 04C2                                      u11561 026C  
                                    u11481 0064                                      u10850 1FE2  
                                    u10770 1D94                                      u10690 1C1E  
                                    u10930 3DE6                                      u11810 0BC4  
                                    u11730 0856                                      u11650 04FC  
                                    u11570 02AC                                      u11490 0138  
                                    u10851 1FDE                                      u10771 1D90  
                                    u10691 1C1A                                      u11467 4A2A  
                                    u11811 0BC0                                      u11731 0852  
                                    u11651 04F8                                      u11571 02A8  
                                    u11491 0134                                      u10860 1FFC  
                                    u10780 1DEC                                      u10940 3E26  
                                    u11900 109C                                      u11820 0C4A  
                                    u11740 08C0                                      u11660 05B4  
                                    u11580 0356                                      u10861 1FF8  
                                    u10781 1DE8                                      u10941 3E22  
                                    u11477 4A5C                                      u11901 1098  
                                    u11821 0C46                                      u11741 08BA  
                                    u11661 05B0                                      u11581 0350  
                                    u10870 2014                                      u10790 1EBE  
                                    u10950 3E44                                      u11910 1124  
                                    u11830 0CBC                                      u11750 08C2  
                                    u11670 05EA                                      u11590 0358  
                                    u10871 2010                                      u10791 1EBA  
                                    u10951 3E40                                      u10935 3DD4  
                                    u11911 1120                                      u11831 0CB8  
                                    u11671 05E6                                      u10880 2072  
                                    u10960 3E5E                                      u11920 115A  
                                    u11840 0D3C                                      u11760 08DA  
                                    u11680 0660                                      u10881 206C  
                                    u10961 3E5A                                      u11921 1156  
                                    u11841 0D38                                      u11761 08D6  
                                    u11681 065C                                      u10890 2074  
                                    u10970 3E78                                      u11930 123C  
                                    u11850 0DAE                                      u11770 0988  
                                    u11690 0686                                      u10971 3E74  
                                    u11931 1238                                      u11851 0DAA  
                                    u11771 0984                                      u11691 0682  
                                    u10980 3E88                                      u11940 1272  
                                    u11860 0E5C                                      u11780 0A3E  
                                    u10981 3E84                                      u11941 126E  
                                    u11861 0E58                                      u11781 0A3A  
                                    u10990 3E98                                      u11950 1312  
                                    u11870 0EE8                                      u11790 0AB6  
                                    u10991 3E94                                      u11951 130E  
                                    u11871 0EE4                                      u11791 0AB2  
                                    u11960 1338                                      u11880 0F9E  
                          __end_of___lomod 505A                                      u11961 1334  
                                    u11881 0F9A                                      u11970 13D6  
                                    u11890 1016                                      u11971 13D2  
                                    u11891 1012                                      u11980 140C  
                                    u11981 1408                                      u11990 14AC  
                                    u11991 14A8                                      i2l283 56EE  
                                    i2l286 5716                            ___awdiv@counter 0008  
                             vfpfcnvrt@fmt 0048                               vfpfcnvrt@llu 00B4  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_WRT0$OFF 000000  
                          ??_lcd_draw_char 0017                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 5BE6                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 5CCA                                      _flags 00F6  
                                    _botao 00FA                                      _errno 00F0  
                                    _fputc 505A                            __end_of_isalpha 5A36  
                                    _fputs 5934                            __end_of_isdigit 5B50  
                                    atoi@n 0018                                      pad@fp 0014  
                                    atoi@s 000B                                      _width 00F4  
                                    ctoa@c 0021                                      _putch 5D30  
                                    ctoa@w 0022                                      dtoa@d 0021  
                                    dtoa@i 0041                                      dtoa@n 0039  
                                    dtoa@p 0033                                      dtoa@s 0037  
                                    dtoa@w 0035                           __end_of_SPI_Open 540E  
                          __end_of_islower 5AA8                            __end_of_isspace 5818  
                  __end_of_TMR1_Initialize 5C40                            __end_of_isupper 5AE0  
                                    pclath 000FFA                                      tablat 000FF5  
                                    otoa@d 0021                                      otoa@i 003F  
                                    otoa@n 0037                                      otoa@p 0031  
                                    otoa@t 0033                                      otoa@w 0035  
                                    plusw1 000FE3                                      plusw2 000FDB  
                                    stoa@i 0019                                      stoa@l 0021  
                                    stoa@p 001F                                      stoa@s 000F  
                                    stoa@w 001B                                      ttemp5 005B  
                                    ttemp6 005E                                      ttemp7 0062  
                                    utoa@d 0021                                      utoa@i 003D  
                                    utoa@n 0035                                      utoa@p 0031  
                                    utoa@w 0033                                      status 000FD8  
                                    wtemp8 005B                             ?___fpclassifyf 0004  
                          __end_of_tolower 55FE                                      xtoa@c 0044  
                                    xtoa@d 0021                                      xtoa@i 0042  
                                    xtoa@n 003A                                      xtoa@p 0036  
                                    xtoa@w 0038                                      xtoa@x 0029  
                          __end_of_strncmp 4A82                            __end_of_toupper 565C  
                           lcd_fill@height 000F                           ___lodiv@dividend 0004  
                          ?_SPI_Initialize 0001                               _toupper$2109 0010  
          ??_IOCB4_DefaultInterruptHandler 0001                            __initialization 5774  
                             __end_of_atoi 423E                               __end_of_ctoa 5774  
                             __end_of_main 38EA                               __end_of_dtoa 33C6  
                             __end_of_font FF89                               __end_of_otoa 3EF0  
                             __end_of_stoa 454C                               __end_of_utoa 3D00  
                             __end_of_xtoa 36A2                          __end_of_IOCB4_ISR 5C14  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 000D  
                                   ??_ctoa 0022                                     ??_main 0058  
                                   ??_dtoa 0029                          ?_lcd_set_cursor_x 0007  
                        ?_lcd_set_cursor_y 0007                              lcd_send@value 0005  
                                   ??_otoa 0029                                     ??_stoa 0011  
                                   ??_utoa 0029                                     ??_xtoa 002A  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0009  
                       ??_lcd_set_cursor_y 0009                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0014                             lcd_draw_char@i 0022  
                           lcd_draw_char@j 0020                             lcd_draw_char@k 0021  
                 __end_of_SPI_ExchangeByte 5C80                             lcd_draw_char@x 000D  
                           lcd_draw_char@y 000F                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0004                                     STR_100 FFE3  
                                   ?_fputs 000D                                     STR_111 FFE6  
                                   STR_104 FFC3                                     STR_113 FFE6  
                                   _ADRESH 000FC4                                     STR_107 FFFB  
                                   STR_109 FFFB                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 0004                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                           __CFG_WDTEN$OFF 000000                                     i2l6451 5BFA  
                                   i2l6383 56BA                                     i2l6385 56C8  
                                   i2l6449 5BE6                                     i2l6561 5CC6  
                                   i2l6387 5702                                     i2l6389 570E  
                                   i2l6557 5CB2                                     i2l6559 5CC2  
                                   i2l6891 0020                                     i2l6893 002E  
                                   i2l6889 0012                                     _OSCCON 000FD3  
                            vfpfcnvrt@done 009A                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                           __end_of___xxtofl 40A4  
                          _global_bg_color 00F8                             __CFG_XINST$OFF 000000  
                         ??_lcd_draw_pixel 0009                           __end_of_lcd_fill 553A  
                             vfprintf@cfmt 0056                           __end_of_lcd_init 30E0  
                         __end_of_lcd_send 5CB2                                     ___flge 4C98  
                                   ___fleq 540E                                  ??___aodiv 0014  
                                ??___fladd 000C                                  ??___aomod 0014  
                                   ___wmul 5C40                                  ??___fldiv 000C  
                                ??___awdiv 0008                                  ??___flneg 0008  
                           __CFG_STVREN$ON 000000                                  ??___awmod 0008  
                                ??___flmul 001A                                  ??___flsub 0033  
                                ??___fltol 0008                                  ??___lodiv 0014  
                                ??___lomod 0014                                     _efgtoa 1526  
                                   _floorf 38EA                                     clear_0 579A  
                                   clear_1 57A6                                     clear_2 57B2  
                         ___awdiv@quotient 000A                            ___awmod@divisor 0006  
                          ___awmod@counter 0008                                     pad@buf 0016  
                                   ctoa@fp 001F                                     dtoa@fp 001F  
                                   _strcpy 565C                                     _strlen 5B50  
                                ??_msDelay 0004                                     fputc@c 0004  
                                   fputs@c 0011                                     fputs@i 0012  
                                   fputs@s 000D                                  ??_isalpha 0006  
                                ??_isdigit 0006                            ___fpclassifyf@e 000C  
                          ___fpclassifyf@u 000E                            ___fpclassifyf@x 0004  
                                ??_islower 0006                               __mediumconst F1BC  
                                ??_isspace 0006                                     otoa@fp 001F  
                                   tblptrh 000FF7                                  ??_isupper 0006  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0008                                     stoa@cp 001D  
                                   stoa@fp 000D                                     putch@c 0001  
                         __end_of_vfprintf 559E                                     utoa@fp 001F  
IOCB4_SetInterruptHandler@InterruptHandler 0004                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 5BB8                                  ??_tolower 000C  
                                   xtoa@fp 001F                                  ??_strncmp 000A  
                                ??_toupper 000C              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 002B                                 ___flge@ff2 002F  
                          ??___fpclassifyf 0008                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 000E                               ___xxtofl@exp 000D  
                        _SYSTEM_Initialize 5C80                               ___xxtofl@val 0004  
                               ___fleq@ff1 0004                                 ___fleq@ff2 0008  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 57BC                                 ___flneg@f1 0004  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0004                             __pcstackCOMRAM 0001  
                             __pidataBANK1 5D24                        ??_SYSTEM_Initialize 0006  
                            __end_of_fputc 5124                              __end_of_fputs 5978  
    __end_of_IOCB4_DefaultInterruptHandler 5D34     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 5D32                              __end_of_putch 5D32  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0006  
                         ??_lcd_set_cursor 000D                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0008                  __end_of_SYSTEM_Initialize 5C9A  
                                  ??_fputs 0011                                    ??_putch 0004  
                               __pbssBANK0 00DC                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                            __CFG_PLLCFG$OFF 000000  
                                  ?___flge 002B                                    ?___fleq 0004  
                                  ?___wmul 0004                                    ?_efgtoa 0037  
                                  ?_floorf 001D                                 ??_SPI_Open 0004  
                  __size_of_ADC_Initialize 0016                                    ?_strcpy 0004  
                                  ?_strlen 0004                           __CFG_CANMX$PORTB 000000  
                                ?___xxtofl 0004                                    _REFOCON 000F9A  
                                  _OSCCON2 000FD2                         __size_of_vfpfcnvrt 14E4  
                                  _OSCTUNE 000F9B               __size_of_IOCB4_InterruptCall 005E  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 000D                                  ?_lcd_init 0001  
                                ?_lcd_send 0005                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0004                           ??_SPI_Initialize 0004  
                _IOCB4_SetInterruptHandler 5D1A                               _codigo_digit 00FC  
                          __CFG_PWRTEN$OFF 000000                       _ADC_InterruptHandler 00FE  
                                  __Hparam 0000                                    __Lparam 0000  
                       __size_of_vsnprintf 0110                          ??_lcd_draw_string 002D  
                          __size_of___flge 0104                            __size_of___fleq 00AA  
                                  ___aodiv 423E                                    ___fladd 20D6  
                                  ___aomod 46C6                                    ___fldiv 29C0  
                                  ___awdiv 51EA                                    ___flneg 5AE0  
                                  ___awmod 52AE                                    ___flmul 2596  
                                  ___flsub 58A8                                    ___fltol 4B92  
                          __size_of___wmul 0026                                    ___lodiv 4E9A  
                                  ___lomod 4F8A                                  ?_vfprintf 0050  
                          __size_of_efgtoa 0BB0                                  ?_snprintf 00D2  
                          __size_of_floorf 0212                                    __pcinit 5774  
                                  __ramtop 0F00                                    __ptext0 36A2  
                                  __ptext1 5B86                                    __ptext2 4A82  
                                  __ptext3 553A                                    __ptext4 0042  
                                  __ptext5 33C6                                    __ptext6 55FE  
                                  __ptext7 5A70                                    __ptext8 59FA  
                                  __ptext9 3AFC                                    _msDelay 5BB8  
                                _IOCB4_ISR 5BE6                            __size_of_strcpy 005E  
                          __size_of_strlen 0036                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 5D08                               __size_of_abs 0040  
                             __size_of_pad 00C6                                    _isalpha 59FA  
                                  _isdigit 5B18                                 ??___xxtofl 0008  
                         ___awmod@dividend 0004                                    _islower 5A70  
                 ??_PIN_MANAGER_Initialize 0006                                    _isspace 57C6  
                        __CFG_MSSPMSK$MSK7 000000                                    _isupper 5AA8  
                                  efgtoa@c 003D                                    efgtoa@d 0078  
                                  efgtoa@e 0090                                    efgtoa@f 0039  
                                  efgtoa@g 008C                                    efgtoa@h 0082  
                                  efgtoa@i 008A                                    efgtoa@l 0086  
                                  efgtoa@m 0074                                    efgtoa@n 0092  
                                  efgtoa@p 007C                                    efgtoa@t 0070  
                                  efgtoa@u 0094                                    efgtoa@w 007F  
                                  _pot_val 00E4                                    atoi@neg 0011  
                    __end_of_lcd_draw_char 46C6                 __size_of_SYSTEM_Initialize 001A  
                               ??_lcd_fill 000F                                    _tolower 559E  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 0013  
                               ??_lcd_send 0006                                    _strncmp 495C  
                                  _toupper 55FE                       end_of_initialization 57BC  
                                  floorf@e 002B                                    floorf@m 0027  
                                  floorf@u 002D                                    floorf@x 001D  
                       ??_SPI_ExchangeByte 0004                  __size_of_lcd_set_cursor_x 0048  
                __size_of_lcd_set_cursor_y 0048                                    fputc@fp 0006  
                                  fputs@fp 000F                        lcd_draw_char@fIndex 0011  
                        __end_of_vfpfcnvrt 1526                                 efgtoa@mode 0081  
                               efgtoa@sign 007A                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 000D                                 ??_vfprintf 0056  
                               ??_snprintf 0058                                    strcpy@d 000C  
                                  strlen@a 0006                                    strcpy@s 000A  
                                  strlen@s 0004                          lcd_draw_string@pS 0027  
                                _PORTBbits 000F81                          _spi_configuration FF89  
                               ?_IOCB4_ISR 0001                                ___fladd@grs 0013  
                         __CFG_FOSC$INTIO2 000000                              ___xxtofl@sign 000C  
                                _TRISCbits 000F94                          __end_of_vsnprintf 4B92  
                              ___fldiv@grs 0017                                ___fldiv@rem 0010  
                              ___flmul@grs 0020                                 lcd_send@dc 0006  
                               _string_pot 0200               __end_of_INTERRUPT_Initialize 5D30  
                     SPI_ExchangeByte@data 0004                             __end_of___flge 4D9C  
                           __end_of___fleq 54B8                  __end_of_spi_configuration FF8D  
                              vfpfcnvrt@ap 004A                                vfpfcnvrt@cp 0098  
                              vfpfcnvrt@ct 00A6                                vfpfcnvrt@fp 0046  
                              vfpfcnvrt@ll 00A9                             __end_of___wmul 5C66  
                              vfpfcnvrt@vp 00B1                             __end_of_efgtoa 20D6  
                           _ADC_Initialize 5CE0                             __end_of_floorf 3AFC  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 00DC  
                        __size_of_SPI_Open 00B0                             __end_of_strcpy 56BA  
                           __end_of_strlen 5B86                        start_initialization 5774  
                          ___lodiv@divisor 000C                            ___lodiv@counter 001C  
          __size_of_PIN_MANAGER_Initialize 0046                                __end_of_abs 59FA  
                              __end_of_pad 51EA                      __end_of___fpclassifyf 4E9A  
                 __size_of_PIN_MANAGER_IOC 0018             SPI_Open@spiUniqueConfiguration 0005  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 0052  
                      _IOCB4_InterruptCall 56BA                                   ??___flge 0033  
                                 ??___fleq 000C                                   ??___wmul 0008  
                                 ??_efgtoa 003E                     __end_of_ADC_Initialize 5CF6  
                              __pdataBANK1 01B4                                   ??_floorf 0021  
                                 ??_strcpy 0008                                   ??_strlen 0006  
                              ??_IOCB4_ISR 0002                                  ___fladd@a 0008  
                                ___fladd@b 0004                    __size_of_lcd_draw_pixel 0016  
                             vsnprintf@cnt 00CA                               vsnprintf@fmt 00C0  
                                ___fldiv@a 0008                                  ___fldiv@b 0004  
                                ___flmul@a 0016                                  ___flmul@b 0012  
                              __pbssCOMRAM 0058                                  ___flsub@a 002F  
                                ___flsub@b 002B                              __pcstackBANK0 0060  
                            __pcstackBANK1 01BF                           ___aodiv@dividend 0004  
                     ?_IOCB4_InterruptCall 0001                                snprintf@fmt 00D6  
                        __size_of___xxtofl 01B4                            _lcd_draw_string 482A  
                         _lcd_set_cursor_x 5860                           _lcd_set_cursor_y 5818  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$1971 0013  
                                _atoi$1972 0017                                  _atoi$1973 0015  
                                __pnvBANK1 01BB                                _efgtoa$1331 0068  
                              _efgtoa$1326 0064                                _efgtoa$1335 006A  
                              _efgtoa$1327 0066                                _efgtoa$1336 006C  
                              _efgtoa$1337 006E                     _PIN_MANAGER_Initialize 58EE  
                                _dtoa$1303 0031                                  __pintcode 0008  
                            __pmediumconst F1BC                                   ?___aodiv 0004  
                                 ?___fladd 0004                                   ?___aomod 0004  
                                 ?___fldiv 0004                                   ?___awdiv 0004  
                         ___aodiv@quotient 0016                                   ?___flneg 0004  
                                 ?___awmod 0004                                   ?___flmul 0012  
                                 ?___flsub 002B                                   ?___fltol 0004  
                                 ?___lodiv 0004                                   ?___lomod 0004  
                          ?_ADC_Initialize 0001               ??_INTERRUPT_InterruptManager 0002  
                        __size_of_vfprintf 0064                          __size_of_snprintf 0032  
                                 ?_msDelay 0001                            ___lomod@divisor 000C  
                          ___lomod@counter 0014                                   ?_isalpha 0004  
                                 ?_isdigit 0004                                   ?_islower 0004  
                    ??_IOCB4_InterruptCall 0001                                   ?_isspace 0004  
                                 ?_isupper 0004                                   ?_tolower 000A  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0004                                   ?_toupper 000A  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 5D2C  
                  __size_of_lcd_set_cursor 0042                             ___wmul@product 0008  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                            lcd_set_cursor@x 0009  
                          lcd_set_cursor@y 000B        __size_of_INTERRUPT_InterruptManager 0036  
                                 _PIR1bits 000F9E                      lcd_draw_string@lIndex 0033  
                                 i2u805_40 5CC2                                   i2u805_41 5CBE  
                                 i2u831_40 0020                                   i2u831_41 001C  
                                 i2u832_40 002E                                   i2u832_41 002A  
                                 i2u782_40 56C8                                   i2u782_41 56C4  
                                 i2u783_40 56D8                                   i2u783_41 56D2  
                                 i2u783_46 56DA                                   i2u784_40 5702  
                                 i2u784_41 56FE                                   i2u788_40 5BFA  
                                 i2u788_41 5BF6                                   i2u789_48 5C00  
                                 i2u789_49 5C12                                   _RCONbits 000FD0  
                __size_of_SPI_ExchangeByte 001A                                  _tensao_in 00EC  
                         lcd_draw_string@k 0031                           lcd_draw_string@x 0023  
                         lcd_draw_string@y 0025                          ??_PIN_MANAGER_IOC 0002  
                                _vfpfcnvrt 0042                                  _xtoa$1373 0032  
                                _xtoa$1374 0034                                   _SPI_Open 535E  
                        ??_TMR1_Initialize 0004                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0004                           __CFG_SOSCSEL$DIG 000000  
                  __end_of_lcd_draw_string 495C                               _isspace$2011 000A  
                                msDelay@ms 0005                                 vfpfcnvrt@c 00B3  
                               vfpfcnvrt@f 00A2                                _INTCON2bits 000FF1  
                                copy_data0 5788                      ?_INTERRUPT_Initialize 0001  
                                _vsnprintf 4A82                        lcd_draw_pixel@color 0007  
                                 __Hrparam 0000                                 vfprintf@ap 0054  
                                 __Lrparam 0000                                 vfprintf@fp 0050  
                        _ADC_GetConversion 5A36                         __CFG_BOREN$SBORDIS 000000  
                  __size_of_SPI_Initialize 0012                    ??_OSCILLATOR_Initialize 0004  
                   __size_of_lcd_draw_char 017A                         ?_ADC_GetConversion 0004  
                         __size_of___aodiv 0188                           __size_of___fladd 04C0  
                         __size_of___aomod 0164                           __size_of___fldiv 039A  
                         __size_of___awdiv 00C4                           __size_of___flneg 0038  
                         __size_of___awmod 00B0                                vsnprintf@ap 00C2  
                         __size_of___flmul 042A                           __size_of___flsub 0046  
                         __size_of___fltol 0106                           __size_of___lodiv 00F0  
                         __size_of___lomod 00D0                                 ?_vfpfcnvrt 0046  
                               snprintf@ap 01C1                            ___aodiv@divisor 000C  
                          ___aodiv@counter 0014                     _IOCB4_InterruptHandler 01BD  
                           _lcd_draw_pixel 5CCA                         ___fpclassifyf@F463 00E0  
                      ??_ADC_GetConversion 0006                           __size_of_msDelay 002E  
                                 ___xxtofl 3EF0                           __size_of_isalpha 003C  
                         __size_of_isdigit 0038           fp__IOCB4_DefaultInterruptHandler 0000  
           ?_IOCB4_DefaultInterruptHandler 0001                           __size_of_islower 0038  
                         __size_of_isspace 0052                                   __ptext10 4F8A  
                                 __ptext11 4E9A                                   __ptext20 4D9C  
                                 __ptext12 495C                                   __ptext21 4B92  
                                 __ptext13 43C6                                 _T1GCONbits 000FAA  
                                 __ptext30 51EA                                   __ptext22 58A8  
                                 __ptext14 3D00                                   __ptext31 30E0  
                                 __ptext23 20D6                                   __ptext15 1526  
                                 __ptext40 5D30                                   __ptext32 59BA  
                                 __ptext24 5AE0                                   __ptext16 559E  
                                 __ptext41 40A4                                   __ptext33 46C6  
                                 __ptext25 2596                                   __ptext17 5AA8  
                                 __ptext50 5978                                   __ptext42 57C6  
                                 __ptext34 423E                                   __ptext26 4C98  
                                 __ptext18 565C                                   __ptext51 5818  
                                 __ptext43 5B18                                   __ptext35 5718  
                                 __ptext27 540E                                   __ptext19 38EA  
                                 __ptext60 58EE                                   __ptext52 5860  
                                 __ptext44 5C40                                   __ptext36 5124  
                                 __ptext28 29C0                                   __ptext61 5D1A  
                                 __ptext53 5CCA                                   __ptext45 2D5A  
                                 __ptext37 5B50                                   __ptext29 52AE  
                                 __ptext70 5D32                                   __ptext62 5D08  
                                 __ptext54 5C9A                                   __ptext46 5BB8  
                                 __ptext38 5934                                   __ptext71 56BA  
                                 __ptext63 5D2C                                   __ptext55 5C66  
                                 __ptext47 54B8                                   __ptext39 505A  
                                 __ptext72 0000                                   __ptext64 5CE0  
                                 __ptext56 3EF0                                   __ptext48 482A  
                                 __ptext65 535E                                   __ptext57 5C80  
                                 __ptext49 454C                                   __ptext66 5A36  
                                 __ptext58 5C14                                   __ptext59 5CF6  
                                 __ptext68 5CB2                                   __ptext69 5BE6  
                         __size_of_isupper 0038                                   _lcd_fill 54B8  
                                 _lcd_init 2D5A                                   _lcd_send 5C9A  
                         __size_of_tolower 0060                                 strcpy@dest 0004  
                         __size_of_strncmp 0126                           __size_of_toupper 005E  
                               ?_vsnprintf 00BC                              __size_of_atoi 019A  
                            __size_of_ctoa 005C                              __size_of_main 0248  
                            __size_of_dtoa 02E6                              __size_of_otoa 01F0  
                            __size_of_stoa 0186                              __size_of_utoa 0204  
                            __size_of_xtoa 02DC                  __end_of_ADC_GetConversion 5A70  
                                 efgtoa@fp 0037                                   efgtoa@ne 0076  
                                 efgtoa@pp 0072                                   efgtoa@ou 0060  
                                stoa@F1174 01B4                      lcd_draw_char@bg_color 0015  
                                 int$flags 005A                                   _vfprintf 553A  
                    lcd_draw_char@fg_color 0013         __end_of_INTERRUPT_InterruptManager 003E  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 5CE0  
                                 _snprintf 5B86                   __end_of_lcd_set_cursor_x 58A8  
                 __end_of_lcd_set_cursor_y 5860                        __CFG_INTOSCSEL$HIGH 000000  
                                 msDelay@k 0006                           ___aomod@dividend 0004  
                           _vfpfcnvrt$1410 00A0                             _vfpfcnvrt$1388 009C  
                           _vfpfcnvrt$1389 009E                                 _INTCONbits 000FF2  
                         ?_lcd_draw_string 0023                                   isalpha@c 0004  
                                 isdigit@c 0004                     ??_INTERRUPT_Initialize 0004  
                               vsnprintf@f 00CC                                 vsnprintf@n 00BE  
                               vsnprintf@s 00BC                              _lcd_draw_char 454C  
                                snprintf@n 00D4                                  snprintf@s 00D2  
                                 intlevel2 0000                             _lcd_set_cursor 5978  
                        lcd_set_cursor_x@x 0007                          lcd_set_cursor_y@y 0007  
                                 islower@c 0004                                   isspace@c 0004  
                  ?_PIN_MANAGER_Initialize 0001                                  strcpy@src 0006  
                                 isupper@c 0004                                  strncmp@_l 0004  
                                strncmp@_r 0006                           ??_ADC_Initialize 0004  
                         _SPI_ExchangeByte 5C66                    lcd_draw_string@bg_color 002B  
                              efgtoa@nmode 007E                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 000C                    lcd_draw_string@fg_color 0029  
                          ?_lcd_draw_pixel 0007                                ??_vfpfcnvrt 004C  
                                 stoa@nuls 0012                            ___aomod@counter 0014  
                                 tolower@c 000A                             _vsnprintf$2141 00C8  
                   __size_of___fpclassifyf 00FE                                   strncmp@l 000B  
                                 strncmp@n 0008                                   strncmp@r 000D  
                                 toupper@c 000A                                _SSPCON1bits 000FC6  
                   __end_of_lcd_set_cursor 59BA                             ?_lcd_draw_char 000D  
                            ___fladd@signs 0010                               ___aodiv@sign 0015  
           __end_of_PIN_MANAGER_Initialize 5934                                ??_vsnprintf 00C4  
                             ___fladd@aexp 0011                               ___fladd@bexp 0012  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 5CB2  
               __size_of_ADC_GetConversion 003A                               ___aomod@sign 0015  
                          _TMR1_Initialize 5C14  
