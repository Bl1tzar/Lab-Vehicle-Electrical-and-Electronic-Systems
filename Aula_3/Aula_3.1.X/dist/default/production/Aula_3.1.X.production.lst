

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 21 23:08:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 2.10
    95                           ; Generated 31/07/2019 GMT
    96                           ; 
    97                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F46K80 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK1
   130  005F2A                     __pidataBANK1:
   131                           	opt callstack 0
   132                           
   133                           ;initializer for stoa@F1174
   134  005F2A  28                 	db	40
   135  005F2B  6E                 	db	110
   136  005F2C  75                 	db	117
   137  005F2D  6C                 	db	108
   138  005F2E  6C                 	db	108
   139  005F2F  29                 	db	41
   140  005F30  00                 	db	0
   141                           
   142                           	psect	mediumconst
   143  00F1A6                     __pmediumconst:
   144                           	opt callstack 0
   145  00F1A6  00                 	db	0
   146  00F1A7                     _font:
   147                           	opt callstack 0
   148  00F1A7  0004               	dw	4
   149  00F1A9  0000               	dw	0
   150  00F1AB  0000               	dw	0
   151  00F1AD  0000               	dw	0
   152  00F1AF  0000               	dw	0
   153  00F1B1  0000               	dw	0
   154  00F1B3  0000               	dw	0
   155  00F1B5  0000               	dw	0
   156  00F1B7  0000               	dw	0
   157  00F1B9  0003               	dw	3
   158  00F1BB  0000               	dw	0
   159  00F1BD  0000               	dw	0
   160  00F1BF  00FE               	dw	254
   161  00F1C1  001B               	dw	27
   162  00F1C3  0000               	dw	0
   163  00F1C5  0000               	dw	0
   164  00F1C7  0005               	dw	5
   165  00F1C9  001E               	dw	30
   166  00F1CB  0000               	dw	0
   167  00F1CD  0000               	dw	0
   168  00F1CF  0000               	dw	0
   169  00F1D1  0000               	dw	0
   170  00F1D3  0000               	dw	0
   171  00F1D5  001E               	dw	30
   172  00F1D7  0000               	dw	0
   173  00F1D9  0000               	dw	0
   174  00F1DB  0000               	dw	0
   175  00F1DD  000B               	dw	11
   176  00F1DF  0000               	dw	0
   177  00F1E1  0000               	dw	0
   178  00F1E3  0010               	dw	16
   179  00F1E5  0001               	dw	1
   180  00F1E7  0010               	dw	16
   181  00F1E9  001D               	dw	29
   182  00F1EB  00F0               	dw	240
   183  00F1ED  0003               	dw	3
   184  00F1EF  001E               	dw	30
   185  00F1F1  0001               	dw	1
   186  00F1F3  0010               	dw	16
   187  00F1F5  0001               	dw	1
   188  00F1F7  0010               	dw	16
   189  00F1F9  001D               	dw	29
   190  00F1FB  00F0               	dw	240
   191  00F1FD  0003               	dw	3
   192  00F1FF  001E               	dw	30
   193  00F201  0001               	dw	1
   194  00F203  0010               	dw	16
   195  00F205  0001               	dw	1
   196  00F207  0000               	dw	0
   197  00F209  0000               	dw	0
   198  00F20B  0009               	dw	9
   199  00F20D  0000               	dw	0
   200  00F20F  0004               	dw	4
   201  00F211  001C               	dw	28
   202  00F213  0008               	dw	8
   203  00F215  0022               	dw	34
   204  00F217  0010               	dw	16
   205  00F219  0042               	dw	66
   206  00F21B  0010               	dw	16
   207  00F21D  00FF               	dw	255
   208  00F21F  007F               	dw	127
   209  00F221  0042               	dw	66
   210  00F223  0010               	dw	16
   211  00F225  0084               	dw	132
   212  00F227  0010               	dw	16
   213  00F229  0000               	dw	0
   214  00F22B  000F               	dw	15
   215  00F22D  0000               	dw	0
   216  00F22F  0000               	dw	0
   217  00F231  000C               	dw	12
   218  00F233  001C               	dw	28
   219  00F235  0000               	dw	0
   220  00F237  0022               	dw	34
   221  00F239  0010               	dw	16
   222  00F23B  0022               	dw	34
   223  00F23D  0008               	dw	8
   224  00F23F  0022               	dw	34
   225  00F241  0006               	dw	6
   226  00F243  001C               	dw	28
   227  00F245  0001               	dw	1
   228  00F247  00C0               	dw	192
   229  00F249  0000               	dw	0
   230  00F24B  0020               	dw	32
   231  00F24D  000E               	dw	14
   232  00F24F  0018               	dw	24
   233  00F251  0011               	dw	17
   234  00F253  0004               	dw	4
   235  00F255  0011               	dw	17
   236  00F257  0002               	dw	2
   237  00F259  0011               	dw	17
   238  00F25B  0000               	dw	0
   239  00F25D  000E               	dw	14
   240  00F25F  0000               	dw	0
   241  00F261  0000               	dw	0
   242  00F263  000B               	dw	11
   243  00F265  0000               	dw	0
   244  00F267  0000               	dw	0
   245  00F269  0000               	dw	0
   246  00F26B  000E               	dw	14
   247  00F26D  001C               	dw	28
   248  00F26F  0011               	dw	17
   249  00F271  00A2               	dw	162
   250  00F273  0010               	dw	16
   251  00F275  00C2               	dw	194
   252  00F277  0010               	dw	16
   253  00F279  0022               	dw	34
   254  00F27B  0011               	dw	17
   255  00F27D  001C               	dw	28
   256  00F27F  000A               	dw	10
   257  00F281  0000               	dw	0
   258  00F283  000C               	dw	12
   259  00F285  0000               	dw	0
   260  00F287  000C               	dw	12
   261  00F289  0000               	dw	0
   262  00F28B  0012               	dw	18
   263  00F28D  0000               	dw	0
   264  00F28F  0000               	dw	0
   265  00F291  0003               	dw	3
   266  00F293  0000               	dw	0
   267  00F295  0000               	dw	0
   268  00F297  001E               	dw	30
   269  00F299  0000               	dw	0
   270  00F29B  0000               	dw	0
   271  00F29D  0000               	dw	0
   272  00F29F  0006               	dw	6
   273  00F2A1  0000               	dw	0
   274  00F2A3  0000               	dw	0
   275  00F2A5  0000               	dw	0
   276  00F2A7  0000               	dw	0
   277  00F2A9  00E0               	dw	224
   278  00F2AB  001F               	dw	31
   279  00F2AD  001C               	dw	28
   280  00F2AF  0060               	dw	96
   281  00F2B1  0002               	dw	2
   282  00F2B3  0080               	dw	128
   283  00F2B5  0000               	dw	0
   284  00F2B7  0000               	dw	0
   285  00F2B9  0004               	dw	4
   286  00F2BB  0000               	dw	0
   287  00F2BD  0000               	dw	0
   288  00F2BF  0006               	dw	6
   289  00F2C1  00C0               	dw	192
   290  00F2C3  00F8               	dw	248
   291  00F2C5  003F               	dw	63
   292  00F2C7  0000               	dw	0
   293  00F2C9  0000               	dw	0
   294  00F2CB  0006               	dw	6
   295  00F2CD  0024               	dw	36
   296  00F2CF  0000               	dw	0
   297  00F2D1  0018               	dw	24
   298  00F2D3  0000               	dw	0
   299  00F2D5  007E               	dw	126
   300  00F2D7  0000               	dw	0
   301  00F2D9  0018               	dw	24
   302  00F2DB  0000               	dw	0
   303  00F2DD  0024               	dw	36
   304  00F2DF  0000               	dw	0
   305  00F2E1  0000               	dw	0
   306  00F2E3  0000               	dw	0
   307  00F2E5  0009               	dw	9
   308  00F2E7  0000               	dw	0
   309  00F2E9  0000               	dw	0
   310  00F2EB  0080               	dw	128
   311  00F2ED  0000               	dw	0
   312  00F2EF  0080               	dw	128
   313  00F2F1  0000               	dw	0
   314  00F2F3  0080               	dw	128
   315  00F2F5  0000               	dw	0
   316  00F2F7  00F0               	dw	240
   317  00F2F9  0007               	dw	7
   318  00F2FB  0080               	dw	128
   319  00F2FD  0000               	dw	0
   320  00F2FF  0080               	dw	128
   321  00F301  0000               	dw	0
   322  00F303  0080               	dw	128
   323  00F305  0000               	dw	0
   324  00F307  0000               	dw	0
   325  00F309  0000               	dw	0
   326  00F30B  0004               	dw	4
   327  00F30D  0000               	dw	0
   328  00F30F  0000               	dw	0
   329  00F311  0000               	dw	0
   330  00F313  0060               	dw	96
   331  00F315  0000               	dw	0
   332  00F317  0018               	dw	24
   333  00F319  0000               	dw	0
   334  00F31B  0000               	dw	0
   335  00F31D  0005               	dw	5
   336  00F31F  0000               	dw	0
   337  00F321  0001               	dw	1
   338  00F323  0000               	dw	0
   339  00F325  0001               	dw	1
   340  00F327  0000               	dw	0
   341  00F329  0001               	dw	1
   342  00F32B  0000               	dw	0
   343  00F32D  0001               	dw	1
   344  00F32F  0000               	dw	0
   345  00F331  0000               	dw	0
   346  00F333  0004               	dw	4
   347  00F335  0000               	dw	0
   348  00F337  0000               	dw	0
   349  00F339  0000               	dw	0
   350  00F33B  0018               	dw	24
   351  00F33D  0000               	dw	0
   352  00F33F  0018               	dw	24
   353  00F341  0000               	dw	0
   354  00F343  0000               	dw	0
   355  00F345  0008               	dw	8
   356  00F347  0000               	dw	0
   357  00F349  0000               	dw	0
   358  00F34B  0000               	dw	0
   359  00F34D  0040               	dw	64
   360  00F34F  0000               	dw	0
   361  00F351  0038               	dw	56
   362  00F353  0000               	dw	0
   363  00F355  0007               	dw	7
   364  00F357  00E0               	dw	224
   365  00F359  0000               	dw	0
   366  00F35B  001C               	dw	28
   367  00F35D  0000               	dw	0
   368  00F35F  0002               	dw	2
   369  00F361  0000               	dw	0
   370  00F363  0000               	dw	0
   371  00F365  0000               	dw	0
   372  00F367  0009               	dw	9
   373  00F369  00F8               	dw	248
   374  00F36B  0007               	dw	7
   375  00F36D  0004               	dw	4
   376  00F36F  0008               	dw	8
   377  00F371  0002               	dw	2
   378  00F373  0010               	dw	16
   379  00F375  0002               	dw	2
   380  00F377  0010               	dw	16
   381  00F379  0002               	dw	2
   382  00F37B  0010               	dw	16
   383  00F37D  0002               	dw	2
   384  00F37F  0010               	dw	16
   385  00F381  0004               	dw	4
   386  00F383  0008               	dw	8
   387  00F385  00F8               	dw	248
   388  00F387  0007               	dw	7
   389  00F389  0000               	dw	0
   390  00F38B  0000               	dw	0
   391  00F38D  0006               	dw	6
   392  00F38F  0000               	dw	0
   393  00F391  0000               	dw	0
   394  00F393  0000               	dw	0
   395  00F395  0000               	dw	0
   396  00F397  0002               	dw	2
   397  00F399  0000               	dw	0
   398  00F39B  0002               	dw	2
   399  00F39D  0000               	dw	0
   400  00F39F  00FE               	dw	254
   401  00F3A1  001F               	dw	31
   402  00F3A3  0000               	dw	0
   403  00F3A5  0000               	dw	0
   404  00F3A7  0009               	dw	9
   405  00F3A9  0018               	dw	24
   406  00F3AB  0010               	dw	16
   407  00F3AD  0004               	dw	4
   408  00F3AF  0018               	dw	24
   409  00F3B1  0002               	dw	2
   410  00F3B3  0014               	dw	20
   411  00F3B5  0002               	dw	2
   412  00F3B7  0012               	dw	18
   413  00F3B9  0002               	dw	2
   414  00F3BB  0011               	dw	17
   415  00F3BD  0082               	dw	130
   416  00F3BF  0010               	dw	16
   417  00F3C1  0044               	dw	68
   418  00F3C3  0010               	dw	16
   419  00F3C5  0038               	dw	56
   420  00F3C7  0010               	dw	16
   421  00F3C9  0000               	dw	0
   422  00F3CB  0000               	dw	0
   423  00F3CD  0009               	dw	9
   424  00F3CF  0008               	dw	8
   425  00F3D1  000C               	dw	12
   426  00F3D3  0004               	dw	4
   427  00F3D5  0010               	dw	16
   428  00F3D7  0002               	dw	2
   429  00F3D9  0010               	dw	16
   430  00F3DB  0042               	dw	66
   431  00F3DD  0010               	dw	16
   432  00F3DF  0042               	dw	66
   433  00F3E1  0010               	dw	16
   434  00F3E3  0044               	dw	68
   435  00F3E5  0010               	dw	16
   436  00F3E7  00B8               	dw	184
   437  00F3E9  0008               	dw	8
   438  00F3EB  0000               	dw	0
   439  00F3ED  0007               	dw	7
   440  00F3EF  0000               	dw	0
   441  00F3F1  0000               	dw	0
   442  00F3F3  0009               	dw	9
   443  00F3F5  0000               	dw	0
   444  00F3F7  0002               	dw	2
   445  00F3F9  0000               	dw	0
   446  00F3FB  0003               	dw	3
   447  00F3FD  0080               	dw	128
   448  00F3FF  0002               	dw	2
   449  00F401  0060               	dw	96
   450  00F403  0002               	dw	2
   451  00F405  0010               	dw	16
   452  00F407  0002               	dw	2
   453  00F409  0008               	dw	8
   454  00F40B  0002               	dw	2
   455  00F40D  00FE               	dw	254
   456  00F40F  001F               	dw	31
   457  00F411  0000               	dw	0
   458  00F413  0002               	dw	2
   459  00F415  0000               	dw	0
   460  00F417  0000               	dw	0
   461  00F419  0009               	dw	9
   462  00F41B  0000               	dw	0
   463  00F41D  0004               	dw	4
   464  00F41F  0070               	dw	112
   465  00F421  0008               	dw	8
   466  00F423  002E               	dw	46
   467  00F425  0010               	dw	16
   468  00F427  0022               	dw	34
   469  00F429  0010               	dw	16
   470  00F42B  0022               	dw	34
   471  00F42D  0010               	dw	16
   472  00F42F  0022               	dw	34
   473  00F431  0010               	dw	16
   474  00F433  0042               	dw	66
   475  00F435  0008               	dw	8
   476  00F437  0082               	dw	130
   477  00F439  0007               	dw	7
   478  00F43B  0000               	dw	0
   479  00F43D  0000               	dw	0
   480  00F43F  0009               	dw	9
   481  00F441  0000               	dw	0
   482  00F443  0000               	dw	0
   483  00F445  0000               	dw	0
   484  00F447  0007               	dw	7
   485  00F449  00C0               	dw	192
   486  00F44B  0008               	dw	8
   487  00F44D  0060               	dw	96
   488  00F44F  0010               	dw	16
   489  00F451  0058               	dw	88
   490  00F453  0010               	dw	16
   491  00F455  0044               	dw	68
   492  00F457  0010               	dw	16
   493  00F459  0082               	dw	130
   494  00F45B  0008               	dw	8
   495  00F45D  0000               	dw	0
   496  00F45F  0007               	dw	7
   497  00F461  0000               	dw	0
   498  00F463  0000               	dw	0
   499  00F465  0009               	dw	9
   500  00F467  0000               	dw	0
   501  00F469  0000               	dw	0
   502  00F46B  0002               	dw	2
   503  00F46D  0010               	dw	16
   504  00F46F  0002               	dw	2
   505  00F471  000C               	dw	12
   506  00F473  0002               	dw	2
   507  00F475  0003               	dw	3
   508  00F477  00C2               	dw	194
   509  00F479  0000               	dw	0
   510  00F47B  0032               	dw	50
   511  00F47D  0000               	dw	0
   512  00F47F  000E               	dw	14
   513  00F481  0000               	dw	0
   514  00F483  0002               	dw	2
   515  00F485  0000               	dw	0
   516  00F487  0000               	dw	0
   517  00F489  0000               	dw	0
   518  00F48B  0009               	dw	9
   519  00F48D  0000               	dw	0
   520  00F48F  0007               	dw	7
   521  00F491  0098               	dw	152
   522  00F493  0008               	dw	8
   523  00F495  0064               	dw	100
   524  00F497  0010               	dw	16
   525  00F499  0042               	dw	66
   526  00F49B  0010               	dw	16
   527  00F49D  0042               	dw	66
   528  00F49F  0010               	dw	16
   529  00F4A1  0064               	dw	100
   530  00F4A3  0010               	dw	16
   531  00F4A5  0098               	dw	152
   532  00F4A7  0008               	dw	8
   533  00F4A9  0000               	dw	0
   534  00F4AB  0007               	dw	7
   535  00F4AD  0000               	dw	0
   536  00F4AF  0000               	dw	0
   537  00F4B1  0009               	dw	9
   538  00F4B3  0000               	dw	0
   539  00F4B5  0000               	dw	0
   540  00F4B7  0038               	dw	56
   541  00F4B9  0000               	dw	0
   542  00F4BB  0044               	dw	68
   543  00F4BD  0010               	dw	16
   544  00F4BF  0082               	dw	130
   545  00F4C1  0008               	dw	8
   546  00F4C3  0082               	dw	130
   547  00F4C5  0004               	dw	4
   548  00F4C7  0082               	dw	130
   549  00F4C9  0003               	dw	3
   550  00F4CB  0084               	dw	132
   551  00F4CD  0000               	dw	0
   552  00F4CF  0078               	dw	120
   553  00F4D1  0000               	dw	0
   554  00F4D3  0000               	dw	0
   555  00F4D5  0000               	dw	0
   556  00F4D7  0004               	dw	4
   557  00F4D9  0000               	dw	0
   558  00F4DB  0000               	dw	0
   559  00F4DD  0030               	dw	48
   560  00F4DF  0018               	dw	24
   561  00F4E1  0030               	dw	48
   562  00F4E3  0018               	dw	24
   563  00F4E5  0000               	dw	0
   564  00F4E7  0000               	dw	0
   565  00F4E9  0004               	dw	4
   566  00F4EB  0000               	dw	0
   567  00F4ED  0000               	dw	0
   568  00F4EF  0030               	dw	48
   569  00F4F1  0060               	dw	96
   570  00F4F3  0030               	dw	48
   571  00F4F5  0018               	dw	24
   572  00F4F7  0000               	dw	0
   573  00F4F9  0000               	dw	0
   574  00F4FB  000A               	dw	10
   575  00F4FD  0000               	dw	0
   576  00F4FF  0000               	dw	0
   577  00F501  0080               	dw	128
   578  00F503  0000               	dw	0
   579  00F505  0080               	dw	128
   580  00F507  0000               	dw	0
   581  00F509  0040               	dw	64
   582  00F50B  0001               	dw	1
   583  00F50D  0020               	dw	32
   584  00F50F  0002               	dw	2
   585  00F511  0020               	dw	32
   586  00F513  0002               	dw	2
   587  00F515  0010               	dw	16
   588  00F517  0004               	dw	4
   589  00F519  0010               	dw	16
   590  00F51B  0004               	dw	4
   591  00F51D  0008               	dw	8
   592  00F51F  0008               	dw	8
   593  00F521  0000               	dw	0
   594  00F523  0000               	dw	0
   595  00F525  000A               	dw	10
   596  00F527  0000               	dw	0
   597  00F529  0000               	dw	0
   598  00F52B  0020               	dw	32
   599  00F52D  0001               	dw	1
   600  00F52F  0020               	dw	32
   601  00F531  0001               	dw	1
   602  00F533  0020               	dw	32
   603  00F535  0001               	dw	1
   604  00F537  0020               	dw	32
   605  00F539  0001               	dw	1
   606  00F53B  0020               	dw	32
   607  00F53D  0001               	dw	1
   608  00F53F  0020               	dw	32
   609  00F541  0001               	dw	1
   610  00F543  0020               	dw	32
   611  00F545  0001               	dw	1
   612  00F547  0020               	dw	32
   613  00F549  0001               	dw	1
   614  00F54B  0000               	dw	0
   615  00F54D  0000               	dw	0
   616  00F54F  000A               	dw	10
   617  00F551  0000               	dw	0
   618  00F553  0000               	dw	0
   619  00F555  0008               	dw	8
   620  00F557  0008               	dw	8
   621  00F559  0010               	dw	16
   622  00F55B  0004               	dw	4
   623  00F55D  0010               	dw	16
   624  00F55F  0004               	dw	4
   625  00F561  0020               	dw	32
   626  00F563  0002               	dw	2
   627  00F565  0020               	dw	32
   628  00F567  0002               	dw	2
   629  00F569  0040               	dw	64
   630  00F56B  0001               	dw	1
   631  00F56D  0080               	dw	128
   632  00F56F  0000               	dw	0
   633  00F571  0080               	dw	128
   634  00F573  0000               	dw	0
   635  00F575  0000               	dw	0
   636  00F577  0000               	dw	0
   637  00F579  0008               	dw	8
   638  00F57B  0000               	dw	0
   639  00F57D  0000               	dw	0
   640  00F57F  000C               	dw	12
   641  00F581  0000               	dw	0
   642  00F583  0082               	dw	130
   643  00F585  0001               	dw	1
   644  00F587  0042               	dw	66
   645  00F589  0002               	dw	2
   646  00F58B  0022               	dw	34
   647  00F58D  001A               	dw	26
   648  00F58F  0022               	dw	34
   649  00F591  001A               	dw	26
   650  00F593  009C               	dw	156
   651  00F595  0001               	dw	1
   652  00F597  0000               	dw	0
   653  00F599  0000               	dw	0
   654  00F59B  000E               	dw	14
   655  00F59D  0000               	dw	0
   656  00F59F  0000               	dw	0
   657  00F5A1  00F0               	dw	240
   658  00F5A3  0003               	dw	3
   659  00F5A5  0008               	dw	8
   660  00F5A7  0004               	dw	4
   661  00F5A9  0004               	dw	4
   662  00F5AB  0008               	dw	8
   663  00F5AD  00C2               	dw	194
   664  00F5AF  0011               	dw	17
   665  00F5B1  0022               	dw	34
   666  00F5B3  0012               	dw	18
   667  00F5B5  0012               	dw	18
   668  00F5B7  0012               	dw	18
   669  00F5B9  0012               	dw	18
   670  00F5BB  0012               	dw	18
   671  00F5BD  00E2               	dw	226
   672  00F5BF  0011               	dw	17
   673  00F5C1  0012               	dw	18
   674  00F5C3  0012               	dw	18
   675  00F5C5  0004               	dw	4
   676  00F5C7  0012               	dw	18
   677  00F5C9  0008               	dw	8
   678  00F5CB  0009               	dw	9
   679  00F5CD  00F0               	dw	240
   680  00F5CF  0004               	dw	4
   681  00F5D1  0000               	dw	0
   682  00F5D3  0000               	dw	0
   683  00F5D5  000D               	dw	13
   684  00F5D7  0000               	dw	0
   685  00F5D9  0000               	dw	0
   686  00F5DB  0000               	dw	0
   687  00F5DD  0010               	dw	16
   688  00F5DF  0000               	dw	0
   689  00F5E1  000E               	dw	14
   690  00F5E3  0080               	dw	128
   691  00F5E5  0001               	dw	1
   692  00F5E7  0060               	dw	96
   693  00F5E9  0001               	dw	1
   694  00F5EB  001C               	dw	28
   695  00F5ED  0001               	dw	1
   696  00F5EF  0002               	dw	2
   697  00F5F1  0001               	dw	1
   698  00F5F3  001C               	dw	28
   699  00F5F5  0001               	dw	1
   700  00F5F7  0060               	dw	96
   701  00F5F9  0001               	dw	1
   702  00F5FB  0080               	dw	128
   703  00F5FD  0001               	dw	1
   704  00F5FF  0000               	dw	0
   705  00F601  000E               	dw	14
   706  00F603  0000               	dw	0
   707  00F605  0010               	dw	16
   708  00F607  0000               	dw	0
   709  00F609  0000               	dw	0
   710  00F60B  0009               	dw	9
   711  00F60D  0000               	dw	0
   712  00F60F  0000               	dw	0
   713  00F611  0000               	dw	0
   714  00F613  0000               	dw	0
   715  00F615  00FE               	dw	254
   716  00F617  001F               	dw	31
   717  00F619  0042               	dw	66
   718  00F61B  0010               	dw	16
   719  00F61D  0042               	dw	66
   720  00F61F  0010               	dw	16
   721  00F621  0064               	dw	100
   722  00F623  0010               	dw	16
   723  00F625  0098               	dw	152
   724  00F627  0008               	dw	8
   725  00F629  0000               	dw	0
   726  00F62B  0007               	dw	7
   727  00F62D  0000               	dw	0
   728  00F62F  0000               	dw	0
   729  00F631  000D               	dw	13
   730  00F633  0000               	dw	0
   731  00F635  0000               	dw	0
   732  00F637  00F0               	dw	240
   733  00F639  0003               	dw	3
   734  00F63B  0008               	dw	8
   735  00F63D  0004               	dw	4
   736  00F63F  0004               	dw	4
   737  00F641  0008               	dw	8
   738  00F643  0002               	dw	2
   739  00F645  0010               	dw	16
   740  00F647  0002               	dw	2
   741  00F649  0010               	dw	16
   742  00F64B  0002               	dw	2
   743  00F64D  0010               	dw	16
   744  00F64F  0002               	dw	2
   745  00F651  0010               	dw	16
   746  00F653  0002               	dw	2
   747  00F655  0010               	dw	16
   748  00F657  0004               	dw	4
   749  00F659  0008               	dw	8
   750  00F65B  0004               	dw	4
   751  00F65D  0008               	dw	8
   752  00F65F  0008               	dw	8
   753  00F661  0004               	dw	4
   754  00F663  0000               	dw	0
   755  00F665  0000               	dw	0
   756  00F667  000C               	dw	12
   757  00F669  0000               	dw	0
   758  00F66B  0000               	dw	0
   759  00F66D  0000               	dw	0
   760  00F66F  0000               	dw	0
   761  00F671  00FE               	dw	254
   762  00F673  001F               	dw	31
   763  00F675  0002               	dw	2
   764  00F677  0010               	dw	16
   765  00F679  0002               	dw	2
   766  00F67B  0010               	dw	16
   767  00F67D  0002               	dw	2
   768  00F67F  0010               	dw	16
   769  00F681  0002               	dw	2
   770  00F683  0010               	dw	16
   771  00F685  0002               	dw	2
   772  00F687  0010               	dw	16
   773  00F689  0004               	dw	4
   774  00F68B  0008               	dw	8
   775  00F68D  0008               	dw	8
   776  00F68F  0004               	dw	4
   777  00F691  00F0               	dw	240
   778  00F693  0003               	dw	3
   779  00F695  0000               	dw	0
   780  00F697  0000               	dw	0
   781  00F699  0009               	dw	9
   782  00F69B  0000               	dw	0
   783  00F69D  0000               	dw	0
   784  00F69F  0000               	dw	0
   785  00F6A1  0000               	dw	0
   786  00F6A3  00FE               	dw	254
   787  00F6A5  001F               	dw	31
   788  00F6A7  0042               	dw	66
   789  00F6A9  0010               	dw	16
   790  00F6AB  0042               	dw	66
   791  00F6AD  0010               	dw	16
   792  00F6AF  0042               	dw	66
   793  00F6B1  0010               	dw	16
   794  00F6B3  0042               	dw	66
   795  00F6B5  0010               	dw	16
   796  00F6B7  0042               	dw	66
   797  00F6B9  0010               	dw	16
   798  00F6BB  0000               	dw	0
   799  00F6BD  0000               	dw	0
   800  00F6BF  0008               	dw	8
   801  00F6C1  0000               	dw	0
   802  00F6C3  0000               	dw	0
   803  00F6C5  0000               	dw	0
   804  00F6C7  0000               	dw	0
   805  00F6C9  00FE               	dw	254
   806  00F6CB  001F               	dw	31
   807  00F6CD  0042               	dw	66
   808  00F6CF  0000               	dw	0
   809  00F6D1  0042               	dw	66
   810  00F6D3  0000               	dw	0
   811  00F6D5  0042               	dw	66
   812  00F6D7  0000               	dw	0
   813  00F6D9  0042               	dw	66
   814  00F6DB  0000               	dw	0
   815  00F6DD  0000               	dw	0
   816  00F6DF  0000               	dw	0
   817  00F6E1  000E               	dw	14
   818  00F6E3  0000               	dw	0
   819  00F6E5  0000               	dw	0
   820  00F6E7  00F0               	dw	240
   821  00F6E9  0003               	dw	3
   822  00F6EB  0008               	dw	8
   823  00F6ED  0004               	dw	4
   824  00F6EF  0004               	dw	4
   825  00F6F1  0008               	dw	8
   826  00F6F3  0002               	dw	2
   827  00F6F5  0010               	dw	16
   828  00F6F7  0002               	dw	2
   829  00F6F9  0010               	dw	16
   830  00F6FB  0002               	dw	2
   831  00F6FD  0010               	dw	16
   832  00F6FF  0002               	dw	2
   833  00F701  0010               	dw	16
   834  00F703  0082               	dw	130
   835  00F705  0010               	dw	16
   836  00F707  0084               	dw	132
   837  00F709  0010               	dw	16
   838  00F70B  0084               	dw	132
   839  00F70D  0008               	dw	8
   840  00F70F  0088               	dw	136
   841  00F711  0004               	dw	4
   842  00F713  0080               	dw	128
   843  00F715  0003               	dw	3
   844  00F717  0000               	dw	0
   845  00F719  0000               	dw	0
   846  00F71B  000A               	dw	10
   847  00F71D  0000               	dw	0
   848  00F71F  0000               	dw	0
   849  00F721  0000               	dw	0
   850  00F723  0000               	dw	0
   851  00F725  00FE               	dw	254
   852  00F727  001F               	dw	31
   853  00F729  0040               	dw	64
   854  00F72B  0000               	dw	0
   855  00F72D  0040               	dw	64
   856  00F72F  0000               	dw	0
   857  00F731  0040               	dw	64
   858  00F733  0000               	dw	0
   859  00F735  0040               	dw	64
   860  00F737  0000               	dw	0
   861  00F739  0040               	dw	64
   862  00F73B  0000               	dw	0
   863  00F73D  00FE               	dw	254
   864  00F73F  001F               	dw	31
   865  00F741  0000               	dw	0
   866  00F743  0000               	dw	0
   867  00F745  0004               	dw	4
   868  00F747  0000               	dw	0
   869  00F749  0000               	dw	0
   870  00F74B  0000               	dw	0
   871  00F74D  0000               	dw	0
   872  00F74F  00FE               	dw	254
   873  00F751  001F               	dw	31
   874  00F753  0000               	dw	0
   875  00F755  0000               	dw	0
   876  00F757  0007               	dw	7
   877  00F759  0000               	dw	0
   878  00F75B  0000               	dw	0
   879  00F75D  0000               	dw	0
   880  00F75F  0008               	dw	8
   881  00F761  0000               	dw	0
   882  00F763  0010               	dw	16
   883  00F765  0000               	dw	0
   884  00F767  0010               	dw	16
   885  00F769  0000               	dw	0
   886  00F76B  0008               	dw	8
   887  00F76D  00FE               	dw	254
   888  00F76F  0007               	dw	7
   889  00F771  0000               	dw	0
   890  00F773  0000               	dw	0
   891  00F775  0009               	dw	9
   892  00F777  0000               	dw	0
   893  00F779  0000               	dw	0
   894  00F77B  0000               	dw	0
   895  00F77D  0000               	dw	0
   896  00F77F  00FE               	dw	254
   897  00F781  001F               	dw	31
   898  00F783  0060               	dw	96
   899  00F785  0000               	dw	0
   900  00F787  0090               	dw	144
   901  00F789  0001               	dw	1
   902  00F78B  0008               	dw	8
   903  00F78D  0002               	dw	2
   904  00F78F  0004               	dw	4
   905  00F791  000C               	dw	12
   906  00F793  0002               	dw	2
   907  00F795  0010               	dw	16
   908  00F797  0000               	dw	0
   909  00F799  0000               	dw	0
   910  00F79B  0008               	dw	8
   911  00F79D  0000               	dw	0
   912  00F79F  0000               	dw	0
   913  00F7A1  0000               	dw	0
   914  00F7A3  0000               	dw	0
   915  00F7A5  00FE               	dw	254
   916  00F7A7  001F               	dw	31
   917  00F7A9  0000               	dw	0
   918  00F7AB  0010               	dw	16
   919  00F7AD  0000               	dw	0
   920  00F7AF  0010               	dw	16
   921  00F7B1  0000               	dw	0
   922  00F7B3  0010               	dw	16
   923  00F7B5  0000               	dw	0
   924  00F7B7  0010               	dw	16
   925  00F7B9  0000               	dw	0
   926  00F7BB  0000               	dw	0
   927  00F7BD  000F               	dw	15
   928  00F7BF  0000               	dw	0
   929  00F7C1  0000               	dw	0
   930  00F7C3  0000               	dw	0
   931  00F7C5  001C               	dw	28
   932  00F7C7  00F8               	dw	248
   933  00F7C9  0003               	dw	3
   934  00F7CB  0006               	dw	6
   935  00F7CD  0000               	dw	0
   936  00F7CF  0038               	dw	56
   937  00F7D1  0000               	dw	0
   938  00F7D3  00C0               	dw	192
   939  00F7D5  0001               	dw	1
   940  00F7D7  0000               	dw	0
   941  00F7D9  000E               	dw	14
   942  00F7DB  0000               	dw	0
   943  00F7DD  0010               	dw	16
   944  00F7DF  0000               	dw	0
   945  00F7E1  000E               	dw	14
   946  00F7E3  00C0               	dw	192
   947  00F7E5  0001               	dw	1
   948  00F7E7  0038               	dw	56
   949  00F7E9  0000               	dw	0
   950  00F7EB  0006               	dw	6
   951  00F7ED  0000               	dw	0
   952  00F7EF  00F8               	dw	248
   953  00F7F1  0003               	dw	3
   954  00F7F3  0000               	dw	0
   955  00F7F5  001C               	dw	28
   956  00F7F7  0000               	dw	0
   957  00F7F9  0000               	dw	0
   958  00F7FB  000B               	dw	11
   959  00F7FD  0000               	dw	0
   960  00F7FF  0000               	dw	0
   961  00F801  0000               	dw	0
   962  00F803  0000               	dw	0
   963  00F805  00FE               	dw	254
   964  00F807  001F               	dw	31
   965  00F809  0008               	dw	8
   966  00F80B  0000               	dw	0
   967  00F80D  0030               	dw	48
   968  00F80F  0000               	dw	0
   969  00F811  0040               	dw	64
   970  00F813  0000               	dw	0
   971  00F815  0080               	dw	128
   972  00F817  0000               	dw	0
   973  00F819  0000               	dw	0
   974  00F81B  0003               	dw	3
   975  00F81D  0000               	dw	0
   976  00F81F  0004               	dw	4
   977  00F821  00FE               	dw	254
   978  00F823  001F               	dw	31
   979  00F825  0000               	dw	0
   980  00F827  0000               	dw	0
   981  00F829  000E               	dw	14
   982  00F82B  0000               	dw	0
   983  00F82D  0000               	dw	0
   984  00F82F  00F0               	dw	240
   985  00F831  0003               	dw	3
   986  00F833  0008               	dw	8
   987  00F835  0004               	dw	4
   988  00F837  0004               	dw	4
   989  00F839  0008               	dw	8
   990  00F83B  0002               	dw	2
   991  00F83D  0010               	dw	16
   992  00F83F  0002               	dw	2
   993  00F841  0010               	dw	16
   994  00F843  0002               	dw	2
   995  00F845  0010               	dw	16
   996  00F847  0002               	dw	2
   997  00F849  0010               	dw	16
   998  00F84B  0002               	dw	2
   999  00F84D  0010               	dw	16
  1000  00F84F  0002               	dw	2
  1001  00F851  0010               	dw	16
  1002  00F853  0004               	dw	4
  1003  00F855  0008               	dw	8
  1004  00F857  0008               	dw	8
  1005  00F859  0004               	dw	4
  1006  00F85B  00F0               	dw	240
  1007  00F85D  0003               	dw	3
  1008  00F85F  0000               	dw	0
  1009  00F861  0000               	dw	0
  1010  00F863  0009               	dw	9
  1011  00F865  0000               	dw	0
  1012  00F867  0000               	dw	0
  1013  00F869  0000               	dw	0
  1014  00F86B  0000               	dw	0
  1015  00F86D  00FE               	dw	254
  1016  00F86F  001F               	dw	31
  1017  00F871  0042               	dw	66
  1018  00F873  0000               	dw	0
  1019  00F875  0042               	dw	66
  1020  00F877  0000               	dw	0
  1021  00F879  0042               	dw	66
  1022  00F87B  0000               	dw	0
  1023  00F87D  0024               	dw	36
  1024  00F87F  0000               	dw	0
  1025  00F881  0018               	dw	24
  1026  00F883  0000               	dw	0
  1027  00F885  0000               	dw	0
  1028  00F887  0000               	dw	0
  1029  00F889  000E               	dw	14
  1030  00F88B  0000               	dw	0
  1031  00F88D  0000               	dw	0
  1032  00F88F  00F0               	dw	240
  1033  00F891  0003               	dw	3
  1034  00F893  0008               	dw	8
  1035  00F895  0004               	dw	4
  1036  00F897  0004               	dw	4
  1037  00F899  0008               	dw	8
  1038  00F89B  0002               	dw	2
  1039  00F89D  0010               	dw	16
  1040  00F89F  0002               	dw	2
  1041  00F8A1  0010               	dw	16
  1042  00F8A3  0002               	dw	2
  1043  00F8A5  0010               	dw	16
  1044  00F8A7  0002               	dw	2
  1045  00F8A9  0011               	dw	17
  1046  00F8AB  0002               	dw	2
  1047  00F8AD  0012               	dw	18
  1048  00F8AF  0002               	dw	2
  1049  00F8B1  000C               	dw	12
  1050  00F8B3  0004               	dw	4
  1051  00F8B5  0008               	dw	8
  1052  00F8B7  0008               	dw	8
  1053  00F8B9  0016               	dw	22
  1054  00F8BB  00F0               	dw	240
  1055  00F8BD  0021               	dw	33
  1056  00F8BF  0000               	dw	0
  1057  00F8C1  0000               	dw	0
  1058  00F8C3  000A               	dw	10
  1059  00F8C5  0000               	dw	0
  1060  00F8C7  0000               	dw	0
  1061  00F8C9  0000               	dw	0
  1062  00F8CB  0000               	dw	0
  1063  00F8CD  00FE               	dw	254
  1064  00F8CF  001F               	dw	31
  1065  00F8D1  0042               	dw	66
  1066  00F8D3  0000               	dw	0
  1067  00F8D5  00C2               	dw	194
  1068  00F8D7  0000               	dw	0
  1069  00F8D9  0042               	dw	66
  1070  00F8DB  0001               	dw	1
  1071  00F8DD  0042               	dw	66
  1072  00F8DF  0006               	dw	6
  1073  00F8E1  0024               	dw	36
  1074  00F8E3  0008               	dw	8
  1075  00F8E5  0018               	dw	24
  1076  00F8E7  0010               	dw	16
  1077  00F8E9  0000               	dw	0
  1078  00F8EB  0000               	dw	0
  1079  00F8ED  0008               	dw	8
  1080  00F8EF  0000               	dw	0
  1081  00F8F1  0004               	dw	4
  1082  00F8F3  0018               	dw	24
  1083  00F8F5  0008               	dw	8
  1084  00F8F7  0024               	dw	36
  1085  00F8F9  0010               	dw	16
  1086  00F8FB  0042               	dw	66
  1087  00F8FD  0010               	dw	16
  1088  00F8FF  0042               	dw	66
  1089  00F901  0010               	dw	16
  1090  00F903  0084               	dw	132
  1091  00F905  0008               	dw	8
  1092  00F907  0008               	dw	8
  1093  00F909  0007               	dw	7
  1094  00F90B  0000               	dw	0
  1095  00F90D  0000               	dw	0
  1096  00F90F  0008               	dw	8
  1097  00F911  0002               	dw	2
  1098  00F913  0000               	dw	0
  1099  00F915  0002               	dw	2
  1100  00F917  0000               	dw	0
  1101  00F919  0002               	dw	2
  1102  00F91B  0000               	dw	0
  1103  00F91D  00FE               	dw	254
  1104  00F91F  001F               	dw	31
  1105  00F921  0002               	dw	2
  1106  00F923  0000               	dw	0
  1107  00F925  0002               	dw	2
  1108  00F927  0000               	dw	0
  1109  00F929  0002               	dw	2
  1110  00F92B  0000               	dw	0
  1111  00F92D  0000               	dw	0
  1112  00F92F  0000               	dw	0
  1113  00F931  000A               	dw	10
  1114  00F933  0000               	dw	0
  1115  00F935  0000               	dw	0
  1116  00F937  0000               	dw	0
  1117  00F939  0000               	dw	0
  1118  00F93B  00FE               	dw	254
  1119  00F93D  0007               	dw	7
  1120  00F93F  0000               	dw	0
  1121  00F941  0008               	dw	8
  1122  00F943  0000               	dw	0
  1123  00F945  0010               	dw	16
  1124  00F947  0000               	dw	0
  1125  00F949  0010               	dw	16
  1126  00F94B  0000               	dw	0
  1127  00F94D  0010               	dw	16
  1128  00F94F  0000               	dw	0
  1129  00F951  0008               	dw	8
  1130  00F953  00FE               	dw	254
  1131  00F955  0007               	dw	7
  1132  00F957  0000               	dw	0
  1133  00F959  0000               	dw	0
  1134  00F95B  000C               	dw	12
  1135  00F95D  0002               	dw	2
  1136  00F95F  0000               	dw	0
  1137  00F961  001C               	dw	28
  1138  00F963  0000               	dw	0
  1139  00F965  0060               	dw	96
  1140  00F967  0000               	dw	0
  1141  00F969  0080               	dw	128
  1142  00F96B  0001               	dw	1
  1143  00F96D  0000               	dw	0
  1144  00F96F  000E               	dw	14
  1145  00F971  0000               	dw	0
  1146  00F973  0010               	dw	16
  1147  00F975  0000               	dw	0
  1148  00F977  000E               	dw	14
  1149  00F979  0080               	dw	128
  1150  00F97B  0001               	dw	1
  1151  00F97D  0060               	dw	96
  1152  00F97F  0000               	dw	0
  1153  00F981  001C               	dw	28
  1154  00F983  0000               	dw	0
  1155  00F985  0002               	dw	2
  1156  00F987  0000               	dw	0
  1157  00F989  0000               	dw	0
  1158  00F98B  0000               	dw	0
  1159  00F98D  000F               	dw	15
  1160  00F98F  0000               	dw	0
  1161  00F991  0000               	dw	0
  1162  00F993  0006               	dw	6
  1163  00F995  0000               	dw	0
  1164  00F997  0078               	dw	120
  1165  00F999  0000               	dw	0
  1166  00F99B  0080               	dw	128
  1167  00F99D  0007               	dw	7
  1168  00F99F  0000               	dw	0
  1169  00F9A1  0018               	dw	24
  1170  00F9A3  0080               	dw	128
  1171  00F9A5  0007               	dw	7
  1172  00F9A7  0078               	dw	120
  1173  00F9A9  0000               	dw	0
  1174  00F9AB  0006               	dw	6
  1175  00F9AD  0000               	dw	0
  1176  00F9AF  0078               	dw	120
  1177  00F9B1  0000               	dw	0
  1178  00F9B3  0080               	dw	128
  1179  00F9B5  0007               	dw	7
  1180  00F9B7  0000               	dw	0
  1181  00F9B9  0018               	dw	24
  1182  00F9BB  0080               	dw	128
  1183  00F9BD  0007               	dw	7
  1184  00F9BF  0078               	dw	120
  1185  00F9C1  0000               	dw	0
  1186  00F9C3  0006               	dw	6
  1187  00F9C5  0000               	dw	0
  1188  00F9C7  0000               	dw	0
  1189  00F9C9  0000               	dw	0
  1190  00F9CB  0009               	dw	9
  1191  00F9CD  0000               	dw	0
  1192  00F9CF  0000               	dw	0
  1193  00F9D1  0006               	dw	6
  1194  00F9D3  0018               	dw	24
  1195  00F9D5  0008               	dw	8
  1196  00F9D7  0004               	dw	4
  1197  00F9D9  0030               	dw	48
  1198  00F9DB  0003               	dw	3
  1199  00F9DD  00C0               	dw	192
  1200  00F9DF  0000               	dw	0
  1201  00F9E1  0030               	dw	48
  1202  00F9E3  0003               	dw	3
  1203  00F9E5  0008               	dw	8
  1204  00F9E7  0004               	dw	4
  1205  00F9E9  0006               	dw	6
  1206  00F9EB  0018               	dw	24
  1207  00F9ED  0000               	dw	0
  1208  00F9EF  0000               	dw	0
  1209  00F9F1  000B               	dw	11
  1210  00F9F3  0000               	dw	0
  1211  00F9F5  0000               	dw	0
  1212  00F9F7  0002               	dw	2
  1213  00F9F9  0000               	dw	0
  1214  00F9FB  0004               	dw	4
  1215  00F9FD  0000               	dw	0
  1216  00F9FF  0018               	dw	24
  1217  00FA01  0000               	dw	0
  1218  00FA03  0060               	dw	96
  1219  00FA05  0000               	dw	0
  1220  00FA07  0080               	dw	128
  1221  00FA09  001F               	dw	31
  1222  00FA0B  0060               	dw	96
  1223  00FA0D  0000               	dw	0
  1224  00FA0F  0018               	dw	24
  1225  00FA11  0000               	dw	0
  1226  00FA13  0004               	dw	4
  1227  00FA15  0000               	dw	0
  1228  00FA17  0002               	dw	2
  1229  00FA19  0000               	dw	0
  1230  00FA1B  0000               	dw	0
  1231  00FA1D  0000               	dw	0
  1232  00FA1F  0008               	dw	8
  1233  00FA21  0002               	dw	2
  1234  00FA23  0010               	dw	16
  1235  00FA25  0002               	dw	2
  1236  00FA27  001C               	dw	28
  1237  00FA29  0002               	dw	2
  1238  00FA2B  0013               	dw	19
  1239  00FA2D  00C2               	dw	194
  1240  00FA2F  0010               	dw	16
  1241  00FA31  0032               	dw	50
  1242  00FA33  0010               	dw	16
  1243  00FA35  000E               	dw	14
  1244  00FA37  0010               	dw	16
  1245  00FA39  0002               	dw	2
  1246  00FA3B  0010               	dw	16
  1247  00FA3D  0000               	dw	0
  1248  00FA3F  0000               	dw	0
  1249  00FA41  0006               	dw	6
  1250  00FA43  0000               	dw	0
  1251  00FA45  0000               	dw	0
  1252  00FA47  0000               	dw	0
  1253  00FA49  0000               	dw	0
  1254  00FA4B  00FE               	dw	254
  1255  00FA4D  00FF               	dw	255
  1256  00FA4F  0002               	dw	2
  1257  00FA51  0080               	dw	128
  1258  00FA53  0002               	dw	2
  1259  00FA55  0080               	dw	128
  1260  00FA57  0000               	dw	0
  1261  00FA59  0000               	dw	0
  1262  00FA5B  000A               	dw	10
  1263  00FA5D  0002               	dw	2
  1264  00FA5F  0000               	dw	0
  1265  00FA61  000C               	dw	12
  1266  00FA63  0000               	dw	0
  1267  00FA65  0010               	dw	16
  1268  00FA67  0000               	dw	0
  1269  00FA69  0060               	dw	96
  1270  00FA6B  0000               	dw	0
  1271  00FA6D  0080               	dw	128
  1272  00FA6F  0001               	dw	1
  1273  00FA71  0000               	dw	0
  1274  00FA73  0006               	dw	6
  1275  00FA75  0000               	dw	0
  1276  00FA77  0008               	dw	8
  1277  00FA79  0000               	dw	0
  1278  00FA7B  0030               	dw	48
  1279  00FA7D  0000               	dw	0
  1280  00FA7F  0040               	dw	64
  1281  00FA81  0000               	dw	0
  1282  00FA83  0000               	dw	0
  1283  00FA85  0005               	dw	5
  1284  00FA87  0000               	dw	0
  1285  00FA89  0000               	dw	0
  1286  00FA8B  0002               	dw	2
  1287  00FA8D  0080               	dw	128
  1288  00FA8F  0002               	dw	2
  1289  00FA91  0080               	dw	128
  1290  00FA93  00FE               	dw	254
  1291  00FA95  00FF               	dw	255
  1292  00FA97  0000               	dw	0
  1293  00FA99  0000               	dw	0
  1294  00FA9B  000B               	dw	11
  1295  00FA9D  0000               	dw	0
  1296  00FA9F  0000               	dw	0
  1297  00FAA1  0000               	dw	0
  1298  00FAA3  0002               	dw	2
  1299  00FAA5  0080               	dw	128
  1300  00FAA7  0001               	dw	1
  1301  00FAA9  0070               	dw	112
  1302  00FAAB  0000               	dw	0
  1303  00FAAD  000C               	dw	12
  1304  00FAAF  0000               	dw	0
  1305  00FAB1  0002               	dw	2
  1306  00FAB3  0000               	dw	0
  1307  00FAB5  000C               	dw	12
  1308  00FAB7  0000               	dw	0
  1309  00FAB9  0070               	dw	112
  1310  00FABB  0000               	dw	0
  1311  00FABD  0080               	dw	128
  1312  00FABF  0001               	dw	1
  1313  00FAC1  0000               	dw	0
  1314  00FAC3  0002               	dw	2
  1315  00FAC5  0000               	dw	0
  1316  00FAC7  0000               	dw	0
  1317  00FAC9  0009               	dw	9
  1318  00FACB  0000               	dw	0
  1319  00FACD  0040               	dw	64
  1320  00FACF  0000               	dw	0
  1321  00FAD1  0040               	dw	64
  1322  00FAD3  0000               	dw	0
  1323  00FAD5  0040               	dw	64
  1324  00FAD7  0000               	dw	0
  1325  00FAD9  0040               	dw	64
  1326  00FADB  0000               	dw	0
  1327  00FADD  0040               	dw	64
  1328  00FADF  0000               	dw	0
  1329  00FAE1  0040               	dw	64
  1330  00FAE3  0000               	dw	0
  1331  00FAE5  0040               	dw	64
  1332  00FAE7  0000               	dw	0
  1333  00FAE9  0040               	dw	64
  1334  00FAEB  0000               	dw	0
  1335  00FAED  0000               	dw	0
  1336  00FAEF  0005               	dw	5
  1337  00FAF1  0000               	dw	0
  1338  00FAF3  0000               	dw	0
  1339  00FAF5  0000               	dw	0
  1340  00FAF7  0000               	dw	0
  1341  00FAF9  0002               	dw	2
  1342  00FAFB  0000               	dw	0
  1343  00FAFD  0004               	dw	4
  1344  00FAFF  0000               	dw	0
  1345  00FB01  0000               	dw	0
  1346  00FB03  0000               	dw	0
  1347  00FB05  000B               	dw	11
  1348  00FB07  0000               	dw	0
  1349  00FB09  0000               	dw	0
  1350  00FB0B  00C0               	dw	192
  1351  00FB0D  0007               	dw	7
  1352  00FB0F  0020               	dw	32
  1353  00FB11  0008               	dw	8
  1354  00FB13  0010               	dw	16
  1355  00FB15  0010               	dw	16
  1356  00FB17  0010               	dw	16
  1357  00FB19  0010               	dw	16
  1358  00FB1B  0010               	dw	16
  1359  00FB1D  0010               	dw	16
  1360  00FB1F  0010               	dw	16
  1361  00FB21  0010               	dw	16
  1362  00FB23  0010               	dw	16
  1363  00FB25  0010               	dw	16
  1364  00FB27  0020               	dw	32
  1365  00FB29  0008               	dw	8
  1366  00FB2B  00F0               	dw	240
  1367  00FB2D  001F               	dw	31
  1368  00FB2F  0000               	dw	0
  1369  00FB31  0000               	dw	0
  1370  00FB33  000B               	dw	11
  1371  00FB35  0000               	dw	0
  1372  00FB37  0000               	dw	0
  1373  00FB39  00FE               	dw	254
  1374  00FB3B  001F               	dw	31
  1375  00FB3D  0020               	dw	32
  1376  00FB3F  0008               	dw	8
  1377  00FB41  0010               	dw	16
  1378  00FB43  0010               	dw	16
  1379  00FB45  0010               	dw	16
  1380  00FB47  0010               	dw	16
  1381  00FB49  0010               	dw	16
  1382  00FB4B  0010               	dw	16
  1383  00FB4D  0010               	dw	16
  1384  00FB4F  0010               	dw	16
  1385  00FB51  0010               	dw	16
  1386  00FB53  0010               	dw	16
  1387  00FB55  0020               	dw	32
  1388  00FB57  0008               	dw	8
  1389  00FB59  00C0               	dw	192
  1390  00FB5B  0007               	dw	7
  1391  00FB5D  0000               	dw	0
  1392  00FB5F  0000               	dw	0
  1393  00FB61  000A               	dw	10
  1394  00FB63  0000               	dw	0
  1395  00FB65  0000               	dw	0
  1396  00FB67  00C0               	dw	192
  1397  00FB69  0007               	dw	7
  1398  00FB6B  0020               	dw	32
  1399  00FB6D  0008               	dw	8
  1400  00FB6F  0010               	dw	16
  1401  00FB71  0010               	dw	16
  1402  00FB73  0010               	dw	16
  1403  00FB75  0010               	dw	16
  1404  00FB77  0010               	dw	16
  1405  00FB79  0010               	dw	16
  1406  00FB7B  0010               	dw	16
  1407  00FB7D  0010               	dw	16
  1408  00FB7F  0020               	dw	32
  1409  00FB81  0008               	dw	8
  1410  00FB83  0040               	dw	64
  1411  00FB85  0004               	dw	4
  1412  00FB87  0000               	dw	0
  1413  00FB89  0000               	dw	0
  1414  00FB8B  000B               	dw	11
  1415  00FB8D  0000               	dw	0
  1416  00FB8F  0000               	dw	0
  1417  00FB91  00C0               	dw	192
  1418  00FB93  0007               	dw	7
  1419  00FB95  0020               	dw	32
  1420  00FB97  0008               	dw	8
  1421  00FB99  0010               	dw	16
  1422  00FB9B  0010               	dw	16
  1423  00FB9D  0010               	dw	16
  1424  00FB9F  0010               	dw	16
  1425  00FBA1  0010               	dw	16
  1426  00FBA3  0010               	dw	16
  1427  00FBA5  0010               	dw	16
  1428  00FBA7  0010               	dw	16
  1429  00FBA9  0010               	dw	16
  1430  00FBAB  0010               	dw	16
  1431  00FBAD  0020               	dw	32
  1432  00FBAF  0008               	dw	8
  1433  00FBB1  00FE               	dw	254
  1434  00FBB3  001F               	dw	31
  1435  00FBB5  0000               	dw	0
  1436  00FBB7  0000               	dw	0
  1437  00FBB9  000A               	dw	10
  1438  00FBBB  0000               	dw	0
  1439  00FBBD  0000               	dw	0
  1440  00FBBF  00C0               	dw	192
  1441  00FBC1  0007               	dw	7
  1442  00FBC3  0020               	dw	32
  1443  00FBC5  0009               	dw	9
  1444  00FBC7  0010               	dw	16
  1445  00FBC9  0011               	dw	17
  1446  00FBCB  0010               	dw	16
  1447  00FBCD  0011               	dw	17
  1448  00FBCF  0010               	dw	16
  1449  00FBD1  0011               	dw	17
  1450  00FBD3  0010               	dw	16
  1451  00FBD5  0011               	dw	17
  1452  00FBD7  0020               	dw	32
  1453  00FBD9  0009               	dw	9
  1454  00FBDB  00C0               	dw	192
  1455  00FBDD  0005               	dw	5
  1456  00FBDF  0000               	dw	0
  1457  00FBE1  0000               	dw	0
  1458  00FBE3  0006               	dw	6
  1459  00FBE5  0000               	dw	0
  1460  00FBE7  0000               	dw	0
  1461  00FBE9  0010               	dw	16
  1462  00FBEB  0000               	dw	0
  1463  00FBED  00FC               	dw	252
  1464  00FBEF  001F               	dw	31
  1465  00FBF1  0012               	dw	18
  1466  00FBF3  0000               	dw	0
  1467  00FBF5  0012               	dw	18
  1468  00FBF7  0000               	dw	0
  1469  00FBF9  0000               	dw	0
  1470  00FBFB  0000               	dw	0
  1471  00FBFD  000B               	dw	11
  1472  00FBFF  0000               	dw	0
  1473  00FC01  0000               	dw	0
  1474  00FC03  00C0               	dw	192
  1475  00FC05  0027               	dw	39
  1476  00FC07  0020               	dw	32
  1477  00FC09  0048               	dw	72
  1478  00FC0B  0010               	dw	16
  1479  00FC0D  0090               	dw	144
  1480  00FC0F  0010               	dw	16
  1481  00FC11  0090               	dw	144
  1482  00FC13  0010               	dw	16
  1483  00FC15  0090               	dw	144
  1484  00FC17  0010               	dw	16
  1485  00FC19  0090               	dw	144
  1486  00FC1B  0010               	dw	16
  1487  00FC1D  0090               	dw	144
  1488  00FC1F  0020               	dw	32
  1489  00FC21  0048               	dw	72
  1490  00FC23  00F0               	dw	240
  1491  00FC25  003F               	dw	63
  1492  00FC27  0000               	dw	0
  1493  00FC29  0000               	dw	0
  1494  00FC2B  000A               	dw	10
  1495  00FC2D  0000               	dw	0
  1496  00FC2F  0000               	dw	0
  1497  00FC31  00FE               	dw	254
  1498  00FC33  001F               	dw	31
  1499  00FC35  0020               	dw	32
  1500  00FC37  0000               	dw	0
  1501  00FC39  0010               	dw	16
  1502  00FC3B  0000               	dw	0
  1503  00FC3D  0010               	dw	16
  1504  00FC3F  0000               	dw	0
  1505  00FC41  0010               	dw	16
  1506  00FC43  0000               	dw	0
  1507  00FC45  0010               	dw	16
  1508  00FC47  0000               	dw	0
  1509  00FC49  0020               	dw	32
  1510  00FC4B  0000               	dw	0
  1511  00FC4D  00C0               	dw	192
  1512  00FC4F  001F               	dw	31
  1513  00FC51  0000               	dw	0
  1514  00FC53  0000               	dw	0
  1515  00FC55  0003               	dw	3
  1516  00FC57  0000               	dw	0
  1517  00FC59  0000               	dw	0
  1518  00FC5B  00F6               	dw	246
  1519  00FC5D  001F               	dw	31
  1520  00FC5F  0000               	dw	0
  1521  00FC61  0000               	dw	0
  1522  00FC63  0003               	dw	3
  1523  00FC65  0000               	dw	0
  1524  00FC67  0080               	dw	128
  1525  00FC69  00F6               	dw	246
  1526  00FC6B  007F               	dw	127
  1527  00FC6D  0000               	dw	0
  1528  00FC6F  0000               	dw	0
  1529  00FC71  0008               	dw	8
  1530  00FC73  0000               	dw	0
  1531  00FC75  0000               	dw	0
  1532  00FC77  00FE               	dw	254
  1533  00FC79  001F               	dw	31
  1534  00FC7B  0000               	dw	0
  1535  00FC7D  0001               	dw	1
  1536  00FC7F  0080               	dw	128
  1537  00FC81  0002               	dw	2
  1538  00FC83  0040               	dw	64
  1539  00FC85  0004               	dw	4
  1540  00FC87  0020               	dw	32
  1541  00FC89  0008               	dw	8
  1542  00FC8B  0010               	dw	16
  1543  00FC8D  0010               	dw	16
  1544  00FC8F  0000               	dw	0
  1545  00FC91  0000               	dw	0
  1546  00FC93  0003               	dw	3
  1547  00FC95  0000               	dw	0
  1548  00FC97  0000               	dw	0
  1549  00FC99  00FE               	dw	254
  1550  00FC9B  001F               	dw	31
  1551  00FC9D  0000               	dw	0
  1552  00FC9F  0000               	dw	0
  1553  00FCA1  000F               	dw	15
  1554  00FCA3  0000               	dw	0
  1555  00FCA5  0000               	dw	0
  1556  00FCA7  00F0               	dw	240
  1557  00FCA9  001F               	dw	31
  1558  00FCAB  0020               	dw	32
  1559  00FCAD  0000               	dw	0
  1560  00FCAF  0010               	dw	16
  1561  00FCB1  0000               	dw	0
  1562  00FCB3  0010               	dw	16
  1563  00FCB5  0000               	dw	0
  1564  00FCB7  0010               	dw	16
  1565  00FCB9  0000               	dw	0
  1566  00FCBB  0020               	dw	32
  1567  00FCBD  0000               	dw	0
  1568  00FCBF  00C0               	dw	192
  1569  00FCC1  001F               	dw	31
  1570  00FCC3  0020               	dw	32
  1571  00FCC5  0000               	dw	0
  1572  00FCC7  0010               	dw	16
  1573  00FCC9  0000               	dw	0
  1574  00FCCB  0010               	dw	16
  1575  00FCCD  0000               	dw	0
  1576  00FCCF  0010               	dw	16
  1577  00FCD1  0000               	dw	0
  1578  00FCD3  0020               	dw	32
  1579  00FCD5  0000               	dw	0
  1580  00FCD7  00C0               	dw	192
  1581  00FCD9  001F               	dw	31
  1582  00FCDB  0000               	dw	0
  1583  00FCDD  0000               	dw	0
  1584  00FCDF  000A               	dw	10
  1585  00FCE1  0000               	dw	0
  1586  00FCE3  0000               	dw	0
  1587  00FCE5  00F0               	dw	240
  1588  00FCE7  001F               	dw	31
  1589  00FCE9  0020               	dw	32
  1590  00FCEB  0000               	dw	0
  1591  00FCED  0010               	dw	16
  1592  00FCEF  0000               	dw	0
  1593  00FCF1  0010               	dw	16
  1594  00FCF3  0000               	dw	0
  1595  00FCF5  0010               	dw	16
  1596  00FCF7  0000               	dw	0
  1597  00FCF9  0010               	dw	16
  1598  00FCFB  0000               	dw	0
  1599  00FCFD  0020               	dw	32
  1600  00FCFF  0000               	dw	0
  1601  00FD01  00C0               	dw	192
  1602  00FD03  001F               	dw	31
  1603  00FD05  0000               	dw	0
  1604  00FD07  0000               	dw	0
  1605  00FD09  000A               	dw	10
  1606  00FD0B  0000               	dw	0
  1607  00FD0D  0000               	dw	0
  1608  00FD0F  00C0               	dw	192
  1609  00FD11  0007               	dw	7
  1610  00FD13  0020               	dw	32
  1611  00FD15  0008               	dw	8
  1612  00FD17  0010               	dw	16
  1613  00FD19  0010               	dw	16
  1614  00FD1B  0010               	dw	16
  1615  00FD1D  0010               	dw	16
  1616  00FD1F  0010               	dw	16
  1617  00FD21  0010               	dw	16
  1618  00FD23  0010               	dw	16
  1619  00FD25  0010               	dw	16
  1620  00FD27  0020               	dw	32
  1621  00FD29  0008               	dw	8
  1622  00FD2B  00C0               	dw	192
  1623  00FD2D  0007               	dw	7
  1624  00FD2F  0000               	dw	0
  1625  00FD31  0000               	dw	0
  1626  00FD33  000B               	dw	11
  1627  00FD35  0000               	dw	0
  1628  00FD37  0000               	dw	0
  1629  00FD39  00F0               	dw	240
  1630  00FD3B  00FF               	dw	255
  1631  00FD3D  0020               	dw	32
  1632  00FD3F  0008               	dw	8
  1633  00FD41  0010               	dw	16
  1634  00FD43  0010               	dw	16
  1635  00FD45  0010               	dw	16
  1636  00FD47  0010               	dw	16
  1637  00FD49  0010               	dw	16
  1638  00FD4B  0010               	dw	16
  1639  00FD4D  0010               	dw	16
  1640  00FD4F  0010               	dw	16
  1641  00FD51  0010               	dw	16
  1642  00FD53  0010               	dw	16
  1643  00FD55  0020               	dw	32
  1644  00FD57  0008               	dw	8
  1645  00FD59  00C0               	dw	192
  1646  00FD5B  0007               	dw	7
  1647  00FD5D  0000               	dw	0
  1648  00FD5F  0000               	dw	0
  1649  00FD61  000B               	dw	11
  1650  00FD63  0000               	dw	0
  1651  00FD65  0000               	dw	0
  1652  00FD67  00C0               	dw	192
  1653  00FD69  0007               	dw	7
  1654  00FD6B  0020               	dw	32
  1655  00FD6D  0008               	dw	8
  1656  00FD6F  0010               	dw	16
  1657  00FD71  0010               	dw	16
  1658  00FD73  0010               	dw	16
  1659  00FD75  0010               	dw	16
  1660  00FD77  0010               	dw	16
  1661  00FD79  0010               	dw	16
  1662  00FD7B  0010               	dw	16
  1663  00FD7D  0010               	dw	16
  1664  00FD7F  0010               	dw	16
  1665  00FD81  0010               	dw	16
  1666  00FD83  0020               	dw	32
  1667  00FD85  0008               	dw	8
  1668  00FD87  00F0               	dw	240
  1669  00FD89  00FF               	dw	255
  1670  00FD8B  0000               	dw	0
  1671  00FD8D  0000               	dw	0
  1672  00FD8F  0006               	dw	6
  1673  00FD91  0000               	dw	0
  1674  00FD93  0000               	dw	0
  1675  00FD95  00F0               	dw	240
  1676  00FD97  001F               	dw	31
  1677  00FD99  0020               	dw	32
  1678  00FD9B  0000               	dw	0
  1679  00FD9D  0010               	dw	16
  1680  00FD9F  0000               	dw	0
  1681  00FDA1  0010               	dw	16
  1682  00FDA3  0000               	dw	0
  1683  00FDA5  0000               	dw	0
  1684  00FDA7  0000               	dw	0
  1685  00FDA9  0006               	dw	6
  1686  00FDAB  0060               	dw	96
  1687  00FDAD  0008               	dw	8
  1688  00FDAF  0090               	dw	144
  1689  00FDB1  0010               	dw	16
  1690  00FDB3  0010               	dw	16
  1691  00FDB5  0011               	dw	17
  1692  00FDB7  0010               	dw	16
  1693  00FDB9  0011               	dw	17
  1694  00FDBB  0020               	dw	32
  1695  00FDBD  000E               	dw	14
  1696  00FDBF  0000               	dw	0
  1697  00FDC1  0000               	dw	0
  1698  00FDC3  0007               	dw	7
  1699  00FDC5  0000               	dw	0
  1700  00FDC7  0000               	dw	0
  1701  00FDC9  0010               	dw	16
  1702  00FDCB  0000               	dw	0
  1703  00FDCD  0010               	dw	16
  1704  00FDCF  0000               	dw	0
  1705  00FDD1  00FE               	dw	254
  1706  00FDD3  001F               	dw	31
  1707  00FDD5  0010               	dw	16
  1708  00FDD7  0000               	dw	0
  1709  00FDD9  0010               	dw	16
  1710  00FDDB  0000               	dw	0
  1711  00FDDD  0000               	dw	0
  1712  00FDDF  0000               	dw	0
  1713  00FDE1  000A               	dw	10
  1714  00FDE3  0000               	dw	0
  1715  00FDE5  0000               	dw	0
  1716  00FDE7  00F0               	dw	240
  1717  00FDE9  0007               	dw	7
  1718  00FDEB  0000               	dw	0
  1719  00FDED  0008               	dw	8
  1720  00FDEF  0000               	dw	0
  1721  00FDF1  0010               	dw	16
  1722  00FDF3  0000               	dw	0
  1723  00FDF5  0010               	dw	16
  1724  00FDF7  0000               	dw	0
  1725  00FDF9  0010               	dw	16
  1726  00FDFB  0000               	dw	0
  1727  00FDFD  0010               	dw	16
  1728  00FDFF  0000               	dw	0
  1729  00FE01  0008               	dw	8
  1730  00FE03  00F0               	dw	240
  1731  00FE05  0007               	dw	7
  1732  00FE07  0000               	dw	0
  1733  00FE09  0000               	dw	0
  1734  00FE0B  000A               	dw	10
  1735  00FE0D  0010               	dw	16
  1736  00FE0F  0000               	dw	0
  1737  00FE11  0060               	dw	96
  1738  00FE13  0000               	dw	0
  1739  00FE15  0080               	dw	128
  1740  00FE17  0003               	dw	3
  1741  00FE19  0000               	dw	0
  1742  00FE1B  000C               	dw	12
  1743  00FE1D  0000               	dw	0
  1744  00FE1F  0010               	dw	16
  1745  00FE21  0000               	dw	0
  1746  00FE23  000C               	dw	12
  1747  00FE25  0080               	dw	128
  1748  00FE27  0003               	dw	3
  1749  00FE29  0060               	dw	96
  1750  00FE2B  0000               	dw	0
  1751  00FE2D  0010               	dw	16
  1752  00FE2F  0000               	dw	0
  1753  00FE31  0000               	dw	0
  1754  00FE33  0000               	dw	0
  1755  00FE35  000E               	dw	14
  1756  00FE37  0010               	dw	16
  1757  00FE39  0000               	dw	0
  1758  00FE3B  00E0               	dw	224
  1759  00FE3D  0000               	dw	0
  1760  00FE3F  0000               	dw	0
  1761  00FE41  0007               	dw	7
  1762  00FE43  0000               	dw	0
  1763  00FE45  0018               	dw	24
  1764  00FE47  0000               	dw	0
  1765  00FE49  0007               	dw	7
  1766  00FE4B  00E0               	dw	224
  1767  00FE4D  0000               	dw	0
  1768  00FE4F  0010               	dw	16
  1769  00FE51  0000               	dw	0
  1770  00FE53  00E0               	dw	224
  1771  00FE55  0000               	dw	0
  1772  00FE57  0000               	dw	0
  1773  00FE59  0007               	dw	7
  1774  00FE5B  0000               	dw	0
  1775  00FE5D  0018               	dw	24
  1776  00FE5F  0000               	dw	0
  1777  00FE61  0007               	dw	7
  1778  00FE63  00E0               	dw	224
  1779  00FE65  0000               	dw	0
  1780  00FE67  0010               	dw	16
  1781  00FE69  0000               	dw	0
  1782  00FE6B  0000               	dw	0
  1783  00FE6D  0000               	dw	0
  1784  00FE6F  0009               	dw	9
  1785  00FE71  0010               	dw	16
  1786  00FE73  0010               	dw	16
  1787  00FE75  0020               	dw	32
  1788  00FE77  0008               	dw	8
  1789  00FE79  0040               	dw	64
  1790  00FE7B  0004               	dw	4
  1791  00FE7D  0080               	dw	128
  1792  00FE7F  0003               	dw	3
  1793  00FE81  0080               	dw	128
  1794  00FE83  0003               	dw	3
  1795  00FE85  0040               	dw	64
  1796  00FE87  0004               	dw	4
  1797  00FE89  0020               	dw	32
  1798  00FE8B  0008               	dw	8
  1799  00FE8D  0010               	dw	16
  1800  00FE8F  0010               	dw	16
  1801  00FE91  0000               	dw	0
  1802  00FE93  0000               	dw	0
  1803  00FE95  0009               	dw	9
  1804  00FE97  0010               	dw	16
  1805  00FE99  0000               	dw	0
  1806  00FE9B  00E0               	dw	224
  1807  00FE9D  0000               	dw	0
  1808  00FE9F  0000               	dw	0
  1809  00FEA1  0083               	dw	131
  1810  00FEA3  0000               	dw	0
  1811  00FEA5  007C               	dw	124
  1812  00FEA7  0000               	dw	0
  1813  00FEA9  000C               	dw	12
  1814  00FEAB  0000               	dw	0
  1815  00FEAD  0003               	dw	3
  1816  00FEAF  00E0               	dw	224
  1817  00FEB1  0000               	dw	0
  1818  00FEB3  0010               	dw	16
  1819  00FEB5  0000               	dw	0
  1820  00FEB7  0000               	dw	0
  1821  00FEB9  0000               	dw	0
  1822  00FEBB  0008               	dw	8
  1823  00FEBD  0010               	dw	16
  1824  00FEBF  0010               	dw	16
  1825  00FEC1  0010               	dw	16
  1826  00FEC3  0018               	dw	24
  1827  00FEC5  0010               	dw	16
  1828  00FEC7  0016               	dw	22
  1829  00FEC9  0010               	dw	16
  1830  00FECB  0011               	dw	17
  1831  00FECD  00D0               	dw	208
  1832  00FECF  0010               	dw	16
  1833  00FED1  0030               	dw	48
  1834  00FED3  0010               	dw	16
  1835  00FED5  0010               	dw	16
  1836  00FED7  0010               	dw	16
  1837  00FED9  0000               	dw	0
  1838  00FEDB  0000               	dw	0
  1839  00FEDD  0007               	dw	7
  1840  00FEDF  0000               	dw	0
  1841  00FEE1  0000               	dw	0
  1842  00FEE3  0000               	dw	0
  1843  00FEE5  0001               	dw	1
  1844  00FEE7  0080               	dw	128
  1845  00FEE9  0002               	dw	2
  1846  00FEEB  00FC               	dw	252
  1847  00FEED  007E               	dw	126
  1848  00FEEF  0002               	dw	2
  1849  00FEF1  0080               	dw	128
  1850  00FEF3  0002               	dw	2
  1851  00FEF5  0080               	dw	128
  1852  00FEF7  0000               	dw	0
  1853  00FEF9  0000               	dw	0
  1854  00FEFB  0007               	dw	7
  1855  00FEFD  0000               	dw	0
  1856  00FEFF  0000               	dw	0
  1857  00FF01  0000               	dw	0
  1858  00FF03  0000               	dw	0
  1859  00FF05  0000               	dw	0
  1860  00FF07  0000               	dw	0
  1861  00FF09  0000               	dw	0
  1862  00FF0B  0000               	dw	0
  1863  00FF0D  0000               	dw	0
  1864  00FF0F  0000               	dw	0
  1865  00FF11  00FE               	dw	254
  1866  00FF13  00FF               	dw	255
  1867  00FF15  0000               	dw	0
  1868  00FF17  0000               	dw	0
  1869  00FF19  0006               	dw	6
  1870  00FF1B  0002               	dw	2
  1871  00FF1D  0080               	dw	128
  1872  00FF1F  0002               	dw	2
  1873  00FF21  0080               	dw	128
  1874  00FF23  00FC               	dw	252
  1875  00FF25  007E               	dw	126
  1876  00FF27  0080               	dw	128
  1877  00FF29  0002               	dw	2
  1878  00FF2B  0000               	dw	0
  1879  00FF2D  0001               	dw	1
  1880  00FF2F  0000               	dw	0
  1881  00FF31  0000               	dw	0
  1882  00FF33  000A               	dw	10
  1883  00FF35  0000               	dw	0
  1884  00FF37  0000               	dw	0
  1885  00FF39  0080               	dw	128
  1886  00FF3B  0000               	dw	0
  1887  00FF3D  0040               	dw	64
  1888  00FF3F  0000               	dw	0
  1889  00FF41  0040               	dw	64
  1890  00FF43  0000               	dw	0
  1891  00FF45  0040               	dw	64
  1892  00FF47  0000               	dw	0
  1893  00FF49  0080               	dw	128
  1894  00FF4B  0000               	dw	0
  1895  00FF4D  0080               	dw	128
  1896  00FF4F  0000               	dw	0
  1897  00FF51  0080               	dw	128
  1898  00FF53  0000               	dw	0
  1899  00FF55  0040               	dw	64
  1900  00FF57  0000               	dw	0
  1901  00FF59  0000               	dw	0
  1902  00FF5B  0000               	dw	0
  1903  00FF5D  0005               	dw	5
  1904  00FF5F  00FF               	dw	255
  1905  00FF61  000F               	dw	15
  1906  00FF63  0001               	dw	1
  1907  00FF65  0008               	dw	8
  1908  00FF67  0001               	dw	1
  1909  00FF69  0008               	dw	8
  1910  00FF6B  00FF               	dw	255
  1911  00FF6D  000F               	dw	15
  1912  00FF6F  0000               	dw	0
  1913  00FF71  0000               	dw	0
  1914  00FF73                     __end_of_font:
  1915                           	opt callstack 0
  1916  00FF73                     _spi_configuration:
  1917                           	opt callstack 0
  1918  00FF73  00                 	db	0
  1919  00FF74  40                 	db	64
  1920  00FF75  01                 	db	1
  1921  00FF76  00                 	db	0
  1922  00FF77                     __end_of_spi_configuration:
  1923                           	opt callstack 0
  1924  00FF77                     STR_4:
  1925  00FF77  4E                 	db	78	;'N'
  1926  00FF78  54                 	db	84	;'T'
  1927  00FF79  43                 	db	67	;'C'
  1928  00FF7A  3D                 	db	61	;'='
  1929  00FF7B  25                 	db	37
  1930  00FF7C  2E                 	db	46
  1931  00FF7D  66                 	db	102	;'f'
  1932  00FF7E  20                 	db	32
  1933  00FF7F  43                 	db	67	;'C'
  1934  00FF80  20                 	db	32
  1935  00FF81  20                 	db	32
  1936  00FF82  20                 	db	32
  1937  00FF83  20                 	db	32
  1938  00FF84  20                 	db	32
  1939  00FF85  20                 	db	32
  1940  00FF86  20                 	db	32
  1941  00FF87  20                 	db	32
  1942  00FF88  20                 	db	32
  1943  00FF89  20                 	db	32
  1944  00FF8A  20                 	db	32
  1945  00FF8B  20                 	db	32
  1946  00FF8C  00                 	db	0
  1947  00FF8D                     STR_2:
  1948  00FF8D  54                 	db	84	;'T'
  1949  00FF8E  65                 	db	101	;'e'
  1950  00FF8F  6D                 	db	109	;'m'
  1951  00FF90  70                 	db	112	;'p'
  1952  00FF91  3D                 	db	61	;'='
  1953  00FF92  25                 	db	37
  1954  00FF93  2E                 	db	46
  1955  00FF94  66                 	db	102	;'f'
  1956  00FF95  20                 	db	32
  1957  00FF96  43                 	db	67	;'C'
  1958  00FF97  20                 	db	32
  1959  00FF98  20                 	db	32
  1960  00FF99  20                 	db	32
  1961  00FF9A  20                 	db	32
  1962  00FF9B  20                 	db	32
  1963  00FF9C  20                 	db	32
  1964  00FF9D  00                 	db	0
  1965  00FF9E                     STR_3:
  1966  00FF9E  50                 	db	80	;'P'
  1967  00FF9F  6F                 	db	111	;'o'
  1968  00FFA0  74                 	db	116	;'t'
  1969  00FFA1  3D                 	db	61	;'='
  1970  00FFA2  25                 	db	37
  1971  00FFA3  2E                 	db	46
  1972  00FFA4  66                 	db	102	;'f'
  1973  00FFA5  25                 	db	37
  1974  00FFA6  25                 	db	37
  1975  00FFA7  20                 	db	32
  1976  00FFA8  20                 	db	32
  1977  00FFA9  20                 	db	32
  1978  00FFAA  20                 	db	32
  1979  00FFAB  20                 	db	32
  1980  00FFAC  20                 	db	32
  1981  00FFAD  00                 	db	0
  1982  00FFAE                     STR_1:
  1983  00FFAE  48                 	db	72	;'H'
  1984  00FFAF  45                 	db	69	;'E'
  1985  00FFB0  4C                 	db	76	;'L'
  1986  00FFB1  4C                 	db	76	;'L'
  1987  00FFB2  4F                 	db	79	;'O'
  1988  00FFB3  20                 	db	32
  1989  00FFB4  57                 	db	87	;'W'
  1990  00FFB5  4F                 	db	79	;'O'
  1991  00FFB6  52                 	db	82	;'R'
  1992  00FFB7  4C                 	db	76	;'L'
  1993  00FFB8  44                 	db	68	;'D'
  1994  00FFB9  00                 	db	0
  1995  00FFBA                     STR_5:
  1996  00FFBA  49                 	db	73	;'I'
  1997  00FFBB  4E                 	db	78	;'N'
  1998  00FFBC  46                 	db	70	;'F'
  1999  00FFBD  00                 	db	0
  2000  00FFBE                     STR_9:
  2001  00FFBE  4E                 	db	78	;'N'
  2002  00FFBF  41                 	db	65	;'A'
  2003  00FFC0  4E                 	db	78	;'N'
  2004  00FFC1  00                 	db	0
  2005  00FFC2                     STR_94:
  2006  00FFC2  68                 	db	104	;'h'
  2007  00FFC3  68                 	db	104	;'h'
  2008  00FFC4  58                 	db	88	;'X'
  2009  00FFC5  00                 	db	0
  2010  00FFC6                     STR_13:
  2011  00FFC6  68                 	db	104	;'h'
  2012  00FFC7  68                 	db	104	;'h'
  2013  00FFC8  64                 	db	100	;'d'
  2014  00FFC9  00                 	db	0
  2015  00FFCA                     STR_6:
  2016  00FFCA  69                 	db	105	;'i'
  2017  00FFCB  6E                 	db	110	;'n'
  2018  00FFCC  66                 	db	102	;'f'
  2019  00FFCD  00                 	db	0
  2020  00FFCE                     STR_17:
  2021  00FFCE  68                 	db	104	;'h'
  2022  00FFCF  68                 	db	104	;'h'
  2023  00FFD0  69                 	db	105	;'i'
  2024  00FFD1  00                 	db	0
  2025  00FFD2                     STR_10:
  2026  00FFD2  6E                 	db	110	;'n'
  2027  00FFD3  61                 	db	97	;'a'
  2028  00FFD4  6E                 	db	110	;'n'
  2029  00FFD5  00                 	db	0
  2030  00FFD6                     STR_60:
  2031  00FFD6  68                 	db	104	;'h'
  2032  00FFD7  68                 	db	104	;'h'
  2033  00FFD8  6E                 	db	110	;'n'
  2034  00FFD9  00                 	db	0
  2035  00FFDA                     STR_45:
  2036  00FFDA  68                 	db	104	;'h'
  2037  00FFDB  68                 	db	104	;'h'
  2038  00FFDC  6F                 	db	111	;'o'
  2039  00FFDD  00                 	db	0
  2040  00FFDE                     STR_75:
  2041  00FFDE  68                 	db	104	;'h'
  2042  00FFDF  68                 	db	104	;'h'
  2043  00FFE0  75                 	db	117	;'u'
  2044  00FFE1  00                 	db	0
  2045  00FFE2                     STR_90:
  2046  00FFE2  68                 	db	104	;'h'
  2047  00FFE3  68                 	db	104	;'h'
  2048  00FFE4  78                 	db	120	;'x'
  2049  00FFE5  00                 	db	0
  2050  00FFE6                     STR_112:
  2051  00FFE6  7A                 	db	122	;'z'
  2052  00FFE7  58                 	db	88	;'X'
  2053  00FFE8  00                 	db	0
  2054  00FFE9                     STR_31:
  2055  00FFE9  7A                 	db	122	;'z'
  2056  00FFEA  64                 	db	100	;'d'
  2057  00FFEB  00                 	db	0
  2058  00FFEC                     STR_40:
  2059  00FFEC  6C                 	db	108	;'l'
  2060  00FFED  66                 	db	102	;'f'
  2061  00FFEE  00                 	db	0
  2062  00FFEF                     STR_35:
  2063  00FFEF  7A                 	db	122	;'z'
  2064  00FFF0  69                 	db	105	;'i'
  2065  00FFF1  00                 	db	0
  2066  00FFF2                     STR_70:
  2067  00FFF2  7A                 	db	122	;'z'
  2068  00FFF3  6E                 	db	110	;'n'
  2069  00FFF4  00                 	db	0
  2070  00FFF5                     STR_55:
  2071  00FFF5  7A                 	db	122	;'z'
  2072  00FFF6  6F                 	db	111	;'o'
  2073  00FFF7  00                 	db	0
  2074  00FFF8                     STR_85:
  2075  00FFF8  7A                 	db	122	;'z'
  2076  00FFF9  75                 	db	117	;'u'
  2077  00FFFA  00                 	db	0
  2078  00FFFB                     STR_108:
  2079  00FFFB  7A                 	db	122	;'z'
  2080  00FFFC  78                 	db	120	;'x'
  2081  00FFFD  00                 	db	0
  2082  0000                     
  2083                           ; #config settings
  2084  00FFFE  00                 	db	0	; dummy byte at the end
  2085  0000                     
  2086                           	psect	nvBANK1
  2087  0001FB                     __pnvBANK1:
  2088                           	opt callstack 0
  2089  0001FB                     _timer1ReloadVal:
  2090                           	opt callstack 0
  2091  0001FB                     	ds	2
  2092  0001FD                     _IOCB4_InterruptHandler:
  2093                           	opt callstack 0
  2094  0001FD                     	ds	2
  2095  0000                     _IOCBbits	set	3930
  2096  0000                     _WPUB	set	3931
  2097  0000                     _ANCON1	set	3932
  2098  0000                     _ANCON0	set	3933
  2099  0000                     _LATEbits	set	3981
  2100  0000                     _SSPSTATbits	set	4039
  2101  0000                     _LATAbits	set	3977
  2102  0000                     _PORTBbits	set	3969
  2103  0000                     _T1GCONbits	set	4010
  2104  0000                     _T1CONbits	set	4045
  2105  0000                     _T1CON	set	4045
  2106  0000                     _TMR1L	set	4046
  2107  0000                     _TMR1H	set	4047
  2108  0000                     _T1GCON	set	4010
  2109  0000                     _ADCON0bits	set	4034
  2110  0000                     _ADRESL	set	4035
  2111  0000                     _ADRESH	set	4036
  2112  0000                     _ADCON2	set	4032
  2113  0000                     _ADCON1	set	4033
  2114  0000                     _ADCON0	set	4034
  2115  0000                     _PIR1bits	set	3998
  2116  0000                     _SSPBUF	set	4041
  2117  0000                     _SSPCON2	set	4037
  2118  0000                     _SSPCON1bits	set	4038
  2119  0000                     _TRISCbits	set	3988
  2120  0000                     _SSPADD	set	4040
  2121  0000                     _SSPCON1	set	4038
  2122  0000                     _SSPSTAT	set	4039
  2123  0000                     _INTCON2bits	set	4081
  2124  0000                     _TRISD	set	3989
  2125  0000                     _TRISC	set	3988
  2126  0000                     _TRISB	set	3987
  2127  0000                     _TRISA	set	3986
  2128  0000                     _TRISE	set	3990
  2129  0000                     _LATC	set	3979
  2130  0000                     _LATB	set	3978
  2131  0000                     _LATA	set	3977
  2132  0000                     _LATD	set	3980
  2133  0000                     _LATE	set	3981
  2134  0000                     _INTCONbits	set	4082
  2135  0000                     _RCONbits	set	4048
  2136  0000                     _REFOCON	set	3994
  2137  0000                     _OSCTUNE	set	3995
  2138  0000                     _OSCCON2	set	4050
  2139  0000                     _OSCCON	set	4051
  2140                           
  2141                           	psect	cinit
  2142  005998                     __pcinit:
  2143                           	opt callstack 0
  2144  005998                     start_initialization:
  2145                           	opt callstack 0
  2146  005998                     __initialization:
  2147                           	opt callstack 0
  2148                           
  2149                           ; Initialize objects allocated to BANK1 (7 bytes)
  2150                           ; load TBLPTR registers with __pidataBANK1
  2151  005998  0E2A               	movlw	low __pidataBANK1
  2152  00599A  6EF6               	movwf	tblptrl,c
  2153  00599C  0E5F               	movlw	high __pidataBANK1
  2154  00599E  6EF7               	movwf	tblptrh,c
  2155  0059A0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2156  0059A2  6EF8               	movwf	tblptru,c
  2157  0059A4  EE01  F0F4         	lfsr	0,__pdataBANK1
  2158  0059A8  EE10 F007          	lfsr	1,7
  2159  0059AC                     copy_data0:
  2160  0059AC  0009               	tblrd		*+
  2161  0059AE  CFF5 FFEE          	movff	tablat,postinc0
  2162  0059B2  50E5               	movf	postdec1,w,c
  2163  0059B4  50E1               	movf	fsr1l,w,c
  2164  0059B6  E1FA               	bnz	copy_data0
  2165                           
  2166                           ; Clear objects allocated to BANK2 (200 bytes)
  2167  0059B8  EE02  F000         	lfsr	0,__pbssBANK2
  2168  0059BC  0EC8               	movlw	200
  2169  0059BE                     clear_0:
  2170  0059BE  6AEE               	clrf	postinc0,c
  2171  0059C0  06E8               	decf	wreg,f,c
  2172  0059C2  E1FD               	bnz	clear_0
  2173                           
  2174                           ; Clear objects allocated to BANK1 (220 bytes)
  2175  0059C4  EE01  F000         	lfsr	0,__pbssBANK1
  2176  0059C8  0EDC               	movlw	220
  2177  0059CA                     clear_1:
  2178  0059CA  6AEE               	clrf	postinc0,c
  2179  0059CC  06E8               	decf	wreg,f,c
  2180  0059CE  E1FD               	bnz	clear_1
  2181                           
  2182                           ; Clear objects allocated to BANK0 (4 bytes)
  2183  0059D0  0100               	movlb	0
  2184  0059D2  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
  2185  0059D4  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
  2186  0059D6  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
  2187  0059D8  6BFA               	clrf	__pbssBANK0& (0+255),b
  2188                           
  2189                           ; Clear objects allocated to COMRAM (2 bytes)
  2190  0059DA  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2191  0059DC  6A5B               	clrf	__pbssCOMRAM& (0+255),c
  2192  0059DE                     end_of_initialization:
  2193                           	opt callstack 0
  2194  0059DE                     __end_of__initialization:
  2195                           	opt callstack 0
  2196  0059DE  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2197  0059E0  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2198  0059E2  0100               	movlb	0
  2199  0059E4  EFCD  F012         	goto	_main	;jump to C main() function
  2200                           
  2201                           	psect	bssCOMRAM
  2202  00005B                     __pbssCOMRAM:
  2203                           	opt callstack 0
  2204  00005B                     _prec:
  2205                           	opt callstack 0
  2206  00005B                     	ds	2
  2207                           
  2208                           	psect	bssBANK0
  2209  0000FA                     __pbssBANK0:
  2210                           	opt callstack 0
  2211  0000FA                     _width:
  2212                           	opt callstack 0
  2213  0000FA                     	ds	2
  2214  0000FC                     _flags:
  2215                           	opt callstack 0
  2216  0000FC                     	ds	2
  2217                           
  2218                           	psect	bssBANK1
  2219  000100                     __pbssBANK1:
  2220                           	opt callstack 0
  2221  000100                     floorf@F524:
  2222                           	opt callstack 0
  2223  000100                     	ds	4
  2224  000104                     ___fpclassifyf@F463:
  2225                           	opt callstack 0
  2226  000104                     	ds	4
  2227  000108                     _temp_ntc:
  2228                           	opt callstack 0
  2229  000108                     	ds	4
  2230  00010C                     _ntc_val:
  2231                           	opt callstack 0
  2232  00010C                     	ds	4
  2233  000110                     _pot_val:
  2234                           	opt callstack 0
  2235  000110                     	ds	4
  2236  000114                     _temp:
  2237                           	opt callstack 0
  2238  000114                     	ds	4
  2239  000118                     _errno:
  2240                           	opt callstack 0
  2241  000118                     	ds	2
  2242  00011A                     _nout:
  2243                           	opt callstack 0
  2244  00011A                     	ds	2
  2245  00011C                     _global_bg_color:
  2246                           	opt callstack 0
  2247  00011C                     	ds	2
  2248  00011E                     _botao:
  2249                           	opt callstack 0
  2250  00011E                     	ds	2
  2251  000120                     _codigo_digit:
  2252                           	opt callstack 0
  2253  000120                     	ds	2
  2254  000122                     _ADC_InterruptHandler:
  2255                           	opt callstack 0
  2256  000122                     	ds	2
  2257  000124                     _string_temp:
  2258                           	opt callstack 0
  2259  000124                     	ds	100
  2260  000188                     _dbuf:
  2261                           	opt callstack 0
  2262  000188                     	ds	80
  2263  0001D8                     _tensao_in:
  2264                           	opt callstack 0
  2265  0001D8                     	ds	4
  2266                           
  2267                           	psect	dataBANK1
  2268  0001F4                     __pdataBANK1:
  2269                           	opt callstack 0
  2270  0001F4                     stoa@F1174:
  2271                           	opt callstack 0
  2272  0001F4                     	ds	7
  2273                           
  2274                           	psect	bssBANK2
  2275  000200                     __pbssBANK2:
  2276                           	opt callstack 0
  2277  000200                     _string_ntc:
  2278                           	opt callstack 0
  2279  000200                     	ds	100
  2280  000264                     _string_pot:
  2281                           	opt callstack 0
  2282  000264                     	ds	100
  2283                           
  2284                           	psect	cstackBANK1
  2285  0001DC                     __pcstackBANK1:
  2286                           	opt callstack 0
  2287  0001DC                     _vsnprintf$2147:
  2288                           	opt callstack 0
  2289                           
  2290                           ; 2 bytes @ 0x0
  2291  0001DC                     	ds	2
  2292  0001DE                     vsnprintf@cnt:
  2293                           	opt callstack 0
  2294                           
  2295                           ; 2 bytes @ 0x2
  2296  0001DE                     	ds	2
  2297  0001E0                     vsnprintf@f:
  2298                           	opt callstack 0
  2299                           
  2300                           ; 6 bytes @ 0x4
  2301  0001E0                     	ds	6
  2302  0001E6                     ?_snprintf:
  2303                           	opt callstack 0
  2304  0001E6                     snprintf@s:
  2305                           	opt callstack 0
  2306                           
  2307                           ; 2 bytes @ 0xA
  2308  0001E6                     	ds	2
  2309  0001E8                     snprintf@n:
  2310                           	opt callstack 0
  2311                           
  2312                           ; 2 bytes @ 0xC
  2313  0001E8                     	ds	2
  2314  0001EA                     snprintf@fmt:
  2315                           	opt callstack 0
  2316                           
  2317                           ; 2 bytes @ 0xE
  2318  0001EA                     	ds	8
  2319  0001F2                     snprintf@ap:
  2320                           	opt callstack 0
  2321                           
  2322                           ; 2 bytes @ 0x16
  2323  0001F2                     	ds	2
  2324                           
  2325                           	psect	cstackBANK0
  2326  000060                     __pcstackBANK0:
  2327                           	opt callstack 0
  2328  000060                     ?_floorf:
  2329                           	opt callstack 0
  2330  000060                     floorf@x:
  2331                           	opt callstack 0
  2332                           
  2333                           ; 4 bytes @ 0x0
  2334  000060                     	ds	4
  2335  000064                     ??_floorf:
  2336                           
  2337                           ; 1 bytes @ 0x4
  2338  000064                     	ds	6
  2339  00006A                     floorf@m:
  2340                           	opt callstack 0
  2341                           
  2342                           ; 4 bytes @ 0xA
  2343  00006A                     	ds	4
  2344  00006E                     floorf@e:
  2345                           	opt callstack 0
  2346                           
  2347                           ; 2 bytes @ 0xE
  2348  00006E                     	ds	2
  2349  000070                     floorf@u:
  2350                           	opt callstack 0
  2351                           
  2352                           ; 4 bytes @ 0x10
  2353  000070                     	ds	4
  2354  000074                     ?_efgtoa:
  2355                           	opt callstack 0
  2356  000074                     efgtoa@fp:
  2357                           	opt callstack 0
  2358                           
  2359                           ; 2 bytes @ 0x14
  2360  000074                     	ds	2
  2361  000076                     efgtoa@f:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 4 bytes @ 0x16
  2365  000076                     	ds	4
  2366  00007A                     efgtoa@c:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 1 bytes @ 0x1A
  2370  00007A                     	ds	1
  2371  00007B                     ??_efgtoa:
  2372                           
  2373                           ; 1 bytes @ 0x1B
  2374  00007B                     	ds	5
  2375  000080                     efgtoa@ou:
  2376                           	opt callstack 0
  2377                           
  2378                           ; 4 bytes @ 0x20
  2379  000080                     	ds	4
  2380  000084                     _efgtoa$1332:
  2381                           	opt callstack 0
  2382                           
  2383                           ; 2 bytes @ 0x24
  2384  000084                     	ds	2
  2385  000086                     _efgtoa$1333:
  2386                           	opt callstack 0
  2387                           
  2388                           ; 2 bytes @ 0x26
  2389  000086                     	ds	2
  2390  000088                     _efgtoa$1337:
  2391                           	opt callstack 0
  2392                           
  2393                           ; 2 bytes @ 0x28
  2394  000088                     	ds	2
  2395  00008A                     _efgtoa$1341:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x2A
  2399  00008A                     	ds	2
  2400  00008C                     _efgtoa$1342:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x2C
  2404  00008C                     	ds	2
  2405  00008E                     _efgtoa$1343:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 2 bytes @ 0x2E
  2409  00008E                     	ds	2
  2410  000090                     efgtoa@t:
  2411                           	opt callstack 0
  2412                           
  2413                           ; 2 bytes @ 0x30
  2414  000090                     	ds	2
  2415  000092                     efgtoa@pp:
  2416                           	opt callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x32
  2419  000092                     	ds	2
  2420  000094                     efgtoa@m:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x34
  2424  000094                     	ds	2
  2425  000096                     efgtoa@ne:
  2426                           	opt callstack 0
  2427                           
  2428                           ; 2 bytes @ 0x36
  2429  000096                     	ds	2
  2430  000098                     efgtoa@d:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x38
  2434  000098                     	ds	2
  2435  00009A                     efgtoa@sign:
  2436                           	opt callstack 0
  2437                           
  2438                           ; 2 bytes @ 0x3A
  2439  00009A                     	ds	2
  2440  00009C                     efgtoa@p:
  2441                           	opt callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x3C
  2444  00009C                     	ds	2
  2445  00009E                     efgtoa@nmode:
  2446                           	opt callstack 0
  2447                           
  2448                           ; 1 bytes @ 0x3E
  2449  00009E                     	ds	1
  2450  00009F                     efgtoa@w:
  2451                           	opt callstack 0
  2452                           
  2453                           ; 2 bytes @ 0x3F
  2454  00009F                     	ds	2
  2455  0000A1                     efgtoa@mode:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 1 bytes @ 0x41
  2459  0000A1                     	ds	1
  2460  0000A2                     efgtoa@h:
  2461                           	opt callstack 0
  2462                           
  2463                           ; 4 bytes @ 0x42
  2464  0000A2                     	ds	4
  2465  0000A6                     efgtoa@l:
  2466                           	opt callstack 0
  2467                           
  2468                           ; 4 bytes @ 0x46
  2469  0000A6                     	ds	4
  2470  0000AA                     efgtoa@i:
  2471                           	opt callstack 0
  2472                           
  2473                           ; 2 bytes @ 0x4A
  2474  0000AA                     	ds	2
  2475  0000AC                     efgtoa@g:
  2476                           	opt callstack 0
  2477                           
  2478                           ; 4 bytes @ 0x4C
  2479  0000AC                     	ds	4
  2480  0000B0                     efgtoa@e:
  2481                           	opt callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x50
  2484  0000B0                     	ds	2
  2485  0000B2                     efgtoa@n:
  2486                           	opt callstack 0
  2487                           
  2488                           ; 2 bytes @ 0x52
  2489  0000B2                     	ds	2
  2490  0000B4                     efgtoa@u:
  2491                           	opt callstack 0
  2492                           
  2493                           ; 4 bytes @ 0x54
  2494  0000B4                     	ds	4
  2495  0000B8                     ?_vfpfcnvrt:
  2496                           	opt callstack 0
  2497  0000B8                     vfpfcnvrt@fp:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 2 bytes @ 0x58
  2501  0000B8                     	ds	2
  2502  0000BA                     vfpfcnvrt@fmt:
  2503                           	opt callstack 0
  2504                           
  2505                           ; 2 bytes @ 0x5A
  2506  0000BA                     	ds	2
  2507  0000BC                     vfpfcnvrt@ap:
  2508                           	opt callstack 0
  2509                           
  2510                           ; 2 bytes @ 0x5C
  2511  0000BC                     	ds	2
  2512  0000BE                     ??_vfpfcnvrt:
  2513                           
  2514                           ; 1 bytes @ 0x5E
  2515  0000BE                     	ds	4
  2516  0000C2                     vfpfcnvrt@cp:
  2517                           	opt callstack 0
  2518                           
  2519                           ; 2 bytes @ 0x62
  2520  0000C2                     	ds	2
  2521  0000C4                     vfpfcnvrt@done:
  2522                           	opt callstack 0
  2523                           
  2524                           ; 2 bytes @ 0x64
  2525  0000C4                     	ds	2
  2526  0000C6                     _vfpfcnvrt$1394:
  2527                           	opt callstack 0
  2528                           
  2529                           ; 2 bytes @ 0x66
  2530  0000C6                     	ds	2
  2531  0000C8                     _vfpfcnvrt$1395:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 2 bytes @ 0x68
  2535  0000C8                     	ds	2
  2536  0000CA                     _vfpfcnvrt$1416:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x6A
  2540  0000CA                     	ds	2
  2541  0000CC                     vfpfcnvrt@f:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 4 bytes @ 0x6C
  2545  0000CC                     	ds	4
  2546  0000D0                     vfpfcnvrt@ct:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 3 bytes @ 0x70
  2550  0000D0                     	ds	3
  2551  0000D3                     vfpfcnvrt@ll:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 8 bytes @ 0x73
  2555  0000D3                     	ds	8
  2556  0000DB                     vfpfcnvrt@vp:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 2 bytes @ 0x7B
  2560  0000DB                     	ds	2
  2561  0000DD                     vfpfcnvrt@c:
  2562                           	opt callstack 0
  2563                           
  2564                           ; 1 bytes @ 0x7D
  2565  0000DD                     	ds	1
  2566  0000DE                     vfpfcnvrt@llu:
  2567                           	opt callstack 0
  2568                           
  2569                           ; 8 bytes @ 0x7E
  2570  0000DE                     	ds	8
  2571  0000E6                     ?_vfprintf:
  2572                           	opt callstack 0
  2573  0000E6                     vfprintf@fp:
  2574                           	opt callstack 0
  2575                           
  2576                           ; 2 bytes @ 0x86
  2577  0000E6                     	ds	2
  2578  0000E8                     vfprintf@fmt:
  2579                           	opt callstack 0
  2580                           
  2581                           ; 2 bytes @ 0x88
  2582  0000E8                     	ds	2
  2583  0000EA                     vfprintf@ap:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 2 bytes @ 0x8A
  2587  0000EA                     	ds	2
  2588  0000EC                     vfprintf@cfmt:
  2589                           	opt callstack 0
  2590                           
  2591                           ; 2 bytes @ 0x8C
  2592  0000EC                     	ds	2
  2593  0000EE                     ?_vsnprintf:
  2594                           	opt callstack 0
  2595  0000EE                     vsnprintf@s:
  2596                           	opt callstack 0
  2597                           
  2598                           ; 2 bytes @ 0x8E
  2599  0000EE                     	ds	2
  2600  0000F0                     vsnprintf@n:
  2601                           	opt callstack 0
  2602                           
  2603                           ; 2 bytes @ 0x90
  2604  0000F0                     	ds	2
  2605  0000F2                     vsnprintf@fmt:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 2 bytes @ 0x92
  2609  0000F2                     	ds	2
  2610  0000F4                     vsnprintf@ap:
  2611                           	opt callstack 0
  2612                           
  2613                           ; 2 bytes @ 0x94
  2614  0000F4                     	ds	2
  2615  0000F6                     ??_vsnprintf:
  2616                           
  2617                           ; 1 bytes @ 0x96
  2618  0000F6                     	ds	4
  2619                           
  2620                           	psect	cstackCOMRAM
  2621  000001                     __pcstackCOMRAM:
  2622                           	opt callstack 0
  2623  000001                     ??_INTERRUPT_InterruptManager:
  2624  000001                     
  2625                           ; 1 bytes @ 0x0
  2626  000001                     	ds	2
  2627  000003                     ??_TMR1_Initialize:
  2628  000003                     ??_SPI_Open:
  2629  000003                     ??_msDelay:
  2630  000003                     ?_strlen:
  2631                           	opt callstack 0
  2632  000003                     ?___fpclassifyf:
  2633                           	opt callstack 0
  2634  000003                     ?_isupper:
  2635                           	opt callstack 0
  2636  000003                     ?_isalpha:
  2637                           	opt callstack 0
  2638  000003                     ?_isdigit:
  2639                           	opt callstack 0
  2640  000003                     ?_strncmp:
  2641                           	opt callstack 0
  2642  000003                     ?_isspace:
  2643                           	opt callstack 0
  2644  000003                     ?_islower:
  2645                           	opt callstack 0
  2646  000003                     ?_ADC_GetConversion:
  2647                           	opt callstack 0
  2648  000003                     ?___wmul:
  2649                           	opt callstack 0
  2650  000003                     ?___awdiv:
  2651                           	opt callstack 0
  2652  000003                     ?___awmod:
  2653                           	opt callstack 0
  2654  000003                     ?___flneg:
  2655                           	opt callstack 0
  2656  000003                     ?___fltol:
  2657                           	opt callstack 0
  2658  000003                     ?___xxtofl:
  2659                           	opt callstack 0
  2660  000003                     ?___aodiv:
  2661                           	opt callstack 0
  2662  000003                     ?___aomod:
  2663                           	opt callstack 0
  2664  000003                     ?___lodiv:
  2665                           	opt callstack 0
  2666  000003                     ?___lomod:
  2667                           	opt callstack 0
  2668  000003                     SPI_ExchangeByte@data:
  2669                           	opt callstack 0
  2670  000003                     IOCB4_SetInterruptHandler@InterruptHandler:
  2671                           	opt callstack 0
  2672  000003                     ___wmul@multiplier:
  2673                           	opt callstack 0
  2674  000003                     ___awdiv@dividend:
  2675                           	opt callstack 0
  2676  000003                     ___awmod@dividend:
  2677                           	opt callstack 0
  2678  000003                     isalpha@c:
  2679                           	opt callstack 0
  2680  000003                     isdigit@c:
  2681                           	opt callstack 0
  2682  000003                     isspace@c:
  2683                           	opt callstack 0
  2684  000003                     isupper@c:
  2685                           	opt callstack 0
  2686  000003                     fputc@c:
  2687                           	opt callstack 0
  2688  000003                     strcpy@dest:
  2689                           	opt callstack 0
  2690  000003                     strlen@s:
  2691                           	opt callstack 0
  2692  000003                     strncmp@_l:
  2693                           	opt callstack 0
  2694  000003                     islower@c:
  2695                           	opt callstack 0
  2696  000003                     ___fleq@ff1:
  2697                           	opt callstack 0
  2698  000003                     ___flneg@f1:
  2699                           	opt callstack 0
  2700  000003                     ___fltol@f1:
  2701                           	opt callstack 0
  2702  000003                     ___xxtofl@val:
  2703                           	opt callstack 0
  2704  000003                     ___fpclassifyf@x:
  2705                           	opt callstack 0
  2706  000003                     ___aodiv@dividend:
  2707                           	opt callstack 0
  2708  000003                     ___aomod@dividend:
  2709                           	opt callstack 0
  2710  000003                     ___lodiv@dividend:
  2711                           	opt callstack 0
  2712  000003                     ___lomod@dividend:
  2713                           	opt callstack 0
  2714                           
  2715                           ; 8 bytes @ 0x2
  2716  000003                     	ds	1
  2717  000004                     SPI_Open@spiUniqueConfiguration:
  2718                           	opt callstack 0
  2719  000004                     msDelay@ms:
  2720                           	opt callstack 0
  2721  000004                     lcd_send@value:
  2722                           	opt callstack 0
  2723                           
  2724                           ; 1 bytes @ 0x3
  2725  000004                     	ds	1
  2726  000005                     ??_isupper:
  2727  000005                     ??_isalpha:
  2728  000005                     ??_isdigit:
  2729  000005                     ??_isspace:
  2730  000005                     ??_islower:
  2731  000005                     ??_ADC_GetConversion:
  2732  000005                     msDelay@k:
  2733                           	opt callstack 0
  2734  000005                     lcd_send@dc:
  2735                           	opt callstack 0
  2736  000005                     ___wmul@multiplicand:
  2737                           	opt callstack 0
  2738  000005                     ___awdiv@divisor:
  2739                           	opt callstack 0
  2740  000005                     ___awmod@divisor:
  2741                           	opt callstack 0
  2742  000005                     fputc@fp:
  2743                           	opt callstack 0
  2744  000005                     strcpy@src:
  2745                           	opt callstack 0
  2746  000005                     strlen@a:
  2747                           	opt callstack 0
  2748  000005                     strncmp@_r:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 2 bytes @ 0x4
  2752  000005                     	ds	1
  2753  000006                     lcd_set_cursor_x@x:
  2754                           	opt callstack 0
  2755  000006                     lcd_set_cursor_y@y:
  2756                           	opt callstack 0
  2757  000006                     lcd_draw_pixel@color:
  2758                           	opt callstack 0
  2759                           
  2760                           ; 2 bytes @ 0x5
  2761  000006                     	ds	1
  2762  000007                     ??_fputc:
  2763  000007                     ??___fpclassifyf:
  2764  000007                     ??_strcpy:
  2765  000007                     ??___fltol:
  2766  000007                     ??___xxtofl:
  2767  000007                     ADC_GetConversion@channel:
  2768                           	opt callstack 0
  2769  000007                     ___awdiv@counter:
  2770                           	opt callstack 0
  2771  000007                     ___awmod@counter:
  2772                           	opt callstack 0
  2773  000007                     ___wmul@product:
  2774                           	opt callstack 0
  2775  000007                     strncmp@n:
  2776                           	opt callstack 0
  2777  000007                     ___fleq@ff2:
  2778                           	opt callstack 0
  2779                           
  2780                           ; 4 bytes @ 0x6
  2781  000007                     	ds	1
  2782  000008                     ___awdiv@sign:
  2783                           	opt callstack 0
  2784  000008                     ___awmod@sign:
  2785                           	opt callstack 0
  2786  000008                     lcd_set_cursor@x:
  2787                           	opt callstack 0
  2788                           
  2789                           ; 2 bytes @ 0x7
  2790  000008                     	ds	1
  2791  000009                     ??_strncmp:
  2792  000009                     ?_tolower:
  2793                           	opt callstack 0
  2794  000009                     ?_toupper:
  2795                           	opt callstack 0
  2796  000009                     _isspace$2017:
  2797                           	opt callstack 0
  2798  000009                     ___awdiv@quotient:
  2799                           	opt callstack 0
  2800  000009                     strcpy@s:
  2801                           	opt callstack 0
  2802  000009                     tolower@c:
  2803                           	opt callstack 0
  2804  000009                     toupper@c:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 2 bytes @ 0x8
  2808  000009                     	ds	1
  2809  00000A                     ?_atoi:
  2810                           	opt callstack 0
  2811  00000A                     lcd_set_cursor@y:
  2812                           	opt callstack 0
  2813  00000A                     atoi@s:
  2814                           	opt callstack 0
  2815  00000A                     strncmp@l:
  2816                           	opt callstack 0
  2817                           
  2818                           ; 2 bytes @ 0x9
  2819  00000A                     	ds	1
  2820  00000B                     ??_tolower:
  2821  00000B                     ??_toupper:
  2822  00000B                     ??___fleq:
  2823  00000B                     ___fltol@sign1:
  2824                           	opt callstack 0
  2825  00000B                     ___xxtofl@sign:
  2826                           	opt callstack 0
  2827  00000B                     ___fpclassifyf@e:
  2828                           	opt callstack 0
  2829  00000B                     strcpy@d:
  2830                           	opt callstack 0
  2831  00000B                     ___aodiv@divisor:
  2832                           	opt callstack 0
  2833  00000B                     ___aomod@divisor:
  2834                           	opt callstack 0
  2835  00000B                     ___lodiv@divisor:
  2836                           	opt callstack 0
  2837  00000B                     ___lomod@divisor:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 8 bytes @ 0xA
  2841  00000B                     	ds	1
  2842  00000C                     ??_atoi:
  2843  00000C                     ?_stoa:
  2844                           	opt callstack 0
  2845  00000C                     ___fltol@exp1:
  2846                           	opt callstack 0
  2847  00000C                     ___xxtofl@exp:
  2848                           	opt callstack 0
  2849  00000C                     lcd_fill@bg_color:
  2850                           	opt callstack 0
  2851  00000C                     lcd_draw_char@x:
  2852                           	opt callstack 0
  2853  00000C                     stoa@fp:
  2854                           	opt callstack 0
  2855  00000C                     fputs@s:
  2856                           	opt callstack 0
  2857  00000C                     strncmp@r:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 2 bytes @ 0xB
  2861  00000C                     	ds	1
  2862  00000D                     ___xxtofl@arg:
  2863                           	opt callstack 0
  2864  00000D                     ___fpclassifyf@u:
  2865                           	opt callstack 0
  2866                           
  2867                           ; 4 bytes @ 0xC
  2868  00000D                     	ds	1
  2869  00000E                     lcd_fill@height:
  2870                           	opt callstack 0
  2871  00000E                     lcd_draw_char@y:
  2872                           	opt callstack 0
  2873  00000E                     stoa@s:
  2874                           	opt callstack 0
  2875  00000E                     fputs@fp:
  2876                           	opt callstack 0
  2877                           
  2878                           ; 2 bytes @ 0xD
  2879  00000E                     	ds	1
  2880  00000F                     _tolower$2100:
  2881                           	opt callstack 0
  2882  00000F                     _toupper$2115:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 2 bytes @ 0xE
  2886  00000F                     	ds	1
  2887  000010                     ??_stoa:
  2888  000010                     fputs@c:
  2889                           	opt callstack 0
  2890  000010                     lcd_fill@width:
  2891                           	opt callstack 0
  2892  000010                     lcd_draw_char@fIndex:
  2893                           	opt callstack 0
  2894  000010                     atoi@neg:
  2895                           	opt callstack 0
  2896                           
  2897                           ; 2 bytes @ 0xF
  2898  000010                     	ds	1
  2899  000011                     ?___flmul:
  2900                           	opt callstack 0
  2901  000011                     fputs@i:
  2902                           	opt callstack 0
  2903  000011                     ___flmul@b:
  2904                           	opt callstack 0
  2905  000011                     stoa@nuls:
  2906                           	opt callstack 0
  2907                           
  2908                           ; 7 bytes @ 0x10
  2909  000011                     	ds	1
  2910  000012                     lcd_draw_char@fg_color:
  2911                           	opt callstack 0
  2912  000012                     _atoi$1977:
  2913                           	opt callstack 0
  2914                           
  2915                           ; 2 bytes @ 0x11
  2916  000012                     	ds	1
  2917  000013                     ?_pad:
  2918                           	opt callstack 0
  2919  000013                     ___aodiv@counter:
  2920                           	opt callstack 0
  2921  000013                     ___aomod@counter:
  2922                           	opt callstack 0
  2923  000013                     ___lomod@counter:
  2924                           	opt callstack 0
  2925  000013                     pad@fp:
  2926                           	opt callstack 0
  2927  000013                     ___lodiv@quotient:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 8 bytes @ 0x12
  2931  000013                     	ds	1
  2932  000014                     ___aodiv@sign:
  2933                           	opt callstack 0
  2934  000014                     ___aomod@sign:
  2935                           	opt callstack 0
  2936  000014                     lcd_draw_char@bg_color:
  2937                           	opt callstack 0
  2938  000014                     _atoi$1979:
  2939                           	opt callstack 0
  2940                           
  2941                           ; 2 bytes @ 0x13
  2942  000014                     	ds	1
  2943  000015                     ?_abs:
  2944                           	opt callstack 0
  2945  000015                     pad@buf:
  2946                           	opt callstack 0
  2947  000015                     abs@a:
  2948                           	opt callstack 0
  2949  000015                     ___flmul@a:
  2950                           	opt callstack 0
  2951  000015                     ___aodiv@quotient:
  2952                           	opt callstack 0
  2953                           
  2954                           ; 8 bytes @ 0x14
  2955  000015                     	ds	1
  2956  000016                     ??_lcd_draw_char:
  2957  000016                     _atoi$1978:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 1 bytes @ 0x15
  2961  000016                     	ds	1
  2962  000017                     ??_abs:
  2963  000017                     pad@p:
  2964                           	opt callstack 0
  2965  000017                     atoi@n:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 2 bytes @ 0x16
  2969  000017                     	ds	1
  2970  000018                     stoa@i:
  2971                           	opt callstack 0
  2972                           
  2973                           ; 2 bytes @ 0x17
  2974  000018                     	ds	1
  2975  000019                     ??___flmul:
  2976  000019                     ??_pad:
  2977                           
  2978                           ; 1 bytes @ 0x18
  2979  000019                     	ds	1
  2980  00001A                     pad@i:
  2981                           	opt callstack 0
  2982  00001A                     stoa@w:
  2983                           	opt callstack 0
  2984                           
  2985                           ; 2 bytes @ 0x19
  2986  00001A                     	ds	1
  2987  00001B                     ___lodiv@counter:
  2988                           	opt callstack 0
  2989                           
  2990                           ; 1 bytes @ 0x1A
  2991  00001B                     	ds	1
  2992  00001C                     pad@w:
  2993                           	opt callstack 0
  2994  00001C                     stoa@cp:
  2995                           	opt callstack 0
  2996                           
  2997                           ; 2 bytes @ 0x1B
  2998  00001C                     	ds	1
  2999  00001D                     ___flmul@sign:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 1 bytes @ 0x1C
  3003  00001D                     	ds	1
  3004  00001E                     ?_ctoa:
  3005                           	opt callstack 0
  3006  00001E                     ?_dtoa:
  3007                           	opt callstack 0
  3008  00001E                     ?_otoa:
  3009                           	opt callstack 0
  3010  00001E                     ?_utoa:
  3011                           	opt callstack 0
  3012  00001E                     ?_xtoa:
  3013                           	opt callstack 0
  3014  00001E                     ___flmul@aexp:
  3015                           	opt callstack 0
  3016  00001E                     ctoa@fp:
  3017                           	opt callstack 0
  3018  00001E                     dtoa@fp:
  3019                           	opt callstack 0
  3020  00001E                     otoa@fp:
  3021                           	opt callstack 0
  3022  00001E                     stoa@p:
  3023                           	opt callstack 0
  3024  00001E                     utoa@fp:
  3025                           	opt callstack 0
  3026  00001E                     xtoa@fp:
  3027                           	opt callstack 0
  3028                           
  3029                           ; 2 bytes @ 0x1D
  3030  00001E                     	ds	1
  3031  00001F                     lcd_draw_char@j:
  3032                           	opt callstack 0
  3033  00001F                     ___flmul@grs:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 4 bytes @ 0x1E
  3037  00001F                     	ds	1
  3038  000020                     lcd_draw_char@k:
  3039                           	opt callstack 0
  3040  000020                     ctoa@c:
  3041                           	opt callstack 0
  3042  000020                     stoa@l:
  3043                           	opt callstack 0
  3044  000020                     dtoa@d:
  3045                           	opt callstack 0
  3046  000020                     otoa@d:
  3047                           	opt callstack 0
  3048  000020                     utoa@d:
  3049                           	opt callstack 0
  3050  000020                     xtoa@d:
  3051                           	opt callstack 0
  3052                           
  3053                           ; 8 bytes @ 0x1F
  3054  000020                     	ds	1
  3055  000021                     lcd_draw_char@i:
  3056                           	opt callstack 0
  3057  000021                     ctoa@w:
  3058                           	opt callstack 0
  3059                           
  3060                           ; 2 bytes @ 0x20
  3061  000021                     	ds	1
  3062  000022                     lcd_draw_string@x:
  3063                           	opt callstack 0
  3064                           
  3065                           ; 2 bytes @ 0x21
  3066  000022                     	ds	1
  3067  000023                     ___flmul@bexp:
  3068                           	opt callstack 0
  3069                           
  3070                           ; 1 bytes @ 0x22
  3071  000023                     	ds	1
  3072  000024                     lcd_draw_string@y:
  3073                           	opt callstack 0
  3074  000024                     ___flmul@prod:
  3075                           	opt callstack 0
  3076                           
  3077                           ; 4 bytes @ 0x23
  3078  000024                     	ds	2
  3079  000026                     lcd_draw_string@pS:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 2 bytes @ 0x25
  3083  000026                     	ds	2
  3084  000028                     ??_dtoa:
  3085  000028                     ??_otoa:
  3086  000028                     ??_utoa:
  3087  000028                     xtoa@x:
  3088                           	opt callstack 0
  3089  000028                     lcd_draw_string@fg_color:
  3090                           	opt callstack 0
  3091  000028                     ___flmul@temp:
  3092                           	opt callstack 0
  3093                           
  3094                           ; 2 bytes @ 0x27
  3095  000028                     	ds	1
  3096  000029                     ??_xtoa:
  3097                           
  3098                           ; 1 bytes @ 0x28
  3099  000029                     	ds	1
  3100  00002A                     ?___fladd:
  3101                           	opt callstack 0
  3102  00002A                     lcd_draw_string@bg_color:
  3103                           	opt callstack 0
  3104  00002A                     ___flge@ff1:
  3105                           	opt callstack 0
  3106  00002A                     ___fladd@b:
  3107                           	opt callstack 0
  3108                           
  3109                           ; 4 bytes @ 0x29
  3110  00002A                     	ds	2
  3111  00002C                     ??_lcd_draw_string:
  3112                           
  3113                           ; 1 bytes @ 0x2B
  3114  00002C                     	ds	2
  3115  00002E                     ___flge@ff2:
  3116                           	opt callstack 0
  3117  00002E                     ___fladd@a:
  3118                           	opt callstack 0
  3119                           
  3120                           ; 4 bytes @ 0x2D
  3121  00002E                     	ds	2
  3122  000030                     lcd_draw_string@k:
  3123                           	opt callstack 0
  3124  000030                     _dtoa$1309:
  3125                           	opt callstack 0
  3126  000030                     otoa@p:
  3127                           	opt callstack 0
  3128  000030                     utoa@p:
  3129                           	opt callstack 0
  3130                           
  3131                           ; 2 bytes @ 0x2F
  3132  000030                     	ds	1
  3133  000031                     _xtoa$1379:
  3134                           	opt callstack 0
  3135                           
  3136                           ; 2 bytes @ 0x30
  3137  000031                     	ds	1
  3138  000032                     ??___fladd:
  3139  000032                     ??___flge:
  3140  000032                     lcd_draw_string@lIndex:
  3141                           	opt callstack 0
  3142  000032                     dtoa@p:
  3143                           	opt callstack 0
  3144  000032                     otoa@t:
  3145                           	opt callstack 0
  3146  000032                     utoa@w:
  3147                           	opt callstack 0
  3148                           
  3149                           ; 2 bytes @ 0x31
  3150  000032                     	ds	1
  3151  000033                     _xtoa$1380:
  3152                           	opt callstack 0
  3153                           
  3154                           ; 2 bytes @ 0x32
  3155  000033                     	ds	1
  3156  000034                     dtoa@w:
  3157                           	opt callstack 0
  3158  000034                     otoa@w:
  3159                           	opt callstack 0
  3160  000034                     utoa@n:
  3161                           	opt callstack 0
  3162                           
  3163                           ; 8 bytes @ 0x33
  3164  000034                     	ds	1
  3165  000035                     xtoa@p:
  3166                           	opt callstack 0
  3167                           
  3168                           ; 2 bytes @ 0x34
  3169  000035                     	ds	1
  3170  000036                     ___fladd@signs:
  3171                           	opt callstack 0
  3172  000036                     dtoa@s:
  3173                           	opt callstack 0
  3174  000036                     otoa@n:
  3175                           	opt callstack 0
  3176                           
  3177                           ; 8 bytes @ 0x35
  3178  000036                     	ds	1
  3179  000037                     ___fladd@aexp:
  3180                           	opt callstack 0
  3181  000037                     xtoa@w:
  3182                           	opt callstack 0
  3183                           
  3184                           ; 2 bytes @ 0x36
  3185  000037                     	ds	1
  3186  000038                     ___fladd@bexp:
  3187                           	opt callstack 0
  3188  000038                     dtoa@n:
  3189                           	opt callstack 0
  3190                           
  3191                           ; 8 bytes @ 0x37
  3192  000038                     	ds	1
  3193  000039                     ___fladd@grs:
  3194                           	opt callstack 0
  3195  000039                     xtoa@n:
  3196                           	opt callstack 0
  3197                           
  3198                           ; 8 bytes @ 0x38
  3199  000039                     	ds	1
  3200  00003A                     ?___flsub:
  3201                           	opt callstack 0
  3202  00003A                     ___flsub@b:
  3203                           	opt callstack 0
  3204                           
  3205                           ; 4 bytes @ 0x39
  3206  00003A                     	ds	2
  3207  00003C                     utoa@i:
  3208                           	opt callstack 0
  3209                           
  3210                           ; 2 bytes @ 0x3B
  3211  00003C                     	ds	2
  3212  00003E                     otoa@i:
  3213                           	opt callstack 0
  3214  00003E                     ___flsub@a:
  3215                           	opt callstack 0
  3216                           
  3217                           ; 4 bytes @ 0x3D
  3218  00003E                     	ds	2
  3219  000040                     dtoa@i:
  3220                           	opt callstack 0
  3221                           
  3222                           ; 2 bytes @ 0x3F
  3223  000040                     	ds	1
  3224  000041                     xtoa@i:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 2 bytes @ 0x40
  3228  000041                     	ds	1
  3229  000042                     ?___fldiv:
  3230                           	opt callstack 0
  3231  000042                     ___fldiv@b:
  3232                           	opt callstack 0
  3233                           
  3234                           ; 4 bytes @ 0x41
  3235  000042                     	ds	1
  3236  000043                     xtoa@c:
  3237                           	opt callstack 0
  3238                           
  3239                           ; 2 bytes @ 0x42
  3240  000043                     	ds	3
  3241  000046                     ___fldiv@a:
  3242                           	opt callstack 0
  3243                           
  3244                           ; 4 bytes @ 0x45
  3245  000046                     	ds	4
  3246  00004A                     ??___fldiv:
  3247                           
  3248                           ; 1 bytes @ 0x49
  3249  00004A                     	ds	4
  3250  00004E                     ___fldiv@rem:
  3251                           	opt callstack 0
  3252                           
  3253                           ; 4 bytes @ 0x4D
  3254  00004E                     	ds	4
  3255  000052                     ___fldiv@sign:
  3256                           	opt callstack 0
  3257                           
  3258                           ; 1 bytes @ 0x51
  3259  000052                     	ds	1
  3260  000053                     ___fldiv@new_exp:
  3261                           	opt callstack 0
  3262                           
  3263                           ; 2 bytes @ 0x52
  3264  000053                     	ds	2
  3265  000055                     ___fldiv@grs:
  3266                           	opt callstack 0
  3267                           
  3268                           ; 4 bytes @ 0x54
  3269  000055                     	ds	4
  3270  000059                     ___fldiv@bexp:
  3271                           	opt callstack 0
  3272                           
  3273                           ; 1 bytes @ 0x58
  3274  000059                     	ds	1
  3275  00005A                     ___fldiv@aexp:
  3276                           	opt callstack 0
  3277                           
  3278                           ; 1 bytes @ 0x59
  3279  00005A                     	ds	1
  3280  00005B                     
  3281                           ; 1 bytes @ 0x5A
  3282 ;;
  3283 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3284 ;;
  3285 ;; *************** function _main *****************
  3286 ;; Defined at:
  3287 ;;		line 34 in file "main.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels required when called:   13
  3307 ;; This function calls:
  3308 ;;		_ADC_GetConversion
  3309 ;;		_IOCB4_SetInterruptHandler
  3310 ;;		_SPI_Open
  3311 ;;		_SYSTEM_Initialize
  3312 ;;		___fladd
  3313 ;;		___fldiv
  3314 ;;		___flge
  3315 ;;		___flmul
  3316 ;;		___flsub
  3317 ;;		___xxtofl
  3318 ;;		_lcd_draw_string
  3319 ;;		_lcd_init
  3320 ;;		_snprintf
  3321 ;; This function is called by:
  3322 ;;		Startup code after reset
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text0
  3327  00259A                     __ptext0:
  3328                           	opt callstack 0
  3329  00259A                     _main:
  3330                           	opt callstack 18
  3331  00259A                     
  3332                           ;main.c: 37:     SYSTEM_Initialize();
  3333  00259A  EC43  F02F         	call	_SYSTEM_Initialize	;wreg free
  3334  00259E                     
  3335                           ;main.c: 38:     SPI_Open(SPI_DEFAULT);
  3336  00259E  0E00               	movlw	0
  3337  0025A0  ECC3  F02A         	call	_SPI_Open
  3338  0025A4                     
  3339                           ;main.c: 39:     lcd_init();
  3340  0025A4  ECD0  F018         	call	_lcd_init	;wreg free
  3341  0025A8                     
  3342                           ;main.c: 42:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  3343  0025A8  0E56               	movlw	low _IOCB4_InterruptCall
  3344  0025AA  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3345  0025AC  0E5D               	movlw	high _IOCB4_InterruptCall
  3346  0025AE  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3347  0025B0  EC90  F02F         	call	_IOCB4_SetInterruptHandler	;wreg free
  3348  0025B4                     
  3349                           ;main.c: 45:     (INTCONbits.GIE = 1);
  3350  0025B4  8EF2               	bsf	242,7,c	;volatile
  3351  0025B6                     
  3352                           ;main.c: 56:     lcd_draw_string(100,120,"HELLO WORLD",0xFFFF,0x0000);
  3353  0025B6  0E00               	movlw	0
  3354  0025B8  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3355  0025BA  0E64               	movlw	100
  3356  0025BC  6E22               	movwf	lcd_draw_string@x^0,c
  3357  0025BE  0E00               	movlw	0
  3358  0025C0  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3359  0025C2  0E78               	movlw	120
  3360  0025C4  6E24               	movwf	lcd_draw_string@y^0,c
  3361  0025C6  0EAE               	movlw	low STR_1
  3362  0025C8  6E26               	movwf	lcd_draw_string@pS^0,c
  3363  0025CA  0EFF               	movlw	high STR_1
  3364  0025CC  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3365  0025CE  0EFF               	movlw	255
  3366  0025D0  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3367  0025D2  6828               	setf	lcd_draw_string@fg_color^0,c
  3368  0025D4  0E00               	movlw	0
  3369  0025D6  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3370  0025D8  0E00               	movlw	0
  3371  0025DA  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3372  0025DC  ECB1  F025         	call	_lcd_draw_string	;wreg free
  3373  0025E0                     l9128:
  3374                           
  3375                           ;main.c: 59:     {;main.c: 61:         if (botao==1){
  3376  0025E0  0101               	movlb	1	; () banked
  3377  0025E2  051E               	decf	_botao& (0+255),w,b
  3378  0025E4  111F               	iorwf	(_botao+1)& (0+255),w,b
  3379  0025E6  A4D8               	btfss	status,2,c
  3380  0025E8  EFF8  F012         	goto	u12081
  3381  0025EC  EFFA  F012         	goto	u12080
  3382  0025F0                     u12081:
  3383  0025F0  EF8A  F013         	goto	l9142
  3384  0025F4                     u12080:
  3385  0025F4                     
  3386                           ; BSR set to: 1
  3387                           ;main.c: 62:             codigo_digit=ADC_GetConversion(TEMP);
  3388  0025F4  0E01               	movlw	1
  3389  0025F6  EC03  F02E         	call	_ADC_GetConversion
  3390  0025FA  C003  F120         	movff	?_ADC_GetConversion,_codigo_digit
  3391  0025FE  C004  F121         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3392  002602                     
  3393                           ;main.c: 63:             tensao_in=codigo_digit*0.000805664063;
  3394  002602  C120  F003         	movff	_codigo_digit,___xxtofl@val
  3395  002606  C121  F004         	movff	_codigo_digit+1,___xxtofl@val+1
  3396  00260A  0E00               	movlw	0
  3397  00260C  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  3398  00260E  0EFF               	movlw	-1
  3399  002610  6E05               	movwf	(___xxtofl@val+2)^0,c
  3400  002612  6E06               	movwf	(___xxtofl@val+3)^0,c
  3401  002614  0E01               	movlw	1
  3402  002616  EC79  F020         	call	___xxtofl
  3403  00261A  C003  F011         	movff	?___xxtofl,___flmul@b
  3404  00261E  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3405  002622  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3406  002626  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3407  00262A  0E33               	movlw	51
  3408  00262C  6E15               	movwf	___flmul@a^0,c
  3409  00262E  0E33               	movlw	51
  3410  002630  6E16               	movwf	(___flmul@a+1)^0,c
  3411  002632  0E53               	movlw	83
  3412  002634  6E17               	movwf	(___flmul@a+2)^0,c
  3413  002636  0E3A               	movlw	58
  3414  002638  6E18               	movwf	(___flmul@a+3)^0,c
  3415  00263A  ECEE  F014         	call	___flmul	;wreg free
  3416  00263E  C011  F1D8         	movff	?___flmul,_tensao_in
  3417  002642  C012  F1D9         	movff	?___flmul+1,_tensao_in+1
  3418  002646  C013  F1DA         	movff	?___flmul+2,_tensao_in+2
  3419  00264A  C014  F1DB         	movff	?___flmul+3,_tensao_in+3
  3420  00264E                     
  3421                           ;main.c: 64:             temp=tensao_in*33.3333333;
  3422  00264E  C1D8  F011         	movff	_tensao_in,___flmul@b
  3423  002652  C1D9  F012         	movff	_tensao_in+1,___flmul@b+1
  3424  002656  C1DA  F013         	movff	_tensao_in+2,___flmul@b+2
  3425  00265A  C1DB  F014         	movff	_tensao_in+3,___flmul@b+3
  3426  00265E  0E55               	movlw	85
  3427  002660  6E15               	movwf	___flmul@a^0,c
  3428  002662  0E55               	movlw	85
  3429  002664  6E16               	movwf	(___flmul@a+1)^0,c
  3430  002666  0E05               	movlw	5
  3431  002668  6E17               	movwf	(___flmul@a+2)^0,c
  3432  00266A  0E42               	movlw	66
  3433  00266C  6E18               	movwf	(___flmul@a+3)^0,c
  3434  00266E  ECEE  F014         	call	___flmul	;wreg free
  3435  002672  C011  F114         	movff	?___flmul,_temp
  3436  002676  C012  F115         	movff	?___flmul+1,_temp+1
  3437  00267A  C013  F116         	movff	?___flmul+2,_temp+2
  3438  00267E  C014  F117         	movff	?___flmul+3,_temp+3
  3439  002682                     
  3440                           ;main.c: 65:             snprintf(string_temp,sizeof(string_temp),"Temp=%.f C      ",tem
      +                          p);
  3441  002682  0E24               	movlw	low _string_temp
  3442  002684  0101               	movlb	1	; () banked
  3443  002686  6FE6               	movwf	snprintf@s& (0+255),b
  3444  002688  0E01               	movlw	high _string_temp
  3445  00268A  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3446  00268C  0E00               	movlw	0
  3447  00268E  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3448  002690  0E64               	movlw	100
  3449  002692  6FE8               	movwf	snprintf@n& (0+255),b
  3450  002694  0E8D               	movlw	low STR_2
  3451  002696  6FEA               	movwf	snprintf@fmt& (0+255),b
  3452  002698  0EFF               	movlw	high STR_2
  3453  00269A  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3454  00269C  C114  F1EC         	movff	_temp,?_snprintf+6
  3455  0026A0  C115  F1ED         	movff	_temp+1,?_snprintf+7
  3456  0026A4  C116  F1EE         	movff	_temp+2,?_snprintf+8
  3457  0026A8  C117  F1EF         	movff	_temp+3,?_snprintf+9
  3458  0026AC  ECC6  F02E         	call	_snprintf	;wreg free
  3459  0026B0                     
  3460                           ;main.c: 66:             lcd_draw_string(100,100,string_temp,0xFFFF,0x0000);
  3461  0026B0  0E00               	movlw	0
  3462  0026B2  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3463  0026B4  0E64               	movlw	100
  3464  0026B6  6E22               	movwf	lcd_draw_string@x^0,c
  3465  0026B8  0E00               	movlw	0
  3466  0026BA  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3467  0026BC  0E64               	movlw	100
  3468  0026BE  6E24               	movwf	lcd_draw_string@y^0,c
  3469  0026C0  0E24               	movlw	low _string_temp
  3470  0026C2  6E26               	movwf	lcd_draw_string@pS^0,c
  3471  0026C4  0E01               	movlw	high _string_temp
  3472  0026C6  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3473  0026C8  0EFF               	movlw	255
  3474  0026CA  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3475  0026CC  6828               	setf	lcd_draw_string@fg_color^0,c
  3476  0026CE  0E00               	movlw	0
  3477  0026D0  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3478  0026D2  0E00               	movlw	0
  3479  0026D4  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3480  0026D6  ECB1  F025         	call	_lcd_draw_string	;wreg free
  3481  0026DA                     
  3482                           ;main.c: 67:                 if (temp >= 90){
  3483  0026DA  C114  F02A         	movff	_temp,___flge@ff1
  3484  0026DE  C115  F02B         	movff	_temp+1,___flge@ff1+1
  3485  0026E2  C116  F02C         	movff	_temp+2,___flge@ff1+2
  3486  0026E6  C117  F02D         	movff	_temp+3,___flge@ff1+3
  3487  0026EA  0E00               	movlw	0
  3488  0026EC  6E2E               	movwf	___flge@ff2^0,c
  3489  0026EE  0E00               	movlw	0
  3490  0026F0  6E2F               	movwf	(___flge@ff2+1)^0,c
  3491  0026F2  0EB4               	movlw	180
  3492  0026F4  6E30               	movwf	(___flge@ff2+2)^0,c
  3493  0026F6  0E42               	movlw	66
  3494  0026F8  6E31               	movwf	(___flge@ff2+3)^0,c
  3495  0026FA  EC60  F027         	call	___flge	;wreg free
  3496  0026FE  A0D8               	btfss	status,0,c
  3497  002700  EF84  F013         	goto	u12091
  3498  002704  EF86  F013         	goto	u12090
  3499  002708                     u12091:
  3500  002708  EF89  F013         	goto	l301
  3501  00270C                     u12090:
  3502  00270C  8A89               	bsf	137,5,c	;volatile
  3503  00270E  EF8A  F013         	goto	l9142
  3504  002712                     l301:
  3505  002712  9A89               	bcf	137,5,c	;volatile
  3506  002714                     l9142:
  3507                           
  3508                           ;main.c: 74:         if (botao==0){
  3509  002714  0101               	movlb	1	; () banked
  3510  002716  511E               	movf	_botao& (0+255),w,b
  3511  002718  111F               	iorwf	(_botao+1)& (0+255),w,b
  3512  00271A  A4D8               	btfss	status,2,c
  3513  00271C  EF92  F013         	goto	u12101
  3514  002720  EF94  F013         	goto	u12100
  3515  002724                     u12101:
  3516  002724  EFED  F013         	goto	l9152
  3517  002728                     u12100:
  3518  002728                     
  3519                           ; BSR set to: 1
  3520                           ;main.c: 75:             codigo_digit=ADC_GetConversion(POT);
  3521  002728  0E00               	movlw	0
  3522  00272A  EC03  F02E         	call	_ADC_GetConversion
  3523  00272E  C003  F120         	movff	?_ADC_GetConversion,_codigo_digit
  3524  002732  C004  F121         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3525  002736                     
  3526                           ;main.c: 76:             pot_val=codigo_digit*0.0244200244200244;
  3527  002736  C120  F003         	movff	_codigo_digit,___xxtofl@val
  3528  00273A  C121  F004         	movff	_codigo_digit+1,___xxtofl@val+1
  3529  00273E  0E00               	movlw	0
  3530  002740  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  3531  002742  0EFF               	movlw	-1
  3532  002744  6E05               	movwf	(___xxtofl@val+2)^0,c
  3533  002746  6E06               	movwf	(___xxtofl@val+3)^0,c
  3534  002748  0E01               	movlw	1
  3535  00274A  EC79  F020         	call	___xxtofl
  3536  00274E  C003  F011         	movff	?___xxtofl,___flmul@b
  3537  002752  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3538  002756  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3539  00275A  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3540  00275E  0E81               	movlw	129
  3541  002760  6E15               	movwf	___flmul@a^0,c
  3542  002762  0E0C               	movlw	12
  3543  002764  6E16               	movwf	(___flmul@a+1)^0,c
  3544  002766  0EC8               	movlw	200
  3545  002768  6E17               	movwf	(___flmul@a+2)^0,c
  3546  00276A  0E3C               	movlw	60
  3547  00276C  6E18               	movwf	(___flmul@a+3)^0,c
  3548  00276E  ECEE  F014         	call	___flmul	;wreg free
  3549  002772  C011  F110         	movff	?___flmul,_pot_val
  3550  002776  C012  F111         	movff	?___flmul+1,_pot_val+1
  3551  00277A  C013  F112         	movff	?___flmul+2,_pot_val+2
  3552  00277E  C014  F113         	movff	?___flmul+3,_pot_val+3
  3553  002782                     
  3554                           ;main.c: 77:             snprintf(string_pot,sizeof(string_pot),"Pot=%.f%%      ",pot_va
      +                          l);
  3555  002782  0E64               	movlw	low _string_pot
  3556  002784  0101               	movlb	1	; () banked
  3557  002786  6FE6               	movwf	snprintf@s& (0+255),b
  3558  002788  0E02               	movlw	high _string_pot
  3559  00278A  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3560  00278C  0E00               	movlw	0
  3561  00278E  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3562  002790  0E64               	movlw	100
  3563  002792  6FE8               	movwf	snprintf@n& (0+255),b
  3564  002794  0E9E               	movlw	low STR_3
  3565  002796  6FEA               	movwf	snprintf@fmt& (0+255),b
  3566  002798  0EFF               	movlw	high STR_3
  3567  00279A  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3568  00279C  C110  F1EC         	movff	_pot_val,?_snprintf+6
  3569  0027A0  C111  F1ED         	movff	_pot_val+1,?_snprintf+7
  3570  0027A4  C112  F1EE         	movff	_pot_val+2,?_snprintf+8
  3571  0027A8  C113  F1EF         	movff	_pot_val+3,?_snprintf+9
  3572  0027AC  ECC6  F02E         	call	_snprintf	;wreg free
  3573  0027B0                     
  3574                           ;main.c: 78:             lcd_draw_string(100,100,string_pot,0xFFFF,0x0000);
  3575  0027B0  0E00               	movlw	0
  3576  0027B2  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3577  0027B4  0E64               	movlw	100
  3578  0027B6  6E22               	movwf	lcd_draw_string@x^0,c
  3579  0027B8  0E00               	movlw	0
  3580  0027BA  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3581  0027BC  0E64               	movlw	100
  3582  0027BE  6E24               	movwf	lcd_draw_string@y^0,c
  3583  0027C0  0E64               	movlw	low _string_pot
  3584  0027C2  6E26               	movwf	lcd_draw_string@pS^0,c
  3585  0027C4  0E02               	movlw	high _string_pot
  3586  0027C6  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3587  0027C8  0EFF               	movlw	255
  3588  0027CA  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3589  0027CC  6828               	setf	lcd_draw_string@fg_color^0,c
  3590  0027CE  0E00               	movlw	0
  3591  0027D0  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3592  0027D2  0E00               	movlw	0
  3593  0027D4  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3594  0027D6  ECB1  F025         	call	_lcd_draw_string	;wreg free
  3595  0027DA                     l9152:
  3596                           
  3597                           ;main.c: 80:         if (botao==2){
  3598  0027DA  0E02               	movlw	2
  3599  0027DC  0101               	movlb	1	; () banked
  3600  0027DE  191E               	xorwf	_botao& (0+255),w,b
  3601  0027E0  111F               	iorwf	(_botao+1)& (0+255),w,b
  3602  0027E2  A4D8               	btfss	status,2,c
  3603  0027E4  EFF6  F013         	goto	u12111
  3604  0027E8  EFF8  F013         	goto	u12110
  3605  0027EC                     u12111:
  3606  0027EC  EFF0  F012         	goto	l9128
  3607  0027F0                     u12110:
  3608  0027F0                     
  3609                           ; BSR set to: 1
  3610                           ;main.c: 81:             codigo_digit=ADC_GetConversion(NTC);
  3611  0027F0  0E08               	movlw	8
  3612  0027F2  EC03  F02E         	call	_ADC_GetConversion
  3613  0027F6  C003  F120         	movff	?_ADC_GetConversion,_codigo_digit
  3614  0027FA  C004  F121         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3615  0027FE                     
  3616                           ;main.c: 82:             tensao_in=codigo_digit*0.000805664063;
  3617  0027FE  C120  F003         	movff	_codigo_digit,___xxtofl@val
  3618  002802  C121  F004         	movff	_codigo_digit+1,___xxtofl@val+1
  3619  002806  0E00               	movlw	0
  3620  002808  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  3621  00280A  0EFF               	movlw	-1
  3622  00280C  6E05               	movwf	(___xxtofl@val+2)^0,c
  3623  00280E  6E06               	movwf	(___xxtofl@val+3)^0,c
  3624  002810  0E01               	movlw	1
  3625  002812  EC79  F020         	call	___xxtofl
  3626  002816  C003  F011         	movff	?___xxtofl,___flmul@b
  3627  00281A  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3628  00281E  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3629  002822  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3630  002826  0E33               	movlw	51
  3631  002828  6E15               	movwf	___flmul@a^0,c
  3632  00282A  0E33               	movlw	51
  3633  00282C  6E16               	movwf	(___flmul@a+1)^0,c
  3634  00282E  0E53               	movlw	83
  3635  002830  6E17               	movwf	(___flmul@a+2)^0,c
  3636  002832  0E3A               	movlw	58
  3637  002834  6E18               	movwf	(___flmul@a+3)^0,c
  3638  002836  ECEE  F014         	call	___flmul	;wreg free
  3639  00283A  C011  F1D8         	movff	?___flmul,_tensao_in
  3640  00283E  C012  F1D9         	movff	?___flmul+1,_tensao_in+1
  3641  002842  C013  F1DA         	movff	?___flmul+2,_tensao_in+2
  3642  002846  C014  F1DB         	movff	?___flmul+3,_tensao_in+3
  3643  00284A                     
  3644                           ;main.c: 83:             ntc_val=((-1440*tensao_in)-12853.770491803)/(tensao_in-8.926229
      +                          5081968);
  3645  00284A  0E15               	movlw	21
  3646  00284C  6E2E               	movwf	___fladd@a^0,c
  3647  00284E  0ED7               	movlw	215
  3648  002850  6E2F               	movwf	(___fladd@a+1)^0,c
  3649  002852  0E48               	movlw	72
  3650  002854  6E30               	movwf	(___fladd@a+2)^0,c
  3651  002856  0EC6               	movlw	198
  3652  002858  6E31               	movwf	(___fladd@a+3)^0,c
  3653  00285A  0E00               	movlw	0
  3654  00285C  6E15               	movwf	___flmul@a^0,c
  3655  00285E  0E00               	movlw	0
  3656  002860  6E16               	movwf	(___flmul@a+1)^0,c
  3657  002862  0EB4               	movlw	180
  3658  002864  6E17               	movwf	(___flmul@a+2)^0,c
  3659  002866  0EC4               	movlw	196
  3660  002868  6E18               	movwf	(___flmul@a+3)^0,c
  3661  00286A  C1D8  F011         	movff	_tensao_in,___flmul@b
  3662  00286E  C1D9  F012         	movff	_tensao_in+1,___flmul@b+1
  3663  002872  C1DA  F013         	movff	_tensao_in+2,___flmul@b+2
  3664  002876  C1DB  F014         	movff	_tensao_in+3,___flmul@b+3
  3665  00287A  ECEE  F014         	call	___flmul	;wreg free
  3666  00287E  C011  F02A         	movff	?___flmul,___fladd@b
  3667  002882  C012  F02B         	movff	?___flmul+1,___fladd@b+1
  3668  002886  C013  F02C         	movff	?___flmul+2,___fladd@b+2
  3669  00288A  C014  F02D         	movff	?___flmul+3,___fladd@b+3
  3670  00288E  EC6D  F010         	call	___fladd	;wreg free
  3671  002892  C02A  F042         	movff	?___fladd,___fldiv@b
  3672  002896  C02B  F043         	movff	?___fladd+1,___fldiv@b+1
  3673  00289A  C02C  F044         	movff	?___fladd+2,___fldiv@b+2
  3674  00289E  C02D  F045         	movff	?___fladd+3,___fldiv@b+3
  3675  0028A2  0ED6               	movlw	214
  3676  0028A4  6E2E               	movwf	___fladd@a^0,c
  3677  0028A6  0ED1               	movlw	209
  3678  0028A8  6E2F               	movwf	(___fladd@a+1)^0,c
  3679  0028AA  0E0E               	movlw	14
  3680  0028AC  6E30               	movwf	(___fladd@a+2)^0,c
  3681  0028AE  0EC1               	movlw	193
  3682  0028B0  6E31               	movwf	(___fladd@a+3)^0,c
  3683  0028B2  C1D8  F02A         	movff	_tensao_in,___fladd@b
  3684  0028B6  C1D9  F02B         	movff	_tensao_in+1,___fladd@b+1
  3685  0028BA  C1DA  F02C         	movff	_tensao_in+2,___fladd@b+2
  3686  0028BE  C1DB  F02D         	movff	_tensao_in+3,___fladd@b+3
  3687  0028C2  EC6D  F010         	call	___fladd	;wreg free
  3688  0028C6  C02A  F046         	movff	?___fladd,___fldiv@a
  3689  0028CA  C02B  F047         	movff	?___fladd+1,___fldiv@a+1
  3690  0028CE  C02C  F048         	movff	?___fladd+2,___fldiv@a+2
  3691  0028D2  C02D  F049         	movff	?___fladd+3,___fldiv@a+3
  3692  0028D6  EC03  F017         	call	___fldiv	;wreg free
  3693  0028DA  C042  F10C         	movff	?___fldiv,_ntc_val
  3694  0028DE  C043  F10D         	movff	?___fldiv+1,_ntc_val+1
  3695  0028E2  C044  F10E         	movff	?___fldiv+2,_ntc_val+2
  3696  0028E6  C045  F10F         	movff	?___fldiv+3,_ntc_val+3
  3697                           
  3698                           ;main.c: 84:             temp_ntc=(-ntc_val+4425.5)/(85.3);
  3699  0028EA  C10C  F03E         	movff	_ntc_val,___flsub@a
  3700  0028EE  C10D  F03F         	movff	_ntc_val+1,___flsub@a+1
  3701  0028F2  C10E  F040         	movff	_ntc_val+2,___flsub@a+2
  3702  0028F6  C10F  F041         	movff	_ntc_val+3,___flsub@a+3
  3703  0028FA  0E00               	movlw	0
  3704  0028FC  6E3A               	movwf	___flsub@b^0,c
  3705  0028FE  0E4C               	movlw	76
  3706  002900  6E3B               	movwf	(___flsub@b+1)^0,c
  3707  002902  0E8A               	movlw	138
  3708  002904  6E3C               	movwf	(___flsub@b+2)^0,c
  3709  002906  0E45               	movlw	69
  3710  002908  6E3D               	movwf	(___flsub@b+3)^0,c
  3711  00290A  EC3C  F02D         	call	___flsub	;wreg free
  3712  00290E  C03A  F042         	movff	?___flsub,___fldiv@b
  3713  002912  C03B  F043         	movff	?___flsub+1,___fldiv@b+1
  3714  002916  C03C  F044         	movff	?___flsub+2,___fldiv@b+2
  3715  00291A  C03D  F045         	movff	?___flsub+3,___fldiv@b+3
  3716  00291E  0E9A               	movlw	154
  3717  002920  6E46               	movwf	___fldiv@a^0,c
  3718  002922  0E99               	movlw	153
  3719  002924  6E47               	movwf	(___fldiv@a+1)^0,c
  3720  002926  0EAA               	movlw	170
  3721  002928  6E48               	movwf	(___fldiv@a+2)^0,c
  3722  00292A  0E42               	movlw	66
  3723  00292C  6E49               	movwf	(___fldiv@a+3)^0,c
  3724  00292E  EC03  F017         	call	___fldiv	;wreg free
  3725  002932  C042  F108         	movff	?___fldiv,_temp_ntc
  3726  002936  C043  F109         	movff	?___fldiv+1,_temp_ntc+1
  3727  00293A  C044  F10A         	movff	?___fldiv+2,_temp_ntc+2
  3728  00293E  C045  F10B         	movff	?___fldiv+3,_temp_ntc+3
  3729  002942                     
  3730                           ;main.c: 85:             snprintf(string_ntc,sizeof(string_ntc),"NTC=%.f C            ",
      +                          temp_ntc);
  3731  002942  0E00               	movlw	low _string_ntc
  3732  002944  0101               	movlb	1	; () banked
  3733  002946  6FE6               	movwf	snprintf@s& (0+255),b
  3734  002948  0E02               	movlw	high _string_ntc
  3735  00294A  6FE7               	movwf	(snprintf@s+1)& (0+255),b
  3736  00294C  0E00               	movlw	0
  3737  00294E  6FE9               	movwf	(snprintf@n+1)& (0+255),b
  3738  002950  0E64               	movlw	100
  3739  002952  6FE8               	movwf	snprintf@n& (0+255),b
  3740  002954  0E77               	movlw	low STR_4
  3741  002956  6FEA               	movwf	snprintf@fmt& (0+255),b
  3742  002958  0EFF               	movlw	high STR_4
  3743  00295A  6FEB               	movwf	(snprintf@fmt+1)& (0+255),b
  3744  00295C  C108  F1EC         	movff	_temp_ntc,?_snprintf+6
  3745  002960  C109  F1ED         	movff	_temp_ntc+1,?_snprintf+7
  3746  002964  C10A  F1EE         	movff	_temp_ntc+2,?_snprintf+8
  3747  002968  C10B  F1EF         	movff	_temp_ntc+3,?_snprintf+9
  3748  00296C  ECC6  F02E         	call	_snprintf	;wreg free
  3749  002970                     
  3750                           ;main.c: 86:             lcd_draw_string(100,100,string_ntc,0xFFFF,0x0000);
  3751  002970  0E00               	movlw	0
  3752  002972  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3753  002974  0E64               	movlw	100
  3754  002976  6E22               	movwf	lcd_draw_string@x^0,c
  3755  002978  0E00               	movlw	0
  3756  00297A  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3757  00297C  0E64               	movlw	100
  3758  00297E  6E24               	movwf	lcd_draw_string@y^0,c
  3759  002980  0E00               	movlw	low _string_ntc
  3760  002982  6E26               	movwf	lcd_draw_string@pS^0,c
  3761  002984  0E02               	movlw	high _string_ntc
  3762  002986  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3763  002988  0EFF               	movlw	255
  3764  00298A  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3765  00298C  6828               	setf	lcd_draw_string@fg_color^0,c
  3766  00298E  0E00               	movlw	0
  3767  002990  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3768  002992  0E00               	movlw	0
  3769  002994  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3770  002996  ECB1  F025         	call	_lcd_draw_string	;wreg free
  3771  00299A                     
  3772                           ;main.c: 87:                 if (temp_ntc >= 35){
  3773  00299A  C108  F02A         	movff	_temp_ntc,___flge@ff1
  3774  00299E  C109  F02B         	movff	_temp_ntc+1,___flge@ff1+1
  3775  0029A2  C10A  F02C         	movff	_temp_ntc+2,___flge@ff1+2
  3776  0029A6  C10B  F02D         	movff	_temp_ntc+3,___flge@ff1+3
  3777  0029AA  0E00               	movlw	0
  3778  0029AC  6E2E               	movwf	___flge@ff2^0,c
  3779  0029AE  0E00               	movlw	0
  3780  0029B0  6E2F               	movwf	(___flge@ff2+1)^0,c
  3781  0029B2  0E0C               	movlw	12
  3782  0029B4  6E30               	movwf	(___flge@ff2+2)^0,c
  3783  0029B6  0E42               	movlw	66
  3784  0029B8  6E31               	movwf	(___flge@ff2+3)^0,c
  3785  0029BA  EC60  F027         	call	___flge	;wreg free
  3786  0029BE  A0D8               	btfss	status,0,c
  3787  0029C0  EFE4  F014         	goto	u12121
  3788  0029C4  EFE6  F014         	goto	u12120
  3789  0029C8                     u12121:
  3790  0029C8  EFE9  F014         	goto	l309
  3791  0029CC                     u12120:
  3792  0029CC  8C89               	bsf	137,6,c	;volatile
  3793  0029CE  EFF0  F012         	goto	l9128
  3794  0029D2                     l309:
  3795  0029D2  9C89               	bcf	137,6,c	;volatile
  3796  0029D4  EFF0  F012         	goto	l9128
  3797  0029D8  EF1F  F000         	goto	start
  3798  0029DC                     __end_of_main:
  3799                           	opt callstack 0
  3800                           
  3801 ;; *************** function _snprintf *****************
  3802 ;; Defined at:
  3803 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  s               2   10[BANK1 ] PTR unsigned char 
  3806 ;;		 -> string_ntc(100), string_pot(100), string_temp(100), 
  3807 ;;  n               2   12[BANK1 ] unsigned int 
  3808 ;;  fmt             2   14[BANK1 ] PTR const unsigned char 
  3809 ;;		 -> STR_4(22), STR_3(16), STR_2(17), 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  ap              2   22[BANK1 ] PTR void [1]
  3812 ;;		 -> ?_snprintf(2), 
  3813 ;;  ret             2    0        int 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  2   10[BANK1 ] int 
  3816 ;; Registers used:
  3817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3823 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3824 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3826 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3827 ;;Total ram usage:       14 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:   12
  3830 ;; This function calls:
  3831 ;;		_vsnprintf
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text1
  3838  005D8C                     __ptext1:
  3839                           	opt callstack 0
  3840  005D8C                     _snprintf:
  3841                           	opt callstack 18
  3842  005D8C  0EEC               	movlw	low (?_snprintf+6)
  3843  005D8E  0101               	movlb	1	; () banked
  3844  005D90  6FF2               	movwf	snprintf@ap& (0+255),b
  3845  005D92  0E01               	movlw	high (?_snprintf+6)
  3846  005D94  6FF3               	movwf	(snprintf@ap+1)& (0+255),b
  3847  005D96                     
  3848                           ; BSR set to: 1
  3849  005D96  C1E6  F0EE         	movff	snprintf@s,vsnprintf@s
  3850  005D9A  C1E7  F0EF         	movff	snprintf@s+1,vsnprintf@s+1
  3851  005D9E  C1E8  F0F0         	movff	snprintf@n,vsnprintf@n
  3852  005DA2  C1E9  F0F1         	movff	snprintf@n+1,vsnprintf@n+1
  3853  005DA6  C1EA  F0F2         	movff	snprintf@fmt,vsnprintf@fmt
  3854  005DAA  C1EB  F0F3         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3855  005DAE  0EF2               	movlw	low snprintf@ap
  3856  005DB0  0100               	movlb	0	; () banked
  3857  005DB2  6FF4               	movwf	vsnprintf@ap& (0+255),b
  3858  005DB4  0E01               	movlw	high snprintf@ap
  3859  005DB6  6FF5               	movwf	(vsnprintf@ap+1)& (0+255),b
  3860  005DB8  EC16  F025         	call	_vsnprintf	;wreg free
  3861  005DBC  0012               	return		;funcret
  3862  005DBE                     __end_of_snprintf:
  3863                           	opt callstack 0
  3864                           
  3865 ;; *************** function _vsnprintf *****************
  3866 ;; Defined at:
  3867 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  s               2  142[BANK0 ] PTR unsigned char 
  3870 ;;		 -> string_ntc(100), string_pot(100), string_temp(100), 
  3871 ;;  n               2  144[BANK0 ] unsigned int 
  3872 ;;  fmt             2  146[BANK0 ] PTR const unsigned char 
  3873 ;;		 -> STR_4(22), STR_3(16), STR_2(17), 
  3874 ;;  ap              2  148[BANK0 ] PTR PTR void 
  3875 ;;		 -> snprintf@ap(2), 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  f               6    4[BANK1 ] struct _IO_FILE
  3878 ;;  cnt             2    2[BANK1 ] int 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  2  142[BANK0 ] int 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3888 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3889 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Totals:         0      12      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;Total ram usage:       22 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:   11
  3895 ;; This function calls:
  3896 ;;		_vfprintf
  3897 ;; This function is called by:
  3898 ;;		_snprintf
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text2
  3903  004A2C                     __ptext2:
  3904                           	opt callstack 0
  3905  004A2C                     _vsnprintf:
  3906                           	opt callstack 18
  3907  004A2C  0E80               	movlw	128
  3908  004A2E  0100               	movlb	0	; () banked
  3909  004A30  5DF1               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3910  004A32  A0D8               	btfss	status,0,c
  3911  004A34  EF1E  F025         	goto	u12031
  3912  004A38  EF20  F025         	goto	u12030
  3913  004A3C                     u12031:
  3914  004A3C  EF2A  F025         	goto	l9086
  3915  004A40                     u12030:
  3916  004A40                     
  3917                           ; BSR set to: 0
  3918  004A40  0E00               	movlw	0
  3919  004A42  0101               	movlb	1	; () banked
  3920  004A44  6F19               	movwf	(_errno+1)& (0+255),b
  3921  004A46  0E4B               	movlw	75
  3922  004A48  6F18               	movwf	_errno& (0+255),b
  3923  004A4A                     
  3924                           ; BSR set to: 1
  3925  004A4A  0100               	movlb	0	; () banked
  3926  004A4C  69EE               	setf	?_vsnprintf& (0+255),b
  3927  004A4E  69EF               	setf	(?_vsnprintf+1)& (0+255),b
  3928  004A50  EFB0  F025         	goto	l1659
  3929  004A54                     l9086:
  3930                           
  3931                           ; BSR set to: 0
  3932  004A54  C0EE  F1E0         	movff	vsnprintf@s,vsnprintf@f
  3933  004A58  C0EF  F1E1         	movff	vsnprintf@s+1,vsnprintf@f+1
  3934  004A5C  51F1               	movf	(vsnprintf@n+1)& (0+255),w,b
  3935  004A5E  E109               	bnz	u12040
  3936  004A60  0E02               	movlw	2
  3937  004A62  5DF0               	subwf	vsnprintf@n& (0+255),w,b
  3938  004A64  A0D8               	btfss	status,0,c
  3939  004A66  EF37  F025         	goto	u12041
  3940  004A6A  EF39  F025         	goto	u12040
  3941  004A6E                     u12041:
  3942  004A6E  EF48  F025         	goto	l9092
  3943  004A72                     u12040:
  3944  004A72                     
  3945                           ; BSR set to: 0
  3946  004A72  0EFF               	movlw	255
  3947  004A74  25F0               	addwf	vsnprintf@n& (0+255),w,b
  3948  004A76  0101               	movlb	1	; () banked
  3949  004A78  6FE4               	movwf	(vsnprintf@f+4)& (0+255),b
  3950  004A7A  0EFF               	movlw	255
  3951  004A7C  0100               	movlb	0	; () banked
  3952  004A7E  21F1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3953  004A80  0101               	movlb	1	; () banked
  3954  004A82  6FE5               	movwf	(vsnprintf@f+5)& (0+255),b
  3955  004A84                     
  3956                           ; BSR set to: 1
  3957  004A84  0E00               	movlw	0
  3958  004A86  6FE3               	movwf	(vsnprintf@f+3)& (0+255),b
  3959  004A88  0E00               	movlw	0
  3960  004A8A  6FE2               	movwf	(vsnprintf@f+2)& (0+255),b
  3961  004A8C  EF51  F025         	goto	l9094
  3962  004A90                     l9092:
  3963                           
  3964                           ; BSR set to: 0
  3965  004A90  0E00               	movlw	0
  3966  004A92  0101               	movlb	1	; () banked
  3967  004A94  6FE5               	movwf	(vsnprintf@f+5)& (0+255),b
  3968  004A96  0E01               	movlw	1
  3969  004A98  6FE4               	movwf	(vsnprintf@f+4)& (0+255),b
  3970  004A9A  0E00               	movlw	0
  3971  004A9C  6FE3               	movwf	(vsnprintf@f+3)& (0+255),b
  3972  004A9E  0E01               	movlw	1
  3973  004AA0  6FE2               	movwf	(vsnprintf@f+2)& (0+255),b
  3974  004AA2                     l9094:
  3975                           
  3976                           ; BSR set to: 1
  3977  004AA2  0EE0               	movlw	low vsnprintf@f
  3978  004AA4  0100               	movlb	0	; () banked
  3979  004AA6  6FE6               	movwf	vfprintf@fp& (0+255),b
  3980  004AA8  0E01               	movlw	high vsnprintf@f
  3981  004AAA  6FE7               	movwf	(vfprintf@fp+1)& (0+255),b
  3982  004AAC  C0F2  F0E8         	movff	vsnprintf@fmt,vfprintf@fmt
  3983  004AB0  C0F3  F0E9         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3984  004AB4  C0F4  F0EA         	movff	vsnprintf@ap,vfprintf@ap
  3985  004AB8  C0F5  F0EB         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3986  004ABC  ECB1  F02B         	call	_vfprintf	;wreg free
  3987  004AC0  C0E6  F1DE         	movff	?_vfprintf,vsnprintf@cnt
  3988  004AC4  C0E7  F1DF         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3989  004AC8  0100               	movlb	0	; () banked
  3990  004ACA  51F0               	movf	vsnprintf@n& (0+255),w,b
  3991  004ACC  11F1               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3992  004ACE  B4D8               	btfsc	status,2,c
  3993  004AD0  EF6C  F025         	goto	u12051
  3994  004AD4  EF6E  F025         	goto	u12050
  3995  004AD8                     u12051:
  3996  004AD8  EFAC  F025         	goto	l9106
  3997  004ADC                     u12050:
  3998  004ADC                     
  3999                           ; BSR set to: 0
  4000  004ADC  0101               	movlb	1	; () banked
  4001  004ADE  BFDF               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4002  004AE0  EF74  F025         	goto	u12061
  4003  004AE4  EF76  F025         	goto	u12060
  4004  004AE8                     u12061:
  4005  004AE8  EFAC  F025         	goto	l9106
  4006  004AEC                     u12060:
  4007  004AEC                     
  4008                           ; BSR set to: 1
  4009  004AEC  0EFF               	movlw	255
  4010  004AEE  0100               	movlb	0	; () banked
  4011  004AF0  6FF6               	movwf	??_vsnprintf& (0+255),b
  4012  004AF2  0EFF               	movlw	255
  4013  004AF4  6FF7               	movwf	(??_vsnprintf+1)& (0+255),b
  4014  004AF6  C0F0  F0F8         	movff	vsnprintf@n,??_vsnprintf+2
  4015  004AFA  C0F1  F0F9         	movff	vsnprintf@n+1,??_vsnprintf+3
  4016  004AFE  51F6               	movf	??_vsnprintf& (0+255),w,b
  4017  004B00  27F8               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4018  004B02  51F7               	movf	(??_vsnprintf+1)& (0+255),w,b
  4019  004B04  23F9               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4020  004B06  51F8               	movf	(??_vsnprintf+2)& (0+255),w,b
  4021  004B08  0101               	movlb	1	; () banked
  4022  004B0A  5DDE               	subwf	vsnprintf@cnt& (0+255),w,b
  4023  004B0C  0100               	movlb	0	; () banked
  4024  004B0E  51F9               	movf	(??_vsnprintf+3)& (0+255),w,b
  4025  004B10  0101               	movlb	1	; () banked
  4026  004B12  59DF               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4027  004B14  A0D8               	btfss	status,0,c
  4028  004B16  EF8F  F025         	goto	u12071
  4029  004B1A  EF91  F025         	goto	u12070
  4030  004B1E                     u12071:
  4031  004B1E  EF9D  F025         	goto	l1664
  4032  004B22                     u12070:
  4033  004B22                     
  4034                           ; BSR set to: 1
  4035  004B22  0EFF               	movlw	255
  4036  004B24  0100               	movlb	0	; () banked
  4037  004B26  25F0               	addwf	vsnprintf@n& (0+255),w,b
  4038  004B28  0101               	movlb	1	; () banked
  4039  004B2A  6FDC               	movwf	_vsnprintf$2147& (0+255),b
  4040  004B2C  0EFF               	movlw	255
  4041  004B2E  0100               	movlb	0	; () banked
  4042  004B30  21F1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4043  004B32  0101               	movlb	1	; () banked
  4044  004B34  6FDD               	movwf	(_vsnprintf$2147+1)& (0+255),b
  4045  004B36  EFA1  F025         	goto	l9104
  4046  004B3A                     l1664:
  4047                           
  4048                           ; BSR set to: 1
  4049  004B3A  C1DE  F1DC         	movff	vsnprintf@cnt,_vsnprintf$2147
  4050  004B3E  C1DF  F1DD         	movff	vsnprintf@cnt+1,_vsnprintf$2147+1
  4051  004B42                     l9104:
  4052                           
  4053                           ; BSR set to: 1
  4054  004B42  51DC               	movf	_vsnprintf$2147& (0+255),w,b
  4055  004B44  0100               	movlb	0	; () banked
  4056  004B46  25EE               	addwf	vsnprintf@s& (0+255),w,b
  4057  004B48  6ED9               	movwf	fsr2l,c
  4058  004B4A  0101               	movlb	1	; () banked
  4059  004B4C  51DD               	movf	(_vsnprintf$2147+1)& (0+255),w,b
  4060  004B4E  0100               	movlb	0	; () banked
  4061  004B50  21EF               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4062  004B52  6EDA               	movwf	fsr2h,c
  4063  004B54  0E00               	movlw	0
  4064  004B56  6EDF               	movwf	indf2,c
  4065  004B58                     l9106:
  4066  004B58  C1DE  F0EE         	movff	vsnprintf@cnt,?_vsnprintf
  4067  004B5C  C1DF  F0EF         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4068  004B60                     l1659:
  4069  004B60  0012               	return		;funcret
  4070  004B62                     __end_of_vsnprintf:
  4071                           	opt callstack 0
  4072                           
  4073 ;; *************** function _vfprintf *****************
  4074 ;; Defined at:
  4075 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  fp              2  134[BANK0 ] PTR struct _IO_FILE
  4078 ;;		 -> vsnprintf@f(6), 
  4079 ;;  fmt             2  136[BANK0 ] PTR const unsigned char 
  4080 ;;		 -> STR_4(22), STR_3(16), STR_2(17), 
  4081 ;;  ap              2  138[BANK0 ] PTR PTR void 
  4082 ;;		 -> snprintf@ap(2), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  cfmt            2  140[BANK0 ] PTR unsigned char 
  4085 ;;		 -> STR_4(22), STR_3(16), STR_2(17), 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2  134[BANK0 ] int 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4095 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;Total ram usage:        8 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:   10
  4102 ;; This function calls:
  4103 ;;		_vfpfcnvrt
  4104 ;; This function is called by:
  4105 ;;		_vsnprintf
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text3
  4110  005762                     __ptext3:
  4111                           	opt callstack 0
  4112  005762                     _vfprintf:
  4113                           	opt callstack 18
  4114  005762                     
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4116  005762  C0E8  F0EC         	movff	vfprintf@fmt,vfprintf@cfmt
  4117  005766  C0E9  F0ED         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4118  00576A                     
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4120  00576A  0E00               	movlw	0
  4121  00576C  0101               	movlb	1	; () banked
  4122  00576E  6F1B               	movwf	(_nout+1)& (0+255),b
  4123  005770  0E00               	movlw	0
  4124  005772  6F1A               	movwf	_nout& (0+255),b
  4125                           
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4127  005774  EFD3  F02B         	goto	l9076
  4128  005778                     l9074:
  4129                           
  4130                           ; BSR set to: 1
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4132  005778  C0E6  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  4133  00577C  C0E7  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4134  005780  0EEC               	movlw	low vfprintf@cfmt
  4135  005782  0100               	movlb	0	; () banked
  4136  005784  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  4137  005786  0E00               	movlw	high vfprintf@cfmt
  4138  005788  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4139  00578A  C0EA  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  4140  00578E  C0EB  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4141  005792  EC21  F000         	call	_vfpfcnvrt	;wreg free
  4142  005796  0100               	movlb	0	; () banked
  4143  005798  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
  4144  00579A  0101               	movlb	1	; () banked
  4145  00579C  271A               	addwf	_nout& (0+255),f,b
  4146  00579E  0100               	movlb	0	; () banked
  4147  0057A0  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4148  0057A2  0101               	movlb	1	; () banked
  4149  0057A4  231B               	addwfc	(_nout+1)& (0+255),f,b
  4150  0057A6                     l9076:
  4151                           
  4152                           ; BSR set to: 1
  4153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4154  0057A6  C0EC  FFF6         	movff	vfprintf@cfmt,tblptrl
  4155  0057AA  C0ED  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4156  0057AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4157  0057AE  6AF8               	clrf	tblptru,c
  4158  0057B0                     	endif
  4159  0057B0                     	if	0	;tblptru may be non-zero
  4160  0057B0                     	endif
  4161  0057B0  0008               	tblrd		*
  4162  0057B2  50F5               	movf	tablat,w,c
  4163  0057B4  0900               	iorlw	0
  4164  0057B6  A4D8               	btfss	status,2,c
  4165  0057B8  EFE0  F02B         	goto	u12021
  4166  0057BC  EFE2  F02B         	goto	u12020
  4167  0057C0                     u12021:
  4168  0057C0  EFBC  F02B         	goto	l9074
  4169  0057C4                     u12020:
  4170  0057C4                     
  4171                           ; BSR set to: 1
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4173  0057C4  C11A  F0E6         	movff	_nout,?_vfprintf
  4174  0057C8  C11B  F0E7         	movff	_nout+1,?_vfprintf+1
  4175  0057CC                     
  4176                           ; BSR set to: 1
  4177  0057CC  0012               	return		;funcret
  4178  0057CE                     __end_of_vfprintf:
  4179                           	opt callstack 0
  4180                           
  4181 ;; *************** function _vfpfcnvrt *****************
  4182 ;; Defined at:
  4183 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  fp              2   88[BANK0 ] PTR struct _IO_FILE
  4186 ;;		 -> vsnprintf@f(6), 
  4187 ;;  fmt             2   90[BANK0 ] PTR PTR unsigned char 
  4188 ;;		 -> vfprintf@cfmt(2), 
  4189 ;;  ap              2   92[BANK0 ] PTR PTR void 
  4190 ;;		 -> snprintf@ap(2), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  llu             8  126[BANK0 ] unsigned long long 
  4193 ;;  ll              8  115[BANK0 ] long long 
  4194 ;;  f               4  108[BANK0 ] long long 
  4195 ;;  ct              3  112[BANK0 ] unsigned char [3]
  4196 ;;  vp              2  123[BANK0 ] PTR void 
  4197 ;;		 -> ?_snprintf(2), tensao_in(4), 
  4198 ;;  done            2  100[BANK0 ] int 
  4199 ;;  cp              2   98[BANK0 ] PTR unsigned char 
  4200 ;;		 -> ?_snprintf(2), tensao_in(4), 
  4201 ;;  i               2    0        int 
  4202 ;;  c               1  125[BANK0 ] unsigned char 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  2   88[BANK0 ] int 
  4205 ;; Registers used:
  4206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4212 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4216 ;;Total ram usage:       46 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    9
  4219 ;; This function calls:
  4220 ;;		_atoi
  4221 ;;		_ctoa
  4222 ;;		_dtoa
  4223 ;;		_efgtoa
  4224 ;;		_fputc
  4225 ;;		_isdigit
  4226 ;;		_isupper
  4227 ;;		_otoa
  4228 ;;		_stoa
  4229 ;;		_strncmp
  4230 ;;		_tolower
  4231 ;;		_utoa
  4232 ;;		_xtoa
  4233 ;; This function is called by:
  4234 ;;		_vfprintf
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text4
  4239  000042                     __ptext4:
  4240                           	opt callstack 0
  4241  000042                     _vfpfcnvrt:
  4242                           	opt callstack 18
  4243  000042                     
  4244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4245  000042  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4246  000046  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4247  00004A  CFDE FFF6          	movff	postinc2,tblptrl
  4248  00004E  CFDD FFF7          	movff	postdec2,tblptrh
  4249  000052                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4250  000052  6AF8               	clrf	tblptru,c
  4251  000054                     	endif
  4252  000054                     	if	0	;tblptru may be non-zero
  4253  000054                     	endif
  4254  000054  0008               	tblrd		*
  4255  000056  50F5               	movf	tablat,w,c
  4256  000058  0A25               	xorlw	37
  4257  00005A  A4D8               	btfss	status,2,c
  4258  00005C  EF32  F000         	goto	u11501
  4259  000060  EF34  F000         	goto	u11500
  4260  000064                     u11501:
  4261  000064  EF78  F00A         	goto	l9056
  4262  000068                     u11500:
  4263  000068                     
  4264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4265  000068  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4266  00006C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4267  000070  2ADE               	incf	postinc2,f,c
  4268  000072  0E00               	movlw	0
  4269  000074  22DD               	addwfc	postdec2,f,c
  4270  000076                     
  4271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4272  000076  0E00               	movlw	0
  4273  000078  0100               	movlb	0	; () banked
  4274  00007A  6FFB               	movwf	(_width+1)& (0+255),b
  4275  00007C  0E00               	movlw	0
  4276  00007E  6FFA               	movwf	_width& (0+255),b
  4277  000080  C0FA  F0FC         	movff	_width,_flags
  4278  000084  C0FB  F0FD         	movff	_width+1,_flags+1
  4279  000088                     
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4282  000088  685B               	setf	_prec^0,c
  4283  00008A  685C               	setf	(_prec+1)^0,c
  4284  00008C                     
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4287  00008C  0E00               	movlw	0
  4288  00008E  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4289  000090  0E00               	movlw	0
  4290  000092  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  4291                           
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4293  000094  EF93  F000         	goto	l8736
  4294  000098                     l8710:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4298  000098  81FC               	bsf	_flags& (0+255),0,b
  4299  00009A                     l8712:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4303  00009A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4304  00009E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4305  0000A2  2ADE               	incf	postinc2,f,c
  4306  0000A4  0E00               	movlw	0
  4307  0000A6  22DD               	addwfc	postdec2,f,c
  4308                           
  4309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4310  0000A8  EF93  F000         	goto	l8736
  4311  0000AC                     l8714:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4315  0000AC  83FC               	bsf	_flags& (0+255),1,b
  4316  0000AE  EF4D  F000         	goto	l8712
  4317  0000B2                     l8718:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4321  0000B2  85FC               	bsf	_flags& (0+255),2,b
  4322  0000B4  EF4D  F000         	goto	l8712
  4323  0000B8                     l8722:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4327  0000B8  87FC               	bsf	_flags& (0+255),3,b
  4328  0000BA  EF4D  F000         	goto	l8712
  4329  0000BE                     l8726:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4333  0000BE  89FC               	bsf	_flags& (0+255),4,b
  4334  0000C0  EF4D  F000         	goto	l8712
  4335  0000C4                     l8730:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4339  0000C4  0E00               	movlw	0
  4340  0000C6  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4341  0000C8  0E01               	movlw	1
  4342  0000CA  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  4343                           
  4344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4345  0000CC  EF93  F000         	goto	l8736
  4346  0000D0                     l8734:
  4347                           
  4348                           ; BSR set to: 0
  4349  0000D0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4350  0000D4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4351  0000D8  CFDE FFF6          	movff	postinc2,tblptrl
  4352  0000DC  CFDD FFF7          	movff	postdec2,tblptrh
  4353  0000E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4354  0000E0  6AF8               	clrf	tblptru,c
  4355  0000E2                     	endif
  4356  0000E2                     	if	0	;tblptru may be non-zero
  4357  0000E2                     	endif
  4358  0000E2  0008               	tblrd		*
  4359  0000E4  50F5               	movf	tablat,w,c
  4360  0000E6  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4361  0000E8  6BBF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4362                           
  4363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4364                           ; Switch size 1, requested type "simple"
  4365                           ; Number of cases is 1, Range of values is 0 to 0
  4366                           ; switch strategies available:
  4367                           ; Name         Instructions Cycles
  4368                           ; simple_byte            4     3 (average)
  4369                           ;	Chosen strategy is simple_byte
  4370  0000EA  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4371  0000EC  0A00               	xorlw	0	; case 0
  4372  0000EE  B4D8               	btfsc	status,2,c
  4373  0000F0  EF7C  F000         	goto	l9216
  4374  0000F4  EF62  F000         	goto	l8730
  4375  0000F8                     l9216:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ; Switch size 1, requested type "simple"
  4379                           ; Number of cases is 5, Range of values is 32 to 48
  4380                           ; switch strategies available:
  4381                           ; Name         Instructions Cycles
  4382                           ; simple_byte           16     9 (average)
  4383                           ;	Chosen strategy is simple_byte
  4384  0000F8  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4385  0000FA  0A20               	xorlw	32	; case 32
  4386  0000FC  B4D8               	btfsc	status,2,c
  4387  0000FE  EF5C  F000         	goto	l8722
  4388  000102  0A03               	xorlw	3	; case 35
  4389  000104  B4D8               	btfsc	status,2,c
  4390  000106  EF5F  F000         	goto	l8726
  4391  00010A  0A08               	xorlw	8	; case 43
  4392  00010C  B4D8               	btfsc	status,2,c
  4393  00010E  EF59  F000         	goto	l8718
  4394  000112  0A06               	xorlw	6	; case 45
  4395  000114  B4D8               	btfsc	status,2,c
  4396  000116  EF4C  F000         	goto	l8710
  4397  00011A  0A1D               	xorlw	29	; case 48
  4398  00011C  B4D8               	btfsc	status,2,c
  4399  00011E  EF56  F000         	goto	l8714
  4400  000122  EF62  F000         	goto	l8730
  4401  000126                     l8736:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4405  000126  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  4406  000128  11C5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4407  00012A  B4D8               	btfsc	status,2,c
  4408  00012C  EF9A  F000         	goto	u11511
  4409  000130  EF9C  F000         	goto	u11510
  4410  000134                     u11511:
  4411  000134  EF68  F000         	goto	l8734
  4412  000138                     u11510:
  4413  000138                     
  4414                           ; BSR set to: 0
  4415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4416  000138  A1FC               	btfss	_flags& (0+255),0,b
  4417  00013A  EFA1  F000         	goto	u11521
  4418  00013E  EFA3  F000         	goto	u11520
  4419  000142                     u11521:
  4420  000142  EFA4  F000         	goto	l8740
  4421  000146                     u11520:
  4422  000146                     
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4425  000146  93FC               	bcf	_flags& (0+255),1,b
  4426  000148                     l8740:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4430  000148  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4431  00014C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4432  000150  CFDE FFF6          	movff	postinc2,tblptrl
  4433  000154  CFDD FFF7          	movff	postdec2,tblptrh
  4434  000158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4435  000158  6AF8               	clrf	tblptru,c
  4436  00015A                     	endif
  4437  00015A                     	if	0	;tblptru may be non-zero
  4438  00015A                     	endif
  4439  00015A  0008               	tblrd		*
  4440  00015C  50F5               	movf	tablat,w,c
  4441  00015E  0A2A               	xorlw	42
  4442  000160  A4D8               	btfss	status,2,c
  4443  000162  EFB5  F000         	goto	u11531
  4444  000166  EFB7  F000         	goto	u11530
  4445  00016A                     u11531:
  4446  00016A  EFE0  F000         	goto	l8748
  4447  00016E                     u11530:
  4448  00016E                     
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4451  00016E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4452  000172  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4453  000176  2ADE               	incf	postinc2,f,c
  4454  000178  0E00               	movlw	0
  4455  00017A  22DD               	addwfc	postdec2,f,c
  4456                           
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4458  00017C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4459  000180  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4460  000184  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4461  000188  0E02               	movlw	2
  4462  00018A  26DE               	addwf	postinc2,f,c
  4463  00018C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4464  000190  0E00               	movlw	0
  4465  000192  22DD               	addwfc	postdec2,f,c
  4466  000194  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4467  000198  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4468  00019C  CFDE F0FA          	movff	postinc2,_width
  4469  0001A0  CFDD F0FB          	movff	postdec2,_width+1
  4470  0001A4                     
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4473  0001A4  BFFB               	btfsc	(_width+1)& (0+255),7,b
  4474  0001A6  EFD9  F000         	goto	u11540
  4475  0001AA  EFD7  F000         	goto	u11541
  4476  0001AE                     u11541:
  4477  0001AE  EF25  F001         	goto	l8758
  4478  0001B2                     u11540:
  4479  0001B2                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4482  0001B2  81FC               	bsf	_flags& (0+255),0,b
  4483                           
  4484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4485  0001B4  6DFA               	negf	_width& (0+255),b
  4486  0001B6  1FFB               	comf	(_width+1)& (0+255),f,b
  4487  0001B8  B0D8               	btfsc	status,0,c
  4488  0001BA  2BFB               	incf	(_width+1)& (0+255),f,b
  4489  0001BC  EF25  F001         	goto	l8758
  4490  0001C0                     l8748:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4494  0001C0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4495  0001C4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4496  0001C8  CFDE F00A          	movff	postinc2,atoi@s
  4497  0001CC  CFDD F00B          	movff	postdec2,atoi@s+1
  4498  0001D0  EC53  F021         	call	_atoi	;wreg free
  4499  0001D4  C00A  F0FA         	movff	?_atoi,_width
  4500  0001D8  C00B  F0FB         	movff	?_atoi+1,_width+1
  4501                           
  4502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4503  0001DC  EFF7  F000         	goto	l8752
  4504  0001E0                     l8750:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4508  0001E0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4509  0001E4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4510  0001E8  2ADE               	incf	postinc2,f,c
  4511  0001EA  0E00               	movlw	0
  4512  0001EC  22DD               	addwfc	postdec2,f,c
  4513  0001EE                     l8752:
  4514  0001EE  0ED0               	movlw	208
  4515  0001F0  0100               	movlb	0	; () banked
  4516  0001F2  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4517  0001F4  0EFF               	movlw	255
  4518  0001F6  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4519  0001F8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4520  0001FC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4521  000200  CFDE FFF6          	movff	postinc2,tblptrl
  4522  000204  CFDD FFF7          	movff	postdec2,tblptrh
  4523  000208                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4524  000208  6AF8               	clrf	tblptru,c
  4525  00020A                     	endif
  4526  00020A                     	if	0	;tblptru may be non-zero
  4527  00020A                     	endif
  4528  00020A  0008               	tblrd		*
  4529  00020C  50F5               	movf	tablat,w,c
  4530  00020E  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4531  000210  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4532  000212  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4533  000214  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4534  000216  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4535  000218  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4536  00021A  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4537  00021C  E10A               	bnz	u11550
  4538  00021E  0E0A               	movlw	10
  4539  000220  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4540  000222  A0D8               	btfss	status,0,c
  4541  000224  EF16  F001         	goto	u11551
  4542  000228  EF19  F001         	goto	u11550
  4543  00022C                     u11551:
  4544  00022C  0E01               	movlw	1
  4545  00022E  EF1A  F001         	goto	u11560
  4546  000232                     u11550:
  4547  000232  0E00               	movlw	0
  4548  000234                     u11560:
  4549  000234  6FC6               	movwf	_vfpfcnvrt$1394& (0+255),b
  4550  000236  6BC7               	clrf	(_vfpfcnvrt$1394+1)& (0+255),b
  4551  000238                     
  4552                           ; BSR set to: 0
  4553  000238  51C6               	movf	_vfpfcnvrt$1394& (0+255),w,b
  4554  00023A  11C7               	iorwf	(_vfpfcnvrt$1394+1)& (0+255),w,b
  4555  00023C  A4D8               	btfss	status,2,c
  4556  00023E  EF23  F001         	goto	u11571
  4557  000242  EF25  F001         	goto	u11570
  4558  000246                     u11571:
  4559  000246  EFF0  F000         	goto	l8750
  4560  00024A                     u11570:
  4561  00024A                     l8758:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4565  00024A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4566  00024E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4567  000252  CFDE FFF6          	movff	postinc2,tblptrl
  4568  000256  CFDD FFF7          	movff	postdec2,tblptrh
  4569  00025A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4570  00025A  6AF8               	clrf	tblptru,c
  4571  00025C                     	endif
  4572  00025C                     	if	0	;tblptru may be non-zero
  4573  00025C                     	endif
  4574  00025C  0008               	tblrd		*
  4575  00025E  50F5               	movf	tablat,w,c
  4576  000260  0A2E               	xorlw	46
  4577  000262  A4D8               	btfss	status,2,c
  4578  000264  EF36  F001         	goto	u11581
  4579  000268  EF38  F001         	goto	u11580
  4580  00026C                     u11581:
  4581  00026C  EFB8  F001         	goto	l8778
  4582  000270                     u11580:
  4583  000270                     
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4586  000270  0E00               	movlw	0
  4587  000272  6E5C               	movwf	(_prec+1)^0,c
  4588  000274  0E00               	movlw	0
  4589  000276  6E5B               	movwf	_prec^0,c
  4590  000278                     
  4591                           ; BSR set to: 0
  4592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4593  000278  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4594  00027C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4595  000280  2ADE               	incf	postinc2,f,c
  4596  000282  0E00               	movlw	0
  4597  000284  22DD               	addwfc	postdec2,f,c
  4598  000286                     
  4599                           ; BSR set to: 0
  4600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4601  000286  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4602  00028A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4603  00028E  CFDE FFF6          	movff	postinc2,tblptrl
  4604  000292  CFDD FFF7          	movff	postdec2,tblptrh
  4605  000296                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4606  000296  6AF8               	clrf	tblptru,c
  4607  000298                     	endif
  4608  000298                     	if	0	;tblptru may be non-zero
  4609  000298                     	endif
  4610  000298  0008               	tblrd		*
  4611  00029A  50F5               	movf	tablat,w,c
  4612  00029C  0A2A               	xorlw	42
  4613  00029E  A4D8               	btfss	status,2,c
  4614  0002A0  EF54  F001         	goto	u11591
  4615  0002A4  EF56  F001         	goto	u11590
  4616  0002A8                     u11591:
  4617  0002A8  EF73  F001         	goto	l8768
  4618  0002AC                     u11590:
  4619  0002AC                     
  4620                           ; BSR set to: 0
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4622  0002AC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4623  0002B0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4624  0002B4  2ADE               	incf	postinc2,f,c
  4625  0002B6  0E00               	movlw	0
  4626  0002B8  22DD               	addwfc	postdec2,f,c
  4627                           
  4628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4629  0002BA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4630  0002BE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4631  0002C2  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4632  0002C6  0E02               	movlw	2
  4633  0002C8  26DE               	addwf	postinc2,f,c
  4634  0002CA  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4635  0002CE  0E00               	movlw	0
  4636  0002D0  22DD               	addwfc	postdec2,f,c
  4637  0002D2  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4638  0002D6  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4639  0002DA  CFDE F05B          	movff	postinc2,_prec
  4640  0002DE  CFDD F05C          	movff	postdec2,_prec+1
  4641                           
  4642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4643  0002E2  EFB8  F001         	goto	l8778
  4644  0002E6                     l8768:
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4648  0002E6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4649  0002EA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4650  0002EE  CFDE F00A          	movff	postinc2,atoi@s
  4651  0002F2  CFDD F00B          	movff	postdec2,atoi@s+1
  4652  0002F6  EC53  F021         	call	_atoi	;wreg free
  4653  0002FA  C00A  F05B         	movff	?_atoi,_prec
  4654  0002FE  C00B  F05C         	movff	?_atoi+1,_prec+1
  4655                           
  4656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4657  000302  EF8A  F001         	goto	l8772
  4658  000306                     l8770:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4662  000306  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4663  00030A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4664  00030E  2ADE               	incf	postinc2,f,c
  4665  000310  0E00               	movlw	0
  4666  000312  22DD               	addwfc	postdec2,f,c
  4667  000314                     l8772:
  4668  000314  0ED0               	movlw	208
  4669  000316  0100               	movlb	0	; () banked
  4670  000318  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4671  00031A  0EFF               	movlw	255
  4672  00031C  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4673  00031E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4674  000322  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4675  000326  CFDE FFF6          	movff	postinc2,tblptrl
  4676  00032A  CFDD FFF7          	movff	postdec2,tblptrh
  4677  00032E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4678  00032E  6AF8               	clrf	tblptru,c
  4679  000330                     	endif
  4680  000330                     	if	0	;tblptru may be non-zero
  4681  000330                     	endif
  4682  000330  0008               	tblrd		*
  4683  000332  50F5               	movf	tablat,w,c
  4684  000334  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4685  000336  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4686  000338  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4687  00033A  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4688  00033C  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4689  00033E  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4690  000340  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4691  000342  E10A               	bnz	u11600
  4692  000344  0E0A               	movlw	10
  4693  000346  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4694  000348  A0D8               	btfss	status,0,c
  4695  00034A  EFA9  F001         	goto	u11601
  4696  00034E  EFAC  F001         	goto	u11600
  4697  000352                     u11601:
  4698  000352  0E01               	movlw	1
  4699  000354  EFAD  F001         	goto	u11610
  4700  000358                     u11600:
  4701  000358  0E00               	movlw	0
  4702  00035A                     u11610:
  4703  00035A  6FC8               	movwf	_vfpfcnvrt$1395& (0+255),b
  4704  00035C  6BC9               	clrf	(_vfpfcnvrt$1395+1)& (0+255),b
  4705  00035E                     
  4706                           ; BSR set to: 0
  4707  00035E  51C8               	movf	_vfpfcnvrt$1395& (0+255),w,b
  4708  000360  11C9               	iorwf	(_vfpfcnvrt$1395+1)& (0+255),w,b
  4709  000362  A4D8               	btfss	status,2,c
  4710  000364  EFB6  F001         	goto	u11621
  4711  000368  EFB8  F001         	goto	u11620
  4712  00036C                     u11621:
  4713  00036C  EF83  F001         	goto	l8770
  4714  000370                     u11620:
  4715  000370                     l8778:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4719  000370  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4720  000374  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4721  000378  CFDE FFF6          	movff	postinc2,tblptrl
  4722  00037C  CFDD FFF7          	movff	postdec2,tblptrh
  4723  000380                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4724  000380  6AF8               	clrf	tblptru,c
  4725  000382                     	endif
  4726  000382                     	if	0	;tblptru may be non-zero
  4727  000382                     	endif
  4728  000382  0008               	tblrd		*
  4729  000384  50F5               	movf	tablat,w,c
  4730  000386  6E09               	movwf	tolower@c^0,c
  4731  000388  6A0A               	clrf	(tolower@c+1)^0,c
  4732  00038A  ECE7  F02B         	call	_tolower	;wreg free
  4733  00038E  5009               	movf	?_tolower^0,w,c
  4734  000390  0100               	movlb	0	; () banked
  4735  000392  6FD0               	movwf	vfpfcnvrt@ct& (0+255),b
  4736  000394                     
  4737                           ; BSR set to: 0
  4738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4739  000394  51D0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4740  000396  B4D8               	btfsc	status,2,c
  4741  000398  EFD0  F001         	goto	u11631
  4742  00039C  EFD2  F001         	goto	u11630
  4743  0003A0                     u11631:
  4744  0003A0  EF0E  F002         	goto	l8788
  4745  0003A4                     u11630:
  4746  0003A4                     
  4747                           ; BSR set to: 0
  4748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4749  0003A4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4750  0003A8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4751  0003AC  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  4752  0003B0  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  4753  0003B4  0E01               	movlw	1
  4754  0003B6  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4755  0003B8  0E00               	movlw	0
  4756  0003BA  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4757  0003BC  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4758  0003C0  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4759  0003C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4760  0003C4  6AF8               	clrf	tblptru,c
  4761  0003C6                     	endif
  4762  0003C6                     	if	0	;tblptru may be non-zero
  4763  0003C6                     	endif
  4764  0003C6  0008               	tblrd		*
  4765  0003C8  50F5               	movf	tablat,w,c
  4766  0003CA  6E09               	movwf	tolower@c^0,c
  4767  0003CC  6A0A               	clrf	(tolower@c+1)^0,c
  4768  0003CE  ECE7  F02B         	call	_tolower	;wreg free
  4769  0003D2  5009               	movf	?_tolower^0,w,c
  4770  0003D4  0100               	movlb	0	; () banked
  4771  0003D6  6FD1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4772  0003D8                     
  4773                           ; BSR set to: 0
  4774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4775  0003D8  51D1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4776  0003DA  B4D8               	btfsc	status,2,c
  4777  0003DC  EFF2  F001         	goto	u11641
  4778  0003E0  EFF4  F001         	goto	u11640
  4779  0003E4                     u11641:
  4780  0003E4  EF0E  F002         	goto	l8788
  4781  0003E8                     u11640:
  4782  0003E8                     
  4783                           ; BSR set to: 0
  4784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4785  0003E8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4786  0003EC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4787  0003F0  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  4788  0003F4  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  4789  0003F8  0E02               	movlw	2
  4790  0003FA  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4791  0003FC  0E00               	movlw	0
  4792  0003FE  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4793  000400  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4794  000404  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4795  000408                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4796  000408  6AF8               	clrf	tblptru,c
  4797  00040A                     	endif
  4798  00040A                     	if	0	;tblptru may be non-zero
  4799  00040A                     	endif
  4800  00040A  0008               	tblrd		*
  4801  00040C  50F5               	movf	tablat,w,c
  4802  00040E  6E09               	movwf	tolower@c^0,c
  4803  000410  6A0A               	clrf	(tolower@c+1)^0,c
  4804  000412  ECE7  F02B         	call	_tolower	;wreg free
  4805  000416  5009               	movf	?_tolower^0,w,c
  4806  000418  0100               	movlb	0	; () banked
  4807  00041A  6FD2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4808  00041C                     l8788:
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4812  00041C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4813  000420  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4814  000424  CFDE FFF6          	movff	postinc2,tblptrl
  4815  000428  CFDD FFF7          	movff	postdec2,tblptrh
  4816  00042C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4817  00042C  6AF8               	clrf	tblptru,c
  4818  00042E                     	endif
  4819  00042E                     	if	0	;tblptru may be non-zero
  4820  00042E                     	endif
  4821  00042E  0008               	tblrd		*
  4822  000430  50F5               	movf	tablat,w,c
  4823  000432  0A63               	xorlw	99
  4824  000434  A4D8               	btfss	status,2,c
  4825  000436  EF1F  F002         	goto	u11651
  4826  00043A  EF21  F002         	goto	u11650
  4827  00043E                     u11651:
  4828  00043E  EF48  F002         	goto	l8796
  4829  000442                     u11650:
  4830  000442                     
  4831                           ; BSR set to: 0
  4832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4833  000442  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4834  000446  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4835  00044A  2ADE               	incf	postinc2,f,c
  4836  00044C  0E00               	movlw	0
  4837  00044E  22DD               	addwfc	postdec2,f,c
  4838                           
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4840  000450  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4841  000454  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4842  000458  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4843  00045C  0E02               	movlw	2
  4844  00045E  26DE               	addwf	postinc2,f,c
  4845  000460  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4846  000464  0E00               	movlw	0
  4847  000466  22DD               	addwfc	postdec2,f,c
  4848  000468  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4849  00046C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4850  000470  50DF               	movf	indf2,w,c
  4851  000472  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  4852  000474                     
  4853                           ; BSR set to: 0
  4854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4855  000474  C0B8  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  4856  000478  C0B9  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4857  00047C  C0DD  F020         	movff	vfpfcnvrt@c,ctoa@c
  4858  000480  EC75  F02C         	call	_ctoa	;wreg free
  4859  000484  C01E  F0B8         	movff	?_ctoa,?_vfpfcnvrt
  4860  000488  C01F  F0B9         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4861  00048C  EF94  F00A         	goto	l753
  4862  000490                     l8796:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4866  000490  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4867  000494  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4868  000498  CFDE F003          	movff	postinc2,strncmp@_l
  4869  00049C  CFDD F004          	movff	postdec2,strncmp@_l+1
  4870  0004A0  0EC6               	movlw	low STR_13
  4871  0004A2  6E05               	movwf	strncmp@_r^0,c
  4872  0004A4  0EFF               	movlw	high STR_13
  4873  0004A6  6E06               	movwf	(strncmp@_r+1)^0,c
  4874  0004A8  0E00               	movlw	0
  4875  0004AA  6E08               	movwf	(strncmp@n+1)^0,c
  4876  0004AC  0E03               	movlw	3
  4877  0004AE  6E07               	movwf	strncmp@n^0,c
  4878  0004B0  EC4A  F026         	call	_strncmp	;wreg free
  4879  0004B4  5003               	movf	?_strncmp^0,w,c
  4880  0004B6  1004               	iorwf	(?_strncmp+1)^0,w,c
  4881  0004B8  B4D8               	btfsc	status,2,c
  4882  0004BA  EF61  F002         	goto	u11661
  4883  0004BE  EF63  F002         	goto	u11660
  4884  0004C2                     u11661:
  4885  0004C2  EF7E  F002         	goto	l8800
  4886  0004C6                     u11660:
  4887  0004C6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4888  0004CA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4889  0004CE  CFDE F003          	movff	postinc2,strncmp@_l
  4890  0004D2  CFDD F004          	movff	postdec2,strncmp@_l+1
  4891  0004D6  0ECE               	movlw	low STR_17
  4892  0004D8  6E05               	movwf	strncmp@_r^0,c
  4893  0004DA  0EFF               	movlw	high STR_17
  4894  0004DC  6E06               	movwf	(strncmp@_r+1)^0,c
  4895  0004DE  0E00               	movlw	0
  4896  0004E0  6E08               	movwf	(strncmp@n+1)^0,c
  4897  0004E2  0E03               	movlw	3
  4898  0004E4  6E07               	movwf	strncmp@n^0,c
  4899  0004E6  EC4A  F026         	call	_strncmp	;wreg free
  4900  0004EA  5003               	movf	?_strncmp^0,w,c
  4901  0004EC  1004               	iorwf	(?_strncmp+1)^0,w,c
  4902  0004EE  A4D8               	btfss	status,2,c
  4903  0004F0  EF7C  F002         	goto	u11671
  4904  0004F4  EF7E  F002         	goto	u11670
  4905  0004F8                     u11671:
  4906  0004F8  EFBF  F002         	goto	l8806
  4907  0004FC                     u11670:
  4908  0004FC                     l8800:
  4909                           
  4910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4911  0004FC  0E03               	movlw	3
  4912  0004FE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4913  000502  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4914  000506  26DE               	addwf	postinc2,f,c
  4915  000508  0E00               	movlw	0
  4916  00050A  22DD               	addwfc	postdec2,f,c
  4917                           
  4918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4919  00050C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4920  000510  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4921  000514  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4922  000518  0E02               	movlw	2
  4923  00051A  26DE               	addwf	postinc2,f,c
  4924  00051C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4925  000520  0E00               	movlw	0
  4926  000522  22DD               	addwfc	postdec2,f,c
  4927  000524  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4928  000528  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4929  00052C  50DF               	movf	indf2,w,c
  4930  00052E  0100               	movlb	0	; () banked
  4931  000530  6FD3               	movwf	vfpfcnvrt@ll& (0+255),b
  4932  000532  0E00               	movlw	0
  4933  000534  BFD3               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4934  000536  0EFF               	movlw	-1
  4935  000538  6FD4               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4936  00053A  6FD5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4937  00053C  6FD6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4938  00053E  6FD7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4939  000540  6FD8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4940  000542  6FD9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4941  000544  6FDA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4942  000546                     l8802:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4946  000546  C0B8  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4947  00054A  C0B9  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4948  00054E  C0D3  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4949  000552  C0D4  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4950  000556  C0D5  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4951  00055A  C0D6  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4952  00055E  C0D7  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4953  000562  C0D8  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4954  000566  C0D9  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4955  00056A  C0DA  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4956  00056E  EC93  F01A         	call	_dtoa	;wreg free
  4957  000572  C01E  F0B8         	movff	?_dtoa,?_vfpfcnvrt
  4958  000576  C01F  F0B9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4959  00057A  EF94  F00A         	goto	l753
  4960  00057E                     l8806:
  4961                           
  4962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4963  00057E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4964  000582  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4965  000586  CFDE F003          	movff	postinc2,strncmp@_l
  4966  00058A  CFDD F004          	movff	postdec2,strncmp@_l+1
  4967  00058E  0EC7               	movlw	low (STR_13+1)
  4968  000590  6E05               	movwf	strncmp@_r^0,c
  4969  000592  0EFF               	movlw	high (STR_13+1)
  4970  000594  6E06               	movwf	(strncmp@_r+1)^0,c
  4971  000596  0E00               	movlw	0
  4972  000598  6E08               	movwf	(strncmp@n+1)^0,c
  4973  00059A  0E02               	movlw	2
  4974  00059C  6E07               	movwf	strncmp@n^0,c
  4975  00059E  EC4A  F026         	call	_strncmp	;wreg free
  4976  0005A2  5003               	movf	?_strncmp^0,w,c
  4977  0005A4  1004               	iorwf	(?_strncmp+1)^0,w,c
  4978  0005A6  B4D8               	btfsc	status,2,c
  4979  0005A8  EFD8  F002         	goto	u11681
  4980  0005AC  EFDA  F002         	goto	u11680
  4981  0005B0                     u11681:
  4982  0005B0  EFF5  F002         	goto	l8810
  4983  0005B4                     u11680:
  4984  0005B4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4985  0005B8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4986  0005BC  CFDE F003          	movff	postinc2,strncmp@_l
  4987  0005C0  CFDD F004          	movff	postdec2,strncmp@_l+1
  4988  0005C4  0ECF               	movlw	low (STR_17+1)
  4989  0005C6  6E05               	movwf	strncmp@_r^0,c
  4990  0005C8  0EFF               	movlw	high (STR_17+1)
  4991  0005CA  6E06               	movwf	(strncmp@_r+1)^0,c
  4992  0005CC  0E00               	movlw	0
  4993  0005CE  6E08               	movwf	(strncmp@n+1)^0,c
  4994  0005D0  0E02               	movlw	2
  4995  0005D2  6E07               	movwf	strncmp@n^0,c
  4996  0005D4  EC4A  F026         	call	_strncmp	;wreg free
  4997  0005D8  5003               	movf	?_strncmp^0,w,c
  4998  0005DA  1004               	iorwf	(?_strncmp+1)^0,w,c
  4999  0005DC  A4D8               	btfss	status,2,c
  5000  0005DE  EFF3  F002         	goto	u11691
  5001  0005E2  EFF5  F002         	goto	u11690
  5002  0005E6                     u11691:
  5003  0005E6  EF1D  F003         	goto	l8816
  5004  0005EA                     u11690:
  5005  0005EA                     l8810:
  5006                           
  5007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  5008  0005EA  0E02               	movlw	2
  5009  0005EC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5010  0005F0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5011  0005F4  26DE               	addwf	postinc2,f,c
  5012  0005F6  0E00               	movlw	0
  5013  0005F8  22DD               	addwfc	postdec2,f,c
  5014                           
  5015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5016  0005FA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5017  0005FE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5018  000602  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5019  000606  0E02               	movlw	2
  5020  000608  26DE               	addwf	postinc2,f,c
  5021  00060A  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5022  00060E  0E00               	movlw	0
  5023  000610  22DD               	addwfc	postdec2,f,c
  5024  000612  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5025  000616  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5026  00061A  CFDE F0D3          	movff	postinc2,vfpfcnvrt@ll
  5027  00061E  CFDD F0D4          	movff	postdec2,vfpfcnvrt@ll+1
  5028  000622  0100               	movlb	0	; () banked
  5029  000624  0E00               	movlw	0
  5030  000626  BFD4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5031  000628  0EFF               	movlw	-1
  5032  00062A  6FD5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5033  00062C  6FD6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5034  00062E  6FD7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5035  000630  6FD8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5036  000632  6FD9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5037  000634  6FDA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5038  000636  EFA3  F002         	goto	l8802
  5039  00063A                     l8816:
  5040                           
  5041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5042  00063A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5043  00063E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5044  000642  CFDE FFF6          	movff	postinc2,tblptrl
  5045  000646  CFDD FFF7          	movff	postdec2,tblptrh
  5046  00064A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5047  00064A  6AF8               	clrf	tblptru,c
  5048  00064C                     	endif
  5049  00064C                     	if	0	;tblptru may be non-zero
  5050  00064C                     	endif
  5051  00064C  0008               	tblrd		*
  5052  00064E  50F5               	movf	tablat,w,c
  5053  000650  0A64               	xorlw	100
  5054  000652  B4D8               	btfsc	status,2,c
  5055  000654  EF2E  F003         	goto	u11701
  5056  000658  EF30  F003         	goto	u11700
  5057  00065C                     u11701:
  5058  00065C  EF43  F003         	goto	l8820
  5059  000660                     u11700:
  5060  000660  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5061  000664  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5062  000668  CFDE FFF6          	movff	postinc2,tblptrl
  5063  00066C  CFDD FFF7          	movff	postdec2,tblptrh
  5064  000670                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5065  000670  6AF8               	clrf	tblptru,c
  5066  000672                     	endif
  5067  000672                     	if	0	;tblptru may be non-zero
  5068  000672                     	endif
  5069  000672  0008               	tblrd		*
  5070  000674  50F5               	movf	tablat,w,c
  5071  000676  0A69               	xorlw	105
  5072  000678  A4D8               	btfss	status,2,c
  5073  00067A  EF41  F003         	goto	u11711
  5074  00067E  EF43  F003         	goto	u11710
  5075  000682                     u11711:
  5076  000682  EF6A  F003         	goto	l8826
  5077  000686                     u11710:
  5078  000686                     l8820:
  5079                           
  5080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5081  000686  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5082  00068A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5083  00068E  2ADE               	incf	postinc2,f,c
  5084  000690  0E00               	movlw	0
  5085  000692  22DD               	addwfc	postdec2,f,c
  5086                           
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5088  000694  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5089  000698  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5090  00069C  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5091  0006A0  0E02               	movlw	2
  5092  0006A2  26DE               	addwf	postinc2,f,c
  5093  0006A4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5094  0006A8  0E00               	movlw	0
  5095  0006AA  22DD               	addwfc	postdec2,f,c
  5096  0006AC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5097  0006B0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5098  0006B4  CFDE F0D3          	movff	postinc2,vfpfcnvrt@ll
  5099  0006B8  CFDD F0D4          	movff	postdec2,vfpfcnvrt@ll+1
  5100  0006BC  0100               	movlb	0	; () banked
  5101  0006BE  0E00               	movlw	0
  5102  0006C0  BFD4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5103  0006C2  0EFF               	movlw	-1
  5104  0006C4  6FD5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5105  0006C6  6FD6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5106  0006C8  6FD7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5107  0006CA  6FD8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5108  0006CC  6FD9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5109  0006CE  6FDA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5110  0006D0  EFA3  F002         	goto	l8802
  5111  0006D4                     l8826:
  5112                           
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5114  0006D4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5115  0006D8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5116  0006DC  CFDE F003          	movff	postinc2,strncmp@_l
  5117  0006E0  CFDD F004          	movff	postdec2,strncmp@_l+1
  5118  0006E4  0EE9               	movlw	low STR_31
  5119  0006E6  6E05               	movwf	strncmp@_r^0,c
  5120  0006E8  0EFF               	movlw	high STR_31
  5121  0006EA  6E06               	movwf	(strncmp@_r+1)^0,c
  5122  0006EC  0E00               	movlw	0
  5123  0006EE  6E08               	movwf	(strncmp@n+1)^0,c
  5124  0006F0  0E02               	movlw	2
  5125  0006F2  6E07               	movwf	strncmp@n^0,c
  5126  0006F4  EC4A  F026         	call	_strncmp	;wreg free
  5127  0006F8  5003               	movf	?_strncmp^0,w,c
  5128  0006FA  1004               	iorwf	(?_strncmp+1)^0,w,c
  5129  0006FC  B4D8               	btfsc	status,2,c
  5130  0006FE  EF83  F003         	goto	u11721
  5131  000702  EF85  F003         	goto	u11720
  5132  000706                     u11721:
  5133  000706  EFA0  F003         	goto	l8830
  5134  00070A                     u11720:
  5135  00070A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5136  00070E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5137  000712  CFDE F003          	movff	postinc2,strncmp@_l
  5138  000716  CFDD F004          	movff	postdec2,strncmp@_l+1
  5139  00071A  0EEF               	movlw	low STR_35
  5140  00071C  6E05               	movwf	strncmp@_r^0,c
  5141  00071E  0EFF               	movlw	high STR_35
  5142  000720  6E06               	movwf	(strncmp@_r+1)^0,c
  5143  000722  0E00               	movlw	0
  5144  000724  6E08               	movwf	(strncmp@n+1)^0,c
  5145  000726  0E02               	movlw	2
  5146  000728  6E07               	movwf	strncmp@n^0,c
  5147  00072A  EC4A  F026         	call	_strncmp	;wreg free
  5148  00072E  5003               	movf	?_strncmp^0,w,c
  5149  000730  1004               	iorwf	(?_strncmp+1)^0,w,c
  5150  000732  A4D8               	btfss	status,2,c
  5151  000734  EF9E  F003         	goto	u11731
  5152  000738  EFA0  F003         	goto	u11730
  5153  00073C                     u11731:
  5154  00073C  EFC9  F003         	goto	l8836
  5155  000740                     u11730:
  5156  000740                     l8830:
  5157                           
  5158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5159  000740  0E02               	movlw	2
  5160  000742  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5161  000746  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5162  00074A  26DE               	addwf	postinc2,f,c
  5163  00074C  0E00               	movlw	0
  5164  00074E  22DD               	addwfc	postdec2,f,c
  5165                           
  5166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5167  000750  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5168  000754  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5169  000758  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5170  00075C  0E02               	movlw	2
  5171  00075E  26DE               	addwf	postinc2,f,c
  5172  000760  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5173  000764  0E00               	movlw	0
  5174  000766  22DD               	addwfc	postdec2,f,c
  5175  000768  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5176  00076C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5177  000770  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5178  000774  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5179  000778  C0C0  F0D3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5180  00077C  C0C1  F0D4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5181  000780  0100               	movlb	0	; () banked
  5182  000782  6BD5               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5183  000784  6BD6               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5184  000786  6BD7               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5185  000788  6BD8               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5186  00078A  6BD9               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5187  00078C  6BDA               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5188  00078E  EFA3  F002         	goto	l8802
  5189  000792                     l8836:
  5190                           
  5191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5192  000792  0E66               	movlw	102
  5193  000794  0100               	movlb	0	; () banked
  5194  000796  19D0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5195  000798  A4D8               	btfss	status,2,c
  5196  00079A  EFD1  F003         	goto	u11741
  5197  00079E  EFD3  F003         	goto	u11740
  5198  0007A2                     u11741:
  5199  0007A2  EF14  F004         	goto	l8848
  5200  0007A6                     u11740:
  5201  0007A6                     
  5202                           ; BSR set to: 0
  5203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5204  0007A6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5205  0007AA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5206  0007AE  CFDE FFF6          	movff	postinc2,tblptrl
  5207  0007B2  CFDD FFF7          	movff	postdec2,tblptrh
  5208  0007B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5209  0007B6  6AF8               	clrf	tblptru,c
  5210  0007B8                     	endif
  5211  0007B8                     	if	0	;tblptru may be non-zero
  5212  0007B8                     	endif
  5213  0007B8  0008               	tblrd		*
  5214  0007BA  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  5215  0007BE                     
  5216                           ; BSR set to: 0
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5218  0007BE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5219  0007C2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5220  0007C6  2ADE               	incf	postinc2,f,c
  5221  0007C8  0E00               	movlw	0
  5222  0007CA  22DD               	addwfc	postdec2,f,c
  5223  0007CC                     
  5224                           ; BSR set to: 0
  5225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5226  0007CC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5227  0007D0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5228  0007D4  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5229  0007D8  0E04               	movlw	4
  5230  0007DA  26DE               	addwf	postinc2,f,c
  5231  0007DC  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5232  0007E0  0E00               	movlw	0
  5233  0007E2  22DD               	addwfc	postdec2,f,c
  5234  0007E4  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5235  0007E8  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5236  0007EC  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  5237  0007F0  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  5238  0007F4  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  5239  0007F8  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  5240  0007FC                     l8844:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5244  0007FC  C0B8  F074         	movff	vfpfcnvrt@fp,efgtoa@fp
  5245  000800  C0B9  F075         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5246  000804  C0CC  F076         	movff	vfpfcnvrt@f,efgtoa@f
  5247  000808  C0CD  F077         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5248  00080C  C0CE  F078         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5249  000810  C0CF  F079         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5250  000814  C0DD  F07A         	movff	vfpfcnvrt@c,efgtoa@c
  5251  000818  EC95  F00A         	call	_efgtoa	;wreg free
  5252  00081C  C074  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  5253  000820  C075  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5254  000824  EF94  F00A         	goto	l753
  5255  000828                     l8848:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5259  000828  0ED0               	movlw	low vfpfcnvrt@ct
  5260  00082A  6E03               	movwf	strncmp@_l^0,c
  5261  00082C  0E00               	movlw	high vfpfcnvrt@ct
  5262  00082E  6E04               	movwf	(strncmp@_l+1)^0,c
  5263  000830  0EEC               	movlw	low STR_40
  5264  000832  6E05               	movwf	strncmp@_r^0,c
  5265  000834  0EFF               	movlw	high STR_40
  5266  000836  6E06               	movwf	(strncmp@_r+1)^0,c
  5267  000838  0E00               	movlw	0
  5268  00083A  6E08               	movwf	(strncmp@n+1)^0,c
  5269  00083C  0E02               	movlw	2
  5270  00083E  6E07               	movwf	strncmp@n^0,c
  5271  000840  EC4A  F026         	call	_strncmp	;wreg free
  5272  000844  5003               	movf	?_strncmp^0,w,c
  5273  000846  1004               	iorwf	(?_strncmp+1)^0,w,c
  5274  000848  A4D8               	btfss	status,2,c
  5275  00084A  EF29  F004         	goto	u11751
  5276  00084E  EF2B  F004         	goto	u11750
  5277  000852                     u11751:
  5278  000852  EFA9  F004         	goto	l8864
  5279  000856                     u11750:
  5280  000856                     
  5281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5282  000856  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5283  00085A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5284  00085E  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  5285  000862  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  5286  000866  0E01               	movlw	1
  5287  000868  0100               	movlb	0	; () banked
  5288  00086A  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  5289  00086C  0E00               	movlw	0
  5290  00086E  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5291  000870  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5292  000874  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5293  000878                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5294  000878  6AF8               	clrf	tblptru,c
  5295  00087A                     	endif
  5296  00087A                     	if	0	;tblptru may be non-zero
  5297  00087A                     	endif
  5298  00087A  0008               	tblrd		*
  5299  00087C  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  5300  000880  0EBF               	movlw	191
  5301  000882  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  5302  000884  0EFF               	movlw	255
  5303  000886  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5304  000888  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5305  00088C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5306  000890  CFDE FFF6          	movff	postinc2,tblptrl
  5307  000894  CFDD FFF7          	movff	postdec2,tblptrh
  5308  000898                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5309  000898  6AF8               	clrf	tblptru,c
  5310  00089A                     	endif
  5311  00089A                     	if	0	;tblptru may be non-zero
  5312  00089A                     	endif
  5313  00089A  0008               	tblrd		*
  5314  00089C  50F5               	movf	tablat,w,c
  5315  00089E  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5316  0008A0  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5317  0008A2  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  5318  0008A4  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5319  0008A6  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5320  0008A8  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5321  0008AA  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5322  0008AC  E10A               	bnz	u11760
  5323  0008AE  0E1A               	movlw	26
  5324  0008B0  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5325  0008B2  A0D8               	btfss	status,0,c
  5326  0008B4  EF5E  F004         	goto	u11761
  5327  0008B8  EF61  F004         	goto	u11760
  5328  0008BC                     u11761:
  5329  0008BC  0E01               	movlw	1
  5330  0008BE  EF62  F004         	goto	u11770
  5331  0008C2                     u11760:
  5332  0008C2  0E00               	movlw	0
  5333  0008C4                     u11770:
  5334  0008C4  6FCA               	movwf	_vfpfcnvrt$1416& (0+255),b
  5335  0008C6  6BCB               	clrf	(_vfpfcnvrt$1416+1)& (0+255),b
  5336  0008C8                     
  5337                           ; BSR set to: 0
  5338  0008C8  51CA               	movf	_vfpfcnvrt$1416& (0+255),w,b
  5339  0008CA  11CB               	iorwf	(_vfpfcnvrt$1416+1)& (0+255),w,b
  5340  0008CC  B4D8               	btfsc	status,2,c
  5341  0008CE  EF6B  F004         	goto	u11781
  5342  0008D2  EF6D  F004         	goto	u11780
  5343  0008D6                     u11781:
  5344  0008D6  EF87  F004         	goto	l8858
  5345  0008DA                     u11780:
  5346  0008DA                     
  5347                           ; BSR set to: 0
  5348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5349  0008DA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5350  0008DE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5351  0008E2  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5352  0008E6  0E04               	movlw	4
  5353  0008E8  26DE               	addwf	postinc2,f,c
  5354  0008EA  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5355  0008EE  0E00               	movlw	0
  5356  0008F0  22DD               	addwfc	postdec2,f,c
  5357  0008F2  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5358  0008F6  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5359  0008FA  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  5360  0008FE  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  5361  000902  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  5362  000906  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  5363                           
  5364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5365  00090A  EF9F  F004         	goto	l773
  5366  00090E                     l8858:
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5370  00090E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5371  000912  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5372  000916  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5373  00091A  0E04               	movlw	4
  5374  00091C  26DE               	addwf	postinc2,f,c
  5375  00091E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5376  000922  0E00               	movlw	0
  5377  000924  22DD               	addwfc	postdec2,f,c
  5378  000926  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5379  00092A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5380  00092E  CFDE F0CC          	movff	postinc2,vfpfcnvrt@f
  5381  000932  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f+1
  5382  000936  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+2
  5383  00093A  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+3
  5384  00093E                     l773:
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5388  00093E  0E02               	movlw	2
  5389  000940  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5390  000944  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5391  000948  26DE               	addwf	postinc2,f,c
  5392  00094A  0E00               	movlw	0
  5393  00094C  22DD               	addwfc	postdec2,f,c
  5394  00094E  EFFE  F003         	goto	l8844
  5395  000952                     l8864:
  5396                           
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5398  000952  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5399  000956  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5400  00095A  CFDE F003          	movff	postinc2,strncmp@_l
  5401  00095E  CFDD F004          	movff	postdec2,strncmp@_l+1
  5402  000962  0EDA               	movlw	low STR_45
  5403  000964  6E05               	movwf	strncmp@_r^0,c
  5404  000966  0EFF               	movlw	high STR_45
  5405  000968  6E06               	movwf	(strncmp@_r+1)^0,c
  5406  00096A  0E00               	movlw	0
  5407  00096C  6E08               	movwf	(strncmp@n+1)^0,c
  5408  00096E  0E03               	movlw	3
  5409  000970  6E07               	movwf	strncmp@n^0,c
  5410  000972  EC4A  F026         	call	_strncmp	;wreg free
  5411  000976  5003               	movf	?_strncmp^0,w,c
  5412  000978  1004               	iorwf	(?_strncmp+1)^0,w,c
  5413  00097A  A4D8               	btfss	status,2,c
  5414  00097C  EFC2  F004         	goto	u11791
  5415  000980  EFC4  F004         	goto	u11790
  5416  000984                     u11791:
  5417  000984  EF04  F005         	goto	l8872
  5418  000988                     u11790:
  5419  000988                     
  5420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5421  000988  0E03               	movlw	3
  5422  00098A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5423  00098E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5424  000992  26DE               	addwf	postinc2,f,c
  5425  000994  0E00               	movlw	0
  5426  000996  22DD               	addwfc	postdec2,f,c
  5427                           
  5428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5429  000998  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5430  00099C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5431  0009A0  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5432  0009A4  0E02               	movlw	2
  5433  0009A6  26DE               	addwf	postinc2,f,c
  5434  0009A8  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5435  0009AC  0E00               	movlw	0
  5436  0009AE  22DD               	addwfc	postdec2,f,c
  5437  0009B0  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5438  0009B4  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5439  0009B8  50DF               	movf	indf2,w,c
  5440  0009BA  0100               	movlb	0	; () banked
  5441  0009BC  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5442  0009BE  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5443  0009C0  6FDE               	movwf	vfpfcnvrt@llu& (0+255),b
  5444  0009C2  6BDF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5445  0009C4  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5446  0009C6  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5447  0009C8  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5448  0009CA  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5449  0009CC  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5450  0009CE  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5451  0009D0                     l8868:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5455  0009D0  C0B8  F01E         	movff	vfpfcnvrt@fp,otoa@fp
  5456  0009D4  C0B9  F01F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5457  0009D8  C0DE  F020         	movff	vfpfcnvrt@llu,otoa@d
  5458  0009DC  C0DF  F021         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5459  0009E0  C0E0  F022         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5460  0009E4  C0E1  F023         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5461  0009E8  C0E2  F024         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5462  0009EC  C0E3  F025         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5463  0009F0  C0E4  F026         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5464  0009F4  C0E5  F027         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5465  0009F8  EC81  F01F         	call	_otoa	;wreg free
  5466  0009FC  C01E  F0B8         	movff	?_otoa,?_vfpfcnvrt
  5467  000A00  C01F  F0B9         	movff	?_otoa+1,?_vfpfcnvrt+1
  5468  000A04  EF94  F00A         	goto	l753
  5469  000A08                     l8872:
  5470                           
  5471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5472  000A08  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5473  000A0C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5474  000A10  CFDE F003          	movff	postinc2,strncmp@_l
  5475  000A14  CFDD F004          	movff	postdec2,strncmp@_l+1
  5476  000A18  0EDB               	movlw	low (STR_45+1)
  5477  000A1A  6E05               	movwf	strncmp@_r^0,c
  5478  000A1C  0EFF               	movlw	high (STR_45+1)
  5479  000A1E  6E06               	movwf	(strncmp@_r+1)^0,c
  5480  000A20  0E00               	movlw	0
  5481  000A22  6E08               	movwf	(strncmp@n+1)^0,c
  5482  000A24  0E02               	movlw	2
  5483  000A26  6E07               	movwf	strncmp@n^0,c
  5484  000A28  EC4A  F026         	call	_strncmp	;wreg free
  5485  000A2C  5003               	movf	?_strncmp^0,w,c
  5486  000A2E  1004               	iorwf	(?_strncmp+1)^0,w,c
  5487  000A30  A4D8               	btfss	status,2,c
  5488  000A32  EF1D  F005         	goto	u11801
  5489  000A36  EF1F  F005         	goto	u11800
  5490  000A3A                     u11801:
  5491  000A3A  EF48  F005         	goto	l8880
  5492  000A3E                     u11800:
  5493  000A3E                     
  5494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5495  000A3E  0E02               	movlw	2
  5496  000A40  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5497  000A44  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5498  000A48  26DE               	addwf	postinc2,f,c
  5499  000A4A  0E00               	movlw	0
  5500  000A4C  22DD               	addwfc	postdec2,f,c
  5501                           
  5502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5503  000A4E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5504  000A52  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5505  000A56  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5506  000A5A  0E02               	movlw	2
  5507  000A5C  26DE               	addwf	postinc2,f,c
  5508  000A5E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5509  000A62  0E00               	movlw	0
  5510  000A64  22DD               	addwfc	postdec2,f,c
  5511  000A66  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5512  000A6A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5513  000A6E  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5514  000A72  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5515  000A76  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5516  000A7A  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5517  000A7E  0100               	movlb	0	; () banked
  5518  000A80  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5519  000A82  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5520  000A84  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5521  000A86  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5522  000A88  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5523  000A8A  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5524  000A8C  EFE8  F004         	goto	l8868
  5525  000A90                     l8880:
  5526                           
  5527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5528  000A90  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5529  000A94  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5530  000A98  CFDE FFF6          	movff	postinc2,tblptrl
  5531  000A9C  CFDD FFF7          	movff	postdec2,tblptrh
  5532  000AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5533  000AA0  6AF8               	clrf	tblptru,c
  5534  000AA2                     	endif
  5535  000AA2                     	if	0	;tblptru may be non-zero
  5536  000AA2                     	endif
  5537  000AA2  0008               	tblrd		*
  5538  000AA4  50F5               	movf	tablat,w,c
  5539  000AA6  0A6F               	xorlw	111
  5540  000AA8  A4D8               	btfss	status,2,c
  5541  000AAA  EF59  F005         	goto	u11811
  5542  000AAE  EF5B  F005         	goto	u11810
  5543  000AB2                     u11811:
  5544  000AB2  EF83  F005         	goto	l8888
  5545  000AB6                     u11810:
  5546  000AB6                     
  5547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5548  000AB6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5549  000ABA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5550  000ABE  2ADE               	incf	postinc2,f,c
  5551  000AC0  0E00               	movlw	0
  5552  000AC2  22DD               	addwfc	postdec2,f,c
  5553                           
  5554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5555  000AC4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5556  000AC8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5557  000ACC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5558  000AD0  0E02               	movlw	2
  5559  000AD2  26DE               	addwf	postinc2,f,c
  5560  000AD4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5561  000AD8  0E00               	movlw	0
  5562  000ADA  22DD               	addwfc	postdec2,f,c
  5563  000ADC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5564  000AE0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5565  000AE4  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5566  000AE8  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5567  000AEC  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5568  000AF0  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5569  000AF4  0100               	movlb	0	; () banked
  5570  000AF6  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5571  000AF8  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5572  000AFA  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5573  000AFC  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5574  000AFE  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5575  000B00  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5576  000B02  EFE8  F004         	goto	l8868
  5577  000B06                     l8888:
  5578                           
  5579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5580  000B06  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5581  000B0A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5582  000B0E  CFDE F003          	movff	postinc2,strncmp@_l
  5583  000B12  CFDD F004          	movff	postdec2,strncmp@_l+1
  5584  000B16  0EF5               	movlw	low STR_55
  5585  000B18  6E05               	movwf	strncmp@_r^0,c
  5586  000B1A  0EFF               	movlw	high STR_55
  5587  000B1C  6E06               	movwf	(strncmp@_r+1)^0,c
  5588  000B1E  0E00               	movlw	0
  5589  000B20  6E08               	movwf	(strncmp@n+1)^0,c
  5590  000B22  0E02               	movlw	2
  5591  000B24  6E07               	movwf	strncmp@n^0,c
  5592  000B26  EC4A  F026         	call	_strncmp	;wreg free
  5593  000B2A  5003               	movf	?_strncmp^0,w,c
  5594  000B2C  1004               	iorwf	(?_strncmp+1)^0,w,c
  5595  000B2E  A4D8               	btfss	status,2,c
  5596  000B30  EF9C  F005         	goto	u11821
  5597  000B34  EF9E  F005         	goto	u11820
  5598  000B38                     u11821:
  5599  000B38  EFC7  F005         	goto	l8896
  5600  000B3C                     u11820:
  5601  000B3C                     
  5602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5603  000B3C  0E02               	movlw	2
  5604  000B3E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5605  000B42  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5606  000B46  26DE               	addwf	postinc2,f,c
  5607  000B48  0E00               	movlw	0
  5608  000B4A  22DD               	addwfc	postdec2,f,c
  5609                           
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5611  000B4C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5612  000B50  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5613  000B54  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5614  000B58  0E02               	movlw	2
  5615  000B5A  26DE               	addwf	postinc2,f,c
  5616  000B5C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5617  000B60  0E00               	movlw	0
  5618  000B62  22DD               	addwfc	postdec2,f,c
  5619  000B64  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5620  000B68  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5621  000B6C  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5622  000B70  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5623  000B74  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5624  000B78  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5625  000B7C  0100               	movlb	0	; () banked
  5626  000B7E  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5627  000B80  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5628  000B82  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5629  000B84  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5630  000B86  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5631  000B88  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5632  000B8A  EFE8  F004         	goto	l8868
  5633  000B8E                     l8896:
  5634                           
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5636  000B8E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5637  000B92  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5638  000B96  CFDE F003          	movff	postinc2,strncmp@_l
  5639  000B9A  CFDD F004          	movff	postdec2,strncmp@_l+1
  5640  000B9E  0ED6               	movlw	low STR_60
  5641  000BA0  6E05               	movwf	strncmp@_r^0,c
  5642  000BA2  0EFF               	movlw	high STR_60
  5643  000BA4  6E06               	movwf	(strncmp@_r+1)^0,c
  5644  000BA6  0E00               	movlw	0
  5645  000BA8  6E08               	movwf	(strncmp@n+1)^0,c
  5646  000BAA  0E03               	movlw	3
  5647  000BAC  6E07               	movwf	strncmp@n^0,c
  5648  000BAE  EC4A  F026         	call	_strncmp	;wreg free
  5649  000BB2  5003               	movf	?_strncmp^0,w,c
  5650  000BB4  1004               	iorwf	(?_strncmp+1)^0,w,c
  5651  000BB6  A4D8               	btfss	status,2,c
  5652  000BB8  EFE0  F005         	goto	u11831
  5653  000BBC  EFE2  F005         	goto	u11830
  5654  000BC0                     u11831:
  5655  000BC0  EF0B  F006         	goto	l8906
  5656  000BC4                     u11830:
  5657  000BC4                     
  5658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5659  000BC4  0E03               	movlw	3
  5660  000BC6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5661  000BCA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5662  000BCE  26DE               	addwf	postinc2,f,c
  5663  000BD0  0E00               	movlw	0
  5664  000BD2  22DD               	addwfc	postdec2,f,c
  5665                           
  5666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5667  000BD4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5668  000BD8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5669  000BDC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5670  000BE0  0E02               	movlw	2
  5671  000BE2  26DE               	addwf	postinc2,f,c
  5672  000BE4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5673  000BE8  0E00               	movlw	0
  5674  000BEA  22DD               	addwfc	postdec2,f,c
  5675  000BEC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5676  000BF0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5677  000BF4  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  5678  000BF8  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  5679  000BFC                     
  5680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5681  000BFC  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5682  000C00  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5683  000C04  C11A  FFDF         	movff	_nout,indf2
  5684  000C08                     l8902:
  5685                           
  5686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5687  000C08  0E00               	movlw	0
  5688  000C0A  0100               	movlb	0	; () banked
  5689  000C0C  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5690  000C0E  0E00               	movlw	0
  5691  000C10  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  5692  000C12  EF94  F00A         	goto	l753
  5693  000C16                     l8906:
  5694                           
  5695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5696  000C16  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5697  000C1A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5698  000C1E  CFDE F003          	movff	postinc2,strncmp@_l
  5699  000C22  CFDD F004          	movff	postdec2,strncmp@_l+1
  5700  000C26  0ED7               	movlw	low (STR_60+1)
  5701  000C28  6E05               	movwf	strncmp@_r^0,c
  5702  000C2A  0EFF               	movlw	high (STR_60+1)
  5703  000C2C  6E06               	movwf	(strncmp@_r+1)^0,c
  5704  000C2E  0E00               	movlw	0
  5705  000C30  6E08               	movwf	(strncmp@n+1)^0,c
  5706  000C32  0E02               	movlw	2
  5707  000C34  6E07               	movwf	strncmp@n^0,c
  5708  000C36  EC4A  F026         	call	_strncmp	;wreg free
  5709  000C3A  5003               	movf	?_strncmp^0,w,c
  5710  000C3C  1004               	iorwf	(?_strncmp+1)^0,w,c
  5711  000C3E  A4D8               	btfss	status,2,c
  5712  000C40  EF24  F006         	goto	u11841
  5713  000C44  EF26  F006         	goto	u11840
  5714  000C48                     u11841:
  5715  000C48  EF4C  F006         	goto	l8916
  5716  000C4C                     u11840:
  5717  000C4C                     
  5718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5719  000C4C  0E02               	movlw	2
  5720  000C4E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5721  000C52  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5722  000C56  26DE               	addwf	postinc2,f,c
  5723  000C58  0E00               	movlw	0
  5724  000C5A  22DD               	addwfc	postdec2,f,c
  5725                           
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5727  000C5C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5728  000C60  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5729  000C64  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5730  000C68  0E02               	movlw	2
  5731  000C6A  26DE               	addwf	postinc2,f,c
  5732  000C6C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5733  000C70  0E00               	movlw	0
  5734  000C72  22DD               	addwfc	postdec2,f,c
  5735  000C74  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5736  000C78  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5737  000C7C  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  5738  000C80  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  5739  000C84                     
  5740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5741  000C84  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5742  000C88  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5743  000C8C  C11A  FFDE         	movff	_nout,postinc2
  5744  000C90  C11B  FFDD         	movff	_nout+1,postdec2
  5745  000C94  EF04  F006         	goto	l8902
  5746  000C98                     l8916:
  5747                           
  5748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5749  000C98  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5750  000C9C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5751  000CA0  CFDE FFF6          	movff	postinc2,tblptrl
  5752  000CA4  CFDD FFF7          	movff	postdec2,tblptrh
  5753  000CA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5754  000CA8  6AF8               	clrf	tblptru,c
  5755  000CAA                     	endif
  5756  000CAA                     	if	0	;tblptru may be non-zero
  5757  000CAA                     	endif
  5758  000CAA  0008               	tblrd		*
  5759  000CAC  50F5               	movf	tablat,w,c
  5760  000CAE  0A6E               	xorlw	110
  5761  000CB0  A4D8               	btfss	status,2,c
  5762  000CB2  EF5D  F006         	goto	u11851
  5763  000CB6  EF5F  F006         	goto	u11850
  5764  000CBA                     u11851:
  5765  000CBA  EF84  F006         	goto	l8926
  5766  000CBE                     u11850:
  5767  000CBE                     
  5768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5769  000CBE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5770  000CC2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5771  000CC6  2ADE               	incf	postinc2,f,c
  5772  000CC8  0E00               	movlw	0
  5773  000CCA  22DD               	addwfc	postdec2,f,c
  5774                           
  5775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5776  000CCC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5777  000CD0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5778  000CD4  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5779  000CD8  0E02               	movlw	2
  5780  000CDA  26DE               	addwf	postinc2,f,c
  5781  000CDC  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5782  000CE0  0E00               	movlw	0
  5783  000CE2  22DD               	addwfc	postdec2,f,c
  5784  000CE4  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5785  000CE8  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5786  000CEC  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  5787  000CF0  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  5788  000CF4                     
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5790  000CF4  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5791  000CF8  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5792  000CFC  C11A  FFDE         	movff	_nout,postinc2
  5793  000D00  C11B  FFDD         	movff	_nout+1,postdec2
  5794  000D04  EF04  F006         	goto	l8902
  5795  000D08                     l8926:
  5796                           
  5797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5798  000D08  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5799  000D0C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5800  000D10  CFDE F003          	movff	postinc2,strncmp@_l
  5801  000D14  CFDD F004          	movff	postdec2,strncmp@_l+1
  5802  000D18  0EF2               	movlw	low STR_70
  5803  000D1A  6E05               	movwf	strncmp@_r^0,c
  5804  000D1C  0EFF               	movlw	high STR_70
  5805  000D1E  6E06               	movwf	(strncmp@_r+1)^0,c
  5806  000D20  0E00               	movlw	0
  5807  000D22  6E08               	movwf	(strncmp@n+1)^0,c
  5808  000D24  0E02               	movlw	2
  5809  000D26  6E07               	movwf	strncmp@n^0,c
  5810  000D28  EC4A  F026         	call	_strncmp	;wreg free
  5811  000D2C  5003               	movf	?_strncmp^0,w,c
  5812  000D2E  1004               	iorwf	(?_strncmp+1)^0,w,c
  5813  000D30  A4D8               	btfss	status,2,c
  5814  000D32  EF9D  F006         	goto	u11861
  5815  000D36  EF9F  F006         	goto	u11860
  5816  000D3A                     u11861:
  5817  000D3A  EFC5  F006         	goto	l8936
  5818  000D3E                     u11860:
  5819  000D3E                     
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5821  000D3E  0E02               	movlw	2
  5822  000D40  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5823  000D44  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5824  000D48  26DE               	addwf	postinc2,f,c
  5825  000D4A  0E00               	movlw	0
  5826  000D4C  22DD               	addwfc	postdec2,f,c
  5827                           
  5828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5829  000D4E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5830  000D52  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5831  000D56  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5832  000D5A  0E02               	movlw	2
  5833  000D5C  26DE               	addwf	postinc2,f,c
  5834  000D5E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5835  000D62  0E00               	movlw	0
  5836  000D64  22DD               	addwfc	postdec2,f,c
  5837  000D66  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5838  000D6A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5839  000D6E  CFDE F0DB          	movff	postinc2,vfpfcnvrt@vp
  5840  000D72  CFDD F0DC          	movff	postdec2,vfpfcnvrt@vp+1
  5841  000D76                     
  5842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5843  000D76  C0DB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5844  000D7A  C0DC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5845  000D7E  C11A  FFDE         	movff	_nout,postinc2
  5846  000D82  C11B  FFDD         	movff	_nout+1,postdec2
  5847  000D86  EF04  F006         	goto	l8902
  5848  000D8A                     l8936:
  5849                           
  5850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5851  000D8A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5852  000D8E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5853  000D92  CFDE FFF6          	movff	postinc2,tblptrl
  5854  000D96  CFDD FFF7          	movff	postdec2,tblptrh
  5855  000D9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5856  000D9A  6AF8               	clrf	tblptru,c
  5857  000D9C                     	endif
  5858  000D9C                     	if	0	;tblptru may be non-zero
  5859  000D9C                     	endif
  5860  000D9C  0008               	tblrd		*
  5861  000D9E  50F5               	movf	tablat,w,c
  5862  000DA0  0A70               	xorlw	112
  5863  000DA2  A4D8               	btfss	status,2,c
  5864  000DA4  EFD6  F006         	goto	u11871
  5865  000DA8  EFD8  F006         	goto	u11870
  5866  000DAC                     u11871:
  5867  000DAC  EF1C  F007         	goto	l8944
  5868  000DB0                     u11870:
  5869  000DB0                     
  5870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5871  000DB0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5872  000DB4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5873  000DB8  2ADE               	incf	postinc2,f,c
  5874  000DBA  0E00               	movlw	0
  5875  000DBC  22DD               	addwfc	postdec2,f,c
  5876                           
  5877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5878  000DBE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5879  000DC2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5880  000DC6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5881  000DCA  0E02               	movlw	2
  5882  000DCC  26DE               	addwf	postinc2,f,c
  5883  000DCE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5884  000DD2  0E00               	movlw	0
  5885  000DD4  22DD               	addwfc	postdec2,f,c
  5886  000DD6  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5887  000DDA  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5888  000DDE  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5889  000DE2  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5890  000DE6  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5891  000DEA  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5892  000DEE  0100               	movlb	0	; () banked
  5893  000DF0  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5894  000DF2  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5895  000DF4  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5896  000DF6  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5897  000DF8  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5898  000DFA  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5899  000DFC                     
  5900                           ; BSR set to: 0
  5901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5902  000DFC  C0B8  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  5903  000E00  C0B9  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5904  000E04  C0DE  F020         	movff	vfpfcnvrt@llu,xtoa@d
  5905  000E08  C0DF  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5906  000E0C  C0E0  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5907  000E10  C0E1  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5908  000E14  C0E2  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5909  000E18  C0E3  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5910  000E1C  C0E4  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5911  000E20  C0E5  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5912  000E24  0E78               	movlw	120
  5913  000E26  6E28               	movwf	xtoa@x^0,c
  5914  000E28  EC06  F01C         	call	_xtoa	;wreg free
  5915  000E2C  C01E  F0B8         	movff	?_xtoa,?_vfpfcnvrt
  5916  000E30  C01F  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5917  000E34  EF94  F00A         	goto	l753
  5918  000E38                     l8944:
  5919                           
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5921  000E38  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5922  000E3C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5923  000E40  CFDE FFF6          	movff	postinc2,tblptrl
  5924  000E44  CFDD FFF7          	movff	postdec2,tblptrh
  5925  000E48                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5926  000E48  6AF8               	clrf	tblptru,c
  5927  000E4A                     	endif
  5928  000E4A                     	if	0	;tblptru may be non-zero
  5929  000E4A                     	endif
  5930  000E4A  0008               	tblrd		*
  5931  000E4C  50F5               	movf	tablat,w,c
  5932  000E4E  0A73               	xorlw	115
  5933  000E50  A4D8               	btfss	status,2,c
  5934  000E52  EF2D  F007         	goto	u11881
  5935  000E56  EF2F  F007         	goto	u11880
  5936  000E5A                     u11881:
  5937  000E5A  EF5A  F007         	goto	l8952
  5938  000E5E                     u11880:
  5939  000E5E                     
  5940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5941  000E5E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5942  000E62  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5943  000E66  2ADE               	incf	postinc2,f,c
  5944  000E68  0E00               	movlw	0
  5945  000E6A  22DD               	addwfc	postdec2,f,c
  5946                           
  5947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5948  000E6C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5949  000E70  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5950  000E74  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5951  000E78  0E02               	movlw	2
  5952  000E7A  26DE               	addwf	postinc2,f,c
  5953  000E7C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5954  000E80  0E00               	movlw	0
  5955  000E82  22DD               	addwfc	postdec2,f,c
  5956  000E84  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5957  000E88  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5958  000E8C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@cp
  5959  000E90  CFDD F0C3          	movff	postdec2,vfpfcnvrt@cp+1
  5960  000E94                     
  5961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5962  000E94  C0B8  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  5963  000E98  C0B9  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5964  000E9C  C0C2  F00E         	movff	vfpfcnvrt@cp,stoa@s
  5965  000EA0  C0C3  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5966  000EA4  ECE4  F022         	call	_stoa	;wreg free
  5967  000EA8  C00C  F0B8         	movff	?_stoa,?_vfpfcnvrt
  5968  000EAC  C00D  F0B9         	movff	?_stoa+1,?_vfpfcnvrt+1
  5969  000EB0  EF94  F00A         	goto	l753
  5970  000EB4                     l8952:
  5971                           
  5972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5973  000EB4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5974  000EB8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5975  000EBC  CFDE F003          	movff	postinc2,strncmp@_l
  5976  000EC0  CFDD F004          	movff	postdec2,strncmp@_l+1
  5977  000EC4  0EDE               	movlw	low STR_75
  5978  000EC6  6E05               	movwf	strncmp@_r^0,c
  5979  000EC8  0EFF               	movlw	high STR_75
  5980  000ECA  6E06               	movwf	(strncmp@_r+1)^0,c
  5981  000ECC  0E00               	movlw	0
  5982  000ECE  6E08               	movwf	(strncmp@n+1)^0,c
  5983  000ED0  0E03               	movlw	3
  5984  000ED2  6E07               	movwf	strncmp@n^0,c
  5985  000ED4  EC4A  F026         	call	_strncmp	;wreg free
  5986  000ED8  5003               	movf	?_strncmp^0,w,c
  5987  000EDA  1004               	iorwf	(?_strncmp+1)^0,w,c
  5988  000EDC  A4D8               	btfss	status,2,c
  5989  000EDE  EF73  F007         	goto	u11891
  5990  000EE2  EF75  F007         	goto	u11890
  5991  000EE6                     u11891:
  5992  000EE6  EFB5  F007         	goto	l8960
  5993  000EEA                     u11890:
  5994  000EEA                     
  5995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5996  000EEA  0E03               	movlw	3
  5997  000EEC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5998  000EF0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5999  000EF4  26DE               	addwf	postinc2,f,c
  6000  000EF6  0E00               	movlw	0
  6001  000EF8  22DD               	addwfc	postdec2,f,c
  6002                           
  6003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6004  000EFA  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6005  000EFE  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6006  000F02  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6007  000F06  0E02               	movlw	2
  6008  000F08  26DE               	addwf	postinc2,f,c
  6009  000F0A  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6010  000F0E  0E00               	movlw	0
  6011  000F10  22DD               	addwfc	postdec2,f,c
  6012  000F12  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6013  000F16  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6014  000F1A  50DF               	movf	indf2,w,c
  6015  000F1C  0100               	movlb	0	; () banked
  6016  000F1E  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6017  000F20  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6018  000F22  6FDE               	movwf	vfpfcnvrt@llu& (0+255),b
  6019  000F24  6BDF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6020  000F26  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6021  000F28  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6022  000F2A  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6023  000F2C  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6024  000F2E  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6025  000F30  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6026  000F32                     l8956:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  6030  000F32  C0B8  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  6031  000F36  C0B9  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6032  000F3A  C0DE  F020         	movff	vfpfcnvrt@llu,utoa@d
  6033  000F3E  C0DF  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6034  000F42  C0E0  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6035  000F46  C0E1  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6036  000F4A  C0E2  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6037  000F4E  C0E3  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6038  000F52  C0E4  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6039  000F56  C0E5  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6040  000F5A  EC7F  F01E         	call	_utoa	;wreg free
  6041  000F5E  C01E  F0B8         	movff	?_utoa,?_vfpfcnvrt
  6042  000F62  C01F  F0B9         	movff	?_utoa+1,?_vfpfcnvrt+1
  6043  000F66  EF94  F00A         	goto	l753
  6044  000F6A                     l8960:
  6045                           
  6046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6047  000F6A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6048  000F6E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6049  000F72  CFDE F003          	movff	postinc2,strncmp@_l
  6050  000F76  CFDD F004          	movff	postdec2,strncmp@_l+1
  6051  000F7A  0EDF               	movlw	low (STR_75+1)
  6052  000F7C  6E05               	movwf	strncmp@_r^0,c
  6053  000F7E  0EFF               	movlw	high (STR_75+1)
  6054  000F80  6E06               	movwf	(strncmp@_r+1)^0,c
  6055  000F82  0E00               	movlw	0
  6056  000F84  6E08               	movwf	(strncmp@n+1)^0,c
  6057  000F86  0E02               	movlw	2
  6058  000F88  6E07               	movwf	strncmp@n^0,c
  6059  000F8A  EC4A  F026         	call	_strncmp	;wreg free
  6060  000F8E  5003               	movf	?_strncmp^0,w,c
  6061  000F90  1004               	iorwf	(?_strncmp+1)^0,w,c
  6062  000F92  A4D8               	btfss	status,2,c
  6063  000F94  EFCE  F007         	goto	u11901
  6064  000F98  EFD0  F007         	goto	u11900
  6065  000F9C                     u11901:
  6066  000F9C  EFF9  F007         	goto	l8968
  6067  000FA0                     u11900:
  6068  000FA0                     
  6069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  6070  000FA0  0E02               	movlw	2
  6071  000FA2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6072  000FA6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6073  000FAA  26DE               	addwf	postinc2,f,c
  6074  000FAC  0E00               	movlw	0
  6075  000FAE  22DD               	addwfc	postdec2,f,c
  6076                           
  6077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6078  000FB0  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6079  000FB4  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6080  000FB8  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6081  000FBC  0E02               	movlw	2
  6082  000FBE  26DE               	addwf	postinc2,f,c
  6083  000FC0  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6084  000FC4  0E00               	movlw	0
  6085  000FC6  22DD               	addwfc	postdec2,f,c
  6086  000FC8  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6087  000FCC  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6088  000FD0  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6089  000FD4  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6090  000FD8  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6091  000FDC  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6092  000FE0  0100               	movlb	0	; () banked
  6093  000FE2  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6094  000FE4  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6095  000FE6  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6096  000FE8  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6097  000FEA  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6098  000FEC  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6099  000FEE  EF99  F007         	goto	l8956
  6100  000FF2                     l8968:
  6101                           
  6102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6103  000FF2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6104  000FF6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6105  000FFA  CFDE FFF6          	movff	postinc2,tblptrl
  6106  000FFE  CFDD FFF7          	movff	postdec2,tblptrh
  6107  001002                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6108  001002  6AF8               	clrf	tblptru,c
  6109  001004                     	endif
  6110  001004                     	if	0	;tblptru may be non-zero
  6111  001004                     	endif
  6112  001004  0008               	tblrd		*
  6113  001006  50F5               	movf	tablat,w,c
  6114  001008  0A75               	xorlw	117
  6115  00100A  A4D8               	btfss	status,2,c
  6116  00100C  EF0A  F008         	goto	u11911
  6117  001010  EF0C  F008         	goto	u11910
  6118  001014                     u11911:
  6119  001014  EF34  F008         	goto	l8976
  6120  001018                     u11910:
  6121  001018                     
  6122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6123  001018  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6124  00101C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6125  001020  2ADE               	incf	postinc2,f,c
  6126  001022  0E00               	movlw	0
  6127  001024  22DD               	addwfc	postdec2,f,c
  6128                           
  6129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6130  001026  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6131  00102A  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6132  00102E  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6133  001032  0E02               	movlw	2
  6134  001034  26DE               	addwf	postinc2,f,c
  6135  001036  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6136  00103A  0E00               	movlw	0
  6137  00103C  22DD               	addwfc	postdec2,f,c
  6138  00103E  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6139  001042  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6140  001046  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6141  00104A  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6142  00104E  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6143  001052  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6144  001056  0100               	movlb	0	; () banked
  6145  001058  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6146  00105A  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6147  00105C  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6148  00105E  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6149  001060  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6150  001062  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6151  001064  EF99  F007         	goto	l8956
  6152  001068                     l8976:
  6153                           
  6154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6155  001068  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6156  00106C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6157  001070  CFDE F003          	movff	postinc2,strncmp@_l
  6158  001074  CFDD F004          	movff	postdec2,strncmp@_l+1
  6159  001078  0EF8               	movlw	low STR_85
  6160  00107A  6E05               	movwf	strncmp@_r^0,c
  6161  00107C  0EFF               	movlw	high STR_85
  6162  00107E  6E06               	movwf	(strncmp@_r+1)^0,c
  6163  001080  0E00               	movlw	0
  6164  001082  6E08               	movwf	(strncmp@n+1)^0,c
  6165  001084  0E02               	movlw	2
  6166  001086  6E07               	movwf	strncmp@n^0,c
  6167  001088  EC4A  F026         	call	_strncmp	;wreg free
  6168  00108C  5003               	movf	?_strncmp^0,w,c
  6169  00108E  1004               	iorwf	(?_strncmp+1)^0,w,c
  6170  001090  A4D8               	btfss	status,2,c
  6171  001092  EF4D  F008         	goto	u11921
  6172  001096  EF4F  F008         	goto	u11920
  6173  00109A                     u11921:
  6174  00109A  EF78  F008         	goto	l8984
  6175  00109E                     u11920:
  6176  00109E                     
  6177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6178  00109E  0E02               	movlw	2
  6179  0010A0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6180  0010A4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6181  0010A8  26DE               	addwf	postinc2,f,c
  6182  0010AA  0E00               	movlw	0
  6183  0010AC  22DD               	addwfc	postdec2,f,c
  6184                           
  6185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6186  0010AE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6187  0010B2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6188  0010B6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6189  0010BA  0E02               	movlw	2
  6190  0010BC  26DE               	addwf	postinc2,f,c
  6191  0010BE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6192  0010C2  0E00               	movlw	0
  6193  0010C4  22DD               	addwfc	postdec2,f,c
  6194  0010C6  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6195  0010CA  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6196  0010CE  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6197  0010D2  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6198  0010D6  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6199  0010DA  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6200  0010DE  0100               	movlb	0	; () banked
  6201  0010E0  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6202  0010E2  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6203  0010E4  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6204  0010E6  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6205  0010E8  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6206  0010EA  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6207  0010EC  EF99  F007         	goto	l8956
  6208  0010F0                     l8984:
  6209                           
  6210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6211  0010F0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6212  0010F4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6213  0010F8  CFDE F003          	movff	postinc2,strncmp@_l
  6214  0010FC  CFDD F004          	movff	postdec2,strncmp@_l+1
  6215  001100  0EE2               	movlw	low STR_90
  6216  001102  6E05               	movwf	strncmp@_r^0,c
  6217  001104  0EFF               	movlw	high STR_90
  6218  001106  6E06               	movwf	(strncmp@_r+1)^0,c
  6219  001108  0E00               	movlw	0
  6220  00110A  6E08               	movwf	(strncmp@n+1)^0,c
  6221  00110C  0E03               	movlw	3
  6222  00110E  6E07               	movwf	strncmp@n^0,c
  6223  001110  EC4A  F026         	call	_strncmp	;wreg free
  6224  001114  5003               	movf	?_strncmp^0,w,c
  6225  001116  1004               	iorwf	(?_strncmp+1)^0,w,c
  6226  001118  B4D8               	btfsc	status,2,c
  6227  00111A  EF91  F008         	goto	u11931
  6228  00111E  EF93  F008         	goto	u11930
  6229  001122                     u11931:
  6230  001122  EFAE  F008         	goto	l8988
  6231  001126                     u11930:
  6232  001126  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6233  00112A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6234  00112E  CFDE F003          	movff	postinc2,strncmp@_l
  6235  001132  CFDD F004          	movff	postdec2,strncmp@_l+1
  6236  001136  0EC2               	movlw	low STR_94
  6237  001138  6E05               	movwf	strncmp@_r^0,c
  6238  00113A  0EFF               	movlw	high STR_94
  6239  00113C  6E06               	movwf	(strncmp@_r+1)^0,c
  6240  00113E  0E00               	movlw	0
  6241  001140  6E08               	movwf	(strncmp@n+1)^0,c
  6242  001142  0E03               	movlw	3
  6243  001144  6E07               	movwf	strncmp@n^0,c
  6244  001146  EC4A  F026         	call	_strncmp	;wreg free
  6245  00114A  5003               	movf	?_strncmp^0,w,c
  6246  00114C  1004               	iorwf	(?_strncmp+1)^0,w,c
  6247  00114E  A4D8               	btfss	status,2,c
  6248  001150  EFAC  F008         	goto	u11941
  6249  001154  EFAE  F008         	goto	u11940
  6250  001158                     u11941:
  6251  001158  EF04  F009         	goto	l8998
  6252  00115C                     u11940:
  6253  00115C                     l8988:
  6254                           
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6256  00115C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6257  001160  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6258  001164  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  6259  001168  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  6260  00116C  0E02               	movlw	2
  6261  00116E  0100               	movlb	0	; () banked
  6262  001170  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6263  001172  0E00               	movlw	0
  6264  001174  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6265  001176  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6266  00117A  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6267  00117E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6268  00117E  6AF8               	clrf	tblptru,c
  6269  001180                     	endif
  6270  001180                     	if	0	;tblptru may be non-zero
  6271  001180                     	endif
  6272  001180  0008               	tblrd		*
  6273  001182  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6274  001186                     
  6275                           ; BSR set to: 0
  6276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6277  001186  0E03               	movlw	3
  6278  001188  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6279  00118C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6280  001190  26DE               	addwf	postinc2,f,c
  6281  001192  0E00               	movlw	0
  6282  001194  22DD               	addwfc	postdec2,f,c
  6283  001196                     
  6284                           ; BSR set to: 0
  6285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6286  001196  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6287  00119A  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6288  00119E  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6289  0011A2  0E02               	movlw	2
  6290  0011A4  26DE               	addwf	postinc2,f,c
  6291  0011A6  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6292  0011AA  0E00               	movlw	0
  6293  0011AC  22DD               	addwfc	postdec2,f,c
  6294  0011AE  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6295  0011B2  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6296  0011B6  50DF               	movf	indf2,w,c
  6297  0011B8  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6298  0011BA  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6299  0011BC  6FDE               	movwf	vfpfcnvrt@llu& (0+255),b
  6300  0011BE  6BDF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6301  0011C0  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6302  0011C2  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6303  0011C4  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6304  0011C6  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6305  0011C8  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6306  0011CA  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6307  0011CC                     l8994:
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6311  0011CC  C0B8  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  6312  0011D0  C0B9  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6313  0011D4  C0DE  F020         	movff	vfpfcnvrt@llu,xtoa@d
  6314  0011D8  C0DF  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6315  0011DC  C0E0  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6316  0011E0  C0E1  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6317  0011E4  C0E2  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6318  0011E8  C0E3  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6319  0011EC  C0E4  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6320  0011F0  C0E5  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6321  0011F4  C0DD  F028         	movff	vfpfcnvrt@c,xtoa@x
  6322  0011F8  EC06  F01C         	call	_xtoa	;wreg free
  6323  0011FC  C01E  F0B8         	movff	?_xtoa,?_vfpfcnvrt
  6324  001200  C01F  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6325  001204  EF94  F00A         	goto	l753
  6326  001208                     l8998:
  6327                           
  6328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6329  001208  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6330  00120C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6331  001210  CFDE F003          	movff	postinc2,strncmp@_l
  6332  001214  CFDD F004          	movff	postdec2,strncmp@_l+1
  6333  001218  0EE3               	movlw	low (STR_90+1)
  6334  00121A  6E05               	movwf	strncmp@_r^0,c
  6335  00121C  0EFF               	movlw	high (STR_90+1)
  6336  00121E  6E06               	movwf	(strncmp@_r+1)^0,c
  6337  001220  0E00               	movlw	0
  6338  001222  6E08               	movwf	(strncmp@n+1)^0,c
  6339  001224  0E02               	movlw	2
  6340  001226  6E07               	movwf	strncmp@n^0,c
  6341  001228  EC4A  F026         	call	_strncmp	;wreg free
  6342  00122C  5003               	movf	?_strncmp^0,w,c
  6343  00122E  1004               	iorwf	(?_strncmp+1)^0,w,c
  6344  001230  B4D8               	btfsc	status,2,c
  6345  001232  EF1D  F009         	goto	u11951
  6346  001236  EF1F  F009         	goto	u11950
  6347  00123A                     u11951:
  6348  00123A  EF3A  F009         	goto	l9002
  6349  00123E                     u11950:
  6350  00123E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6351  001242  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6352  001246  CFDE F003          	movff	postinc2,strncmp@_l
  6353  00124A  CFDD F004          	movff	postdec2,strncmp@_l+1
  6354  00124E  0EC3               	movlw	low (STR_94+1)
  6355  001250  6E05               	movwf	strncmp@_r^0,c
  6356  001252  0EFF               	movlw	high (STR_94+1)
  6357  001254  6E06               	movwf	(strncmp@_r+1)^0,c
  6358  001256  0E00               	movlw	0
  6359  001258  6E08               	movwf	(strncmp@n+1)^0,c
  6360  00125A  0E02               	movlw	2
  6361  00125C  6E07               	movwf	strncmp@n^0,c
  6362  00125E  EC4A  F026         	call	_strncmp	;wreg free
  6363  001262  5003               	movf	?_strncmp^0,w,c
  6364  001264  1004               	iorwf	(?_strncmp+1)^0,w,c
  6365  001266  A4D8               	btfss	status,2,c
  6366  001268  EF38  F009         	goto	u11961
  6367  00126C  EF3A  F009         	goto	u11960
  6368  001270                     u11961:
  6369  001270  EF77  F009         	goto	l9012
  6370  001274                     u11960:
  6371  001274                     l9002:
  6372                           
  6373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6374  001274  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6375  001278  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6376  00127C  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  6377  001280  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  6378  001284  0E01               	movlw	1
  6379  001286  0100               	movlb	0	; () banked
  6380  001288  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6381  00128A  0E00               	movlw	0
  6382  00128C  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6383  00128E  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6384  001292  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6385  001296                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6386  001296  6AF8               	clrf	tblptru,c
  6387  001298                     	endif
  6388  001298                     	if	0	;tblptru may be non-zero
  6389  001298                     	endif
  6390  001298  0008               	tblrd		*
  6391  00129A  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6392  00129E                     
  6393                           ; BSR set to: 0
  6394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6395  00129E  0E02               	movlw	2
  6396  0012A0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6397  0012A4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6398  0012A8  26DE               	addwf	postinc2,f,c
  6399  0012AA  0E00               	movlw	0
  6400  0012AC  22DD               	addwfc	postdec2,f,c
  6401  0012AE                     
  6402                           ; BSR set to: 0
  6403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6404  0012AE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6405  0012B2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6406  0012B6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6407  0012BA  0E02               	movlw	2
  6408  0012BC  26DE               	addwf	postinc2,f,c
  6409  0012BE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6410  0012C2  0E00               	movlw	0
  6411  0012C4  22DD               	addwfc	postdec2,f,c
  6412  0012C6  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6413  0012CA  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6414  0012CE  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6415  0012D2  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6416  0012D6  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6417  0012DA  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6418  0012DE  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6419  0012E0  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6420  0012E2  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6421  0012E4  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6422  0012E6  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6423  0012E8  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6424  0012EA  EFE6  F008         	goto	l8994
  6425  0012EE                     l9012:
  6426                           
  6427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6428  0012EE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6429  0012F2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6430  0012F6  CFDE FFF6          	movff	postinc2,tblptrl
  6431  0012FA  CFDD FFF7          	movff	postdec2,tblptrh
  6432  0012FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6433  0012FE  6AF8               	clrf	tblptru,c
  6434  001300                     	endif
  6435  001300                     	if	0	;tblptru may be non-zero
  6436  001300                     	endif
  6437  001300  0008               	tblrd		*
  6438  001302  50F5               	movf	tablat,w,c
  6439  001304  0A78               	xorlw	120
  6440  001306  B4D8               	btfsc	status,2,c
  6441  001308  EF88  F009         	goto	u11971
  6442  00130C  EF8A  F009         	goto	u11970
  6443  001310                     u11971:
  6444  001310  EF9D  F009         	goto	l9016
  6445  001314                     u11970:
  6446  001314  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6447  001318  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6448  00131C  CFDE FFF6          	movff	postinc2,tblptrl
  6449  001320  CFDD FFF7          	movff	postdec2,tblptrh
  6450  001324                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6451  001324  6AF8               	clrf	tblptru,c
  6452  001326                     	endif
  6453  001326                     	if	0	;tblptru may be non-zero
  6454  001326                     	endif
  6455  001326  0008               	tblrd		*
  6456  001328  50F5               	movf	tablat,w,c
  6457  00132A  0A58               	xorlw	88
  6458  00132C  A4D8               	btfss	status,2,c
  6459  00132E  EF9B  F009         	goto	u11981
  6460  001332  EF9D  F009         	goto	u11980
  6461  001336                     u11981:
  6462  001336  EFD1  F009         	goto	l9026
  6463  00133A                     u11980:
  6464  00133A                     l9016:
  6465                           
  6466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6467  00133A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6468  00133E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6469  001342  CFDE FFF6          	movff	postinc2,tblptrl
  6470  001346  CFDD FFF7          	movff	postdec2,tblptrh
  6471  00134A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6472  00134A  6AF8               	clrf	tblptru,c
  6473  00134C                     	endif
  6474  00134C                     	if	0	;tblptru may be non-zero
  6475  00134C                     	endif
  6476  00134C  0008               	tblrd		*
  6477  00134E  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6478  001352                     
  6479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6480  001352  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6481  001356  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6482  00135A  2ADE               	incf	postinc2,f,c
  6483  00135C  0E00               	movlw	0
  6484  00135E  22DD               	addwfc	postdec2,f,c
  6485  001360                     
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6487  001360  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6488  001364  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6489  001368  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6490  00136C  0E02               	movlw	2
  6491  00136E  26DE               	addwf	postinc2,f,c
  6492  001370  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6493  001374  0E00               	movlw	0
  6494  001376  22DD               	addwfc	postdec2,f,c
  6495  001378  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6496  00137C  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6497  001380  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6498  001384  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6499  001388  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6500  00138C  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6501  001390  0100               	movlb	0	; () banked
  6502  001392  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6503  001394  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6504  001396  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6505  001398  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6506  00139A  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6507  00139C  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6508  00139E  EFE6  F008         	goto	l8994
  6509  0013A2                     l9026:
  6510                           
  6511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6512  0013A2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6513  0013A6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6514  0013AA  CFDE F003          	movff	postinc2,strncmp@_l
  6515  0013AE  CFDD F004          	movff	postdec2,strncmp@_l+1
  6516  0013B2  0EFB               	movlw	low STR_108
  6517  0013B4  6E05               	movwf	strncmp@_r^0,c
  6518  0013B6  0EFF               	movlw	high STR_108
  6519  0013B8  6E06               	movwf	(strncmp@_r+1)^0,c
  6520  0013BA  0E00               	movlw	0
  6521  0013BC  6E08               	movwf	(strncmp@n+1)^0,c
  6522  0013BE  0E02               	movlw	2
  6523  0013C0  6E07               	movwf	strncmp@n^0,c
  6524  0013C2  EC4A  F026         	call	_strncmp	;wreg free
  6525  0013C6  5003               	movf	?_strncmp^0,w,c
  6526  0013C8  1004               	iorwf	(?_strncmp+1)^0,w,c
  6527  0013CA  B4D8               	btfsc	status,2,c
  6528  0013CC  EFEA  F009         	goto	u11991
  6529  0013D0  EFEC  F009         	goto	u11990
  6530  0013D4                     u11991:
  6531  0013D4  EF07  F00A         	goto	l9030
  6532  0013D8                     u11990:
  6533  0013D8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6534  0013DC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6535  0013E0  CFDE F003          	movff	postinc2,strncmp@_l
  6536  0013E4  CFDD F004          	movff	postdec2,strncmp@_l+1
  6537  0013E8  0EE6               	movlw	low STR_112
  6538  0013EA  6E05               	movwf	strncmp@_r^0,c
  6539  0013EC  0EFF               	movlw	high STR_112
  6540  0013EE  6E06               	movwf	(strncmp@_r+1)^0,c
  6541  0013F0  0E00               	movlw	0
  6542  0013F2  6E08               	movwf	(strncmp@n+1)^0,c
  6543  0013F4  0E02               	movlw	2
  6544  0013F6  6E07               	movwf	strncmp@n^0,c
  6545  0013F8  EC4A  F026         	call	_strncmp	;wreg free
  6546  0013FC  5003               	movf	?_strncmp^0,w,c
  6547  0013FE  1004               	iorwf	(?_strncmp+1)^0,w,c
  6548  001400  A4D8               	btfss	status,2,c
  6549  001402  EF05  F00A         	goto	u12001
  6550  001406  EF07  F00A         	goto	u12000
  6551  00140A                     u12001:
  6552  00140A  EF44  F00A         	goto	l9040
  6553  00140E                     u12000:
  6554  00140E                     l9030:
  6555                           
  6556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6557  00140E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6558  001412  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6559  001416  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  6560  00141A  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  6561  00141E  0E01               	movlw	1
  6562  001420  0100               	movlb	0	; () banked
  6563  001422  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6564  001424  0E00               	movlw	0
  6565  001426  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6566  001428  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6567  00142C  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6568  001430                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6569  001430  6AF8               	clrf	tblptru,c
  6570  001432                     	endif
  6571  001432                     	if	0	;tblptru may be non-zero
  6572  001432                     	endif
  6573  001432  0008               	tblrd		*
  6574  001434  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6575  001438                     
  6576                           ; BSR set to: 0
  6577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6578  001438  0E02               	movlw	2
  6579  00143A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6580  00143E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6581  001442  26DE               	addwf	postinc2,f,c
  6582  001444  0E00               	movlw	0
  6583  001446  22DD               	addwfc	postdec2,f,c
  6584  001448                     
  6585                           ; BSR set to: 0
  6586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6587  001448  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6588  00144C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6589  001450  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  6590  001454  0E02               	movlw	2
  6591  001456  26DE               	addwf	postinc2,f,c
  6592  001458  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  6593  00145C  0E00               	movlw	0
  6594  00145E  22DD               	addwfc	postdec2,f,c
  6595  001460  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6596  001464  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6597  001468  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  6598  00146C  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  6599  001470  C0C0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6600  001474  C0C1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6601  001478  6BE0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6602  00147A  6BE1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6603  00147C  6BE2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6604  00147E  6BE3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6605  001480  6BE4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6606  001482  6BE5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6607  001484  EFE6  F008         	goto	l8994
  6608  001488                     l9040:
  6609                           
  6610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6611  001488  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6612  00148C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6613  001490  CFDE FFF6          	movff	postinc2,tblptrl
  6614  001494  CFDD FFF7          	movff	postdec2,tblptrh
  6615  001498                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6616  001498  6AF8               	clrf	tblptru,c
  6617  00149A                     	endif
  6618  00149A                     	if	0	;tblptru may be non-zero
  6619  00149A                     	endif
  6620  00149A  0008               	tblrd		*
  6621  00149C  50F5               	movf	tablat,w,c
  6622  00149E  0A25               	xorlw	37
  6623  0014A0  A4D8               	btfss	status,2,c
  6624  0014A2  EF55  F00A         	goto	u12011
  6625  0014A6  EF57  F00A         	goto	u12010
  6626  0014AA                     u12011:
  6627  0014AA  EF6F  F00A         	goto	l9050
  6628  0014AE                     u12010:
  6629  0014AE                     
  6630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6631  0014AE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6632  0014B2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6633  0014B6  2ADE               	incf	postinc2,f,c
  6634  0014B8  0E00               	movlw	0
  6635  0014BA  22DD               	addwfc	postdec2,f,c
  6636  0014BC                     
  6637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6638  0014BC  0E00               	movlw	0
  6639  0014BE  6E04               	movwf	(fputc@c+1)^0,c
  6640  0014C0  0E25               	movlw	37
  6641  0014C2  6E03               	movwf	fputc@c^0,c
  6642  0014C4  C0B8  F005         	movff	vfpfcnvrt@fp,fputc@fp
  6643  0014C8  C0B9  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6644  0014CC  EC41  F029         	call	_fputc	;wreg free
  6645  0014D0                     l9046:
  6646                           
  6647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6648  0014D0  0E00               	movlw	0
  6649  0014D2  0100               	movlb	0	; () banked
  6650  0014D4  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6651  0014D6  0E01               	movlw	1
  6652  0014D8  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  6653  0014DA  EF94  F00A         	goto	l753
  6654  0014DE                     l9050:
  6655                           
  6656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6657  0014DE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6658  0014E2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6659  0014E6  2ADE               	incf	postinc2,f,c
  6660  0014E8  0E00               	movlw	0
  6661  0014EA  22DD               	addwfc	postdec2,f,c
  6662  0014EC  EF04  F006         	goto	l8902
  6663  0014F0                     l9056:
  6664                           
  6665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6666  0014F0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6667  0014F4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6668  0014F8  CFDE FFF6          	movff	postinc2,tblptrl
  6669  0014FC  CFDD FFF7          	movff	postdec2,tblptrh
  6670  001500                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6671  001500  6AF8               	clrf	tblptru,c
  6672  001502                     	endif
  6673  001502                     	if	0	;tblptru may be non-zero
  6674  001502                     	endif
  6675  001502  0008               	tblrd		*
  6676  001504  50F5               	movf	tablat,w,c
  6677  001506  6E03               	movwf	fputc@c^0,c
  6678  001508  6A04               	clrf	(fputc@c+1)^0,c
  6679  00150A  C0B8  F005         	movff	vfpfcnvrt@fp,fputc@fp
  6680  00150E  C0B9  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6681  001512  EC41  F029         	call	_fputc	;wreg free
  6682  001516                     
  6683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6684  001516  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6685  00151A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6686  00151E  2ADE               	incf	postinc2,f,c
  6687  001520  0E00               	movlw	0
  6688  001522  22DD               	addwfc	postdec2,f,c
  6689  001524  EF68  F00A         	goto	l9046
  6690  001528                     l753:
  6691  001528  0012               	return		;funcret
  6692  00152A                     __end_of_vfpfcnvrt:
  6693                           	opt callstack 0
  6694                           
  6695 ;; *************** function _xtoa *****************
  6696 ;; Defined at:
  6697 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6700 ;;		 -> vsnprintf@f(6), 
  6701 ;;  d               8   31[COMRAM] unsigned long long 
  6702 ;;  x               1   39[COMRAM] unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  n               8   56[COMRAM] unsigned long long 
  6705 ;;  c               2   66[COMRAM] int 
  6706 ;;  i               2   64[COMRAM] int 
  6707 ;;  w               2   54[COMRAM] int 
  6708 ;;  p               2   52[COMRAM] int 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  2   29[COMRAM] int 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6718 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6720 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;Total ram usage:       39 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    8
  6725 ;; This function calls:
  6726 ;;		_isalpha
  6727 ;;		_isupper
  6728 ;;		_pad
  6729 ;;		_toupper
  6730 ;; This function is called by:
  6731 ;;		_vfpfcnvrt
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text5
  6736  00380C                     __ptext5:
  6737                           	opt callstack 0
  6738  00380C                     _xtoa:
  6739                           	opt callstack 18
  6740  00380C                     
  6741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6742  00380C  BE5C               	btfsc	(_prec+1)^0,7,c
  6743  00380E  EF0B  F01C         	goto	u11191
  6744  003812  EF0D  F01C         	goto	u11190
  6745  003816                     u11191:
  6746  003816  EF0F  F01C         	goto	l8576
  6747  00381A                     u11190:
  6748  00381A                     
  6749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6750  00381A  0100               	movlb	0	; () banked
  6751  00381C  93FC               	bcf	_flags& (0+255),1,b
  6752  00381E                     l8576:
  6753                           
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6755  00381E  BE5C               	btfsc	(_prec+1)^0,7,c
  6756  003820  EF1C  F01C         	goto	u11200
  6757  003824  505C               	movf	(_prec+1)^0,w,c
  6758  003826  E106               	bnz	u11201
  6759  003828  045B               	decf	_prec^0,w,c
  6760  00382A  B0D8               	btfsc	status,0,c
  6761  00382C  EF1A  F01C         	goto	u11201
  6762  003830  EF1C  F01C         	goto	u11200
  6763  003834                     u11201:
  6764  003834  EF22  F01C         	goto	l689
  6765  003838                     u11200:
  6766  003838  0E00               	movlw	0
  6767  00383A  6E36               	movwf	(xtoa@p+1)^0,c
  6768  00383C  0E01               	movlw	1
  6769  00383E  6E35               	movwf	xtoa@p^0,c
  6770  003840  EF26  F01C         	goto	l691
  6771  003844                     l689:
  6772  003844  C05B  F035         	movff	_prec,xtoa@p
  6773  003848  C05C  F036         	movff	_prec+1,xtoa@p+1
  6774  00384C                     l691:
  6775                           
  6776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6777  00384C  C0FA  F037         	movff	_width,xtoa@w
  6778  003850  C0FB  F038         	movff	_width+1,xtoa@w+1
  6779                           
  6780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6781  003854  0100               	movlb	0	; () banked
  6782  003856  A9FC               	btfss	_flags& (0+255),4,b
  6783  003858  EF30  F01C         	goto	u11211
  6784  00385C  EF32  F01C         	goto	u11210
  6785  003860                     u11211:
  6786  003860  EF36  F01C         	goto	l8582
  6787  003864                     u11210:
  6788  003864                     
  6789                           ; BSR set to: 0
  6790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6791  003864  0EFE               	movlw	254
  6792  003866  2637               	addwf	xtoa@w^0,f,c
  6793  003868  0EFF               	movlw	255
  6794  00386A  2238               	addwfc	(xtoa@w+1)^0,f,c
  6795  00386C                     l8582:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6799  00386C  C020  F039         	movff	xtoa@d,xtoa@n
  6800  003870  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  6801  003874  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  6802  003878  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  6803  00387C  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  6804  003880  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  6805  003884  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  6806  003888  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  6807  00388C                     
  6808                           ; BSR set to: 0
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6810  00388C  0E00               	movlw	0
  6811  00388E  6E42               	movwf	(xtoa@i+1)^0,c
  6812  003890  0E4F               	movlw	79
  6813  003892  6E41               	movwf	xtoa@i^0,c
  6814  003894                     
  6815                           ; BSR set to: 0
  6816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6817  003894  0E00               	movlw	0
  6818  003896  0101               	movlb	1	; () banked
  6819  003898  6FD7               	movwf	(_dbuf+79)& (0+255),b
  6820                           
  6821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6822  00389A  EF02  F01D         	goto	l8618
  6823  00389E                     l8588:
  6824                           
  6825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6826  00389E  0641               	decf	xtoa@i^0,f,c
  6827  0038A0  A0D8               	btfss	status,0,c
  6828  0038A2  0642               	decf	(xtoa@i+1)^0,f,c
  6829  0038A4                     
  6830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6831  0038A4  0E0F               	movlw	15
  6832  0038A6  1439               	andwf	xtoa@n^0,w,c
  6833  0038A8  6E43               	movwf	xtoa@c^0,c
  6834  0038AA  6A44               	clrf	(xtoa@c+1)^0,c
  6835  0038AC                     
  6836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6837  0038AC  BE44               	btfsc	(xtoa@c+1)^0,7,c
  6838  0038AE  EF62  F01C         	goto	u11221
  6839  0038B2  5044               	movf	(xtoa@c+1)^0,w,c
  6840  0038B4  E109               	bnz	u11220
  6841  0038B6  0E0A               	movlw	10
  6842  0038B8  5C43               	subwf	xtoa@c^0,w,c
  6843  0038BA  A0D8               	btfss	status,0,c
  6844  0038BC  EF62  F01C         	goto	u11221
  6845  0038C0  EF64  F01C         	goto	u11220
  6846  0038C4                     u11221:
  6847  0038C4  EF6C  F01C         	goto	l8596
  6848  0038C8                     u11220:
  6849  0038C8  0E57               	movlw	87
  6850  0038CA  2443               	addwf	xtoa@c^0,w,c
  6851  0038CC  6E43               	movwf	xtoa@c^0,c
  6852  0038CE  0E00               	movlw	0
  6853  0038D0  2044               	addwfc	(xtoa@c+1)^0,w,c
  6854  0038D2  6E44               	movwf	(xtoa@c+1)^0,c
  6855  0038D4  EF72  F01C         	goto	l698
  6856  0038D8                     l8596:
  6857  0038D8  0E30               	movlw	48
  6858  0038DA  2443               	addwf	xtoa@c^0,w,c
  6859  0038DC  6E43               	movwf	xtoa@c^0,c
  6860  0038DE  0E00               	movlw	0
  6861  0038E0  2044               	addwfc	(xtoa@c+1)^0,w,c
  6862  0038E2  6E44               	movwf	(xtoa@c+1)^0,c
  6863  0038E4                     l698:
  6864  0038E4  0EBF               	movlw	191
  6865  0038E6  6E29               	movwf	??_xtoa^0,c
  6866  0038E8  0EFF               	movlw	255
  6867  0038EA  6E2A               	movwf	(??_xtoa+1)^0,c
  6868  0038EC  5028               	movf	xtoa@x^0,w,c
  6869  0038EE  6E2B               	movwf	(??_xtoa+2)^0,c
  6870  0038F0  6A2C               	clrf	(??_xtoa+3)^0,c
  6871  0038F2  5029               	movf	??_xtoa^0,w,c
  6872  0038F4  262B               	addwf	(??_xtoa+2)^0,f,c
  6873  0038F6  502A               	movf	(??_xtoa+1)^0,w,c
  6874  0038F8  222C               	addwfc	(??_xtoa+3)^0,f,c
  6875  0038FA  502C               	movf	(??_xtoa+3)^0,w,c
  6876  0038FC  E10A               	bnz	u11230
  6877  0038FE  0E1A               	movlw	26
  6878  003900  5C2B               	subwf	(??_xtoa+2)^0,w,c
  6879  003902  A0D8               	btfss	status,0,c
  6880  003904  EF86  F01C         	goto	u11231
  6881  003908  EF89  F01C         	goto	u11230
  6882  00390C                     u11231:
  6883  00390C  0E01               	movlw	1
  6884  00390E  EF8A  F01C         	goto	u11240
  6885  003912                     u11230:
  6886  003912  0E00               	movlw	0
  6887  003914                     u11240:
  6888  003914  6E31               	movwf	_xtoa$1379^0,c
  6889  003916  6A32               	clrf	(_xtoa$1379+1)^0,c
  6890  003918  5031               	movf	_xtoa$1379^0,w,c
  6891  00391A  1032               	iorwf	(_xtoa$1379+1)^0,w,c
  6892  00391C  B4D8               	btfsc	status,2,c
  6893  00391E  EF93  F01C         	goto	u11251
  6894  003922  EF95  F01C         	goto	u11250
  6895  003926                     u11251:
  6896  003926  EFC5  F01C         	goto	l8610
  6897  00392A                     u11250:
  6898  00392A  0E9F               	movlw	159
  6899  00392C  6E29               	movwf	??_xtoa^0,c
  6900  00392E  0EFF               	movlw	255
  6901  003930  6E2A               	movwf	(??_xtoa+1)^0,c
  6902  003932  0E20               	movlw	32
  6903  003934  1043               	iorwf	xtoa@c^0,w,c
  6904  003936  6E2B               	movwf	(??_xtoa+2)^0,c
  6905  003938  0E00               	movlw	0
  6906  00393A  1044               	iorwf	(xtoa@c+1)^0,w,c
  6907  00393C  6E2C               	movwf	(??_xtoa+3)^0,c
  6908  00393E  5029               	movf	??_xtoa^0,w,c
  6909  003940  262B               	addwf	(??_xtoa+2)^0,f,c
  6910  003942  502A               	movf	(??_xtoa+1)^0,w,c
  6911  003944  222C               	addwfc	(??_xtoa+3)^0,f,c
  6912  003946  502C               	movf	(??_xtoa+3)^0,w,c
  6913  003948  E10A               	bnz	u11260
  6914  00394A  0E1A               	movlw	26
  6915  00394C  5C2B               	subwf	(??_xtoa+2)^0,w,c
  6916  00394E  A0D8               	btfss	status,0,c
  6917  003950  EFAC  F01C         	goto	u11261
  6918  003954  EFAF  F01C         	goto	u11260
  6919  003958                     u11261:
  6920  003958  0E01               	movlw	1
  6921  00395A  EFB0  F01C         	goto	u11270
  6922  00395E                     u11260:
  6923  00395E  0E00               	movlw	0
  6924  003960                     u11270:
  6925  003960  6E33               	movwf	_xtoa$1380^0,c
  6926  003962  6A34               	clrf	(_xtoa$1380+1)^0,c
  6927  003964  5033               	movf	_xtoa$1380^0,w,c
  6928  003966  1034               	iorwf	(_xtoa$1380+1)^0,w,c
  6929  003968  B4D8               	btfsc	status,2,c
  6930  00396A  EFB9  F01C         	goto	u11281
  6931  00396E  EFBB  F01C         	goto	u11280
  6932  003972                     u11281:
  6933  003972  EFC5  F01C         	goto	l8610
  6934  003976                     u11280:
  6935  003976                     
  6936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6937  003976  C043  F009         	movff	xtoa@c,toupper@c
  6938  00397A  C044  F00A         	movff	xtoa@c+1,toupper@c+1
  6939  00397E  EC17  F02C         	call	_toupper	;wreg free
  6940  003982  C009  F043         	movff	?_toupper,xtoa@c
  6941  003986  C00A  F044         	movff	?_toupper+1,xtoa@c+1
  6942  00398A                     l8610:
  6943                           
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6945  00398A  0E88               	movlw	low _dbuf
  6946  00398C  2441               	addwf	xtoa@i^0,w,c
  6947  00398E  6ED9               	movwf	fsr2l,c
  6948  003990  0E01               	movlw	high _dbuf
  6949  003992  2042               	addwfc	(xtoa@i+1)^0,w,c
  6950  003994  6EDA               	movwf	fsr2h,c
  6951  003996  C043  FFDF         	movff	xtoa@c,indf2
  6952  00399A                     
  6953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6954  00399A  0635               	decf	xtoa@p^0,f,c
  6955  00399C  A0D8               	btfss	status,0,c
  6956  00399E  0636               	decf	(xtoa@p+1)^0,f,c
  6957  0039A0                     
  6958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6959  0039A0  0637               	decf	xtoa@w^0,f,c
  6960  0039A2  A0D8               	btfss	status,0,c
  6961  0039A4  0638               	decf	(xtoa@w+1)^0,f,c
  6962  0039A6                     
  6963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6964  0039A6  C039  F029         	movff	xtoa@n,??_xtoa
  6965  0039AA  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  6966  0039AE  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  6967  0039B2  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  6968  0039B6  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  6969  0039BA  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  6970  0039BE  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  6971  0039C2  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  6972  0039C6  0E05               	movlw	5
  6973  0039C8  EFEF  F01C         	goto	u11290
  6974  0039CC                     u11295:
  6975  0039CC  90D8               	bcf	status,0,c
  6976  0039CE  3230               	rrcf	(??_xtoa+7)^0,f,c
  6977  0039D0  322F               	rrcf	(??_xtoa+6)^0,f,c
  6978  0039D2  322E               	rrcf	(??_xtoa+5)^0,f,c
  6979  0039D4  322D               	rrcf	(??_xtoa+4)^0,f,c
  6980  0039D6  322C               	rrcf	(??_xtoa+3)^0,f,c
  6981  0039D8  322B               	rrcf	(??_xtoa+2)^0,f,c
  6982  0039DA  322A               	rrcf	(??_xtoa+1)^0,f,c
  6983  0039DC  3229               	rrcf	??_xtoa^0,f,c
  6984  0039DE                     u11290:
  6985  0039DE  2EE8               	decfsz	wreg,f,c
  6986  0039E0  EFE6  F01C         	goto	u11295
  6987  0039E4  C029  F039         	movff	??_xtoa,xtoa@n
  6988  0039E8  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  6989  0039EC  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  6990  0039F0  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  6991  0039F4  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  6992  0039F8  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  6993  0039FC  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  6994  003A00  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  6995  003A04                     l8618:
  6996                           
  6997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6998  003A04  BE42               	btfsc	(xtoa@i+1)^0,7,c
  6999  003A06  EF0E  F01D         	goto	u11301
  7000  003A0A  5042               	movf	(xtoa@i+1)^0,w,c
  7001  003A0C  E109               	bnz	u11300
  7002  003A0E  0E02               	movlw	2
  7003  003A10  5C41               	subwf	xtoa@i^0,w,c
  7004  003A12  A0D8               	btfss	status,0,c
  7005  003A14  EF0E  F01D         	goto	u11301
  7006  003A18  EF10  F01D         	goto	u11300
  7007  003A1C                     u11301:
  7008  003A1C  EF41  F01D         	goto	l712
  7009  003A20                     u11300:
  7010  003A20  5039               	movf	xtoa@n^0,w,c
  7011  003A22  103A               	iorwf	(xtoa@n+1)^0,w,c
  7012  003A24  103B               	iorwf	(xtoa@n+2)^0,w,c
  7013  003A26  103C               	iorwf	(xtoa@n+3)^0,w,c
  7014  003A28  103D               	iorwf	(xtoa@n+4)^0,w,c
  7015  003A2A  103E               	iorwf	(xtoa@n+5)^0,w,c
  7016  003A2C  103F               	iorwf	(xtoa@n+6)^0,w,c
  7017  003A2E  1040               	iorwf	(xtoa@n+7)^0,w,c
  7018  003A30  A4D8               	btfss	status,2,c
  7019  003A32  EF1D  F01D         	goto	u11311
  7020  003A36  EF1F  F01D         	goto	u11310
  7021  003A3A                     u11311:
  7022  003A3A  EF4F  F01C         	goto	l8588
  7023  003A3E                     u11310:
  7024  003A3E  BE36               	btfsc	(xtoa@p+1)^0,7,c
  7025  003A40  EF2C  F01D         	goto	u11320
  7026  003A44  5036               	movf	(xtoa@p+1)^0,w,c
  7027  003A46  E106               	bnz	u11321
  7028  003A48  0435               	decf	xtoa@p^0,w,c
  7029  003A4A  B0D8               	btfsc	status,0,c
  7030  003A4C  EF2A  F01D         	goto	u11321
  7031  003A50  EF2C  F01D         	goto	u11320
  7032  003A54                     u11321:
  7033  003A54  EF4F  F01C         	goto	l8588
  7034  003A58                     u11320:
  7035  003A58  BE38               	btfsc	(xtoa@w+1)^0,7,c
  7036  003A5A  EF37  F01D         	goto	u11331
  7037  003A5E  5038               	movf	(xtoa@w+1)^0,w,c
  7038  003A60  E108               	bnz	u11330
  7039  003A62  0437               	decf	xtoa@w^0,w,c
  7040  003A64  A0D8               	btfss	status,0,c
  7041  003A66  EF37  F01D         	goto	u11331
  7042  003A6A  EF39  F01D         	goto	u11330
  7043  003A6E                     u11331:
  7044  003A6E  EF41  F01D         	goto	l712
  7045  003A72                     u11330:
  7046  003A72  0100               	movlb	0	; () banked
  7047  003A74  B3FC               	btfsc	_flags& (0+255),1,b
  7048  003A76  EF3F  F01D         	goto	u11341
  7049  003A7A  EF41  F01D         	goto	u11340
  7050  003A7E                     u11341:
  7051  003A7E  EF4F  F01C         	goto	l8588
  7052  003A82                     u11340:
  7053  003A82                     l712:
  7054                           
  7055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7056  003A82  0100               	movlb	0	; () banked
  7057  003A84  A9FC               	btfss	_flags& (0+255),4,b
  7058  003A86  EF47  F01D         	goto	u11351
  7059  003A8A  EF49  F01D         	goto	u11350
  7060  003A8E                     u11351:
  7061  003A8E  EF5F  F01D         	goto	l8634
  7062  003A92                     u11350:
  7063  003A92                     
  7064                           ; BSR set to: 0
  7065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7066  003A92  0641               	decf	xtoa@i^0,f,c
  7067  003A94  A0D8               	btfss	status,0,c
  7068  003A96  0642               	decf	(xtoa@i+1)^0,f,c
  7069  003A98                     
  7070                           ; BSR set to: 0
  7071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7072  003A98  0E88               	movlw	low _dbuf
  7073  003A9A  2441               	addwf	xtoa@i^0,w,c
  7074  003A9C  6ED9               	movwf	fsr2l,c
  7075  003A9E  0E01               	movlw	high _dbuf
  7076  003AA0  2042               	addwfc	(xtoa@i+1)^0,w,c
  7077  003AA2  6EDA               	movwf	fsr2h,c
  7078  003AA4  C028  FFDF         	movff	xtoa@x,indf2
  7079  003AA8                     
  7080                           ; BSR set to: 0
  7081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7082  003AA8  0641               	decf	xtoa@i^0,f,c
  7083  003AAA  A0D8               	btfss	status,0,c
  7084  003AAC  0642               	decf	(xtoa@i+1)^0,f,c
  7085                           
  7086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7087  003AAE  0E88               	movlw	low _dbuf
  7088  003AB0  2441               	addwf	xtoa@i^0,w,c
  7089  003AB2  6ED9               	movwf	fsr2l,c
  7090  003AB4  0E01               	movlw	high _dbuf
  7091  003AB6  2042               	addwfc	(xtoa@i+1)^0,w,c
  7092  003AB8  6EDA               	movwf	fsr2h,c
  7093  003ABA  0E30               	movlw	48
  7094  003ABC  6EDF               	movwf	indf2,c
  7095  003ABE                     l8634:
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7099  003ABE  C01E  F013         	movff	xtoa@fp,pad@fp
  7100  003AC2  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  7101  003AC6  0E88               	movlw	low _dbuf
  7102  003AC8  2441               	addwf	xtoa@i^0,w,c
  7103  003ACA  6E15               	movwf	pad@buf^0,c
  7104  003ACC  0E01               	movlw	high _dbuf
  7105  003ACE  2042               	addwfc	(xtoa@i+1)^0,w,c
  7106  003AD0  6E16               	movwf	(pad@buf+1)^0,c
  7107  003AD2  C037  F017         	movff	xtoa@w,pad@p
  7108  003AD6  C038  F018         	movff	xtoa@w+1,pad@p+1
  7109  003ADA  ECA6  F029         	call	_pad	;wreg free
  7110  003ADE  C013  F01E         	movff	?_pad,?_xtoa
  7111  003AE2  C014  F01F         	movff	?_pad+1,?_xtoa+1
  7112  003AE6  0012               	return		;funcret
  7113  003AE8                     __end_of_xtoa:
  7114                           	opt callstack 0
  7115                           
  7116 ;; *************** function _toupper *****************
  7117 ;; Defined at:
  7118 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  c               2    8[COMRAM] int 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;		None
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  2    8[COMRAM] int 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7136 ;;Total ram usage:        8 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    5
  7139 ;; This function calls:
  7140 ;;		_islower
  7141 ;; This function is called by:
  7142 ;;		_xtoa
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text6
  7147  00582E                     __ptext6:
  7148                           	opt callstack 0
  7149  00582E                     _toupper:
  7150                           	opt callstack 20
  7151  00582E  0E9F               	movlw	159
  7152  005830  6E0B               	movwf	??_toupper^0,c
  7153  005832  0EFF               	movlw	255
  7154  005834  6E0C               	movwf	(??_toupper+1)^0,c
  7155  005836  C009  F00D         	movff	toupper@c,??_toupper+2
  7156  00583A  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  7157  00583E  500B               	movf	??_toupper^0,w,c
  7158  005840  260D               	addwf	(??_toupper+2)^0,f,c
  7159  005842  500C               	movf	(??_toupper+1)^0,w,c
  7160  005844  220E               	addwfc	(??_toupper+3)^0,f,c
  7161  005846  500E               	movf	(??_toupper+3)^0,w,c
  7162  005848  E10A               	bnz	u9280
  7163  00584A  0E1A               	movlw	26
  7164  00584C  5C0D               	subwf	(??_toupper+2)^0,w,c
  7165  00584E  A0D8               	btfss	status,0,c
  7166  005850  EF2C  F02C         	goto	u9281
  7167  005854  EF2F  F02C         	goto	u9280
  7168  005858                     u9281:
  7169  005858  0E01               	movlw	1
  7170  00585A  EF30  F02C         	goto	u9290
  7171  00585E                     u9280:
  7172  00585E  0E00               	movlw	0
  7173  005860                     u9290:
  7174  005860  6E0F               	movwf	_toupper$2115^0,c
  7175  005862  6A10               	clrf	(_toupper$2115+1)^0,c
  7176  005864  500F               	movf	_toupper$2115^0,w,c
  7177  005866  1010               	iorwf	(_toupper$2115+1)^0,w,c
  7178  005868  B4D8               	btfsc	status,2,c
  7179  00586A  EF39  F02C         	goto	u9301
  7180  00586E  EF3B  F02C         	goto	u9300
  7181  005872                     u9301:
  7182  005872  EF41  F02C         	goto	l1637
  7183  005876                     u9300:
  7184  005876  0E5F               	movlw	95
  7185  005878  1409               	andwf	toupper@c^0,w,c
  7186  00587A  6E09               	movwf	?_toupper^0,c
  7187  00587C  6A0A               	clrf	(?_toupper+1)^0,c
  7188  00587E  EF45  F02C         	goto	l1642
  7189  005882                     l1637:
  7190  005882  C009  F009         	movff	toupper@c,?_toupper
  7191  005886  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  7192  00588A                     l1642:
  7193  00588A  0012               	return		;funcret
  7194  00588C                     __end_of_toupper:
  7195                           	opt callstack 0
  7196                           
  7197 ;; *************** function _islower *****************
  7198 ;; Defined at:
  7199 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  c               2    2[COMRAM] int 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  2    2[COMRAM] int 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7216 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7217 ;;Total ram usage:        6 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    4
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_toupper
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           	psect	text7
  7228  005C40                     __ptext7:
  7229                           	opt callstack 0
  7230  005C40                     _islower:
  7231                           	opt callstack 20
  7232  005C40  0E9F               	movlw	159
  7233  005C42  6E05               	movwf	??_islower^0,c
  7234  005C44  0EFF               	movlw	255
  7235  005C46  6E06               	movwf	(??_islower+1)^0,c
  7236  005C48  C003  F007         	movff	islower@c,??_islower+2
  7237  005C4C  C004  F008         	movff	islower@c+1,??_islower+3
  7238  005C50  5005               	movf	??_islower^0,w,c
  7239  005C52  2607               	addwf	(??_islower+2)^0,f,c
  7240  005C54  5006               	movf	(??_islower+1)^0,w,c
  7241  005C56  2208               	addwfc	(??_islower+3)^0,f,c
  7242  005C58  5008               	movf	(??_islower+3)^0,w,c
  7243  005C5A  E10A               	bnz	u8970
  7244  005C5C  0E1A               	movlw	26
  7245  005C5E  5C07               	subwf	(??_islower+2)^0,w,c
  7246  005C60  A0D8               	btfss	status,0,c
  7247  005C62  EF35  F02E         	goto	u8971
  7248  005C66  EF38  F02E         	goto	u8970
  7249  005C6A                     u8971:
  7250  005C6A  0E01               	movlw	1
  7251  005C6C  EF39  F02E         	goto	u8980
  7252  005C70                     u8970:
  7253  005C70  0E00               	movlw	0
  7254  005C72                     u8980:
  7255  005C72  6E03               	movwf	?_islower^0,c
  7256  005C74  6A04               	clrf	(?_islower+1)^0,c
  7257  005C76  0012               	return		;funcret
  7258  005C78                     __end_of_islower:
  7259                           	opt callstack 0
  7260                           
  7261 ;; *************** function _isalpha *****************
  7262 ;; Defined at:
  7263 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  c               2    2[COMRAM] int 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  2    2[COMRAM] int 
  7270 ;; Registers used:
  7271 ;;		wreg, status,2, status,0
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7281 ;;Total ram usage:        6 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:    4
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_xtoa
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text8
  7292  005BCA                     __ptext8:
  7293                           	opt callstack 0
  7294  005BCA                     _isalpha:
  7295                           	opt callstack 21
  7296  005BCA  0E9F               	movlw	159
  7297  005BCC  6E05               	movwf	??_isalpha^0,c
  7298  005BCE  0EFF               	movlw	255
  7299  005BD0  6E06               	movwf	(??_isalpha+1)^0,c
  7300  005BD2  0E20               	movlw	32
  7301  005BD4  1003               	iorwf	isalpha@c^0,w,c
  7302  005BD6  6E07               	movwf	(??_isalpha+2)^0,c
  7303  005BD8  0E00               	movlw	0
  7304  005BDA  1004               	iorwf	(isalpha@c+1)^0,w,c
  7305  005BDC  6E08               	movwf	(??_isalpha+3)^0,c
  7306  005BDE  5005               	movf	??_isalpha^0,w,c
  7307  005BE0  2607               	addwf	(??_isalpha+2)^0,f,c
  7308  005BE2  5006               	movf	(??_isalpha+1)^0,w,c
  7309  005BE4  2208               	addwfc	(??_isalpha+3)^0,f,c
  7310  005BE6  5008               	movf	(??_isalpha+3)^0,w,c
  7311  005BE8  E10A               	bnz	u9260
  7312  005BEA  0E1A               	movlw	26
  7313  005BEC  5C07               	subwf	(??_isalpha+2)^0,w,c
  7314  005BEE  A0D8               	btfss	status,0,c
  7315  005BF0  EFFC  F02D         	goto	u9261
  7316  005BF4  EFFF  F02D         	goto	u9260
  7317  005BF8                     u9261:
  7318  005BF8  0E01               	movlw	1
  7319  005BFA  EF00  F02E         	goto	u9270
  7320  005BFE                     u9260:
  7321  005BFE  0E00               	movlw	0
  7322  005C00                     u9270:
  7323  005C00  6E03               	movwf	?_isalpha^0,c
  7324  005C02  6A04               	clrf	(?_isalpha+1)^0,c
  7325  005C04  0012               	return		;funcret
  7326  005C06                     __end_of_isalpha:
  7327                           	opt callstack 0
  7328                           
  7329 ;; *************** function _utoa *****************
  7330 ;; Defined at:
  7331 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  7334 ;;		 -> vsnprintf@f(6), 
  7335 ;;  d               8   31[COMRAM] unsigned long long 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  n               8   51[COMRAM] unsigned long long 
  7338 ;;  i               2   59[COMRAM] int 
  7339 ;;  w               2   49[COMRAM] int 
  7340 ;;  p               2   47[COMRAM] int 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  2   29[COMRAM] int 
  7343 ;; Registers used:
  7344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7350 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7351 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7352 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7353 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7354 ;;Total ram usage:       32 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    8
  7357 ;; This function calls:
  7358 ;;		___lodiv
  7359 ;;		___lomod
  7360 ;;		_pad
  7361 ;; This function is called by:
  7362 ;;		_vfpfcnvrt
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text9
  7367  003CFE                     __ptext9:
  7368                           	opt callstack 0
  7369  003CFE                     _utoa:
  7370                           	opt callstack 18
  7371  003CFE                     
  7372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7373  003CFE  BE5C               	btfsc	(_prec+1)^0,7,c
  7374  003D00  EF84  F01E         	goto	u11121
  7375  003D04  EF86  F01E         	goto	u11120
  7376  003D08                     u11121:
  7377  003D08  EF88  F01E         	goto	l8540
  7378  003D0C                     u11120:
  7379  003D0C                     
  7380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7381  003D0C  0100               	movlb	0	; () banked
  7382  003D0E  93FC               	bcf	_flags& (0+255),1,b
  7383  003D10                     l8540:
  7384                           
  7385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7386  003D10  BE5C               	btfsc	(_prec+1)^0,7,c
  7387  003D12  EF95  F01E         	goto	u11130
  7388  003D16  505C               	movf	(_prec+1)^0,w,c
  7389  003D18  E106               	bnz	u11131
  7390  003D1A  045B               	decf	_prec^0,w,c
  7391  003D1C  B0D8               	btfsc	status,0,c
  7392  003D1E  EF93  F01E         	goto	u11131
  7393  003D22  EF95  F01E         	goto	u11130
  7394  003D26                     u11131:
  7395  003D26  EF9B  F01E         	goto	l674
  7396  003D2A                     u11130:
  7397  003D2A  0E00               	movlw	0
  7398  003D2C  6E31               	movwf	(utoa@p+1)^0,c
  7399  003D2E  0E01               	movlw	1
  7400  003D30  6E30               	movwf	utoa@p^0,c
  7401  003D32  EF9F  F01E         	goto	l676
  7402  003D36                     l674:
  7403  003D36  C05B  F030         	movff	_prec,utoa@p
  7404  003D3A  C05C  F031         	movff	_prec+1,utoa@p+1
  7405  003D3E                     l676:
  7406                           
  7407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7408  003D3E  C0FA  F032         	movff	_width,utoa@w
  7409  003D42  C0FB  F033         	movff	_width+1,utoa@w+1
  7410                           
  7411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7412  003D46  C020  F034         	movff	utoa@d,utoa@n
  7413  003D4A  C021  F035         	movff	utoa@d+1,utoa@n+1
  7414  003D4E  C022  F036         	movff	utoa@d+2,utoa@n+2
  7415  003D52  C023  F037         	movff	utoa@d+3,utoa@n+3
  7416  003D56  C024  F038         	movff	utoa@d+4,utoa@n+4
  7417  003D5A  C025  F039         	movff	utoa@d+5,utoa@n+5
  7418  003D5E  C026  F03A         	movff	utoa@d+6,utoa@n+6
  7419  003D62  C027  F03B         	movff	utoa@d+7,utoa@n+7
  7420  003D66                     
  7421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7422  003D66  0E00               	movlw	0
  7423  003D68  6E3D               	movwf	(utoa@i+1)^0,c
  7424  003D6A  0E4F               	movlw	79
  7425  003D6C  6E3C               	movwf	utoa@i^0,c
  7426  003D6E                     
  7427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7428  003D6E  0E00               	movlw	0
  7429  003D70  0101               	movlb	1	; () banked
  7430  003D72  6FD7               	movwf	(_dbuf+79)& (0+255),b
  7431                           
  7432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7433  003D74  EF32  F01F         	goto	l8558
  7434  003D78                     l8548:
  7435                           
  7436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7437  003D78  063C               	decf	utoa@i^0,f,c
  7438  003D7A  A0D8               	btfss	status,0,c
  7439  003D7C  063D               	decf	(utoa@i+1)^0,f,c
  7440  003D7E                     
  7441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7442  003D7E  0E88               	movlw	low _dbuf
  7443  003D80  243C               	addwf	utoa@i^0,w,c
  7444  003D82  6ED9               	movwf	fsr2l,c
  7445  003D84  0E01               	movlw	high _dbuf
  7446  003D86  203D               	addwfc	(utoa@i+1)^0,w,c
  7447  003D88  6EDA               	movwf	fsr2h,c
  7448  003D8A  C034  F003         	movff	utoa@n,___lomod@dividend
  7449  003D8E  C035  F004         	movff	utoa@n+1,___lomod@dividend+1
  7450  003D92  C036  F005         	movff	utoa@n+2,___lomod@dividend+2
  7451  003D96  C037  F006         	movff	utoa@n+3,___lomod@dividend+3
  7452  003D9A  C038  F007         	movff	utoa@n+4,___lomod@dividend+4
  7453  003D9E  C039  F008         	movff	utoa@n+5,___lomod@dividend+5
  7454  003DA2  C03A  F009         	movff	utoa@n+6,___lomod@dividend+6
  7455  003DA6  C03B  F00A         	movff	utoa@n+7,___lomod@dividend+7
  7456  003DAA  0E0A               	movlw	10
  7457  003DAC  6E0B               	movwf	___lomod@divisor^0,c
  7458  003DAE  0E00               	movlw	0
  7459  003DB0  6E0C               	movwf	(___lomod@divisor+1)^0,c
  7460  003DB2  0E00               	movlw	0
  7461  003DB4  6E0D               	movwf	(___lomod@divisor+2)^0,c
  7462  003DB6  0E00               	movlw	0
  7463  003DB8  6E0E               	movwf	(___lomod@divisor+3)^0,c
  7464  003DBA  0E00               	movlw	0
  7465  003DBC  6E0F               	movwf	(___lomod@divisor+4)^0,c
  7466  003DBE  0E00               	movlw	0
  7467  003DC0  6E10               	movwf	(___lomod@divisor+5)^0,c
  7468  003DC2  0E00               	movlw	0
  7469  003DC4  6E11               	movwf	(___lomod@divisor+6)^0,c
  7470  003DC6  0E00               	movlw	0
  7471  003DC8  6E12               	movwf	(___lomod@divisor+7)^0,c
  7472  003DCA  ECD9  F028         	call	___lomod	;wreg free
  7473  003DCE  C003  F028         	movff	?___lomod,??_utoa
  7474  003DD2  C004  F029         	movff	?___lomod+1,??_utoa+1
  7475  003DD6  C005  F02A         	movff	?___lomod+2,??_utoa+2
  7476  003DDA  C006  F02B         	movff	?___lomod+3,??_utoa+3
  7477  003DDE  C007  F02C         	movff	?___lomod+4,??_utoa+4
  7478  003DE2  C008  F02D         	movff	?___lomod+5,??_utoa+5
  7479  003DE6  C009  F02E         	movff	?___lomod+6,??_utoa+6
  7480  003DEA  C00A  F02F         	movff	?___lomod+7,??_utoa+7
  7481  003DEE  5028               	movf	??_utoa^0,w,c
  7482  003DF0  0F30               	addlw	48
  7483  003DF2  6EDF               	movwf	indf2,c
  7484  003DF4                     
  7485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7486  003DF4  0630               	decf	utoa@p^0,f,c
  7487  003DF6  A0D8               	btfss	status,0,c
  7488  003DF8  0631               	decf	(utoa@p+1)^0,f,c
  7489  003DFA                     
  7490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7491  003DFA  0632               	decf	utoa@w^0,f,c
  7492  003DFC  A0D8               	btfss	status,0,c
  7493  003DFE  0633               	decf	(utoa@w+1)^0,f,c
  7494  003E00                     
  7495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7496  003E00  C034  F003         	movff	utoa@n,___lodiv@dividend
  7497  003E04  C035  F004         	movff	utoa@n+1,___lodiv@dividend+1
  7498  003E08  C036  F005         	movff	utoa@n+2,___lodiv@dividend+2
  7499  003E0C  C037  F006         	movff	utoa@n+3,___lodiv@dividend+3
  7500  003E10  C038  F007         	movff	utoa@n+4,___lodiv@dividend+4
  7501  003E14  C039  F008         	movff	utoa@n+5,___lodiv@dividend+5
  7502  003E18  C03A  F009         	movff	utoa@n+6,___lodiv@dividend+6
  7503  003E1C  C03B  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  7504  003E20  0E0A               	movlw	10
  7505  003E22  6E0B               	movwf	___lodiv@divisor^0,c
  7506  003E24  0E00               	movlw	0
  7507  003E26  6E0C               	movwf	(___lodiv@divisor+1)^0,c
  7508  003E28  0E00               	movlw	0
  7509  003E2A  6E0D               	movwf	(___lodiv@divisor+2)^0,c
  7510  003E2C  0E00               	movlw	0
  7511  003E2E  6E0E               	movwf	(___lodiv@divisor+3)^0,c
  7512  003E30  0E00               	movlw	0
  7513  003E32  6E0F               	movwf	(___lodiv@divisor+4)^0,c
  7514  003E34  0E00               	movlw	0
  7515  003E36  6E10               	movwf	(___lodiv@divisor+5)^0,c
  7516  003E38  0E00               	movlw	0
  7517  003E3A  6E11               	movwf	(___lodiv@divisor+6)^0,c
  7518  003E3C  0E00               	movlw	0
  7519  003E3E  6E12               	movwf	(___lodiv@divisor+7)^0,c
  7520  003E40  EC61  F028         	call	___lodiv	;wreg free
  7521  003E44  C003  F034         	movff	?___lodiv,utoa@n
  7522  003E48  C004  F035         	movff	?___lodiv+1,utoa@n+1
  7523  003E4C  C005  F036         	movff	?___lodiv+2,utoa@n+2
  7524  003E50  C006  F037         	movff	?___lodiv+3,utoa@n+3
  7525  003E54  C007  F038         	movff	?___lodiv+4,utoa@n+4
  7526  003E58  C008  F039         	movff	?___lodiv+5,utoa@n+5
  7527  003E5C  C009  F03A         	movff	?___lodiv+6,utoa@n+6
  7528  003E60  C00A  F03B         	movff	?___lodiv+7,utoa@n+7
  7529  003E64                     l8558:
  7530                           
  7531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7532  003E64  503C               	movf	utoa@i^0,w,c
  7533  003E66  103D               	iorwf	(utoa@i+1)^0,w,c
  7534  003E68  B4D8               	btfsc	status,2,c
  7535  003E6A  EF39  F01F         	goto	u11141
  7536  003E6E  EF3B  F01F         	goto	u11140
  7537  003E72                     u11141:
  7538  003E72  EF6C  F01F         	goto	l8568
  7539  003E76                     u11140:
  7540  003E76  5034               	movf	utoa@n^0,w,c
  7541  003E78  1035               	iorwf	(utoa@n+1)^0,w,c
  7542  003E7A  1036               	iorwf	(utoa@n+2)^0,w,c
  7543  003E7C  1037               	iorwf	(utoa@n+3)^0,w,c
  7544  003E7E  1038               	iorwf	(utoa@n+4)^0,w,c
  7545  003E80  1039               	iorwf	(utoa@n+5)^0,w,c
  7546  003E82  103A               	iorwf	(utoa@n+6)^0,w,c
  7547  003E84  103B               	iorwf	(utoa@n+7)^0,w,c
  7548  003E86  A4D8               	btfss	status,2,c
  7549  003E88  EF48  F01F         	goto	u11151
  7550  003E8C  EF4A  F01F         	goto	u11150
  7551  003E90                     u11151:
  7552  003E90  EFBC  F01E         	goto	l8548
  7553  003E94                     u11150:
  7554  003E94  BE31               	btfsc	(utoa@p+1)^0,7,c
  7555  003E96  EF57  F01F         	goto	u11160
  7556  003E9A  5031               	movf	(utoa@p+1)^0,w,c
  7557  003E9C  E106               	bnz	u11161
  7558  003E9E  0430               	decf	utoa@p^0,w,c
  7559  003EA0  B0D8               	btfsc	status,0,c
  7560  003EA2  EF55  F01F         	goto	u11161
  7561  003EA6  EF57  F01F         	goto	u11160
  7562  003EAA                     u11161:
  7563  003EAA  EFBC  F01E         	goto	l8548
  7564  003EAE                     u11160:
  7565  003EAE  BE33               	btfsc	(utoa@w+1)^0,7,c
  7566  003EB0  EF62  F01F         	goto	u11171
  7567  003EB4  5033               	movf	(utoa@w+1)^0,w,c
  7568  003EB6  E108               	bnz	u11170
  7569  003EB8  0432               	decf	utoa@w^0,w,c
  7570  003EBA  A0D8               	btfss	status,0,c
  7571  003EBC  EF62  F01F         	goto	u11171
  7572  003EC0  EF64  F01F         	goto	u11170
  7573  003EC4                     u11171:
  7574  003EC4  EF6C  F01F         	goto	l8568
  7575  003EC8                     u11170:
  7576  003EC8  0100               	movlb	0	; () banked
  7577  003ECA  B3FC               	btfsc	_flags& (0+255),1,b
  7578  003ECC  EF6A  F01F         	goto	u11181
  7579  003ED0  EF6C  F01F         	goto	u11180
  7580  003ED4                     u11181:
  7581  003ED4  EFBC  F01E         	goto	l8548
  7582  003ED8                     u11180:
  7583  003ED8                     l8568:
  7584                           
  7585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7586  003ED8  C01E  F013         	movff	utoa@fp,pad@fp
  7587  003EDC  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  7588  003EE0  0E88               	movlw	low _dbuf
  7589  003EE2  243C               	addwf	utoa@i^0,w,c
  7590  003EE4  6E15               	movwf	pad@buf^0,c
  7591  003EE6  0E01               	movlw	high _dbuf
  7592  003EE8  203D               	addwfc	(utoa@i+1)^0,w,c
  7593  003EEA  6E16               	movwf	(pad@buf+1)^0,c
  7594  003EEC  C032  F017         	movff	utoa@w,pad@p
  7595  003EF0  C033  F018         	movff	utoa@w+1,pad@p+1
  7596  003EF4  ECA6  F029         	call	_pad	;wreg free
  7597  003EF8  C013  F01E         	movff	?_pad,?_utoa
  7598  003EFC  C014  F01F         	movff	?_pad+1,?_utoa+1
  7599  003F00  0012               	return		;funcret
  7600  003F02                     __end_of_utoa:
  7601                           	opt callstack 0
  7602                           
  7603 ;; *************** function ___lomod *****************
  7604 ;; Defined at:
  7605 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  dividend        8    2[COMRAM] unsigned long long 
  7608 ;;  divisor         8   10[COMRAM] unsigned long long 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  counter         1   18[COMRAM] unsigned char 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  8    2[COMRAM] unsigned long long 
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, status,0
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7620 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7623 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7624 ;;Total ram usage:       17 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    4
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_utoa
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text10
  7635  0051B2                     __ptext10:
  7636                           	opt callstack 0
  7637  0051B2                     ___lomod:
  7638                           	opt callstack 21
  7639  0051B2  500B               	movf	___lomod@divisor^0,w,c
  7640  0051B4  100C               	iorwf	(___lomod@divisor+1)^0,w,c
  7641  0051B6  100D               	iorwf	(___lomod@divisor+2)^0,w,c
  7642  0051B8  100E               	iorwf	(___lomod@divisor+3)^0,w,c
  7643  0051BA  100F               	iorwf	(___lomod@divisor+4)^0,w,c
  7644  0051BC  1010               	iorwf	(___lomod@divisor+5)^0,w,c
  7645  0051BE  1011               	iorwf	(___lomod@divisor+6)^0,w,c
  7646  0051C0  1012               	iorwf	(___lomod@divisor+7)^0,w,c
  7647  0051C2  B4D8               	btfsc	status,2,c
  7648  0051C4  EFE6  F028         	goto	u10201
  7649  0051C8  EFE8  F028         	goto	u10200
  7650  0051CC                     u10201:
  7651  0051CC  EF30  F029         	goto	l1257
  7652  0051D0                     u10200:
  7653  0051D0  0E01               	movlw	1
  7654  0051D2  6E13               	movwf	___lomod@counter^0,c
  7655  0051D4  EFF6  F028         	goto	l8050
  7656  0051D8                     l8048:
  7657  0051D8  90D8               	bcf	status,0,c
  7658  0051DA  360B               	rlcf	___lomod@divisor^0,f,c
  7659  0051DC  360C               	rlcf	(___lomod@divisor+1)^0,f,c
  7660  0051DE  360D               	rlcf	(___lomod@divisor+2)^0,f,c
  7661  0051E0  360E               	rlcf	(___lomod@divisor+3)^0,f,c
  7662  0051E2  360F               	rlcf	(___lomod@divisor+4)^0,f,c
  7663  0051E4  3610               	rlcf	(___lomod@divisor+5)^0,f,c
  7664  0051E6  3611               	rlcf	(___lomod@divisor+6)^0,f,c
  7665  0051E8  3612               	rlcf	(___lomod@divisor+7)^0,f,c
  7666  0051EA  2A13               	incf	___lomod@counter^0,f,c
  7667  0051EC                     l8050:
  7668  0051EC  AE12               	btfss	(___lomod@divisor+7)^0,7,c
  7669  0051EE  EFFB  F028         	goto	u10211
  7670  0051F2  EFFD  F028         	goto	u10210
  7671  0051F6                     u10211:
  7672  0051F6  EFEC  F028         	goto	l8048
  7673  0051FA                     u10210:
  7674  0051FA                     l8052:
  7675  0051FA  500B               	movf	___lomod@divisor^0,w,c
  7676  0051FC  5C03               	subwf	___lomod@dividend^0,w,c
  7677  0051FE  500C               	movf	(___lomod@divisor+1)^0,w,c
  7678  005200  5804               	subwfb	(___lomod@dividend+1)^0,w,c
  7679  005202  500D               	movf	(___lomod@divisor+2)^0,w,c
  7680  005204  5805               	subwfb	(___lomod@dividend+2)^0,w,c
  7681  005206  500E               	movf	(___lomod@divisor+3)^0,w,c
  7682  005208  5806               	subwfb	(___lomod@dividend+3)^0,w,c
  7683  00520A  500F               	movf	(___lomod@divisor+4)^0,w,c
  7684  00520C  5807               	subwfb	(___lomod@dividend+4)^0,w,c
  7685  00520E  5010               	movf	(___lomod@divisor+5)^0,w,c
  7686  005210  5808               	subwfb	(___lomod@dividend+5)^0,w,c
  7687  005212  5011               	movf	(___lomod@divisor+6)^0,w,c
  7688  005214  5809               	subwfb	(___lomod@dividend+6)^0,w,c
  7689  005216  5012               	movf	(___lomod@divisor+7)^0,w,c
  7690  005218  580A               	subwfb	(___lomod@dividend+7)^0,w,c
  7691  00521A  A0D8               	btfss	status,0,c
  7692  00521C  EF12  F029         	goto	u10221
  7693  005220  EF14  F029         	goto	u10220
  7694  005224                     u10221:
  7695  005224  EF24  F029         	goto	l8056
  7696  005228                     u10220:
  7697  005228  500B               	movf	___lomod@divisor^0,w,c
  7698  00522A  5E03               	subwf	___lomod@dividend^0,f,c
  7699  00522C  500C               	movf	(___lomod@divisor+1)^0,w,c
  7700  00522E  5A04               	subwfb	(___lomod@dividend+1)^0,f,c
  7701  005230  500D               	movf	(___lomod@divisor+2)^0,w,c
  7702  005232  5A05               	subwfb	(___lomod@dividend+2)^0,f,c
  7703  005234  500E               	movf	(___lomod@divisor+3)^0,w,c
  7704  005236  5A06               	subwfb	(___lomod@dividend+3)^0,f,c
  7705  005238  500F               	movf	(___lomod@divisor+4)^0,w,c
  7706  00523A  5A07               	subwfb	(___lomod@dividend+4)^0,f,c
  7707  00523C  5010               	movf	(___lomod@divisor+5)^0,w,c
  7708  00523E  5A08               	subwfb	(___lomod@dividend+5)^0,f,c
  7709  005240  5011               	movf	(___lomod@divisor+6)^0,w,c
  7710  005242  5A09               	subwfb	(___lomod@dividend+6)^0,f,c
  7711  005244  5012               	movf	(___lomod@divisor+7)^0,w,c
  7712  005246  5A0A               	subwfb	(___lomod@dividend+7)^0,f,c
  7713  005248                     l8056:
  7714  005248  90D8               	bcf	status,0,c
  7715  00524A  3212               	rrcf	(___lomod@divisor+7)^0,f,c
  7716  00524C  3211               	rrcf	(___lomod@divisor+6)^0,f,c
  7717  00524E  3210               	rrcf	(___lomod@divisor+5)^0,f,c
  7718  005250  320F               	rrcf	(___lomod@divisor+4)^0,f,c
  7719  005252  320E               	rrcf	(___lomod@divisor+3)^0,f,c
  7720  005254  320D               	rrcf	(___lomod@divisor+2)^0,f,c
  7721  005256  320C               	rrcf	(___lomod@divisor+1)^0,f,c
  7722  005258  320B               	rrcf	___lomod@divisor^0,f,c
  7723  00525A  2E13               	decfsz	___lomod@counter^0,f,c
  7724  00525C  EFFD  F028         	goto	l8052
  7725  005260                     l1257:
  7726  005260  C003  F003         	movff	___lomod@dividend,?___lomod
  7727  005264  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  7728  005268  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  7729  00526C  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  7730  005270  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  7731  005274  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  7732  005278  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  7733  00527C  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  7734  005280  0012               	return		;funcret
  7735  005282                     __end_of___lomod:
  7736                           	opt callstack 0
  7737                           
  7738 ;; *************** function ___lodiv *****************
  7739 ;; Defined at:
  7740 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  dividend        8    2[COMRAM] unsigned long long 
  7743 ;;  divisor         8   10[COMRAM] unsigned long long 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  quotient        8   18[COMRAM] unsigned long long 
  7746 ;;  counter         1   26[COMRAM] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  8    2[COMRAM] unsigned long long 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7756 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7759 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7760 ;;Total ram usage:       25 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    4
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_utoa
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text11
  7771  0050C2                     __ptext11:
  7772                           	opt callstack 0
  7773  0050C2                     ___lodiv:
  7774                           	opt callstack 21
  7775  0050C2  EE20  F013         	lfsr	2,___lodiv@quotient
  7776  0050C6  0E07               	movlw	7
  7777  0050C8                     u10161:
  7778  0050C8  6ADE               	clrf	postinc2,c
  7779  0050CA  06E8               	decf	wreg,f,c
  7780  0050CC  E2FD               	bc	u10161
  7781  0050CE  500B               	movf	___lodiv@divisor^0,w,c
  7782  0050D0  100C               	iorwf	(___lodiv@divisor+1)^0,w,c
  7783  0050D2  100D               	iorwf	(___lodiv@divisor+2)^0,w,c
  7784  0050D4  100E               	iorwf	(___lodiv@divisor+3)^0,w,c
  7785  0050D6  100F               	iorwf	(___lodiv@divisor+4)^0,w,c
  7786  0050D8  1010               	iorwf	(___lodiv@divisor+5)^0,w,c
  7787  0050DA  1011               	iorwf	(___lodiv@divisor+6)^0,w,c
  7788  0050DC  1012               	iorwf	(___lodiv@divisor+7)^0,w,c
  7789  0050DE  B4D8               	btfsc	status,2,c
  7790  0050E0  EF74  F028         	goto	u10171
  7791  0050E4  EF76  F028         	goto	u10170
  7792  0050E8                     u10171:
  7793  0050E8  EFC8  F028         	goto	l1247
  7794  0050EC                     u10170:
  7795  0050EC  0E01               	movlw	1
  7796  0050EE  6E1B               	movwf	___lodiv@counter^0,c
  7797  0050F0  EF84  F028         	goto	l8030
  7798  0050F4                     l8028:
  7799  0050F4  90D8               	bcf	status,0,c
  7800  0050F6  360B               	rlcf	___lodiv@divisor^0,f,c
  7801  0050F8  360C               	rlcf	(___lodiv@divisor+1)^0,f,c
  7802  0050FA  360D               	rlcf	(___lodiv@divisor+2)^0,f,c
  7803  0050FC  360E               	rlcf	(___lodiv@divisor+3)^0,f,c
  7804  0050FE  360F               	rlcf	(___lodiv@divisor+4)^0,f,c
  7805  005100  3610               	rlcf	(___lodiv@divisor+5)^0,f,c
  7806  005102  3611               	rlcf	(___lodiv@divisor+6)^0,f,c
  7807  005104  3612               	rlcf	(___lodiv@divisor+7)^0,f,c
  7808  005106  2A1B               	incf	___lodiv@counter^0,f,c
  7809  005108                     l8030:
  7810  005108  AE12               	btfss	(___lodiv@divisor+7)^0,7,c
  7811  00510A  EF89  F028         	goto	u10181
  7812  00510E  EF8B  F028         	goto	u10180
  7813  005112                     u10181:
  7814  005112  EF7A  F028         	goto	l8028
  7815  005116                     u10180:
  7816  005116                     l8032:
  7817  005116  90D8               	bcf	status,0,c
  7818  005118  3613               	rlcf	___lodiv@quotient^0,f,c
  7819  00511A  3614               	rlcf	(___lodiv@quotient+1)^0,f,c
  7820  00511C  3615               	rlcf	(___lodiv@quotient+2)^0,f,c
  7821  00511E  3616               	rlcf	(___lodiv@quotient+3)^0,f,c
  7822  005120  3617               	rlcf	(___lodiv@quotient+4)^0,f,c
  7823  005122  3618               	rlcf	(___lodiv@quotient+5)^0,f,c
  7824  005124  3619               	rlcf	(___lodiv@quotient+6)^0,f,c
  7825  005126  361A               	rlcf	(___lodiv@quotient+7)^0,f,c
  7826  005128  500B               	movf	___lodiv@divisor^0,w,c
  7827  00512A  5C03               	subwf	___lodiv@dividend^0,w,c
  7828  00512C  500C               	movf	(___lodiv@divisor+1)^0,w,c
  7829  00512E  5804               	subwfb	(___lodiv@dividend+1)^0,w,c
  7830  005130  500D               	movf	(___lodiv@divisor+2)^0,w,c
  7831  005132  5805               	subwfb	(___lodiv@dividend+2)^0,w,c
  7832  005134  500E               	movf	(___lodiv@divisor+3)^0,w,c
  7833  005136  5806               	subwfb	(___lodiv@dividend+3)^0,w,c
  7834  005138  500F               	movf	(___lodiv@divisor+4)^0,w,c
  7835  00513A  5807               	subwfb	(___lodiv@dividend+4)^0,w,c
  7836  00513C  5010               	movf	(___lodiv@divisor+5)^0,w,c
  7837  00513E  5808               	subwfb	(___lodiv@dividend+5)^0,w,c
  7838  005140  5011               	movf	(___lodiv@divisor+6)^0,w,c
  7839  005142  5809               	subwfb	(___lodiv@dividend+6)^0,w,c
  7840  005144  5012               	movf	(___lodiv@divisor+7)^0,w,c
  7841  005146  580A               	subwfb	(___lodiv@dividend+7)^0,w,c
  7842  005148  A0D8               	btfss	status,0,c
  7843  00514A  EFA9  F028         	goto	u10191
  7844  00514E  EFAB  F028         	goto	u10190
  7845  005152                     u10191:
  7846  005152  EFBC  F028         	goto	l8040
  7847  005156                     u10190:
  7848  005156  500B               	movf	___lodiv@divisor^0,w,c
  7849  005158  5E03               	subwf	___lodiv@dividend^0,f,c
  7850  00515A  500C               	movf	(___lodiv@divisor+1)^0,w,c
  7851  00515C  5A04               	subwfb	(___lodiv@dividend+1)^0,f,c
  7852  00515E  500D               	movf	(___lodiv@divisor+2)^0,w,c
  7853  005160  5A05               	subwfb	(___lodiv@dividend+2)^0,f,c
  7854  005162  500E               	movf	(___lodiv@divisor+3)^0,w,c
  7855  005164  5A06               	subwfb	(___lodiv@dividend+3)^0,f,c
  7856  005166  500F               	movf	(___lodiv@divisor+4)^0,w,c
  7857  005168  5A07               	subwfb	(___lodiv@dividend+4)^0,f,c
  7858  00516A  5010               	movf	(___lodiv@divisor+5)^0,w,c
  7859  00516C  5A08               	subwfb	(___lodiv@dividend+5)^0,f,c
  7860  00516E  5011               	movf	(___lodiv@divisor+6)^0,w,c
  7861  005170  5A09               	subwfb	(___lodiv@dividend+6)^0,f,c
  7862  005172  5012               	movf	(___lodiv@divisor+7)^0,w,c
  7863  005174  5A0A               	subwfb	(___lodiv@dividend+7)^0,f,c
  7864  005176  8013               	bsf	___lodiv@quotient^0,0,c
  7865  005178                     l8040:
  7866  005178  90D8               	bcf	status,0,c
  7867  00517A  3212               	rrcf	(___lodiv@divisor+7)^0,f,c
  7868  00517C  3211               	rrcf	(___lodiv@divisor+6)^0,f,c
  7869  00517E  3210               	rrcf	(___lodiv@divisor+5)^0,f,c
  7870  005180  320F               	rrcf	(___lodiv@divisor+4)^0,f,c
  7871  005182  320E               	rrcf	(___lodiv@divisor+3)^0,f,c
  7872  005184  320D               	rrcf	(___lodiv@divisor+2)^0,f,c
  7873  005186  320C               	rrcf	(___lodiv@divisor+1)^0,f,c
  7874  005188  320B               	rrcf	___lodiv@divisor^0,f,c
  7875  00518A  2E1B               	decfsz	___lodiv@counter^0,f,c
  7876  00518C  EF8B  F028         	goto	l8032
  7877  005190                     l1247:
  7878  005190  C013  F003         	movff	___lodiv@quotient,?___lodiv
  7879  005194  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  7880  005198  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  7881  00519C  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  7882  0051A0  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  7883  0051A4  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  7884  0051A8  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  7885  0051AC  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  7886  0051B0  0012               	return		;funcret
  7887  0051B2                     __end_of___lodiv:
  7888                           	opt callstack 0
  7889                           
  7890 ;; *************** function _strncmp *****************
  7891 ;; Defined at:
  7892 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  7895 ;;		 -> vfpfcnvrt@ct(3), STR_4(22), STR_3(16), STR_2(17), 
  7896 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  7897 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7898 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7899 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7900 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7901 ;;		 -> STR_37(3), STR_33(3), STR_28(3), STR_24(3), 
  7902 ;;		 -> STR_19(4), STR_15(4), 
  7903 ;;  n               2    6[COMRAM] unsigned int 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  r               2   11[COMRAM] PTR const unsigned char 
  7906 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7907 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7908 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7909 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7910 ;;		 -> STR_37(3), STR_33(3), STR_28(3), STR_24(3), 
  7911 ;;		 -> STR_19(4), STR_15(4), 
  7912 ;;  l               2    9[COMRAM] PTR const unsigned char 
  7913 ;;		 -> vfpfcnvrt@ct(3), STR_4(22), STR_3(16), STR_2(17), 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  2    2[COMRAM] int 
  7916 ;; Registers used:
  7917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7923 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7924 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;Total ram usage:       11 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; Hardware stack levels required when called:    4
  7930 ;; This function calls:
  7931 ;;		Nothing
  7932 ;; This function is called by:
  7933 ;;		_vfpfcnvrt
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text12
  7938  004C94                     __ptext12:
  7939                           	opt callstack 0
  7940  004C94                     _strncmp:
  7941                           	opt callstack 22
  7942  004C94  C003  F00A         	movff	strncmp@_l,strncmp@l
  7943  004C98  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  7944  004C9C  C005  F00C         	movff	strncmp@_r,strncmp@r
  7945  004CA0  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  7946  004CA4  0607               	decf	strncmp@n^0,f,c
  7947  004CA6  A0D8               	btfss	status,0,c
  7948  004CA8  0608               	decf	(strncmp@n+1)^0,f,c
  7949  004CAA  2807               	incf	strncmp@n^0,w,c
  7950  004CAC  E106               	bnz	u11431
  7951  004CAE  2808               	incf	(strncmp@n+1)^0,w,c
  7952  004CB0  A4D8               	btfss	status,2,c
  7953  004CB2  EF5D  F026         	goto	u11431
  7954  004CB6  EF5F  F026         	goto	u11430
  7955  004CBA                     u11431:
  7956  004CBA  EF6C  F026         	goto	l8688
  7957  004CBE                     u11430:
  7958  004CBE  0E00               	movlw	0
  7959  004CC0  6E04               	movwf	(?_strncmp+1)^0,c
  7960  004CC2  0E00               	movlw	0
  7961  004CC4  6E03               	movwf	?_strncmp^0,c
  7962  004CC6  EFDC  F026         	goto	l1614
  7963  004CCA                     l8686:
  7964  004CCA  4A0A               	infsnz	strncmp@l^0,f,c
  7965  004CCC  2A0B               	incf	(strncmp@l+1)^0,f,c
  7966  004CCE  4A0C               	infsnz	strncmp@r^0,f,c
  7967  004CD0  2A0D               	incf	(strncmp@r+1)^0,f,c
  7968  004CD2  0607               	decf	strncmp@n^0,f,c
  7969  004CD4  A0D8               	btfss	status,0,c
  7970  004CD6  0608               	decf	(strncmp@n+1)^0,f,c
  7971  004CD8                     l8688:
  7972  004CD8  C00A  FFF6         	movff	strncmp@l,tblptrl
  7973  004CDC  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  7974  004CE0  0E00               	movlw	low (__mediumconst shr (0+16))
  7975  004CE2  6EF8               	movwf	tblptru,c
  7976  004CE4  0E0E               	movlw	(high __ramtop+-1)
  7977  004CE6  64F7               	cpfsgt	tblptrh,c
  7978  004CE8  D003               	bra	u11447
  7979  004CEA  0008               	tblrd		*
  7980  004CEC  50F5               	movf	tablat,w,c
  7981  004CEE  D005               	bra	u11440
  7982  004CF0                     u11447:
  7983  004CF0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7984  004CF4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7985  004CF8  50E7               	movf	indf1,w,c
  7986  004CFA                     u11440:
  7987  004CFA  0900               	iorlw	0
  7988  004CFC  B4D8               	btfsc	status,2,c
  7989  004CFE  EF83  F026         	goto	u11451
  7990  004D02  EF85  F026         	goto	u11450
  7991  004D06                     u11451:
  7992  004D06  EFBE  F026         	goto	l8696
  7993  004D0A                     u11450:
  7994  004D0A  C00C  FFF6         	movff	strncmp@r,tblptrl
  7995  004D0E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  7996  004D12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7997  004D12  6AF8               	clrf	tblptru,c
  7998  004D14                     	endif
  7999  004D14                     	if	0	;tblptru may be non-zero
  8000  004D14                     	endif
  8001  004D14  0008               	tblrd		*
  8002  004D16  50F5               	movf	tablat,w,c
  8003  004D18  0900               	iorlw	0
  8004  004D1A  B4D8               	btfsc	status,2,c
  8005  004D1C  EF92  F026         	goto	u11461
  8006  004D20  EF94  F026         	goto	u11460
  8007  004D24                     u11461:
  8008  004D24  EFBE  F026         	goto	l8696
  8009  004D28                     u11460:
  8010  004D28  5007               	movf	strncmp@n^0,w,c
  8011  004D2A  1008               	iorwf	(strncmp@n+1)^0,w,c
  8012  004D2C  B4D8               	btfsc	status,2,c
  8013  004D2E  EF9B  F026         	goto	u11471
  8014  004D32  EF9D  F026         	goto	u11470
  8015  004D36                     u11471:
  8016  004D36  EFBE  F026         	goto	l8696
  8017  004D3A                     u11470:
  8018  004D3A  C00C  FFF6         	movff	strncmp@r,tblptrl
  8019  004D3E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8020  004D42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8021  004D42  6AF8               	clrf	tblptru,c
  8022  004D44                     	endif
  8023  004D44                     	if	0	;tblptru may be non-zero
  8024  004D44                     	endif
  8025  004D44  0008               	tblrd		*
  8026  004D46  CFF5 F009          	movff	tablat,??_strncmp
  8027  004D4A  C00A  FFF6         	movff	strncmp@l,tblptrl
  8028  004D4E  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8029  004D52  0E00               	movlw	low (__mediumconst shr (0+16))
  8030  004D54  6EF8               	movwf	tblptru,c
  8031  004D56  0E0E               	movlw	(high __ramtop+-1)
  8032  004D58  64F7               	cpfsgt	tblptrh,c
  8033  004D5A  D003               	bra	u11487
  8034  004D5C  0008               	tblrd		*
  8035  004D5E  50F5               	movf	tablat,w,c
  8036  004D60  D005               	bra	u11485
  8037  004D62                     u11487:
  8038  004D62  CFF6 FFE1          	movff	tblptrl,fsr1l
  8039  004D66  CFF7 FFE2          	movff	tblptrh,fsr1h
  8040  004D6A  50E7               	movf	indf1,w,c
  8041  004D6C                     u11485:
  8042  004D6C  1809               	xorwf	??_strncmp^0,w,c
  8043  004D6E  B4D8               	btfsc	status,2,c
  8044  004D70  EFBC  F026         	goto	u11481
  8045  004D74  EFBE  F026         	goto	u11480
  8046  004D78                     u11481:
  8047  004D78  EF65  F026         	goto	l8686
  8048  004D7C                     u11480:
  8049  004D7C                     l8696:
  8050  004D7C  C00A  FFF6         	movff	strncmp@l,tblptrl
  8051  004D80  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  8052  004D84  0E00               	movlw	low (__mediumconst shr (0+16))
  8053  004D86  6EF8               	movwf	tblptru,c
  8054  004D88  0E0E               	movlw	(high __ramtop+-1)
  8055  004D8A  64F7               	cpfsgt	tblptrh,c
  8056  004D8C  D003               	bra	u11497
  8057  004D8E  0008               	tblrd		*
  8058  004D90  50F5               	movf	tablat,w,c
  8059  004D92  D005               	bra	u11490
  8060  004D94                     u11497:
  8061  004D94  CFF6 FFE1          	movff	tblptrl,fsr1l
  8062  004D98  CFF7 FFE2          	movff	tblptrh,fsr1h
  8063  004D9C  50E7               	movf	indf1,w,c
  8064  004D9E                     u11490:
  8065  004D9E  6E09               	movwf	??_strncmp^0,c
  8066  004DA0  C00C  FFF6         	movff	strncmp@r,tblptrl
  8067  004DA4  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  8068  004DA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8069  004DA8  6AF8               	clrf	tblptru,c
  8070  004DAA                     	endif
  8071  004DAA                     	if	0	;tblptru may be non-zero
  8072  004DAA                     	endif
  8073  004DAA  0008               	tblrd		*
  8074  004DAC  50F5               	movf	tablat,w,c
  8075  004DAE  5C09               	subwf	??_strncmp^0,w,c
  8076  004DB0  6E03               	movwf	?_strncmp^0,c
  8077  004DB2  6A04               	clrf	(?_strncmp+1)^0,c
  8078  004DB4  A0D8               	btfss	status,0,c
  8079  004DB6  0604               	decf	(?_strncmp+1)^0,f,c
  8080  004DB8                     l1614:
  8081  004DB8  0012               	return		;funcret
  8082  004DBA                     __end_of_strncmp:
  8083                           	opt callstack 0
  8084                           
  8085 ;; *************** function _stoa *****************
  8086 ;; Defined at:
  8087 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8090 ;;		 -> vsnprintf@f(6), 
  8091 ;;  s               2   13[COMRAM] PTR unsigned char 
  8092 ;;		 -> ?_snprintf(2), tensao_in(4), 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;  nuls            7   16[COMRAM] unsigned char [7]
  8095 ;;  l               2   31[COMRAM] int 
  8096 ;;  p               2   29[COMRAM] int 
  8097 ;;  cp              2   27[COMRAM] PTR unsigned char 
  8098 ;;		 -> ?_snprintf(2), stoa@nuls(7), tensao_in(4), 
  8099 ;;  w               2   25[COMRAM] int 
  8100 ;;  i               2   23[COMRAM] int 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  2   11[COMRAM] int 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8114 ;;Total ram usage:       22 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    6
  8117 ;; This function calls:
  8118 ;;		_fputc
  8119 ;;		_strlen
  8120 ;; This function is called by:
  8121 ;;		_vfpfcnvrt
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text13
  8126  0045C8                     __ptext13:
  8127                           	opt callstack 0
  8128  0045C8                     _stoa:
  8129                           	opt callstack 20
  8130  0045C8                     
  8131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8132  0045C8  EE21  F0F4         	lfsr	2,stoa@F1174
  8133  0045CC  EE10  F011         	lfsr	1,stoa@nuls
  8134  0045D0  0E06               	movlw	6
  8135  0045D2                     u11031:
  8136  0045D2  CFDB FFE3          	movff	plusw2,plusw1
  8137  0045D6  06E8               	decf	wreg,f,c
  8138  0045D8  E2FC               	bc	u11031
  8139  0045DA                     
  8140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8141  0045DA  C00E  F01C         	movff	stoa@s,stoa@cp
  8142  0045DE  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  8143  0045E2                     
  8144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8145  0045E2  501C               	movf	stoa@cp^0,w,c
  8146  0045E4  101D               	iorwf	(stoa@cp+1)^0,w,c
  8147  0045E6  A4D8               	btfss	status,2,c
  8148  0045E8  EFF8  F022         	goto	u11041
  8149  0045EC  EFFA  F022         	goto	u11040
  8150  0045F0                     u11041:
  8151  0045F0  EFFE  F022         	goto	l8502
  8152  0045F4                     u11040:
  8153  0045F4                     
  8154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8155  0045F4  0E11               	movlw	low stoa@nuls
  8156  0045F6  6E1C               	movwf	stoa@cp^0,c
  8157  0045F8  0E00               	movlw	high stoa@nuls
  8158  0045FA  6E1D               	movwf	(stoa@cp+1)^0,c
  8159  0045FC                     l8502:
  8160                           
  8161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8162  0045FC  C01C  F003         	movff	stoa@cp,strlen@s
  8163  004600  C01D  F004         	movff	stoa@cp+1,strlen@s+1
  8164  004604  EC90  F02E         	call	_strlen	;wreg free
  8165  004608  C003  F020         	movff	?_strlen,stoa@l
  8166  00460C  C004  F021         	movff	?_strlen+1,stoa@l+1
  8167  004610                     
  8168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8169  004610  C05B  F01E         	movff	_prec,stoa@p
  8170  004614  C05C  F01F         	movff	_prec+1,stoa@p+1
  8171  004618                     
  8172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8173  004618  BE1F               	btfsc	(stoa@p+1)^0,7,c
  8174  00461A  EF11  F023         	goto	u11051
  8175  00461E  EF13  F023         	goto	u11050
  8176  004622                     u11051:
  8177  004622  EF28  F023         	goto	l655
  8178  004626                     u11050:
  8179  004626  5020               	movf	stoa@l^0,w,c
  8180  004628  5C1E               	subwf	stoa@p^0,w,c
  8181  00462A  501F               	movf	(stoa@p+1)^0,w,c
  8182  00462C  0A80               	xorlw	128
  8183  00462E  6E10               	movwf	??_stoa^0,c
  8184  004630  5021               	movf	(stoa@l+1)^0,w,c
  8185  004632  0A80               	xorlw	128
  8186  004634  5810               	subwfb	??_stoa^0,w,c
  8187  004636  A0D8               	btfss	status,0,c
  8188  004638  EF20  F023         	goto	u11061
  8189  00463C  EF22  F023         	goto	u11060
  8190  004640                     u11061:
  8191  004640  EF24  F023         	goto	l653
  8192  004644                     u11060:
  8193  004644  EF28  F023         	goto	l655
  8194  004648                     l653:
  8195  004648  C01E  F020         	movff	stoa@p,stoa@l
  8196  00464C  C01F  F021         	movff	stoa@p+1,stoa@l+1
  8197  004650                     l655:
  8198                           
  8199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8200  004650  C020  F01E         	movff	stoa@l,stoa@p
  8201  004654  C021  F01F         	movff	stoa@l+1,stoa@p+1
  8202                           
  8203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8204  004658  C0FA  F01A         	movff	_width,stoa@w
  8205  00465C  C0FB  F01B         	movff	_width+1,stoa@w+1
  8206                           
  8207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8208  004660  0100               	movlb	0	; () banked
  8209  004662  B1FC               	btfsc	_flags& (0+255),0,b
  8210  004664  EF36  F023         	goto	u11071
  8211  004668  EF38  F023         	goto	u11070
  8212  00466C                     u11071:
  8213  00466C  EF55  F023         	goto	l8518
  8214  004670                     u11070:
  8215  004670  EF46  F023         	goto	l8516
  8216  004674                     l8512:
  8217                           
  8218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8219  004674  0E00               	movlw	0
  8220  004676  6E04               	movwf	(fputc@c+1)^0,c
  8221  004678  0E20               	movlw	32
  8222  00467A  6E03               	movwf	fputc@c^0,c
  8223  00467C  C00C  F005         	movff	stoa@fp,fputc@fp
  8224  004680  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8225  004684  EC41  F029         	call	_fputc	;wreg free
  8226  004688                     
  8227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8228  004688  4A20               	infsnz	stoa@l^0,f,c
  8229  00468A  2A21               	incf	(stoa@l+1)^0,f,c
  8230  00468C                     l8516:
  8231                           
  8232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8233  00468C  501A               	movf	stoa@w^0,w,c
  8234  00468E  5C20               	subwf	stoa@l^0,w,c
  8235  004690  5021               	movf	(stoa@l+1)^0,w,c
  8236  004692  0A80               	xorlw	128
  8237  004694  6E10               	movwf	??_stoa^0,c
  8238  004696  501B               	movf	(stoa@w+1)^0,w,c
  8239  004698  0A80               	xorlw	128
  8240  00469A  5810               	subwfb	??_stoa^0,w,c
  8241  00469C  A0D8               	btfss	status,0,c
  8242  00469E  EF53  F023         	goto	u11081
  8243  0046A2  EF55  F023         	goto	u11080
  8244  0046A6                     u11081:
  8245  0046A6  EF3A  F023         	goto	l8512
  8246  0046AA                     u11080:
  8247  0046AA                     l8518:
  8248                           
  8249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8250  0046AA  0E00               	movlw	0
  8251  0046AC  6E19               	movwf	(stoa@i+1)^0,c
  8252  0046AE  0E00               	movlw	0
  8253  0046B0  6E18               	movwf	stoa@i^0,c
  8254                           
  8255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8256  0046B2  EF6E  F023         	goto	l8526
  8257  0046B6                     l8520:
  8258                           
  8259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8260  0046B6  C01C  FFD9         	movff	stoa@cp,fsr2l
  8261  0046BA  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  8262  0046BE  50DF               	movf	indf2,w,c
  8263  0046C0  6E10               	movwf	??_stoa^0,c
  8264  0046C2  5010               	movf	??_stoa^0,w,c
  8265  0046C4  6E03               	movwf	fputc@c^0,c
  8266  0046C6  6A04               	clrf	(fputc@c+1)^0,c
  8267  0046C8  C00C  F005         	movff	stoa@fp,fputc@fp
  8268  0046CC  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8269  0046D0  EC41  F029         	call	_fputc	;wreg free
  8270  0046D4                     
  8271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8272  0046D4  4A1C               	infsnz	stoa@cp^0,f,c
  8273  0046D6  2A1D               	incf	(stoa@cp+1)^0,f,c
  8274  0046D8                     
  8275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8276  0046D8  4A18               	infsnz	stoa@i^0,f,c
  8277  0046DA  2A19               	incf	(stoa@i+1)^0,f,c
  8278  0046DC                     l8526:
  8279                           
  8280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8281  0046DC  501E               	movf	stoa@p^0,w,c
  8282  0046DE  5C18               	subwf	stoa@i^0,w,c
  8283  0046E0  5019               	movf	(stoa@i+1)^0,w,c
  8284  0046E2  0A80               	xorlw	128
  8285  0046E4  6E10               	movwf	??_stoa^0,c
  8286  0046E6  501F               	movf	(stoa@p+1)^0,w,c
  8287  0046E8  0A80               	xorlw	128
  8288  0046EA  5810               	subwfb	??_stoa^0,w,c
  8289  0046EC  A0D8               	btfss	status,0,c
  8290  0046EE  EF7B  F023         	goto	u11091
  8291  0046F2  EF7D  F023         	goto	u11090
  8292  0046F6                     u11091:
  8293  0046F6  EF5B  F023         	goto	l8520
  8294  0046FA                     u11090:
  8295  0046FA                     
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8297  0046FA  0100               	movlb	0	; () banked
  8298  0046FC  A1FC               	btfss	_flags& (0+255),0,b
  8299  0046FE  EF83  F023         	goto	u11101
  8300  004702  EF85  F023         	goto	u11100
  8301  004706                     u11101:
  8302  004706  EFA2  F023         	goto	l665
  8303  00470A                     u11100:
  8304  00470A  EF93  F023         	goto	l8534
  8305  00470E                     l8530:
  8306                           
  8307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8308  00470E  0E00               	movlw	0
  8309  004710  6E04               	movwf	(fputc@c+1)^0,c
  8310  004712  0E20               	movlw	32
  8311  004714  6E03               	movwf	fputc@c^0,c
  8312  004716  C00C  F005         	movff	stoa@fp,fputc@fp
  8313  00471A  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8314  00471E  EC41  F029         	call	_fputc	;wreg free
  8315  004722                     
  8316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8317  004722  4A20               	infsnz	stoa@l^0,f,c
  8318  004724  2A21               	incf	(stoa@l+1)^0,f,c
  8319  004726                     l8534:
  8320                           
  8321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8322  004726  501A               	movf	stoa@w^0,w,c
  8323  004728  5C20               	subwf	stoa@l^0,w,c
  8324  00472A  5021               	movf	(stoa@l+1)^0,w,c
  8325  00472C  0A80               	xorlw	128
  8326  00472E  6E10               	movwf	??_stoa^0,c
  8327  004730  501B               	movf	(stoa@w+1)^0,w,c
  8328  004732  0A80               	xorlw	128
  8329  004734  5810               	subwfb	??_stoa^0,w,c
  8330  004736  A0D8               	btfss	status,0,c
  8331  004738  EFA0  F023         	goto	u11111
  8332  00473C  EFA2  F023         	goto	u11110
  8333  004740                     u11111:
  8334  004740  EF87  F023         	goto	l8530
  8335  004744                     u11110:
  8336  004744                     l665:
  8337                           
  8338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8339  004744  C020  F00C         	movff	stoa@l,?_stoa
  8340  004748  C021  F00D         	movff	stoa@l+1,?_stoa+1
  8341  00474C  0012               	return		;funcret
  8342  00474E                     __end_of_stoa:
  8343                           	opt callstack 0
  8344                           
  8345 ;; *************** function _otoa *****************
  8346 ;; Defined at:
  8347 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8350 ;;		 -> vsnprintf@f(6), 
  8351 ;;  d               8   31[COMRAM] unsigned long long 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  n               8   53[COMRAM] unsigned long long 
  8354 ;;  i               2   61[COMRAM] int 
  8355 ;;  w               2   51[COMRAM] int 
  8356 ;;  t               2   49[COMRAM] int 
  8357 ;;  p               2   47[COMRAM] int 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  2   29[COMRAM] int 
  8360 ;; Registers used:
  8361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8367 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8368 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8369 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8370 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8371 ;;Total ram usage:       34 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; Hardware stack levels required when called:    8
  8374 ;; This function calls:
  8375 ;;		_pad
  8376 ;; This function is called by:
  8377 ;;		_vfpfcnvrt
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text14
  8382  003F02                     __ptext14:
  8383                           	opt callstack 0
  8384  003F02                     _otoa:
  8385                           	opt callstack 18
  8386  003F02                     
  8387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8388  003F02  BE5C               	btfsc	(_prec+1)^0,7,c
  8389  003F04  EF86  F01F         	goto	u10931
  8390  003F08  EF88  F01F         	goto	u10930
  8391  003F0C                     u10931:
  8392  003F0C  EF8A  F01F         	goto	l8450
  8393  003F10                     u10930:
  8394  003F10                     
  8395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8396  003F10  0100               	movlb	0	; () banked
  8397  003F12  93FC               	bcf	_flags& (0+255),1,b
  8398  003F14                     l8450:
  8399                           
  8400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8401  003F14  BE5C               	btfsc	(_prec+1)^0,7,c
  8402  003F16  EF97  F01F         	goto	u10940
  8403  003F1A  505C               	movf	(_prec+1)^0,w,c
  8404  003F1C  E106               	bnz	u10941
  8405  003F1E  045B               	decf	_prec^0,w,c
  8406  003F20  B0D8               	btfsc	status,0,c
  8407  003F22  EF95  F01F         	goto	u10941
  8408  003F26  EF97  F01F         	goto	u10940
  8409  003F2A                     u10941:
  8410  003F2A  EF9D  F01F         	goto	l635
  8411  003F2E                     u10940:
  8412  003F2E  0E00               	movlw	0
  8413  003F30  6E31               	movwf	(otoa@p+1)^0,c
  8414  003F32  0E01               	movlw	1
  8415  003F34  6E30               	movwf	otoa@p^0,c
  8416  003F36  EFA1  F01F         	goto	l637
  8417  003F3A                     l635:
  8418  003F3A  C05B  F030         	movff	_prec,otoa@p
  8419  003F3E  C05C  F031         	movff	_prec+1,otoa@p+1
  8420  003F42                     l637:
  8421                           
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8423  003F42  C0FA  F034         	movff	_width,otoa@w
  8424  003F46  C0FB  F035         	movff	_width+1,otoa@w+1
  8425                           
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8427  003F4A  C020  F036         	movff	otoa@d,otoa@n
  8428  003F4E  C021  F037         	movff	otoa@d+1,otoa@n+1
  8429  003F52  C022  F038         	movff	otoa@d+2,otoa@n+2
  8430  003F56  C023  F039         	movff	otoa@d+3,otoa@n+3
  8431  003F5A  C024  F03A         	movff	otoa@d+4,otoa@n+4
  8432  003F5E  C025  F03B         	movff	otoa@d+5,otoa@n+5
  8433  003F62  C026  F03C         	movff	otoa@d+6,otoa@n+6
  8434  003F66  C027  F03D         	movff	otoa@d+7,otoa@n+7
  8435  003F6A                     
  8436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8437  003F6A  0E00               	movlw	0
  8438  003F6C  6E3F               	movwf	(otoa@i+1)^0,c
  8439  003F6E  0E4F               	movlw	79
  8440  003F70  6E3E               	movwf	otoa@i^0,c
  8441  003F72                     
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8443  003F72  0E00               	movlw	0
  8444  003F74  0101               	movlb	1	; () banked
  8445  003F76  6FD7               	movwf	(_dbuf+79)& (0+255),b
  8446  003F78                     
  8447                           ; BSR set to: 1
  8448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8449  003F78  0E00               	movlw	0
  8450  003F7A  6E33               	movwf	(otoa@t+1)^0,c
  8451  003F7C  0E00               	movlw	0
  8452  003F7E  6E32               	movwf	otoa@t^0,c
  8453                           
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8455  003F80  EF07  F020         	goto	l8472
  8456  003F84                     l8460:
  8457                           
  8458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8459  003F84  063E               	decf	otoa@i^0,f,c
  8460  003F86  A0D8               	btfss	status,0,c
  8461  003F88  063F               	decf	(otoa@i+1)^0,f,c
  8462  003F8A                     
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8464  003F8A  0E07               	movlw	7
  8465  003F8C  1436               	andwf	otoa@n^0,w,c
  8466  003F8E  6E32               	movwf	otoa@t^0,c
  8467  003F90  6A33               	clrf	(otoa@t+1)^0,c
  8468  003F92                     
  8469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8470  003F92  0E88               	movlw	low _dbuf
  8471  003F94  243E               	addwf	otoa@i^0,w,c
  8472  003F96  6ED9               	movwf	fsr2l,c
  8473  003F98  0E01               	movlw	high _dbuf
  8474  003F9A  203F               	addwfc	(otoa@i+1)^0,w,c
  8475  003F9C  6EDA               	movwf	fsr2h,c
  8476  003F9E  5032               	movf	otoa@t^0,w,c
  8477  003FA0  0F30               	addlw	48
  8478  003FA2  6EDF               	movwf	indf2,c
  8479  003FA4                     
  8480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8481  003FA4  0630               	decf	otoa@p^0,f,c
  8482  003FA6  A0D8               	btfss	status,0,c
  8483  003FA8  0631               	decf	(otoa@p+1)^0,f,c
  8484  003FAA                     
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8486  003FAA  0634               	decf	otoa@w^0,f,c
  8487  003FAC  A0D8               	btfss	status,0,c
  8488  003FAE  0635               	decf	(otoa@w+1)^0,f,c
  8489  003FB0                     
  8490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8491  003FB0  C036  F028         	movff	otoa@n,??_otoa
  8492  003FB4  C037  F029         	movff	otoa@n+1,??_otoa+1
  8493  003FB8  C038  F02A         	movff	otoa@n+2,??_otoa+2
  8494  003FBC  C039  F02B         	movff	otoa@n+3,??_otoa+3
  8495  003FC0  C03A  F02C         	movff	otoa@n+4,??_otoa+4
  8496  003FC4  C03B  F02D         	movff	otoa@n+5,??_otoa+5
  8497  003FC8  C03C  F02E         	movff	otoa@n+6,??_otoa+6
  8498  003FCC  C03D  F02F         	movff	otoa@n+7,??_otoa+7
  8499  003FD0  0E04               	movlw	4
  8500  003FD2  EFF4  F01F         	goto	u10950
  8501  003FD6                     u10955:
  8502  003FD6  90D8               	bcf	status,0,c
  8503  003FD8  322F               	rrcf	(??_otoa+7)^0,f,c
  8504  003FDA  322E               	rrcf	(??_otoa+6)^0,f,c
  8505  003FDC  322D               	rrcf	(??_otoa+5)^0,f,c
  8506  003FDE  322C               	rrcf	(??_otoa+4)^0,f,c
  8507  003FE0  322B               	rrcf	(??_otoa+3)^0,f,c
  8508  003FE2  322A               	rrcf	(??_otoa+2)^0,f,c
  8509  003FE4  3229               	rrcf	(??_otoa+1)^0,f,c
  8510  003FE6  3228               	rrcf	??_otoa^0,f,c
  8511  003FE8                     u10950:
  8512  003FE8  2EE8               	decfsz	wreg,f,c
  8513  003FEA  EFEB  F01F         	goto	u10955
  8514  003FEE  C028  F036         	movff	??_otoa,otoa@n
  8515  003FF2  C029  F037         	movff	??_otoa+1,otoa@n+1
  8516  003FF6  C02A  F038         	movff	??_otoa+2,otoa@n+2
  8517  003FFA  C02B  F039         	movff	??_otoa+3,otoa@n+3
  8518  003FFE  C02C  F03A         	movff	??_otoa+4,otoa@n+4
  8519  004002  C02D  F03B         	movff	??_otoa+5,otoa@n+5
  8520  004006  C02E  F03C         	movff	??_otoa+6,otoa@n+6
  8521  00400A  C02F  F03D         	movff	??_otoa+7,otoa@n+7
  8522  00400E                     l8472:
  8523                           
  8524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8525  00400E  BE3F               	btfsc	(otoa@i+1)^0,7,c
  8526  004010  EF12  F020         	goto	u10961
  8527  004014  503F               	movf	(otoa@i+1)^0,w,c
  8528  004016  E108               	bnz	u10960
  8529  004018  043E               	decf	otoa@i^0,w,c
  8530  00401A  A0D8               	btfss	status,0,c
  8531  00401C  EF12  F020         	goto	u10961
  8532  004020  EF14  F020         	goto	u10960
  8533  004024                     u10961:
  8534  004024  EF45  F020         	goto	l644
  8535  004028                     u10960:
  8536  004028  5036               	movf	otoa@n^0,w,c
  8537  00402A  1037               	iorwf	(otoa@n+1)^0,w,c
  8538  00402C  1038               	iorwf	(otoa@n+2)^0,w,c
  8539  00402E  1039               	iorwf	(otoa@n+3)^0,w,c
  8540  004030  103A               	iorwf	(otoa@n+4)^0,w,c
  8541  004032  103B               	iorwf	(otoa@n+5)^0,w,c
  8542  004034  103C               	iorwf	(otoa@n+6)^0,w,c
  8543  004036  103D               	iorwf	(otoa@n+7)^0,w,c
  8544  004038  A4D8               	btfss	status,2,c
  8545  00403A  EF21  F020         	goto	u10971
  8546  00403E  EF23  F020         	goto	u10970
  8547  004042                     u10971:
  8548  004042  EFC2  F01F         	goto	l8460
  8549  004046                     u10970:
  8550  004046  BE31               	btfsc	(otoa@p+1)^0,7,c
  8551  004048  EF30  F020         	goto	u10980
  8552  00404C  5031               	movf	(otoa@p+1)^0,w,c
  8553  00404E  E106               	bnz	u10981
  8554  004050  0430               	decf	otoa@p^0,w,c
  8555  004052  B0D8               	btfsc	status,0,c
  8556  004054  EF2E  F020         	goto	u10981
  8557  004058  EF30  F020         	goto	u10980
  8558  00405C                     u10981:
  8559  00405C  EFC2  F01F         	goto	l8460
  8560  004060                     u10980:
  8561  004060  BE35               	btfsc	(otoa@w+1)^0,7,c
  8562  004062  EF3B  F020         	goto	u10991
  8563  004066  5035               	movf	(otoa@w+1)^0,w,c
  8564  004068  E108               	bnz	u10990
  8565  00406A  0434               	decf	otoa@w^0,w,c
  8566  00406C  A0D8               	btfss	status,0,c
  8567  00406E  EF3B  F020         	goto	u10991
  8568  004072  EF3D  F020         	goto	u10990
  8569  004076                     u10991:
  8570  004076  EF45  F020         	goto	l644
  8571  00407A                     u10990:
  8572  00407A  0100               	movlb	0	; () banked
  8573  00407C  B3FC               	btfsc	_flags& (0+255),1,b
  8574  00407E  EF43  F020         	goto	u11001
  8575  004082  EF45  F020         	goto	u11000
  8576  004086                     u11001:
  8577  004086  EFC2  F01F         	goto	l8460
  8578  00408A                     u11000:
  8579  00408A                     l644:
  8580                           
  8581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8582  00408A  0100               	movlb	0	; () banked
  8583  00408C  A9FC               	btfss	_flags& (0+255),4,b
  8584  00408E  EF4B  F020         	goto	u11011
  8585  004092  EF4D  F020         	goto	u11010
  8586  004096                     u11011:
  8587  004096  EF64  F020         	goto	l8490
  8588  00409A                     u11010:
  8589  00409A                     
  8590                           ; BSR set to: 0
  8591  00409A  5032               	movf	otoa@t^0,w,c
  8592  00409C  1033               	iorwf	(otoa@t+1)^0,w,c
  8593  00409E  B4D8               	btfsc	status,2,c
  8594  0040A0  EF54  F020         	goto	u11021
  8595  0040A4  EF56  F020         	goto	u11020
  8596  0040A8                     u11021:
  8597  0040A8  EF64  F020         	goto	l8490
  8598  0040AC                     u11020:
  8599  0040AC                     
  8600                           ; BSR set to: 0
  8601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8602  0040AC  063E               	decf	otoa@i^0,f,c
  8603  0040AE  A0D8               	btfss	status,0,c
  8604  0040B0  063F               	decf	(otoa@i+1)^0,f,c
  8605  0040B2                     
  8606                           ; BSR set to: 0
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8608  0040B2  0E88               	movlw	low _dbuf
  8609  0040B4  243E               	addwf	otoa@i^0,w,c
  8610  0040B6  6ED9               	movwf	fsr2l,c
  8611  0040B8  0E01               	movlw	high _dbuf
  8612  0040BA  203F               	addwfc	(otoa@i+1)^0,w,c
  8613  0040BC  6EDA               	movwf	fsr2h,c
  8614  0040BE  0E30               	movlw	48
  8615  0040C0  6EDF               	movwf	indf2,c
  8616  0040C2                     
  8617                           ; BSR set to: 0
  8618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8619  0040C2  0634               	decf	otoa@w^0,f,c
  8620  0040C4  A0D8               	btfss	status,0,c
  8621  0040C6  0635               	decf	(otoa@w+1)^0,f,c
  8622  0040C8                     l8490:
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8626  0040C8  C01E  F013         	movff	otoa@fp,pad@fp
  8627  0040CC  C01F  F014         	movff	otoa@fp+1,pad@fp+1
  8628  0040D0  0E88               	movlw	low _dbuf
  8629  0040D2  243E               	addwf	otoa@i^0,w,c
  8630  0040D4  6E15               	movwf	pad@buf^0,c
  8631  0040D6  0E01               	movlw	high _dbuf
  8632  0040D8  203F               	addwfc	(otoa@i+1)^0,w,c
  8633  0040DA  6E16               	movwf	(pad@buf+1)^0,c
  8634  0040DC  C034  F017         	movff	otoa@w,pad@p
  8635  0040E0  C035  F018         	movff	otoa@w+1,pad@p+1
  8636  0040E4  ECA6  F029         	call	_pad	;wreg free
  8637  0040E8  C013  F01E         	movff	?_pad,?_otoa
  8638  0040EC  C014  F01F         	movff	?_pad+1,?_otoa+1
  8639  0040F0  0012               	return		;funcret
  8640  0040F2                     __end_of_otoa:
  8641                           	opt callstack 0
  8642                           
  8643 ;; *************** function _efgtoa *****************
  8644 ;; Defined at:
  8645 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  8648 ;;		 -> vsnprintf@f(6), 
  8649 ;;  f               4   22[BANK0 ] PTR struct _IO_FILE
  8650 ;;  c               1   26[BANK0 ] unsigned char 
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;  u               4   84[BANK0 ] unsigned char 
  8653 ;;  g               4   76[BANK0 ] unsigned char 
  8654 ;;  l               4   70[BANK0 ] unsigned char 
  8655 ;;  h               4   66[BANK0 ] unsigned char 
  8656 ;;  ou              4   32[BANK0 ] unsigned char 
  8657 ;;  n               2   82[BANK0 ] int 
  8658 ;;  e               2   80[BANK0 ] int 
  8659 ;;  i               2   74[BANK0 ] int 
  8660 ;;  w               2   63[BANK0 ] int 
  8661 ;;  p               2   60[BANK0 ] int 
  8662 ;;  sign            2   58[BANK0 ] int 
  8663 ;;  d               2   56[BANK0 ] int 
  8664 ;;  ne              2   54[BANK0 ] int 
  8665 ;;  m               2   52[BANK0 ] int 
  8666 ;;  pp              2   50[BANK0 ] int 
  8667 ;;  t               2   48[BANK0 ] int 
  8668 ;;  mode            1   65[BANK0 ] unsigned char 
  8669 ;;  nmode           1   62[BANK0 ] unsigned char 
  8670 ;; Return value:  Size  Location     Type
  8671 ;;                  2   20[BANK0 ] int 
  8672 ;; Registers used:
  8673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8674 ;; Tracked objects:
  8675 ;;		On entry : 0/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8679 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8680 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8681 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8682 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8683 ;;Total ram usage:       68 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; Hardware stack levels required when called:    8
  8686 ;; This function calls:
  8687 ;;		___awdiv
  8688 ;;		___awmod
  8689 ;;		___fladd
  8690 ;;		___fldiv
  8691 ;;		___fleq
  8692 ;;		___flge
  8693 ;;		___flmul
  8694 ;;		___flneg
  8695 ;;		___flsub
  8696 ;;		___fltol
  8697 ;;		___fpclassifyf
  8698 ;;		_floorf
  8699 ;;		_isupper
  8700 ;;		_pad
  8701 ;;		_strcpy
  8702 ;;		_tolower
  8703 ;; This function is called by:
  8704 ;;		_vfpfcnvrt
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text15
  8709  00152A                     __ptext15:
  8710                           	opt callstack 0
  8711  00152A                     _efgtoa:
  8712                           	opt callstack 18
  8713  00152A                     
  8714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8715  00152A  0E00               	movlw	0
  8716  00152C  0100               	movlb	0	; () banked
  8717  00152E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  8718  001530  0E00               	movlw	0
  8719  001532  6F9A               	movwf	efgtoa@sign& (0+255),b
  8720  001534                     
  8721                           ; BSR set to: 0
  8722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8723  001534  C076  F0AC         	movff	efgtoa@f,efgtoa@g
  8724  001538  C077  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  8725  00153C  C078  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  8726  001540  C079  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  8727  001544                     
  8728                           ; BSR set to: 0
  8729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8730  001544  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8731  001546  EFA9  F00A         	goto	u10410
  8732  00154A  EFA7  F00A         	goto	u10411
  8733  00154E                     u10411:
  8734  00154E  EFBF  F00A         	goto	l8158
  8735  001552                     u10410:
  8736  001552                     
  8737                           ; BSR set to: 0
  8738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8739  001552  0E00               	movlw	0
  8740  001554  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  8741  001556  0E01               	movlw	1
  8742  001558  6F9A               	movwf	efgtoa@sign& (0+255),b
  8743  00155A                     
  8744                           ; BSR set to: 0
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8746  00155A  C0AC  F003         	movff	efgtoa@g,___flneg@f1
  8747  00155E  C0AD  F004         	movff	efgtoa@g+1,___flneg@f1+1
  8748  001562  C0AE  F005         	movff	efgtoa@g+2,___flneg@f1+2
  8749  001566  C0AF  F006         	movff	efgtoa@g+3,___flneg@f1+3
  8750  00156A  EC58  F02E         	call	___flneg	;wreg free
  8751  00156E  C003  F0AC         	movff	?___flneg,efgtoa@g
  8752  001572  C004  F0AD         	movff	?___flneg+1,efgtoa@g+1
  8753  001576  C005  F0AE         	movff	?___flneg+2,efgtoa@g+2
  8754  00157A  C006  F0AF         	movff	?___flneg+3,efgtoa@g+3
  8755  00157E                     l8158:
  8756                           
  8757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8758  00157E  0E00               	movlw	0
  8759  001580  0100               	movlb	0	; () banked
  8760  001582  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  8761  001584  0E00               	movlw	0
  8762  001586  6FB2               	movwf	efgtoa@n& (0+255),b
  8763  001588                     
  8764                           ; BSR set to: 0
  8765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8766  001588  C0FA  F09F         	movff	_width,efgtoa@w
  8767  00158C  C0FB  F0A0         	movff	_width+1,efgtoa@w+1
  8768  001590                     
  8769                           ; BSR set to: 0
  8770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8771  001590  519A               	movf	efgtoa@sign& (0+255),w,b
  8772  001592  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8773  001594  A4D8               	btfss	status,2,c
  8774  001596  EFCF  F00A         	goto	u10421
  8775  00159A  EFD1  F00A         	goto	u10420
  8776  00159E                     u10421:
  8777  00159E  EFD8  F00A         	goto	l8166
  8778  0015A2                     u10420:
  8779  0015A2                     
  8780                           ; BSR set to: 0
  8781  0015A2  A5FC               	btfss	_flags& (0+255),2,b
  8782  0015A4  EFD6  F00A         	goto	u10431
  8783  0015A8  EFD8  F00A         	goto	u10430
  8784  0015AC                     u10431:
  8785  0015AC  EFF2  F00A         	goto	l8178
  8786  0015B0                     u10430:
  8787  0015B0                     l8166:
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8791  0015B0  519A               	movf	efgtoa@sign& (0+255),w,b
  8792  0015B2  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8793  0015B4  A4D8               	btfss	status,2,c
  8794  0015B6  EFDF  F00A         	goto	u10441
  8795  0015BA  EFE1  F00A         	goto	u10440
  8796  0015BE                     u10441:
  8797  0015BE  EFE7  F00A         	goto	l8170
  8798  0015C2                     u10440:
  8799  0015C2                     
  8800                           ; BSR set to: 0
  8801  0015C2  0E00               	movlw	0
  8802  0015C4  6F85               	movwf	(_efgtoa$1332+1)& (0+255),b
  8803  0015C6  0E2B               	movlw	43
  8804  0015C8  6F84               	movwf	_efgtoa$1332& (0+255),b
  8805  0015CA  EFEB  F00A         	goto	l8172
  8806  0015CE                     l8170:
  8807                           
  8808                           ; BSR set to: 0
  8809  0015CE  0E00               	movlw	0
  8810  0015D0  6F85               	movwf	(_efgtoa$1332+1)& (0+255),b
  8811  0015D2  0E2D               	movlw	45
  8812  0015D4  6F84               	movwf	_efgtoa$1332& (0+255),b
  8813  0015D6                     l8172:
  8814                           
  8815                           ; BSR set to: 0
  8816  0015D6  C084  F188         	movff	_efgtoa$1332,_dbuf
  8817  0015DA                     
  8818                           ; BSR set to: 0
  8819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8820  0015DA  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  8821  0015DC  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  8822  0015DE                     
  8823                           ; BSR set to: 0
  8824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8825  0015DE  079F               	decf	efgtoa@w& (0+255),f,b
  8826  0015E0  A0D8               	btfss	status,0,c
  8827  0015E2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  8828  0015E4                     l8178:
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8832  0015E4  C0AC  F003         	movff	efgtoa@g,___fpclassifyf@x
  8833  0015E8  C0AD  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8834  0015EC  C0AE  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8835  0015F0  C0AF  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8836  0015F4  ECE2  F027         	call	___fpclassifyf	;wreg free
  8837  0015F8  0403               	decf	?___fpclassifyf^0,w,c
  8838  0015FA  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  8839  0015FC  A4D8               	btfss	status,2,c
  8840  0015FE  EF03  F00B         	goto	u10451
  8841  001602  EF05  F00B         	goto	u10450
  8842  001606                     u10451:
  8843  001606  EF5C  F00B         	goto	l8196
  8844  00160A                     u10450:
  8845  00160A  0EBF               	movlw	191
  8846  00160C  0100               	movlb	0	; () banked
  8847  00160E  6F7B               	movwf	??_efgtoa& (0+255),b
  8848  001610  0EFF               	movlw	255
  8849  001612  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  8850  001614  517A               	movf	efgtoa@c& (0+255),w,b
  8851  001616  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  8852  001618  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  8853  00161A  517B               	movf	??_efgtoa& (0+255),w,b
  8854  00161C  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  8855  00161E  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  8856  001620  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8857  001622  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  8858  001624  E10A               	bnz	u10460
  8859  001626  0E1A               	movlw	26
  8860  001628  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  8861  00162A  A0D8               	btfss	status,0,c
  8862  00162C  EF1A  F00B         	goto	u10461
  8863  001630  EF1D  F00B         	goto	u10460
  8864  001634                     u10461:
  8865  001634  0E01               	movlw	1
  8866  001636  EF1E  F00B         	goto	u10470
  8867  00163A                     u10460:
  8868  00163A  0E00               	movlw	0
  8869  00163C                     u10470:
  8870  00163C  6F86               	movwf	_efgtoa$1333& (0+255),b
  8871  00163E  6B87               	clrf	(_efgtoa$1333+1)& (0+255),b
  8872  001640                     
  8873                           ; BSR set to: 0
  8874  001640  5186               	movf	_efgtoa$1333& (0+255),w,b
  8875  001642  1187               	iorwf	(_efgtoa$1333+1)& (0+255),w,b
  8876  001644  B4D8               	btfsc	status,2,c
  8877  001646  EF27  F00B         	goto	u10481
  8878  00164A  EF29  F00B         	goto	u10480
  8879  00164E                     u10481:
  8880  00164E  EF37  F00B         	goto	l8188
  8881  001652                     u10480:
  8882  001652                     
  8883                           ; BSR set to: 0
  8884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8885  001652  0E88               	movlw	low _dbuf
  8886  001654  25B2               	addwf	efgtoa@n& (0+255),w,b
  8887  001656  6E03               	movwf	strcpy@dest^0,c
  8888  001658  0E01               	movlw	high _dbuf
  8889  00165A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8890  00165C  6E04               	movwf	(strcpy@dest+1)^0,c
  8891  00165E  0EBA               	movlw	low STR_5
  8892  001660  6E05               	movwf	strcpy@src^0,c
  8893  001662  0EFF               	movlw	high STR_5
  8894  001664  6E06               	movwf	(strcpy@src+1)^0,c
  8895  001666  EC46  F02C         	call	_strcpy	;wreg free
  8896                           
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8898  00166A  EF43  F00B         	goto	l8190
  8899  00166E                     l8188:
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8903  00166E  0E88               	movlw	low _dbuf
  8904  001670  25B2               	addwf	efgtoa@n& (0+255),w,b
  8905  001672  6E03               	movwf	strcpy@dest^0,c
  8906  001674  0E01               	movlw	high _dbuf
  8907  001676  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8908  001678  6E04               	movwf	(strcpy@dest+1)^0,c
  8909  00167A  0ECA               	movlw	low STR_6
  8910  00167C  6E05               	movwf	strcpy@src^0,c
  8911  00167E  0EFF               	movlw	high STR_6
  8912  001680  6E06               	movwf	(strcpy@src+1)^0,c
  8913  001682  EC46  F02C         	call	_strcpy	;wreg free
  8914  001686                     l8190:
  8915                           
  8916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8917  001686  0100               	movlb	0	; () banked
  8918  001688  0EFD               	movlw	253
  8919  00168A  279F               	addwf	efgtoa@w& (0+255),f,b
  8920  00168C  0EFF               	movlw	255
  8921  00168E  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8922  001690                     l8192:
  8923                           
  8924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8925  001690  C074  F013         	movff	efgtoa@fp,pad@fp
  8926  001694  C075  F014         	movff	efgtoa@fp+1,pad@fp+1
  8927  001698  0E88               	movlw	low _dbuf
  8928  00169A  6E15               	movwf	pad@buf^0,c
  8929  00169C  0E01               	movlw	high _dbuf
  8930  00169E  6E16               	movwf	(pad@buf+1)^0,c
  8931  0016A0  C09F  F017         	movff	efgtoa@w,pad@p
  8932  0016A4  C0A0  F018         	movff	efgtoa@w+1,pad@p+1
  8933  0016A8  ECA6  F029         	call	_pad	;wreg free
  8934  0016AC  C013  F074         	movff	?_pad,?_efgtoa
  8935  0016B0  C014  F075         	movff	?_pad+1,?_efgtoa+1
  8936  0016B4  EF6C  F010         	goto	l557
  8937  0016B8                     l8196:
  8938                           
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8940  0016B8  C0AC  F003         	movff	efgtoa@g,___fpclassifyf@x
  8941  0016BC  C0AD  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8942  0016C0  C0AE  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8943  0016C4  C0AF  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8944  0016C8  ECE2  F027         	call	___fpclassifyf	;wreg free
  8945  0016CC  5003               	movf	?___fpclassifyf^0,w,c
  8946  0016CE  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  8947  0016D0  A4D8               	btfss	status,2,c
  8948  0016D2  EF6D  F00B         	goto	u10491
  8949  0016D6  EF6F  F00B         	goto	u10490
  8950  0016DA                     u10491:
  8951  0016DA  EFAF  F00B         	goto	l8214
  8952  0016DE                     u10490:
  8953  0016DE  0EBF               	movlw	191
  8954  0016E0  0100               	movlb	0	; () banked
  8955  0016E2  6F7B               	movwf	??_efgtoa& (0+255),b
  8956  0016E4  0EFF               	movlw	255
  8957  0016E6  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  8958  0016E8  517A               	movf	efgtoa@c& (0+255),w,b
  8959  0016EA  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  8960  0016EC  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  8961  0016EE  517B               	movf	??_efgtoa& (0+255),w,b
  8962  0016F0  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  8963  0016F2  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  8964  0016F4  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8965  0016F6  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  8966  0016F8  E10A               	bnz	u10500
  8967  0016FA  0E1A               	movlw	26
  8968  0016FC  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  8969  0016FE  A0D8               	btfss	status,0,c
  8970  001700  EF84  F00B         	goto	u10501
  8971  001704  EF87  F00B         	goto	u10500
  8972  001708                     u10501:
  8973  001708  0E01               	movlw	1
  8974  00170A  EF88  F00B         	goto	u10510
  8975  00170E                     u10500:
  8976  00170E  0E00               	movlw	0
  8977  001710                     u10510:
  8978  001710  6F88               	movwf	_efgtoa$1337& (0+255),b
  8979  001712  6B89               	clrf	(_efgtoa$1337+1)& (0+255),b
  8980  001714                     
  8981                           ; BSR set to: 0
  8982  001714  5188               	movf	_efgtoa$1337& (0+255),w,b
  8983  001716  1189               	iorwf	(_efgtoa$1337+1)& (0+255),w,b
  8984  001718  B4D8               	btfsc	status,2,c
  8985  00171A  EF91  F00B         	goto	u10521
  8986  00171E  EF93  F00B         	goto	u10520
  8987  001722                     u10521:
  8988  001722  EFA1  F00B         	goto	l8206
  8989  001726                     u10520:
  8990  001726                     
  8991                           ; BSR set to: 0
  8992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8993  001726  0E88               	movlw	low _dbuf
  8994  001728  25B2               	addwf	efgtoa@n& (0+255),w,b
  8995  00172A  6E03               	movwf	strcpy@dest^0,c
  8996  00172C  0E01               	movlw	high _dbuf
  8997  00172E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8998  001730  6E04               	movwf	(strcpy@dest+1)^0,c
  8999  001732  0EBE               	movlw	low STR_9
  9000  001734  6E05               	movwf	strcpy@src^0,c
  9001  001736  0EFF               	movlw	high STR_9
  9002  001738  6E06               	movwf	(strcpy@src+1)^0,c
  9003  00173A  EC46  F02C         	call	_strcpy	;wreg free
  9004                           
  9005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9006  00173E  EF43  F00B         	goto	l8190
  9007  001742                     l8206:
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9011  001742  0E88               	movlw	low _dbuf
  9012  001744  25B2               	addwf	efgtoa@n& (0+255),w,b
  9013  001746  6E03               	movwf	strcpy@dest^0,c
  9014  001748  0E01               	movlw	high _dbuf
  9015  00174A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9016  00174C  6E04               	movwf	(strcpy@dest+1)^0,c
  9017  00174E  0ED2               	movlw	low STR_10
  9018  001750  6E05               	movwf	strcpy@src^0,c
  9019  001752  0EFF               	movlw	high STR_10
  9020  001754  6E06               	movwf	(strcpy@src+1)^0,c
  9021  001756  EC46  F02C         	call	_strcpy	;wreg free
  9022  00175A  EF43  F00B         	goto	l8190
  9023  00175E                     l8214:
  9024                           
  9025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9026  00175E  0E00               	movlw	0
  9027  001760  0100               	movlb	0	; () banked
  9028  001762  6FB4               	movwf	efgtoa@u& (0+255),b
  9029  001764  0E00               	movlw	0
  9030  001766  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  9031  001768  0E80               	movlw	128
  9032  00176A  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  9033  00176C  0E3F               	movlw	63
  9034  00176E  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  9035                           
  9036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9037  001770  0E00               	movlw	0
  9038  001772  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  9039  001774  0E00               	movlw	0
  9040  001776  6FB0               	movwf	efgtoa@e& (0+255),b
  9041  001778                     
  9042                           ; BSR set to: 0
  9043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9044  001778  C0AC  F003         	movff	efgtoa@g,___fleq@ff1
  9045  00177C  C0AD  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  9046  001780  C0AE  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  9047  001784  C0AF  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  9048  001788  0E00               	movlw	0
  9049  00178A  6E07               	movwf	___fleq@ff2^0,c
  9050  00178C  0E00               	movlw	0
  9051  00178E  6E08               	movwf	(___fleq@ff2+1)^0,c
  9052  001790  0E00               	movlw	0
  9053  001792  6E09               	movwf	(___fleq@ff2+2)^0,c
  9054  001794  0E00               	movlw	0
  9055  001796  6E0A               	movwf	(___fleq@ff2+3)^0,c
  9056  001798  EC1B  F02B         	call	___fleq	;wreg free
  9057  00179C  B0D8               	btfsc	status,0,c
  9058  00179E  EFD3  F00B         	goto	u10531
  9059  0017A2  EFD5  F00B         	goto	u10530
  9060  0017A6                     u10531:
  9061  0017A6  EF58  F00C         	goto	l8232
  9062  0017AA                     u10530:
  9063  0017AA  EFF4  F00B         	goto	l8224
  9064  0017AE                     l8220:
  9065                           
  9066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9067  0017AE  C0B4  F011         	movff	efgtoa@u,___flmul@b
  9068  0017B2  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  9069  0017B6  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  9070  0017BA  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  9071  0017BE  0E00               	movlw	0
  9072  0017C0  6E15               	movwf	___flmul@a^0,c
  9073  0017C2  0E00               	movlw	0
  9074  0017C4  6E16               	movwf	(___flmul@a+1)^0,c
  9075  0017C6  0E20               	movlw	32
  9076  0017C8  6E17               	movwf	(___flmul@a+2)^0,c
  9077  0017CA  0E41               	movlw	65
  9078  0017CC  6E18               	movwf	(___flmul@a+3)^0,c
  9079  0017CE  ECEE  F014         	call	___flmul	;wreg free
  9080  0017D2  C011  F0B4         	movff	?___flmul,efgtoa@u
  9081  0017D6  C012  F0B5         	movff	?___flmul+1,efgtoa@u+1
  9082  0017DA  C013  F0B6         	movff	?___flmul+2,efgtoa@u+2
  9083  0017DE  C014  F0B7         	movff	?___flmul+3,efgtoa@u+3
  9084  0017E2                     
  9085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9086  0017E2  0100               	movlb	0	; () banked
  9087  0017E4  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  9088  0017E6  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  9089  0017E8                     l8224:
  9090                           
  9091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9092  0017E8  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  9093  0017EC  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  9094  0017F0  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  9095  0017F4  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  9096  0017F8  0E00               	movlw	0
  9097  0017FA  6E15               	movwf	___flmul@a^0,c
  9098  0017FC  0E00               	movlw	0
  9099  0017FE  6E16               	movwf	(___flmul@a+1)^0,c
  9100  001800  0E20               	movlw	32
  9101  001802  6E17               	movwf	(___flmul@a+2)^0,c
  9102  001804  0E41               	movlw	65
  9103  001806  6E18               	movwf	(___flmul@a+3)^0,c
  9104  001808  C0B4  F011         	movff	efgtoa@u,___flmul@b
  9105  00180C  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  9106  001810  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  9107  001814  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  9108  001818  ECEE  F014         	call	___flmul	;wreg free
  9109  00181C  C011  F02E         	movff	?___flmul,___flge@ff2
  9110  001820  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  9111  001824  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  9112  001828  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  9113  00182C  EC60  F027         	call	___flge	;wreg free
  9114  001830  B0D8               	btfsc	status,0,c
  9115  001832  EF1D  F00C         	goto	u10541
  9116  001836  EF1F  F00C         	goto	u10540
  9117  00183A                     u10541:
  9118  00183A  EFD7  F00B         	goto	l8220
  9119  00183E                     u10540:
  9120  00183E  EF3F  F00C         	goto	l8230
  9121  001842                     l8226:
  9122                           
  9123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9124  001842  C0B4  F042         	movff	efgtoa@u,___fldiv@b
  9125  001846  C0B5  F043         	movff	efgtoa@u+1,___fldiv@b+1
  9126  00184A  C0B6  F044         	movff	efgtoa@u+2,___fldiv@b+2
  9127  00184E  C0B7  F045         	movff	efgtoa@u+3,___fldiv@b+3
  9128  001852  0E00               	movlw	0
  9129  001854  6E46               	movwf	___fldiv@a^0,c
  9130  001856  0E00               	movlw	0
  9131  001858  6E47               	movwf	(___fldiv@a+1)^0,c
  9132  00185A  0E20               	movlw	32
  9133  00185C  6E48               	movwf	(___fldiv@a+2)^0,c
  9134  00185E  0E41               	movlw	65
  9135  001860  6E49               	movwf	(___fldiv@a+3)^0,c
  9136  001862  EC03  F017         	call	___fldiv	;wreg free
  9137  001866  C042  F0B4         	movff	?___fldiv,efgtoa@u
  9138  00186A  C043  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  9139  00186E  C044  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  9140  001872  C045  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  9141  001876                     
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9143  001876  0100               	movlb	0	; () banked
  9144  001878  07B0               	decf	efgtoa@e& (0+255),f,b
  9145  00187A  A0D8               	btfss	status,0,c
  9146  00187C  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  9147  00187E                     l8230:
  9148                           
  9149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9150  00187E  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  9151  001882  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  9152  001886  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  9153  00188A  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  9154  00188E  C0B4  F02E         	movff	efgtoa@u,___flge@ff2
  9155  001892  C0B5  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  9156  001896  C0B6  F030         	movff	efgtoa@u+2,___flge@ff2+2
  9157  00189A  C0B7  F031         	movff	efgtoa@u+3,___flge@ff2+3
  9158  00189E  EC60  F027         	call	___flge	;wreg free
  9159  0018A2  A0D8               	btfss	status,0,c
  9160  0018A4  EF56  F00C         	goto	u10551
  9161  0018A8  EF58  F00C         	goto	u10550
  9162  0018AC                     u10551:
  9163  0018AC  EF21  F00C         	goto	l8226
  9164  0018B0                     u10550:
  9165  0018B0                     l8232:
  9166                           
  9167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9168  0018B0  C07A  F009         	movff	efgtoa@c,tolower@c
  9169  0018B4  6A0A               	clrf	(tolower@c+1)^0,c
  9170  0018B6  ECE7  F02B         	call	_tolower	;wreg free
  9171  0018BA  5009               	movf	?_tolower^0,w,c
  9172  0018BC  0100               	movlb	0	; () banked
  9173  0018BE  6FA1               	movwf	efgtoa@mode& (0+255),b
  9174  0018C0                     
  9175                           ; BSR set to: 0
  9176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9177  0018C0  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  9178  0018C4                     
  9179                           ; BSR set to: 0
  9180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9181  0018C4  0E67               	movlw	103
  9182  0018C6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9183  0018C8  A4D8               	btfss	status,2,c
  9184  0018CA  EF69  F00C         	goto	u10561
  9185  0018CE  EF6B  F00C         	goto	u10560
  9186  0018D2                     u10561:
  9187  0018D2  EF91  F00C         	goto	l8246
  9188  0018D6                     u10560:
  9189  0018D6                     
  9190                           ; BSR set to: 0
  9191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9192  0018D6  505B               	movf	_prec^0,w,c
  9193  0018D8  105C               	iorwf	(_prec+1)^0,w,c
  9194  0018DA  A4D8               	btfss	status,2,c
  9195  0018DC  EF72  F00C         	goto	u10571
  9196  0018E0  EF74  F00C         	goto	u10570
  9197  0018E4                     u10571:
  9198  0018E4  EF78  F00C         	goto	l8242
  9199  0018E8                     u10570:
  9200  0018E8                     
  9201                           ; BSR set to: 0
  9202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9203  0018E8  0E00               	movlw	0
  9204  0018EA  6E5C               	movwf	(_prec+1)^0,c
  9205  0018EC  0E01               	movlw	1
  9206  0018EE  6E5B               	movwf	_prec^0,c
  9207  0018F0                     l8242:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9211  0018F0  BE5C               	btfsc	(_prec+1)^0,7,c
  9212  0018F2  EF85  F00C         	goto	u10580
  9213  0018F6  505C               	movf	(_prec+1)^0,w,c
  9214  0018F8  E106               	bnz	u10581
  9215  0018FA  045B               	decf	_prec^0,w,c
  9216  0018FC  B0D8               	btfsc	status,0,c
  9217  0018FE  EF83  F00C         	goto	u10581
  9218  001902  EF85  F00C         	goto	u10580
  9219  001906                     u10581:
  9220  001906  EF8B  F00C         	goto	l575
  9221  00190A                     u10580:
  9222  00190A                     l8244:
  9223                           
  9224                           ; BSR set to: 0
  9225  00190A  0E00               	movlw	0
  9226  00190C  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  9227  00190E  0E06               	movlw	6
  9228  001910  6F9C               	movwf	efgtoa@p& (0+255),b
  9229  001912  EF9A  F00C         	goto	l8252
  9230  001916                     l575:
  9231                           
  9232                           ; BSR set to: 0
  9233  001916  C05B  F09C         	movff	_prec,efgtoa@p
  9234  00191A  C05C  F09D         	movff	_prec+1,efgtoa@p+1
  9235  00191E  EF9A  F00C         	goto	l8252
  9236  001922                     l8246:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9240  001922  BE5C               	btfsc	(_prec+1)^0,7,c
  9241  001924  EF96  F00C         	goto	u10591
  9242  001928  EF98  F00C         	goto	u10590
  9243  00192C                     u10591:
  9244  00192C  EF85  F00C         	goto	l8244
  9245  001930                     u10590:
  9246  001930  EF8B  F00C         	goto	l575
  9247  001934                     l8252:
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9251  001934  0E67               	movlw	103
  9252  001936  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9253  001938  A4D8               	btfss	status,2,c
  9254  00193A  EFA1  F00C         	goto	u10601
  9255  00193E  EFA3  F00C         	goto	u10600
  9256  001942                     u10601:
  9257  001942  EFD2  F00C         	goto	l8262
  9258  001946                     u10600:
  9259  001946                     
  9260                           ; BSR set to: 0
  9261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9262  001946  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  9263  001948  EFB1  F00C         	goto	u10610
  9264  00194C  0EFC               	movlw	252
  9265  00194E  5DB0               	subwf	efgtoa@e& (0+255),w,b
  9266  001950  0EFF               	movlw	255
  9267  001952  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9268  001954  A0D8               	btfss	status,0,c
  9269  001956  EFAF  F00C         	goto	u10611
  9270  00195A  EFB1  F00C         	goto	u10610
  9271  00195E                     u10611:
  9272  00195E  EFD0  F00C         	goto	l8260
  9273  001962                     u10610:
  9274  001962                     
  9275                           ; BSR set to: 0
  9276  001962  0EFF               	movlw	255
  9277  001964  6F7B               	movwf	??_efgtoa& (0+255),b
  9278  001966  0EFF               	movlw	255
  9279  001968  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  9280  00196A  C09C  F07D         	movff	efgtoa@p,??_efgtoa+2
  9281  00196E  C09D  F07E         	movff	efgtoa@p+1,??_efgtoa+3
  9282  001972  517B               	movf	??_efgtoa& (0+255),w,b
  9283  001974  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  9284  001976  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  9285  001978  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9286  00197A  51B0               	movf	efgtoa@e& (0+255),w,b
  9287  00197C  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  9288  00197E  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  9289  001980  0A80               	xorlw	128
  9290  001982  6F7F               	movwf	(??_efgtoa+4)& (0+255),b
  9291  001984  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  9292  001986  0A80               	xorlw	128
  9293  001988  597F               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9294  00198A  A0D8               	btfss	status,0,c
  9295  00198C  EFCA  F00C         	goto	u10621
  9296  001990  EFCC  F00C         	goto	u10620
  9297  001994                     u10621:
  9298  001994  EFD0  F00C         	goto	l8260
  9299  001998                     u10620:
  9300  001998                     
  9301                           ; BSR set to: 0
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9303  001998  0E66               	movlw	102
  9304  00199A  6F9E               	movwf	efgtoa@nmode& (0+255),b
  9305                           
  9306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9307  00199C  EFD2  F00C         	goto	l8262
  9308  0019A0                     l8260:
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9312  0019A0  0E65               	movlw	101
  9313  0019A2  6F9E               	movwf	efgtoa@nmode& (0+255),b
  9314  0019A4                     l8262:
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9318  0019A4  C09C  F094         	movff	efgtoa@p,efgtoa@m
  9319  0019A8  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  9320  0019AC                     
  9321                           ; BSR set to: 0
  9322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9323  0019AC  0E67               	movlw	103
  9324  0019AE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9325  0019B0  A4D8               	btfss	status,2,c
  9326  0019B2  EFDD  F00C         	goto	u10631
  9327  0019B6  EFDF  F00C         	goto	u10630
  9328  0019BA                     u10631:
  9329  0019BA  EFEF  F00C         	goto	l8270
  9330  0019BE                     u10630:
  9331  0019BE                     
  9332                           ; BSR set to: 0
  9333  0019BE  0E66               	movlw	102
  9334  0019C0  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  9335  0019C2  A4D8               	btfss	status,2,c
  9336  0019C4  EFE6  F00C         	goto	u10641
  9337  0019C8  EFE8  F00C         	goto	u10640
  9338  0019CC                     u10641:
  9339  0019CC  EFF1  F00C         	goto	l8272
  9340  0019D0                     u10640:
  9341  0019D0                     
  9342                           ; BSR set to: 0
  9343  0019D0  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9344  0019D2  EFEF  F00C         	goto	u10650
  9345  0019D6  EFED  F00C         	goto	u10651
  9346  0019DA                     u10651:
  9347  0019DA  EFF1  F00C         	goto	l8272
  9348  0019DE                     u10650:
  9349  0019DE                     l8270:
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9353  0019DE  4B94               	infsnz	efgtoa@m& (0+255),f,b
  9354  0019E0  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  9355  0019E2                     l8272:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9359  0019E2  0E66               	movlw	102
  9360  0019E4  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  9361  0019E6  A4D8               	btfss	status,2,c
  9362  0019E8  EFF8  F00C         	goto	u10661
  9363  0019EC  EFFA  F00C         	goto	u10660
  9364  0019F0                     u10661:
  9365  0019F0  EF1A  F00D         	goto	l8282
  9366  0019F4                     u10660:
  9367  0019F4                     
  9368                           ; BSR set to: 0
  9369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9370  0019F4  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9371  0019F6  EF01  F00D         	goto	u10670
  9372  0019FA  EFFF  F00C         	goto	u10671
  9373  0019FE                     u10671:
  9374  0019FE  EF0D  F00D         	goto	l8278
  9375  001A02                     u10670:
  9376  001A02                     
  9377                           ; BSR set to: 0
  9378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9379  001A02  0E00               	movlw	0
  9380  001A04  6FB4               	movwf	efgtoa@u& (0+255),b
  9381  001A06  0E00               	movlw	0
  9382  001A08  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  9383  001A0A  0E80               	movlw	128
  9384  001A0C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  9385  001A0E  0E3F               	movlw	63
  9386  001A10  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  9387                           
  9388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9389  001A12  0E00               	movlw	0
  9390  001A14  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  9391  001A16  0E00               	movlw	0
  9392  001A18  6FB0               	movwf	efgtoa@e& (0+255),b
  9393  001A1A                     l8278:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9397  001A1A  0E67               	movlw	103
  9398  001A1C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9399  001A1E  B4D8               	btfsc	status,2,c
  9400  001A20  EF14  F00D         	goto	u10681
  9401  001A24  EF16  F00D         	goto	u10680
  9402  001A28                     u10681:
  9403  001A28  EF1A  F00D         	goto	l8282
  9404  001A2C                     u10680:
  9405  001A2C                     
  9406                           ; BSR set to: 0
  9407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9408  001A2C  51B0               	movf	efgtoa@e& (0+255),w,b
  9409  001A2E  2794               	addwf	efgtoa@m& (0+255),f,b
  9410  001A30  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  9411  001A32  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9412  001A34                     l8282:
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9416  001A34  0E00               	movlw	0
  9417  001A36  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  9418  001A38  0E00               	movlw	0
  9419  001A3A  6FAA               	movwf	efgtoa@i& (0+255),b
  9420  001A3C                     
  9421                           ; BSR set to: 0
  9422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9423  001A3C  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  9424  001A40  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  9425  001A44  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  9426  001A48  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  9427  001A4C                     
  9428                           ; BSR set to: 0
  9429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9430  001A4C  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  9431  001A50  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  9432  001A54  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  9433  001A58  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  9434                           
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9436  001A5C  EFAB  F00D         	goto	l8296
  9437  001A60                     l8288:
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9441  001A60  C0A2  F042         	movff	efgtoa@h,___fldiv@b
  9442  001A64  C0A3  F043         	movff	efgtoa@h+1,___fldiv@b+1
  9443  001A68  C0A4  F044         	movff	efgtoa@h+2,___fldiv@b+2
  9444  001A6C  C0A5  F045         	movff	efgtoa@h+3,___fldiv@b+3
  9445  001A70  C0B4  F046         	movff	efgtoa@u,___fldiv@a
  9446  001A74  C0B5  F047         	movff	efgtoa@u+1,___fldiv@a+1
  9447  001A78  C0B6  F048         	movff	efgtoa@u+2,___fldiv@a+2
  9448  001A7C  C0B7  F049         	movff	efgtoa@u+3,___fldiv@a+3
  9449  001A80  EC03  F017         	call	___fldiv	;wreg free
  9450  001A84  C042  F060         	movff	?___fldiv,floorf@x
  9451  001A88  C043  F061         	movff	?___fldiv+1,floorf@x+1
  9452  001A8C  C044  F062         	movff	?___fldiv+2,floorf@x+2
  9453  001A90  C045  F063         	movff	?___fldiv+3,floorf@x+3
  9454  001A94  EC74  F01D         	call	_floorf	;wreg free
  9455  001A98  C060  F0A6         	movff	?_floorf,efgtoa@l
  9456  001A9C  C061  F0A7         	movff	?_floorf+1,efgtoa@l+1
  9457  001AA0  C062  F0A8         	movff	?_floorf+2,efgtoa@l+2
  9458  001AA4  C063  F0A9         	movff	?_floorf+3,efgtoa@l+3
  9459                           
  9460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9461  001AA8  C0A6  F003         	movff	efgtoa@l,___fltol@f1
  9462  001AAC  C0A7  F004         	movff	efgtoa@l+1,___fltol@f1+1
  9463  001AB0  C0A8  F005         	movff	efgtoa@l+2,___fltol@f1+2
  9464  001AB4  C0A9  F006         	movff	efgtoa@l+3,___fltol@f1+3
  9465  001AB8  ECDD  F026         	call	___fltol	;wreg free
  9466  001ABC  C003  F098         	movff	?___fltol,efgtoa@d
  9467  001AC0  C004  F099         	movff	?___fltol+1,efgtoa@d+1
  9468  001AC4                     
  9469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9470  001AC4  C0A2  F03A         	movff	efgtoa@h,___flsub@b
  9471  001AC8  C0A3  F03B         	movff	efgtoa@h+1,___flsub@b+1
  9472  001ACC  C0A4  F03C         	movff	efgtoa@h+2,___flsub@b+2
  9473  001AD0  C0A5  F03D         	movff	efgtoa@h+3,___flsub@b+3
  9474  001AD4  C0B4  F015         	movff	efgtoa@u,___flmul@a
  9475  001AD8  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
  9476  001ADC  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
  9477  001AE0  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
  9478  001AE4  C0A6  F011         	movff	efgtoa@l,___flmul@b
  9479  001AE8  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
  9480  001AEC  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
  9481  001AF0  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
  9482  001AF4  ECEE  F014         	call	___flmul	;wreg free
  9483  001AF8  C011  F03E         	movff	?___flmul,___flsub@a
  9484  001AFC  C012  F03F         	movff	?___flmul+1,___flsub@a+1
  9485  001B00  C013  F040         	movff	?___flmul+2,___flsub@a+2
  9486  001B04  C014  F041         	movff	?___flmul+3,___flsub@a+3
  9487  001B08  EC3C  F02D         	call	___flsub	;wreg free
  9488  001B0C  C03A  F0A2         	movff	?___flsub,efgtoa@h
  9489  001B10  C03B  F0A3         	movff	?___flsub+1,efgtoa@h+1
  9490  001B14  C03C  F0A4         	movff	?___flsub+2,efgtoa@h+2
  9491  001B18  C03D  F0A5         	movff	?___flsub+3,efgtoa@h+3
  9492  001B1C                     
  9493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9494  001B1C  C0B4  F042         	movff	efgtoa@u,___fldiv@b
  9495  001B20  C0B5  F043         	movff	efgtoa@u+1,___fldiv@b+1
  9496  001B24  C0B6  F044         	movff	efgtoa@u+2,___fldiv@b+2
  9497  001B28  C0B7  F045         	movff	efgtoa@u+3,___fldiv@b+3
  9498  001B2C  0E00               	movlw	0
  9499  001B2E  6E46               	movwf	___fldiv@a^0,c
  9500  001B30  0E00               	movlw	0
  9501  001B32  6E47               	movwf	(___fldiv@a+1)^0,c
  9502  001B34  0E20               	movlw	32
  9503  001B36  6E48               	movwf	(___fldiv@a+2)^0,c
  9504  001B38  0E41               	movlw	65
  9505  001B3A  6E49               	movwf	(___fldiv@a+3)^0,c
  9506  001B3C  EC03  F017         	call	___fldiv	;wreg free
  9507  001B40  C042  F0B4         	movff	?___fldiv,efgtoa@u
  9508  001B44  C043  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  9509  001B48  C044  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  9510  001B4C  C045  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  9511  001B50                     
  9512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9513  001B50  0100               	movlb	0	; () banked
  9514  001B52  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  9515  001B54  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  9516  001B56                     l8296:
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9520  001B56  5194               	movf	efgtoa@m& (0+255),w,b
  9521  001B58  5DAA               	subwf	efgtoa@i& (0+255),w,b
  9522  001B5A  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  9523  001B5C  0A80               	xorlw	128
  9524  001B5E  6F7B               	movwf	??_efgtoa& (0+255),b
  9525  001B60  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  9526  001B62  0A80               	xorlw	128
  9527  001B64  597B               	subwfb	??_efgtoa& (0+255),w,b
  9528  001B66  A0D8               	btfss	status,0,c
  9529  001B68  EFB8  F00D         	goto	u10691
  9530  001B6C  EFBA  F00D         	goto	u10690
  9531  001B70                     u10691:
  9532  001B70  EF30  F00D         	goto	l8288
  9533  001B74                     u10690:
  9534  001B74                     
  9535                           ; BSR set to: 0
  9536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9537  001B74  C0B4  F011         	movff	efgtoa@u,___flmul@b
  9538  001B78  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  9539  001B7C  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  9540  001B80  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  9541  001B84  0E00               	movlw	0
  9542  001B86  6E15               	movwf	___flmul@a^0,c
  9543  001B88  0E00               	movlw	0
  9544  001B8A  6E16               	movwf	(___flmul@a+1)^0,c
  9545  001B8C  0EA0               	movlw	160
  9546  001B8E  6E17               	movwf	(___flmul@a+2)^0,c
  9547  001B90  0E40               	movlw	64
  9548  001B92  6E18               	movwf	(___flmul@a+3)^0,c
  9549  001B94  ECEE  F014         	call	___flmul	;wreg free
  9550  001B98  C011  F0A6         	movff	?___flmul,efgtoa@l
  9551  001B9C  C012  F0A7         	movff	?___flmul+1,efgtoa@l+1
  9552  001BA0  C013  F0A8         	movff	?___flmul+2,efgtoa@l+2
  9553  001BA4  C014  F0A9         	movff	?___flmul+3,efgtoa@l+3
  9554  001BA8                     
  9555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9556  001BA8  C0A2  F02A         	movff	efgtoa@h,___flge@ff1
  9557  001BAC  C0A3  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  9558  001BB0  C0A4  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  9559  001BB4  C0A5  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  9560  001BB8  C0A6  F02E         	movff	efgtoa@l,___flge@ff2
  9561  001BBC  C0A7  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  9562  001BC0  C0A8  F030         	movff	efgtoa@l+2,___flge@ff2+2
  9563  001BC4  C0A9  F031         	movff	efgtoa@l+3,___flge@ff2+3
  9564  001BC8  EC60  F027         	call	___flge	;wreg free
  9565  001BCC  B0D8               	btfsc	status,0,c
  9566  001BCE  EFEB  F00D         	goto	u10701
  9567  001BD2  EFED  F00D         	goto	u10700
  9568  001BD6                     u10701:
  9569  001BD6  EFF8  F00D         	goto	l8304
  9570  001BDA                     u10700:
  9571  001BDA                     
  9572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9573  001BDA  0E00               	movlw	0
  9574  001BDC  0100               	movlb	0	; () banked
  9575  001BDE  6FA6               	movwf	efgtoa@l& (0+255),b
  9576  001BE0  0E00               	movlw	0
  9577  001BE2  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  9578  001BE4  0E00               	movlw	0
  9579  001BE6  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  9580  001BE8  0E00               	movlw	0
  9581  001BEA  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  9582                           
  9583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9584  001BEC  EF21  F00E         	goto	l8310
  9585  001BF0                     l8304:
  9586                           
  9587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9588  001BF0  C0A2  F003         	movff	efgtoa@h,___fleq@ff1
  9589  001BF4  C0A3  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  9590  001BF8  C0A4  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  9591  001BFC  C0A5  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  9592  001C00  C0A6  F007         	movff	efgtoa@l,___fleq@ff2
  9593  001C04  C0A7  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  9594  001C08  C0A8  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  9595  001C0C  C0A9  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  9596  001C10  EC1B  F02B         	call	___fleq	;wreg free
  9597  001C14  A0D8               	btfss	status,0,c
  9598  001C16  EF0F  F00E         	goto	u10711
  9599  001C1A  EF11  F00E         	goto	u10710
  9600  001C1E                     u10711:
  9601  001C1E  EF21  F00E         	goto	l8310
  9602  001C22                     u10710:
  9603  001C22  0100               	movlb	0	; () banked
  9604  001C24  B198               	btfsc	efgtoa@d& (0+255),0,b
  9605  001C26  EF17  F00E         	goto	u10721
  9606  001C2A  EF19  F00E         	goto	u10720
  9607  001C2E                     u10721:
  9608  001C2E  EF21  F00E         	goto	l8310
  9609  001C32                     u10720:
  9610  001C32                     
  9611                           ; BSR set to: 0
  9612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9613  001C32  0E00               	movlw	0
  9614  001C34  6FA6               	movwf	efgtoa@l& (0+255),b
  9615  001C36  0E00               	movlw	0
  9616  001C38  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  9617  001C3A  0E00               	movlw	0
  9618  001C3C  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  9619  001C3E  0E00               	movlw	0
  9620  001C40  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  9621  001C42                     l8310:
  9622                           
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9624  001C42  C0AC  F02A         	movff	efgtoa@g,___fladd@b
  9625  001C46  C0AD  F02B         	movff	efgtoa@g+1,___fladd@b+1
  9626  001C4A  C0AE  F02C         	movff	efgtoa@g+2,___fladd@b+2
  9627  001C4E  C0AF  F02D         	movff	efgtoa@g+3,___fladd@b+3
  9628  001C52  C0A6  F02E         	movff	efgtoa@l,___fladd@a
  9629  001C56  C0A7  F02F         	movff	efgtoa@l+1,___fladd@a+1
  9630  001C5A  C0A8  F030         	movff	efgtoa@l+2,___fladd@a+2
  9631  001C5E  C0A9  F031         	movff	efgtoa@l+3,___fladd@a+3
  9632  001C62  EC6D  F010         	call	___fladd	;wreg free
  9633  001C66  C02A  F0A2         	movff	?___fladd,efgtoa@h
  9634  001C6A  C02B  F0A3         	movff	?___fladd+1,efgtoa@h+1
  9635  001C6E  C02C  F0A4         	movff	?___fladd+2,efgtoa@h+2
  9636  001C72  C02D  F0A5         	movff	?___fladd+3,efgtoa@h+3
  9637  001C76                     
  9638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9639  001C76  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  9640  001C7A  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  9641  001C7E  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  9642  001C82  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  9643  001C86                     
  9644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9645  001C86  0E65               	movlw	101
  9646  001C88  0100               	movlb	0	; () banked
  9647  001C8A  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  9648  001C8C  B4D8               	btfsc	status,2,c
  9649  001C8E  EF4B  F00E         	goto	u10731
  9650  001C92  EF4D  F00E         	goto	u10730
  9651  001C96                     u10731:
  9652  001C96  EF53  F00E         	goto	l8318
  9653  001C9A                     u10730:
  9654  001C9A                     
  9655                           ; BSR set to: 0
  9656  001C9A  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  9657  001C9E  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  9658  001CA2  EF57  F00E         	goto	l601
  9659  001CA6                     l8318:
  9660                           
  9661                           ; BSR set to: 0
  9662  001CA6  0E00               	movlw	0
  9663  001CA8  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  9664  001CAA  0E00               	movlw	0
  9665  001CAC  6F96               	movwf	efgtoa@ne& (0+255),b
  9666  001CAE                     l601:
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9670  001CAE  0E00               	movlw	0
  9671  001CB0  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  9672  001CB2  0E00               	movlw	0
  9673  001CB4  6F92               	movwf	efgtoa@pp& (0+255),b
  9674                           
  9675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9676  001CB6  0E00               	movlw	0
  9677  001CB8  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  9678  001CBA  0E00               	movlw	0
  9679  001CBC  6F90               	movwf	efgtoa@t& (0+255),b
  9680                           
  9681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9682  001CBE  0E00               	movlw	0
  9683  001CC0  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  9684  001CC2  0E00               	movlw	0
  9685  001CC4  6FAA               	movwf	efgtoa@i& (0+255),b
  9686                           
  9687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9688  001CC6  EF52  F00F         	goto	l8368
  9689  001CCA                     l8320:
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9693  001CCA  C0A2  F042         	movff	efgtoa@h,___fldiv@b
  9694  001CCE  C0A3  F043         	movff	efgtoa@h+1,___fldiv@b+1
  9695  001CD2  C0A4  F044         	movff	efgtoa@h+2,___fldiv@b+2
  9696  001CD6  C0A5  F045         	movff	efgtoa@h+3,___fldiv@b+3
  9697  001CDA  C0B4  F046         	movff	efgtoa@u,___fldiv@a
  9698  001CDE  C0B5  F047         	movff	efgtoa@u+1,___fldiv@a+1
  9699  001CE2  C0B6  F048         	movff	efgtoa@u+2,___fldiv@a+2
  9700  001CE6  C0B7  F049         	movff	efgtoa@u+3,___fldiv@a+3
  9701  001CEA  EC03  F017         	call	___fldiv	;wreg free
  9702  001CEE  C042  F060         	movff	?___fldiv,floorf@x
  9703  001CF2  C043  F061         	movff	?___fldiv+1,floorf@x+1
  9704  001CF6  C044  F062         	movff	?___fldiv+2,floorf@x+2
  9705  001CFA  C045  F063         	movff	?___fldiv+3,floorf@x+3
  9706  001CFE  EC74  F01D         	call	_floorf	;wreg free
  9707  001D02  C060  F0A6         	movff	?_floorf,efgtoa@l
  9708  001D06  C061  F0A7         	movff	?_floorf+1,efgtoa@l+1
  9709  001D0A  C062  F0A8         	movff	?_floorf+2,efgtoa@l+2
  9710  001D0E  C063  F0A9         	movff	?_floorf+3,efgtoa@l+3
  9711                           
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9713  001D12  C0A6  F003         	movff	efgtoa@l,___fltol@f1
  9714  001D16  C0A7  F004         	movff	efgtoa@l+1,___fltol@f1+1
  9715  001D1A  C0A8  F005         	movff	efgtoa@l+2,___fltol@f1+2
  9716  001D1E  C0A9  F006         	movff	efgtoa@l+3,___fltol@f1+3
  9717  001D22  ECDD  F026         	call	___fltol	;wreg free
  9718  001D26  C003  F098         	movff	?___fltol,efgtoa@d
  9719  001D2A  C004  F099         	movff	?___fltol+1,efgtoa@d+1
  9720  001D2E                     
  9721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9722  001D2E  0100               	movlb	0	; () banked
  9723  001D30  B9FC               	btfsc	_flags& (0+255),4,b
  9724  001D32  EF9D  F00E         	goto	u10741
  9725  001D36  EF9F  F00E         	goto	u10740
  9726  001D3A                     u10741:
  9727  001D3A  EFBC  F00E         	goto	l8332
  9728  001D3E                     u10740:
  9729  001D3E                     
  9730                           ; BSR set to: 0
  9731  001D3E  5198               	movf	efgtoa@d& (0+255),w,b
  9732  001D40  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9733  001D42  A4D8               	btfss	status,2,c
  9734  001D44  EFA6  F00E         	goto	u10751
  9735  001D48  EFA8  F00E         	goto	u10750
  9736  001D4C                     u10751:
  9737  001D4C  EFBC  F00E         	goto	l8332
  9738  001D50                     u10750:
  9739  001D50                     
  9740                           ; BSR set to: 0
  9741  001D50  0E67               	movlw	103
  9742  001D52  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  9743  001D54  A4D8               	btfss	status,2,c
  9744  001D56  EFAF  F00E         	goto	u10761
  9745  001D5A  EFB1  F00E         	goto	u10760
  9746  001D5E                     u10761:
  9747  001D5E  EFBC  F00E         	goto	l8332
  9748  001D62                     u10760:
  9749  001D62                     
  9750                           ; BSR set to: 0
  9751  001D62  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9752  001D64  EFB8  F00E         	goto	u10770
  9753  001D68  EFB6  F00E         	goto	u10771
  9754  001D6C                     u10771:
  9755  001D6C  EFBC  F00E         	goto	l8332
  9756  001D70                     u10770:
  9757  001D70                     
  9758                           ; BSR set to: 0
  9759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9760  001D70  4B90               	infsnz	efgtoa@t& (0+255),f,b
  9761  001D72  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  9762                           
  9763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9764  001D74  EF06  F00F         	goto	l8360
  9765  001D78                     l8332:
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9769  001D78  5192               	movf	efgtoa@pp& (0+255),w,b
  9770  001D7A  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9771  001D7C  A4D8               	btfss	status,2,c
  9772  001D7E  EFC3  F00E         	goto	u10781
  9773  001D82  EFC5  F00E         	goto	u10780
  9774  001D86                     u10781:
  9775  001D86  EFEF  F00E         	goto	l8352
  9776  001D8A                     u10780:
  9777  001D8A                     
  9778                           ; BSR set to: 0
  9779  001D8A  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9780  001D8C  EFCC  F00E         	goto	u10790
  9781  001D90  EFCA  F00E         	goto	u10791
  9782  001D94                     u10791:
  9783  001D94  EFEF  F00E         	goto	l8352
  9784  001D98                     u10790:
  9785  001D98                     
  9786                           ; BSR set to: 0
  9787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9788  001D98  0E88               	movlw	low _dbuf
  9789  001D9A  25B2               	addwf	efgtoa@n& (0+255),w,b
  9790  001D9C  6ED9               	movwf	fsr2l,c
  9791  001D9E  0E01               	movlw	high _dbuf
  9792  001DA0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9793  001DA2  6EDA               	movwf	fsr2h,c
  9794  001DA4  0E2E               	movlw	46
  9795  001DA6  6EDF               	movwf	indf2,c
  9796  001DA8                     
  9797                           ; BSR set to: 0
  9798  001DA8  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  9799  001DAA  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  9800  001DAC                     
  9801                           ; BSR set to: 0
  9802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9803  001DAC  079F               	decf	efgtoa@w& (0+255),f,b
  9804  001DAE  A0D8               	btfss	status,0,c
  9805  001DB0  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  9806  001DB2                     
  9807                           ; BSR set to: 0
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9809  001DB2  0E00               	movlw	0
  9810  001DB4  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  9811  001DB6  0E01               	movlw	1
  9812  001DB8  6F92               	movwf	efgtoa@pp& (0+255),b
  9813  001DBA  EFEF  F00E         	goto	l8352
  9814  001DBE                     l8344:
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9818  001DBE  0E88               	movlw	low _dbuf
  9819  001DC0  25B2               	addwf	efgtoa@n& (0+255),w,b
  9820  001DC2  6ED9               	movwf	fsr2l,c
  9821  001DC4  0E01               	movlw	high _dbuf
  9822  001DC6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9823  001DC8  6EDA               	movwf	fsr2h,c
  9824  001DCA  0E30               	movlw	48
  9825  001DCC  6EDF               	movwf	indf2,c
  9826  001DCE                     
  9827                           ; BSR set to: 0
  9828  001DCE  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  9829  001DD0  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  9830  001DD2                     
  9831                           ; BSR set to: 0
  9832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9833  001DD2  079F               	decf	efgtoa@w& (0+255),f,b
  9834  001DD4  A0D8               	btfss	status,0,c
  9835  001DD6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  9836  001DD8                     
  9837                           ; BSR set to: 0
  9838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9839  001DD8  0790               	decf	efgtoa@t& (0+255),f,b
  9840  001DDA  A0D8               	btfss	status,0,c
  9841  001DDC  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  9842  001DDE                     l8352:
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9846  001DDE  5190               	movf	efgtoa@t& (0+255),w,b
  9847  001DE0  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9848  001DE2  A4D8               	btfss	status,2,c
  9849  001DE4  EFF6  F00E         	goto	u10801
  9850  001DE8  EFF8  F00E         	goto	u10800
  9851  001DEC                     u10801:
  9852  001DEC  EFDF  F00E         	goto	l8344
  9853  001DF0                     u10800:
  9854  001DF0                     
  9855                           ; BSR set to: 0
  9856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9857  001DF0  0E88               	movlw	low _dbuf
  9858  001DF2  25B2               	addwf	efgtoa@n& (0+255),w,b
  9859  001DF4  6ED9               	movwf	fsr2l,c
  9860  001DF6  0E01               	movlw	high _dbuf
  9861  001DF8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9862  001DFA  6EDA               	movwf	fsr2h,c
  9863  001DFC  5198               	movf	efgtoa@d& (0+255),w,b
  9864  001DFE  0F30               	addlw	48
  9865  001E00  6EDF               	movwf	indf2,c
  9866  001E02                     
  9867                           ; BSR set to: 0
  9868  001E02  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  9869  001E04  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  9870  001E06                     
  9871                           ; BSR set to: 0
  9872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9873  001E06  079F               	decf	efgtoa@w& (0+255),f,b
  9874  001E08  A0D8               	btfss	status,0,c
  9875  001E0A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  9876  001E0C                     l8360:
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9880  001E0C  C0A2  F03A         	movff	efgtoa@h,___flsub@b
  9881  001E10  C0A3  F03B         	movff	efgtoa@h+1,___flsub@b+1
  9882  001E14  C0A4  F03C         	movff	efgtoa@h+2,___flsub@b+2
  9883  001E18  C0A5  F03D         	movff	efgtoa@h+3,___flsub@b+3
  9884  001E1C  C0B4  F015         	movff	efgtoa@u,___flmul@a
  9885  001E20  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
  9886  001E24  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
  9887  001E28  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
  9888  001E2C  C0A6  F011         	movff	efgtoa@l,___flmul@b
  9889  001E30  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
  9890  001E34  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
  9891  001E38  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
  9892  001E3C  ECEE  F014         	call	___flmul	;wreg free
  9893  001E40  C011  F03E         	movff	?___flmul,___flsub@a
  9894  001E44  C012  F03F         	movff	?___flmul+1,___flsub@a+1
  9895  001E48  C013  F040         	movff	?___flmul+2,___flsub@a+2
  9896  001E4C  C014  F041         	movff	?___flmul+3,___flsub@a+3
  9897  001E50  EC3C  F02D         	call	___flsub	;wreg free
  9898  001E54  C03A  F0A2         	movff	?___flsub,efgtoa@h
  9899  001E58  C03B  F0A3         	movff	?___flsub+1,efgtoa@h+1
  9900  001E5C  C03C  F0A4         	movff	?___flsub+2,efgtoa@h+2
  9901  001E60  C03D  F0A5         	movff	?___flsub+3,efgtoa@h+3
  9902  001E64                     
  9903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9904  001E64  C0B4  F042         	movff	efgtoa@u,___fldiv@b
  9905  001E68  C0B5  F043         	movff	efgtoa@u+1,___fldiv@b+1
  9906  001E6C  C0B6  F044         	movff	efgtoa@u+2,___fldiv@b+2
  9907  001E70  C0B7  F045         	movff	efgtoa@u+3,___fldiv@b+3
  9908  001E74  0E00               	movlw	0
  9909  001E76  6E46               	movwf	___fldiv@a^0,c
  9910  001E78  0E00               	movlw	0
  9911  001E7A  6E47               	movwf	(___fldiv@a+1)^0,c
  9912  001E7C  0E20               	movlw	32
  9913  001E7E  6E48               	movwf	(___fldiv@a+2)^0,c
  9914  001E80  0E41               	movlw	65
  9915  001E82  6E49               	movwf	(___fldiv@a+3)^0,c
  9916  001E84  EC03  F017         	call	___fldiv	;wreg free
  9917  001E88  C042  F0B4         	movff	?___fldiv,efgtoa@u
  9918  001E8C  C043  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  9919  001E90  C044  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  9920  001E94  C045  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  9921  001E98                     
  9922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9923  001E98  0100               	movlb	0	; () banked
  9924  001E9A  0796               	decf	efgtoa@ne& (0+255),f,b
  9925  001E9C  A0D8               	btfss	status,0,c
  9926  001E9E  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  9927  001EA0                     
  9928                           ; BSR set to: 0
  9929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9930  001EA0  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  9931  001EA2  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  9932  001EA4                     l8368:
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9936  001EA4  5194               	movf	efgtoa@m& (0+255),w,b
  9937  001EA6  5DAA               	subwf	efgtoa@i& (0+255),w,b
  9938  001EA8  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  9939  001EAA  0A80               	xorlw	128
  9940  001EAC  6F7B               	movwf	??_efgtoa& (0+255),b
  9941  001EAE  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  9942  001EB0  0A80               	xorlw	128
  9943  001EB2  597B               	subwfb	??_efgtoa& (0+255),w,b
  9944  001EB4  B0D8               	btfsc	status,0,c
  9945  001EB6  EF5F  F00F         	goto	u10811
  9946  001EBA  EF61  F00F         	goto	u10810
  9947  001EBE                     u10811:
  9948  001EBE  EF6F  F00F         	goto	l8372
  9949  001EC2                     u10810:
  9950  001EC2                     
  9951                           ; BSR set to: 0
  9952  001EC2  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9953  001EC4  EF6D  F00F         	goto	u10821
  9954  001EC8  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  9955  001ECA  E109               	bnz	u10820
  9956  001ECC  0E4B               	movlw	75
  9957  001ECE  5DB2               	subwf	efgtoa@n& (0+255),w,b
  9958  001ED0  A0D8               	btfss	status,0,c
  9959  001ED2  EF6D  F00F         	goto	u10821
  9960  001ED6  EF6F  F00F         	goto	u10820
  9961  001EDA                     u10821:
  9962  001EDA  EF65  F00E         	goto	l8320
  9963  001EDE                     u10820:
  9964  001EDE                     l8372:
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9968  001EDE  5192               	movf	efgtoa@pp& (0+255),w,b
  9969  001EE0  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9970  001EE2  A4D8               	btfss	status,2,c
  9971  001EE4  EF76  F00F         	goto	u10831
  9972  001EE8  EF78  F00F         	goto	u10830
  9973  001EEC                     u10831:
  9974  001EEC  EF89  F00F         	goto	l8380
  9975  001EF0                     u10830:
  9976  001EF0                     
  9977                           ; BSR set to: 0
  9978  001EF0  A9FC               	btfss	_flags& (0+255),4,b
  9979  001EF2  EF7D  F00F         	goto	u10841
  9980  001EF6  EF7F  F00F         	goto	u10840
  9981  001EFA                     u10841:
  9982  001EFA  EF89  F00F         	goto	l8380
  9983  001EFE                     u10840:
  9984  001EFE                     
  9985                           ; BSR set to: 0
  9986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9987  001EFE  0E88               	movlw	low _dbuf
  9988  001F00  25B2               	addwf	efgtoa@n& (0+255),w,b
  9989  001F02  6ED9               	movwf	fsr2l,c
  9990  001F04  0E01               	movlw	high _dbuf
  9991  001F06  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9992  001F08  6EDA               	movwf	fsr2h,c
  9993  001F0A  0E2E               	movlw	46
  9994  001F0C  6EDF               	movwf	indf2,c
  9995  001F0E                     
  9996                           ; BSR set to: 0
  9997  001F0E  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  9998  001F10  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  9999  001F12                     l8380:
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10003  001F12  0E88               	movlw	low _dbuf
 10004  001F14  25B2               	addwf	efgtoa@n& (0+255),w,b
 10005  001F16  6ED9               	movwf	fsr2l,c
 10006  001F18  0E01               	movlw	high _dbuf
 10007  001F1A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10008  001F1C  6EDA               	movwf	fsr2h,c
 10009  001F1E  0E00               	movlw	0
 10010  001F20  6EDF               	movwf	indf2,c
 10011  001F22                     
 10012                           ; BSR set to: 0
 10013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10014  001F22  0E65               	movlw	101
 10015  001F24  199E               	xorwf	efgtoa@nmode& (0+255),w,b
 10016  001F26  A4D8               	btfss	status,2,c
 10017  001F28  EF98  F00F         	goto	u10851
 10018  001F2C  EF9A  F00F         	goto	u10850
 10019  001F30                     u10851:
 10020  001F30  EF48  F00B         	goto	l8192
 10021  001F34                     u10850:
 10022  001F34                     
 10023                           ; BSR set to: 0
 10024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10025  001F34  0E00               	movlw	0
 10026  001F36  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
 10027  001F38  0E4F               	movlw	79
 10028  001F3A  6FAA               	movwf	efgtoa@i& (0+255),b
 10029  001F3C                     
 10030                           ; BSR set to: 0
 10031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10032  001F3C  0E88               	movlw	low _dbuf
 10033  001F3E  25AA               	addwf	efgtoa@i& (0+255),w,b
 10034  001F40  6ED9               	movwf	fsr2l,c
 10035  001F42  0E01               	movlw	high _dbuf
 10036  001F44  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10037  001F46  6EDA               	movwf	fsr2h,c
 10038  001F48  0E00               	movlw	0
 10039  001F4A  6EDF               	movwf	indf2,c
 10040  001F4C                     
 10041                           ; BSR set to: 0
 10042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10043  001F4C  0E00               	movlw	0
 10044  001F4E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 10045  001F50  0E00               	movlw	0
 10046  001F52  6F9A               	movwf	efgtoa@sign& (0+255),b
 10047  001F54                     
 10048                           ; BSR set to: 0
 10049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10050  001F54  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10051  001F56  EFB1  F00F         	goto	u10860
 10052  001F5A  EFAF  F00F         	goto	u10861
 10053  001F5E                     u10861:
 10054  001F5E  EFB9  F00F         	goto	l8396
 10055  001F62                     u10860:
 10056  001F62                     
 10057                           ; BSR set to: 0
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10059  001F62  0E00               	movlw	0
 10060  001F64  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
 10061  001F66  0E01               	movlw	1
 10062  001F68  6F9A               	movwf	efgtoa@sign& (0+255),b
 10063  001F6A                     
 10064                           ; BSR set to: 0
 10065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10066  001F6A  6DB0               	negf	efgtoa@e& (0+255),b
 10067  001F6C  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
 10068  001F6E  B0D8               	btfsc	status,0,c
 10069  001F70  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
 10070  001F72                     l8396:
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10074  001F72  0E00               	movlw	0
 10075  001F74  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
 10076  001F76  0E02               	movlw	2
 10077  001F78  6F9C               	movwf	efgtoa@p& (0+255),b
 10078                           
 10079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10080  001F7A  EFEA  F00F         	goto	l8408
 10081  001F7E                     l8398:
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10085  001F7E  07AA               	decf	efgtoa@i& (0+255),f,b
 10086  001F80  A0D8               	btfss	status,0,c
 10087  001F82  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 10088  001F84                     
 10089                           ; BSR set to: 0
 10090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10091  001F84  0E88               	movlw	low _dbuf
 10092  001F86  25AA               	addwf	efgtoa@i& (0+255),w,b
 10093  001F88  6ED9               	movwf	fsr2l,c
 10094  001F8A  0E01               	movlw	high _dbuf
 10095  001F8C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10096  001F8E  6EDA               	movwf	fsr2h,c
 10097  001F90  C0B0  F003         	movff	efgtoa@e,___awmod@dividend
 10098  001F94  C0B1  F004         	movff	efgtoa@e+1,___awmod@dividend+1
 10099  001F98  0E00               	movlw	0
 10100  001F9A  6E06               	movwf	(___awmod@divisor+1)^0,c
 10101  001F9C  0E0A               	movlw	10
 10102  001F9E  6E05               	movwf	___awmod@divisor^0,c
 10103  001FA0  EC6B  F02A         	call	___awmod	;wreg free
 10104  001FA4  5003               	movf	?___awmod^0,w,c
 10105  001FA6  0F30               	addlw	48
 10106  001FA8  6EDF               	movwf	indf2,c
 10107  001FAA                     
 10108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10109  001FAA  C0B0  F003         	movff	efgtoa@e,___awdiv@dividend
 10110  001FAE  C0B1  F004         	movff	efgtoa@e+1,___awdiv@dividend+1
 10111  001FB2  0E00               	movlw	0
 10112  001FB4  6E06               	movwf	(___awdiv@divisor+1)^0,c
 10113  001FB6  0E0A               	movlw	10
 10114  001FB8  6E05               	movwf	___awdiv@divisor^0,c
 10115  001FBA  EC09  F02A         	call	___awdiv	;wreg free
 10116  001FBE  C003  F0B0         	movff	?___awdiv,efgtoa@e
 10117  001FC2  C004  F0B1         	movff	?___awdiv+1,efgtoa@e+1
 10118  001FC6                     
 10119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10120  001FC6  0100               	movlb	0	; () banked
 10121  001FC8  079C               	decf	efgtoa@p& (0+255),f,b
 10122  001FCA  A0D8               	btfss	status,0,c
 10123  001FCC  079D               	decf	(efgtoa@p+1)& (0+255),f,b
 10124  001FCE                     
 10125                           ; BSR set to: 0
 10126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10127  001FCE  079F               	decf	efgtoa@w& (0+255),f,b
 10128  001FD0  A0D8               	btfss	status,0,c
 10129  001FD2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10130  001FD4                     l8408:
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10134  001FD4  51B0               	movf	efgtoa@e& (0+255),w,b
 10135  001FD6  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10136  001FD8  A4D8               	btfss	status,2,c
 10137  001FDA  EFF1  F00F         	goto	u10871
 10138  001FDE  EFF3  F00F         	goto	u10870
 10139  001FE2                     u10871:
 10140  001FE2  EFBF  F00F         	goto	l8398
 10141  001FE6                     u10870:
 10142  001FE6                     
 10143                           ; BSR set to: 0
 10144  001FE6  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10145  001FE8  EF00  F010         	goto	u10880
 10146  001FEC  519D               	movf	(efgtoa@p+1)& (0+255),w,b
 10147  001FEE  E106               	bnz	u10881
 10148  001FF0  059C               	decf	efgtoa@p& (0+255),w,b
 10149  001FF2  B0D8               	btfsc	status,0,c
 10150  001FF4  EFFE  F00F         	goto	u10881
 10151  001FF8  EF00  F010         	goto	u10880
 10152  001FFC                     u10881:
 10153  001FFC  EFBF  F00F         	goto	l8398
 10154  002000                     u10880:
 10155  002000                     
 10156                           ; BSR set to: 0
 10157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10158  002000  07AA               	decf	efgtoa@i& (0+255),f,b
 10159  002002  A0D8               	btfss	status,0,c
 10160  002004  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 10161  002006                     
 10162                           ; BSR set to: 0
 10163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10164  002006  519A               	movf	efgtoa@sign& (0+255),w,b
 10165  002008  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10166  00200A  A4D8               	btfss	status,2,c
 10167  00200C  EF0A  F010         	goto	u10891
 10168  002010  EF0C  F010         	goto	u10890
 10169  002014                     u10891:
 10170  002014  EF12  F010         	goto	l8418
 10171  002018                     u10890:
 10172  002018                     
 10173                           ; BSR set to: 0
 10174  002018  0E00               	movlw	0
 10175  00201A  6F8B               	movwf	(_efgtoa$1341+1)& (0+255),b
 10176  00201C  0E2B               	movlw	43
 10177  00201E  6F8A               	movwf	_efgtoa$1341& (0+255),b
 10178  002020  EF16  F010         	goto	l8420
 10179  002024                     l8418:
 10180                           
 10181                           ; BSR set to: 0
 10182  002024  0E00               	movlw	0
 10183  002026  6F8B               	movwf	(_efgtoa$1341+1)& (0+255),b
 10184  002028  0E2D               	movlw	45
 10185  00202A  6F8A               	movwf	_efgtoa$1341& (0+255),b
 10186  00202C                     l8420:
 10187                           
 10188                           ; BSR set to: 0
 10189  00202C  0E88               	movlw	low _dbuf
 10190  00202E  25AA               	addwf	efgtoa@i& (0+255),w,b
 10191  002030  6ED9               	movwf	fsr2l,c
 10192  002032  0E01               	movlw	high _dbuf
 10193  002034  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10194  002036  6EDA               	movwf	fsr2h,c
 10195  002038  C08A  FFDF         	movff	_efgtoa$1341,indf2
 10196  00203C                     
 10197                           ; BSR set to: 0
 10198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10199  00203C  079F               	decf	efgtoa@w& (0+255),f,b
 10200  00203E  A0D8               	btfss	status,0,c
 10201  002040  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10202  002042                     
 10203                           ; BSR set to: 0
 10204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10205  002042  07AA               	decf	efgtoa@i& (0+255),f,b
 10206  002044  A0D8               	btfss	status,0,c
 10207  002046  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
 10208  002048                     
 10209                           ; BSR set to: 0
 10210  002048  0EBF               	movlw	191
 10211  00204A  6F7B               	movwf	??_efgtoa& (0+255),b
 10212  00204C  0EFF               	movlw	255
 10213  00204E  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
 10214  002050  517A               	movf	efgtoa@c& (0+255),w,b
 10215  002052  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
 10216  002054  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
 10217  002056  517B               	movf	??_efgtoa& (0+255),w,b
 10218  002058  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
 10219  00205A  517C               	movf	(??_efgtoa+1)& (0+255),w,b
 10220  00205C  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10221  00205E  517E               	movf	(??_efgtoa+3)& (0+255),w,b
 10222  002060  E10A               	bnz	u10900
 10223  002062  0E1A               	movlw	26
 10224  002064  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
 10225  002066  A0D8               	btfss	status,0,c
 10226  002068  EF38  F010         	goto	u10901
 10227  00206C  EF3B  F010         	goto	u10900
 10228  002070                     u10901:
 10229  002070  0E01               	movlw	1
 10230  002072  EF3C  F010         	goto	u10910
 10231  002076                     u10900:
 10232  002076  0E00               	movlw	0
 10233  002078                     u10910:
 10234  002078  6F8E               	movwf	_efgtoa$1343& (0+255),b
 10235  00207A  6B8F               	clrf	(_efgtoa$1343+1)& (0+255),b
 10236  00207C                     
 10237                           ; BSR set to: 0
 10238  00207C  518E               	movf	_efgtoa$1343& (0+255),w,b
 10239  00207E  118F               	iorwf	(_efgtoa$1343+1)& (0+255),w,b
 10240  002080  A4D8               	btfss	status,2,c
 10241  002082  EF45  F010         	goto	u10921
 10242  002086  EF47  F010         	goto	u10920
 10243  00208A                     u10921:
 10244  00208A  EF4D  F010         	goto	l8434
 10245  00208E                     u10920:
 10246  00208E                     
 10247                           ; BSR set to: 0
 10248  00208E  0E00               	movlw	0
 10249  002090  6F8D               	movwf	(_efgtoa$1342+1)& (0+255),b
 10250  002092  0E65               	movlw	101
 10251  002094  6F8C               	movwf	_efgtoa$1342& (0+255),b
 10252  002096  EF51  F010         	goto	l8436
 10253  00209A                     l8434:
 10254                           
 10255                           ; BSR set to: 0
 10256  00209A  0E00               	movlw	0
 10257  00209C  6F8D               	movwf	(_efgtoa$1342+1)& (0+255),b
 10258  00209E  0E45               	movlw	69
 10259  0020A0  6F8C               	movwf	_efgtoa$1342& (0+255),b
 10260  0020A2                     l8436:
 10261                           
 10262                           ; BSR set to: 0
 10263  0020A2  0E88               	movlw	low _dbuf
 10264  0020A4  25AA               	addwf	efgtoa@i& (0+255),w,b
 10265  0020A6  6ED9               	movwf	fsr2l,c
 10266  0020A8  0E01               	movlw	high _dbuf
 10267  0020AA  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10268  0020AC  6EDA               	movwf	fsr2h,c
 10269  0020AE  C08C  FFDF         	movff	_efgtoa$1342,indf2
 10270  0020B2                     
 10271                           ; BSR set to: 0
 10272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10273  0020B2  079F               	decf	efgtoa@w& (0+255),f,b
 10274  0020B4  A0D8               	btfss	status,0,c
 10275  0020B6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
 10276  0020B8                     
 10277                           ; BSR set to: 0
 10278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10279  0020B8  0E88               	movlw	low _dbuf
 10280  0020BA  25B2               	addwf	efgtoa@n& (0+255),w,b
 10281  0020BC  6E03               	movwf	strcpy@dest^0,c
 10282  0020BE  0E01               	movlw	high _dbuf
 10283  0020C0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10284  0020C2  6E04               	movwf	(strcpy@dest+1)^0,c
 10285  0020C4  0E88               	movlw	low _dbuf
 10286  0020C6  25AA               	addwf	efgtoa@i& (0+255),w,b
 10287  0020C8  6E05               	movwf	strcpy@src^0,c
 10288  0020CA  0E01               	movlw	high _dbuf
 10289  0020CC  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10290  0020CE  6E06               	movwf	(strcpy@src+1)^0,c
 10291  0020D0  EC46  F02C         	call	_strcpy	;wreg free
 10292  0020D4  EF48  F00B         	goto	l8192
 10293  0020D8                     l557:
 10294  0020D8  0012               	return		;funcret
 10295  0020DA                     __end_of_efgtoa:
 10296                           	opt callstack 0
 10297                           
 10298 ;; *************** function _tolower *****************
 10299 ;; Defined at:
 10300 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;  c               2    8[COMRAM] int 
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;		None
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  2    8[COMRAM] int 
 10307 ;; Registers used:
 10308 ;;		wreg, status,2, status,0
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10316 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10317 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10318 ;;Total ram usage:        8 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:    5
 10321 ;; This function calls:
 10322 ;;		_isupper
 10323 ;; This function is called by:
 10324 ;;		_efgtoa
 10325 ;;		_vfpfcnvrt
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text16
 10330  0057CE                     __ptext16:
 10331                           	opt callstack 0
 10332  0057CE                     _tolower:
 10333                           	opt callstack 21
 10334  0057CE  0EBF               	movlw	191
 10335  0057D0  6E0B               	movwf	??_tolower^0,c
 10336  0057D2  0EFF               	movlw	255
 10337  0057D4  6E0C               	movwf	(??_tolower+1)^0,c
 10338  0057D6  C009  F00D         	movff	tolower@c,??_tolower+2
 10339  0057DA  C00A  F00E         	movff	tolower@c+1,??_tolower+3
 10340  0057DE  500B               	movf	??_tolower^0,w,c
 10341  0057E0  260D               	addwf	(??_tolower+2)^0,f,c
 10342  0057E2  500C               	movf	(??_tolower+1)^0,w,c
 10343  0057E4  220E               	addwfc	(??_tolower+3)^0,f,c
 10344  0057E6  500E               	movf	(??_tolower+3)^0,w,c
 10345  0057E8  E10A               	bnz	u9130
 10346  0057EA  0E1A               	movlw	26
 10347  0057EC  5C0D               	subwf	(??_tolower+2)^0,w,c
 10348  0057EE  A0D8               	btfss	status,0,c
 10349  0057F0  EFFC  F02B         	goto	u9131
 10350  0057F4  EFFF  F02B         	goto	u9130
 10351  0057F8                     u9131:
 10352  0057F8  0E01               	movlw	1
 10353  0057FA  EF00  F02C         	goto	u9140
 10354  0057FE                     u9130:
 10355  0057FE  0E00               	movlw	0
 10356  005800                     u9140:
 10357  005800  6E0F               	movwf	_tolower$2100^0,c
 10358  005802  6A10               	clrf	(_tolower$2100+1)^0,c
 10359  005804  500F               	movf	_tolower$2100^0,w,c
 10360  005806  1010               	iorwf	(_tolower$2100+1)^0,w,c
 10361  005808  B4D8               	btfsc	status,2,c
 10362  00580A  EF09  F02C         	goto	u9151
 10363  00580E  EF0B  F02C         	goto	u9150
 10364  005812                     u9151:
 10365  005812  EF12  F02C         	goto	l1624
 10366  005816                     u9150:
 10367  005816  0E20               	movlw	32
 10368  005818  1009               	iorwf	tolower@c^0,w,c
 10369  00581A  6E09               	movwf	?_tolower^0,c
 10370  00581C  500A               	movf	(tolower@c+1)^0,w,c
 10371  00581E  6E0A               	movwf	(?_tolower+1)^0,c
 10372  005820  EF16  F02C         	goto	l1629
 10373  005824                     l1624:
 10374  005824  C009  F009         	movff	tolower@c,?_tolower
 10375  005828  C00A  F00A         	movff	tolower@c+1,?_tolower+1
 10376  00582C                     l1629:
 10377  00582C  0012               	return		;funcret
 10378  00582E                     __end_of_tolower:
 10379                           	opt callstack 0
 10380                           
 10381 ;; *************** function _isupper *****************
 10382 ;; Defined at:
 10383 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;  c               2    2[COMRAM] int 
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  2    2[COMRAM] int 
 10390 ;; Registers used:
 10391 ;;		wreg, status,2, status,0
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10401 ;;Total ram usage:        6 bytes
 10402 ;; Hardware stack levels used:    1
 10403 ;; Hardware stack levels required when called:    4
 10404 ;; This function calls:
 10405 ;;		Nothing
 10406 ;; This function is called by:
 10407 ;;		_efgtoa
 10408 ;;		_xtoa
 10409 ;;		_vfpfcnvrt
 10410 ;;		_tolower
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           	psect	text17
 10415  005C78                     __ptext17:
 10416                           	opt callstack 0
 10417  005C78                     _isupper:
 10418                           	opt callstack 21
 10419  005C78  0EBF               	movlw	191
 10420  005C7A  6E05               	movwf	??_isupper^0,c
 10421  005C7C  0EFF               	movlw	255
 10422  005C7E  6E06               	movwf	(??_isupper+1)^0,c
 10423  005C80  C003  F007         	movff	isupper@c,??_isupper+2
 10424  005C84  C004  F008         	movff	isupper@c+1,??_isupper+3
 10425  005C88  5005               	movf	??_isupper^0,w,c
 10426  005C8A  2607               	addwf	(??_isupper+2)^0,f,c
 10427  005C8C  5006               	movf	(??_isupper+1)^0,w,c
 10428  005C8E  2208               	addwfc	(??_isupper+3)^0,f,c
 10429  005C90  5008               	movf	(??_isupper+3)^0,w,c
 10430  005C92  E10A               	bnz	u8560
 10431  005C94  0E1A               	movlw	26
 10432  005C96  5C07               	subwf	(??_isupper+2)^0,w,c
 10433  005C98  A0D8               	btfss	status,0,c
 10434  005C9A  EF51  F02E         	goto	u8561
 10435  005C9E  EF54  F02E         	goto	u8560
 10436  005CA2                     u8561:
 10437  005CA2  0E01               	movlw	1
 10438  005CA4  EF55  F02E         	goto	u8570
 10439  005CA8                     u8560:
 10440  005CA8  0E00               	movlw	0
 10441  005CAA                     u8570:
 10442  005CAA  6E03               	movwf	?_isupper^0,c
 10443  005CAC  6A04               	clrf	(?_isupper+1)^0,c
 10444  005CAE  0012               	return		;funcret
 10445  005CB0                     __end_of_isupper:
 10446                           	opt callstack 0
 10447                           
 10448 ;; *************** function _strcpy *****************
 10449 ;; Defined at:
 10450 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  dest            2    2[COMRAM] PTR unsigned char 
 10453 ;;		 -> dbuf(80), 
 10454 ;;  src             2    4[COMRAM] PTR const unsigned char 
 10455 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10456 ;;		 -> dbuf(80), 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  d               2   10[COMRAM] PTR unsigned char 
 10459 ;;		 -> dbuf(80), 
 10460 ;;  s               2    8[COMRAM] PTR const unsigned char 
 10461 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10462 ;;		 -> dbuf(80), 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  2    2[COMRAM] PTR unsigned char 
 10465 ;; Registers used:
 10466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10473 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10475 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10476 ;;Total ram usage:       10 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:    4
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_efgtoa
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text18
 10487  00588C                     __ptext18:
 10488                           	opt callstack 0
 10489  00588C                     _strcpy:
 10490                           	opt callstack 21
 10491  00588C  C005  F009         	movff	strcpy@src,strcpy@s
 10492  005890  C006  F00A         	movff	strcpy@src+1,strcpy@s+1
 10493  005894  C003  F00B         	movff	strcpy@dest,strcpy@d
 10494  005898  C004  F00C         	movff	strcpy@dest+1,strcpy@d+1
 10495  00589C                     l7434:
 10496  00589C  5009               	movf	strcpy@s^0,w,c
 10497  00589E  6E07               	movwf	??_strcpy^0,c
 10498  0058A0  500A               	movf	(strcpy@s+1)^0,w,c
 10499  0058A2  6E08               	movwf	(??_strcpy+1)^0,c
 10500  0058A4  4A09               	infsnz	strcpy@s^0,f,c
 10501  0058A6  2A0A               	incf	(strcpy@s+1)^0,f,c
 10502  0058A8  C007  FFF6         	movff	??_strcpy,tblptrl
 10503  0058AC  C008  FFF7         	movff	??_strcpy+1,tblptrh
 10504  0058B0  0E00               	movlw	low (__mediumconst shr (0+16))
 10505  0058B2  6EF8               	movwf	tblptru,c
 10506  0058B4  C00B  FFD9         	movff	strcpy@d,fsr2l
 10507  0058B8  C00C  FFDA         	movff	strcpy@d+1,fsr2h
 10508  0058BC  4A0B               	infsnz	strcpy@d^0,f,c
 10509  0058BE  2A0C               	incf	(strcpy@d+1)^0,f,c
 10510  0058C0  0E0E               	movlw	(high __ramtop+-1)
 10511  0058C2  64F7               	cpfsgt	tblptrh,c
 10512  0058C4  D003               	bra	u9117
 10513  0058C6  0008               	tblrd		*
 10514  0058C8  50F5               	movf	tablat,w,c
 10515  0058CA  D005               	bra	u9110
 10516  0058CC                     u9117:
 10517  0058CC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10518  0058D0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10519  0058D4  50E7               	movf	indf1,w,c
 10520  0058D6                     u9110:
 10521  0058D6  6EDF               	movwf	indf2,c
 10522  0058D8  50DF               	movf	indf2,w,c
 10523  0058DA  A4D8               	btfss	status,2,c
 10524  0058DC  EF72  F02C         	goto	u9121
 10525  0058E0  EF74  F02C         	goto	u9120
 10526  0058E4                     u9121:
 10527  0058E4  EF4E  F02C         	goto	l7434
 10528  0058E8                     u9120:
 10529  0058E8  0012               	return		;funcret
 10530  0058EA                     __end_of_strcpy:
 10531                           	opt callstack 0
 10532                           
 10533 ;; *************** function _floorf *****************
 10534 ;; Defined at:
 10535 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  x               4    0[BANK0 ] float 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;  u               4   16[BANK0 ] struct .
 10540 ;;  m               4   10[BANK0 ] unsigned long 
 10541 ;;  e               2   14[BANK0 ] int 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  4    0[BANK0 ] float 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10551 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10552 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10553 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10554 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10555 ;;Total ram usage:       20 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    4
 10558 ;; This function calls:
 10559 ;;		Nothing
 10560 ;; This function is called by:
 10561 ;;		_efgtoa
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           	psect	text19
 10566  003AE8                     __ptext19:
 10567                           	opt callstack 0
 10568  003AE8                     _floorf:
 10569                           	opt callstack 21
 10570  003AE8  C100  F070         	movff	floorf@F524,floorf@u
 10571  003AEC  C101  F071         	movff	floorf@F524+1,floorf@u+1
 10572  003AF0  C102  F072         	movff	floorf@F524+2,floorf@u+2
 10573  003AF4  C103  F073         	movff	floorf@F524+3,floorf@u+3
 10574  003AF8  C060  F070         	movff	floorf@x,floorf@u
 10575  003AFC  C061  F071         	movff	floorf@x+1,floorf@u+1
 10576  003B00  C062  F072         	movff	floorf@x+2,floorf@u+2
 10577  003B04  C063  F073         	movff	floorf@x+3,floorf@u+3
 10578  003B08  0E81               	movlw	129
 10579  003B0A  0100               	movlb	0	; () banked
 10580  003B0C  6F64               	movwf	??_floorf& (0+255),b
 10581  003B0E  0EFF               	movlw	255
 10582  003B10  6F65               	movwf	(??_floorf+1)& (0+255),b
 10583  003B12  C070  F066         	movff	floorf@u,??_floorf+2
 10584  003B16  C071  F067         	movff	floorf@u+1,??_floorf+3
 10585  003B1A  C072  F068         	movff	floorf@u+2,??_floorf+4
 10586  003B1E  C073  F069         	movff	floorf@u+3,??_floorf+5
 10587  003B22  0E18               	movlw	24
 10588  003B24  EF99  F01D         	goto	u9160
 10589  003B28                     u9165:
 10590  003B28  90D8               	bcf	status,0,c
 10591  003B2A  3369               	rrcf	(??_floorf+5)& (0+255),f,b
 10592  003B2C  3368               	rrcf	(??_floorf+4)& (0+255),f,b
 10593  003B2E  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10594  003B30  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10595  003B32                     u9160:
 10596  003B32  2EE8               	decfsz	wreg,f,c
 10597  003B34  EF94  F01D         	goto	u9165
 10598  003B38  5166               	movf	(??_floorf+2)& (0+255),w,b
 10599  003B3A  2564               	addwf	??_floorf& (0+255),w,b
 10600  003B3C  6F6E               	movwf	floorf@e& (0+255),b
 10601  003B3E  0E00               	movlw	0
 10602  003B40  2165               	addwfc	(??_floorf+1)& (0+255),w,b
 10603  003B42  6F6F               	movwf	(floorf@e+1)& (0+255),b
 10604  003B44  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
 10605  003B46  EFAE  F01D         	goto	u9171
 10606  003B4A  516F               	movf	(floorf@e+1)& (0+255),w,b
 10607  003B4C  E109               	bnz	u9170
 10608  003B4E  0E17               	movlw	23
 10609  003B50  5D6E               	subwf	floorf@e& (0+255),w,b
 10610  003B52  A0D8               	btfss	status,0,c
 10611  003B54  EFAE  F01D         	goto	u9171
 10612  003B58  EFB0  F01D         	goto	u9170
 10613  003B5C                     u9171:
 10614  003B5C  EFBA  F01D         	goto	l7452
 10615  003B60                     u9170:
 10616  003B60                     l7450:
 10617                           
 10618                           ; BSR set to: 0
 10619  003B60  C060  F060         	movff	floorf@x,?_floorf
 10620  003B64  C061  F061         	movff	floorf@x+1,?_floorf+1
 10621  003B68  C062  F062         	movff	floorf@x+2,?_floorf+2
 10622  003B6C  C063  F063         	movff	floorf@x+3,?_floorf+3
 10623  003B70  EF7E  F01E         	goto	l1535
 10624  003B74                     l7452:
 10625                           
 10626                           ; BSR set to: 0
 10627  003B74  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
 10628  003B76  EFBF  F01D         	goto	u9181
 10629  003B7A  EFC1  F01D         	goto	u9180
 10630  003B7E                     u9181:
 10631  003B7E  EF32  F01E         	goto	l7462
 10632  003B82                     u9180:
 10633  003B82                     
 10634                           ; BSR set to: 0
 10635  003B82  C06E  F064         	movff	floorf@e,??_floorf
 10636  003B86  0EFF               	movlw	255
 10637  003B88  6F65               	movwf	(??_floorf+1)& (0+255),b
 10638  003B8A  0EFF               	movlw	255
 10639  003B8C  6F66               	movwf	(??_floorf+2)& (0+255),b
 10640  003B8E  0E7F               	movlw	127
 10641  003B90  6F67               	movwf	(??_floorf+3)& (0+255),b
 10642  003B92  0E00               	movlw	0
 10643  003B94  6F68               	movwf	(??_floorf+4)& (0+255),b
 10644  003B96                     u9195:
 10645  003B96  6764               	tstfsz	??_floorf& (0+255),b
 10646  003B98  EFD0  F01D         	goto	u9196
 10647  003B9C  EFD8  F01D         	goto	u9197
 10648  003BA0                     u9196:
 10649  003BA0  3568               	rlcf	(??_floorf+4)& (0+255),w,b
 10650  003BA2  3368               	rrcf	(??_floorf+4)& (0+255),f,b
 10651  003BA4  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10652  003BA6  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10653  003BA8  3365               	rrcf	(??_floorf+1)& (0+255),f,b
 10654  003BAA  2F64               	decfsz	??_floorf& (0+255),f,b
 10655  003BAC  EFCB  F01D         	goto	u9195
 10656  003BB0                     u9197:
 10657  003BB0  C065  F06A         	movff	??_floorf+1,floorf@m
 10658  003BB4  C066  F06B         	movff	??_floorf+2,floorf@m+1
 10659  003BB8  C067  F06C         	movff	??_floorf+3,floorf@m+2
 10660  003BBC  C068  F06D         	movff	??_floorf+4,floorf@m+3
 10661  003BC0  0100               	movlb	0	; () banked
 10662  003BC2  516A               	movf	floorf@m& (0+255),w,b
 10663  003BC4  1570               	andwf	floorf@u& (0+255),w,b
 10664  003BC6  6F64               	movwf	??_floorf& (0+255),b
 10665  003BC8  516B               	movf	(floorf@m+1)& (0+255),w,b
 10666  003BCA  1571               	andwf	(floorf@u+1)& (0+255),w,b
 10667  003BCC  6F65               	movwf	(??_floorf+1)& (0+255),b
 10668  003BCE  516C               	movf	(floorf@m+2)& (0+255),w,b
 10669  003BD0  1572               	andwf	(floorf@u+2)& (0+255),w,b
 10670  003BD2  6F66               	movwf	(??_floorf+2)& (0+255),b
 10671  003BD4  516D               	movf	(floorf@m+3)& (0+255),w,b
 10672  003BD6  1573               	andwf	(floorf@u+3)& (0+255),w,b
 10673  003BD8  6F67               	movwf	(??_floorf+3)& (0+255),b
 10674  003BDA  5164               	movf	??_floorf& (0+255),w,b
 10675  003BDC  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10676  003BDE  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10677  003BE0  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10678  003BE2  A4D8               	btfss	status,2,c
 10679  003BE4  EFF6  F01D         	goto	u9201
 10680  003BE8  EFF8  F01D         	goto	u9200
 10681  003BEC                     u9201:
 10682  003BEC  EFFA  F01D         	goto	l7458
 10683  003BF0                     u9200:
 10684  003BF0  EFB0  F01D         	goto	l7450
 10685  003BF4                     l7458:
 10686                           
 10687                           ; BSR set to: 0
 10688  003BF4  C070  F064         	movff	floorf@u,??_floorf
 10689  003BF8  C071  F065         	movff	floorf@u+1,??_floorf+1
 10690  003BFC  C072  F066         	movff	floorf@u+2,??_floorf+2
 10691  003C00  C073  F067         	movff	floorf@u+3,??_floorf+3
 10692  003C04  0E20               	movlw	32
 10693  003C06  EF0A  F01E         	goto	u9210
 10694  003C0A                     u9215:
 10695  003C0A  90D8               	bcf	status,0,c
 10696  003C0C  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10697  003C0E  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10698  003C10  3365               	rrcf	(??_floorf+1)& (0+255),f,b
 10699  003C12  3364               	rrcf	??_floorf& (0+255),f,b
 10700  003C14                     u9210:
 10701  003C14  2EE8               	decfsz	wreg,f,c
 10702  003C16  EF05  F01E         	goto	u9215
 10703  003C1A  5164               	movf	??_floorf& (0+255),w,b
 10704  003C1C  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10705  003C1E  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10706  003C20  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10707  003C22  B4D8               	btfsc	status,2,c
 10708  003C24  EF16  F01E         	goto	u9221
 10709  003C28  EF18  F01E         	goto	u9220
 10710  003C2C                     u9221:
 10711  003C2C  EF20  F01E         	goto	l1538
 10712  003C30                     u9220:
 10713  003C30                     
 10714                           ; BSR set to: 0
 10715  003C30  516A               	movf	floorf@m& (0+255),w,b
 10716  003C32  2770               	addwf	floorf@u& (0+255),f,b
 10717  003C34  516B               	movf	(floorf@m+1)& (0+255),w,b
 10718  003C36  2371               	addwfc	(floorf@u+1)& (0+255),f,b
 10719  003C38  516C               	movf	(floorf@m+2)& (0+255),w,b
 10720  003C3A  2372               	addwfc	(floorf@u+2)& (0+255),f,b
 10721  003C3C  516D               	movf	(floorf@m+3)& (0+255),w,b
 10722  003C3E  2373               	addwfc	(floorf@u+3)& (0+255),f,b
 10723  003C40                     l1538:
 10724                           
 10725                           ; BSR set to: 0
 10726  003C40  1D6A               	comf	floorf@m& (0+255),w,b
 10727  003C42  6F64               	movwf	??_floorf& (0+255),b
 10728  003C44  1D6B               	comf	(floorf@m+1)& (0+255),w,b
 10729  003C46  6F65               	movwf	(??_floorf+1)& (0+255),b
 10730  003C48  1D6C               	comf	(floorf@m+2)& (0+255),w,b
 10731  003C4A  6F66               	movwf	(??_floorf+2)& (0+255),b
 10732  003C4C  1D6D               	comf	(floorf@m+3)& (0+255),w,b
 10733  003C4E  6F67               	movwf	(??_floorf+3)& (0+255),b
 10734  003C50  5164               	movf	??_floorf& (0+255),w,b
 10735  003C52  1770               	andwf	floorf@u& (0+255),f,b
 10736  003C54  5165               	movf	(??_floorf+1)& (0+255),w,b
 10737  003C56  1771               	andwf	(floorf@u+1)& (0+255),f,b
 10738  003C58  5166               	movf	(??_floorf+2)& (0+255),w,b
 10739  003C5A  1772               	andwf	(floorf@u+2)& (0+255),f,b
 10740  003C5C  5167               	movf	(??_floorf+3)& (0+255),w,b
 10741  003C5E  1773               	andwf	(floorf@u+3)& (0+255),f,b
 10742  003C60  EF76  F01E         	goto	l7470
 10743  003C64                     l7462:
 10744                           
 10745                           ; BSR set to: 0
 10746  003C64  C070  F064         	movff	floorf@u,??_floorf
 10747  003C68  C071  F065         	movff	floorf@u+1,??_floorf+1
 10748  003C6C  C072  F066         	movff	floorf@u+2,??_floorf+2
 10749  003C70  C073  F067         	movff	floorf@u+3,??_floorf+3
 10750  003C74  0E20               	movlw	32
 10751  003C76  EF42  F01E         	goto	u9230
 10752  003C7A                     u9235:
 10753  003C7A  90D8               	bcf	status,0,c
 10754  003C7C  3367               	rrcf	(??_floorf+3)& (0+255),f,b
 10755  003C7E  3366               	rrcf	(??_floorf+2)& (0+255),f,b
 10756  003C80  3365               	rrcf	(??_floorf+1)& (0+255),f,b
 10757  003C82  3364               	rrcf	??_floorf& (0+255),f,b
 10758  003C84                     u9230:
 10759  003C84  2EE8               	decfsz	wreg,f,c
 10760  003C86  EF3D  F01E         	goto	u9235
 10761  003C8A  5164               	movf	??_floorf& (0+255),w,b
 10762  003C8C  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10763  003C8E  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10764  003C90  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10765  003C92  A4D8               	btfss	status,2,c
 10766  003C94  EF4E  F01E         	goto	u9241
 10767  003C98  EF50  F01E         	goto	u9240
 10768  003C9C                     u9241:
 10769  003C9C  EF5A  F01E         	goto	l7466
 10770  003CA0                     u9240:
 10771  003CA0                     
 10772                           ; BSR set to: 0
 10773  003CA0  0E00               	movlw	0
 10774  003CA2  6F70               	movwf	floorf@u& (0+255),b
 10775  003CA4  0E00               	movlw	0
 10776  003CA6  6F71               	movwf	(floorf@u+1)& (0+255),b
 10777  003CA8  0E00               	movlw	0
 10778  003CAA  6F72               	movwf	(floorf@u+2)& (0+255),b
 10779  003CAC  0E00               	movlw	0
 10780  003CAE  6F73               	movwf	(floorf@u+3)& (0+255),b
 10781  003CB0  EF76  F01E         	goto	l7470
 10782  003CB4                     l7466:
 10783                           
 10784                           ; BSR set to: 0
 10785  003CB4  90D8               	bcf	status,0,c
 10786  003CB6  3570               	rlcf	floorf@u& (0+255),w,b
 10787  003CB8  6F64               	movwf	??_floorf& (0+255),b
 10788  003CBA  3571               	rlcf	(floorf@u+1)& (0+255),w,b
 10789  003CBC  6F65               	movwf	(??_floorf+1)& (0+255),b
 10790  003CBE  3572               	rlcf	(floorf@u+2)& (0+255),w,b
 10791  003CC0  6F66               	movwf	(??_floorf+2)& (0+255),b
 10792  003CC2  3573               	rlcf	(floorf@u+3)& (0+255),w,b
 10793  003CC4  6F67               	movwf	(??_floorf+3)& (0+255),b
 10794  003CC6  5164               	movf	??_floorf& (0+255),w,b
 10795  003CC8  1165               	iorwf	(??_floorf+1)& (0+255),w,b
 10796  003CCA  1166               	iorwf	(??_floorf+2)& (0+255),w,b
 10797  003CCC  1167               	iorwf	(??_floorf+3)& (0+255),w,b
 10798  003CCE  B4D8               	btfsc	status,2,c
 10799  003CD0  EF6C  F01E         	goto	u9251
 10800  003CD4  EF6E  F01E         	goto	u9250
 10801  003CD8                     u9251:
 10802  003CD8  EF76  F01E         	goto	l7470
 10803  003CDC                     u9250:
 10804  003CDC                     
 10805                           ; BSR set to: 0
 10806  003CDC  0E00               	movlw	0
 10807  003CDE  6F70               	movwf	floorf@u& (0+255),b
 10808  003CE0  0E00               	movlw	0
 10809  003CE2  6F71               	movwf	(floorf@u+1)& (0+255),b
 10810  003CE4  0E80               	movlw	128
 10811  003CE6  6F72               	movwf	(floorf@u+2)& (0+255),b
 10812  003CE8  0EBF               	movlw	191
 10813  003CEA  6F73               	movwf	(floorf@u+3)& (0+255),b
 10814  003CEC                     l7470:
 10815                           
 10816                           ; BSR set to: 0
 10817  003CEC  C070  F060         	movff	floorf@u,?_floorf
 10818  003CF0  C071  F061         	movff	floorf@u+1,?_floorf+1
 10819  003CF4  C072  F062         	movff	floorf@u+2,?_floorf+2
 10820  003CF8  C073  F063         	movff	floorf@u+3,?_floorf+3
 10821  003CFC                     l1535:
 10822                           
 10823                           ; BSR set to: 0
 10824  003CFC  0012               	return		;funcret
 10825  003CFE                     __end_of_floorf:
 10826                           	opt callstack 0
 10827                           
 10828 ;; *************** function ___fpclassifyf *****************
 10829 ;; Defined at:
 10830 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  x               4    2[COMRAM] float 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  u               4   12[COMRAM] struct .
 10835 ;;  e               2   10[COMRAM] int 
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  2    2[COMRAM] int 
 10838 ;; Registers used:
 10839 ;;		wreg, status,2, status,0
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10846 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10848 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10849 ;;Total ram usage:       14 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:    4
 10852 ;; This function calls:
 10853 ;;		Nothing
 10854 ;; This function is called by:
 10855 ;;		_efgtoa
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text20
 10860  004FC4                     __ptext20:
 10861                           	opt callstack 0
 10862  004FC4                     ___fpclassifyf:
 10863                           	opt callstack 21
 10864  004FC4  C104  F00D         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10865  004FC8  C105  F00E         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10866  004FCC  C106  F00F         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10867  004FD0  C107  F010         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10868  004FD4  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
 10869  004FD8  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10870  004FDC  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10871  004FE0  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10872  004FE4  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 10873  004FE8  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10874  004FEC  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10875  004FF0  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10876  004FF4  0E18               	movlw	24
 10877  004FF6  EF02  F028         	goto	u9040
 10878  004FFA                     u9045:
 10879  004FFA  90D8               	bcf	status,0,c
 10880  004FFC  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
 10881  004FFE  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
 10882  005000  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
 10883  005002  3207               	rrcf	??___fpclassifyf^0,f,c
 10884  005004                     u9040:
 10885  005004  2EE8               	decfsz	wreg,f,c
 10886  005006  EFFD  F027         	goto	u9045
 10887  00500A  5007               	movf	??___fpclassifyf^0,w,c
 10888  00500C  6E0B               	movwf	___fpclassifyf@e^0,c
 10889  00500E  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
 10890  005010  500B               	movf	___fpclassifyf@e^0,w,c
 10891  005012  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10892  005014  A4D8               	btfss	status,2,c
 10893  005016  EF0F  F028         	goto	u9051
 10894  00501A  EF11  F028         	goto	u9050
 10895  00501E                     u9051:
 10896  00501E  EF31  F028         	goto	l7422
 10897  005022                     u9050:
 10898  005022  90D8               	bcf	status,0,c
 10899  005024  340D               	rlcf	___fpclassifyf@u^0,w,c
 10900  005026  6E07               	movwf	??___fpclassifyf^0,c
 10901  005028  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10902  00502A  6E08               	movwf	(??___fpclassifyf+1)^0,c
 10903  00502C  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10904  00502E  6E09               	movwf	(??___fpclassifyf+2)^0,c
 10905  005030  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10906  005032  6E0A               	movwf	(??___fpclassifyf+3)^0,c
 10907  005034  5007               	movf	??___fpclassifyf^0,w,c
 10908  005036  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 10909  005038  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 10910  00503A  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 10911  00503C  A4D8               	btfss	status,2,c
 10912  00503E  EF23  F028         	goto	u9061
 10913  005042  EF25  F028         	goto	u9060
 10914  005046                     u9061:
 10915  005046  EF2B  F028         	goto	l7418
 10916  00504A                     u9060:
 10917  00504A  0E00               	movlw	0
 10918  00504C  6E04               	movwf	(?___fpclassifyf+1)^0,c
 10919  00504E  0E02               	movlw	2
 10920  005050  6E03               	movwf	?___fpclassifyf^0,c
 10921  005052  EF60  F028         	goto	l1490
 10922  005056                     l7418:
 10923  005056  0E00               	movlw	0
 10924  005058  6E04               	movwf	(?___fpclassifyf+1)^0,c
 10925  00505A  0E03               	movlw	3
 10926  00505C  6E03               	movwf	?___fpclassifyf^0,c
 10927  00505E  EF60  F028         	goto	l1490
 10928  005062                     l7422:
 10929  005062  280B               	incf	___fpclassifyf@e^0,w,c
 10930  005064  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10931  005066  A4D8               	btfss	status,2,c
 10932  005068  EF38  F028         	goto	u9071
 10933  00506C  EF3A  F028         	goto	u9070
 10934  005070                     u9071:
 10935  005070  EF5C  F028         	goto	l7428
 10936  005074                     u9070:
 10937  005074  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 10938  005078  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10939  00507C  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10940  005080  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10941  005084  0E09               	movlw	9
 10942  005086                     u9085:
 10943  005086  90D8               	bcf	status,0,c
 10944  005088  3607               	rlcf	??___fpclassifyf^0,f,c
 10945  00508A  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
 10946  00508C  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
 10947  00508E  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
 10948  005090  2EE8               	decfsz	wreg,f,c
 10949  005092  EF43  F028         	goto	u9085
 10950  005096  5007               	movf	??___fpclassifyf^0,w,c
 10951  005098  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 10952  00509A  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 10953  00509C  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 10954  00509E  B4D8               	btfsc	status,2,c
 10955  0050A0  EF54  F028         	goto	u9091
 10956  0050A4  EF57  F028         	goto	u9090
 10957  0050A8                     u9091:
 10958  0050A8  0E01               	movlw	1
 10959  0050AA  EF58  F028         	goto	u9100
 10960  0050AE                     u9090:
 10961  0050AE  0E00               	movlw	0
 10962  0050B0                     u9100:
 10963  0050B0  6E03               	movwf	?___fpclassifyf^0,c
 10964  0050B2  6A04               	clrf	(?___fpclassifyf+1)^0,c
 10965  0050B4  EF60  F028         	goto	l1490
 10966  0050B8                     l7428:
 10967  0050B8  0E00               	movlw	0
 10968  0050BA  6E04               	movwf	(?___fpclassifyf+1)^0,c
 10969  0050BC  0E04               	movlw	4
 10970  0050BE  6E03               	movwf	?___fpclassifyf^0,c
 10971  0050C0                     l1490:
 10972  0050C0  0012               	return		;funcret
 10973  0050C2                     __end_of___fpclassifyf:
 10974                           	opt callstack 0
 10975                           
 10976 ;; *************** function ___fltol *****************
 10977 ;; Defined at:
 10978 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  f1              4    2[COMRAM] int 
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;  exp1            1   11[COMRAM] unsigned char 
 10983 ;;  sign1           1   10[COMRAM] unsigned char 
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  4    2[COMRAM] long 
 10986 ;; Registers used:
 10987 ;;		wreg, status,2, status,0
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10996 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10997 ;;Total ram usage:       10 bytes
 10998 ;; Hardware stack levels used:    1
 10999 ;; Hardware stack levels required when called:    4
 11000 ;; This function calls:
 11001 ;;		Nothing
 11002 ;; This function is called by:
 11003 ;;		_efgtoa
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           	psect	text21
 11008  004DBA                     __ptext21:
 11009                           	opt callstack 0
 11010  004DBA                     ___fltol:
 11011                           	opt callstack 21
 11012  004DBA  3405               	rlcf	(___fltol@f1+2)^0,w,c
 11013  004DBC  3406               	rlcf	(___fltol@f1+3)^0,w,c
 11014  004DBE  6E0C               	movwf	___fltol@exp1^0,c
 11015  004DC0  500C               	movf	___fltol@exp1^0,w,c
 11016  004DC2  A4D8               	btfss	status,2,c
 11017  004DC4  EFE6  F026         	goto	u10091
 11018  004DC8  EFE8  F026         	goto	u10090
 11019  004DCC                     u10091:
 11020  004DCC  EFF2  F026         	goto	l7984
 11021  004DD0                     u10090:
 11022  004DD0                     l7980:
 11023  004DD0  0E00               	movlw	0
 11024  004DD2  6E03               	movwf	?___fltol^0,c
 11025  004DD4  0E00               	movlw	0
 11026  004DD6  6E04               	movwf	(?___fltol+1)^0,c
 11027  004DD8  0E00               	movlw	0
 11028  004DDA  6E05               	movwf	(?___fltol+2)^0,c
 11029  004DDC  0E00               	movlw	0
 11030  004DDE  6E06               	movwf	(?___fltol+3)^0,c
 11031  004DE0  EF5F  F027         	goto	l1106
 11032  004DE4                     l7984:
 11033  004DE4  C003  F007         	movff	___fltol@f1,??___fltol
 11034  004DE8  C004  F008         	movff	___fltol@f1+1,??___fltol+1
 11035  004DEC  C005  F009         	movff	___fltol@f1+2,??___fltol+2
 11036  004DF0  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
 11037  004DF4  0E20               	movlw	32
 11038  004DF6  EF02  F027         	goto	u10100
 11039  004DFA                     u10105:
 11040  004DFA  90D8               	bcf	status,0,c
 11041  004DFC  320A               	rrcf	(??___fltol+3)^0,f,c
 11042  004DFE  3209               	rrcf	(??___fltol+2)^0,f,c
 11043  004E00  3208               	rrcf	(??___fltol+1)^0,f,c
 11044  004E02  3207               	rrcf	??___fltol^0,f,c
 11045  004E04                     u10100:
 11046  004E04  2EE8               	decfsz	wreg,f,c
 11047  004E06  EFFD  F026         	goto	u10105
 11048  004E0A  5007               	movf	??___fltol^0,w,c
 11049  004E0C  6E0B               	movwf	___fltol@sign1^0,c
 11050  004E0E  8E05               	bsf	(___fltol@f1+2)^0,7,c
 11051  004E10  0EFF               	movlw	255
 11052  004E12  1603               	andwf	___fltol@f1^0,f,c
 11053  004E14  0EFF               	movlw	255
 11054  004E16  1604               	andwf	(___fltol@f1+1)^0,f,c
 11055  004E18  0EFF               	movlw	255
 11056  004E1A  1605               	andwf	(___fltol@f1+2)^0,f,c
 11057  004E1C  0E00               	movlw	0
 11058  004E1E  1606               	andwf	(___fltol@f1+3)^0,f,c
 11059  004E20  0E96               	movlw	150
 11060  004E22  5E0C               	subwf	___fltol@exp1^0,f,c
 11061  004E24  BE0C               	btfsc	___fltol@exp1^0,7,c
 11062  004E26  EF19  F027         	goto	u10110
 11063  004E2A  EF17  F027         	goto	u10111
 11064  004E2E                     u10111:
 11065  004E2E  EF2F  F027         	goto	l8004
 11066  004E32                     u10110:
 11067  004E32  500C               	movf	___fltol@exp1^0,w,c
 11068  004E34  0A80               	xorlw	128
 11069  004E36  0F97               	addlw	151
 11070  004E38  B0D8               	btfsc	status,0,c
 11071  004E3A  EF21  F027         	goto	u10121
 11072  004E3E  EF23  F027         	goto	u10120
 11073  004E42                     u10121:
 11074  004E42  EF25  F027         	goto	l8000
 11075  004E46                     u10120:
 11076  004E46  EFE8  F026         	goto	l7980
 11077  004E4A                     l8000:
 11078  004E4A  90D8               	bcf	status,0,c
 11079  004E4C  3206               	rrcf	(___fltol@f1+3)^0,f,c
 11080  004E4E  3205               	rrcf	(___fltol@f1+2)^0,f,c
 11081  004E50  3204               	rrcf	(___fltol@f1+1)^0,f,c
 11082  004E52  3203               	rrcf	___fltol@f1^0,f,c
 11083  004E54  3E0C               	incfsz	___fltol@exp1^0,f,c
 11084  004E56  EF25  F027         	goto	l8000
 11085  004E5A  EF47  F027         	goto	l8014
 11086  004E5E                     l8004:
 11087  004E5E  0E1F               	movlw	31
 11088  004E60  640C               	cpfsgt	___fltol@exp1^0,c
 11089  004E62  EF35  F027         	goto	u10131
 11090  004E66  EF37  F027         	goto	u10130
 11091  004E6A                     u10131:
 11092  004E6A  EF3F  F027         	goto	l8012
 11093  004E6E                     u10130:
 11094  004E6E  EFE8  F026         	goto	l7980
 11095  004E72                     l8010:
 11096  004E72  90D8               	bcf	status,0,c
 11097  004E74  3603               	rlcf	___fltol@f1^0,f,c
 11098  004E76  3604               	rlcf	(___fltol@f1+1)^0,f,c
 11099  004E78  3605               	rlcf	(___fltol@f1+2)^0,f,c
 11100  004E7A  3606               	rlcf	(___fltol@f1+3)^0,f,c
 11101  004E7C  060C               	decf	___fltol@exp1^0,f,c
 11102  004E7E                     l8012:
 11103  004E7E  500C               	movf	___fltol@exp1^0,w,c
 11104  004E80  A4D8               	btfss	status,2,c
 11105  004E82  EF45  F027         	goto	u10141
 11106  004E86  EF47  F027         	goto	u10140
 11107  004E8A                     u10141:
 11108  004E8A  EF39  F027         	goto	l8010
 11109  004E8E                     u10140:
 11110  004E8E                     l8014:
 11111  004E8E  500B               	movf	___fltol@sign1^0,w,c
 11112  004E90  B4D8               	btfsc	status,2,c
 11113  004E92  EF4D  F027         	goto	u10151
 11114  004E96  EF4F  F027         	goto	u10150
 11115  004E9A                     u10151:
 11116  004E9A  EF57  F027         	goto	l8018
 11117  004E9E                     u10150:
 11118  004E9E  1E06               	comf	(___fltol@f1+3)^0,f,c
 11119  004EA0  1E05               	comf	(___fltol@f1+2)^0,f,c
 11120  004EA2  1E04               	comf	(___fltol@f1+1)^0,f,c
 11121  004EA4  6C03               	negf	___fltol@f1^0,c
 11122  004EA6  0E00               	movlw	0
 11123  004EA8  2204               	addwfc	(___fltol@f1+1)^0,f,c
 11124  004EAA  2205               	addwfc	(___fltol@f1+2)^0,f,c
 11125  004EAC  2206               	addwfc	(___fltol@f1+3)^0,f,c
 11126  004EAE                     l8018:
 11127  004EAE  C003  F003         	movff	___fltol@f1,?___fltol
 11128  004EB2  C004  F004         	movff	___fltol@f1+1,?___fltol+1
 11129  004EB6  C005  F005         	movff	___fltol@f1+2,?___fltol+2
 11130  004EBA  C006  F006         	movff	___fltol@f1+3,?___fltol+3
 11131  004EBE                     l1106:
 11132  004EBE  0012               	return		;funcret
 11133  004EC0                     __end_of___fltol:
 11134                           	opt callstack 0
 11135                           
 11136 ;; *************** function ___flsub *****************
 11137 ;; Defined at:
 11138 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  b               4   57[COMRAM] long 
 11141 ;;  a               4   61[COMRAM] long 
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;		None
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  4   57[COMRAM] long 
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0, cstack
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11156 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11157 ;;Total ram usage:        8 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    5
 11160 ;; This function calls:
 11161 ;;		___fladd
 11162 ;; This function is called by:
 11163 ;;		_main
 11164 ;;		_efgtoa
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text22
 11169  005A78                     __ptext22:
 11170                           	opt callstack 0
 11171  005A78                     ___flsub:
 11172                           	opt callstack 20
 11173  005A78  0E00               	movlw	0
 11174  005A7A  1A3E               	xorwf	___flsub@a^0,f,c
 11175  005A7C  0E00               	movlw	0
 11176  005A7E  1A3F               	xorwf	(___flsub@a+1)^0,f,c
 11177  005A80  0E00               	movlw	0
 11178  005A82  1A40               	xorwf	(___flsub@a+2)^0,f,c
 11179  005A84  0E80               	movlw	128
 11180  005A86  1A41               	xorwf	(___flsub@a+3)^0,f,c
 11181  005A88  C03A  F02A         	movff	___flsub@b,___fladd@b
 11182  005A8C  C03B  F02B         	movff	___flsub@b+1,___fladd@b+1
 11183  005A90  C03C  F02C         	movff	___flsub@b+2,___fladd@b+2
 11184  005A94  C03D  F02D         	movff	___flsub@b+3,___fladd@b+3
 11185  005A98  C03E  F02E         	movff	___flsub@a,___fladd@a
 11186  005A9C  C03F  F02F         	movff	___flsub@a+1,___fladd@a+1
 11187  005AA0  C040  F030         	movff	___flsub@a+2,___fladd@a+2
 11188  005AA4  C041  F031         	movff	___flsub@a+3,___fladd@a+3
 11189  005AA8  EC6D  F010         	call	___fladd	;wreg free
 11190  005AAC  C02A  F03A         	movff	?___fladd,?___flsub
 11191  005AB0  C02B  F03B         	movff	?___fladd+1,?___flsub+1
 11192  005AB4  C02C  F03C         	movff	?___fladd+2,?___flsub+2
 11193  005AB8  C02D  F03D         	movff	?___fladd+3,?___flsub+3
 11194  005ABC  0012               	return		;funcret
 11195  005ABE                     __end_of___flsub:
 11196                           	opt callstack 0
 11197                           
 11198 ;; *************** function ___fladd *****************
 11199 ;; Defined at:
 11200 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11201 ;; Parameters:    Size  Location     Type
 11202 ;;  b               4   41[COMRAM] long 
 11203 ;;  a               4   45[COMRAM] long 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  grs             1   56[COMRAM] unsigned char 
 11206 ;;  bexp            1   55[COMRAM] unsigned char 
 11207 ;;  aexp            1   54[COMRAM] unsigned char 
 11208 ;;  signs           1   53[COMRAM] unsigned char 
 11209 ;; Return value:  Size  Location     Type
 11210 ;;                  4   41[COMRAM] unsigned char 
 11211 ;; Registers used:
 11212 ;;		wreg, status,2, status,0
 11213 ;; Tracked objects:
 11214 ;;		On entry : 0/0
 11215 ;;		On exit  : 0/0
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11218 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11219 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11221 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11222 ;;Total ram usage:       16 bytes
 11223 ;; Hardware stack levels used:    1
 11224 ;; Hardware stack levels required when called:    4
 11225 ;; This function calls:
 11226 ;;		Nothing
 11227 ;; This function is called by:
 11228 ;;		_main
 11229 ;;		_efgtoa
 11230 ;;		___flsub
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           	psect	text23
 11235  0020DA                     __ptext23:
 11236                           	opt callstack 0
 11237  0020DA                     ___fladd:
 11238                           	opt callstack 20
 11239  0020DA  502D               	movf	(___fladd@b+3)^0,w,c
 11240  0020DC  0B80               	andlw	128
 11241  0020DE  6E36               	movwf	___fladd@signs^0,c
 11242  0020E0  502D               	movf	(___fladd@b+3)^0,w,c
 11243  0020E2  242D               	addwf	(___fladd@b+3)^0,w,c
 11244  0020E4  6E38               	movwf	___fladd@bexp^0,c
 11245  0020E6  AE2C               	btfss	(___fladd@b+2)^0,7,c
 11246  0020E8  EF78  F010         	goto	u8581
 11247  0020EC  EF7A  F010         	goto	u8580
 11248  0020F0                     u8581:
 11249  0020F0  EF7B  F010         	goto	l7184
 11250  0020F4                     u8580:
 11251  0020F4  8038               	bsf	___fladd@bexp^0,0,c
 11252  0020F6                     l7184:
 11253  0020F6  5038               	movf	___fladd@bexp^0,w,c
 11254  0020F8  B4D8               	btfsc	status,2,c
 11255  0020FA  EF81  F010         	goto	u8591
 11256  0020FE  EF83  F010         	goto	u8590
 11257  002102                     u8591:
 11258  002102  EF98  F010         	goto	l7194
 11259  002106                     u8590:
 11260  002106  2838               	incf	___fladd@bexp^0,w,c
 11261  002108  A4D8               	btfss	status,2,c
 11262  00210A  EF89  F010         	goto	u8601
 11263  00210E  EF8B  F010         	goto	u8600
 11264  002112                     u8601:
 11265  002112  EF93  F010         	goto	l7190
 11266  002116                     u8600:
 11267  002116  0E00               	movlw	0
 11268  002118  6E2A               	movwf	___fladd@b^0,c
 11269  00211A  0E00               	movlw	0
 11270  00211C  6E2B               	movwf	(___fladd@b+1)^0,c
 11271  00211E  0E00               	movlw	0
 11272  002120  6E2C               	movwf	(___fladd@b+2)^0,c
 11273  002122  0E00               	movlw	0
 11274  002124  6E2D               	movwf	(___fladd@b+3)^0,c
 11275  002126                     l7190:
 11276  002126  8E2C               	bsf	(___fladd@b+2)^0,7,c
 11277  002128  0E00               	movlw	0
 11278  00212A  6E2D               	movwf	(___fladd@b+3)^0,c
 11279  00212C  EFA0  F010         	goto	l7196
 11280  002130                     l7194:
 11281  002130  0E00               	movlw	0
 11282  002132  6E2A               	movwf	___fladd@b^0,c
 11283  002134  0E00               	movlw	0
 11284  002136  6E2B               	movwf	(___fladd@b+1)^0,c
 11285  002138  0E00               	movlw	0
 11286  00213A  6E2C               	movwf	(___fladd@b+2)^0,c
 11287  00213C  0E00               	movlw	0
 11288  00213E  6E2D               	movwf	(___fladd@b+3)^0,c
 11289  002140                     l7196:
 11290  002140  5031               	movf	(___fladd@a+3)^0,w,c
 11291  002142  0B80               	andlw	128
 11292  002144  6E37               	movwf	___fladd@aexp^0,c
 11293  002146  5036               	movf	___fladd@signs^0,w,c
 11294  002148  1837               	xorwf	___fladd@aexp^0,w,c
 11295  00214A  B4D8               	btfsc	status,2,c
 11296  00214C  EFAA  F010         	goto	u8611
 11297  002150  EFAC  F010         	goto	u8610
 11298  002154                     u8611:
 11299  002154  EFAD  F010         	goto	l7202
 11300  002158                     u8610:
 11301  002158  8C36               	bsf	___fladd@signs^0,6,c
 11302  00215A                     l7202:
 11303  00215A  5031               	movf	(___fladd@a+3)^0,w,c
 11304  00215C  2431               	addwf	(___fladd@a+3)^0,w,c
 11305  00215E  6E37               	movwf	___fladd@aexp^0,c
 11306  002160  AE30               	btfss	(___fladd@a+2)^0,7,c
 11307  002162  EFB5  F010         	goto	u8621
 11308  002166  EFB7  F010         	goto	u8620
 11309  00216A                     u8621:
 11310  00216A  EFB8  F010         	goto	l7208
 11311  00216E                     u8620:
 11312  00216E  8037               	bsf	___fladd@aexp^0,0,c
 11313  002170                     l7208:
 11314  002170  5037               	movf	___fladd@aexp^0,w,c
 11315  002172  B4D8               	btfsc	status,2,c
 11316  002174  EFBE  F010         	goto	u8631
 11317  002178  EFC0  F010         	goto	u8630
 11318  00217C                     u8631:
 11319  00217C  EFD5  F010         	goto	l7218
 11320  002180                     u8630:
 11321  002180  2837               	incf	___fladd@aexp^0,w,c
 11322  002182  A4D8               	btfss	status,2,c
 11323  002184  EFC6  F010         	goto	u8641
 11324  002188  EFC8  F010         	goto	u8640
 11325  00218C                     u8641:
 11326  00218C  EFD0  F010         	goto	l7214
 11327  002190                     u8640:
 11328  002190  0E00               	movlw	0
 11329  002192  6E2E               	movwf	___fladd@a^0,c
 11330  002194  0E00               	movlw	0
 11331  002196  6E2F               	movwf	(___fladd@a+1)^0,c
 11332  002198  0E00               	movlw	0
 11333  00219A  6E30               	movwf	(___fladd@a+2)^0,c
 11334  00219C  0E00               	movlw	0
 11335  00219E  6E31               	movwf	(___fladd@a+3)^0,c
 11336  0021A0                     l7214:
 11337  0021A0  8E30               	bsf	(___fladd@a+2)^0,7,c
 11338  0021A2  0E00               	movlw	0
 11339  0021A4  6E31               	movwf	(___fladd@a+3)^0,c
 11340  0021A6  EFDD  F010         	goto	l7220
 11341  0021AA                     l7218:
 11342  0021AA  0E00               	movlw	0
 11343  0021AC  6E2E               	movwf	___fladd@a^0,c
 11344  0021AE  0E00               	movlw	0
 11345  0021B0  6E2F               	movwf	(___fladd@a+1)^0,c
 11346  0021B2  0E00               	movlw	0
 11347  0021B4  6E30               	movwf	(___fladd@a+2)^0,c
 11348  0021B6  0E00               	movlw	0
 11349  0021B8  6E31               	movwf	(___fladd@a+3)^0,c
 11350  0021BA                     l7220:
 11351  0021BA  5038               	movf	___fladd@bexp^0,w,c
 11352  0021BC  5C37               	subwf	___fladd@aexp^0,w,c
 11353  0021BE  B0D8               	btfsc	status,0,c
 11354  0021C0  EFE4  F010         	goto	u8651
 11355  0021C4  EFE6  F010         	goto	u8650
 11356  0021C8                     u8651:
 11357  0021C8  EF0D  F011         	goto	l7256
 11358  0021CC                     u8650:
 11359  0021CC  AC36               	btfss	___fladd@signs^0,6,c
 11360  0021CE  EFEB  F010         	goto	u8661
 11361  0021D2  EFED  F010         	goto	u8660
 11362  0021D6                     u8661:
 11363  0021D6  EFEF  F010         	goto	l7226
 11364  0021DA                     u8660:
 11365  0021DA  0E80               	movlw	128
 11366  0021DC  1A36               	xorwf	___fladd@signs^0,f,c
 11367  0021DE                     l7226:
 11368  0021DE  C038  F039         	movff	___fladd@bexp,___fladd@grs
 11369  0021E2  C037  F038         	movff	___fladd@aexp,___fladd@bexp
 11370  0021E6  C039  F037         	movff	___fladd@grs,___fladd@aexp
 11371  0021EA  C02A  F039         	movff	___fladd@b,___fladd@grs
 11372  0021EE  C02E  F02A         	movff	___fladd@a,___fladd@b
 11373  0021F2  C039  F02E         	movff	___fladd@grs,___fladd@a
 11374  0021F6  C02B  F039         	movff	___fladd@b+1,___fladd@grs
 11375  0021FA  C02F  F02B         	movff	___fladd@a+1,___fladd@b+1
 11376  0021FE  C039  F02F         	movff	___fladd@grs,___fladd@a+1
 11377  002202  C02C  F039         	movff	___fladd@b+2,___fladd@grs
 11378  002206  C030  F02C         	movff	___fladd@a+2,___fladd@b+2
 11379  00220A  C039  F030         	movff	___fladd@grs,___fladd@a+2
 11380  00220E  C02D  F039         	movff	___fladd@b+3,___fladd@grs
 11381  002212  C031  F02D         	movff	___fladd@a+3,___fladd@b+3
 11382  002216  C039  F031         	movff	___fladd@grs,___fladd@a+3
 11383  00221A                     l7256:
 11384  00221A  0E00               	movlw	0
 11385  00221C  6E39               	movwf	___fladd@grs^0,c
 11386  00221E  5038               	movf	___fladd@bexp^0,w,c
 11387  002220  C037  F032         	movff	___fladd@aexp,??___fladd
 11388  002224  6A33               	clrf	(??___fladd+1)^0,c
 11389  002226  5E32               	subwf	??___fladd^0,f,c
 11390  002228  0E00               	movlw	0
 11391  00222A  5A33               	subwfb	(??___fladd+1)^0,f,c
 11392  00222C  BE33               	btfsc	(??___fladd+1)^0,7,c
 11393  00222E  EF22  F011         	goto	u8671
 11394  002232  5033               	movf	(??___fladd+1)^0,w,c
 11395  002234  E109               	bnz	u8670
 11396  002236  0E1A               	movlw	26
 11397  002238  5C32               	subwf	??___fladd^0,w,c
 11398  00223A  A0D8               	btfss	status,0,c
 11399  00223C  EF22  F011         	goto	u8671
 11400  002240  EF24  F011         	goto	u8670
 11401  002244                     u8671:
 11402  002244  EF5B  F011         	goto	l1338
 11403  002248                     u8670:
 11404  002248  502A               	movf	___fladd@b^0,w,c
 11405  00224A  102B               	iorwf	(___fladd@b+1)^0,w,c
 11406  00224C  102C               	iorwf	(___fladd@b+2)^0,w,c
 11407  00224E  102D               	iorwf	(___fladd@b+3)^0,w,c
 11408  002250  A4D8               	btfss	status,2,c
 11409  002252  EF2D  F011         	goto	u8681
 11410  002256  EF30  F011         	goto	u8680
 11411  00225A                     u8681:
 11412  00225A  0E01               	movlw	1
 11413  00225C  EF31  F011         	goto	u8690
 11414  002260                     u8680:
 11415  002260  0E00               	movlw	0
 11416  002262                     u8690:
 11417  002262  6E39               	movwf	___fladd@grs^0,c
 11418  002264  0E00               	movlw	0
 11419  002266  6E2A               	movwf	___fladd@b^0,c
 11420  002268  0E00               	movlw	0
 11421  00226A  6E2B               	movwf	(___fladd@b+1)^0,c
 11422  00226C  0E00               	movlw	0
 11423  00226E  6E2C               	movwf	(___fladd@b+2)^0,c
 11424  002270  0E00               	movlw	0
 11425  002272  6E2D               	movwf	(___fladd@b+3)^0,c
 11426  002274  C037  F038         	movff	___fladd@aexp,___fladd@bexp
 11427  002278  EF64  F011         	goto	l1337
 11428  00227C                     l1339:
 11429  00227C  A039               	btfss	___fladd@grs^0,0,c
 11430  00227E  EF43  F011         	goto	u8701
 11431  002282  EF45  F011         	goto	u8700
 11432  002286                     u8701:
 11433  002286  EF4B  F011         	goto	l7268
 11434  00228A                     u8700:
 11435  00228A  90D8               	bcf	status,0,c
 11436  00228C  3039               	rrcf	___fladd@grs^0,w,c
 11437  00228E  0901               	iorlw	1
 11438  002290  6E39               	movwf	___fladd@grs^0,c
 11439  002292  EF4D  F011         	goto	l7270
 11440  002296                     l7268:
 11441  002296  90D8               	bcf	status,0,c
 11442  002298  3239               	rrcf	___fladd@grs^0,f,c
 11443  00229A                     l7270:
 11444  00229A  A02A               	btfss	___fladd@b^0,0,c
 11445  00229C  EF52  F011         	goto	u8711
 11446  0022A0  EF54  F011         	goto	u8710
 11447  0022A4                     u8711:
 11448  0022A4  EF55  F011         	goto	l7274
 11449  0022A8                     u8710:
 11450  0022A8  8E39               	bsf	___fladd@grs^0,7,c
 11451  0022AA                     l7274:
 11452  0022AA  342D               	rlcf	(___fladd@b+3)^0,w,c
 11453  0022AC  322D               	rrcf	(___fladd@b+3)^0,f,c
 11454  0022AE  322C               	rrcf	(___fladd@b+2)^0,f,c
 11455  0022B0  322B               	rrcf	(___fladd@b+1)^0,f,c
 11456  0022B2  322A               	rrcf	___fladd@b^0,f,c
 11457  0022B4  2A38               	incf	___fladd@bexp^0,f,c
 11458  0022B6                     l1338:
 11459  0022B6  5037               	movf	___fladd@aexp^0,w,c
 11460  0022B8  5C38               	subwf	___fladd@bexp^0,w,c
 11461  0022BA  A0D8               	btfss	status,0,c
 11462  0022BC  EF62  F011         	goto	u8721
 11463  0022C0  EF64  F011         	goto	u8720
 11464  0022C4                     u8721:
 11465  0022C4  EF3E  F011         	goto	l1339
 11466  0022C8                     u8720:
 11467  0022C8                     l1337:
 11468  0022C8  BC36               	btfsc	___fladd@signs^0,6,c
 11469  0022CA  EF69  F011         	goto	u8731
 11470  0022CE  EF6B  F011         	goto	u8730
 11471  0022D2                     u8731:
 11472  0022D2  EFAB  F011         	goto	l7302
 11473  0022D6                     u8730:
 11474  0022D6  5038               	movf	___fladd@bexp^0,w,c
 11475  0022D8  A4D8               	btfss	status,2,c
 11476  0022DA  EF71  F011         	goto	u8741
 11477  0022DE  EF73  F011         	goto	u8740
 11478  0022E2                     u8741:
 11479  0022E2  EF7D  F011         	goto	l7284
 11480  0022E6                     u8740:
 11481  0022E6  0E00               	movlw	0
 11482  0022E8  6E2A               	movwf	?___fladd^0,c
 11483  0022EA  0E00               	movlw	0
 11484  0022EC  6E2B               	movwf	(?___fladd+1)^0,c
 11485  0022EE  0E00               	movlw	0
 11486  0022F0  6E2C               	movwf	(?___fladd+2)^0,c
 11487  0022F2  0E00               	movlw	0
 11488  0022F4  6E2D               	movwf	(?___fladd+3)^0,c
 11489  0022F6  EFCC  F012         	goto	l1346
 11490  0022FA                     l7284:
 11491  0022FA  502E               	movf	___fladd@a^0,w,c
 11492  0022FC  262A               	addwf	___fladd@b^0,f,c
 11493  0022FE  502F               	movf	(___fladd@a+1)^0,w,c
 11494  002300  222B               	addwfc	(___fladd@b+1)^0,f,c
 11495  002302  5030               	movf	(___fladd@a+2)^0,w,c
 11496  002304  222C               	addwfc	(___fladd@b+2)^0,f,c
 11497  002306  5031               	movf	(___fladd@a+3)^0,w,c
 11498  002308  222D               	addwfc	(___fladd@b+3)^0,f,c
 11499  00230A  A02D               	btfss	(___fladd@b+3)^0,0,c
 11500  00230C  EF8A  F011         	goto	u8751
 11501  002310  EF8C  F011         	goto	u8750
 11502  002314                     u8751:
 11503  002314  EF38  F012         	goto	l7338
 11504  002318                     u8750:
 11505  002318  A039               	btfss	___fladd@grs^0,0,c
 11506  00231A  EF91  F011         	goto	u8761
 11507  00231E  EF93  F011         	goto	u8760
 11508  002322                     u8761:
 11509  002322  EF99  F011         	goto	l7292
 11510  002326                     u8760:
 11511  002326  90D8               	bcf	status,0,c
 11512  002328  3039               	rrcf	___fladd@grs^0,w,c
 11513  00232A  0901               	iorlw	1
 11514  00232C  6E39               	movwf	___fladd@grs^0,c
 11515  00232E  EF9B  F011         	goto	l7294
 11516  002332                     l7292:
 11517  002332  90D8               	bcf	status,0,c
 11518  002334  3239               	rrcf	___fladd@grs^0,f,c
 11519  002336                     l7294:
 11520  002336  A02A               	btfss	___fladd@b^0,0,c
 11521  002338  EFA0  F011         	goto	u8771
 11522  00233C  EFA2  F011         	goto	u8770
 11523  002340                     u8771:
 11524  002340  EFA3  F011         	goto	l7298
 11525  002344                     u8770:
 11526  002344  8E39               	bsf	___fladd@grs^0,7,c
 11527  002346                     l7298:
 11528  002346  342D               	rlcf	(___fladd@b+3)^0,w,c
 11529  002348  322D               	rrcf	(___fladd@b+3)^0,f,c
 11530  00234A  322C               	rrcf	(___fladd@b+2)^0,f,c
 11531  00234C  322B               	rrcf	(___fladd@b+1)^0,f,c
 11532  00234E  322A               	rrcf	___fladd@b^0,f,c
 11533  002350  2A38               	incf	___fladd@bexp^0,f,c
 11534  002352  EF38  F012         	goto	l7338
 11535  002356                     l7302:
 11536  002356  502E               	movf	___fladd@a^0,w,c
 11537  002358  5C2A               	subwf	___fladd@b^0,w,c
 11538  00235A  502F               	movf	(___fladd@a+1)^0,w,c
 11539  00235C  582B               	subwfb	(___fladd@b+1)^0,w,c
 11540  00235E  5030               	movf	(___fladd@a+2)^0,w,c
 11541  002360  582C               	subwfb	(___fladd@b+2)^0,w,c
 11542  002362  502D               	movf	(___fladd@b+3)^0,w,c
 11543  002364  0A80               	xorlw	128
 11544  002366  6E32               	movwf	??___fladd^0,c
 11545  002368  5031               	movf	(___fladd@a+3)^0,w,c
 11546  00236A  0A80               	xorlw	128
 11547  00236C  5832               	subwfb	??___fladd^0,w,c
 11548  00236E  B0D8               	btfsc	status,0,c
 11549  002370  EFBC  F011         	goto	u8781
 11550  002374  EFBE  F011         	goto	u8780
 11551  002378                     u8781:
 11552  002378  EFE9  F011         	goto	l7312
 11553  00237C                     u8780:
 11554  00237C  502A               	movf	___fladd@b^0,w,c
 11555  00237E  5C2E               	subwf	___fladd@a^0,w,c
 11556  002380  6E32               	movwf	??___fladd^0,c
 11557  002382  502B               	movf	(___fladd@b+1)^0,w,c
 11558  002384  582F               	subwfb	(___fladd@a+1)^0,w,c
 11559  002386  6E33               	movwf	(??___fladd+1)^0,c
 11560  002388  502C               	movf	(___fladd@b+2)^0,w,c
 11561  00238A  5830               	subwfb	(___fladd@a+2)^0,w,c
 11562  00238C  6E34               	movwf	(??___fladd+2)^0,c
 11563  00238E  502D               	movf	(___fladd@b+3)^0,w,c
 11564  002390  5831               	subwfb	(___fladd@a+3)^0,w,c
 11565  002392  6E35               	movwf	(??___fladd+3)^0,c
 11566  002394  0EFF               	movlw	255
 11567  002396  2432               	addwf	??___fladd^0,w,c
 11568  002398  6E2A               	movwf	___fladd@b^0,c
 11569  00239A  0EFF               	movlw	255
 11570  00239C  2033               	addwfc	(??___fladd+1)^0,w,c
 11571  00239E  6E2B               	movwf	(___fladd@b+1)^0,c
 11572  0023A0  0EFF               	movlw	255
 11573  0023A2  2034               	addwfc	(??___fladd+2)^0,w,c
 11574  0023A4  6E2C               	movwf	(___fladd@b+2)^0,c
 11575  0023A6  0EFF               	movlw	255
 11576  0023A8  2035               	addwfc	(??___fladd+3)^0,w,c
 11577  0023AA  6E2D               	movwf	(___fladd@b+3)^0,c
 11578  0023AC  0E80               	movlw	128
 11579  0023AE  1A36               	xorwf	___fladd@signs^0,f,c
 11580  0023B0  6C39               	negf	___fladd@grs^0,c
 11581  0023B2  5039               	movf	___fladd@grs^0,w,c
 11582  0023B4  A4D8               	btfss	status,2,c
 11583  0023B6  EFDF  F011         	goto	u8791
 11584  0023BA  EFE1  F011         	goto	u8790
 11585  0023BE                     u8791:
 11586  0023BE  EFF1  F011         	goto	l1354
 11587  0023C2                     u8790:
 11588  0023C2  0E01               	movlw	1
 11589  0023C4  262A               	addwf	___fladd@b^0,f,c
 11590  0023C6  0E00               	movlw	0
 11591  0023C8  222B               	addwfc	(___fladd@b+1)^0,f,c
 11592  0023CA  222C               	addwfc	(___fladd@b+2)^0,f,c
 11593  0023CC  222D               	addwfc	(___fladd@b+3)^0,f,c
 11594  0023CE  EFF1  F011         	goto	l1354
 11595  0023D2                     l7312:
 11596  0023D2  502E               	movf	___fladd@a^0,w,c
 11597  0023D4  5E2A               	subwf	___fladd@b^0,f,c
 11598  0023D6  502F               	movf	(___fladd@a+1)^0,w,c
 11599  0023D8  5A2B               	subwfb	(___fladd@b+1)^0,f,c
 11600  0023DA  5030               	movf	(___fladd@a+2)^0,w,c
 11601  0023DC  5A2C               	subwfb	(___fladd@b+2)^0,f,c
 11602  0023DE  5031               	movf	(___fladd@a+3)^0,w,c
 11603  0023E0  5A2D               	subwfb	(___fladd@b+3)^0,f,c
 11604  0023E2                     l1354:
 11605  0023E2  502A               	movf	___fladd@b^0,w,c
 11606  0023E4  102B               	iorwf	(___fladd@b+1)^0,w,c
 11607  0023E6  102C               	iorwf	(___fladd@b+2)^0,w,c
 11608  0023E8  102D               	iorwf	(___fladd@b+3)^0,w,c
 11609  0023EA  A4D8               	btfss	status,2,c
 11610  0023EC  EFFA  F011         	goto	u8801
 11611  0023F0  EFFC  F011         	goto	u8800
 11612  0023F4                     u8801:
 11613  0023F4  EF31  F012         	goto	l7336
 11614  0023F8                     u8800:
 11615  0023F8  5039               	movf	___fladd@grs^0,w,c
 11616  0023FA  A4D8               	btfss	status,2,c
 11617  0023FC  EF02  F012         	goto	u8811
 11618  002400  EF04  F012         	goto	u8810
 11619  002404                     u8811:
 11620  002404  EF31  F012         	goto	l7336
 11621  002408                     u8810:
 11622  002408  0E00               	movlw	0
 11623  00240A  6E2A               	movwf	?___fladd^0,c
 11624  00240C  0E00               	movlw	0
 11625  00240E  6E2B               	movwf	(?___fladd+1)^0,c
 11626  002410  0E00               	movlw	0
 11627  002412  6E2C               	movwf	(?___fladd+2)^0,c
 11628  002414  0E00               	movlw	0
 11629  002416  6E2D               	movwf	(?___fladd+3)^0,c
 11630  002418  EFCC  F012         	goto	l1346
 11631  00241C                     l7320:
 11632  00241C  90D8               	bcf	status,0,c
 11633  00241E  362A               	rlcf	___fladd@b^0,f,c
 11634  002420  362B               	rlcf	(___fladd@b+1)^0,f,c
 11635  002422  362C               	rlcf	(___fladd@b+2)^0,f,c
 11636  002424  362D               	rlcf	(___fladd@b+3)^0,f,c
 11637  002426  AE39               	btfss	___fladd@grs^0,7,c
 11638  002428  EF18  F012         	goto	u8821
 11639  00242C  EF1A  F012         	goto	u8820
 11640  002430                     u8821:
 11641  002430  EF1B  F012         	goto	l7326
 11642  002434                     u8820:
 11643  002434  802A               	bsf	___fladd@b^0,0,c
 11644  002436                     l7326:
 11645  002436  A039               	btfss	___fladd@grs^0,0,c
 11646  002438  EF20  F012         	goto	u8831
 11647  00243C  EF22  F012         	goto	u8830
 11648  002440                     u8831:
 11649  002440  EF26  F012         	goto	l7330
 11650  002444                     u8830:
 11651  002444  80D8               	bsf	status,0,c
 11652  002446  3639               	rlcf	___fladd@grs^0,f,c
 11653  002448  EF28  F012         	goto	l7332
 11654  00244C                     l7330:
 11655  00244C  90D8               	bcf	status,0,c
 11656  00244E  3639               	rlcf	___fladd@grs^0,f,c
 11657  002450                     l7332:
 11658  002450  5038               	movf	___fladd@bexp^0,w,c
 11659  002452  B4D8               	btfsc	status,2,c
 11660  002454  EF2E  F012         	goto	u8841
 11661  002458  EF30  F012         	goto	u8840
 11662  00245C                     u8841:
 11663  00245C  EF31  F012         	goto	l7336
 11664  002460                     u8840:
 11665  002460  0638               	decf	___fladd@bexp^0,f,c
 11666  002462                     l7336:
 11667  002462  AE2C               	btfss	(___fladd@b+2)^0,7,c
 11668  002464  EF36  F012         	goto	u8851
 11669  002468  EF38  F012         	goto	u8850
 11670  00246C                     u8851:
 11671  00246C  EF0E  F012         	goto	l7320
 11672  002470                     u8850:
 11673  002470                     l7338:
 11674  002470  0E00               	movlw	0
 11675  002472  6E37               	movwf	___fladd@aexp^0,c
 11676  002474  AE39               	btfss	___fladd@grs^0,7,c
 11677  002476  EF3F  F012         	goto	u8861
 11678  00247A  EF41  F012         	goto	u8860
 11679  00247E                     u8861:
 11680  00247E  EF59  F012         	goto	l1363
 11681  002482                     u8860:
 11682  002482  C039  F032         	movff	___fladd@grs,??___fladd
 11683  002486  0E7F               	movlw	127
 11684  002488  1632               	andwf	??___fladd^0,f,c
 11685  00248A  B4D8               	btfsc	status,2,c
 11686  00248C  EF4A  F012         	goto	u8871
 11687  002490  EF4C  F012         	goto	u8870
 11688  002494                     u8871:
 11689  002494  EF50  F012         	goto	l1364
 11690  002498                     u8870:
 11691  002498                     l7344:
 11692  002498  0E01               	movlw	1
 11693  00249A  6E37               	movwf	___fladd@aexp^0,c
 11694  00249C  EF59  F012         	goto	l1363
 11695  0024A0                     l1364:
 11696  0024A0  A02A               	btfss	___fladd@b^0,0,c
 11697  0024A2  EF55  F012         	goto	u8881
 11698  0024A6  EF57  F012         	goto	u8880
 11699  0024AA                     u8881:
 11700  0024AA  EF59  F012         	goto	l1363
 11701  0024AE                     u8880:
 11702  0024AE  EF4C  F012         	goto	l7344
 11703  0024B2                     l1363:
 11704  0024B2  5037               	movf	___fladd@aexp^0,w,c
 11705  0024B4  B4D8               	btfsc	status,2,c
 11706  0024B6  EF5F  F012         	goto	u8891
 11707  0024BA  EF61  F012         	goto	u8890
 11708  0024BE                     u8891:
 11709  0024BE  EF8C  F012         	goto	l7356
 11710  0024C2                     u8890:
 11711  0024C2  0E01               	movlw	1
 11712  0024C4  262A               	addwf	___fladd@b^0,f,c
 11713  0024C6  0E00               	movlw	0
 11714  0024C8  222B               	addwfc	(___fladd@b+1)^0,f,c
 11715  0024CA  222C               	addwfc	(___fladd@b+2)^0,f,c
 11716  0024CC  222D               	addwfc	(___fladd@b+3)^0,f,c
 11717  0024CE  A02D               	btfss	(___fladd@b+3)^0,0,c
 11718  0024D0  EF6C  F012         	goto	u8901
 11719  0024D4  EF6E  F012         	goto	u8900
 11720  0024D8                     u8901:
 11721  0024D8  EF8C  F012         	goto	l7356
 11722  0024DC                     u8900:
 11723  0024DC  C02A  F032         	movff	___fladd@b,??___fladd
 11724  0024E0  C02B  F033         	movff	___fladd@b+1,??___fladd+1
 11725  0024E4  C02C  F034         	movff	___fladd@b+2,??___fladd+2
 11726  0024E8  C02D  F035         	movff	___fladd@b+3,??___fladd+3
 11727  0024EC  3435               	rlcf	(??___fladd+3)^0,w,c
 11728  0024EE  3235               	rrcf	(??___fladd+3)^0,f,c
 11729  0024F0  3234               	rrcf	(??___fladd+2)^0,f,c
 11730  0024F2  3233               	rrcf	(??___fladd+1)^0,f,c
 11731  0024F4  3232               	rrcf	??___fladd^0,f,c
 11732  0024F6  C032  F02A         	movff	??___fladd,___fladd@b
 11733  0024FA  C033  F02B         	movff	??___fladd+1,___fladd@b+1
 11734  0024FE  C034  F02C         	movff	??___fladd+2,___fladd@b+2
 11735  002502  C035  F02D         	movff	??___fladd+3,___fladd@b+3
 11736  002506  2838               	incf	___fladd@bexp^0,w,c
 11737  002508  B4D8               	btfsc	status,2,c
 11738  00250A  EF89  F012         	goto	u8911
 11739  00250E  EF8B  F012         	goto	u8910
 11740  002512                     u8911:
 11741  002512  EF8C  F012         	goto	l7356
 11742  002516                     u8910:
 11743  002516  2A38               	incf	___fladd@bexp^0,f,c
 11744  002518                     l7356:
 11745  002518  2838               	incf	___fladd@bexp^0,w,c
 11746  00251A  B4D8               	btfsc	status,2,c
 11747  00251C  EF92  F012         	goto	u8921
 11748  002520  EF94  F012         	goto	u8920
 11749  002524                     u8921:
 11750  002524  EF9C  F012         	goto	l7360
 11751  002528                     u8920:
 11752  002528  5038               	movf	___fladd@bexp^0,w,c
 11753  00252A  A4D8               	btfss	status,2,c
 11754  00252C  EF9A  F012         	goto	u8931
 11755  002530  EF9C  F012         	goto	u8930
 11756  002534                     u8931:
 11757  002534  EFAE  F012         	goto	l7364
 11758  002538                     u8930:
 11759  002538                     l7360:
 11760  002538  0E00               	movlw	0
 11761  00253A  6E2A               	movwf	___fladd@b^0,c
 11762  00253C  0E00               	movlw	0
 11763  00253E  6E2B               	movwf	(___fladd@b+1)^0,c
 11764  002540  0E00               	movlw	0
 11765  002542  6E2C               	movwf	(___fladd@b+2)^0,c
 11766  002544  0E00               	movlw	0
 11767  002546  6E2D               	movwf	(___fladd@b+3)^0,c
 11768  002548  5038               	movf	___fladd@bexp^0,w,c
 11769  00254A  A4D8               	btfss	status,2,c
 11770  00254C  EFAA  F012         	goto	u8941
 11771  002550  EFAC  F012         	goto	u8940
 11772  002554                     u8941:
 11773  002554  EFAE  F012         	goto	l7364
 11774  002558                     u8940:
 11775  002558  0E00               	movlw	0
 11776  00255A  6E36               	movwf	___fladd@signs^0,c
 11777  00255C                     l7364:
 11778  00255C  A038               	btfss	___fladd@bexp^0,0,c
 11779  00255E  EFB3  F012         	goto	u8951
 11780  002562  EFB5  F012         	goto	u8950
 11781  002566                     u8951:
 11782  002566  EFB8  F012         	goto	l7368
 11783  00256A                     u8950:
 11784  00256A  8E2C               	bsf	(___fladd@b+2)^0,7,c
 11785  00256C  EFB9  F012         	goto	l7370
 11786  002570                     l7368:
 11787  002570  9E2C               	bcf	(___fladd@b+2)^0,7,c
 11788  002572                     l7370:
 11789  002572  90D8               	bcf	status,0,c
 11790  002574  3038               	rrcf	___fladd@bexp^0,w,c
 11791  002576  6E2D               	movwf	(___fladd@b+3)^0,c
 11792  002578  AE36               	btfss	___fladd@signs^0,7,c
 11793  00257A  EFC1  F012         	goto	u8961
 11794  00257E  EFC3  F012         	goto	u8960
 11795  002582                     u8961:
 11796  002582  EFC4  F012         	goto	l7376
 11797  002586                     u8960:
 11798  002586  8E2D               	bsf	(___fladd@b+3)^0,7,c
 11799  002588                     l7376:
 11800  002588  C02A  F02A         	movff	___fladd@b,?___fladd
 11801  00258C  C02B  F02B         	movff	___fladd@b+1,?___fladd+1
 11802  002590  C02C  F02C         	movff	___fladd@b+2,?___fladd+2
 11803  002594  C02D  F02D         	movff	___fladd@b+3,?___fladd+3
 11804  002598                     l1346:
 11805  002598  0012               	return		;funcret
 11806  00259A                     __end_of___fladd:
 11807                           	opt callstack 0
 11808                           
 11809 ;; *************** function ___flneg *****************
 11810 ;; Defined at:
 11811 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;  f1              4    2[COMRAM] unsigned char 
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  4    2[COMRAM] unsigned char 
 11818 ;; Registers used:
 11819 ;;		wreg, status,2, status,0
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11829 ;;Total ram usage:        4 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:    4
 11832 ;; This function calls:
 11833 ;;		Nothing
 11834 ;; This function is called by:
 11835 ;;		_efgtoa
 11836 ;; This function uses a non-reentrant model
 11837 ;;
 11838                           
 11839                           	psect	text24
 11840  005CB0                     __ptext24:
 11841                           	opt callstack 0
 11842  005CB0                     ___flneg:
 11843                           	opt callstack 21
 11844  005CB0  5003               	movf	___flneg@f1^0,w,c
 11845  005CB2  1004               	iorwf	(___flneg@f1+1)^0,w,c
 11846  005CB4  1005               	iorwf	(___flneg@f1+2)^0,w,c
 11847  005CB6  1006               	iorwf	(___flneg@f1+3)^0,w,c
 11848  005CB8  B4D8               	btfsc	status,2,c
 11849  005CBA  EF61  F02E         	goto	u10081
 11850  005CBE  EF63  F02E         	goto	u10080
 11851  005CC2                     u10081:
 11852  005CC2  EF6B  F02E         	goto	l7974
 11853  005CC6                     u10080:
 11854  005CC6  0E00               	movlw	0
 11855  005CC8  1A03               	xorwf	___flneg@f1^0,f,c
 11856  005CCA  0E00               	movlw	0
 11857  005CCC  1A04               	xorwf	(___flneg@f1+1)^0,f,c
 11858  005CCE  0E00               	movlw	0
 11859  005CD0  1A05               	xorwf	(___flneg@f1+2)^0,f,c
 11860  005CD2  0E80               	movlw	128
 11861  005CD4  1A06               	xorwf	(___flneg@f1+3)^0,f,c
 11862  005CD6                     l7974:
 11863  005CD6  C003  F003         	movff	___flneg@f1,?___flneg
 11864  005CDA  C004  F004         	movff	___flneg@f1+1,?___flneg+1
 11865  005CDE  C005  F005         	movff	___flneg@f1+2,?___flneg+2
 11866  005CE2  C006  F006         	movff	___flneg@f1+3,?___flneg+3
 11867  005CE6  0012               	return		;funcret
 11868  005CE8                     __end_of___flneg:
 11869                           	opt callstack 0
 11870                           
 11871 ;; *************** function ___flmul *****************
 11872 ;; Defined at:
 11873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11874 ;; Parameters:    Size  Location     Type
 11875 ;;  b               4   16[COMRAM] unsigned char 
 11876 ;;  a               4   20[COMRAM] unsigned char 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;  prod            4   35[COMRAM] struct .
 11879 ;;  grs             4   30[COMRAM] unsigned long 
 11880 ;;  temp            2   39[COMRAM] struct .
 11881 ;;  bexp            1   34[COMRAM] unsigned char 
 11882 ;;  aexp            1   29[COMRAM] unsigned char 
 11883 ;;  sign            1   28[COMRAM] unsigned char 
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  4   16[COMRAM] unsigned char 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2, status,0, prodl, prodh
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11893 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11894 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11896 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11897 ;;Total ram usage:       25 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:    4
 11900 ;; This function calls:
 11901 ;;		Nothing
 11902 ;; This function is called by:
 11903 ;;		_main
 11904 ;;		_efgtoa
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text25
 11909  0029DC                     __ptext25:
 11910                           	opt callstack 0
 11911  0029DC                     ___flmul:
 11912                           	opt callstack 21
 11913  0029DC  5014               	movf	(___flmul@b+3)^0,w,c
 11914  0029DE  0B80               	andlw	128
 11915  0029E0  6E1D               	movwf	___flmul@sign^0,c
 11916  0029E2  5014               	movf	(___flmul@b+3)^0,w,c
 11917  0029E4  2414               	addwf	(___flmul@b+3)^0,w,c
 11918  0029E6  6E23               	movwf	___flmul@bexp^0,c
 11919  0029E8  AE13               	btfss	(___flmul@b+2)^0,7,c
 11920  0029EA  EFF9  F014         	goto	u9691
 11921  0029EE  EFFB  F014         	goto	u9690
 11922  0029F2                     u9691:
 11923  0029F2  EFFC  F014         	goto	l7722
 11924  0029F6                     u9690:
 11925  0029F6  8023               	bsf	___flmul@bexp^0,0,c
 11926  0029F8                     l7722:
 11927  0029F8  5023               	movf	___flmul@bexp^0,w,c
 11928  0029FA  B4D8               	btfsc	status,2,c
 11929  0029FC  EF02  F015         	goto	u9701
 11930  002A00  EF04  F015         	goto	u9700
 11931  002A04                     u9701:
 11932  002A04  EF17  F015         	goto	l7730
 11933  002A08                     u9700:
 11934  002A08  2823               	incf	___flmul@bexp^0,w,c
 11935  002A0A  A4D8               	btfss	status,2,c
 11936  002A0C  EF0A  F015         	goto	u9711
 11937  002A10  EF0C  F015         	goto	u9710
 11938  002A14                     u9711:
 11939  002A14  EF14  F015         	goto	l7728
 11940  002A18                     u9710:
 11941  002A18  0E00               	movlw	0
 11942  002A1A  6E11               	movwf	___flmul@b^0,c
 11943  002A1C  0E00               	movlw	0
 11944  002A1E  6E12               	movwf	(___flmul@b+1)^0,c
 11945  002A20  0E00               	movlw	0
 11946  002A22  6E13               	movwf	(___flmul@b+2)^0,c
 11947  002A24  0E00               	movlw	0
 11948  002A26  6E14               	movwf	(___flmul@b+3)^0,c
 11949  002A28                     l7728:
 11950  002A28  8E13               	bsf	(___flmul@b+2)^0,7,c
 11951  002A2A  EF1F  F015         	goto	l7732
 11952  002A2E                     l7730:
 11953  002A2E  0E00               	movlw	0
 11954  002A30  6E11               	movwf	___flmul@b^0,c
 11955  002A32  0E00               	movlw	0
 11956  002A34  6E12               	movwf	(___flmul@b+1)^0,c
 11957  002A36  0E00               	movlw	0
 11958  002A38  6E13               	movwf	(___flmul@b+2)^0,c
 11959  002A3A  0E00               	movlw	0
 11960  002A3C  6E14               	movwf	(___flmul@b+3)^0,c
 11961  002A3E                     l7732:
 11962  002A3E  5018               	movf	(___flmul@a+3)^0,w,c
 11963  002A40  0B80               	andlw	128
 11964  002A42  1A1D               	xorwf	___flmul@sign^0,f,c
 11965  002A44  5018               	movf	(___flmul@a+3)^0,w,c
 11966  002A46  2418               	addwf	(___flmul@a+3)^0,w,c
 11967  002A48  6E1E               	movwf	___flmul@aexp^0,c
 11968  002A4A  AE17               	btfss	(___flmul@a+2)^0,7,c
 11969  002A4C  EF2A  F015         	goto	u9721
 11970  002A50  EF2C  F015         	goto	u9720
 11971  002A54                     u9721:
 11972  002A54  EF2D  F015         	goto	l7740
 11973  002A58                     u9720:
 11974  002A58  801E               	bsf	___flmul@aexp^0,0,c
 11975  002A5A                     l7740:
 11976  002A5A  501E               	movf	___flmul@aexp^0,w,c
 11977  002A5C  B4D8               	btfsc	status,2,c
 11978  002A5E  EF33  F015         	goto	u9731
 11979  002A62  EF35  F015         	goto	u9730
 11980  002A66                     u9731:
 11981  002A66  EF48  F015         	goto	l7748
 11982  002A6A                     u9730:
 11983  002A6A  281E               	incf	___flmul@aexp^0,w,c
 11984  002A6C  A4D8               	btfss	status,2,c
 11985  002A6E  EF3B  F015         	goto	u9741
 11986  002A72  EF3D  F015         	goto	u9740
 11987  002A76                     u9741:
 11988  002A76  EF45  F015         	goto	l7746
 11989  002A7A                     u9740:
 11990  002A7A  0E00               	movlw	0
 11991  002A7C  6E15               	movwf	___flmul@a^0,c
 11992  002A7E  0E00               	movlw	0
 11993  002A80  6E16               	movwf	(___flmul@a+1)^0,c
 11994  002A82  0E00               	movlw	0
 11995  002A84  6E17               	movwf	(___flmul@a+2)^0,c
 11996  002A86  0E00               	movlw	0
 11997  002A88  6E18               	movwf	(___flmul@a+3)^0,c
 11998  002A8A                     l7746:
 11999  002A8A  8E17               	bsf	(___flmul@a+2)^0,7,c
 12000  002A8C  EF50  F015         	goto	l1423
 12001  002A90                     l7748:
 12002  002A90  0E00               	movlw	0
 12003  002A92  6E15               	movwf	___flmul@a^0,c
 12004  002A94  0E00               	movlw	0
 12005  002A96  6E16               	movwf	(___flmul@a+1)^0,c
 12006  002A98  0E00               	movlw	0
 12007  002A9A  6E17               	movwf	(___flmul@a+2)^0,c
 12008  002A9C  0E00               	movlw	0
 12009  002A9E  6E18               	movwf	(___flmul@a+3)^0,c
 12010  002AA0                     l1423:
 12011  002AA0  501E               	movf	___flmul@aexp^0,w,c
 12012  002AA2  B4D8               	btfsc	status,2,c
 12013  002AA4  EF56  F015         	goto	u9751
 12014  002AA8  EF58  F015         	goto	u9750
 12015  002AAC                     u9751:
 12016  002AAC  EF60  F015         	goto	l7752
 12017  002AB0                     u9750:
 12018  002AB0  5023               	movf	___flmul@bexp^0,w,c
 12019  002AB2  A4D8               	btfss	status,2,c
 12020  002AB4  EF5E  F015         	goto	u9761
 12021  002AB8  EF60  F015         	goto	u9760
 12022  002ABC                     u9761:
 12023  002ABC  EF6A  F015         	goto	l7756
 12024  002AC0                     u9760:
 12025  002AC0                     l7752:
 12026  002AC0  0E00               	movlw	0
 12027  002AC2  6E11               	movwf	?___flmul^0,c
 12028  002AC4  0E00               	movlw	0
 12029  002AC6  6E12               	movwf	(?___flmul+1)^0,c
 12030  002AC8  0E00               	movlw	0
 12031  002ACA  6E13               	movwf	(?___flmul+2)^0,c
 12032  002ACC  0E00               	movlw	0
 12033  002ACE  6E14               	movwf	(?___flmul+3)^0,c
 12034  002AD0  EF02  F017         	goto	l1427
 12035  002AD4                     l7756:
 12036  002AD4  5017               	movf	(___flmul@a+2)^0,w,c
 12037  002AD6  0211               	mulwf	___flmul@b^0,c
 12038  002AD8  CFF3 F028          	movff	prodl,___flmul@temp
 12039  002ADC  CFF4 F029          	movff	prodh,___flmul@temp+1
 12040  002AE0  5028               	movf	___flmul@temp^0,w,c
 12041  002AE2  6E1F               	movwf	___flmul@grs^0,c
 12042  002AE4  6A20               	clrf	(___flmul@grs+1)^0,c
 12043  002AE6  6A21               	clrf	(___flmul@grs+2)^0,c
 12044  002AE8  6A22               	clrf	(___flmul@grs+3)^0,c
 12045  002AEA  5029               	movf	(___flmul@temp+1)^0,w,c
 12046  002AEC  6E24               	movwf	___flmul@prod^0,c
 12047  002AEE  6A25               	clrf	(___flmul@prod+1)^0,c
 12048  002AF0  6A26               	clrf	(___flmul@prod+2)^0,c
 12049  002AF2  6A27               	clrf	(___flmul@prod+3)^0,c
 12050  002AF4  5016               	movf	(___flmul@a+1)^0,w,c
 12051  002AF6  0212               	mulwf	(___flmul@b+1)^0,c
 12052  002AF8  CFF3 F028          	movff	prodl,___flmul@temp
 12053  002AFC  CFF4 F029          	movff	prodh,___flmul@temp+1
 12054  002B00  5028               	movf	___flmul@temp^0,w,c
 12055  002B02  261F               	addwf	___flmul@grs^0,f,c
 12056  002B04  0E00               	movlw	0
 12057  002B06  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12058  002B08  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12059  002B0A  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12060  002B0C  5029               	movf	(___flmul@temp+1)^0,w,c
 12061  002B0E  2624               	addwf	___flmul@prod^0,f,c
 12062  002B10  0E00               	movlw	0
 12063  002B12  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12064  002B14  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12065  002B16  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12066  002B18  5015               	movf	___flmul@a^0,w,c
 12067  002B1A  0213               	mulwf	(___flmul@b+2)^0,c
 12068  002B1C  CFF3 F028          	movff	prodl,___flmul@temp
 12069  002B20  CFF4 F029          	movff	prodh,___flmul@temp+1
 12070  002B24  5028               	movf	___flmul@temp^0,w,c
 12071  002B26  261F               	addwf	___flmul@grs^0,f,c
 12072  002B28  0E00               	movlw	0
 12073  002B2A  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12074  002B2C  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12075  002B2E  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12076  002B30  5029               	movf	(___flmul@temp+1)^0,w,c
 12077  002B32  2624               	addwf	___flmul@prod^0,f,c
 12078  002B34  0E00               	movlw	0
 12079  002B36  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12080  002B38  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12081  002B3A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12082  002B3C  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12083  002B40  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12084  002B44  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12085  002B48  6A1F               	clrf	___flmul@grs^0,c
 12086  002B4A  5015               	movf	___flmul@a^0,w,c
 12087  002B4C  0212               	mulwf	(___flmul@b+1)^0,c
 12088  002B4E  CFF3 F028          	movff	prodl,___flmul@temp
 12089  002B52  CFF4 F029          	movff	prodh,___flmul@temp+1
 12090  002B56  5028               	movf	___flmul@temp^0,w,c
 12091  002B58  261F               	addwf	___flmul@grs^0,f,c
 12092  002B5A  5029               	movf	(___flmul@temp+1)^0,w,c
 12093  002B5C  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12094  002B5E  0E00               	movlw	0
 12095  002B60  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12096  002B62  0E00               	movlw	0
 12097  002B64  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12098  002B66  5016               	movf	(___flmul@a+1)^0,w,c
 12099  002B68  0211               	mulwf	___flmul@b^0,c
 12100  002B6A  CFF3 F028          	movff	prodl,___flmul@temp
 12101  002B6E  CFF4 F029          	movff	prodh,___flmul@temp+1
 12102  002B72  5028               	movf	___flmul@temp^0,w,c
 12103  002B74  261F               	addwf	___flmul@grs^0,f,c
 12104  002B76  5029               	movf	(___flmul@temp+1)^0,w,c
 12105  002B78  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12106  002B7A  0E00               	movlw	0
 12107  002B7C  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12108  002B7E  0E00               	movlw	0
 12109  002B80  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12110  002B82  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12111  002B86  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12112  002B8A  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12113  002B8E  6A1F               	clrf	___flmul@grs^0,c
 12114  002B90  5015               	movf	___flmul@a^0,w,c
 12115  002B92  0211               	mulwf	___flmul@b^0,c
 12116  002B94  CFF3 F028          	movff	prodl,___flmul@temp
 12117  002B98  CFF4 F029          	movff	prodh,___flmul@temp+1
 12118  002B9C  5028               	movf	___flmul@temp^0,w,c
 12119  002B9E  261F               	addwf	___flmul@grs^0,f,c
 12120  002BA0  5029               	movf	(___flmul@temp+1)^0,w,c
 12121  002BA2  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12122  002BA4  0E00               	movlw	0
 12123  002BA6  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12124  002BA8  0E00               	movlw	0
 12125  002BAA  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12126  002BAC  5017               	movf	(___flmul@a+2)^0,w,c
 12127  002BAE  0212               	mulwf	(___flmul@b+1)^0,c
 12128  002BB0  CFF3 F028          	movff	prodl,___flmul@temp
 12129  002BB4  CFF4 F029          	movff	prodh,___flmul@temp+1
 12130  002BB8  5028               	movf	___flmul@temp^0,w,c
 12131  002BBA  2624               	addwf	___flmul@prod^0,f,c
 12132  002BBC  5029               	movf	(___flmul@temp+1)^0,w,c
 12133  002BBE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12134  002BC0  0E00               	movlw	0
 12135  002BC2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12136  002BC4  0E00               	movlw	0
 12137  002BC6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12138  002BC8  5016               	movf	(___flmul@a+1)^0,w,c
 12139  002BCA  0213               	mulwf	(___flmul@b+2)^0,c
 12140  002BCC  CFF3 F028          	movff	prodl,___flmul@temp
 12141  002BD0  CFF4 F029          	movff	prodh,___flmul@temp+1
 12142  002BD4  5028               	movf	___flmul@temp^0,w,c
 12143  002BD6  2624               	addwf	___flmul@prod^0,f,c
 12144  002BD8  5029               	movf	(___flmul@temp+1)^0,w,c
 12145  002BDA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12146  002BDC  0E00               	movlw	0
 12147  002BDE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12148  002BE0  0E00               	movlw	0
 12149  002BE2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12150  002BE4  5017               	movf	(___flmul@a+2)^0,w,c
 12151  002BE6  0213               	mulwf	(___flmul@b+2)^0,c
 12152  002BE8  CFF3 F028          	movff	prodl,___flmul@temp
 12153  002BEC  CFF4 F029          	movff	prodh,___flmul@temp+1
 12154  002BF0  5028               	movf	___flmul@temp^0,w,c
 12155  002BF2  6E19               	movwf	??___flmul^0,c
 12156  002BF4  5029               	movf	(___flmul@temp+1)^0,w,c
 12157  002BF6  6E1A               	movwf	(??___flmul+1)^0,c
 12158  002BF8  6A1B               	clrf	(??___flmul+2)^0,c
 12159  002BFA  6A1C               	clrf	(??___flmul+3)^0,c
 12160  002BFC  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 12161  002C00  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 12162  002C04  C019  F01A         	movff	??___flmul,??___flmul+1
 12163  002C08  6A19               	clrf	??___flmul^0,c
 12164  002C0A  5019               	movf	??___flmul^0,w,c
 12165  002C0C  2624               	addwf	___flmul@prod^0,f,c
 12166  002C0E  501A               	movf	(??___flmul+1)^0,w,c
 12167  002C10  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12168  002C12  501B               	movf	(??___flmul+2)^0,w,c
 12169  002C14  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12170  002C16  501C               	movf	(??___flmul+3)^0,w,c
 12171  002C18  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12172  002C1A  C01F  F019         	movff	___flmul@grs,??___flmul
 12173  002C1E  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
 12174  002C22  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
 12175  002C26  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
 12176  002C2A  0E19               	movlw	25
 12177  002C2C  EF1D  F016         	goto	u9770
 12178  002C30                     u9775:
 12179  002C30  90D8               	bcf	status,0,c
 12180  002C32  321C               	rrcf	(??___flmul+3)^0,f,c
 12181  002C34  321B               	rrcf	(??___flmul+2)^0,f,c
 12182  002C36  321A               	rrcf	(??___flmul+1)^0,f,c
 12183  002C38  3219               	rrcf	??___flmul^0,f,c
 12184  002C3A                     u9770:
 12185  002C3A  2EE8               	decfsz	wreg,f,c
 12186  002C3C  EF18  F016         	goto	u9775
 12187  002C40  5019               	movf	??___flmul^0,w,c
 12188  002C42  2624               	addwf	___flmul@prod^0,f,c
 12189  002C44  501A               	movf	(??___flmul+1)^0,w,c
 12190  002C46  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12191  002C48  501B               	movf	(??___flmul+2)^0,w,c
 12192  002C4A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12193  002C4C  501C               	movf	(??___flmul+3)^0,w,c
 12194  002C4E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12195  002C50  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12196  002C54  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12197  002C58  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12198  002C5C  6A1F               	clrf	___flmul@grs^0,c
 12199  002C5E  501E               	movf	___flmul@aexp^0,w,c
 12200  002C60  C023  F019         	movff	___flmul@bexp,??___flmul
 12201  002C64  6A1A               	clrf	(??___flmul+1)^0,c
 12202  002C66  2619               	addwf	??___flmul^0,f,c
 12203  002C68  0E00               	movlw	0
 12204  002C6A  221A               	addwfc	(??___flmul+1)^0,f,c
 12205  002C6C  0E82               	movlw	130
 12206  002C6E  2419               	addwf	??___flmul^0,w,c
 12207  002C70  6E28               	movwf	___flmul@temp^0,c
 12208  002C72  0EFF               	movlw	255
 12209  002C74  201A               	addwfc	(??___flmul+1)^0,w,c
 12210  002C76  6E29               	movwf	(___flmul@temp+1)^0,c
 12211  002C78  EF53  F016         	goto	l7804
 12212  002C7C                     l7798:
 12213  002C7C  90D8               	bcf	status,0,c
 12214  002C7E  3624               	rlcf	___flmul@prod^0,f,c
 12215  002C80  3625               	rlcf	(___flmul@prod+1)^0,f,c
 12216  002C82  3626               	rlcf	(___flmul@prod+2)^0,f,c
 12217  002C84  3627               	rlcf	(___flmul@prod+3)^0,f,c
 12218  002C86  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12219  002C88  EF48  F016         	goto	u9781
 12220  002C8C  EF4A  F016         	goto	u9780
 12221  002C90                     u9781:
 12222  002C90  EF4B  F016         	goto	l1430
 12223  002C94                     u9780:
 12224  002C94  8024               	bsf	___flmul@prod^0,0,c
 12225  002C96                     l1430:
 12226  002C96  90D8               	bcf	status,0,c
 12227  002C98  361F               	rlcf	___flmul@grs^0,f,c
 12228  002C9A  3620               	rlcf	(___flmul@grs+1)^0,f,c
 12229  002C9C  3621               	rlcf	(___flmul@grs+2)^0,f,c
 12230  002C9E  3622               	rlcf	(___flmul@grs+3)^0,f,c
 12231  002CA0  0628               	decf	___flmul@temp^0,f,c
 12232  002CA2  A0D8               	btfss	status,0,c
 12233  002CA4  0629               	decf	(___flmul@temp+1)^0,f,c
 12234  002CA6                     l7804:
 12235  002CA6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 12236  002CA8  EF58  F016         	goto	u9791
 12237  002CAC  EF5A  F016         	goto	u9790
 12238  002CB0                     u9791:
 12239  002CB0  EF3E  F016         	goto	l7798
 12240  002CB4                     u9790:
 12241  002CB4  0E00               	movlw	0
 12242  002CB6  6E1E               	movwf	___flmul@aexp^0,c
 12243  002CB8  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12244  002CBA  EF61  F016         	goto	u9801
 12245  002CBE  EF63  F016         	goto	u9800
 12246  002CC2                     u9801:
 12247  002CC2  EF87  F016         	goto	l1432
 12248  002CC6                     u9800:
 12249  002CC6  0EFF               	movlw	255
 12250  002CC8  141F               	andwf	___flmul@grs^0,w,c
 12251  002CCA  6E19               	movwf	??___flmul^0,c
 12252  002CCC  0EFF               	movlw	255
 12253  002CCE  1420               	andwf	(___flmul@grs+1)^0,w,c
 12254  002CD0  6E1A               	movwf	(??___flmul+1)^0,c
 12255  002CD2  0EFF               	movlw	255
 12256  002CD4  1421               	andwf	(___flmul@grs+2)^0,w,c
 12257  002CD6  6E1B               	movwf	(??___flmul+2)^0,c
 12258  002CD8  0E7F               	movlw	127
 12259  002CDA  1422               	andwf	(___flmul@grs+3)^0,w,c
 12260  002CDC  6E1C               	movwf	(??___flmul+3)^0,c
 12261  002CDE  5019               	movf	??___flmul^0,w,c
 12262  002CE0  101A               	iorwf	(??___flmul+1)^0,w,c
 12263  002CE2  101B               	iorwf	(??___flmul+2)^0,w,c
 12264  002CE4  101C               	iorwf	(??___flmul+3)^0,w,c
 12265  002CE6  B4D8               	btfsc	status,2,c
 12266  002CE8  EF78  F016         	goto	u9811
 12267  002CEC  EF7A  F016         	goto	u9810
 12268  002CF0                     u9811:
 12269  002CF0  EF7E  F016         	goto	l1433
 12270  002CF4                     u9810:
 12271  002CF4                     l7812:
 12272  002CF4  0E01               	movlw	1
 12273  002CF6  6E1E               	movwf	___flmul@aexp^0,c
 12274  002CF8  EF87  F016         	goto	l1432
 12275  002CFC                     l1433:
 12276  002CFC  A024               	btfss	___flmul@prod^0,0,c
 12277  002CFE  EF83  F016         	goto	u9821
 12278  002D02  EF85  F016         	goto	u9820
 12279  002D06                     u9821:
 12280  002D06  EF87  F016         	goto	l1432
 12281  002D0A                     u9820:
 12282  002D0A  EF7A  F016         	goto	l7812
 12283  002D0E                     l1432:
 12284  002D0E  501E               	movf	___flmul@aexp^0,w,c
 12285  002D10  B4D8               	btfsc	status,2,c
 12286  002D12  EF8D  F016         	goto	u9831
 12287  002D16  EF8F  F016         	goto	u9830
 12288  002D1A                     u9831:
 12289  002D1A  EFB3  F016         	goto	l7824
 12290  002D1E                     u9830:
 12291  002D1E  0E01               	movlw	1
 12292  002D20  2624               	addwf	___flmul@prod^0,f,c
 12293  002D22  0E00               	movlw	0
 12294  002D24  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12295  002D26  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12296  002D28  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12297  002D2A  A027               	btfss	(___flmul@prod+3)^0,0,c
 12298  002D2C  EF9A  F016         	goto	u9841
 12299  002D30  EF9C  F016         	goto	u9840
 12300  002D34                     u9841:
 12301  002D34  EFB3  F016         	goto	l7824
 12302  002D38                     u9840:
 12303  002D38  C024  F019         	movff	___flmul@prod,??___flmul
 12304  002D3C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 12305  002D40  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 12306  002D44  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 12307  002D48  341C               	rlcf	(??___flmul+3)^0,w,c
 12308  002D4A  321C               	rrcf	(??___flmul+3)^0,f,c
 12309  002D4C  321B               	rrcf	(??___flmul+2)^0,f,c
 12310  002D4E  321A               	rrcf	(??___flmul+1)^0,f,c
 12311  002D50  3219               	rrcf	??___flmul^0,f,c
 12312  002D52  C019  F024         	movff	??___flmul,___flmul@prod
 12313  002D56  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 12314  002D5A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 12315  002D5E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 12316  002D62  4A28               	infsnz	___flmul@temp^0,f,c
 12317  002D64  2A29               	incf	(___flmul@temp+1)^0,f,c
 12318  002D66                     l7824:
 12319  002D66  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12320  002D68  EFBE  F016         	goto	u9851
 12321  002D6C  5029               	movf	(___flmul@temp+1)^0,w,c
 12322  002D6E  E108               	bnz	u9850
 12323  002D70  2828               	incf	___flmul@temp^0,w,c
 12324  002D72  A0D8               	btfss	status,0,c
 12325  002D74  EFBE  F016         	goto	u9851
 12326  002D78  EFC0  F016         	goto	u9850
 12327  002D7C                     u9851:
 12328  002D7C  EFCA  F016         	goto	l7828
 12329  002D80                     u9850:
 12330  002D80  0E00               	movlw	0
 12331  002D82  6E24               	movwf	___flmul@prod^0,c
 12332  002D84  0E00               	movlw	0
 12333  002D86  6E25               	movwf	(___flmul@prod+1)^0,c
 12334  002D88  0E80               	movlw	128
 12335  002D8A  6E26               	movwf	(___flmul@prod+2)^0,c
 12336  002D8C  0E7F               	movlw	127
 12337  002D8E  6E27               	movwf	(___flmul@prod+3)^0,c
 12338  002D90  EFF8  F016         	goto	l7840
 12339  002D94                     l7828:
 12340  002D94  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12341  002D96  EFD7  F016         	goto	u9860
 12342  002D9A  5029               	movf	(___flmul@temp+1)^0,w,c
 12343  002D9C  E106               	bnz	u9861
 12344  002D9E  0428               	decf	___flmul@temp^0,w,c
 12345  002DA0  B0D8               	btfsc	status,0,c
 12346  002DA2  EFD5  F016         	goto	u9861
 12347  002DA6  EFD7  F016         	goto	u9860
 12348  002DAA                     u9861:
 12349  002DAA  EFE3  F016         	goto	l1440
 12350  002DAE                     u9860:
 12351  002DAE  0E00               	movlw	0
 12352  002DB0  6E24               	movwf	___flmul@prod^0,c
 12353  002DB2  0E00               	movlw	0
 12354  002DB4  6E25               	movwf	(___flmul@prod+1)^0,c
 12355  002DB6  0E00               	movlw	0
 12356  002DB8  6E26               	movwf	(___flmul@prod+2)^0,c
 12357  002DBA  0E00               	movlw	0
 12358  002DBC  6E27               	movwf	(___flmul@prod+3)^0,c
 12359  002DBE  0E00               	movlw	0
 12360  002DC0  6E1D               	movwf	___flmul@sign^0,c
 12361  002DC2  EFF8  F016         	goto	l7840
 12362  002DC6                     l1440:
 12363  002DC6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 12364  002DCA  0EFF               	movlw	255
 12365  002DCC  1624               	andwf	___flmul@prod^0,f,c
 12366  002DCE  0EFF               	movlw	255
 12367  002DD0  1625               	andwf	(___flmul@prod+1)^0,f,c
 12368  002DD2  0E7F               	movlw	127
 12369  002DD4  1626               	andwf	(___flmul@prod+2)^0,f,c
 12370  002DD6  0E00               	movlw	0
 12371  002DD8  1627               	andwf	(___flmul@prod+3)^0,f,c
 12372  002DDA  A023               	btfss	___flmul@bexp^0,0,c
 12373  002DDC  EFF2  F016         	goto	u9871
 12374  002DE0  EFF4  F016         	goto	u9870
 12375  002DE4                     u9871:
 12376  002DE4  EFF5  F016         	goto	l7838
 12377  002DE8                     u9870:
 12378  002DE8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 12379  002DEA                     l7838:
 12380  002DEA  90D8               	bcf	status,0,c
 12381  002DEC  3023               	rrcf	___flmul@bexp^0,w,c
 12382  002DEE  6E27               	movwf	(___flmul@prod+3)^0,c
 12383  002DF0                     l7840:
 12384  002DF0  501D               	movf	___flmul@sign^0,w,c
 12385  002DF2  1227               	iorwf	(___flmul@prod+3)^0,f,c
 12386  002DF4  C024  F011         	movff	___flmul@prod,?___flmul
 12387  002DF8  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 12388  002DFC  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 12389  002E00  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 12390  002E04                     l1427:
 12391  002E04  0012               	return		;funcret
 12392  002E06                     __end_of___flmul:
 12393                           	opt callstack 0
 12394                           
 12395 ;; *************** function ___flge *****************
 12396 ;; Defined at:
 12397 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  ff1             4   41[COMRAM] unsigned char 
 12400 ;;  ff2             4   45[COMRAM] unsigned char 
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;		None
 12403 ;; Return value:  Size  Location     Type
 12404 ;;		None               void
 12405 ;; Registers used:
 12406 ;;		wreg, status,2, status,0
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12412 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12415 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12416 ;;Total ram usage:       12 bytes
 12417 ;; Hardware stack levels used:    1
 12418 ;; Hardware stack levels required when called:    4
 12419 ;; This function calls:
 12420 ;;		Nothing
 12421 ;; This function is called by:
 12422 ;;		_main
 12423 ;;		_efgtoa
 12424 ;; This function uses a non-reentrant model
 12425 ;;
 12426                           
 12427                           	psect	text26
 12428  004EC0                     __ptext26:
 12429                           	opt callstack 0
 12430  004EC0                     ___flge:
 12431                           	opt callstack 21
 12432  004EC0  0E00               	movlw	0
 12433  004EC2  142A               	andwf	___flge@ff1^0,w,c
 12434  004EC4  6E32               	movwf	??___flge^0,c
 12435  004EC6  0E00               	movlw	0
 12436  004EC8  142B               	andwf	(___flge@ff1+1)^0,w,c
 12437  004ECA  6E33               	movwf	(??___flge+1)^0,c
 12438  004ECC  0E80               	movlw	128
 12439  004ECE  142C               	andwf	(___flge@ff1+2)^0,w,c
 12440  004ED0  6E34               	movwf	(??___flge+2)^0,c
 12441  004ED2  0E7F               	movlw	127
 12442  004ED4  142D               	andwf	(___flge@ff1+3)^0,w,c
 12443  004ED6  6E35               	movwf	(??___flge+3)^0,c
 12444  004ED8  5032               	movf	??___flge^0,w,c
 12445  004EDA  1033               	iorwf	(??___flge+1)^0,w,c
 12446  004EDC  1034               	iorwf	(??___flge+2)^0,w,c
 12447  004EDE  1035               	iorwf	(??___flge+3)^0,w,c
 12448  004EE0  A4D8               	btfss	status,2,c
 12449  004EE2  EF75  F027         	goto	u10031
 12450  004EE6  EF77  F027         	goto	u10030
 12451  004EEA                     u10031:
 12452  004EEA  EF7F  F027         	goto	l7952
 12453  004EEE                     u10030:
 12454  004EEE  0E00               	movlw	0
 12455  004EF0  6E2A               	movwf	___flge@ff1^0,c
 12456  004EF2  0E00               	movlw	0
 12457  004EF4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12458  004EF6  0E00               	movlw	0
 12459  004EF8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12460  004EFA  0E00               	movlw	0
 12461  004EFC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12462  004EFE                     l7952:
 12463  004EFE  0E00               	movlw	0
 12464  004F00  142E               	andwf	___flge@ff2^0,w,c
 12465  004F02  6E32               	movwf	??___flge^0,c
 12466  004F04  0E00               	movlw	0
 12467  004F06  142F               	andwf	(___flge@ff2+1)^0,w,c
 12468  004F08  6E33               	movwf	(??___flge+1)^0,c
 12469  004F0A  0E80               	movlw	128
 12470  004F0C  1430               	andwf	(___flge@ff2+2)^0,w,c
 12471  004F0E  6E34               	movwf	(??___flge+2)^0,c
 12472  004F10  0E7F               	movlw	127
 12473  004F12  1431               	andwf	(___flge@ff2+3)^0,w,c
 12474  004F14  6E35               	movwf	(??___flge+3)^0,c
 12475  004F16  5032               	movf	??___flge^0,w,c
 12476  004F18  1033               	iorwf	(??___flge+1)^0,w,c
 12477  004F1A  1034               	iorwf	(??___flge+2)^0,w,c
 12478  004F1C  1035               	iorwf	(??___flge+3)^0,w,c
 12479  004F1E  A4D8               	btfss	status,2,c
 12480  004F20  EF94  F027         	goto	u10041
 12481  004F24  EF96  F027         	goto	u10040
 12482  004F28                     u10041:
 12483  004F28  EF9E  F027         	goto	l7956
 12484  004F2C                     u10040:
 12485  004F2C  0E00               	movlw	0
 12486  004F2E  6E2E               	movwf	___flge@ff2^0,c
 12487  004F30  0E00               	movlw	0
 12488  004F32  6E2F               	movwf	(___flge@ff2+1)^0,c
 12489  004F34  0E00               	movlw	0
 12490  004F36  6E30               	movwf	(___flge@ff2+2)^0,c
 12491  004F38  0E00               	movlw	0
 12492  004F3A  6E31               	movwf	(___flge@ff2+3)^0,c
 12493  004F3C                     l7956:
 12494  004F3C  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 12495  004F3E  EFA3  F027         	goto	u10051
 12496  004F42  EFA5  F027         	goto	u10050
 12497  004F46                     u10051:
 12498  004F46  EFAE  F027         	goto	l7960
 12499  004F4A                     u10050:
 12500  004F4A  6C2A               	negf	___flge@ff1^0,c
 12501  004F4C  1E2B               	comf	(___flge@ff1+1)^0,f,c
 12502  004F4E  B0D8               	btfsc	status,0,c
 12503  004F50  2A2B               	incf	(___flge@ff1+1)^0,f,c
 12504  004F52  1E2C               	comf	(___flge@ff1+2)^0,f,c
 12505  004F54  B0D8               	btfsc	status,0,c
 12506  004F56  2A2C               	incf	(___flge@ff1+2)^0,f,c
 12507  004F58  0E80               	movlw	128
 12508  004F5A  562D               	subfwb	(___flge@ff1+3)^0,f,c
 12509  004F5C                     l7960:
 12510  004F5C  AE31               	btfss	(___flge@ff2+3)^0,7,c
 12511  004F5E  EFB3  F027         	goto	u10061
 12512  004F62  EFB5  F027         	goto	u10060
 12513  004F66                     u10061:
 12514  004F66  EFBE  F027         	goto	l1074
 12515  004F6A                     u10060:
 12516  004F6A  6C2E               	negf	___flge@ff2^0,c
 12517  004F6C  1E2F               	comf	(___flge@ff2+1)^0,f,c
 12518  004F6E  B0D8               	btfsc	status,0,c
 12519  004F70  2A2F               	incf	(___flge@ff2+1)^0,f,c
 12520  004F72  1E30               	comf	(___flge@ff2+2)^0,f,c
 12521  004F74  B0D8               	btfsc	status,0,c
 12522  004F76  2A30               	incf	(___flge@ff2+2)^0,f,c
 12523  004F78  0E80               	movlw	128
 12524  004F7A  5631               	subfwb	(___flge@ff2+3)^0,f,c
 12525  004F7C                     l1074:
 12526  004F7C  0E00               	movlw	0
 12527  004F7E  1A2A               	xorwf	___flge@ff1^0,f,c
 12528  004F80  0E00               	movlw	0
 12529  004F82  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 12530  004F84  0E00               	movlw	0
 12531  004F86  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 12532  004F88  0E80               	movlw	128
 12533  004F8A  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 12534  004F8C  0E00               	movlw	0
 12535  004F8E  1A2E               	xorwf	___flge@ff2^0,f,c
 12536  004F90  0E00               	movlw	0
 12537  004F92  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 12538  004F94  0E00               	movlw	0
 12539  004F96  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 12540  004F98  0E80               	movlw	128
 12541  004F9A  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 12542  004F9C  502E               	movf	___flge@ff2^0,w,c
 12543  004F9E  5C2A               	subwf	___flge@ff1^0,w,c
 12544  004FA0  502F               	movf	(___flge@ff2+1)^0,w,c
 12545  004FA2  582B               	subwfb	(___flge@ff1+1)^0,w,c
 12546  004FA4  5030               	movf	(___flge@ff2+2)^0,w,c
 12547  004FA6  582C               	subwfb	(___flge@ff1+2)^0,w,c
 12548  004FA8  5031               	movf	(___flge@ff2+3)^0,w,c
 12549  004FAA  582D               	subwfb	(___flge@ff1+3)^0,w,c
 12550  004FAC  B0D8               	btfsc	status,0,c
 12551  004FAE  EFDB  F027         	goto	u10071
 12552  004FB2  EFDD  F027         	goto	u10070
 12553  004FB6                     u10071:
 12554  004FB6  EFE0  F027         	goto	l7966
 12555  004FBA                     u10070:
 12556  004FBA  90D8               	bcf	status,0,c
 12557  004FBC  EFE1  F027         	goto	l1079
 12558  004FC0                     l7966:
 12559  004FC0  80D8               	bsf	status,0,c
 12560  004FC2                     l1079:
 12561  004FC2  0012               	return		;funcret
 12562  004FC4                     __end_of___flge:
 12563                           	opt callstack 0
 12564                           
 12565 ;; *************** function ___fleq *****************
 12566 ;; Defined at:
 12567 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;  ff1             4    2[COMRAM] unsigned char 
 12570 ;;  ff2             4    6[COMRAM] unsigned char 
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;		None
 12573 ;; Return value:  Size  Location     Type
 12574 ;;		None               void
 12575 ;; Registers used:
 12576 ;;		wreg, status,2, status,0
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12582 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12585 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12586 ;;Total ram usage:       12 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    4
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_efgtoa
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text27
 12597  005636                     __ptext27:
 12598                           	opt callstack 0
 12599  005636                     ___fleq:
 12600                           	opt callstack 21
 12601  005636  0E00               	movlw	0
 12602  005638  1403               	andwf	___fleq@ff1^0,w,c
 12603  00563A  6E0B               	movwf	??___fleq^0,c
 12604  00563C  0E00               	movlw	0
 12605  00563E  1404               	andwf	(___fleq@ff1+1)^0,w,c
 12606  005640  6E0C               	movwf	(??___fleq+1)^0,c
 12607  005642  0E80               	movlw	128
 12608  005644  1405               	andwf	(___fleq@ff1+2)^0,w,c
 12609  005646  6E0D               	movwf	(??___fleq+2)^0,c
 12610  005648  0E7F               	movlw	127
 12611  00564A  1406               	andwf	(___fleq@ff1+3)^0,w,c
 12612  00564C  6E0E               	movwf	(??___fleq+3)^0,c
 12613  00564E  500B               	movf	??___fleq^0,w,c
 12614  005650  100C               	iorwf	(??___fleq+1)^0,w,c
 12615  005652  100D               	iorwf	(??___fleq+2)^0,w,c
 12616  005654  100E               	iorwf	(??___fleq+3)^0,w,c
 12617  005656  A4D8               	btfss	status,2,c
 12618  005658  EF30  F02B         	goto	u10001
 12619  00565C  EF32  F02B         	goto	u10000
 12620  005660                     u10001:
 12621  005660  EF3A  F02B         	goto	l7936
 12622  005664                     u10000:
 12623  005664  0E00               	movlw	0
 12624  005666  6E03               	movwf	___fleq@ff1^0,c
 12625  005668  0E00               	movlw	0
 12626  00566A  6E04               	movwf	(___fleq@ff1+1)^0,c
 12627  00566C  0E00               	movlw	0
 12628  00566E  6E05               	movwf	(___fleq@ff1+2)^0,c
 12629  005670  0E00               	movlw	0
 12630  005672  6E06               	movwf	(___fleq@ff1+3)^0,c
 12631  005674                     l7936:
 12632  005674  0E00               	movlw	0
 12633  005676  1407               	andwf	___fleq@ff2^0,w,c
 12634  005678  6E0B               	movwf	??___fleq^0,c
 12635  00567A  0E00               	movlw	0
 12636  00567C  1408               	andwf	(___fleq@ff2+1)^0,w,c
 12637  00567E  6E0C               	movwf	(??___fleq+1)^0,c
 12638  005680  0E80               	movlw	128
 12639  005682  1409               	andwf	(___fleq@ff2+2)^0,w,c
 12640  005684  6E0D               	movwf	(??___fleq+2)^0,c
 12641  005686  0E7F               	movlw	127
 12642  005688  140A               	andwf	(___fleq@ff2+3)^0,w,c
 12643  00568A  6E0E               	movwf	(??___fleq+3)^0,c
 12644  00568C  500B               	movf	??___fleq^0,w,c
 12645  00568E  100C               	iorwf	(??___fleq+1)^0,w,c
 12646  005690  100D               	iorwf	(??___fleq+2)^0,w,c
 12647  005692  100E               	iorwf	(??___fleq+3)^0,w,c
 12648  005694  A4D8               	btfss	status,2,c
 12649  005696  EF4F  F02B         	goto	u10011
 12650  00569A  EF51  F02B         	goto	u10010
 12651  00569E                     u10011:
 12652  00569E  EF59  F02B         	goto	l7940
 12653  0056A2                     u10010:
 12654  0056A2  0E00               	movlw	0
 12655  0056A4  6E07               	movwf	___fleq@ff2^0,c
 12656  0056A6  0E00               	movlw	0
 12657  0056A8  6E08               	movwf	(___fleq@ff2+1)^0,c
 12658  0056AA  0E00               	movlw	0
 12659  0056AC  6E09               	movwf	(___fleq@ff2+2)^0,c
 12660  0056AE  0E00               	movlw	0
 12661  0056B0  6E0A               	movwf	(___fleq@ff2+3)^0,c
 12662  0056B2                     l7940:
 12663  0056B2  5007               	movf	___fleq@ff2^0,w,c
 12664  0056B4  1803               	xorwf	___fleq@ff1^0,w,c
 12665  0056B6  E10F               	bnz	u10020
 12666  0056B8  5008               	movf	(___fleq@ff2+1)^0,w,c
 12667  0056BA  1804               	xorwf	(___fleq@ff1+1)^0,w,c
 12668  0056BC  E10C               	bnz	u10020
 12669  0056BE  5009               	movf	(___fleq@ff2+2)^0,w,c
 12670  0056C0  1805               	xorwf	(___fleq@ff1+2)^0,w,c
 12671  0056C2  E109               	bnz	u10020
 12672  0056C4  500A               	movf	(___fleq@ff2+3)^0,w,c
 12673  0056C6  1806               	xorwf	(___fleq@ff1+3)^0,w,c
 12674  0056C8  B4D8               	btfsc	status,2,c
 12675  0056CA  EF69  F02B         	goto	u10021
 12676  0056CE  EF6B  F02B         	goto	u10020
 12677  0056D2                     u10021:
 12678  0056D2  EF6E  F02B         	goto	l7944
 12679  0056D6                     u10020:
 12680  0056D6  90D8               	bcf	status,0,c
 12681  0056D8  EF6F  F02B         	goto	l1068
 12682  0056DC                     l7944:
 12683  0056DC  80D8               	bsf	status,0,c
 12684  0056DE                     l1068:
 12685  0056DE  0012               	return		;funcret
 12686  0056E0                     __end_of___fleq:
 12687                           	opt callstack 0
 12688                           
 12689 ;; *************** function ___fldiv *****************
 12690 ;; Defined at:
 12691 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  b               4   65[COMRAM] unsigned char 
 12694 ;;  a               4   69[COMRAM] unsigned char 
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;  grs             4   84[COMRAM] unsigned long 
 12697 ;;  rem             4   77[COMRAM] unsigned long 
 12698 ;;  new_exp         2   82[COMRAM] short 
 12699 ;;  aexp            1   89[COMRAM] unsigned char 
 12700 ;;  bexp            1   88[COMRAM] unsigned char 
 12701 ;;  sign            1   81[COMRAM] unsigned char 
 12702 ;; Return value:  Size  Location     Type
 12703 ;;                  4   65[COMRAM] unsigned char 
 12704 ;; Registers used:
 12705 ;;		wreg, status,2, status,0
 12706 ;; Tracked objects:
 12707 ;;		On entry : 0/0
 12708 ;;		On exit  : 0/0
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12712 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12714 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12715 ;;Total ram usage:       25 bytes
 12716 ;; Hardware stack levels used:    1
 12717 ;; Hardware stack levels required when called:    4
 12718 ;; This function calls:
 12719 ;;		Nothing
 12720 ;; This function is called by:
 12721 ;;		_main
 12722 ;;		_efgtoa
 12723 ;; This function uses a non-reentrant model
 12724 ;;
 12725                           
 12726                           	psect	text28
 12727  002E06                     __ptext28:
 12728                           	opt callstack 0
 12729  002E06                     ___fldiv:
 12730                           	opt callstack 21
 12731  002E06  5045               	movf	(___fldiv@b+3)^0,w,c
 12732  002E08  0B80               	andlw	128
 12733  002E0A  6E52               	movwf	___fldiv@sign^0,c
 12734  002E0C  5045               	movf	(___fldiv@b+3)^0,w,c
 12735  002E0E  2445               	addwf	(___fldiv@b+3)^0,w,c
 12736  002E10  6E59               	movwf	___fldiv@bexp^0,c
 12737  002E12  AE44               	btfss	(___fldiv@b+2)^0,7,c
 12738  002E14  EF0E  F017         	goto	u9461
 12739  002E18  EF10  F017         	goto	u9460
 12740  002E1C                     u9461:
 12741  002E1C  EF11  F017         	goto	l7584
 12742  002E20                     u9460:
 12743  002E20  8059               	bsf	___fldiv@bexp^0,0,c
 12744  002E22                     l7584:
 12745  002E22  5059               	movf	___fldiv@bexp^0,w,c
 12746  002E24  B4D8               	btfsc	status,2,c
 12747  002E26  EF17  F017         	goto	u9471
 12748  002E2A  EF19  F017         	goto	u9470
 12749  002E2E                     u9471:
 12750  002E2E  EF2E  F017         	goto	l7594
 12751  002E32                     u9470:
 12752  002E32  2859               	incf	___fldiv@bexp^0,w,c
 12753  002E34  A4D8               	btfss	status,2,c
 12754  002E36  EF1F  F017         	goto	u9481
 12755  002E3A  EF21  F017         	goto	u9480
 12756  002E3E                     u9481:
 12757  002E3E  EF29  F017         	goto	l7590
 12758  002E42                     u9480:
 12759  002E42  0E00               	movlw	0
 12760  002E44  6E42               	movwf	___fldiv@b^0,c
 12761  002E46  0E00               	movlw	0
 12762  002E48  6E43               	movwf	(___fldiv@b+1)^0,c
 12763  002E4A  0E00               	movlw	0
 12764  002E4C  6E44               	movwf	(___fldiv@b+2)^0,c
 12765  002E4E  0E00               	movlw	0
 12766  002E50  6E45               	movwf	(___fldiv@b+3)^0,c
 12767  002E52                     l7590:
 12768  002E52  8E44               	bsf	(___fldiv@b+2)^0,7,c
 12769  002E54  0E00               	movlw	0
 12770  002E56  6E45               	movwf	(___fldiv@b+3)^0,c
 12771  002E58  EF36  F017         	goto	l7596
 12772  002E5C                     l7594:
 12773  002E5C  0E00               	movlw	0
 12774  002E5E  6E42               	movwf	___fldiv@b^0,c
 12775  002E60  0E00               	movlw	0
 12776  002E62  6E43               	movwf	(___fldiv@b+1)^0,c
 12777  002E64  0E00               	movlw	0
 12778  002E66  6E44               	movwf	(___fldiv@b+2)^0,c
 12779  002E68  0E00               	movlw	0
 12780  002E6A  6E45               	movwf	(___fldiv@b+3)^0,c
 12781  002E6C                     l7596:
 12782  002E6C  5049               	movf	(___fldiv@a+3)^0,w,c
 12783  002E6E  0B80               	andlw	128
 12784  002E70  1A52               	xorwf	___fldiv@sign^0,f,c
 12785  002E72  5049               	movf	(___fldiv@a+3)^0,w,c
 12786  002E74  2449               	addwf	(___fldiv@a+3)^0,w,c
 12787  002E76  6E5A               	movwf	___fldiv@aexp^0,c
 12788  002E78  AE48               	btfss	(___fldiv@a+2)^0,7,c
 12789  002E7A  EF41  F017         	goto	u9491
 12790  002E7E  EF43  F017         	goto	u9490
 12791  002E82                     u9491:
 12792  002E82  EF44  F017         	goto	l7604
 12793  002E86                     u9490:
 12794  002E86  805A               	bsf	___fldiv@aexp^0,0,c
 12795  002E88                     l7604:
 12796  002E88  505A               	movf	___fldiv@aexp^0,w,c
 12797  002E8A  B4D8               	btfsc	status,2,c
 12798  002E8C  EF4A  F017         	goto	u9501
 12799  002E90  EF4C  F017         	goto	u9500
 12800  002E94                     u9501:
 12801  002E94  EF61  F017         	goto	l7614
 12802  002E98                     u9500:
 12803  002E98  285A               	incf	___fldiv@aexp^0,w,c
 12804  002E9A  A4D8               	btfss	status,2,c
 12805  002E9C  EF52  F017         	goto	u9511
 12806  002EA0  EF54  F017         	goto	u9510
 12807  002EA4                     u9511:
 12808  002EA4  EF5C  F017         	goto	l7610
 12809  002EA8                     u9510:
 12810  002EA8  0E00               	movlw	0
 12811  002EAA  6E46               	movwf	___fldiv@a^0,c
 12812  002EAC  0E00               	movlw	0
 12813  002EAE  6E47               	movwf	(___fldiv@a+1)^0,c
 12814  002EB0  0E00               	movlw	0
 12815  002EB2  6E48               	movwf	(___fldiv@a+2)^0,c
 12816  002EB4  0E00               	movlw	0
 12817  002EB6  6E49               	movwf	(___fldiv@a+3)^0,c
 12818  002EB8                     l7610:
 12819  002EB8  8E48               	bsf	(___fldiv@a+2)^0,7,c
 12820  002EBA  0E00               	movlw	0
 12821  002EBC  6E49               	movwf	(___fldiv@a+3)^0,c
 12822  002EBE  EF69  F017         	goto	l7616
 12823  002EC2                     l7614:
 12824  002EC2  0E00               	movlw	0
 12825  002EC4  6E46               	movwf	___fldiv@a^0,c
 12826  002EC6  0E00               	movlw	0
 12827  002EC8  6E47               	movwf	(___fldiv@a+1)^0,c
 12828  002ECA  0E00               	movlw	0
 12829  002ECC  6E48               	movwf	(___fldiv@a+2)^0,c
 12830  002ECE  0E00               	movlw	0
 12831  002ED0  6E49               	movwf	(___fldiv@a+3)^0,c
 12832  002ED2                     l7616:
 12833  002ED2  5046               	movf	___fldiv@a^0,w,c
 12834  002ED4  1047               	iorwf	(___fldiv@a+1)^0,w,c
 12835  002ED6  1048               	iorwf	(___fldiv@a+2)^0,w,c
 12836  002ED8  1049               	iorwf	(___fldiv@a+3)^0,w,c
 12837  002EDA  A4D8               	btfss	status,2,c
 12838  002EDC  EF72  F017         	goto	u9521
 12839  002EE0  EF74  F017         	goto	u9520
 12840  002EE4                     u9521:
 12841  002EE4  EF8C  F017         	goto	l7628
 12842  002EE8                     u9520:
 12843  002EE8  0E00               	movlw	0
 12844  002EEA  6E42               	movwf	___fldiv@b^0,c
 12845  002EEC  0E00               	movlw	0
 12846  002EEE  6E43               	movwf	(___fldiv@b+1)^0,c
 12847  002EF0  0E00               	movlw	0
 12848  002EF2  6E44               	movwf	(___fldiv@b+2)^0,c
 12849  002EF4  0E00               	movlw	0
 12850  002EF6  6E45               	movwf	(___fldiv@b+3)^0,c
 12851  002EF8  0E80               	movlw	128
 12852  002EFA  1244               	iorwf	(___fldiv@b+2)^0,f,c
 12853  002EFC  0E7F               	movlw	127
 12854  002EFE  1245               	iorwf	(___fldiv@b+3)^0,f,c
 12855  002F00                     l7622:
 12856  002F00  5052               	movf	___fldiv@sign^0,w,c
 12857  002F02  1245               	iorwf	(___fldiv@b+3)^0,f,c
 12858  002F04  C042  F042         	movff	___fldiv@b,?___fldiv
 12859  002F08  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
 12860  002F0C  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
 12861  002F10  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
 12862  002F14  EFCF  F018         	goto	l1391
 12863  002F18                     l7628:
 12864  002F18  5059               	movf	___fldiv@bexp^0,w,c
 12865  002F1A  A4D8               	btfss	status,2,c
 12866  002F1C  EF92  F017         	goto	u9531
 12867  002F20  EF94  F017         	goto	u9530
 12868  002F24                     u9531:
 12869  002F24  EF9E  F017         	goto	l7636
 12870  002F28                     u9530:
 12871  002F28  0E00               	movlw	0
 12872  002F2A  6E42               	movwf	?___fldiv^0,c
 12873  002F2C  0E00               	movlw	0
 12874  002F2E  6E43               	movwf	(?___fldiv+1)^0,c
 12875  002F30  0E00               	movlw	0
 12876  002F32  6E44               	movwf	(?___fldiv+2)^0,c
 12877  002F34  0E00               	movlw	0
 12878  002F36  6E45               	movwf	(?___fldiv+3)^0,c
 12879  002F38  EFCF  F018         	goto	l1391
 12880  002F3C                     l7636:
 12881  002F3C  505A               	movf	___fldiv@aexp^0,w,c
 12882  002F3E  C059  F04A         	movff	___fldiv@bexp,??___fldiv
 12883  002F42  6A4B               	clrf	(??___fldiv+1)^0,c
 12884  002F44  5E4A               	subwf	??___fldiv^0,f,c
 12885  002F46  0E00               	movlw	0
 12886  002F48  5A4B               	subwfb	(??___fldiv+1)^0,f,c
 12887  002F4A  0E7F               	movlw	127
 12888  002F4C  244A               	addwf	??___fldiv^0,w,c
 12889  002F4E  6E53               	movwf	___fldiv@new_exp^0,c
 12890  002F50  0E00               	movlw	0
 12891  002F52  204B               	addwfc	(??___fldiv+1)^0,w,c
 12892  002F54  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 12893  002F56  C042  F04E         	movff	___fldiv@b,___fldiv@rem
 12894  002F5A  C043  F04F         	movff	___fldiv@b+1,___fldiv@rem+1
 12895  002F5E  C044  F050         	movff	___fldiv@b+2,___fldiv@rem+2
 12896  002F62  C045  F051         	movff	___fldiv@b+3,___fldiv@rem+3
 12897  002F66  0E00               	movlw	0
 12898  002F68  6E42               	movwf	___fldiv@b^0,c
 12899  002F6A  0E00               	movlw	0
 12900  002F6C  6E43               	movwf	(___fldiv@b+1)^0,c
 12901  002F6E  0E00               	movlw	0
 12902  002F70  6E44               	movwf	(___fldiv@b+2)^0,c
 12903  002F72  0E00               	movlw	0
 12904  002F74  6E45               	movwf	(___fldiv@b+3)^0,c
 12905  002F76  0E00               	movlw	0
 12906  002F78  6E55               	movwf	___fldiv@grs^0,c
 12907  002F7A  0E00               	movlw	0
 12908  002F7C  6E56               	movwf	(___fldiv@grs+1)^0,c
 12909  002F7E  0E00               	movlw	0
 12910  002F80  6E57               	movwf	(___fldiv@grs+2)^0,c
 12911  002F82  0E00               	movlw	0
 12912  002F84  6E58               	movwf	(___fldiv@grs+3)^0,c
 12913  002F86  0E00               	movlw	0
 12914  002F88  6E5A               	movwf	___fldiv@aexp^0,c
 12915  002F8A  EFFF  F017         	goto	l1393
 12916  002F8E                     l7646:
 12917  002F8E  505A               	movf	___fldiv@aexp^0,w,c
 12918  002F90  B4D8               	btfsc	status,2,c
 12919  002F92  EFCD  F017         	goto	u9541
 12920  002F96  EFCF  F017         	goto	u9540
 12921  002F9A                     u9541:
 12922  002F9A  EFE6  F017         	goto	l7654
 12923  002F9E                     u9540:
 12924  002F9E  90D8               	bcf	status,0,c
 12925  002FA0  364E               	rlcf	___fldiv@rem^0,f,c
 12926  002FA2  364F               	rlcf	(___fldiv@rem+1)^0,f,c
 12927  002FA4  3650               	rlcf	(___fldiv@rem+2)^0,f,c
 12928  002FA6  3651               	rlcf	(___fldiv@rem+3)^0,f,c
 12929  002FA8  90D8               	bcf	status,0,c
 12930  002FAA  3642               	rlcf	___fldiv@b^0,f,c
 12931  002FAC  3643               	rlcf	(___fldiv@b+1)^0,f,c
 12932  002FAE  3644               	rlcf	(___fldiv@b+2)^0,f,c
 12933  002FB0  3645               	rlcf	(___fldiv@b+3)^0,f,c
 12934  002FB2  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 12935  002FB4  EFDE  F017         	goto	u9551
 12936  002FB8  EFE0  F017         	goto	u9550
 12937  002FBC                     u9551:
 12938  002FBC  EFE1  F017         	goto	l1396
 12939  002FC0                     u9550:
 12940  002FC0  8042               	bsf	___fldiv@b^0,0,c
 12941  002FC2                     l1396:
 12942  002FC2  90D8               	bcf	status,0,c
 12943  002FC4  3655               	rlcf	___fldiv@grs^0,f,c
 12944  002FC6  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 12945  002FC8  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 12946  002FCA  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 12947  002FCC                     l7654:
 12948  002FCC  5046               	movf	___fldiv@a^0,w,c
 12949  002FCE  5C4E               	subwf	___fldiv@rem^0,w,c
 12950  002FD0  5047               	movf	(___fldiv@a+1)^0,w,c
 12951  002FD2  584F               	subwfb	(___fldiv@rem+1)^0,w,c
 12952  002FD4  5048               	movf	(___fldiv@a+2)^0,w,c
 12953  002FD6  5850               	subwfb	(___fldiv@rem+2)^0,w,c
 12954  002FD8  5049               	movf	(___fldiv@a+3)^0,w,c
 12955  002FDA  5851               	subwfb	(___fldiv@rem+3)^0,w,c
 12956  002FDC  A0D8               	btfss	status,0,c
 12957  002FDE  EFF3  F017         	goto	u9561
 12958  002FE2  EFF5  F017         	goto	u9560
 12959  002FE6                     u9561:
 12960  002FE6  EFFE  F017         	goto	l7660
 12961  002FEA                     u9560:
 12962  002FEA  8C58               	bsf	(___fldiv@grs+3)^0,6,c
 12963  002FEC  5046               	movf	___fldiv@a^0,w,c
 12964  002FEE  5E4E               	subwf	___fldiv@rem^0,f,c
 12965  002FF0  5047               	movf	(___fldiv@a+1)^0,w,c
 12966  002FF2  5A4F               	subwfb	(___fldiv@rem+1)^0,f,c
 12967  002FF4  5048               	movf	(___fldiv@a+2)^0,w,c
 12968  002FF6  5A50               	subwfb	(___fldiv@rem+2)^0,f,c
 12969  002FF8  5049               	movf	(___fldiv@a+3)^0,w,c
 12970  002FFA  5A51               	subwfb	(___fldiv@rem+3)^0,f,c
 12971  002FFC                     l7660:
 12972  002FFC  2A5A               	incf	___fldiv@aexp^0,f,c
 12973  002FFE                     l1393:
 12974  002FFE  0E19               	movlw	25
 12975  003000  645A               	cpfsgt	___fldiv@aexp^0,c
 12976  003002  EF05  F018         	goto	u9571
 12977  003006  EF07  F018         	goto	u9570
 12978  00300A                     u9571:
 12979  00300A  EFC7  F017         	goto	l7646
 12980  00300E                     u9570:
 12981  00300E  504E               	movf	___fldiv@rem^0,w,c
 12982  003010  104F               	iorwf	(___fldiv@rem+1)^0,w,c
 12983  003012  1050               	iorwf	(___fldiv@rem+2)^0,w,c
 12984  003014  1051               	iorwf	(___fldiv@rem+3)^0,w,c
 12985  003016  B4D8               	btfsc	status,2,c
 12986  003018  EF10  F018         	goto	u9581
 12987  00301C  EF12  F018         	goto	u9580
 12988  003020                     u9581:
 12989  003020  EF2A  F018         	goto	l7672
 12990  003024                     u9580:
 12991  003024  8055               	bsf	___fldiv@grs^0,0,c
 12992  003026  EF2A  F018         	goto	l7672
 12993  00302A                     l7666:
 12994  00302A  90D8               	bcf	status,0,c
 12995  00302C  3642               	rlcf	___fldiv@b^0,f,c
 12996  00302E  3643               	rlcf	(___fldiv@b+1)^0,f,c
 12997  003030  3644               	rlcf	(___fldiv@b+2)^0,f,c
 12998  003032  3645               	rlcf	(___fldiv@b+3)^0,f,c
 12999  003034  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 13000  003036  EF1F  F018         	goto	u9591
 13001  00303A  EF21  F018         	goto	u9590
 13002  00303E                     u9591:
 13003  00303E  EF22  F018         	goto	l1402
 13004  003042                     u9590:
 13005  003042  8042               	bsf	___fldiv@b^0,0,c
 13006  003044                     l1402:
 13007  003044  90D8               	bcf	status,0,c
 13008  003046  3655               	rlcf	___fldiv@grs^0,f,c
 13009  003048  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 13010  00304A  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 13011  00304C  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 13012  00304E  0653               	decf	___fldiv@new_exp^0,f,c
 13013  003050  A0D8               	btfss	status,0,c
 13014  003052  0654               	decf	(___fldiv@new_exp+1)^0,f,c
 13015  003054                     l7672:
 13016  003054  AE44               	btfss	(___fldiv@b+2)^0,7,c
 13017  003056  EF2F  F018         	goto	u9601
 13018  00305A  EF31  F018         	goto	u9600
 13019  00305E                     u9601:
 13020  00305E  EF15  F018         	goto	l7666
 13021  003062                     u9600:
 13022  003062  0E00               	movlw	0
 13023  003064  6E5A               	movwf	___fldiv@aexp^0,c
 13024  003066  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 13025  003068  EF38  F018         	goto	u9611
 13026  00306C  EF3A  F018         	goto	u9610
 13027  003070                     u9611:
 13028  003070  EF5E  F018         	goto	l1404
 13029  003074                     u9610:
 13030  003074  0EFF               	movlw	255
 13031  003076  1455               	andwf	___fldiv@grs^0,w,c
 13032  003078  6E4A               	movwf	??___fldiv^0,c
 13033  00307A  0EFF               	movlw	255
 13034  00307C  1456               	andwf	(___fldiv@grs+1)^0,w,c
 13035  00307E  6E4B               	movwf	(??___fldiv+1)^0,c
 13036  003080  0EFF               	movlw	255
 13037  003082  1457               	andwf	(___fldiv@grs+2)^0,w,c
 13038  003084  6E4C               	movwf	(??___fldiv+2)^0,c
 13039  003086  0E7F               	movlw	127
 13040  003088  1458               	andwf	(___fldiv@grs+3)^0,w,c
 13041  00308A  6E4D               	movwf	(??___fldiv+3)^0,c
 13042  00308C  504A               	movf	??___fldiv^0,w,c
 13043  00308E  104B               	iorwf	(??___fldiv+1)^0,w,c
 13044  003090  104C               	iorwf	(??___fldiv+2)^0,w,c
 13045  003092  104D               	iorwf	(??___fldiv+3)^0,w,c
 13046  003094  B4D8               	btfsc	status,2,c
 13047  003096  EF4F  F018         	goto	u9621
 13048  00309A  EF51  F018         	goto	u9620
 13049  00309E                     u9621:
 13050  00309E  EF55  F018         	goto	l1405
 13051  0030A2                     u9620:
 13052  0030A2                     l7680:
 13053  0030A2  0E01               	movlw	1
 13054  0030A4  6E5A               	movwf	___fldiv@aexp^0,c
 13055  0030A6  EF5E  F018         	goto	l1404
 13056  0030AA                     l1405:
 13057  0030AA  A042               	btfss	___fldiv@b^0,0,c
 13058  0030AC  EF5A  F018         	goto	u9631
 13059  0030B0  EF5C  F018         	goto	u9630
 13060  0030B4                     u9631:
 13061  0030B4  EF5E  F018         	goto	l1404
 13062  0030B8                     u9630:
 13063  0030B8  EF51  F018         	goto	l7680
 13064  0030BC                     l1404:
 13065  0030BC  505A               	movf	___fldiv@aexp^0,w,c
 13066  0030BE  B4D8               	btfsc	status,2,c
 13067  0030C0  EF64  F018         	goto	u9641
 13068  0030C4  EF66  F018         	goto	u9640
 13069  0030C8                     u9641:
 13070  0030C8  EF8A  F018         	goto	l7692
 13071  0030CC                     u9640:
 13072  0030CC  0E01               	movlw	1
 13073  0030CE  2642               	addwf	___fldiv@b^0,f,c
 13074  0030D0  0E00               	movlw	0
 13075  0030D2  2243               	addwfc	(___fldiv@b+1)^0,f,c
 13076  0030D4  2244               	addwfc	(___fldiv@b+2)^0,f,c
 13077  0030D6  2245               	addwfc	(___fldiv@b+3)^0,f,c
 13078  0030D8  A045               	btfss	(___fldiv@b+3)^0,0,c
 13079  0030DA  EF71  F018         	goto	u9651
 13080  0030DE  EF73  F018         	goto	u9650
 13081  0030E2                     u9651:
 13082  0030E2  EF8A  F018         	goto	l7692
 13083  0030E6                     u9650:
 13084  0030E6  C042  F04A         	movff	___fldiv@b,??___fldiv
 13085  0030EA  C043  F04B         	movff	___fldiv@b+1,??___fldiv+1
 13086  0030EE  C044  F04C         	movff	___fldiv@b+2,??___fldiv+2
 13087  0030F2  C045  F04D         	movff	___fldiv@b+3,??___fldiv+3
 13088  0030F6  344D               	rlcf	(??___fldiv+3)^0,w,c
 13089  0030F8  324D               	rrcf	(??___fldiv+3)^0,f,c
 13090  0030FA  324C               	rrcf	(??___fldiv+2)^0,f,c
 13091  0030FC  324B               	rrcf	(??___fldiv+1)^0,f,c
 13092  0030FE  324A               	rrcf	??___fldiv^0,f,c
 13093  003100  C04A  F042         	movff	??___fldiv,___fldiv@b
 13094  003104  C04B  F043         	movff	??___fldiv+1,___fldiv@b+1
 13095  003108  C04C  F044         	movff	??___fldiv+2,___fldiv@b+2
 13096  00310C  C04D  F045         	movff	??___fldiv+3,___fldiv@b+3
 13097  003110  4A53               	infsnz	___fldiv@new_exp^0,f,c
 13098  003112  2A54               	incf	(___fldiv@new_exp+1)^0,f,c
 13099  003114                     l7692:
 13100  003114  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13101  003116  EF95  F018         	goto	u9661
 13102  00311A  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 13103  00311C  E108               	bnz	u9660
 13104  00311E  2853               	incf	___fldiv@new_exp^0,w,c
 13105  003120  A0D8               	btfss	status,0,c
 13106  003122  EF95  F018         	goto	u9661
 13107  003126  EF97  F018         	goto	u9660
 13108  00312A                     u9661:
 13109  00312A  EFA2  F018         	goto	l7696
 13110  00312E                     u9660:
 13111  00312E  0E00               	movlw	0
 13112  003130  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 13113  003132  6853               	setf	___fldiv@new_exp^0,c
 13114  003134  0E00               	movlw	0
 13115  003136  6E42               	movwf	___fldiv@b^0,c
 13116  003138  0E00               	movlw	0
 13117  00313A  6E43               	movwf	(___fldiv@b+1)^0,c
 13118  00313C  0E00               	movlw	0
 13119  00313E  6E44               	movwf	(___fldiv@b+2)^0,c
 13120  003140  0E00               	movlw	0
 13121  003142  6E45               	movwf	(___fldiv@b+3)^0,c
 13122  003144                     l7696:
 13123  003144  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13124  003146  EFAF  F018         	goto	u9670
 13125  00314A  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 13126  00314C  E106               	bnz	u9671
 13127  00314E  0453               	decf	___fldiv@new_exp^0,w,c
 13128  003150  B0D8               	btfsc	status,0,c
 13129  003152  EFAD  F018         	goto	u9671
 13130  003156  EFAF  F018         	goto	u9670
 13131  00315A                     u9671:
 13132  00315A  EFBD  F018         	goto	l7700
 13133  00315E                     u9670:
 13134  00315E  0E00               	movlw	0
 13135  003160  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 13136  003162  0E00               	movlw	0
 13137  003164  6E53               	movwf	___fldiv@new_exp^0,c
 13138  003166  0E00               	movlw	0
 13139  003168  6E42               	movwf	___fldiv@b^0,c
 13140  00316A  0E00               	movlw	0
 13141  00316C  6E43               	movwf	(___fldiv@b+1)^0,c
 13142  00316E  0E00               	movlw	0
 13143  003170  6E44               	movwf	(___fldiv@b+2)^0,c
 13144  003172  0E00               	movlw	0
 13145  003174  6E45               	movwf	(___fldiv@b+3)^0,c
 13146  003176  0E00               	movlw	0
 13147  003178  6E52               	movwf	___fldiv@sign^0,c
 13148  00317A                     l7700:
 13149  00317A  C053  F059         	movff	___fldiv@new_exp,___fldiv@bexp
 13150  00317E  A059               	btfss	___fldiv@bexp^0,0,c
 13151  003180  EFC4  F018         	goto	u9681
 13152  003184  EFC6  F018         	goto	u9680
 13153  003188                     u9681:
 13154  003188  EFC9  F018         	goto	l7706
 13155  00318C                     u9680:
 13156  00318C  8E44               	bsf	(___fldiv@b+2)^0,7,c
 13157  00318E  EFCA  F018         	goto	l7708
 13158  003192                     l7706:
 13159  003192  9E44               	bcf	(___fldiv@b+2)^0,7,c
 13160  003194                     l7708:
 13161  003194  90D8               	bcf	status,0,c
 13162  003196  3059               	rrcf	___fldiv@bexp^0,w,c
 13163  003198  6E45               	movwf	(___fldiv@b+3)^0,c
 13164  00319A  EF80  F017         	goto	l7622
 13165  00319E                     l1391:
 13166  00319E  0012               	return		;funcret
 13167  0031A0                     __end_of___fldiv:
 13168                           	opt callstack 0
 13169                           
 13170 ;; *************** function ___awmod *****************
 13171 ;; Defined at:
 13172 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  dividend        2    2[COMRAM] int 
 13175 ;;  divisor         2    4[COMRAM] int 
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  sign            1    7[COMRAM] unsigned char 
 13178 ;;  counter         1    6[COMRAM] unsigned char 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  2    2[COMRAM] int 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;Total ram usage:        6 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    4
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_efgtoa
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text29
 13203  0054D6                     __ptext29:
 13204                           	opt callstack 0
 13205  0054D6                     ___awmod:
 13206                           	opt callstack 21
 13207  0054D6  0E00               	movlw	0
 13208  0054D8  6E08               	movwf	___awmod@sign^0,c
 13209  0054DA  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
 13210  0054DC  EF74  F02A         	goto	u9940
 13211  0054E0  EF72  F02A         	goto	u9941
 13212  0054E4                     u9941:
 13213  0054E4  EF7A  F02A         	goto	l7904
 13214  0054E8                     u9940:
 13215  0054E8  6C03               	negf	___awmod@dividend^0,c
 13216  0054EA  1E04               	comf	(___awmod@dividend+1)^0,f,c
 13217  0054EC  B0D8               	btfsc	status,0,c
 13218  0054EE  2A04               	incf	(___awmod@dividend+1)^0,f,c
 13219  0054F0  0E01               	movlw	1
 13220  0054F2  6E08               	movwf	___awmod@sign^0,c
 13221  0054F4                     l7904:
 13222  0054F4  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
 13223  0054F6  EF81  F02A         	goto	u9950
 13224  0054FA  EF7F  F02A         	goto	u9951
 13225  0054FE                     u9951:
 13226  0054FE  EF85  F02A         	goto	l7908
 13227  005502                     u9950:
 13228  005502  6C05               	negf	___awmod@divisor^0,c
 13229  005504  1E06               	comf	(___awmod@divisor+1)^0,f,c
 13230  005506  B0D8               	btfsc	status,0,c
 13231  005508  2A06               	incf	(___awmod@divisor+1)^0,f,c
 13232  00550A                     l7908:
 13233  00550A  5005               	movf	___awmod@divisor^0,w,c
 13234  00550C  1006               	iorwf	(___awmod@divisor+1)^0,w,c
 13235  00550E  B4D8               	btfsc	status,2,c
 13236  005510  EF8C  F02A         	goto	u9961
 13237  005514  EF8E  F02A         	goto	u9960
 13238  005518                     u9961:
 13239  005518  EFB2  F02A         	goto	l7924
 13240  00551C                     u9960:
 13241  00551C  0E01               	movlw	1
 13242  00551E  6E07               	movwf	___awmod@counter^0,c
 13243  005520  EF96  F02A         	goto	l7914
 13244  005524                     l7912:
 13245  005524  90D8               	bcf	status,0,c
 13246  005526  3605               	rlcf	___awmod@divisor^0,f,c
 13247  005528  3606               	rlcf	(___awmod@divisor+1)^0,f,c
 13248  00552A  2A07               	incf	___awmod@counter^0,f,c
 13249  00552C                     l7914:
 13250  00552C  AE06               	btfss	(___awmod@divisor+1)^0,7,c
 13251  00552E  EF9B  F02A         	goto	u9971
 13252  005532  EF9D  F02A         	goto	u9970
 13253  005536                     u9971:
 13254  005536  EF92  F02A         	goto	l7912
 13255  00553A                     u9970:
 13256  00553A                     l7916:
 13257  00553A  5005               	movf	___awmod@divisor^0,w,c
 13258  00553C  5C03               	subwf	___awmod@dividend^0,w,c
 13259  00553E  5006               	movf	(___awmod@divisor+1)^0,w,c
 13260  005540  5804               	subwfb	(___awmod@dividend+1)^0,w,c
 13261  005542  A0D8               	btfss	status,0,c
 13262  005544  EFA6  F02A         	goto	u9981
 13263  005548  EFA8  F02A         	goto	u9980
 13264  00554C                     u9981:
 13265  00554C  EFAC  F02A         	goto	l7920
 13266  005550                     u9980:
 13267  005550  5005               	movf	___awmod@divisor^0,w,c
 13268  005552  5E03               	subwf	___awmod@dividend^0,f,c
 13269  005554  5006               	movf	(___awmod@divisor+1)^0,w,c
 13270  005556  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
 13271  005558                     l7920:
 13272  005558  90D8               	bcf	status,0,c
 13273  00555A  3206               	rrcf	(___awmod@divisor+1)^0,f,c
 13274  00555C  3205               	rrcf	___awmod@divisor^0,f,c
 13275  00555E  2E07               	decfsz	___awmod@counter^0,f,c
 13276  005560  EF9D  F02A         	goto	l7916
 13277  005564                     l7924:
 13278  005564  5008               	movf	___awmod@sign^0,w,c
 13279  005566  B4D8               	btfsc	status,2,c
 13280  005568  EFB8  F02A         	goto	u9991
 13281  00556C  EFBA  F02A         	goto	u9990
 13282  005570                     u9991:
 13283  005570  EFBE  F02A         	goto	l7928
 13284  005574                     u9990:
 13285  005574  6C03               	negf	___awmod@dividend^0,c
 13286  005576  1E04               	comf	(___awmod@dividend+1)^0,f,c
 13287  005578  B0D8               	btfsc	status,0,c
 13288  00557A  2A04               	incf	(___awmod@dividend+1)^0,f,c
 13289  00557C                     l7928:
 13290  00557C  C003  F003         	movff	___awmod@dividend,?___awmod
 13291  005580  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
 13292  005584  0012               	return		;funcret
 13293  005586                     __end_of___awmod:
 13294                           	opt callstack 0
 13295                           
 13296 ;; *************** function ___awdiv *****************
 13297 ;; Defined at:
 13298 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;  dividend        2    2[COMRAM] int 
 13301 ;;  divisor         2    4[COMRAM] int 
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;  quotient        2    8[COMRAM] int 
 13304 ;;  sign            1    7[COMRAM] unsigned char 
 13305 ;;  counter         1    6[COMRAM] unsigned char 
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  2    2[COMRAM] int 
 13308 ;; Registers used:
 13309 ;;		wreg, status,2, status,0
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13316 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13318 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13319 ;;Total ram usage:        8 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:    4
 13322 ;; This function calls:
 13323 ;;		Nothing
 13324 ;; This function is called by:
 13325 ;;		_efgtoa
 13326 ;; This function uses a non-reentrant model
 13327 ;;
 13328                           
 13329                           	psect	text30
 13330  005412                     __ptext30:
 13331                           	opt callstack 0
 13332  005412                     ___awdiv:
 13333                           	opt callstack 21
 13334  005412  0E00               	movlw	0
 13335  005414  6E08               	movwf	___awdiv@sign^0,c
 13336  005416  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
 13337  005418  EF12  F02A         	goto	u9880
 13338  00541C  EF10  F02A         	goto	u9881
 13339  005420                     u9881:
 13340  005420  EF18  F02A         	goto	l7860
 13341  005424                     u9880:
 13342  005424  6C05               	negf	___awdiv@divisor^0,c
 13343  005426  1E06               	comf	(___awdiv@divisor+1)^0,f,c
 13344  005428  B0D8               	btfsc	status,0,c
 13345  00542A  2A06               	incf	(___awdiv@divisor+1)^0,f,c
 13346  00542C  0E01               	movlw	1
 13347  00542E  6E08               	movwf	___awdiv@sign^0,c
 13348  005430                     l7860:
 13349  005430  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
 13350  005432  EF1F  F02A         	goto	u9890
 13351  005436  EF1D  F02A         	goto	u9891
 13352  00543A                     u9891:
 13353  00543A  EF25  F02A         	goto	l7866
 13354  00543E                     u9890:
 13355  00543E  6C03               	negf	___awdiv@dividend^0,c
 13356  005440  1E04               	comf	(___awdiv@dividend+1)^0,f,c
 13357  005442  B0D8               	btfsc	status,0,c
 13358  005444  2A04               	incf	(___awdiv@dividend+1)^0,f,c
 13359  005446  0E01               	movlw	1
 13360  005448  1A08               	xorwf	___awdiv@sign^0,f,c
 13361  00544A                     l7866:
 13362  00544A  0E00               	movlw	0
 13363  00544C  6E0A               	movwf	(___awdiv@quotient+1)^0,c
 13364  00544E  0E00               	movlw	0
 13365  005450  6E09               	movwf	___awdiv@quotient^0,c
 13366  005452  5005               	movf	___awdiv@divisor^0,w,c
 13367  005454  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
 13368  005456  B4D8               	btfsc	status,2,c
 13369  005458  EF30  F02A         	goto	u9901
 13370  00545C  EF32  F02A         	goto	u9900
 13371  005460                     u9901:
 13372  005460  EF5A  F02A         	goto	l7888
 13373  005464                     u9900:
 13374  005464  0E01               	movlw	1
 13375  005466  6E07               	movwf	___awdiv@counter^0,c
 13376  005468  EF3A  F02A         	goto	l7874
 13377  00546C                     l7872:
 13378  00546C  90D8               	bcf	status,0,c
 13379  00546E  3605               	rlcf	___awdiv@divisor^0,f,c
 13380  005470  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
 13381  005472  2A07               	incf	___awdiv@counter^0,f,c
 13382  005474                     l7874:
 13383  005474  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
 13384  005476  EF3F  F02A         	goto	u9911
 13385  00547A  EF41  F02A         	goto	u9910
 13386  00547E                     u9911:
 13387  00547E  EF36  F02A         	goto	l7872
 13388  005482                     u9910:
 13389  005482                     l7876:
 13390  005482  90D8               	bcf	status,0,c
 13391  005484  3609               	rlcf	___awdiv@quotient^0,f,c
 13392  005486  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
 13393  005488  5005               	movf	___awdiv@divisor^0,w,c
 13394  00548A  5C03               	subwf	___awdiv@dividend^0,w,c
 13395  00548C  5006               	movf	(___awdiv@divisor+1)^0,w,c
 13396  00548E  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
 13397  005490  A0D8               	btfss	status,0,c
 13398  005492  EF4D  F02A         	goto	u9921
 13399  005496  EF4F  F02A         	goto	u9920
 13400  00549A                     u9921:
 13401  00549A  EF54  F02A         	goto	l7884
 13402  00549E                     u9920:
 13403  00549E  5005               	movf	___awdiv@divisor^0,w,c
 13404  0054A0  5E03               	subwf	___awdiv@dividend^0,f,c
 13405  0054A2  5006               	movf	(___awdiv@divisor+1)^0,w,c
 13406  0054A4  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
 13407  0054A6  8009               	bsf	___awdiv@quotient^0,0,c
 13408  0054A8                     l7884:
 13409  0054A8  90D8               	bcf	status,0,c
 13410  0054AA  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
 13411  0054AC  3205               	rrcf	___awdiv@divisor^0,f,c
 13412  0054AE  2E07               	decfsz	___awdiv@counter^0,f,c
 13413  0054B0  EF41  F02A         	goto	l7876
 13414  0054B4                     l7888:
 13415  0054B4  5008               	movf	___awdiv@sign^0,w,c
 13416  0054B6  B4D8               	btfsc	status,2,c
 13417  0054B8  EF60  F02A         	goto	u9931
 13418  0054BC  EF62  F02A         	goto	u9930
 13419  0054C0                     u9931:
 13420  0054C0  EF66  F02A         	goto	l7892
 13421  0054C4                     u9930:
 13422  0054C4  6C09               	negf	___awdiv@quotient^0,c
 13423  0054C6  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
 13424  0054C8  B0D8               	btfsc	status,0,c
 13425  0054CA  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
 13426  0054CC                     l7892:
 13427  0054CC  C009  F003         	movff	___awdiv@quotient,?___awdiv
 13428  0054D0  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 13429  0054D4  0012               	return		;funcret
 13430  0054D6                     __end_of___awdiv:
 13431                           	opt callstack 0
 13432                           
 13433 ;; *************** function _dtoa *****************
 13434 ;; Defined at:
 13435 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 13438 ;;		 -> vsnprintf@f(6), 
 13439 ;;  d               8   31[COMRAM] long long 
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;  n               8   55[COMRAM] long long 
 13442 ;;  i               2   63[COMRAM] int 
 13443 ;;  s               2   53[COMRAM] int 
 13444 ;;  w               2   51[COMRAM] int 
 13445 ;;  p               2   49[COMRAM] int 
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  2   29[COMRAM] int 
 13448 ;; Registers used:
 13449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13455 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13456 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13457 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13458 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13459 ;;Total ram usage:       36 bytes
 13460 ;; Hardware stack levels used:    1
 13461 ;; Hardware stack levels required when called:    8
 13462 ;; This function calls:
 13463 ;;		___aodiv
 13464 ;;		___aomod
 13465 ;;		_abs
 13466 ;;		_pad
 13467 ;; This function is called by:
 13468 ;;		_vfpfcnvrt
 13469 ;; This function uses a non-reentrant model
 13470 ;;
 13471                           
 13472                           	psect	text31
 13473  003526                     __ptext31:
 13474                           	opt callstack 0
 13475  003526                     _dtoa:
 13476                           	opt callstack 18
 13477  003526                     
 13478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13479  003526  C020  F038         	movff	dtoa@d,dtoa@n
 13480  00352A  C021  F039         	movff	dtoa@d+1,dtoa@n+1
 13481  00352E  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
 13482  003532  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
 13483  003536  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
 13484  00353A  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
 13485  00353E  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
 13486  003542  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
 13487  003546                     
 13488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13489  003546  BE3F               	btfsc	(dtoa@n+7)^0,7,c
 13490  003548  EFA8  F01A         	goto	u10261
 13491  00354C  EFAB  F01A         	goto	u10260
 13492  003550                     u10261:
 13493  003550  0E01               	movlw	1
 13494  003552  EFAC  F01A         	goto	u10270
 13495  003556                     u10260:
 13496  003556  0E00               	movlw	0
 13497  003558                     u10270:
 13498  003558  6E36               	movwf	dtoa@s^0,c
 13499  00355A  6A37               	clrf	(dtoa@s+1)^0,c
 13500                           
 13501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13502  00355C  5036               	movf	dtoa@s^0,w,c
 13503  00355E  1037               	iorwf	(dtoa@s+1)^0,w,c
 13504  003560  B4D8               	btfsc	status,2,c
 13505  003562  EFB5  F01A         	goto	u10281
 13506  003566  EFB7  F01A         	goto	u10280
 13507  00356A                     u10281:
 13508  00356A  EFC7  F01A         	goto	l8092
 13509  00356E                     u10280:
 13510  00356E                     
 13511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13512  00356E  1E3F               	comf	(dtoa@n+7)^0,f,c
 13513  003570  1E3E               	comf	(dtoa@n+6)^0,f,c
 13514  003572  1E3D               	comf	(dtoa@n+5)^0,f,c
 13515  003574  1E3C               	comf	(dtoa@n+4)^0,f,c
 13516  003576  1E3B               	comf	(dtoa@n+3)^0,f,c
 13517  003578  1E3A               	comf	(dtoa@n+2)^0,f,c
 13518  00357A  1E39               	comf	(dtoa@n+1)^0,f,c
 13519  00357C  6C38               	negf	dtoa@n^0,c
 13520  00357E  0E00               	movlw	0
 13521  003580  2239               	addwfc	(dtoa@n+1)^0,f,c
 13522  003582  223A               	addwfc	(dtoa@n+2)^0,f,c
 13523  003584  223B               	addwfc	(dtoa@n+3)^0,f,c
 13524  003586  223C               	addwfc	(dtoa@n+4)^0,f,c
 13525  003588  223D               	addwfc	(dtoa@n+5)^0,f,c
 13526  00358A  223E               	addwfc	(dtoa@n+6)^0,f,c
 13527  00358C  223F               	addwfc	(dtoa@n+7)^0,f,c
 13528  00358E                     l8092:
 13529                           
 13530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13531  00358E  BE5C               	btfsc	(_prec+1)^0,7,c
 13532  003590  EFCC  F01A         	goto	u10291
 13533  003594  EFCE  F01A         	goto	u10290
 13534  003598                     u10291:
 13535  003598  EFD0  F01A         	goto	l8096
 13536  00359C                     u10290:
 13537  00359C                     
 13538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13539  00359C  0100               	movlb	0	; () banked
 13540  00359E  93FC               	bcf	_flags& (0+255),1,b
 13541  0035A0                     l8096:
 13542                           
 13543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13544  0035A0  BE5C               	btfsc	(_prec+1)^0,7,c
 13545  0035A2  EFDD  F01A         	goto	u10300
 13546  0035A6  505C               	movf	(_prec+1)^0,w,c
 13547  0035A8  E106               	bnz	u10301
 13548  0035AA  045B               	decf	_prec^0,w,c
 13549  0035AC  B0D8               	btfsc	status,0,c
 13550  0035AE  EFDB  F01A         	goto	u10301
 13551  0035B2  EFDD  F01A         	goto	u10300
 13552  0035B6                     u10301:
 13553  0035B6  EFE3  F01A         	goto	l519
 13554  0035BA                     u10300:
 13555  0035BA  0E00               	movlw	0
 13556  0035BC  6E33               	movwf	(dtoa@p+1)^0,c
 13557  0035BE  0E01               	movlw	1
 13558  0035C0  6E32               	movwf	dtoa@p^0,c
 13559  0035C2  EFE7  F01A         	goto	l521
 13560  0035C6                     l519:
 13561  0035C6  C05B  F032         	movff	_prec,dtoa@p
 13562  0035CA  C05C  F033         	movff	_prec+1,dtoa@p+1
 13563  0035CE                     l521:
 13564                           
 13565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13566  0035CE  C0FA  F034         	movff	_width,dtoa@w
 13567  0035D2  C0FB  F035         	movff	_width+1,dtoa@w+1
 13568  0035D6                     
 13569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13570  0035D6  5036               	movf	dtoa@s^0,w,c
 13571  0035D8  1037               	iorwf	(dtoa@s+1)^0,w,c
 13572  0035DA  A4D8               	btfss	status,2,c
 13573  0035DC  EFF2  F01A         	goto	u10311
 13574  0035E0  EFF4  F01A         	goto	u10310
 13575  0035E4                     u10311:
 13576  0035E4  EFFC  F01A         	goto	l8104
 13577  0035E8                     u10310:
 13578  0035E8  0100               	movlb	0	; () banked
 13579  0035EA  A5FC               	btfss	_flags& (0+255),2,b
 13580  0035EC  EFFA  F01A         	goto	u10321
 13581  0035F0  EFFC  F01A         	goto	u10320
 13582  0035F4                     u10321:
 13583  0035F4  EFFF  F01A         	goto	l8106
 13584  0035F8                     u10320:
 13585  0035F8                     l8104:
 13586                           
 13587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13588  0035F8  0634               	decf	dtoa@w^0,f,c
 13589  0035FA  A0D8               	btfss	status,0,c
 13590  0035FC  0635               	decf	(dtoa@w+1)^0,f,c
 13591  0035FE                     l8106:
 13592                           
 13593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13594  0035FE  0E00               	movlw	0
 13595  003600  6E41               	movwf	(dtoa@i+1)^0,c
 13596  003602  0E4F               	movlw	79
 13597  003604  6E40               	movwf	dtoa@i^0,c
 13598  003606                     
 13599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13600  003606  0E00               	movlw	0
 13601  003608  0101               	movlb	1	; () banked
 13602  00360A  6FD7               	movwf	(_dbuf+79)& (0+255),b
 13603                           
 13604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13605  00360C  EF84  F01B         	goto	l8120
 13606  003610                     l8110:
 13607                           
 13608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13609  003610  0640               	decf	dtoa@i^0,f,c
 13610  003612  A0D8               	btfss	status,0,c
 13611  003614  0641               	decf	(dtoa@i+1)^0,f,c
 13612  003616                     
 13613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13614  003616  0E88               	movlw	low _dbuf
 13615  003618  2440               	addwf	dtoa@i^0,w,c
 13616  00361A  6ED9               	movwf	fsr2l,c
 13617  00361C  0E01               	movlw	high _dbuf
 13618  00361E  2041               	addwfc	(dtoa@i+1)^0,w,c
 13619  003620  6EDA               	movwf	fsr2h,c
 13620  003622  C038  F003         	movff	dtoa@n,___aomod@dividend
 13621  003626  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
 13622  00362A  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
 13623  00362E  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
 13624  003632  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
 13625  003636  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
 13626  00363A  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
 13627  00363E  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
 13628  003642  0E0A               	movlw	10
 13629  003644  6E0B               	movwf	___aomod@divisor^0,c
 13630  003646  0E00               	movlw	0
 13631  003648  6E0C               	movwf	(___aomod@divisor+1)^0,c
 13632  00364A  0E00               	movlw	0
 13633  00364C  6E0D               	movwf	(___aomod@divisor+2)^0,c
 13634  00364E  0E00               	movlw	0
 13635  003650  6E0E               	movwf	(___aomod@divisor+3)^0,c
 13636  003652  0E00               	movlw	0
 13637  003654  6E0F               	movwf	(___aomod@divisor+4)^0,c
 13638  003656  0E00               	movlw	0
 13639  003658  6E10               	movwf	(___aomod@divisor+5)^0,c
 13640  00365A  0E00               	movlw	0
 13641  00365C  6E11               	movwf	(___aomod@divisor+6)^0,c
 13642  00365E  0E00               	movlw	0
 13643  003660  6E12               	movwf	(___aomod@divisor+7)^0,c
 13644  003662  EC64  F024         	call	___aomod	;wreg free
 13645  003666  C003  F028         	movff	?___aomod,??_dtoa
 13646  00366A  C004  F029         	movff	?___aomod+1,??_dtoa+1
 13647  00366E  C005  F02A         	movff	?___aomod+2,??_dtoa+2
 13648  003672  C006  F02B         	movff	?___aomod+3,??_dtoa+3
 13649  003676  C007  F02C         	movff	?___aomod+4,??_dtoa+4
 13650  00367A  C008  F02D         	movff	?___aomod+5,??_dtoa+5
 13651  00367E  C009  F02E         	movff	?___aomod+6,??_dtoa+6
 13652  003682  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
 13653  003686  C028  F015         	movff	??_dtoa,abs@a
 13654  00368A  C02A  F016         	movff	??_dtoa+2,abs@a+1
 13655  00368E  ECC5  F02D         	call	_abs	;wreg free
 13656  003692  5015               	movf	?_abs^0,w,c
 13657  003694  0F30               	addlw	48
 13658  003696  6EDF               	movwf	indf2,c
 13659  003698                     
 13660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13661  003698  0632               	decf	dtoa@p^0,f,c
 13662  00369A  A0D8               	btfss	status,0,c
 13663  00369C  0633               	decf	(dtoa@p+1)^0,f,c
 13664  00369E                     
 13665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13666  00369E  0634               	decf	dtoa@w^0,f,c
 13667  0036A0  A0D8               	btfss	status,0,c
 13668  0036A2  0635               	decf	(dtoa@w+1)^0,f,c
 13669  0036A4                     
 13670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13671  0036A4  C038  F003         	movff	dtoa@n,___aodiv@dividend
 13672  0036A8  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
 13673  0036AC  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
 13674  0036B0  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
 13675  0036B4  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
 13676  0036B8  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
 13677  0036BC  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
 13678  0036C0  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
 13679  0036C4  0E0A               	movlw	10
 13680  0036C6  6E0B               	movwf	___aodiv@divisor^0,c
 13681  0036C8  0E00               	movlw	0
 13682  0036CA  6E0C               	movwf	(___aodiv@divisor+1)^0,c
 13683  0036CC  0E00               	movlw	0
 13684  0036CE  6E0D               	movwf	(___aodiv@divisor+2)^0,c
 13685  0036D0  0E00               	movlw	0
 13686  0036D2  6E0E               	movwf	(___aodiv@divisor+3)^0,c
 13687  0036D4  0E00               	movlw	0
 13688  0036D6  6E0F               	movwf	(___aodiv@divisor+4)^0,c
 13689  0036D8  0E00               	movlw	0
 13690  0036DA  6E10               	movwf	(___aodiv@divisor+5)^0,c
 13691  0036DC  0E00               	movlw	0
 13692  0036DE  6E11               	movwf	(___aodiv@divisor+6)^0,c
 13693  0036E0  0E00               	movlw	0
 13694  0036E2  6E12               	movwf	(___aodiv@divisor+7)^0,c
 13695  0036E4  EC20  F022         	call	___aodiv	;wreg free
 13696  0036E8  C003  F038         	movff	?___aodiv,dtoa@n
 13697  0036EC  C004  F039         	movff	?___aodiv+1,dtoa@n+1
 13698  0036F0  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
 13699  0036F4  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
 13700  0036F8  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
 13701  0036FC  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
 13702  003700  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
 13703  003704  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
 13704  003708                     l8120:
 13705                           
 13706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13707  003708  BE41               	btfsc	(dtoa@i+1)^0,7,c
 13708  00370A  EF8F  F01B         	goto	u10331
 13709  00370E  5041               	movf	(dtoa@i+1)^0,w,c
 13710  003710  E108               	bnz	u10330
 13711  003712  0440               	decf	dtoa@i^0,w,c
 13712  003714  A0D8               	btfss	status,0,c
 13713  003716  EF8F  F01B         	goto	u10331
 13714  00371A  EF91  F01B         	goto	u10330
 13715  00371E                     u10331:
 13716  00371E  EFC2  F01B         	goto	l8130
 13717  003722                     u10330:
 13718  003722  5038               	movf	dtoa@n^0,w,c
 13719  003724  1039               	iorwf	(dtoa@n+1)^0,w,c
 13720  003726  103A               	iorwf	(dtoa@n+2)^0,w,c
 13721  003728  103B               	iorwf	(dtoa@n+3)^0,w,c
 13722  00372A  103C               	iorwf	(dtoa@n+4)^0,w,c
 13723  00372C  103D               	iorwf	(dtoa@n+5)^0,w,c
 13724  00372E  103E               	iorwf	(dtoa@n+6)^0,w,c
 13725  003730  103F               	iorwf	(dtoa@n+7)^0,w,c
 13726  003732  A4D8               	btfss	status,2,c
 13727  003734  EF9E  F01B         	goto	u10341
 13728  003738  EFA0  F01B         	goto	u10340
 13729  00373C                     u10341:
 13730  00373C  EF08  F01B         	goto	l8110
 13731  003740                     u10340:
 13732  003740  BE33               	btfsc	(dtoa@p+1)^0,7,c
 13733  003742  EFAD  F01B         	goto	u10350
 13734  003746  5033               	movf	(dtoa@p+1)^0,w,c
 13735  003748  E106               	bnz	u10351
 13736  00374A  0432               	decf	dtoa@p^0,w,c
 13737  00374C  B0D8               	btfsc	status,0,c
 13738  00374E  EFAB  F01B         	goto	u10351
 13739  003752  EFAD  F01B         	goto	u10350
 13740  003756                     u10351:
 13741  003756  EF08  F01B         	goto	l8110
 13742  00375A                     u10350:
 13743  00375A  BE35               	btfsc	(dtoa@w+1)^0,7,c
 13744  00375C  EFB8  F01B         	goto	u10361
 13745  003760  5035               	movf	(dtoa@w+1)^0,w,c
 13746  003762  E108               	bnz	u10360
 13747  003764  0434               	decf	dtoa@w^0,w,c
 13748  003766  A0D8               	btfss	status,0,c
 13749  003768  EFB8  F01B         	goto	u10361
 13750  00376C  EFBA  F01B         	goto	u10360
 13751  003770                     u10361:
 13752  003770  EFC2  F01B         	goto	l8130
 13753  003774                     u10360:
 13754  003774  0100               	movlb	0	; () banked
 13755  003776  B3FC               	btfsc	_flags& (0+255),1,b
 13756  003778  EFC0  F01B         	goto	u10371
 13757  00377C  EFC2  F01B         	goto	u10370
 13758  003780                     u10371:
 13759  003780  EF08  F01B         	goto	l8110
 13760  003784                     u10370:
 13761  003784                     l8130:
 13762                           
 13763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13764  003784  5036               	movf	dtoa@s^0,w,c
 13765  003786  1037               	iorwf	(dtoa@s+1)^0,w,c
 13766  003788  A4D8               	btfss	status,2,c
 13767  00378A  EFC9  F01B         	goto	u10381
 13768  00378E  EFCB  F01B         	goto	u10380
 13769  003792                     u10381:
 13770  003792  EFD3  F01B         	goto	l8134
 13771  003796                     u10380:
 13772  003796  0100               	movlb	0	; () banked
 13773  003798  A5FC               	btfss	_flags& (0+255),2,b
 13774  00379A  EFD1  F01B         	goto	u10391
 13775  00379E  EFD3  F01B         	goto	u10390
 13776  0037A2                     u10391:
 13777  0037A2  EFF1  F01B         	goto	l8144
 13778  0037A6                     u10390:
 13779  0037A6                     l8134:
 13780                           
 13781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13782  0037A6  0640               	decf	dtoa@i^0,f,c
 13783  0037A8  A0D8               	btfss	status,0,c
 13784  0037AA  0641               	decf	(dtoa@i+1)^0,f,c
 13785  0037AC                     
 13786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13787  0037AC  5036               	movf	dtoa@s^0,w,c
 13788  0037AE  1037               	iorwf	(dtoa@s+1)^0,w,c
 13789  0037B0  A4D8               	btfss	status,2,c
 13790  0037B2  EFDD  F01B         	goto	u10401
 13791  0037B6  EFDF  F01B         	goto	u10400
 13792  0037BA                     u10401:
 13793  0037BA  EFE5  F01B         	goto	l8140
 13794  0037BE                     u10400:
 13795  0037BE  0E00               	movlw	0
 13796  0037C0  6E31               	movwf	(_dtoa$1309+1)^0,c
 13797  0037C2  0E2B               	movlw	43
 13798  0037C4  6E30               	movwf	_dtoa$1309^0,c
 13799  0037C6  EFE9  F01B         	goto	l8142
 13800  0037CA                     l8140:
 13801  0037CA  0E00               	movlw	0
 13802  0037CC  6E31               	movwf	(_dtoa$1309+1)^0,c
 13803  0037CE  0E2D               	movlw	45
 13804  0037D0  6E30               	movwf	_dtoa$1309^0,c
 13805  0037D2                     l8142:
 13806  0037D2  0E88               	movlw	low _dbuf
 13807  0037D4  2440               	addwf	dtoa@i^0,w,c
 13808  0037D6  6ED9               	movwf	fsr2l,c
 13809  0037D8  0E01               	movlw	high _dbuf
 13810  0037DA  2041               	addwfc	(dtoa@i+1)^0,w,c
 13811  0037DC  6EDA               	movwf	fsr2h,c
 13812  0037DE  C030  FFDF         	movff	_dtoa$1309,indf2
 13813  0037E2                     l8144:
 13814                           
 13815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13816  0037E2  C01E  F013         	movff	dtoa@fp,pad@fp
 13817  0037E6  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
 13818  0037EA  0E88               	movlw	low _dbuf
 13819  0037EC  2440               	addwf	dtoa@i^0,w,c
 13820  0037EE  6E15               	movwf	pad@buf^0,c
 13821  0037F0  0E01               	movlw	high _dbuf
 13822  0037F2  2041               	addwfc	(dtoa@i+1)^0,w,c
 13823  0037F4  6E16               	movwf	(pad@buf+1)^0,c
 13824  0037F6  C034  F017         	movff	dtoa@w,pad@p
 13825  0037FA  C035  F018         	movff	dtoa@w+1,pad@p+1
 13826  0037FE  ECA6  F029         	call	_pad	;wreg free
 13827  003802  C013  F01E         	movff	?_pad,?_dtoa
 13828  003806  C014  F01F         	movff	?_pad+1,?_dtoa+1
 13829  00380A  0012               	return		;funcret
 13830  00380C                     __end_of_dtoa:
 13831                           	opt callstack 0
 13832                           
 13833 ;; *************** function _abs *****************
 13834 ;; Defined at:
 13835 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13836 ;; Parameters:    Size  Location     Type
 13837 ;;  a               2   20[COMRAM] int 
 13838 ;; Auto vars:     Size  Location     Type
 13839 ;;		None
 13840 ;; Return value:  Size  Location     Type
 13841 ;;                  2   20[COMRAM] int 
 13842 ;; Registers used:
 13843 ;;		wreg, status,2, status,0
 13844 ;; Tracked objects:
 13845 ;;		On entry : 0/0
 13846 ;;		On exit  : 0/0
 13847 ;;		Unchanged: 0/0
 13848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13852 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13853 ;;Total ram usage:        4 bytes
 13854 ;; Hardware stack levels used:    1
 13855 ;; Hardware stack levels required when called:    4
 13856 ;; This function calls:
 13857 ;;		Nothing
 13858 ;; This function is called by:
 13859 ;;		_dtoa
 13860 ;; This function uses a non-reentrant model
 13861 ;;
 13862                           
 13863                           	psect	text32
 13864  005B8A                     __ptext32:
 13865                           	opt callstack 0
 13866  005B8A                     _abs:
 13867                           	opt callstack 21
 13868  005B8A  BE16               	btfsc	(abs@a+1)^0,7,c
 13869  005B8C  EFD2  F02D         	goto	u9030
 13870  005B90  5016               	movf	(abs@a+1)^0,w,c
 13871  005B92  E106               	bnz	u9031
 13872  005B94  0415               	decf	abs@a^0,w,c
 13873  005B96  B0D8               	btfsc	status,0,c
 13874  005B98  EFD0  F02D         	goto	u9031
 13875  005B9C  EFD2  F02D         	goto	u9030
 13876  005BA0                     u9031:
 13877  005BA0  EFE0  F02D         	goto	l1495
 13878  005BA4                     u9030:
 13879  005BA4  C015  F017         	movff	abs@a,??_abs
 13880  005BA8  C016  F018         	movff	abs@a+1,??_abs+1
 13881  005BAC  1E17               	comf	??_abs^0,f,c
 13882  005BAE  1E18               	comf	(??_abs+1)^0,f,c
 13883  005BB0  4A17               	infsnz	??_abs^0,f,c
 13884  005BB2  2A18               	incf	(??_abs+1)^0,f,c
 13885  005BB4  C017  F015         	movff	??_abs,?_abs
 13886  005BB8  C018  F016         	movff	??_abs+1,?_abs+1
 13887  005BBC  EFE4  F02D         	goto	l1498
 13888  005BC0                     l1495:
 13889  005BC0  C015  F015         	movff	abs@a,?_abs
 13890  005BC4  C016  F016         	movff	abs@a+1,?_abs+1
 13891  005BC8                     l1498:
 13892  005BC8  0012               	return		;funcret
 13893  005BCA                     __end_of_abs:
 13894                           	opt callstack 0
 13895                           
 13896 ;; *************** function ___aomod *****************
 13897 ;; Defined at:
 13898 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;  dividend        8    2[COMRAM] long long 
 13901 ;;  divisor         8   10[COMRAM] long long 
 13902 ;; Auto vars:     Size  Location     Type
 13903 ;;  sign            1   19[COMRAM] unsigned char 
 13904 ;;  counter         1   18[COMRAM] unsigned char 
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  8    2[COMRAM] long long 
 13907 ;; Registers used:
 13908 ;;		wreg, status,2, status,0
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13914 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13917 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13918 ;;Total ram usage:       18 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    4
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_dtoa
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           
 13928                           	psect	text33
 13929  0048C8                     __ptext33:
 13930                           	opt callstack 0
 13931  0048C8                     ___aomod:
 13932                           	opt callstack 21
 13933  0048C8  0E00               	movlw	0
 13934  0048CA  6E14               	movwf	___aomod@sign^0,c
 13935  0048CC  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
 13936  0048CE  EF6D  F024         	goto	u9400
 13937  0048D2  EF6B  F024         	goto	u9401
 13938  0048D6                     u9401:
 13939  0048D6  EF7F  F024         	goto	l7550
 13940  0048DA                     u9400:
 13941  0048DA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 13942  0048DC  1E09               	comf	(___aomod@dividend+6)^0,f,c
 13943  0048DE  1E08               	comf	(___aomod@dividend+5)^0,f,c
 13944  0048E0  1E07               	comf	(___aomod@dividend+4)^0,f,c
 13945  0048E2  1E06               	comf	(___aomod@dividend+3)^0,f,c
 13946  0048E4  1E05               	comf	(___aomod@dividend+2)^0,f,c
 13947  0048E6  1E04               	comf	(___aomod@dividend+1)^0,f,c
 13948  0048E8  6C03               	negf	___aomod@dividend^0,c
 13949  0048EA  0E00               	movlw	0
 13950  0048EC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 13951  0048EE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 13952  0048F0  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 13953  0048F2  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 13954  0048F4  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 13955  0048F6  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 13956  0048F8  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 13957  0048FA  0E01               	movlw	1
 13958  0048FC  6E14               	movwf	___aomod@sign^0,c
 13959  0048FE                     l7550:
 13960  0048FE  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
 13961  004900  EF86  F024         	goto	u9410
 13962  004904  EF84  F024         	goto	u9411
 13963  004908                     u9411:
 13964  004908  EF96  F024         	goto	l7554
 13965  00490C                     u9410:
 13966  00490C  1E12               	comf	(___aomod@divisor+7)^0,f,c
 13967  00490E  1E11               	comf	(___aomod@divisor+6)^0,f,c
 13968  004910  1E10               	comf	(___aomod@divisor+5)^0,f,c
 13969  004912  1E0F               	comf	(___aomod@divisor+4)^0,f,c
 13970  004914  1E0E               	comf	(___aomod@divisor+3)^0,f,c
 13971  004916  1E0D               	comf	(___aomod@divisor+2)^0,f,c
 13972  004918  1E0C               	comf	(___aomod@divisor+1)^0,f,c
 13973  00491A  6C0B               	negf	___aomod@divisor^0,c
 13974  00491C  0E00               	movlw	0
 13975  00491E  220C               	addwfc	(___aomod@divisor+1)^0,f,c
 13976  004920  220D               	addwfc	(___aomod@divisor+2)^0,f,c
 13977  004922  220E               	addwfc	(___aomod@divisor+3)^0,f,c
 13978  004924  220F               	addwfc	(___aomod@divisor+4)^0,f,c
 13979  004926  2210               	addwfc	(___aomod@divisor+5)^0,f,c
 13980  004928  2211               	addwfc	(___aomod@divisor+6)^0,f,c
 13981  00492A  2212               	addwfc	(___aomod@divisor+7)^0,f,c
 13982  00492C                     l7554:
 13983  00492C  500B               	movf	___aomod@divisor^0,w,c
 13984  00492E  100C               	iorwf	(___aomod@divisor+1)^0,w,c
 13985  004930  100D               	iorwf	(___aomod@divisor+2)^0,w,c
 13986  004932  100E               	iorwf	(___aomod@divisor+3)^0,w,c
 13987  004934  100F               	iorwf	(___aomod@divisor+4)^0,w,c
 13988  004936  1010               	iorwf	(___aomod@divisor+5)^0,w,c
 13989  004938  1011               	iorwf	(___aomod@divisor+6)^0,w,c
 13990  00493A  1012               	iorwf	(___aomod@divisor+7)^0,w,c
 13991  00493C  B4D8               	btfsc	status,2,c
 13992  00493E  EFA3  F024         	goto	u9421
 13993  004942  EFA5  F024         	goto	u9420
 13994  004946                     u9421:
 13995  004946  EFED  F024         	goto	l7570
 13996  00494A                     u9420:
 13997  00494A  0E01               	movlw	1
 13998  00494C  6E13               	movwf	___aomod@counter^0,c
 13999  00494E  EFB3  F024         	goto	l7560
 14000  004952                     l7558:
 14001  004952  90D8               	bcf	status,0,c
 14002  004954  360B               	rlcf	___aomod@divisor^0,f,c
 14003  004956  360C               	rlcf	(___aomod@divisor+1)^0,f,c
 14004  004958  360D               	rlcf	(___aomod@divisor+2)^0,f,c
 14005  00495A  360E               	rlcf	(___aomod@divisor+3)^0,f,c
 14006  00495C  360F               	rlcf	(___aomod@divisor+4)^0,f,c
 14007  00495E  3610               	rlcf	(___aomod@divisor+5)^0,f,c
 14008  004960  3611               	rlcf	(___aomod@divisor+6)^0,f,c
 14009  004962  3612               	rlcf	(___aomod@divisor+7)^0,f,c
 14010  004964  2A13               	incf	___aomod@counter^0,f,c
 14011  004966                     l7560:
 14012  004966  AE12               	btfss	(___aomod@divisor+7)^0,7,c
 14013  004968  EFB8  F024         	goto	u9431
 14014  00496C  EFBA  F024         	goto	u9430
 14015  004970                     u9431:
 14016  004970  EFA9  F024         	goto	l7558
 14017  004974                     u9430:
 14018  004974                     l7562:
 14019  004974  500B               	movf	___aomod@divisor^0,w,c
 14020  004976  5C03               	subwf	___aomod@dividend^0,w,c
 14021  004978  500C               	movf	(___aomod@divisor+1)^0,w,c
 14022  00497A  5804               	subwfb	(___aomod@dividend+1)^0,w,c
 14023  00497C  500D               	movf	(___aomod@divisor+2)^0,w,c
 14024  00497E  5805               	subwfb	(___aomod@dividend+2)^0,w,c
 14025  004980  500E               	movf	(___aomod@divisor+3)^0,w,c
 14026  004982  5806               	subwfb	(___aomod@dividend+3)^0,w,c
 14027  004984  500F               	movf	(___aomod@divisor+4)^0,w,c
 14028  004986  5807               	subwfb	(___aomod@dividend+4)^0,w,c
 14029  004988  5010               	movf	(___aomod@divisor+5)^0,w,c
 14030  00498A  5808               	subwfb	(___aomod@dividend+5)^0,w,c
 14031  00498C  5011               	movf	(___aomod@divisor+6)^0,w,c
 14032  00498E  5809               	subwfb	(___aomod@dividend+6)^0,w,c
 14033  004990  5012               	movf	(___aomod@divisor+7)^0,w,c
 14034  004992  580A               	subwfb	(___aomod@dividend+7)^0,w,c
 14035  004994  A0D8               	btfss	status,0,c
 14036  004996  EFCF  F024         	goto	u9441
 14037  00499A  EFD1  F024         	goto	u9440
 14038  00499E                     u9441:
 14039  00499E  EFE1  F024         	goto	l7566
 14040  0049A2                     u9440:
 14041  0049A2  500B               	movf	___aomod@divisor^0,w,c
 14042  0049A4  5E03               	subwf	___aomod@dividend^0,f,c
 14043  0049A6  500C               	movf	(___aomod@divisor+1)^0,w,c
 14044  0049A8  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
 14045  0049AA  500D               	movf	(___aomod@divisor+2)^0,w,c
 14046  0049AC  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
 14047  0049AE  500E               	movf	(___aomod@divisor+3)^0,w,c
 14048  0049B0  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
 14049  0049B2  500F               	movf	(___aomod@divisor+4)^0,w,c
 14050  0049B4  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
 14051  0049B6  5010               	movf	(___aomod@divisor+5)^0,w,c
 14052  0049B8  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
 14053  0049BA  5011               	movf	(___aomod@divisor+6)^0,w,c
 14054  0049BC  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
 14055  0049BE  5012               	movf	(___aomod@divisor+7)^0,w,c
 14056  0049C0  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
 14057  0049C2                     l7566:
 14058  0049C2  90D8               	bcf	status,0,c
 14059  0049C4  3212               	rrcf	(___aomod@divisor+7)^0,f,c
 14060  0049C6  3211               	rrcf	(___aomod@divisor+6)^0,f,c
 14061  0049C8  3210               	rrcf	(___aomod@divisor+5)^0,f,c
 14062  0049CA  320F               	rrcf	(___aomod@divisor+4)^0,f,c
 14063  0049CC  320E               	rrcf	(___aomod@divisor+3)^0,f,c
 14064  0049CE  320D               	rrcf	(___aomod@divisor+2)^0,f,c
 14065  0049D0  320C               	rrcf	(___aomod@divisor+1)^0,f,c
 14066  0049D2  320B               	rrcf	___aomod@divisor^0,f,c
 14067  0049D4  2E13               	decfsz	___aomod@counter^0,f,c
 14068  0049D6  EFBA  F024         	goto	l7562
 14069  0049DA                     l7570:
 14070  0049DA  5014               	movf	___aomod@sign^0,w,c
 14071  0049DC  B4D8               	btfsc	status,2,c
 14072  0049DE  EFF3  F024         	goto	u9451
 14073  0049E2  EFF5  F024         	goto	u9450
 14074  0049E6                     u9451:
 14075  0049E6  EF05  F025         	goto	l7574
 14076  0049EA                     u9450:
 14077  0049EA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 14078  0049EC  1E09               	comf	(___aomod@dividend+6)^0,f,c
 14079  0049EE  1E08               	comf	(___aomod@dividend+5)^0,f,c
 14080  0049F0  1E07               	comf	(___aomod@dividend+4)^0,f,c
 14081  0049F2  1E06               	comf	(___aomod@dividend+3)^0,f,c
 14082  0049F4  1E05               	comf	(___aomod@dividend+2)^0,f,c
 14083  0049F6  1E04               	comf	(___aomod@dividend+1)^0,f,c
 14084  0049F8  6C03               	negf	___aomod@dividend^0,c
 14085  0049FA  0E00               	movlw	0
 14086  0049FC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 14087  0049FE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 14088  004A00  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 14089  004A02  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 14090  004A04  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 14091  004A06  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 14092  004A08  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 14093  004A0A                     l7574:
 14094  004A0A  C003  F003         	movff	___aomod@dividend,?___aomod
 14095  004A0E  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
 14096  004A12  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
 14097  004A16  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
 14098  004A1A  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
 14099  004A1E  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
 14100  004A22  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
 14101  004A26  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
 14102  004A2A  0012               	return		;funcret
 14103  004A2C                     __end_of___aomod:
 14104                           	opt callstack 0
 14105                           
 14106 ;; *************** function ___aodiv *****************
 14107 ;; Defined at:
 14108 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;  dividend        8    2[COMRAM] long long 
 14111 ;;  divisor         8   10[COMRAM] long long 
 14112 ;; Auto vars:     Size  Location     Type
 14113 ;;  quotient        8   20[COMRAM] long long 
 14114 ;;  sign            1   19[COMRAM] unsigned char 
 14115 ;;  counter         1   18[COMRAM] unsigned char 
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  8    2[COMRAM] long long 
 14118 ;; Registers used:
 14119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14125 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14126 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14128 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14129 ;;Total ram usage:       26 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:    4
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_dtoa
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text34
 14140  004440                     __ptext34:
 14141                           	opt callstack 0
 14142  004440                     ___aodiv:
 14143                           	opt callstack 21
 14144  004440  0E00               	movlw	0
 14145  004442  6E14               	movwf	___aodiv@sign^0,c
 14146  004444  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
 14147  004446  EF29  F022         	goto	u9330
 14148  00444A  EF27  F022         	goto	u9331
 14149  00444E                     u9331:
 14150  00444E  EF3B  F022         	goto	l7506
 14151  004452                     u9330:
 14152  004452  1E12               	comf	(___aodiv@divisor+7)^0,f,c
 14153  004454  1E11               	comf	(___aodiv@divisor+6)^0,f,c
 14154  004456  1E10               	comf	(___aodiv@divisor+5)^0,f,c
 14155  004458  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
 14156  00445A  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
 14157  00445C  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
 14158  00445E  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
 14159  004460  6C0B               	negf	___aodiv@divisor^0,c
 14160  004462  0E00               	movlw	0
 14161  004464  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
 14162  004466  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
 14163  004468  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
 14164  00446A  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
 14165  00446C  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
 14166  00446E  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
 14167  004470  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
 14168  004472  0E01               	movlw	1
 14169  004474  6E14               	movwf	___aodiv@sign^0,c
 14170  004476                     l7506:
 14171  004476  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
 14172  004478  EF42  F022         	goto	u9340
 14173  00447C  EF40  F022         	goto	u9341
 14174  004480                     u9341:
 14175  004480  EF54  F022         	goto	l7512
 14176  004484                     u9340:
 14177  004484  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
 14178  004486  1E09               	comf	(___aodiv@dividend+6)^0,f,c
 14179  004488  1E08               	comf	(___aodiv@dividend+5)^0,f,c
 14180  00448A  1E07               	comf	(___aodiv@dividend+4)^0,f,c
 14181  00448C  1E06               	comf	(___aodiv@dividend+3)^0,f,c
 14182  00448E  1E05               	comf	(___aodiv@dividend+2)^0,f,c
 14183  004490  1E04               	comf	(___aodiv@dividend+1)^0,f,c
 14184  004492  6C03               	negf	___aodiv@dividend^0,c
 14185  004494  0E00               	movlw	0
 14186  004496  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
 14187  004498  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
 14188  00449A  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
 14189  00449C  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
 14190  00449E  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
 14191  0044A0  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
 14192  0044A2  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
 14193  0044A4  0E01               	movlw	1
 14194  0044A6  1A14               	xorwf	___aodiv@sign^0,f,c
 14195  0044A8                     l7512:
 14196  0044A8  EE20  F015         	lfsr	2,___aodiv@quotient
 14197  0044AC  0E07               	movlw	7
 14198  0044AE                     u9351:
 14199  0044AE  6ADE               	clrf	postinc2,c
 14200  0044B0  06E8               	decf	wreg,f,c
 14201  0044B2  E2FD               	bc	u9351
 14202  0044B4  500B               	movf	___aodiv@divisor^0,w,c
 14203  0044B6  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
 14204  0044B8  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
 14205  0044BA  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
 14206  0044BC  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
 14207  0044BE  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
 14208  0044C0  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
 14209  0044C2  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
 14210  0044C4  B4D8               	btfsc	status,2,c
 14211  0044C6  EF67  F022         	goto	u9361
 14212  0044CA  EF69  F022         	goto	u9360
 14213  0044CE                     u9361:
 14214  0044CE  EFBB  F022         	goto	l7534
 14215  0044D2                     u9360:
 14216  0044D2  0E01               	movlw	1
 14217  0044D4  6E13               	movwf	___aodiv@counter^0,c
 14218  0044D6  EF77  F022         	goto	l7520
 14219  0044DA                     l7518:
 14220  0044DA  90D8               	bcf	status,0,c
 14221  0044DC  360B               	rlcf	___aodiv@divisor^0,f,c
 14222  0044DE  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
 14223  0044E0  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
 14224  0044E2  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
 14225  0044E4  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
 14226  0044E6  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
 14227  0044E8  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
 14228  0044EA  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
 14229  0044EC  2A13               	incf	___aodiv@counter^0,f,c
 14230  0044EE                     l7520:
 14231  0044EE  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
 14232  0044F0  EF7C  F022         	goto	u9371
 14233  0044F4  EF7E  F022         	goto	u9370
 14234  0044F8                     u9371:
 14235  0044F8  EF6D  F022         	goto	l7518
 14236  0044FC                     u9370:
 14237  0044FC                     l7522:
 14238  0044FC  90D8               	bcf	status,0,c
 14239  0044FE  3615               	rlcf	___aodiv@quotient^0,f,c
 14240  004500  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
 14241  004502  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
 14242  004504  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
 14243  004506  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
 14244  004508  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
 14245  00450A  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
 14246  00450C  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
 14247  00450E  500B               	movf	___aodiv@divisor^0,w,c
 14248  004510  5C03               	subwf	___aodiv@dividend^0,w,c
 14249  004512  500C               	movf	(___aodiv@divisor+1)^0,w,c
 14250  004514  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
 14251  004516  500D               	movf	(___aodiv@divisor+2)^0,w,c
 14252  004518  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
 14253  00451A  500E               	movf	(___aodiv@divisor+3)^0,w,c
 14254  00451C  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
 14255  00451E  500F               	movf	(___aodiv@divisor+4)^0,w,c
 14256  004520  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
 14257  004522  5010               	movf	(___aodiv@divisor+5)^0,w,c
 14258  004524  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
 14259  004526  5011               	movf	(___aodiv@divisor+6)^0,w,c
 14260  004528  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
 14261  00452A  5012               	movf	(___aodiv@divisor+7)^0,w,c
 14262  00452C  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
 14263  00452E  A0D8               	btfss	status,0,c
 14264  004530  EF9C  F022         	goto	u9381
 14265  004534  EF9E  F022         	goto	u9380
 14266  004538                     u9381:
 14267  004538  EFAF  F022         	goto	l7530
 14268  00453C                     u9380:
 14269  00453C  500B               	movf	___aodiv@divisor^0,w,c
 14270  00453E  5E03               	subwf	___aodiv@dividend^0,f,c
 14271  004540  500C               	movf	(___aodiv@divisor+1)^0,w,c
 14272  004542  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
 14273  004544  500D               	movf	(___aodiv@divisor+2)^0,w,c
 14274  004546  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
 14275  004548  500E               	movf	(___aodiv@divisor+3)^0,w,c
 14276  00454A  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
 14277  00454C  500F               	movf	(___aodiv@divisor+4)^0,w,c
 14278  00454E  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
 14279  004550  5010               	movf	(___aodiv@divisor+5)^0,w,c
 14280  004552  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
 14281  004554  5011               	movf	(___aodiv@divisor+6)^0,w,c
 14282  004556  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
 14283  004558  5012               	movf	(___aodiv@divisor+7)^0,w,c
 14284  00455A  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
 14285  00455C  8015               	bsf	___aodiv@quotient^0,0,c
 14286  00455E                     l7530:
 14287  00455E  90D8               	bcf	status,0,c
 14288  004560  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
 14289  004562  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
 14290  004564  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
 14291  004566  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
 14292  004568  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
 14293  00456A  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
 14294  00456C  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
 14295  00456E  320B               	rrcf	___aodiv@divisor^0,f,c
 14296  004570  2E13               	decfsz	___aodiv@counter^0,f,c
 14297  004572  EF7E  F022         	goto	l7522
 14298  004576                     l7534:
 14299  004576  5014               	movf	___aodiv@sign^0,w,c
 14300  004578  B4D8               	btfsc	status,2,c
 14301  00457A  EFC1  F022         	goto	u9391
 14302  00457E  EFC3  F022         	goto	u9390
 14303  004582                     u9391:
 14304  004582  EFD3  F022         	goto	l7538
 14305  004586                     u9390:
 14306  004586  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
 14307  004588  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
 14308  00458A  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
 14309  00458C  1E19               	comf	(___aodiv@quotient+4)^0,f,c
 14310  00458E  1E18               	comf	(___aodiv@quotient+3)^0,f,c
 14311  004590  1E17               	comf	(___aodiv@quotient+2)^0,f,c
 14312  004592  1E16               	comf	(___aodiv@quotient+1)^0,f,c
 14313  004594  6C15               	negf	___aodiv@quotient^0,c
 14314  004596  0E00               	movlw	0
 14315  004598  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
 14316  00459A  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
 14317  00459C  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
 14318  00459E  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
 14319  0045A0  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
 14320  0045A2  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
 14321  0045A4  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
 14322  0045A6                     l7538:
 14323  0045A6  C015  F003         	movff	___aodiv@quotient,?___aodiv
 14324  0045AA  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
 14325  0045AE  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
 14326  0045B2  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
 14327  0045B6  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
 14328  0045BA  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
 14329  0045BE  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
 14330  0045C2  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
 14331  0045C6  0012               	return		;funcret
 14332  0045C8                     __end_of___aodiv:
 14333                           	opt callstack 0
 14334                           
 14335 ;; *************** function _ctoa *****************
 14336 ;; Defined at:
 14337 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 14340 ;;		 -> vsnprintf@f(6), 
 14341 ;;  c               1   31[COMRAM] unsigned char 
 14342 ;; Auto vars:     Size  Location     Type
 14343 ;;  w               2   32[COMRAM] int 
 14344 ;;  l               2    0        int 
 14345 ;; Return value:  Size  Location     Type
 14346 ;;                  2   29[COMRAM] int 
 14347 ;; Registers used:
 14348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14349 ;; Tracked objects:
 14350 ;;		On entry : 0/0
 14351 ;;		On exit  : 0/0
 14352 ;;		Unchanged: 0/0
 14353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14358 ;;Total ram usage:        5 bytes
 14359 ;; Hardware stack levels used:    1
 14360 ;; Hardware stack levels required when called:    8
 14361 ;; This function calls:
 14362 ;;		_pad
 14363 ;; This function is called by:
 14364 ;;		_vfpfcnvrt
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           
 14368                           	psect	text35
 14369  0058EA                     __ptext35:
 14370                           	opt callstack 0
 14371  0058EA                     _ctoa:
 14372                           	opt callstack 18
 14373  0058EA                     
 14374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14375  0058EA  0100               	movlb	0	; () banked
 14376  0058EC  51FA               	movf	_width& (0+255),w,b
 14377  0058EE  11FB               	iorwf	(_width+1)& (0+255),w,b
 14378  0058F0  A4D8               	btfss	status,2,c
 14379  0058F2  EF7D  F02C         	goto	u10251
 14380  0058F6  EF7F  F02C         	goto	u10250
 14381  0058FA                     u10251:
 14382  0058FA  EF85  F02C         	goto	l8076
 14383  0058FE                     u10250:
 14384  0058FE                     
 14385                           ; BSR set to: 0
 14386  0058FE  C0FA  F021         	movff	_width,ctoa@w
 14387  005902  C0FB  F022         	movff	_width+1,ctoa@w+1
 14388  005906  EF8B  F02C         	goto	l8078
 14389  00590A                     l8076:
 14390                           
 14391                           ; BSR set to: 0
 14392  00590A  0EFF               	movlw	255
 14393  00590C  25FA               	addwf	_width& (0+255),w,b
 14394  00590E  6E21               	movwf	ctoa@w^0,c
 14395  005910  0EFF               	movlw	255
 14396  005912  21FB               	addwfc	(_width+1)& (0+255),w,b
 14397  005914  6E22               	movwf	(ctoa@w+1)^0,c
 14398  005916                     l8078:
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14402  005916  C020  F188         	movff	ctoa@c,_dbuf
 14403  00591A                     
 14404                           ; BSR set to: 0
 14405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14406  00591A  0E00               	movlw	0
 14407  00591C  0101               	movlb	1	; () banked
 14408  00591E  6F89               	movwf	(_dbuf+1)& (0+255),b
 14409  005920                     
 14410                           ; BSR set to: 1
 14411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14412  005920  C01E  F013         	movff	ctoa@fp,pad@fp
 14413  005924  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
 14414  005928  0E88               	movlw	low _dbuf
 14415  00592A  6E15               	movwf	pad@buf^0,c
 14416  00592C  0E01               	movlw	high _dbuf
 14417  00592E  6E16               	movwf	(pad@buf+1)^0,c
 14418  005930  C021  F017         	movff	ctoa@w,pad@p
 14419  005934  C022  F018         	movff	ctoa@w+1,pad@p+1
 14420  005938  ECA6  F029         	call	_pad	;wreg free
 14421  00593C  C013  F01E         	movff	?_pad,?_ctoa
 14422  005940  C014  F01F         	movff	?_pad+1,?_ctoa+1
 14423  005944  0012               	return		;funcret
 14424  005946                     __end_of_ctoa:
 14425                           	opt callstack 0
 14426                           
 14427 ;; *************** function _pad *****************
 14428 ;; Defined at:
 14429 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 14432 ;;		 -> vsnprintf@f(6), 
 14433 ;;  buf             2   20[COMRAM] PTR unsigned char 
 14434 ;;		 -> dbuf(80), 
 14435 ;;  p               2   22[COMRAM] int 
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;  w               2   27[COMRAM] int 
 14438 ;;  i               2   25[COMRAM] int 
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  2   18[COMRAM] int 
 14441 ;; Registers used:
 14442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14443 ;; Tracked objects:
 14444 ;;		On entry : 0/0
 14445 ;;		On exit  : 0/0
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14448 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14449 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;Total ram usage:       11 bytes
 14453 ;; Hardware stack levels used:    1
 14454 ;; Hardware stack levels required when called:    7
 14455 ;; This function calls:
 14456 ;;		_fputc
 14457 ;;		_fputs
 14458 ;;		_strlen
 14459 ;; This function is called by:
 14460 ;;		_ctoa
 14461 ;;		_dtoa
 14462 ;;		_efgtoa
 14463 ;;		_otoa
 14464 ;;		_utoa
 14465 ;;		_xtoa
 14466 ;; This function uses a non-reentrant model
 14467 ;;
 14468                           
 14469                           	psect	text36
 14470  00534C                     __ptext36:
 14471                           	opt callstack 0
 14472  00534C                     _pad:
 14473                           	opt callstack 18
 14474  00534C                     
 14475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14476  00534C  0100               	movlb	0	; () banked
 14477  00534E  A1FC               	btfss	_flags& (0+255),0,b
 14478  005350  EFAC  F029         	goto	u8991
 14479  005354  EFAE  F029         	goto	u8990
 14480  005358                     u8991:
 14481  005358  EFB8  F029         	goto	l7388
 14482  00535C                     u8990:
 14483  00535C                     
 14484                           ; BSR set to: 0
 14485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14486  00535C  C015  F00C         	movff	pad@buf,fputs@s
 14487  005360  C016  F00D         	movff	pad@buf+1,fputs@s+1
 14488  005364  C013  F00E         	movff	pad@fp,fputs@fp
 14489  005368  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 14490  00536C  EC82  F02D         	call	_fputs	;wreg free
 14491  005370                     l7388:
 14492                           
 14493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14494  005370  BE18               	btfsc	(pad@p+1)^0,7,c
 14495  005372  EFBD  F029         	goto	u9001
 14496  005376  EFBF  F029         	goto	u9000
 14497  00537A                     u9001:
 14498  00537A  EFC5  F029         	goto	l7392
 14499  00537E                     u9000:
 14500  00537E  C017  F01C         	movff	pad@p,pad@w
 14501  005382  C018  F01D         	movff	pad@p+1,pad@w+1
 14502  005386  EFC9  F029         	goto	l501
 14503  00538A                     l7392:
 14504  00538A  0E00               	movlw	0
 14505  00538C  6E1D               	movwf	(pad@w+1)^0,c
 14506  00538E  0E00               	movlw	0
 14507  005390  6E1C               	movwf	pad@w^0,c
 14508  005392                     l501:
 14509                           
 14510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14511  005392  0E00               	movlw	0
 14512  005394  6E1B               	movwf	(pad@i+1)^0,c
 14513  005396  0E00               	movlw	0
 14514  005398  6E1A               	movwf	pad@i^0,c
 14515                           
 14516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14517  00539A  EFDB  F029         	goto	l7398
 14518  00539E                     l7394:
 14519                           
 14520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14521  00539E  0E00               	movlw	0
 14522  0053A0  6E04               	movwf	(fputc@c+1)^0,c
 14523  0053A2  0E20               	movlw	32
 14524  0053A4  6E03               	movwf	fputc@c^0,c
 14525  0053A6  C013  F005         	movff	pad@fp,fputc@fp
 14526  0053AA  C014  F006         	movff	pad@fp+1,fputc@fp+1
 14527  0053AE  EC41  F029         	call	_fputc	;wreg free
 14528  0053B2                     
 14529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14530  0053B2  4A1A               	infsnz	pad@i^0,f,c
 14531  0053B4  2A1B               	incf	(pad@i+1)^0,f,c
 14532  0053B6                     l7398:
 14533                           
 14534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14535  0053B6  501C               	movf	pad@w^0,w,c
 14536  0053B8  5C1A               	subwf	pad@i^0,w,c
 14537  0053BA  501B               	movf	(pad@i+1)^0,w,c
 14538  0053BC  0A80               	xorlw	128
 14539  0053BE  6E19               	movwf	??_pad^0,c
 14540  0053C0  501D               	movf	(pad@w+1)^0,w,c
 14541  0053C2  0A80               	xorlw	128
 14542  0053C4  5819               	subwfb	??_pad^0,w,c
 14543  0053C6  A0D8               	btfss	status,0,c
 14544  0053C8  EFE8  F029         	goto	u9011
 14545  0053CC  EFEA  F029         	goto	u9010
 14546  0053D0                     u9011:
 14547  0053D0  EFCF  F029         	goto	l7394
 14548  0053D4                     u9010:
 14549  0053D4                     
 14550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14551  0053D4  0100               	movlb	0	; () banked
 14552  0053D6  B1FC               	btfsc	_flags& (0+255),0,b
 14553  0053D8  EFF0  F029         	goto	u9021
 14554  0053DC  EFF2  F029         	goto	u9020
 14555  0053E0                     u9021:
 14556  0053E0  EFFC  F029         	goto	l7402
 14557  0053E4                     u9020:
 14558  0053E4                     
 14559                           ; BSR set to: 0
 14560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14561  0053E4  C015  F00C         	movff	pad@buf,fputs@s
 14562  0053E8  C016  F00D         	movff	pad@buf+1,fputs@s+1
 14563  0053EC  C013  F00E         	movff	pad@fp,fputs@fp
 14564  0053F0  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 14565  0053F4  EC82  F02D         	call	_fputs	;wreg free
 14566  0053F8                     l7402:
 14567                           
 14568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14569  0053F8  C015  F003         	movff	pad@buf,strlen@s
 14570  0053FC  C016  F004         	movff	pad@buf+1,strlen@s+1
 14571  005400  EC90  F02E         	call	_strlen	;wreg free
 14572  005404  501C               	movf	pad@w^0,w,c
 14573  005406  2403               	addwf	?_strlen^0,w,c
 14574  005408  6E13               	movwf	?_pad^0,c
 14575  00540A  501D               	movf	(pad@w+1)^0,w,c
 14576  00540C  2004               	addwfc	(?_strlen+1)^0,w,c
 14577  00540E  6E14               	movwf	(?_pad+1)^0,c
 14578  005410  0012               	return		;funcret
 14579  005412                     __end_of_pad:
 14580                           	opt callstack 0
 14581                           
 14582 ;; *************** function _strlen *****************
 14583 ;; Defined at:
 14584 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  s               2    2[COMRAM] PTR const unsigned char 
 14587 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), tensao_in(4), 
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;  a               2    4[COMRAM] PTR const unsigned char 
 14590 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), tensao_in(4), 
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  2    2[COMRAM] unsigned int 
 14593 ;; Registers used:
 14594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14604 ;;Total ram usage:        4 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    4
 14607 ;; This function calls:
 14608 ;;		Nothing
 14609 ;; This function is called by:
 14610 ;;		_pad
 14611 ;;		_stoa
 14612 ;; This function uses a non-reentrant model
 14613 ;;
 14614                           
 14615                           	psect	text37
 14616  005D20                     __ptext37:
 14617                           	opt callstack 0
 14618  005D20                     _strlen:
 14619                           	opt callstack 20
 14620  005D20  C003  F005         	movff	strlen@s,strlen@a
 14621  005D24  C004  F006         	movff	strlen@s+1,strlen@a+1
 14622  005D28  EF98  F02E         	goto	l7168
 14623  005D2C                     l7166:
 14624  005D2C  4A03               	infsnz	strlen@s^0,f,c
 14625  005D2E  2A04               	incf	(strlen@s+1)^0,f,c
 14626  005D30                     l7168:
 14627  005D30  C003  FFD9         	movff	strlen@s,fsr2l
 14628  005D34  C004  FFDA         	movff	strlen@s+1,fsr2h
 14629  005D38  50DF               	movf	indf2,w,c
 14630  005D3A  A4D8               	btfss	status,2,c
 14631  005D3C  EFA2  F02E         	goto	u8551
 14632  005D40  EFA4  F02E         	goto	u8550
 14633  005D44                     u8551:
 14634  005D44  EF96  F02E         	goto	l7166
 14635  005D48                     u8550:
 14636  005D48  5005               	movf	strlen@a^0,w,c
 14637  005D4A  5C03               	subwf	strlen@s^0,w,c
 14638  005D4C  6E03               	movwf	?_strlen^0,c
 14639  005D4E  5006               	movf	(strlen@a+1)^0,w,c
 14640  005D50  5804               	subwfb	(strlen@s+1)^0,w,c
 14641  005D52  6E04               	movwf	(?_strlen+1)^0,c
 14642  005D54  0012               	return		;funcret
 14643  005D56                     __end_of_strlen:
 14644                           	opt callstack 0
 14645                           
 14646 ;; *************** function _fputs *****************
 14647 ;; Defined at:
 14648 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;  s               2   11[COMRAM] PTR const unsigned char 
 14651 ;;		 -> dbuf(80), 
 14652 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 14653 ;;		 -> vsnprintf@f(6), 
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  i               2   16[COMRAM] int 
 14656 ;;  c               1   15[COMRAM] unsigned char 
 14657 ;; Return value:  Size  Location     Type
 14658 ;;                  2   11[COMRAM] int 
 14659 ;; Registers used:
 14660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14661 ;; Tracked objects:
 14662 ;;		On entry : 0/0
 14663 ;;		On exit  : 0/0
 14664 ;;		Unchanged: 0/0
 14665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14667 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14669 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14670 ;;Total ram usage:        7 bytes
 14671 ;; Hardware stack levels used:    1
 14672 ;; Hardware stack levels required when called:    6
 14673 ;; This function calls:
 14674 ;;		_fputc
 14675 ;; This function is called by:
 14676 ;;		_pad
 14677 ;; This function uses a non-reentrant model
 14678 ;;
 14679                           
 14680                           	psect	text38
 14681  005B04                     __ptext38:
 14682                           	opt callstack 0
 14683  005B04                     _fputs:
 14684                           	opt callstack 18
 14685  005B04  0E00               	movlw	0
 14686  005B06  6E12               	movwf	(fputs@i+1)^0,c
 14687  005B08  0E00               	movlw	0
 14688  005B0A  6E11               	movwf	fputs@i^0,c
 14689  005B0C  EF93  F02D         	goto	l7162
 14690  005B10                     l7158:
 14691  005B10  C010  F003         	movff	fputs@c,fputc@c
 14692  005B14  6A04               	clrf	(fputc@c+1)^0,c
 14693  005B16  C00E  F005         	movff	fputs@fp,fputc@fp
 14694  005B1A  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
 14695  005B1E  EC41  F029         	call	_fputc	;wreg free
 14696  005B22  4A11               	infsnz	fputs@i^0,f,c
 14697  005B24  2A12               	incf	(fputs@i+1)^0,f,c
 14698  005B26                     l7162:
 14699  005B26  5011               	movf	fputs@i^0,w,c
 14700  005B28  240C               	addwf	fputs@s^0,w,c
 14701  005B2A  6ED9               	movwf	fsr2l,c
 14702  005B2C  5012               	movf	(fputs@i+1)^0,w,c
 14703  005B2E  200D               	addwfc	(fputs@s+1)^0,w,c
 14704  005B30  6EDA               	movwf	fsr2h,c
 14705  005B32  50DF               	movf	indf2,w,c
 14706  005B34  6E10               	movwf	fputs@c^0,c
 14707  005B36  5010               	movf	fputs@c^0,w,c
 14708  005B38  A4D8               	btfss	status,2,c
 14709  005B3A  EFA1  F02D         	goto	u8541
 14710  005B3E  EFA3  F02D         	goto	u8540
 14711  005B42                     u8541:
 14712  005B42  EF88  F02D         	goto	l7158
 14713  005B46                     u8540:
 14714  005B46  0012               	return		;funcret
 14715  005B48                     __end_of_fputs:
 14716                           	opt callstack 0
 14717                           
 14718 ;; *************** function _fputc *****************
 14719 ;; Defined at:
 14720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14721 ;; Parameters:    Size  Location     Type
 14722 ;;  c               2    2[COMRAM] int 
 14723 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 14724 ;;		 -> vsnprintf@f(6), 
 14725 ;; Auto vars:     Size  Location     Type
 14726 ;;		None
 14727 ;; Return value:  Size  Location     Type
 14728 ;;                  2    2[COMRAM] int 
 14729 ;; Registers used:
 14730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14731 ;; Tracked objects:
 14732 ;;		On entry : 0/0
 14733 ;;		On exit  : 0/0
 14734 ;;		Unchanged: 0/0
 14735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14738 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14739 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14740 ;;Total ram usage:        9 bytes
 14741 ;; Hardware stack levels used:    1
 14742 ;; Hardware stack levels required when called:    5
 14743 ;; This function calls:
 14744 ;;		_putch
 14745 ;; This function is called by:
 14746 ;;		_pad
 14747 ;;		_stoa
 14748 ;;		_vfpfcnvrt
 14749 ;;		_fputs
 14750 ;; This function uses a non-reentrant model
 14751 ;;
 14752                           
 14753                           	psect	text39
 14754  005282                     __ptext39:
 14755                           	opt callstack 0
 14756  005282                     _fputc:
 14757                           	opt callstack 18
 14758  005282  5005               	movf	fputc@fp^0,w,c
 14759  005284  1006               	iorwf	(fputc@fp+1)^0,w,c
 14760  005286  B4D8               	btfsc	status,2,c
 14761  005288  EF48  F029         	goto	u8501
 14762  00528C  EF4A  F029         	goto	u8500
 14763  005290                     u8501:
 14764  005290  EF53  F029         	goto	l7146
 14765  005294                     u8500:
 14766  005294  5005               	movf	fputc@fp^0,w,c
 14767  005296  1006               	iorwf	(fputc@fp+1)^0,w,c
 14768  005298  A4D8               	btfss	status,2,c
 14769  00529A  EF51  F029         	goto	u8511
 14770  00529E  EF53  F029         	goto	u8510
 14771  0052A2                     u8511:
 14772  0052A2  EF58  F029         	goto	l7148
 14773  0052A6                     u8510:
 14774  0052A6                     l7146:
 14775  0052A6  5003               	movf	fputc@c^0,w,c
 14776  0052A8  EC9B  F02F         	call	_putch
 14777  0052AC  EFA5  F029         	goto	l1580
 14778  0052B0                     l7148:
 14779  0052B0  EE20 F004          	lfsr	2,4
 14780  0052B4  5005               	movf	fputc@fp^0,w,c
 14781  0052B6  26D9               	addwf	fsr2l,f,c
 14782  0052B8  5006               	movf	(fputc@fp+1)^0,w,c
 14783  0052BA  22DA               	addwfc	fsr2h,f,c
 14784  0052BC  50DE               	movf	postinc2,w,c
 14785  0052BE  10DE               	iorwf	postinc2,w,c
 14786  0052C0  B4D8               	btfsc	status,2,c
 14787  0052C2  EF65  F029         	goto	u8521
 14788  0052C6  EF67  F029         	goto	u8520
 14789  0052CA                     u8521:
 14790  0052CA  EF82  F029         	goto	l7152
 14791  0052CE                     u8520:
 14792  0052CE  EE20 F004          	lfsr	2,4
 14793  0052D2  5005               	movf	fputc@fp^0,w,c
 14794  0052D4  26D9               	addwf	fsr2l,f,c
 14795  0052D6  5006               	movf	(fputc@fp+1)^0,w,c
 14796  0052D8  22DA               	addwfc	fsr2h,f,c
 14797  0052DA  EE10 F002          	lfsr	1,2
 14798  0052DE  5005               	movf	fputc@fp^0,w,c
 14799  0052E0  26E1               	addwf	fsr1l,f,c
 14800  0052E2  5006               	movf	(fputc@fp+1)^0,w,c
 14801  0052E4  22E2               	addwfc	fsr1h,f,c
 14802  0052E6  50DE               	movf	postinc2,w,c
 14803  0052E8  5CE6               	subwf	postinc1,w,c
 14804  0052EA  50E6               	movf	postinc1,w,c
 14805  0052EC  0A80               	xorlw	128
 14806  0052EE  6E0B               	movwf	(??_fputc+4)^0,c
 14807  0052F0  50DE               	movf	postinc2,w,c
 14808  0052F2  0A80               	xorlw	128
 14809  0052F4  580B               	subwfb	(??_fputc+4)^0,w,c
 14810  0052F6  B0D8               	btfsc	status,0,c
 14811  0052F8  EF80  F029         	goto	u8531
 14812  0052FC  EF82  F029         	goto	u8530
 14813  005300                     u8531:
 14814  005300  EFA5  F029         	goto	l1580
 14815  005304                     u8530:
 14816  005304                     l7152:
 14817  005304  EE20 F002          	lfsr	2,2
 14818  005308  5005               	movf	fputc@fp^0,w,c
 14819  00530A  26D9               	addwf	fsr2l,f,c
 14820  00530C  5006               	movf	(fputc@fp+1)^0,w,c
 14821  00530E  22DA               	addwfc	fsr2h,f,c
 14822  005310  CFDE F007          	movff	postinc2,??_fputc
 14823  005314  CFDD F008          	movff	postdec2,??_fputc+1
 14824  005318  C005  FFD9         	movff	fputc@fp,fsr2l
 14825  00531C  C006  FFDA         	movff	fputc@fp+1,fsr2h
 14826  005320  CFDE F009          	movff	postinc2,??_fputc+2
 14827  005324  CFDD F00A          	movff	postdec2,??_fputc+3
 14828  005328  5007               	movf	??_fputc^0,w,c
 14829  00532A  2409               	addwf	(??_fputc+2)^0,w,c
 14830  00532C  6ED9               	movwf	fsr2l,c
 14831  00532E  5008               	movf	(??_fputc+1)^0,w,c
 14832  005330  200A               	addwfc	(??_fputc+3)^0,w,c
 14833  005332  6EDA               	movwf	fsr2h,c
 14834  005334  C003  FFDF         	movff	fputc@c,indf2
 14835  005338  EE20 F002          	lfsr	2,2
 14836  00533C  5005               	movf	fputc@fp^0,w,c
 14837  00533E  26D9               	addwf	fsr2l,f,c
 14838  005340  5006               	movf	(fputc@fp+1)^0,w,c
 14839  005342  22DA               	addwfc	fsr2h,f,c
 14840  005344  2ADE               	incf	postinc2,f,c
 14841  005346  0E00               	movlw	0
 14842  005348  22DD               	addwfc	postdec2,f,c
 14843  00534A                     l1580:
 14844  00534A  0012               	return		;funcret
 14845  00534C                     __end_of_fputc:
 14846                           	opt callstack 0
 14847                           
 14848 ;; *************** function _putch *****************
 14849 ;; Defined at:
 14850 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14851 ;; Parameters:    Size  Location     Type
 14852 ;;  c               1    wreg     unsigned char 
 14853 ;; Auto vars:     Size  Location     Type
 14854 ;;  c               1    0[COMRAM] unsigned char 
 14855 ;; Return value:  Size  Location     Type
 14856 ;;                  1    wreg      void 
 14857 ;; Registers used:
 14858 ;;		wreg
 14859 ;; Tracked objects:
 14860 ;;		On entry : 0/0
 14861 ;;		On exit  : 0/0
 14862 ;;		Unchanged: 0/0
 14863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;Total ram usage:        0 bytes
 14869 ;; Hardware stack levels used:    1
 14870 ;; Hardware stack levels required when called:    4
 14871 ;; This function calls:
 14872 ;;		Nothing
 14873 ;; This function is called by:
 14874 ;;		_fputc
 14875 ;; This function uses a non-reentrant model
 14876 ;;
 14877                           
 14878                           	psect	text40
 14879  005F36                     __ptext40:
 14880                           	opt callstack 0
 14881  005F36                     _putch:
 14882                           	opt callstack 18
 14883  005F36  0012               	return		;funcret
 14884  005F38                     __end_of_putch:
 14885                           	opt callstack 0
 14886                           
 14887 ;; *************** function _atoi *****************
 14888 ;; Defined at:
 14889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14890 ;; Parameters:    Size  Location     Type
 14891 ;;  s               2    9[COMRAM] PTR const unsigned char 
 14892 ;;		 -> STR_4(22), STR_3(16), STR_2(17), 
 14893 ;; Auto vars:     Size  Location     Type
 14894 ;;  n               2   22[COMRAM] int 
 14895 ;;  neg             2   15[COMRAM] int 
 14896 ;; Return value:  Size  Location     Type
 14897 ;;                  2    9[COMRAM] int 
 14898 ;; Registers used:
 14899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14906 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14908 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14909 ;;Total ram usage:       15 bytes
 14910 ;; Hardware stack levels used:    1
 14911 ;; Hardware stack levels required when called:    5
 14912 ;; This function calls:
 14913 ;;		___wmul
 14914 ;;		_isdigit
 14915 ;;		_isspace
 14916 ;; This function is called by:
 14917 ;;		_vfpfcnvrt
 14918 ;; This function uses a non-reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text41
 14922  0042A6                     __ptext41:
 14923                           	opt callstack 0
 14924  0042A6                     _atoi:
 14925                           	opt callstack 21
 14926  0042A6  0E00               	movlw	0
 14927  0042A8  6E18               	movwf	(atoi@n+1)^0,c
 14928  0042AA  0E00               	movlw	0
 14929  0042AC  6E17               	movwf	atoi@n^0,c
 14930  0042AE  0E00               	movlw	0
 14931  0042B0  6E11               	movwf	(atoi@neg+1)^0,c
 14932  0042B2  0E00               	movlw	0
 14933  0042B4  6E10               	movwf	atoi@neg^0,c
 14934  0042B6  EF5F  F021         	goto	l8642
 14935  0042BA                     l8640:
 14936  0042BA  4A0A               	infsnz	atoi@s^0,f,c
 14937  0042BC  2A0B               	incf	(atoi@s+1)^0,f,c
 14938  0042BE                     l8642:
 14939  0042BE  0E01               	movlw	1
 14940  0042C0  6E16               	movwf	_atoi$1978^0,c
 14941  0042C2  C00A  FFF6         	movff	atoi@s,tblptrl
 14942  0042C6  C00B  FFF7         	movff	atoi@s+1,tblptrh
 14943  0042CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14944  0042CA  6AF8               	clrf	tblptru,c
 14945  0042CC                     	endif
 14946  0042CC                     	if	0	;tblptru may be non-zero
 14947  0042CC                     	endif
 14948  0042CC  0008               	tblrd		*
 14949  0042CE  50F5               	movf	tablat,w,c
 14950  0042D0  0A20               	xorlw	32
 14951  0042D2  B4D8               	btfsc	status,2,c
 14952  0042D4  EF6E  F021         	goto	u11361
 14953  0042D8  EF70  F021         	goto	u11360
 14954  0042DC                     u11361:
 14955  0042DC  EF8E  F021         	goto	l8650
 14956  0042E0                     u11360:
 14957  0042E0  0EF7               	movlw	247
 14958  0042E2  6E0C               	movwf	??_atoi^0,c
 14959  0042E4  0EFF               	movlw	255
 14960  0042E6  6E0D               	movwf	(??_atoi+1)^0,c
 14961  0042E8  C00A  FFF6         	movff	atoi@s,tblptrl
 14962  0042EC  C00B  FFF7         	movff	atoi@s+1,tblptrh
 14963  0042F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14964  0042F0  6AF8               	clrf	tblptru,c
 14965  0042F2                     	endif
 14966  0042F2                     	if	0	;tblptru may be non-zero
 14967  0042F2                     	endif
 14968  0042F2  0008               	tblrd		*
 14969  0042F4  50F5               	movf	tablat,w,c
 14970  0042F6  6E0E               	movwf	(??_atoi+2)^0,c
 14971  0042F8  6A0F               	clrf	(??_atoi+3)^0,c
 14972  0042FA  500C               	movf	??_atoi^0,w,c
 14973  0042FC  260E               	addwf	(??_atoi+2)^0,f,c
 14974  0042FE  500D               	movf	(??_atoi+1)^0,w,c
 14975  004300  220F               	addwfc	(??_atoi+3)^0,f,c
 14976  004302  500F               	movf	(??_atoi+3)^0,w,c
 14977  004304  E109               	bnz	u11370
 14978  004306  0E05               	movlw	5
 14979  004308  5C0E               	subwf	(??_atoi+2)^0,w,c
 14980  00430A  A0D8               	btfss	status,0,c
 14981  00430C  EF8A  F021         	goto	u11371
 14982  004310  EF8C  F021         	goto	u11370
 14983  004314                     u11371:
 14984  004314  EF8E  F021         	goto	l8650
 14985  004318                     u11370:
 14986  004318  0E00               	movlw	0
 14987  00431A  6E16               	movwf	_atoi$1978^0,c
 14988  00431C                     l8650:
 14989  00431C  C016  F012         	movff	_atoi$1978,_atoi$1977
 14990  004320  6A13               	clrf	(_atoi$1977+1)^0,c
 14991  004322  5012               	movf	_atoi$1977^0,w,c
 14992  004324  1013               	iorwf	(_atoi$1977+1)^0,w,c
 14993  004326  A4D8               	btfss	status,2,c
 14994  004328  EF98  F021         	goto	u11381
 14995  00432C  EF9A  F021         	goto	u11380
 14996  004330                     u11381:
 14997  004330  EF5D  F021         	goto	l8640
 14998  004334                     u11380:
 14999  004334  EFA4  F021         	goto	l8660
 15000  004338                     l8656:
 15001  004338  0E00               	movlw	0
 15002  00433A  6E11               	movwf	(atoi@neg+1)^0,c
 15003  00433C  0E01               	movlw	1
 15004  00433E  6E10               	movwf	atoi@neg^0,c
 15005  004340                     l8658:
 15006  004340  4A0A               	infsnz	atoi@s^0,f,c
 15007  004342  2A0B               	incf	(atoi@s+1)^0,f,c
 15008  004344  EFDB  F021         	goto	l8666
 15009  004348                     l8660:
 15010  004348  C00A  FFF6         	movff	atoi@s,tblptrl
 15011  00434C  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15012  004350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15013  004350  6AF8               	clrf	tblptru,c
 15014  004352                     	endif
 15015  004352                     	if	0	;tblptru may be non-zero
 15016  004352                     	endif
 15017  004352  0008               	tblrd		*
 15018  004354  50F5               	movf	tablat,w,c
 15019  004356  6E0C               	movwf	??_atoi^0,c
 15020  004358  6A0D               	clrf	(??_atoi+1)^0,c
 15021                           
 15022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15023                           ; Switch size 1, requested type "simple"
 15024                           ; Number of cases is 1, Range of values is 0 to 0
 15025                           ; switch strategies available:
 15026                           ; Name         Instructions Cycles
 15027                           ; simple_byte            4     3 (average)
 15028                           ;	Chosen strategy is simple_byte
 15029  00435A  500D               	movf	(??_atoi+1)^0,w,c
 15030  00435C  0A00               	xorlw	0	; case 0
 15031  00435E  B4D8               	btfsc	status,2,c
 15032  004360  EFB4  F021         	goto	l9218
 15033  004364  EFDB  F021         	goto	l8666
 15034  004368                     l9218:
 15035                           
 15036                           ; Switch size 1, requested type "simple"
 15037                           ; Number of cases is 2, Range of values is 43 to 45
 15038                           ; switch strategies available:
 15039                           ; Name         Instructions Cycles
 15040                           ; simple_byte            7     4 (average)
 15041                           ;	Chosen strategy is simple_byte
 15042  004368  500C               	movf	??_atoi^0,w,c
 15043  00436A  0A2B               	xorlw	43	; case 43
 15044  00436C  B4D8               	btfsc	status,2,c
 15045  00436E  EFA0  F021         	goto	l8658
 15046  004372  0A06               	xorlw	6	; case 45
 15047  004374  B4D8               	btfsc	status,2,c
 15048  004376  EF9C  F021         	goto	l8656
 15049  00437A  EFDB  F021         	goto	l8666
 15050  00437E                     l8662:
 15051  00437E  C017  F003         	movff	atoi@n,___wmul@multiplier
 15052  004382  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
 15053  004386  0E00               	movlw	0
 15054  004388  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 15055  00438A  0E0A               	movlw	10
 15056  00438C  6E05               	movwf	___wmul@multiplicand^0,c
 15057  00438E  EC23  F02F         	call	___wmul	;wreg free
 15058  004392  C00A  FFF6         	movff	atoi@s,tblptrl
 15059  004396  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15060  00439A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15061  00439A  6AF8               	clrf	tblptru,c
 15062  00439C                     	endif
 15063  00439C                     	if	0	;tblptru may be non-zero
 15064  00439C                     	endif
 15065  00439C  0008               	tblrd		*
 15066  00439E  50F5               	movf	tablat,w,c
 15067  0043A0  5E03               	subwf	?___wmul^0,f,c
 15068  0043A2  0E00               	movlw	0
 15069  0043A4  5A04               	subwfb	(?___wmul+1)^0,f,c
 15070  0043A6  0E30               	movlw	48
 15071  0043A8  2403               	addwf	?___wmul^0,w,c
 15072  0043AA  6E17               	movwf	atoi@n^0,c
 15073  0043AC  0E00               	movlw	0
 15074  0043AE  2004               	addwfc	(?___wmul+1)^0,w,c
 15075  0043B0  6E18               	movwf	(atoi@n+1)^0,c
 15076  0043B2  EFA0  F021         	goto	l8658
 15077  0043B6                     l8666:
 15078  0043B6  0ED0               	movlw	208
 15079  0043B8  6E0C               	movwf	??_atoi^0,c
 15080  0043BA  0EFF               	movlw	255
 15081  0043BC  6E0D               	movwf	(??_atoi+1)^0,c
 15082  0043BE  C00A  FFF6         	movff	atoi@s,tblptrl
 15083  0043C2  C00B  FFF7         	movff	atoi@s+1,tblptrh
 15084  0043C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15085  0043C6  6AF8               	clrf	tblptru,c
 15086  0043C8                     	endif
 15087  0043C8                     	if	0	;tblptru may be non-zero
 15088  0043C8                     	endif
 15089  0043C8  0008               	tblrd		*
 15090  0043CA  50F5               	movf	tablat,w,c
 15091  0043CC  6E0E               	movwf	(??_atoi+2)^0,c
 15092  0043CE  6A0F               	clrf	(??_atoi+3)^0,c
 15093  0043D0  500C               	movf	??_atoi^0,w,c
 15094  0043D2  260E               	addwf	(??_atoi+2)^0,f,c
 15095  0043D4  500D               	movf	(??_atoi+1)^0,w,c
 15096  0043D6  220F               	addwfc	(??_atoi+3)^0,f,c
 15097  0043D8  500F               	movf	(??_atoi+3)^0,w,c
 15098  0043DA  E10A               	bnz	u11390
 15099  0043DC  0E0A               	movlw	10
 15100  0043DE  5C0E               	subwf	(??_atoi+2)^0,w,c
 15101  0043E0  A0D8               	btfss	status,0,c
 15102  0043E2  EFF5  F021         	goto	u11391
 15103  0043E6  EFF8  F021         	goto	u11390
 15104  0043EA                     u11391:
 15105  0043EA  0E01               	movlw	1
 15106  0043EC  EFF9  F021         	goto	u11400
 15107  0043F0                     u11390:
 15108  0043F0  0E00               	movlw	0
 15109  0043F2                     u11400:
 15110  0043F2  6E14               	movwf	_atoi$1979^0,c
 15111  0043F4  6A15               	clrf	(_atoi$1979+1)^0,c
 15112  0043F6  5014               	movf	_atoi$1979^0,w,c
 15113  0043F8  1015               	iorwf	(_atoi$1979+1)^0,w,c
 15114  0043FA  A4D8               	btfss	status,2,c
 15115  0043FC  EF02  F022         	goto	u11411
 15116  004400  EF04  F022         	goto	u11410
 15117  004404                     u11411:
 15118  004404  EFBF  F021         	goto	l8662
 15119  004408                     u11410:
 15120  004408  5010               	movf	atoi@neg^0,w,c
 15121  00440A  1011               	iorwf	(atoi@neg+1)^0,w,c
 15122  00440C  A4D8               	btfss	status,2,c
 15123  00440E  EF0B  F022         	goto	u11421
 15124  004412  EF0D  F022         	goto	u11420
 15125  004416                     u11421:
 15126  004416  EF1B  F022         	goto	l1526
 15127  00441A                     u11420:
 15128  00441A  C017  F00C         	movff	atoi@n,??_atoi
 15129  00441E  C018  F00D         	movff	atoi@n+1,??_atoi+1
 15130  004422  1E0C               	comf	??_atoi^0,f,c
 15131  004424  1E0D               	comf	(??_atoi+1)^0,f,c
 15132  004426  4A0C               	infsnz	??_atoi^0,f,c
 15133  004428  2A0D               	incf	(??_atoi+1)^0,f,c
 15134  00442A  C00C  F00A         	movff	??_atoi,?_atoi
 15135  00442E  C00D  F00B         	movff	??_atoi+1,?_atoi+1
 15136  004432  EF1F  F022         	goto	l1529
 15137  004436                     l1526:
 15138  004436  C017  F00A         	movff	atoi@n,?_atoi
 15139  00443A  C018  F00B         	movff	atoi@n+1,?_atoi+1
 15140  00443E                     l1529:
 15141  00443E  0012               	return		;funcret
 15142  004440                     __end_of_atoi:
 15143                           	opt callstack 0
 15144                           
 15145 ;; *************** function _isspace *****************
 15146 ;; Defined at:
 15147 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15148 ;; Parameters:    Size  Location     Type
 15149 ;;  c               2    2[COMRAM] int 
 15150 ;; Auto vars:     Size  Location     Type
 15151 ;;		None
 15152 ;; Return value:  Size  Location     Type
 15153 ;;                  2    2[COMRAM] int 
 15154 ;; Registers used:
 15155 ;;		wreg, status,2, status,0
 15156 ;; Tracked objects:
 15157 ;;		On entry : 0/0
 15158 ;;		On exit  : 0/0
 15159 ;;		Unchanged: 0/0
 15160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15164 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15165 ;;Total ram usage:        7 bytes
 15166 ;; Hardware stack levels used:    1
 15167 ;; Hardware stack levels required when called:    4
 15168 ;; This function calls:
 15169 ;;		Nothing
 15170 ;; This function is called by:
 15171 ;;		_atoi
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text42
 15176  005946                     __ptext42:
 15177                           	opt callstack 0
 15178  005946                     _isspace:
 15179                           	opt callstack 21
 15180  005946  0E01               	movlw	1
 15181  005948  6E09               	movwf	_isspace$2017^0,c
 15182  00594A  0E20               	movlw	32
 15183  00594C  1803               	xorwf	isspace@c^0,w,c
 15184  00594E  1004               	iorwf	(isspace@c+1)^0,w,c
 15185  005950  B4D8               	btfsc	status,2,c
 15186  005952  EFAD  F02C         	goto	u10231
 15187  005956  EFAF  F02C         	goto	u10230
 15188  00595A                     u10231:
 15189  00595A  EFC8  F02C         	goto	l8068
 15190  00595E                     u10230:
 15191  00595E  0EF7               	movlw	247
 15192  005960  6E05               	movwf	??_isspace^0,c
 15193  005962  0EFF               	movlw	255
 15194  005964  6E06               	movwf	(??_isspace+1)^0,c
 15195  005966  C003  F007         	movff	isspace@c,??_isspace+2
 15196  00596A  C004  F008         	movff	isspace@c+1,??_isspace+3
 15197  00596E  5005               	movf	??_isspace^0,w,c
 15198  005970  2607               	addwf	(??_isspace+2)^0,f,c
 15199  005972  5006               	movf	(??_isspace+1)^0,w,c
 15200  005974  2208               	addwfc	(??_isspace+3)^0,f,c
 15201  005976  5008               	movf	(??_isspace+3)^0,w,c
 15202  005978  E109               	bnz	u10240
 15203  00597A  0E05               	movlw	5
 15204  00597C  5C07               	subwf	(??_isspace+2)^0,w,c
 15205  00597E  A0D8               	btfss	status,0,c
 15206  005980  EFC4  F02C         	goto	u10241
 15207  005984  EFC6  F02C         	goto	u10240
 15208  005988                     u10241:
 15209  005988  EFC8  F02C         	goto	l8068
 15210  00598C                     u10240:
 15211  00598C  0E00               	movlw	0
 15212  00598E  6E09               	movwf	_isspace$2017^0,c
 15213  005990                     l8068:
 15214  005990  C009  F003         	movff	_isspace$2017,?_isspace
 15215  005994  6A04               	clrf	(?_isspace+1)^0,c
 15216  005996  0012               	return		;funcret
 15217  005998                     __end_of_isspace:
 15218                           	opt callstack 0
 15219                           
 15220 ;; *************** function _isdigit *****************
 15221 ;; Defined at:
 15222 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15223 ;; Parameters:    Size  Location     Type
 15224 ;;  c               2    2[COMRAM] int 
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;		None
 15227 ;; Return value:  Size  Location     Type
 15228 ;;                  2    2[COMRAM] int 
 15229 ;; Registers used:
 15230 ;;		wreg, status,2, status,0
 15231 ;; Tracked objects:
 15232 ;;		On entry : 0/0
 15233 ;;		On exit  : 0/0
 15234 ;;		Unchanged: 0/0
 15235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15238 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15239 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15240 ;;Total ram usage:        6 bytes
 15241 ;; Hardware stack levels used:    1
 15242 ;; Hardware stack levels required when called:    4
 15243 ;; This function calls:
 15244 ;;		Nothing
 15245 ;; This function is called by:
 15246 ;;		_vfpfcnvrt
 15247 ;;		_atoi
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           
 15251                           	psect	text43
 15252  005CE8                     __ptext43:
 15253                           	opt callstack 0
 15254  005CE8                     _isdigit:
 15255                           	opt callstack 22
 15256  005CE8  0ED0               	movlw	208
 15257  005CEA  6E05               	movwf	??_isdigit^0,c
 15258  005CEC  0EFF               	movlw	255
 15259  005CEE  6E06               	movwf	(??_isdigit+1)^0,c
 15260  005CF0  C003  F007         	movff	isdigit@c,??_isdigit+2
 15261  005CF4  C004  F008         	movff	isdigit@c+1,??_isdigit+3
 15262  005CF8  5005               	movf	??_isdigit^0,w,c
 15263  005CFA  2607               	addwf	(??_isdigit+2)^0,f,c
 15264  005CFC  5006               	movf	(??_isdigit+1)^0,w,c
 15265  005CFE  2208               	addwfc	(??_isdigit+3)^0,f,c
 15266  005D00  5008               	movf	(??_isdigit+3)^0,w,c
 15267  005D02  E10A               	bnz	u9310
 15268  005D04  0E0A               	movlw	10
 15269  005D06  5C07               	subwf	(??_isdigit+2)^0,w,c
 15270  005D08  A0D8               	btfss	status,0,c
 15271  005D0A  EF89  F02E         	goto	u9311
 15272  005D0E  EF8C  F02E         	goto	u9310
 15273  005D12                     u9311:
 15274  005D12  0E01               	movlw	1
 15275  005D14  EF8D  F02E         	goto	u9320
 15276  005D18                     u9310:
 15277  005D18  0E00               	movlw	0
 15278  005D1A                     u9320:
 15279  005D1A  6E03               	movwf	?_isdigit^0,c
 15280  005D1C  6A04               	clrf	(?_isdigit+1)^0,c
 15281  005D1E  0012               	return		;funcret
 15282  005D20                     __end_of_isdigit:
 15283                           	opt callstack 0
 15284                           
 15285 ;; *************** function ___wmul *****************
 15286 ;; Defined at:
 15287 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;  multiplier      2    2[COMRAM] unsigned int 
 15290 ;;  multiplicand    2    4[COMRAM] unsigned int 
 15291 ;; Auto vars:     Size  Location     Type
 15292 ;;  product         2    6[COMRAM] unsigned int 
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  2    2[COMRAM] unsigned int 
 15295 ;; Registers used:
 15296 ;;		wreg, status,2, status,0, prodl, prodh
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15306 ;;Total ram usage:        6 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:    4
 15309 ;; This function calls:
 15310 ;;		Nothing
 15311 ;; This function is called by:
 15312 ;;		_atoi
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text44
 15317  005E46                     __ptext44:
 15318                           	opt callstack 0
 15319  005E46                     ___wmul:
 15320                           	opt callstack 21
 15321  005E46  5003               	movf	___wmul@multiplier^0,w,c
 15322  005E48  0205               	mulwf	___wmul@multiplicand^0,c
 15323  005E4A  CFF3 F007          	movff	prodl,___wmul@product
 15324  005E4E  CFF4 F008          	movff	prodh,___wmul@product+1
 15325  005E52  5003               	movf	___wmul@multiplier^0,w,c
 15326  005E54  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 15327  005E56  50F3               	movf	243,w,c
 15328  005E58  2608               	addwf	(___wmul@product+1)^0,f,c
 15329  005E5A  5004               	movf	(___wmul@multiplier+1)^0,w,c
 15330  005E5C  0205               	mulwf	___wmul@multiplicand^0,c
 15331  005E5E  50F3               	movf	243,w,c
 15332  005E60  2608               	addwf	(___wmul@product+1)^0,f,c
 15333  005E62  C007  F003         	movff	___wmul@product,?___wmul
 15334  005E66  C008  F004         	movff	___wmul@product+1,?___wmul+1
 15335  005E6A  0012               	return		;funcret
 15336  005E6C                     __end_of___wmul:
 15337                           	opt callstack 0
 15338                           
 15339 ;; *************** function _lcd_init *****************
 15340 ;; Defined at:
 15341 ;;		line 34 in file "lib_ili9341.c"
 15342 ;; Parameters:    Size  Location     Type
 15343 ;;		None
 15344 ;; Auto vars:     Size  Location     Type
 15345 ;;		None
 15346 ;; Return value:  Size  Location     Type
 15347 ;;                  1    wreg      void 
 15348 ;; Registers used:
 15349 ;;		wreg, status,2, status,0, cstack
 15350 ;; Tracked objects:
 15351 ;;		On entry : 0/0
 15352 ;;		On exit  : 0/0
 15353 ;;		Unchanged: 0/0
 15354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15359 ;;Total ram usage:        0 bytes
 15360 ;; Hardware stack levels used:    1
 15361 ;; Hardware stack levels required when called:    9
 15362 ;; This function calls:
 15363 ;;		_lcd_fill
 15364 ;;		_lcd_send
 15365 ;;		_msDelay
 15366 ;; This function is called by:
 15367 ;;		_main
 15368 ;; This function uses a non-reentrant model
 15369 ;;
 15370                           
 15371                           	psect	text45
 15372  0031A0                     __ptext45:
 15373                           	opt callstack 0
 15374  0031A0                     _lcd_init:
 15375                           	opt callstack 21
 15376  0031A0                     
 15377                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 15378  0031A0  0E01               	movlw	1
 15379  0031A2  6E04               	movwf	lcd_send@value^0,c
 15380  0031A4  0E00               	movlw	0
 15381  0031A6  EC50  F02F         	call	_lcd_send
 15382  0031AA                     
 15383                           ;lib_ili9341.c: 38:     msDelay(150);
 15384  0031AA  0E96               	movlw	150
 15385  0031AC  ECDF  F02E         	call	_msDelay
 15386  0031B0                     
 15387                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 15388  0031B0  0EEF               	movlw	239
 15389  0031B2  6E04               	movwf	lcd_send@value^0,c
 15390  0031B4  0E00               	movlw	0
 15391  0031B6  EC50  F02F         	call	_lcd_send
 15392  0031BA                     
 15393                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 15394  0031BA  0E03               	movlw	3
 15395  0031BC  6E04               	movwf	lcd_send@value^0,c
 15396  0031BE  0E01               	movlw	1
 15397  0031C0  EC50  F02F         	call	_lcd_send
 15398  0031C4                     
 15399                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 15400  0031C4  0E80               	movlw	128
 15401  0031C6  6E04               	movwf	lcd_send@value^0,c
 15402  0031C8  0E01               	movlw	1
 15403  0031CA  EC50  F02F         	call	_lcd_send
 15404  0031CE                     
 15405                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 15406  0031CE  0E02               	movlw	2
 15407  0031D0  6E04               	movwf	lcd_send@value^0,c
 15408  0031D2  0E01               	movlw	1
 15409  0031D4  EC50  F02F         	call	_lcd_send
 15410  0031D8                     
 15411                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 15412  0031D8  0ECF               	movlw	207
 15413  0031DA  6E04               	movwf	lcd_send@value^0,c
 15414  0031DC  0E00               	movlw	0
 15415  0031DE  EC50  F02F         	call	_lcd_send
 15416  0031E2                     
 15417                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 15418  0031E2  0E00               	movlw	0
 15419  0031E4  6E04               	movwf	lcd_send@value^0,c
 15420  0031E6  0E01               	movlw	1
 15421  0031E8  EC50  F02F         	call	_lcd_send
 15422  0031EC                     
 15423                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 15424  0031EC  0EC1               	movlw	193
 15425  0031EE  6E04               	movwf	lcd_send@value^0,c
 15426  0031F0  0E01               	movlw	1
 15427  0031F2  EC50  F02F         	call	_lcd_send
 15428  0031F6                     
 15429                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 15430  0031F6  0E30               	movlw	48
 15431  0031F8  6E04               	movwf	lcd_send@value^0,c
 15432  0031FA  0E01               	movlw	1
 15433  0031FC  EC50  F02F         	call	_lcd_send
 15434  003200                     
 15435                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 15436  003200  0EED               	movlw	237
 15437  003202  6E04               	movwf	lcd_send@value^0,c
 15438  003204  0E00               	movlw	0
 15439  003206  EC50  F02F         	call	_lcd_send
 15440  00320A                     
 15441                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 15442  00320A  0E64               	movlw	100
 15443  00320C  6E04               	movwf	lcd_send@value^0,c
 15444  00320E  0E01               	movlw	1
 15445  003210  EC50  F02F         	call	_lcd_send
 15446  003214                     
 15447                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 15448  003214  0E03               	movlw	3
 15449  003216  6E04               	movwf	lcd_send@value^0,c
 15450  003218  0E01               	movlw	1
 15451  00321A  EC50  F02F         	call	_lcd_send
 15452  00321E                     
 15453                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 15454  00321E  0E12               	movlw	18
 15455  003220  6E04               	movwf	lcd_send@value^0,c
 15456  003222  0E01               	movlw	1
 15457  003224  EC50  F02F         	call	_lcd_send
 15458  003228                     
 15459                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 15460  003228  0E81               	movlw	129
 15461  00322A  6E04               	movwf	lcd_send@value^0,c
 15462  00322C  0E01               	movlw	1
 15463  00322E  EC50  F02F         	call	_lcd_send
 15464  003232                     
 15465                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 15466  003232  0EE8               	movlw	232
 15467  003234  6E04               	movwf	lcd_send@value^0,c
 15468  003236  0E00               	movlw	0
 15469  003238  EC50  F02F         	call	_lcd_send
 15470  00323C                     
 15471                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 15472  00323C  0E85               	movlw	133
 15473  00323E  6E04               	movwf	lcd_send@value^0,c
 15474  003240  0E01               	movlw	1
 15475  003242  EC50  F02F         	call	_lcd_send
 15476  003246                     
 15477                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 15478  003246  0E00               	movlw	0
 15479  003248  6E04               	movwf	lcd_send@value^0,c
 15480  00324A  0E01               	movlw	1
 15481  00324C  EC50  F02F         	call	_lcd_send
 15482  003250                     
 15483                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 15484  003250  0E78               	movlw	120
 15485  003252  6E04               	movwf	lcd_send@value^0,c
 15486  003254  0E01               	movlw	1
 15487  003256  EC50  F02F         	call	_lcd_send
 15488  00325A                     
 15489                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 15490  00325A  0ECB               	movlw	203
 15491  00325C  6E04               	movwf	lcd_send@value^0,c
 15492  00325E  0E00               	movlw	0
 15493  003260  EC50  F02F         	call	_lcd_send
 15494  003264                     
 15495                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 15496  003264  0E39               	movlw	57
 15497  003266  6E04               	movwf	lcd_send@value^0,c
 15498  003268  0E01               	movlw	1
 15499  00326A  EC50  F02F         	call	_lcd_send
 15500  00326E                     
 15501                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 15502  00326E  0E2C               	movlw	44
 15503  003270  6E04               	movwf	lcd_send@value^0,c
 15504  003272  0E01               	movlw	1
 15505  003274  EC50  F02F         	call	_lcd_send
 15506  003278                     
 15507                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 15508  003278  0E00               	movlw	0
 15509  00327A  6E04               	movwf	lcd_send@value^0,c
 15510  00327C  0E01               	movlw	1
 15511  00327E  EC50  F02F         	call	_lcd_send
 15512  003282                     
 15513                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 15514  003282  0E34               	movlw	52
 15515  003284  6E04               	movwf	lcd_send@value^0,c
 15516  003286  0E01               	movlw	1
 15517  003288  EC50  F02F         	call	_lcd_send
 15518  00328C                     
 15519                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 15520  00328C  0E02               	movlw	2
 15521  00328E  6E04               	movwf	lcd_send@value^0,c
 15522  003290  0E01               	movlw	1
 15523  003292  EC50  F02F         	call	_lcd_send
 15524  003296                     
 15525                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 15526  003296  0EF7               	movlw	247
 15527  003298  6E04               	movwf	lcd_send@value^0,c
 15528  00329A  0E00               	movlw	0
 15529  00329C  EC50  F02F         	call	_lcd_send
 15530  0032A0                     
 15531                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 15532  0032A0  0E20               	movlw	32
 15533  0032A2  6E04               	movwf	lcd_send@value^0,c
 15534  0032A4  0E01               	movlw	1
 15535  0032A6  EC50  F02F         	call	_lcd_send
 15536  0032AA                     
 15537                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 15538  0032AA  0EEA               	movlw	234
 15539  0032AC  6E04               	movwf	lcd_send@value^0,c
 15540  0032AE  0E00               	movlw	0
 15541  0032B0  EC50  F02F         	call	_lcd_send
 15542  0032B4                     
 15543                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 15544  0032B4  0E00               	movlw	0
 15545  0032B6  6E04               	movwf	lcd_send@value^0,c
 15546  0032B8  0E01               	movlw	1
 15547  0032BA  EC50  F02F         	call	_lcd_send
 15548  0032BE                     
 15549                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 15550  0032BE  0E00               	movlw	0
 15551  0032C0  6E04               	movwf	lcd_send@value^0,c
 15552  0032C2  0E01               	movlw	1
 15553  0032C4  EC50  F02F         	call	_lcd_send
 15554  0032C8                     
 15555                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 15556  0032C8  0EC0               	movlw	192
 15557  0032CA  6E04               	movwf	lcd_send@value^0,c
 15558  0032CC  0E00               	movlw	0
 15559  0032CE  EC50  F02F         	call	_lcd_send
 15560  0032D2                     
 15561                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 15562  0032D2  0E23               	movlw	35
 15563  0032D4  6E04               	movwf	lcd_send@value^0,c
 15564  0032D6  0E01               	movlw	1
 15565  0032D8  EC50  F02F         	call	_lcd_send
 15566  0032DC                     
 15567                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 15568  0032DC  0EC1               	movlw	193
 15569  0032DE  6E04               	movwf	lcd_send@value^0,c
 15570  0032E0  0E00               	movlw	0
 15571  0032E2  EC50  F02F         	call	_lcd_send
 15572  0032E6                     
 15573                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 15574  0032E6  0E10               	movlw	16
 15575  0032E8  6E04               	movwf	lcd_send@value^0,c
 15576  0032EA  0E01               	movlw	1
 15577  0032EC  EC50  F02F         	call	_lcd_send
 15578  0032F0                     
 15579                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 15580  0032F0  0EC5               	movlw	197
 15581  0032F2  6E04               	movwf	lcd_send@value^0,c
 15582  0032F4  0E00               	movlw	0
 15583  0032F6  EC50  F02F         	call	_lcd_send
 15584  0032FA                     
 15585                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 15586  0032FA  0E3E               	movlw	62
 15587  0032FC  6E04               	movwf	lcd_send@value^0,c
 15588  0032FE  0E01               	movlw	1
 15589  003300  EC50  F02F         	call	_lcd_send
 15590  003304                     
 15591                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 15592  003304  0E28               	movlw	40
 15593  003306  6E04               	movwf	lcd_send@value^0,c
 15594  003308  0E01               	movlw	1
 15595  00330A  EC50  F02F         	call	_lcd_send
 15596  00330E                     
 15597                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 15598  00330E  0EC7               	movlw	199
 15599  003310  6E04               	movwf	lcd_send@value^0,c
 15600  003312  0E00               	movlw	0
 15601  003314  EC50  F02F         	call	_lcd_send
 15602  003318                     
 15603                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 15604  003318  0E86               	movlw	134
 15605  00331A  6E04               	movwf	lcd_send@value^0,c
 15606  00331C  0E01               	movlw	1
 15607  00331E  EC50  F02F         	call	_lcd_send
 15608  003322                     
 15609                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 15610  003322  0E36               	movlw	54
 15611  003324  6E04               	movwf	lcd_send@value^0,c
 15612  003326  0E00               	movlw	0
 15613  003328  EC50  F02F         	call	_lcd_send
 15614  00332C                     
 15615                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 15616  00332C  0E48               	movlw	72
 15617  00332E  6E04               	movwf	lcd_send@value^0,c
 15618  003330  0E01               	movlw	1
 15619  003332  EC50  F02F         	call	_lcd_send
 15620  003336                     
 15621                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 15622  003336  0E3A               	movlw	58
 15623  003338  6E04               	movwf	lcd_send@value^0,c
 15624  00333A  0E00               	movlw	0
 15625  00333C  EC50  F02F         	call	_lcd_send
 15626  003340                     
 15627                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 15628  003340  0E55               	movlw	85
 15629  003342  6E04               	movwf	lcd_send@value^0,c
 15630  003344  0E01               	movlw	1
 15631  003346  EC50  F02F         	call	_lcd_send
 15632  00334A                     
 15633                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 15634  00334A  0EB1               	movlw	177
 15635  00334C  6E04               	movwf	lcd_send@value^0,c
 15636  00334E  0E00               	movlw	0
 15637  003350  EC50  F02F         	call	_lcd_send
 15638  003354                     
 15639                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 15640  003354  0E00               	movlw	0
 15641  003356  6E04               	movwf	lcd_send@value^0,c
 15642  003358  0E01               	movlw	1
 15643  00335A  EC50  F02F         	call	_lcd_send
 15644  00335E                     
 15645                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 15646  00335E  0E18               	movlw	24
 15647  003360  6E04               	movwf	lcd_send@value^0,c
 15648  003362  0E01               	movlw	1
 15649  003364  EC50  F02F         	call	_lcd_send
 15650  003368                     
 15651                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 15652  003368  0EB6               	movlw	182
 15653  00336A  6E04               	movwf	lcd_send@value^0,c
 15654  00336C  0E00               	movlw	0
 15655  00336E  EC50  F02F         	call	_lcd_send
 15656  003372                     
 15657                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 15658  003372  0E08               	movlw	8
 15659  003374  6E04               	movwf	lcd_send@value^0,c
 15660  003376  0E01               	movlw	1
 15661  003378  EC50  F02F         	call	_lcd_send
 15662  00337C                     
 15663                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 15664  00337C  0E82               	movlw	130
 15665  00337E  6E04               	movwf	lcd_send@value^0,c
 15666  003380  0E01               	movlw	1
 15667  003382  EC50  F02F         	call	_lcd_send
 15668  003386                     
 15669                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 15670  003386  0E27               	movlw	39
 15671  003388  6E04               	movwf	lcd_send@value^0,c
 15672  00338A  0E01               	movlw	1
 15673  00338C  EC50  F02F         	call	_lcd_send
 15674  003390                     
 15675                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 15676  003390  0EF2               	movlw	242
 15677  003392  6E04               	movwf	lcd_send@value^0,c
 15678  003394  0E00               	movlw	0
 15679  003396  EC50  F02F         	call	_lcd_send
 15680  00339A                     
 15681                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 15682  00339A  0E00               	movlw	0
 15683  00339C  6E04               	movwf	lcd_send@value^0,c
 15684  00339E  0E01               	movlw	1
 15685  0033A0  EC50  F02F         	call	_lcd_send
 15686  0033A4                     
 15687                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 15688  0033A4  0E26               	movlw	38
 15689  0033A6  6E04               	movwf	lcd_send@value^0,c
 15690  0033A8  0E00               	movlw	0
 15691  0033AA  EC50  F02F         	call	_lcd_send
 15692  0033AE                     
 15693                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 15694  0033AE  0E01               	movlw	1
 15695  0033B0  6E04               	movwf	lcd_send@value^0,c
 15696  0033B2  0E01               	movlw	1
 15697  0033B4  EC50  F02F         	call	_lcd_send
 15698  0033B8                     
 15699                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 15700  0033B8  0EE0               	movlw	224
 15701  0033BA  6E04               	movwf	lcd_send@value^0,c
 15702  0033BC  0E00               	movlw	0
 15703  0033BE  EC50  F02F         	call	_lcd_send
 15704  0033C2                     
 15705                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 15706  0033C2  0E0F               	movlw	15
 15707  0033C4  6E04               	movwf	lcd_send@value^0,c
 15708  0033C6  0E01               	movlw	1
 15709  0033C8  EC50  F02F         	call	_lcd_send
 15710  0033CC                     
 15711                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 15712  0033CC  0E31               	movlw	49
 15713  0033CE  6E04               	movwf	lcd_send@value^0,c
 15714  0033D0  0E01               	movlw	1
 15715  0033D2  EC50  F02F         	call	_lcd_send
 15716  0033D6                     
 15717                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 15718  0033D6  0E2B               	movlw	43
 15719  0033D8  6E04               	movwf	lcd_send@value^0,c
 15720  0033DA  0E01               	movlw	1
 15721  0033DC  EC50  F02F         	call	_lcd_send
 15722  0033E0                     
 15723                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 15724  0033E0  0E0C               	movlw	12
 15725  0033E2  6E04               	movwf	lcd_send@value^0,c
 15726  0033E4  0E01               	movlw	1
 15727  0033E6  EC50  F02F         	call	_lcd_send
 15728  0033EA                     
 15729                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 15730  0033EA  0E0E               	movlw	14
 15731  0033EC  6E04               	movwf	lcd_send@value^0,c
 15732  0033EE  0E01               	movlw	1
 15733  0033F0  EC50  F02F         	call	_lcd_send
 15734  0033F4                     
 15735                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 15736  0033F4  0E08               	movlw	8
 15737  0033F6  6E04               	movwf	lcd_send@value^0,c
 15738  0033F8  0E01               	movlw	1
 15739  0033FA  EC50  F02F         	call	_lcd_send
 15740  0033FE                     
 15741                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 15742  0033FE  0E4E               	movlw	78
 15743  003400  6E04               	movwf	lcd_send@value^0,c
 15744  003402  0E01               	movlw	1
 15745  003404  EC50  F02F         	call	_lcd_send
 15746  003408                     
 15747                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 15748  003408  0EF1               	movlw	241
 15749  00340A  6E04               	movwf	lcd_send@value^0,c
 15750  00340C  0E01               	movlw	1
 15751  00340E  EC50  F02F         	call	_lcd_send
 15752  003412                     
 15753                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 15754  003412  0E37               	movlw	55
 15755  003414  6E04               	movwf	lcd_send@value^0,c
 15756  003416  0E01               	movlw	1
 15757  003418  EC50  F02F         	call	_lcd_send
 15758  00341C                     
 15759                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 15760  00341C  0E07               	movlw	7
 15761  00341E  6E04               	movwf	lcd_send@value^0,c
 15762  003420  0E01               	movlw	1
 15763  003422  EC50  F02F         	call	_lcd_send
 15764  003426                     
 15765                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 15766  003426  0E10               	movlw	16
 15767  003428  6E04               	movwf	lcd_send@value^0,c
 15768  00342A  0E01               	movlw	1
 15769  00342C  EC50  F02F         	call	_lcd_send
 15770  003430                     
 15771                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 15772  003430  0E03               	movlw	3
 15773  003432  6E04               	movwf	lcd_send@value^0,c
 15774  003434  0E01               	movlw	1
 15775  003436  EC50  F02F         	call	_lcd_send
 15776  00343A                     
 15777                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 15778  00343A  0E0E               	movlw	14
 15779  00343C  6E04               	movwf	lcd_send@value^0,c
 15780  00343E  0E01               	movlw	1
 15781  003440  EC50  F02F         	call	_lcd_send
 15782  003444                     
 15783                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 15784  003444  0E09               	movlw	9
 15785  003446  6E04               	movwf	lcd_send@value^0,c
 15786  003448  0E01               	movlw	1
 15787  00344A  EC50  F02F         	call	_lcd_send
 15788  00344E                     
 15789                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15790  00344E  0E00               	movlw	0
 15791  003450  6E04               	movwf	lcd_send@value^0,c
 15792  003452  0E01               	movlw	1
 15793  003454  EC50  F02F         	call	_lcd_send
 15794  003458                     
 15795                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 15796  003458  0EE1               	movlw	225
 15797  00345A  6E04               	movwf	lcd_send@value^0,c
 15798  00345C  0E00               	movlw	0
 15799  00345E  EC50  F02F         	call	_lcd_send
 15800  003462                     
 15801                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 15802  003462  0E00               	movlw	0
 15803  003464  6E04               	movwf	lcd_send@value^0,c
 15804  003466  0E01               	movlw	1
 15805  003468  EC50  F02F         	call	_lcd_send
 15806  00346C                     
 15807                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 15808  00346C  0E0E               	movlw	14
 15809  00346E  6E04               	movwf	lcd_send@value^0,c
 15810  003470  0E01               	movlw	1
 15811  003472  EC50  F02F         	call	_lcd_send
 15812  003476                     
 15813                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 15814  003476  0E14               	movlw	20
 15815  003478  6E04               	movwf	lcd_send@value^0,c
 15816  00347A  0E01               	movlw	1
 15817  00347C  EC50  F02F         	call	_lcd_send
 15818  003480                     
 15819                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 15820  003480  0E03               	movlw	3
 15821  003482  6E04               	movwf	lcd_send@value^0,c
 15822  003484  0E01               	movlw	1
 15823  003486  EC50  F02F         	call	_lcd_send
 15824  00348A                     
 15825                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 15826  00348A  0E11               	movlw	17
 15827  00348C  6E04               	movwf	lcd_send@value^0,c
 15828  00348E  0E01               	movlw	1
 15829  003490  EC50  F02F         	call	_lcd_send
 15830  003494                     
 15831                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 15832  003494  0E07               	movlw	7
 15833  003496  6E04               	movwf	lcd_send@value^0,c
 15834  003498  0E01               	movlw	1
 15835  00349A  EC50  F02F         	call	_lcd_send
 15836  00349E                     
 15837                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 15838  00349E  0E31               	movlw	49
 15839  0034A0  6E04               	movwf	lcd_send@value^0,c
 15840  0034A2  0E01               	movlw	1
 15841  0034A4  EC50  F02F         	call	_lcd_send
 15842  0034A8                     
 15843                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 15844  0034A8  0EC1               	movlw	193
 15845  0034AA  6E04               	movwf	lcd_send@value^0,c
 15846  0034AC  0E01               	movlw	1
 15847  0034AE  EC50  F02F         	call	_lcd_send
 15848  0034B2                     
 15849                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 15850  0034B2  0E48               	movlw	72
 15851  0034B4  6E04               	movwf	lcd_send@value^0,c
 15852  0034B6  0E01               	movlw	1
 15853  0034B8  EC50  F02F         	call	_lcd_send
 15854  0034BC                     
 15855                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 15856  0034BC  0E08               	movlw	8
 15857  0034BE  6E04               	movwf	lcd_send@value^0,c
 15858  0034C0  0E01               	movlw	1
 15859  0034C2  EC50  F02F         	call	_lcd_send
 15860  0034C6                     
 15861                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 15862  0034C6  0E0F               	movlw	15
 15863  0034C8  6E04               	movwf	lcd_send@value^0,c
 15864  0034CA  0E01               	movlw	1
 15865  0034CC  EC50  F02F         	call	_lcd_send
 15866  0034D0                     
 15867                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 15868  0034D0  0E0C               	movlw	12
 15869  0034D2  6E04               	movwf	lcd_send@value^0,c
 15870  0034D4  0E01               	movlw	1
 15871  0034D6  EC50  F02F         	call	_lcd_send
 15872  0034DA                     
 15873                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 15874  0034DA  0E31               	movlw	49
 15875  0034DC  6E04               	movwf	lcd_send@value^0,c
 15876  0034DE  0E01               	movlw	1
 15877  0034E0  EC50  F02F         	call	_lcd_send
 15878  0034E4                     
 15879                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 15880  0034E4  0E36               	movlw	54
 15881  0034E6  6E04               	movwf	lcd_send@value^0,c
 15882  0034E8  0E01               	movlw	1
 15883  0034EA  EC50  F02F         	call	_lcd_send
 15884  0034EE                     
 15885                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 15886  0034EE  0E0F               	movlw	15
 15887  0034F0  6E04               	movwf	lcd_send@value^0,c
 15888  0034F2  0E01               	movlw	1
 15889  0034F4  EC50  F02F         	call	_lcd_send
 15890  0034F8                     
 15891                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 15892  0034F8  0E11               	movlw	17
 15893  0034FA  6E04               	movwf	lcd_send@value^0,c
 15894  0034FC  0E00               	movlw	0
 15895  0034FE  EC50  F02F         	call	_lcd_send
 15896                           
 15897                           ;lib_ili9341.c: 125:     msDelay(120);
 15898  003502  0E78               	movlw	120
 15899  003504  ECDF  F02E         	call	_msDelay
 15900  003508                     
 15901                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 15902  003508  0E29               	movlw	41
 15903  00350A  6E04               	movwf	lcd_send@value^0,c
 15904  00350C  0E00               	movlw	0
 15905  00350E  EC50  F02F         	call	_lcd_send
 15906  003512                     
 15907                           ;lib_ili9341.c: 127:     msDelay(120);
 15908  003512  0E78               	movlw	120
 15909  003514  ECDF  F02E         	call	_msDelay
 15910  003518                     
 15911                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 15912  003518  0E00               	movlw	0
 15913  00351A  6E0D               	movwf	(lcd_fill@bg_color+1)^0,c
 15914  00351C  0E00               	movlw	0
 15915  00351E  6E0C               	movwf	lcd_fill@bg_color^0,c
 15916  003520  EC70  F02B         	call	_lcd_fill	;wreg free
 15917  003524  0012               	return		;funcret
 15918  003526                     __end_of_lcd_init:
 15919                           	opt callstack 0
 15920                           
 15921 ;; *************** function _msDelay *****************
 15922 ;; Defined at:
 15923 ;;		line 16 in file "lib_ili9341.c"
 15924 ;; Parameters:    Size  Location     Type
 15925 ;;  ms              1    wreg     unsigned char 
 15926 ;; Auto vars:     Size  Location     Type
 15927 ;;  ms              1    3[COMRAM] unsigned char 
 15928 ;;  k               1    4[COMRAM] unsigned char 
 15929 ;; Return value:  Size  Location     Type
 15930 ;;                  1    wreg      void 
 15931 ;; Registers used:
 15932 ;;		wreg, status,2, status,0
 15933 ;; Tracked objects:
 15934 ;;		On entry : 0/0
 15935 ;;		On exit  : 0/0
 15936 ;;		Unchanged: 0/0
 15937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15941 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15942 ;;Total ram usage:        3 bytes
 15943 ;; Hardware stack levels used:    1
 15944 ;; Hardware stack levels required when called:    4
 15945 ;; This function calls:
 15946 ;;		Nothing
 15947 ;; This function is called by:
 15948 ;;		_lcd_init
 15949 ;; This function uses a non-reentrant model
 15950 ;;
 15951                           
 15952                           	psect	text46
 15953  005DBE                     __ptext46:
 15954                           	opt callstack 0
 15955  005DBE                     _msDelay:
 15956                           	opt callstack 25
 15957                           
 15958                           ;incstack = 0
 15959                           ;msDelay@ms stored from wreg
 15960  005DBE  6E04               	movwf	msDelay@ms^0,c
 15961  005DC0                     
 15962                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 15963  005DC0  0E00               	movlw	0
 15964  005DC2  6E05               	movwf	msDelay@k^0,c
 15965  005DC4  EFEC  F02E         	goto	l6484
 15966  005DC8                     l6480:
 15967                           
 15968                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 15969  005DC8  0E03               	movlw	3
 15970  005DCA  6E03               	movwf	??_msDelay^0,c
 15971  005DCC  0E98               	movlw	152
 15972  005DCE                     u12137:
 15973  005DCE  2EE8               	decfsz	wreg,f,c
 15974  005DD0  D7FE               	bra	u12137
 15975  005DD2  2E03               	decfsz	??_msDelay^0,f,c
 15976  005DD4  D7FC               	bra	u12137
 15977  005DD6                     
 15978                           ;lib_ili9341.c: 23:     }
 15979  005DD6  2A05               	incf	msDelay@k^0,f,c
 15980  005DD8                     l6484:
 15981  005DD8  5004               	movf	msDelay@ms^0,w,c
 15982  005DDA  5C05               	subwf	msDelay@k^0,w,c
 15983  005DDC  A0D8               	btfss	status,0,c
 15984  005DDE  EFF3  F02E         	goto	u7901
 15985  005DE2  EFF5  F02E         	goto	u7900
 15986  005DE6                     u7901:
 15987  005DE6  EFE4  F02E         	goto	l6480
 15988  005DEA                     u7900:
 15989  005DEA  0012               	return		;funcret
 15990  005DEC                     __end_of_msDelay:
 15991                           	opt callstack 0
 15992                           
 15993 ;; *************** function _lcd_fill *****************
 15994 ;; Defined at:
 15995 ;;		line 193 in file "lib_ili9341.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;  bg_color        2   11[COMRAM] unsigned short 
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;  width           2   15[COMRAM] unsigned short 
 16000 ;;  height          2   13[COMRAM] unsigned short 
 16001 ;; Return value:  Size  Location     Type
 16002 ;;                  1    wreg      void 
 16003 ;; Registers used:
 16004 ;;		wreg, status,2, status,0, cstack
 16005 ;; Tracked objects:
 16006 ;;		On entry : 0/0
 16007 ;;		On exit  : 0/0
 16008 ;;		Unchanged: 0/0
 16009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16011 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16013 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16014 ;;Total ram usage:        6 bytes
 16015 ;; Hardware stack levels used:    1
 16016 ;; Hardware stack levels required when called:    8
 16017 ;; This function calls:
 16018 ;;		_lcd_draw_pixel
 16019 ;;		_lcd_set_cursor
 16020 ;; This function is called by:
 16021 ;;		_lcd_init
 16022 ;; This function uses a non-reentrant model
 16023 ;;
 16024                           
 16025                           	psect	text47
 16026  0056E0                     __ptext47:
 16027                           	opt callstack 0
 16028  0056E0                     _lcd_fill:
 16029                           	opt callstack 21
 16030  0056E0                     
 16031                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 16032  0056E0  0E01               	movlw	1
 16033  0056E2  6E11               	movwf	(lcd_fill@width+1)^0,c
 16034  0056E4  0E40               	movlw	64
 16035  0056E6  6E10               	movwf	lcd_fill@width^0,c
 16036  0056E8  0E00               	movlw	0
 16037  0056EA  6E0F               	movwf	(lcd_fill@height+1)^0,c
 16038  0056EC  0EF0               	movlw	240
 16039  0056EE  6E0E               	movwf	lcd_fill@height^0,c
 16040  0056F0                     
 16041                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 16042  0056F0  0E00               	movlw	0
 16043  0056F2  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 16044  0056F4  0E00               	movlw	0
 16045  0056F6  6E08               	movwf	lcd_set_cursor@x^0,c
 16046  0056F8  0E00               	movlw	0
 16047  0056FA  6E0B               	movwf	(lcd_set_cursor@y+1)^0,c
 16048  0056FC  0E00               	movlw	0
 16049  0056FE  6E0A               	movwf	lcd_set_cursor@y^0,c
 16050  005700  ECA4  F02D         	call	_lcd_set_cursor	;wreg free
 16051  005704  0900               	iorlw	0
 16052  005706  B4D8               	btfsc	status,2,c
 16053  005708  EF88  F02B         	goto	u7911
 16054  00570C  EF8A  F02B         	goto	u7910
 16055  005710                     u7911:
 16056  005710  EFA3  F02B         	goto	l6498
 16057  005714                     u7910:
 16058  005714  EFB0  F02B         	goto	l376
 16059  005718                     l6492:
 16060                           
 16061                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 16062  005718  C00C  F006         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 16063  00571C  C00D  F007         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 16064  005720  EC68  F02F         	call	_lcd_draw_pixel	;wreg free
 16065  005724                     l6494:
 16066                           
 16067                           ;lib_ili9341.c: 204:         while(width--)
 16068  005724  0610               	decf	lcd_fill@width^0,f,c
 16069  005726  A0D8               	btfss	status,0,c
 16070  005728  0611               	decf	(lcd_fill@width+1)^0,f,c
 16071  00572A  2810               	incf	lcd_fill@width^0,w,c
 16072  00572C  E106               	bnz	u7921
 16073  00572E  2811               	incf	(lcd_fill@width+1)^0,w,c
 16074  005730  A4D8               	btfss	status,2,c
 16075  005732  EF9D  F02B         	goto	u7921
 16076  005736  EF9F  F02B         	goto	u7920
 16077  00573A                     u7921:
 16078  00573A  EF8C  F02B         	goto	l6492
 16079  00573E                     u7920:
 16080  00573E                     
 16081                           ;lib_ili9341.c: 208:         width = 320;
 16082  00573E  0E01               	movlw	1
 16083  005740  6E11               	movwf	(lcd_fill@width+1)^0,c
 16084  005742  0E40               	movlw	64
 16085  005744  6E10               	movwf	lcd_fill@width^0,c
 16086  005746                     l6498:
 16087                           
 16088                           ;lib_ili9341.c: 202:     while(height--)
 16089  005746  060E               	decf	lcd_fill@height^0,f,c
 16090  005748  A0D8               	btfss	status,0,c
 16091  00574A  060F               	decf	(lcd_fill@height+1)^0,f,c
 16092  00574C  280E               	incf	lcd_fill@height^0,w,c
 16093  00574E  E106               	bnz	u7931
 16094  005750  280F               	incf	(lcd_fill@height+1)^0,w,c
 16095  005752  A4D8               	btfss	status,2,c
 16096  005754  EFAE  F02B         	goto	u7931
 16097  005758  EFB0  F02B         	goto	u7930
 16098  00575C                     u7931:
 16099  00575C  EF92  F02B         	goto	l6494
 16100  005760                     u7930:
 16101  005760                     l376:
 16102  005760  0012               	return		;funcret
 16103  005762                     __end_of_lcd_fill:
 16104                           	opt callstack 0
 16105                           
 16106 ;; *************** function _lcd_draw_string *****************
 16107 ;; Defined at:
 16108 ;;		line 379 in file "lib_ili9341.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  x               2   33[COMRAM] unsigned short 
 16111 ;;  y               2   35[COMRAM] unsigned short 
 16112 ;;  pS              2   37[COMRAM] PTR const unsigned char 
 16113 ;;		 -> string_ntc(100), string_pot(100), string_temp(100), STR_1(12), 
 16114 ;;  fg_color        2   39[COMRAM] unsigned short 
 16115 ;;  bg_color        2   41[COMRAM] unsigned short 
 16116 ;; Auto vars:     Size  Location     Type
 16117 ;;  lIndex          2   49[COMRAM] unsigned short 
 16118 ;;  k               2   47[COMRAM] unsigned short 
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  1    wreg      void 
 16121 ;; Registers used:
 16122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16123 ;; Tracked objects:
 16124 ;;		On entry : 0/0
 16125 ;;		On exit  : 0/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16128 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16130 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16131 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16132 ;;Total ram usage:       18 bytes
 16133 ;; Hardware stack levels used:    1
 16134 ;; Hardware stack levels required when called:    9
 16135 ;; This function calls:
 16136 ;;		_lcd_draw_char
 16137 ;; This function is called by:
 16138 ;;		_main
 16139 ;; This function uses a non-reentrant model
 16140 ;;
 16141                           
 16142                           	psect	text48
 16143  004B62                     __ptext48:
 16144                           	opt callstack 0
 16145  004B62                     _lcd_draw_string:
 16146                           	opt callstack 21
 16147  004B62                     
 16148                           ;lib_ili9341.c: 379: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 380: {;lib_ili9341.c: 381:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 383:     while(*pS)
 16149  004B62  EF30  F026         	goto	l6822
 16150  004B66                     l6808:
 16151                           
 16152                           ;lib_ili9341.c: 384:     {;lib_ili9341.c: 385:         lIndex = 0;
 16153  004B66  0E00               	movlw	0
 16154  004B68  6E33               	movwf	(lcd_draw_string@lIndex+1)^0,c
 16155  004B6A  0E00               	movlw	0
 16156  004B6C  6E32               	movwf	lcd_draw_string@lIndex^0,c
 16157                           
 16158                           ;lib_ili9341.c: 386:         for(k=0; k<(*pS - ' '); k++)
 16159  004B6E  0E00               	movlw	0
 16160  004B70  6E31               	movwf	(lcd_draw_string@k+1)^0,c
 16161  004B72  0E00               	movlw	0
 16162  004B74  6E30               	movwf	lcd_draw_string@k^0,c
 16163  004B76  EFDC  F025         	goto	l6814
 16164  004B7A                     l6810:
 16165                           
 16166                           ;lib_ili9341.c: 387:         {;lib_ili9341.c: 388:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 16167  004B7A  90D8               	bcf	status,0,c
 16168  004B7C  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 16169  004B7E  6EF6               	movwf	tblptrl,c
 16170  004B80  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16171  004B82  6EF7               	movwf	tblptrh,c
 16172  004B84  0EA7               	movlw	low _font
 16173  004B86  26F6               	addwf	tblptrl,f,c
 16174  004B88  0EF1               	movlw	high _font
 16175  004B8A  22F7               	addwfc	tblptrh,f,c
 16176  004B8C                     	if	1	;There are 3 active tblptr bytes
 16177  004B8C  6AF8               	clrf	tblptru,c
 16178  004B8E  0E00               	movlw	low (__mediumconst shr (0+16))
 16179  004B90  22F8               	addwfc	tblptru,f,c
 16180  004B92                     	endif
 16181  004B92  0009               	tblrd		*+
 16182  004B94  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 16183  004B98  0009               	tblrd		*+
 16184  004B9A  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 16185  004B9E  90D8               	bcf	status,0,c
 16186  004BA0  362C               	rlcf	??_lcd_draw_string^0,f,c
 16187  004BA2  362D               	rlcf	(??_lcd_draw_string+1)^0,f,c
 16188  004BA4  0E01               	movlw	1
 16189  004BA6  262C               	addwf	??_lcd_draw_string^0,f,c
 16190  004BA8  0E00               	movlw	0
 16191  004BAA  222D               	addwfc	(??_lcd_draw_string+1)^0,f,c
 16192  004BAC  502C               	movf	??_lcd_draw_string^0,w,c
 16193  004BAE  2632               	addwf	lcd_draw_string@lIndex^0,f,c
 16194  004BB0  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16195  004BB2  2233               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 16196  004BB4                     
 16197                           ;lib_ili9341.c: 389:         }
 16198  004BB4  4A30               	infsnz	lcd_draw_string@k^0,f,c
 16199  004BB6  2A31               	incf	(lcd_draw_string@k+1)^0,f,c
 16200  004BB8                     l6814:
 16201  004BB8  0EE0               	movlw	224
 16202  004BBA  6E2C               	movwf	??_lcd_draw_string^0,c
 16203  004BBC  0EFF               	movlw	255
 16204  004BBE  6E2D               	movwf	(??_lcd_draw_string+1)^0,c
 16205  004BC0  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16206  004BC4  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16207  004BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 16208  004BCA  6EF8               	movwf	tblptru,c
 16209  004BCC  0E0E               	movlw	(high __ramtop+-1)
 16210  004BCE  64F7               	cpfsgt	tblptrh,c
 16211  004BD0  D003               	bra	u8097
 16212  004BD2  0008               	tblrd		*
 16213  004BD4  50F5               	movf	tablat,w,c
 16214  004BD6  D005               	bra	u8090
 16215  004BD8                     u8097:
 16216  004BD8  CFF6 FFE1          	movff	tblptrl,fsr1l
 16217  004BDC  CFF7 FFE2          	movff	tblptrh,fsr1h
 16218  004BE0  50E7               	movf	indf1,w,c
 16219  004BE2                     u8090:
 16220  004BE2  6E2E               	movwf	(??_lcd_draw_string+2)^0,c
 16221  004BE4  6A2F               	clrf	(??_lcd_draw_string+3)^0,c
 16222  004BE6  502C               	movf	??_lcd_draw_string^0,w,c
 16223  004BE8  262E               	addwf	(??_lcd_draw_string+2)^0,f,c
 16224  004BEA  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16225  004BEC  222F               	addwfc	(??_lcd_draw_string+3)^0,f,c
 16226  004BEE  502E               	movf	(??_lcd_draw_string+2)^0,w,c
 16227  004BF0  5C30               	subwf	lcd_draw_string@k^0,w,c
 16228  004BF2  502F               	movf	(??_lcd_draw_string+3)^0,w,c
 16229  004BF4  5831               	subwfb	(lcd_draw_string@k+1)^0,w,c
 16230  004BF6  A0D8               	btfss	status,0,c
 16231  004BF8  EF00  F026         	goto	u8101
 16232  004BFC  EF02  F026         	goto	u8100
 16233  004C00                     u8101:
 16234  004C00  EFBD  F025         	goto	l6810
 16235  004C04                     u8100:
 16236  004C04                     
 16237                           ;lib_ili9341.c: 391:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 16238  004C04  C022  F00C         	movff	lcd_draw_string@x,lcd_draw_char@x
 16239  004C08  C023  F00D         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 16240  004C0C  C024  F00E         	movff	lcd_draw_string@y,lcd_draw_char@y
 16241  004C10  C025  F00F         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 16242  004C14  C032  F010         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 16243  004C18  C033  F011         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 16244  004C1C  C028  F012         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 16245  004C20  C029  F013         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 16246  004C24  C02A  F014         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 16247  004C28  C02B  F015         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 16248  004C2C  ECA7  F023         	call	_lcd_draw_char	;wreg free
 16249  004C30                     
 16250                           ;lib_ili9341.c: 393:         x += font[lIndex];
 16251  004C30  90D8               	bcf	status,0,c
 16252  004C32  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 16253  004C34  6EF6               	movwf	tblptrl,c
 16254  004C36  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16255  004C38  6EF7               	movwf	tblptrh,c
 16256  004C3A  0EA7               	movlw	low _font
 16257  004C3C  26F6               	addwf	tblptrl,f,c
 16258  004C3E  0EF1               	movlw	high _font
 16259  004C40  22F7               	addwfc	tblptrh,f,c
 16260  004C42                     	if	1	;There are 3 active tblptr bytes
 16261  004C42  6AF8               	clrf	tblptru,c
 16262  004C44  0E00               	movlw	low (__mediumconst shr (0+16))
 16263  004C46  22F8               	addwfc	tblptru,f,c
 16264  004C48                     	endif
 16265  004C48  0009               	tblrd		*+
 16266  004C4A  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 16267  004C4E  0009               	tblrd		*+
 16268  004C50  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 16269  004C54  502C               	movf	??_lcd_draw_string^0,w,c
 16270  004C56  2622               	addwf	lcd_draw_string@x^0,f,c
 16271  004C58  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16272  004C5A  2223               	addwfc	(lcd_draw_string@x+1)^0,f,c
 16273  004C5C                     
 16274                           ;lib_ili9341.c: 395:         pS++;
 16275  004C5C  4A26               	infsnz	lcd_draw_string@pS^0,f,c
 16276  004C5E  2A27               	incf	(lcd_draw_string@pS+1)^0,f,c
 16277  004C60                     l6822:
 16278                           
 16279                           ;lib_ili9341.c: 383:     while(*pS)
 16280  004C60  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16281  004C64  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16282  004C68  0E00               	movlw	low (__mediumconst shr (0+16))
 16283  004C6A  6EF8               	movwf	tblptru,c
 16284  004C6C  0E0E               	movlw	(high __ramtop+-1)
 16285  004C6E  64F7               	cpfsgt	tblptrh,c
 16286  004C70  D003               	bra	u8117
 16287  004C72  0008               	tblrd		*
 16288  004C74  50F5               	movf	tablat,w,c
 16289  004C76  D005               	bra	u8110
 16290  004C78                     u8117:
 16291  004C78  CFF6 FFE1          	movff	tblptrl,fsr1l
 16292  004C7C  CFF7 FFE2          	movff	tblptrh,fsr1h
 16293  004C80  50E7               	movf	indf1,w,c
 16294  004C82                     u8110:
 16295  004C82  0900               	iorlw	0
 16296  004C84  A4D8               	btfss	status,2,c
 16297  004C86  EF47  F026         	goto	u8121
 16298  004C8A  EF49  F026         	goto	u8120
 16299  004C8E                     u8121:
 16300  004C8E  EFB3  F025         	goto	l6808
 16301  004C92                     u8120:
 16302  004C92  0012               	return		;funcret
 16303  004C94                     __end_of_lcd_draw_string:
 16304                           	opt callstack 0
 16305                           
 16306 ;; *************** function _lcd_draw_char *****************
 16307 ;; Defined at:
 16308 ;;		line 355 in file "lib_ili9341.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;  x               2   11[COMRAM] unsigned short 
 16311 ;;  y               2   13[COMRAM] unsigned short 
 16312 ;;  fIndex          2   15[COMRAM] unsigned short 
 16313 ;;  fg_color        2   17[COMRAM] unsigned short 
 16314 ;;  bg_color        2   19[COMRAM] unsigned short 
 16315 ;; Auto vars:     Size  Location     Type
 16316 ;;  i               1   32[COMRAM] unsigned char 
 16317 ;;  k               1   31[COMRAM] unsigned char 
 16318 ;;  j               1   30[COMRAM] unsigned char 
 16319 ;; Return value:  Size  Location     Type
 16320 ;;                  1    wreg      void 
 16321 ;; Registers used:
 16322 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16323 ;; Tracked objects:
 16324 ;;		On entry : 0/0
 16325 ;;		On exit  : 0/0
 16326 ;;		Unchanged: 0/0
 16327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16328 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16329 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16330 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16331 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16332 ;;Total ram usage:       22 bytes
 16333 ;; Hardware stack levels used:    1
 16334 ;; Hardware stack levels required when called:    8
 16335 ;; This function calls:
 16336 ;;		_lcd_draw_pixel
 16337 ;;		_lcd_set_cursor
 16338 ;; This function is called by:
 16339 ;;		_lcd_draw_string
 16340 ;; This function uses a non-reentrant model
 16341 ;;
 16342                           
 16343                           	psect	text49
 16344  00474E                     __ptext49:
 16345                           	opt callstack 0
 16346  00474E                     _lcd_draw_char:
 16347                           	opt callstack 21
 16348  00474E                     
 16349                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 16350  00474E  0E00               	movlw	0
 16351  004750  6E1F               	movwf	lcd_draw_char@j^0,c
 16352  004752  EF47  F024         	goto	l6536
 16353  004756                     l6506:
 16354                           
 16355                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 16356  004756  90D8               	bcf	status,0,c
 16357  004758  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16358  00475A  6EF6               	movwf	tblptrl,c
 16359  00475C  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16360  00475E  6EF7               	movwf	tblptrh,c
 16361  004760  0EA7               	movlw	low _font
 16362  004762  26F6               	addwf	tblptrl,f,c
 16363  004764  0EF1               	movlw	high _font
 16364  004766  22F7               	addwfc	tblptrh,f,c
 16365  004768                     	if	1	;There are 3 active tblptr bytes
 16366  004768  6AF8               	clrf	tblptru,c
 16367  00476A  0E00               	movlw	low (__mediumconst shr (0+16))
 16368  00476C  22F8               	addwfc	tblptru,f,c
 16369  00476E                     	endif
 16370  00476E  0009               	tblrd		*+
 16371  004770  CFF5 F016          	movff	tablat,??_lcd_draw_char
 16372  004774  0009               	tblrd		*+
 16373  004776  CFF5 F017          	movff	tablat,??_lcd_draw_char+1
 16374  00477A  501F               	movf	lcd_draw_char@j^0,w,c
 16375  00477C  5E16               	subwf	??_lcd_draw_char^0,f,c
 16376  00477E  0E00               	movlw	0
 16377  004780  5A17               	subwfb	(??_lcd_draw_char+1)^0,f,c
 16378  004782  500C               	movf	lcd_draw_char@x^0,w,c
 16379  004784  2416               	addwf	??_lcd_draw_char^0,w,c
 16380  004786  6E08               	movwf	lcd_set_cursor@x^0,c
 16381  004788  500D               	movf	(lcd_draw_char@x+1)^0,w,c
 16382  00478A  2017               	addwfc	(??_lcd_draw_char+1)^0,w,c
 16383  00478C  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 16384  00478E  C00E  F00A         	movff	lcd_draw_char@y,lcd_set_cursor@y
 16385  004792  C00F  F00B         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 16386  004796  ECA4  F02D         	call	_lcd_set_cursor	;wreg free
 16387  00479A                     
 16388                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 16389  00479A  0E00               	movlw	0
 16390  00479C  6E20               	movwf	lcd_draw_char@k^0,c
 16391  00479E                     l6514:
 16392                           
 16393                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 16394  00479E  0E00               	movlw	0
 16395  0047A0  6E21               	movwf	lcd_draw_char@i^0,c
 16396  0047A2                     l6520:
 16397                           
 16398                           ;lib_ili9341.c: 366:             { if( font[ (fIndex + ((font[fIndex]) << 1)) - (j<<1) -
      +                           k ] & (0x80 >> i) )
 16399  0047A2  501F               	movf	lcd_draw_char@j^0,w,c
 16400  0047A4  6E16               	movwf	??_lcd_draw_char^0,c
 16401  0047A6  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 16402  0047A8  90D8               	bcf	status,0,c
 16403  0047AA  3616               	rlcf	??_lcd_draw_char^0,f,c
 16404  0047AC  3617               	rlcf	(??_lcd_draw_char+1)^0,f,c
 16405  0047AE  90D8               	bcf	status,0,c
 16406  0047B0  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16407  0047B2  6EF6               	movwf	tblptrl,c
 16408  0047B4  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16409  0047B6  6EF7               	movwf	tblptrh,c
 16410  0047B8  0EA7               	movlw	low _font
 16411  0047BA  26F6               	addwf	tblptrl,f,c
 16412  0047BC  0EF1               	movlw	high _font
 16413  0047BE  22F7               	addwfc	tblptrh,f,c
 16414  0047C0                     	if	1	;There are 3 active tblptr bytes
 16415  0047C0  6AF8               	clrf	tblptru,c
 16416  0047C2  0E00               	movlw	low (__mediumconst shr (0+16))
 16417  0047C4  22F8               	addwfc	tblptru,f,c
 16418  0047C6                     	endif
 16419  0047C6  0009               	tblrd		*+
 16420  0047C8  CFF5 F018          	movff	tablat,??_lcd_draw_char+2
 16421  0047CC  0009               	tblrd		*+
 16422  0047CE  CFF5 F019          	movff	tablat,??_lcd_draw_char+3
 16423  0047D2  90D8               	bcf	status,0,c
 16424  0047D4  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16425  0047D6  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16426  0047D8  5016               	movf	??_lcd_draw_char^0,w,c
 16427  0047DA  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 16428  0047DC  5017               	movf	(??_lcd_draw_char+1)^0,w,c
 16429  0047DE  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16430  0047E0  5020               	movf	lcd_draw_char@k^0,w,c
 16431  0047E2  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 16432  0047E4  0E00               	movlw	0
 16433  0047E6  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16434  0047E8  5010               	movf	lcd_draw_char@fIndex^0,w,c
 16435  0047EA  2618               	addwf	(??_lcd_draw_char+2)^0,f,c
 16436  0047EC  5011               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 16437  0047EE  2219               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16438  0047F0  90D8               	bcf	status,0,c
 16439  0047F2  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16440  0047F4  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16441  0047F6  0EA7               	movlw	low _font
 16442  0047F8  2418               	addwf	(??_lcd_draw_char+2)^0,w,c
 16443  0047FA  6EF6               	movwf	tblptrl,c
 16444  0047FC  0EF1               	movlw	high _font
 16445  0047FE  2019               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16446  004800  6EF7               	movwf	tblptrh,c
 16447  004802                     	if	1	;There are 3 active tblptr bytes
 16448  004802  6AF8               	clrf	tblptru,c
 16449  004804  0E00               	movlw	low (__mediumconst shr (0+16))
 16450  004806  22F8               	addwfc	tblptru,f,c
 16451  004808                     	endif
 16452  004808  0009               	tblrd		*+
 16453  00480A  CFF5 F01A          	movff	tablat,??_lcd_draw_char+4
 16454  00480E  0009               	tblrd		*+
 16455  004810  CFF5 F01B          	movff	tablat,??_lcd_draw_char+5
 16456  004814  C021  F01C         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16457  004818  0E80               	movlw	128
 16458  00481A  6E1D               	movwf	(??_lcd_draw_char+7)^0,c
 16459  00481C  0E00               	movlw	0
 16460  00481E  6E1E               	movwf	(??_lcd_draw_char+8)^0,c
 16461  004820  2A1C               	incf	(??_lcd_draw_char+6)^0,f,c
 16462  004822  EF16  F024         	goto	u7954
 16463  004826                     u7955:
 16464  004826  341E               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16465  004828  321E               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16466  00482A  321D               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16467  00482C                     u7954:
 16468  00482C  2E1C               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16469  00482E  EF13  F024         	goto	u7955
 16470  004832  501A               	movf	(??_lcd_draw_char+4)^0,w,c
 16471  004834  161D               	andwf	(??_lcd_draw_char+7)^0,f,c
 16472  004836  501B               	movf	(??_lcd_draw_char+5)^0,w,c
 16473  004838  161E               	andwf	(??_lcd_draw_char+8)^0,f,c
 16474  00483A  501D               	movf	(??_lcd_draw_char+7)^0,w,c
 16475  00483C  101E               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16476  00483E  B4D8               	btfsc	status,2,c
 16477  004840  EF24  F024         	goto	u7961
 16478  004844  EF26  F024         	goto	u7960
 16479  004848                     u7961:
 16480  004848  EF2E  F024         	goto	l6524
 16481  00484C                     u7960:
 16482  00484C                     
 16483                           ;lib_ili9341.c: 367:                 {;lib_ili9341.c: 368:                     lcd_draw_
      +                          pixel(fg_color);
 16484  00484C  C012  F006         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16485  004850  C013  F007         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16486  004854  EC68  F02F         	call	_lcd_draw_pixel	;wreg free
 16487                           
 16488                           ;lib_ili9341.c: 369:                 }
 16489  004858  EF34  F024         	goto	l6526
 16490  00485C                     l6524:
 16491                           
 16492                           ;lib_ili9341.c: 371:                 {;lib_ili9341.c: 372:                     lcd_draw_
      +                          pixel(bg_color);
 16493  00485C  C014  F006         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16494  004860  C015  F007         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16495  004864  EC68  F02F         	call	_lcd_draw_pixel	;wreg free
 16496  004868                     l6526:
 16497                           
 16498                           ;lib_ili9341.c: 374:             }
 16499  004868  2A21               	incf	lcd_draw_char@i^0,f,c
 16500  00486A  0E07               	movlw	7
 16501  00486C  6421               	cpfsgt	lcd_draw_char@i^0,c
 16502  00486E  EF3B  F024         	goto	u7971
 16503  004872  EF3D  F024         	goto	u7970
 16504  004876                     u7971:
 16505  004876  EFD1  F023         	goto	l6520
 16506  00487A                     u7970:
 16507  00487A                     
 16508                           ;lib_ili9341.c: 375:         }
 16509  00487A  2A20               	incf	lcd_draw_char@k^0,f,c
 16510  00487C  0E01               	movlw	1
 16511  00487E  6420               	cpfsgt	lcd_draw_char@k^0,c
 16512  004880  EF44  F024         	goto	u7981
 16513  004884  EF46  F024         	goto	u7980
 16514  004888                     u7981:
 16515  004888  EFCF  F023         	goto	l6514
 16516  00488C                     u7980:
 16517  00488C                     
 16518                           ;lib_ili9341.c: 376:     }
 16519  00488C  2A1F               	incf	lcd_draw_char@j^0,f,c
 16520  00488E                     l6536:
 16521  00488E  90D8               	bcf	status,0,c
 16522  004890  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16523  004892  6EF6               	movwf	tblptrl,c
 16524  004894  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16525  004896  6EF7               	movwf	tblptrh,c
 16526  004898  0EA7               	movlw	low _font
 16527  00489A  26F6               	addwf	tblptrl,f,c
 16528  00489C  0EF1               	movlw	high _font
 16529  00489E  22F7               	addwfc	tblptrh,f,c
 16530  0048A0                     	if	1	;There are 3 active tblptr bytes
 16531  0048A0  6AF8               	clrf	tblptru,c
 16532  0048A2  0E00               	movlw	low (__mediumconst shr (0+16))
 16533  0048A4  22F8               	addwfc	tblptru,f,c
 16534  0048A6                     	endif
 16535  0048A6  501F               	movf	lcd_draw_char@j^0,w,c
 16536  0048A8  6E16               	movwf	??_lcd_draw_char^0,c
 16537  0048AA  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 16538  0048AC  0009               	tblrd		*+
 16539  0048AE  50F5               	movf	tablat,w,c
 16540  0048B0  5C16               	subwf	??_lcd_draw_char^0,w,c
 16541  0048B2  0009               	tblrd		*+
 16542  0048B4  50F5               	movf	tablat,w,c
 16543  0048B6  5817               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16544  0048B8  A0D8               	btfss	status,0,c
 16545  0048BA  EF61  F024         	goto	u7991
 16546  0048BE  EF63  F024         	goto	u7990
 16547  0048C2                     u7991:
 16548  0048C2  EFAB  F023         	goto	l6506
 16549  0048C6                     u7990:
 16550  0048C6  0012               	return		;funcret
 16551  0048C8                     __end_of_lcd_draw_char:
 16552                           	opt callstack 0
 16553                           
 16554 ;; *************** function _lcd_set_cursor *****************
 16555 ;; Defined at:
 16556 ;;		line 144 in file "lib_ili9341.c"
 16557 ;; Parameters:    Size  Location     Type
 16558 ;;  x               2    7[COMRAM] unsigned short 
 16559 ;;  y               2    9[COMRAM] unsigned short 
 16560 ;; Auto vars:     Size  Location     Type
 16561 ;;		None
 16562 ;; Return value:  Size  Location     Type
 16563 ;;                  1    wreg      unsigned char 
 16564 ;; Registers used:
 16565 ;;		wreg, status,2, status,0, cstack
 16566 ;; Tracked objects:
 16567 ;;		On entry : 0/0
 16568 ;;		On exit  : 0/0
 16569 ;;		Unchanged: 0/0
 16570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16575 ;;Total ram usage:        4 bytes
 16576 ;; Hardware stack levels used:    1
 16577 ;; Hardware stack levels required when called:    7
 16578 ;; This function calls:
 16579 ;;		_lcd_set_cursor_x
 16580 ;;		_lcd_set_cursor_y
 16581 ;; This function is called by:
 16582 ;;		_lcd_fill
 16583 ;;		_lcd_draw_char
 16584 ;;		_lcd_draw_pixel_at
 16585 ;;		_lcd_fill_rect
 16586 ;; This function uses a non-reentrant model
 16587 ;;
 16588                           
 16589                           	psect	text50
 16590  005B48                     __ptext50:
 16591                           	opt callstack 0
 16592  005B48                     _lcd_set_cursor:
 16593                           	opt callstack 21
 16594  005B48                     
 16595                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16596  005B48  C008  F006         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16597  005B4C  C009  F007         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16598  005B50  EC18  F02D         	call	_lcd_set_cursor_x	;wreg free
 16599  005B54  0900               	iorlw	0
 16600  005B56  A4D8               	btfss	status,2,c
 16601  005B58  EFB0  F02D         	goto	u7851
 16602  005B5C  EFB2  F02D         	goto	u7850
 16603  005B60                     u7851:
 16604  005B60  EFC0  F02D         	goto	l6420
 16605  005B64                     u7850:
 16606  005B64  C00A  F006         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16607  005B68  C00B  F007         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16608  005B6C  ECF4  F02C         	call	_lcd_set_cursor_y	;wreg free
 16609  005B70  0900               	iorlw	0
 16610  005B72  B4D8               	btfsc	status,2,c
 16611  005B74  EFBE  F02D         	goto	u7861
 16612  005B78  EFC0  F02D         	goto	u7860
 16613  005B7C                     u7861:
 16614  005B7C  EFC3  F02D         	goto	l6424
 16615  005B80                     u7860:
 16616  005B80                     l6420:
 16617                           
 16618                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 16619  005B80  0E01               	movlw	1
 16620  005B82  EFC4  F02D         	goto	l361
 16621  005B86                     l6424:
 16622                           
 16623                           ;lib_ili9341.c: 151:     return 0;
 16624  005B86  0E00               	movlw	0
 16625  005B88                     l361:
 16626  005B88  0012               	return		;funcret
 16627  005B8A                     __end_of_lcd_set_cursor:
 16628                           	opt callstack 0
 16629                           
 16630 ;; *************** function _lcd_set_cursor_y *****************
 16631 ;; Defined at:
 16632 ;;		line 170 in file "lib_ili9341.c"
 16633 ;; Parameters:    Size  Location     Type
 16634 ;;  y               2    5[COMRAM] unsigned short 
 16635 ;; Auto vars:     Size  Location     Type
 16636 ;;		None
 16637 ;; Return value:  Size  Location     Type
 16638 ;;                  1    wreg      unsigned char 
 16639 ;; Registers used:
 16640 ;;		wreg, status,2, status,0, cstack
 16641 ;; Tracked objects:
 16642 ;;		On entry : 0/0
 16643 ;;		On exit  : 0/0
 16644 ;;		Unchanged: 0/0
 16645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16650 ;;Total ram usage:        2 bytes
 16651 ;; Hardware stack levels used:    1
 16652 ;; Hardware stack levels required when called:    6
 16653 ;; This function calls:
 16654 ;;		_lcd_send
 16655 ;; This function is called by:
 16656 ;;		_lcd_set_cursor
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660                           	psect	text51
 16661  0059E8                     __ptext51:
 16662                           	opt callstack 0
 16663  0059E8                     _lcd_set_cursor_y:
 16664                           	opt callstack 21
 16665  0059E8                     
 16666                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 16667  0059E8  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16668  0059EA  E109               	bnz	u7300
 16669  0059EC  0EF0               	movlw	240
 16670  0059EE  5C06               	subwf	lcd_set_cursor_y@y^0,w,c
 16671  0059F0  A0D8               	btfss	status,0,c
 16672  0059F2  EFFD  F02C         	goto	u7301
 16673  0059F6  EFFF  F02C         	goto	u7300
 16674  0059FA                     u7301:
 16675  0059FA  EF02  F02D         	goto	l6030
 16676  0059FE                     u7300:
 16677  0059FE                     
 16678                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 16679  0059FE  0E01               	movlw	1
 16680  005A00  EF17  F02D         	goto	l369
 16681  005A04                     l6030:
 16682                           
 16683                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 16684  005A04  0E2A               	movlw	42
 16685  005A06  6E04               	movwf	lcd_send@value^0,c
 16686  005A08  0E00               	movlw	0
 16687  005A0A  EC50  F02F         	call	_lcd_send
 16688                           
 16689                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 16690  005A0E  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16691  005A10  6E04               	movwf	lcd_send@value^0,c
 16692  005A12  0E01               	movlw	1
 16693  005A14  EC50  F02F         	call	_lcd_send
 16694                           
 16695                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 16696  005A18  C006  F004         	movff	lcd_set_cursor_y@y,lcd_send@value
 16697  005A1C  0E01               	movlw	1
 16698  005A1E  EC50  F02F         	call	_lcd_send
 16699                           
 16700                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 16701  005A22  0E2C               	movlw	44
 16702  005A24  6E04               	movwf	lcd_send@value^0,c
 16703  005A26  0E00               	movlw	0
 16704  005A28  EC50  F02F         	call	_lcd_send
 16705  005A2C                     
 16706                           ;lib_ili9341.c: 182:     return 0;
 16707  005A2C  0E00               	movlw	0
 16708  005A2E                     l369:
 16709  005A2E  0012               	return		;funcret
 16710  005A30                     __end_of_lcd_set_cursor_y:
 16711                           	opt callstack 0
 16712                           
 16713 ;; *************** function _lcd_set_cursor_x *****************
 16714 ;; Defined at:
 16715 ;;		line 155 in file "lib_ili9341.c"
 16716 ;; Parameters:    Size  Location     Type
 16717 ;;  x               2    5[COMRAM] unsigned short 
 16718 ;; Auto vars:     Size  Location     Type
 16719 ;;		None
 16720 ;; Return value:  Size  Location     Type
 16721 ;;                  1    wreg      unsigned char 
 16722 ;; Registers used:
 16723 ;;		wreg, status,2, status,0, cstack
 16724 ;; Tracked objects:
 16725 ;;		On entry : 0/0
 16726 ;;		On exit  : 0/0
 16727 ;;		Unchanged: 0/0
 16728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16733 ;;Total ram usage:        2 bytes
 16734 ;; Hardware stack levels used:    1
 16735 ;; Hardware stack levels required when called:    6
 16736 ;; This function calls:
 16737 ;;		_lcd_send
 16738 ;; This function is called by:
 16739 ;;		_lcd_set_cursor
 16740 ;; This function uses a non-reentrant model
 16741 ;;
 16742                           
 16743                           	psect	text52
 16744  005A30                     __ptext52:
 16745                           	opt callstack 0
 16746  005A30                     _lcd_set_cursor_x:
 16747                           	opt callstack 21
 16748  005A30                     
 16749                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 16750  005A30  0E40               	movlw	64
 16751  005A32  5C06               	subwf	lcd_set_cursor_x@x^0,w,c
 16752  005A34  0E01               	movlw	1
 16753  005A36  5807               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16754  005A38  A0D8               	btfss	status,0,c
 16755  005A3A  EF21  F02D         	goto	u7291
 16756  005A3E  EF23  F02D         	goto	u7290
 16757  005A42                     u7291:
 16758  005A42  EF26  F02D         	goto	l6018
 16759  005A46                     u7290:
 16760  005A46                     
 16761                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 16762  005A46  0E01               	movlw	1
 16763  005A48  EF3B  F02D         	goto	l365
 16764  005A4C                     l6018:
 16765                           
 16766                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 16767  005A4C  0E2B               	movlw	43
 16768  005A4E  6E04               	movwf	lcd_send@value^0,c
 16769  005A50  0E00               	movlw	0
 16770  005A52  EC50  F02F         	call	_lcd_send
 16771                           
 16772                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 16773  005A56  5007               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16774  005A58  6E04               	movwf	lcd_send@value^0,c
 16775  005A5A  0E01               	movlw	1
 16776  005A5C  EC50  F02F         	call	_lcd_send
 16777                           
 16778                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 16779  005A60  C006  F004         	movff	lcd_set_cursor_x@x,lcd_send@value
 16780  005A64  0E01               	movlw	1
 16781  005A66  EC50  F02F         	call	_lcd_send
 16782                           
 16783                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 16784  005A6A  0E2C               	movlw	44
 16785  005A6C  6E04               	movwf	lcd_send@value^0,c
 16786  005A6E  0E00               	movlw	0
 16787  005A70  EC50  F02F         	call	_lcd_send
 16788  005A74                     
 16789                           ;lib_ili9341.c: 167:     return 0;
 16790  005A74  0E00               	movlw	0
 16791  005A76                     l365:
 16792  005A76  0012               	return		;funcret
 16793  005A78                     __end_of_lcd_set_cursor_x:
 16794                           	opt callstack 0
 16795                           
 16796 ;; *************** function _lcd_draw_pixel *****************
 16797 ;; Defined at:
 16798 ;;		line 185 in file "lib_ili9341.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;  color           2    5[COMRAM] unsigned short 
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;		None
 16803 ;; Return value:  Size  Location     Type
 16804 ;;                  1    wreg      unsigned char 
 16805 ;; Registers used:
 16806 ;;		wreg, status,2, cstack
 16807 ;; Tracked objects:
 16808 ;;		On entry : 0/0
 16809 ;;		On exit  : 0/0
 16810 ;;		Unchanged: 0/0
 16811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16816 ;;Total ram usage:        2 bytes
 16817 ;; Hardware stack levels used:    1
 16818 ;; Hardware stack levels required when called:    6
 16819 ;; This function calls:
 16820 ;;		_lcd_send
 16821 ;; This function is called by:
 16822 ;;		_lcd_fill
 16823 ;;		_lcd_draw_char
 16824 ;;		_lcd_draw_pixel_at
 16825 ;;		_lcd_fill_rect
 16826 ;; This function uses a non-reentrant model
 16827 ;;
 16828                           
 16829                           	psect	text53
 16830  005ED0                     __ptext53:
 16831                           	opt callstack 0
 16832  005ED0                     _lcd_draw_pixel:
 16833                           	opt callstack 22
 16834  005ED0                     
 16835                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 16836  005ED0  5007               	movf	(lcd_draw_pixel@color+1)^0,w,c
 16837  005ED2  6E04               	movwf	lcd_send@value^0,c
 16838  005ED4  0E01               	movlw	1
 16839  005ED6  EC50  F02F         	call	_lcd_send
 16840                           
 16841                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 16842  005EDA  C006  F004         	movff	lcd_draw_pixel@color,lcd_send@value
 16843  005EDE  0E01               	movlw	1
 16844  005EE0  EC50  F02F         	call	_lcd_send
 16845  005EE4  0012               	return		;funcret
 16846  005EE6                     __end_of_lcd_draw_pixel:
 16847                           	opt callstack 0
 16848                           
 16849 ;; *************** function _lcd_send *****************
 16850 ;; Defined at:
 16851 ;;		line 134 in file "lib_ili9341.c"
 16852 ;; Parameters:    Size  Location     Type
 16853 ;;  dc              1    wreg     _Bool 
 16854 ;;  value           1    3[COMRAM] unsigned char 
 16855 ;; Auto vars:     Size  Location     Type
 16856 ;;  dc              1    4[COMRAM] _Bool 
 16857 ;; Return value:  Size  Location     Type
 16858 ;;                  1    wreg      void 
 16859 ;; Registers used:
 16860 ;;		wreg, status,2, cstack
 16861 ;; Tracked objects:
 16862 ;;		On entry : 0/0
 16863 ;;		On exit  : 0/0
 16864 ;;		Unchanged: 0/0
 16865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16870 ;;Total ram usage:        2 bytes
 16871 ;; Hardware stack levels used:    1
 16872 ;; Hardware stack levels required when called:    5
 16873 ;; This function calls:
 16874 ;;		_SPI_ExchangeByte
 16875 ;; This function is called by:
 16876 ;;		_lcd_init
 16877 ;;		_lcd_set_cursor_x
 16878 ;;		_lcd_set_cursor_y
 16879 ;;		_lcd_draw_pixel
 16880 ;; This function uses a non-reentrant model
 16881 ;;
 16882                           
 16883                           	psect	text54
 16884  005EA0                     __ptext54:
 16885                           	opt callstack 0
 16886  005EA0                     _lcd_send:
 16887                           	opt callstack 24
 16888                           
 16889                           ;incstack = 0
 16890                           ;lcd_send@dc stored from wreg
 16891  005EA0  6E05               	movwf	lcd_send@dc^0,c
 16892  005EA2                     
 16893                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 16894  005EA2  B005               	btfsc	lcd_send@dc^0,0,c
 16895  005EA4  D002               	bra	u6035
 16896  005EA6  908D               	bcf	141,0,c	;volatile
 16897  005EA8  D001               	bra	u6036
 16898  005EAA                     u6035:
 16899  005EAA  808D               	bsf	141,0,c	;volatile
 16900  005EAC                     u6036:
 16901  005EAC                     
 16902                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 16903  005EAC  928D               	bcf	141,1,c	;volatile
 16904  005EAE                     
 16905                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 16906  005EAE  5004               	movf	lcd_send@value^0,w,c
 16907  005EB0  EC36  F02F         	call	_SPI_ExchangeByte
 16908  005EB4                     
 16909                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 16910  005EB4  828D               	bsf	141,1,c	;volatile
 16911  005EB6  0012               	return		;funcret
 16912  005EB8                     __end_of_lcd_send:
 16913                           	opt callstack 0
 16914                           
 16915 ;; *************** function _SPI_ExchangeByte *****************
 16916 ;; Defined at:
 16917 ;;		line 92 in file "mcc_generated_files/spi.c"
 16918 ;; Parameters:    Size  Location     Type
 16919 ;;  data            1    wreg     unsigned char 
 16920 ;; Auto vars:     Size  Location     Type
 16921 ;;  data            1    2[COMRAM] unsigned char 
 16922 ;; Return value:  Size  Location     Type
 16923 ;;                  1    wreg      unsigned char 
 16924 ;; Registers used:
 16925 ;;		wreg, status,2
 16926 ;; Tracked objects:
 16927 ;;		On entry : 0/0
 16928 ;;		On exit  : 0/0
 16929 ;;		Unchanged: 0/0
 16930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16935 ;;Total ram usage:        1 bytes
 16936 ;; Hardware stack levels used:    1
 16937 ;; Hardware stack levels required when called:    4
 16938 ;; This function calls:
 16939 ;;		Nothing
 16940 ;; This function is called by:
 16941 ;;		_lcd_send
 16942 ;;		_SPI_WriteBlock
 16943 ;;		_SPI_ReadBlock
 16944 ;; This function uses a non-reentrant model
 16945 ;;
 16946                           
 16947                           	psect	text55
 16948  005E6C                     __ptext55:
 16949                           	opt callstack 0
 16950  005E6C                     _SPI_ExchangeByte:
 16951                           	opt callstack 24
 16952                           
 16953                           ;incstack = 0
 16954                           ;SPI_ExchangeByte@data stored from wreg
 16955  005E6C  6E03               	movwf	SPI_ExchangeByte@data^0,c
 16956  005E6E                     
 16957                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 16958  005E6E  C003  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 16959  005E72                     l130:
 16960  005E72  A69E               	btfss	158,3,c	;volatile
 16961  005E74  EF3E  F02F         	goto	u4761
 16962  005E78  EF40  F02F         	goto	u4760
 16963  005E7C                     u4761:
 16964  005E7C  EF39  F02F         	goto	l130
 16965  005E80                     u4760:
 16966  005E80                     
 16967                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 16968  005E80  969E               	bcf	158,3,c	;volatile
 16969                           
 16970                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 16971  005E82  50C9               	movf	201,w,c	;volatile
 16972  005E84  0012               	return		;funcret
 16973  005E86                     __end_of_SPI_ExchangeByte:
 16974                           	opt callstack 0
 16975                           
 16976 ;; *************** function ___xxtofl *****************
 16977 ;; Defined at:
 16978 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 16979 ;; Parameters:    Size  Location     Type
 16980 ;;  sign            1    wreg     unsigned char 
 16981 ;;  val             4    2[COMRAM] long 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;  sign            1   10[COMRAM] unsigned char 
 16984 ;;  arg             4   12[COMRAM] unsigned long 
 16985 ;;  exp             1   11[COMRAM] unsigned char 
 16986 ;; Return value:  Size  Location     Type
 16987 ;;                  4    2[COMRAM] unsigned char 
 16988 ;; Registers used:
 16989 ;;		wreg, status,2, status,0
 16990 ;; Tracked objects:
 16991 ;;		On entry : 0/0
 16992 ;;		On exit  : 0/0
 16993 ;;		Unchanged: 0/0
 16994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16998 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16999 ;;Total ram usage:       14 bytes
 17000 ;; Hardware stack levels used:    1
 17001 ;; Hardware stack levels required when called:    4
 17002 ;; This function calls:
 17003 ;;		Nothing
 17004 ;; This function is called by:
 17005 ;;		_main
 17006 ;; This function uses a non-reentrant model
 17007 ;;
 17008                           
 17009                           	psect	text56
 17010  0040F2                     __ptext56:
 17011                           	opt callstack 0
 17012  0040F2                     ___xxtofl:
 17013                           	opt callstack 26
 17014                           
 17015                           ;incstack = 0
 17016                           ;___xxtofl@sign stored from wreg
 17017  0040F2  6E0B               	movwf	___xxtofl@sign^0,c
 17018  0040F4  500B               	movf	___xxtofl@sign^0,w,c
 17019  0040F6  B4D8               	btfsc	status,2,c
 17020  0040F8  EF80  F020         	goto	u8211
 17021  0040FC  EF82  F020         	goto	u8210
 17022  004100                     u8211:
 17023  004100  EFA4  F020         	goto	l1464
 17024  004104                     u8210:
 17025  004104  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 17026  004106  EF89  F020         	goto	u8220
 17027  00410A  EF87  F020         	goto	u8221
 17028  00410E                     u8221:
 17029  00410E  EFA4  F020         	goto	l1464
 17030  004112                     u8220:
 17031  004112  C003  F007         	movff	___xxtofl@val,??___xxtofl
 17032  004116  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 17033  00411A  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 17034  00411E  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 17035  004122  1E07               	comf	??___xxtofl^0,f,c
 17036  004124  1E08               	comf	(??___xxtofl+1)^0,f,c
 17037  004126  1E09               	comf	(??___xxtofl+2)^0,f,c
 17038  004128  1E0A               	comf	(??___xxtofl+3)^0,f,c
 17039  00412A  2A07               	incf	??___xxtofl^0,f,c
 17040  00412C  0E00               	movlw	0
 17041  00412E  2208               	addwfc	(??___xxtofl+1)^0,f,c
 17042  004130  2209               	addwfc	(??___xxtofl+2)^0,f,c
 17043  004132  220A               	addwfc	(??___xxtofl+3)^0,f,c
 17044  004134  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 17045  004138  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 17046  00413C  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 17047  004140  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 17048  004144  EFAC  F020         	goto	l6874
 17049  004148                     l1464:
 17050  004148  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 17051  00414C  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17052  004150  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17053  004154  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17054  004158                     l6874:
 17055  004158  5003               	movf	___xxtofl@val^0,w,c
 17056  00415A  1004               	iorwf	(___xxtofl@val+1)^0,w,c
 17057  00415C  1005               	iorwf	(___xxtofl@val+2)^0,w,c
 17058  00415E  1006               	iorwf	(___xxtofl@val+3)^0,w,c
 17059  004160  A4D8               	btfss	status,2,c
 17060  004162  EFB5  F020         	goto	u8231
 17061  004166  EFB7  F020         	goto	u8230
 17062  00416A                     u8231:
 17063  00416A  EFC1  F020         	goto	l6880
 17064  00416E                     u8230:
 17065  00416E  0E00               	movlw	0
 17066  004170  6E03               	movwf	?___xxtofl^0,c
 17067  004172  0E00               	movlw	0
 17068  004174  6E04               	movwf	(?___xxtofl+1)^0,c
 17069  004176  0E00               	movlw	0
 17070  004178  6E05               	movwf	(?___xxtofl+2)^0,c
 17071  00417A  0E00               	movlw	0
 17072  00417C  6E06               	movwf	(?___xxtofl+3)^0,c
 17073  00417E  EF52  F021         	goto	l1467
 17074  004182                     l6880:
 17075  004182  0E96               	movlw	150
 17076  004184  6E0C               	movwf	___xxtofl@exp^0,c
 17077  004186  EFCB  F020         	goto	l6884
 17078  00418A                     l6882:
 17079  00418A  2A0C               	incf	___xxtofl@exp^0,f,c
 17080  00418C  90D8               	bcf	status,0,c
 17081  00418E  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 17082  004190  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 17083  004192  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 17084  004194  320D               	rrcf	___xxtofl@arg^0,f,c
 17085  004196                     l6884:
 17086  004196  0E00               	movlw	0
 17087  004198  140D               	andwf	___xxtofl@arg^0,w,c
 17088  00419A  6E07               	movwf	??___xxtofl^0,c
 17089  00419C  0E00               	movlw	0
 17090  00419E  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 17091  0041A0  6E08               	movwf	(??___xxtofl+1)^0,c
 17092  0041A2  0E00               	movlw	0
 17093  0041A4  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 17094  0041A6  6E09               	movwf	(??___xxtofl+2)^0,c
 17095  0041A8  0EFE               	movlw	254
 17096  0041AA  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 17097  0041AC  6E0A               	movwf	(??___xxtofl+3)^0,c
 17098  0041AE  5007               	movf	??___xxtofl^0,w,c
 17099  0041B0  1008               	iorwf	(??___xxtofl+1)^0,w,c
 17100  0041B2  1009               	iorwf	(??___xxtofl+2)^0,w,c
 17101  0041B4  100A               	iorwf	(??___xxtofl+3)^0,w,c
 17102  0041B6  A4D8               	btfss	status,2,c
 17103  0041B8  EFE0  F020         	goto	u8241
 17104  0041BC  EFE2  F020         	goto	u8240
 17105  0041C0                     u8241:
 17106  0041C0  EFC5  F020         	goto	l6882
 17107  0041C4                     u8240:
 17108  0041C4  EFF0  F020         	goto	l1471
 17109  0041C8                     l6886:
 17110  0041C8  2A0C               	incf	___xxtofl@exp^0,f,c
 17111  0041CA  0E01               	movlw	1
 17112  0041CC  260D               	addwf	___xxtofl@arg^0,f,c
 17113  0041CE  0E00               	movlw	0
 17114  0041D0  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
 17115  0041D2  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
 17116  0041D4  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
 17117  0041D6  90D8               	bcf	status,0,c
 17118  0041D8  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 17119  0041DA  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 17120  0041DC  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 17121  0041DE  320D               	rrcf	___xxtofl@arg^0,f,c
 17122  0041E0                     l1471:
 17123  0041E0  0E00               	movlw	0
 17124  0041E2  140D               	andwf	___xxtofl@arg^0,w,c
 17125  0041E4  6E07               	movwf	??___xxtofl^0,c
 17126  0041E6  0E00               	movlw	0
 17127  0041E8  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 17128  0041EA  6E08               	movwf	(??___xxtofl+1)^0,c
 17129  0041EC  0E00               	movlw	0
 17130  0041EE  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 17131  0041F0  6E09               	movwf	(??___xxtofl+2)^0,c
 17132  0041F2  0EFF               	movlw	255
 17133  0041F4  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 17134  0041F6  6E0A               	movwf	(??___xxtofl+3)^0,c
 17135  0041F8  5007               	movf	??___xxtofl^0,w,c
 17136  0041FA  1008               	iorwf	(??___xxtofl+1)^0,w,c
 17137  0041FC  1009               	iorwf	(??___xxtofl+2)^0,w,c
 17138  0041FE  100A               	iorwf	(??___xxtofl+3)^0,w,c
 17139  004200  A4D8               	btfss	status,2,c
 17140  004202  EF05  F021         	goto	u8251
 17141  004206  EF07  F021         	goto	u8250
 17142  00420A                     u8251:
 17143  00420A  EFE4  F020         	goto	l6886
 17144  00420E                     u8250:
 17145  00420E  EF0F  F021         	goto	l6894
 17146  004212                     l6892:
 17147  004212  060C               	decf	___xxtofl@exp^0,f,c
 17148  004214  90D8               	bcf	status,0,c
 17149  004216  360D               	rlcf	___xxtofl@arg^0,f,c
 17150  004218  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
 17151  00421A  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
 17152  00421C  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
 17153  00421E                     l6894:
 17154  00421E  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
 17155  004220  EF14  F021         	goto	u8261
 17156  004224  EF16  F021         	goto	u8260
 17157  004228                     u8261:
 17158  004228  EF1E  F021         	goto	l1478
 17159  00422C                     u8260:
 17160  00422C  0E02               	movlw	2
 17161  00422E  600C               	cpfslt	___xxtofl@exp^0,c
 17162  004230  EF1C  F021         	goto	u8271
 17163  004234  EF1E  F021         	goto	u8270
 17164  004238                     u8271:
 17165  004238  EF09  F021         	goto	l6892
 17166  00423C                     u8270:
 17167  00423C                     l1478:
 17168  00423C  B00C               	btfsc	___xxtofl@exp^0,0,c
 17169  00423E  EF23  F021         	goto	u8281
 17170  004242  EF25  F021         	goto	u8280
 17171  004246                     u8281:
 17172  004246  EF26  F021         	goto	l6900
 17173  00424A                     u8280:
 17174  00424A  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
 17175  00424C                     l6900:
 17176  00424C  90D8               	bcf	status,0,c
 17177  00424E  320C               	rrcf	___xxtofl@exp^0,f,c
 17178  004250  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 17179  004254  6A08               	clrf	(??___xxtofl+1)^0,c
 17180  004256  6A09               	clrf	(??___xxtofl+2)^0,c
 17181  004258  6A0A               	clrf	(??___xxtofl+3)^0,c
 17182  00425A  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 17183  00425E  6A09               	clrf	(??___xxtofl+2)^0,c
 17184  004260  6A08               	clrf	(??___xxtofl+1)^0,c
 17185  004262  6A07               	clrf	??___xxtofl^0,c
 17186  004264  5007               	movf	??___xxtofl^0,w,c
 17187  004266  120D               	iorwf	___xxtofl@arg^0,f,c
 17188  004268  5008               	movf	(??___xxtofl+1)^0,w,c
 17189  00426A  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
 17190  00426C  5009               	movf	(??___xxtofl+2)^0,w,c
 17191  00426E  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
 17192  004270  500A               	movf	(??___xxtofl+3)^0,w,c
 17193  004272  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
 17194  004274  500B               	movf	___xxtofl@sign^0,w,c
 17195  004276  B4D8               	btfsc	status,2,c
 17196  004278  EF40  F021         	goto	u8291
 17197  00427C  EF42  F021         	goto	u8290
 17198  004280                     u8291:
 17199  004280  EF4A  F021         	goto	l6910
 17200  004284                     u8290:
 17201  004284  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 17202  004286  EF49  F021         	goto	u8300
 17203  00428A  EF47  F021         	goto	u8301
 17204  00428E                     u8301:
 17205  00428E  EF4A  F021         	goto	l6910
 17206  004292                     u8300:
 17207  004292  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
 17208  004294                     l6910:
 17209  004294  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 17210  004298  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 17211  00429C  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 17212  0042A0  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 17213  0042A4                     l1467:
 17214  0042A4  0012               	return		;funcret
 17215  0042A6                     __end_of___xxtofl:
 17216                           	opt callstack 0
 17217                           
 17218 ;; *************** function _SYSTEM_Initialize *****************
 17219 ;; Defined at:
 17220 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17221 ;; Parameters:    Size  Location     Type
 17222 ;;		None
 17223 ;; Auto vars:     Size  Location     Type
 17224 ;;		None
 17225 ;; Return value:  Size  Location     Type
 17226 ;;                  1    wreg      void 
 17227 ;; Registers used:
 17228 ;;		wreg, status,2, status,0, cstack
 17229 ;; Tracked objects:
 17230 ;;		On entry : 0/0
 17231 ;;		On exit  : 0/0
 17232 ;;		Unchanged: 0/0
 17233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17238 ;;Total ram usage:        0 bytes
 17239 ;; Hardware stack levels used:    1
 17240 ;; Hardware stack levels required when called:    6
 17241 ;; This function calls:
 17242 ;;		_ADC_Initialize
 17243 ;;		_INTERRUPT_Initialize
 17244 ;;		_OSCILLATOR_Initialize
 17245 ;;		_PIN_MANAGER_Initialize
 17246 ;;		_SPI_Initialize
 17247 ;;		_TMR1_Initialize
 17248 ;; This function is called by:
 17249 ;;		_main
 17250 ;; This function uses a non-reentrant model
 17251 ;;
 17252                           
 17253                           	psect	text57
 17254  005E86                     __ptext57:
 17255                           	opt callstack 0
 17256  005E86                     _SYSTEM_Initialize:
 17257                           	opt callstack 24
 17258  005E86                     
 17259                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 17260  005E86  EC99  F02F         	call	_INTERRUPT_Initialize	;wreg free
 17261  005E8A                     
 17262                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 17263  005E8A  EC7E  F02F         	call	_SPI_Initialize	;wreg free
 17264  005E8E                     
 17265                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17266  005E8E  EC5F  F02D         	call	_PIN_MANAGER_Initialize	;wreg free
 17267  005E92                     
 17268                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17269  005E92  EC87  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 17270  005E96                     
 17271                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 17272  005E96  EC0D  F02F         	call	_TMR1_Initialize	;wreg free
 17273  005E9A                     
 17274                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 17275  005E9A  EC73  F02F         	call	_ADC_Initialize	;wreg free
 17276  005E9E  0012               	return		;funcret
 17277  005EA0                     __end_of_SYSTEM_Initialize:
 17278                           	opt callstack 0
 17279                           
 17280 ;; *************** function _TMR1_Initialize *****************
 17281 ;; Defined at:
 17282 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17283 ;; Parameters:    Size  Location     Type
 17284 ;;		None
 17285 ;; Auto vars:     Size  Location     Type
 17286 ;;		None
 17287 ;; Return value:  Size  Location     Type
 17288 ;;                  1    wreg      void 
 17289 ;; Registers used:
 17290 ;;		wreg, status,2, status,0
 17291 ;; Tracked objects:
 17292 ;;		On entry : 0/0
 17293 ;;		On exit  : 0/0
 17294 ;;		Unchanged: 0/0
 17295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17298 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17300 ;;Total ram usage:        2 bytes
 17301 ;; Hardware stack levels used:    1
 17302 ;; Hardware stack levels required when called:    4
 17303 ;; This function calls:
 17304 ;;		Nothing
 17305 ;; This function is called by:
 17306 ;;		_SYSTEM_Initialize
 17307 ;; This function uses a non-reentrant model
 17308 ;;
 17309                           
 17310                           	psect	text58
 17311  005E1A                     __ptext58:
 17312                           	opt callstack 0
 17313  005E1A                     _TMR1_Initialize:
 17314                           	opt callstack 25
 17315  005E1A                     
 17316                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17317  005E1A  0E00               	movlw	0
 17318  005E1C  6EAA               	movwf	170,c	;volatile
 17319                           
 17320                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 17321  005E1E  0E0B               	movlw	11
 17322  005E20  6ECF               	movwf	207,c	;volatile
 17323                           
 17324                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 17325  005E22  0EDC               	movlw	220
 17326  005E24  6ECE               	movwf	206,c	;volatile
 17327  005E26                     
 17328                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 17329  005E26  909E               	bcf	158,0,c	;volatile
 17330  005E28                     
 17331                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17332  005E28  50CE               	movf	206,w,c	;volatile
 17333  005E2A  CFCF F003          	movff	4047,??_TMR1_Initialize	;volatile
 17334  005E2E  6A04               	clrf	(??_TMR1_Initialize+1)^0,c
 17335  005E30  C003  F004         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17336  005E34  6A03               	clrf	??_TMR1_Initialize^0,c
 17337  005E36  1003               	iorwf	??_TMR1_Initialize^0,w,c
 17338  005E38  0101               	movlb	1	; () banked
 17339  005E3A  6FFB               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17340  005E3C  5004               	movf	(??_TMR1_Initialize+1)^0,w,c
 17341  005E3E  6FFC               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17342  005E40                     
 17343                           ; BSR set to: 1
 17344                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 17345  005E40  0E31               	movlw	49
 17346  005E42  6ECD               	movwf	205,c	;volatile
 17347  005E44                     
 17348                           ; BSR set to: 1
 17349  005E44  0012               	return		;funcret
 17350  005E46                     __end_of_TMR1_Initialize:
 17351                           	opt callstack 0
 17352                           
 17353 ;; *************** function _SPI_Initialize *****************
 17354 ;; Defined at:
 17355 ;;		line 62 in file "mcc_generated_files/spi.c"
 17356 ;; Parameters:    Size  Location     Type
 17357 ;;		None
 17358 ;; Auto vars:     Size  Location     Type
 17359 ;;		None
 17360 ;; Return value:  Size  Location     Type
 17361 ;;                  1    wreg      void 
 17362 ;; Registers used:
 17363 ;;		wreg, status,2
 17364 ;; Tracked objects:
 17365 ;;		On entry : 0/0
 17366 ;;		On exit  : 0/0
 17367 ;;		Unchanged: 0/0
 17368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17373 ;;Total ram usage:        0 bytes
 17374 ;; Hardware stack levels used:    1
 17375 ;; Hardware stack levels required when called:    4
 17376 ;; This function calls:
 17377 ;;		Nothing
 17378 ;; This function is called by:
 17379 ;;		_SYSTEM_Initialize
 17380 ;; This function uses a non-reentrant model
 17381 ;;
 17382                           
 17383                           	psect	text59
 17384  005EFC                     __ptext59:
 17385                           	opt callstack 0
 17386  005EFC                     _SPI_Initialize:
 17387                           	opt callstack 25
 17388  005EFC                     
 17389                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 17390  005EFC  0E40               	movlw	64
 17391  005EFE  6EC7               	movwf	199,c	;volatile
 17392                           
 17393                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 17394  005F00  0E00               	movlw	0
 17395  005F02  6EC6               	movwf	198,c	;volatile
 17396                           
 17397                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 17398  005F04  0E01               	movlw	1
 17399  005F06  6EC8               	movwf	200,c	;volatile
 17400  005F08                     
 17401                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 17402  005F08  9694               	bcf	148,3,c	;volatile
 17403  005F0A                     
 17404                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 17405  005F0A  9AC6               	bcf	198,5,c	;volatile
 17406  005F0C  0012               	return		;funcret
 17407  005F0E                     __end_of_SPI_Initialize:
 17408                           	opt callstack 0
 17409                           
 17410 ;; *************** function _PIN_MANAGER_Initialize *****************
 17411 ;; Defined at:
 17412 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;		None
 17415 ;; Auto vars:     Size  Location     Type
 17416 ;;		None
 17417 ;; Return value:  Size  Location     Type
 17418 ;;                  1    wreg      void 
 17419 ;; Registers used:
 17420 ;;		wreg, status,2, status,0, cstack
 17421 ;; Tracked objects:
 17422 ;;		On entry : 0/0
 17423 ;;		On exit  : 0/0
 17424 ;;		Unchanged: 0/0
 17425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17430 ;;Total ram usage:        0 bytes
 17431 ;; Hardware stack levels used:    1
 17432 ;; Hardware stack levels required when called:    5
 17433 ;; This function calls:
 17434 ;;		_IOCB4_SetInterruptHandler
 17435 ;; This function is called by:
 17436 ;;		_SYSTEM_Initialize
 17437 ;; This function uses a non-reentrant model
 17438 ;;
 17439                           
 17440                           	psect	text60
 17441  005ABE                     __ptext60:
 17442                           	opt callstack 0
 17443  005ABE                     _PIN_MANAGER_Initialize:
 17444                           	opt callstack 24
 17445  005ABE                     
 17446                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 17447  005ABE  0E00               	movlw	0
 17448  005AC0  6E8D               	movwf	141,c	;volatile
 17449                           
 17450                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17451  005AC2  0E00               	movlw	0
 17452  005AC4  6E8C               	movwf	140,c	;volatile
 17453                           
 17454                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17455  005AC6  0E00               	movlw	0
 17456  005AC8  6E89               	movwf	137,c	;volatile
 17457                           
 17458                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 17459  005ACA  0E00               	movlw	0
 17460  005ACC  6E8A               	movwf	138,c	;volatile
 17461                           
 17462                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 17463  005ACE  0E00               	movlw	0
 17464  005AD0  6E8B               	movwf	139,c	;volatile
 17465                           
 17466                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 17467  005AD2  0E04               	movlw	4
 17468  005AD4  6E96               	movwf	150,c	;volatile
 17469                           
 17470                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 17471  005AD6  0E0F               	movlw	15
 17472  005AD8  6E92               	movwf	146,c	;volatile
 17473  005ADA                     
 17474                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 17475  005ADA  6893               	setf	147,c	;volatile
 17476                           
 17477                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 17478  005ADC  0ED7               	movlw	215
 17479  005ADE  6E94               	movwf	148,c	;volatile
 17480  005AE0                     
 17481                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 17482  005AE0  6895               	setf	149,c	;volatile
 17483                           
 17484                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
 17485  005AE2  0E87               	movlw	135
 17486  005AE4  010F               	movlb	15	; () banked
 17487  005AE6  6F5D               	movwf	93,b	;volatile
 17488                           
 17489                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 17490  005AE8  0E7D               	movlw	125
 17491  005AEA  6F5C               	movwf	92,b	;volatile
 17492                           
 17493                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17494  005AEC  0E00               	movlw	0
 17495  005AEE  6F5B               	movwf	91,b	;volatile
 17496  005AF0                     
 17497                           ; BSR set to: 15
 17498                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 17499  005AF0  8EF1               	bsf	241,7,c	;volatile
 17500  005AF2                     
 17501                           ; BSR set to: 15
 17502                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 17503  005AF2  895A               	bsf	90,4,b	;volatile
 17504  005AF4                     
 17505                           ; BSR set to: 15
 17506                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 17507  005AF4  0E38               	movlw	low _IOCB4_DefaultInterruptHandler
 17508  005AF6  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 17509  005AF8  0E5F               	movlw	high _IOCB4_DefaultInterruptHandler
 17510  005AFA  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 17511  005AFC  EC90  F02F         	call	_IOCB4_SetInterruptHandler	;wreg free
 17512  005B00                     
 17513                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 17514  005B00  86F2               	bsf	242,3,c	;volatile
 17515  005B02  0012               	return		;funcret
 17516  005B04                     __end_of_PIN_MANAGER_Initialize:
 17517                           	opt callstack 0
 17518                           
 17519 ;; *************** function _IOCB4_SetInterruptHandler *****************
 17520 ;; Defined at:
 17521 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 17522 ;; Parameters:    Size  Location     Type
 17523 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 17524 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 17525 ;; Auto vars:     Size  Location     Type
 17526 ;;		None
 17527 ;; Return value:  Size  Location     Type
 17528 ;;                  1    wreg      void 
 17529 ;; Registers used:
 17530 ;;		wreg, status,2, status,0
 17531 ;; Tracked objects:
 17532 ;;		On entry : 0/0
 17533 ;;		On exit  : 0/0
 17534 ;;		Unchanged: 0/0
 17535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17540 ;;Total ram usage:        2 bytes
 17541 ;; Hardware stack levels used:    1
 17542 ;; Hardware stack levels required when called:    4
 17543 ;; This function calls:
 17544 ;;		Nothing
 17545 ;; This function is called by:
 17546 ;;		_PIN_MANAGER_Initialize
 17547 ;;		_main
 17548 ;; This function uses a non-reentrant model
 17549 ;;
 17550                           
 17551                           	psect	text61
 17552  005F20                     __ptext61:
 17553                           	opt callstack 0
 17554  005F20                     _IOCB4_SetInterruptHandler:
 17555                           	opt callstack 24
 17556  005F20                     
 17557                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 17558  005F20  C003  F1FD         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 17559  005F24  C004  F1FE         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 17560  005F28  0012               	return		;funcret
 17561  005F2A                     __end_of_IOCB4_SetInterruptHandler:
 17562                           	opt callstack 0
 17563                           
 17564 ;; *************** function _OSCILLATOR_Initialize *****************
 17565 ;; Defined at:
 17566 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17567 ;; Parameters:    Size  Location     Type
 17568 ;;		None
 17569 ;; Auto vars:     Size  Location     Type
 17570 ;;		None
 17571 ;; Return value:  Size  Location     Type
 17572 ;;                  1    wreg      void 
 17573 ;; Registers used:
 17574 ;;		wreg, status,2
 17575 ;; Tracked objects:
 17576 ;;		On entry : 0/0
 17577 ;;		On exit  : 0/0
 17578 ;;		Unchanged: 0/0
 17579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17584 ;;Total ram usage:        0 bytes
 17585 ;; Hardware stack levels used:    1
 17586 ;; Hardware stack levels required when called:    4
 17587 ;; This function calls:
 17588 ;;		Nothing
 17589 ;; This function is called by:
 17590 ;;		_SYSTEM_Initialize
 17591 ;; This function uses a non-reentrant model
 17592 ;;
 17593                           
 17594                           	psect	text62
 17595  005F0E                     __ptext62:
 17596                           	opt callstack 0
 17597  005F0E                     _OSCILLATOR_Initialize:
 17598                           	opt callstack 25
 17599  005F0E                     
 17600                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x62;
 17601  005F0E  0E62               	movlw	98
 17602  005F10  6ED3               	movwf	211,c	;volatile
 17603                           
 17604                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
 17605  005F12  0E00               	movlw	0
 17606  005F14  6ED2               	movwf	210,c	;volatile
 17607                           
 17608                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
 17609  005F16  0E00               	movlw	0
 17610  005F18  6E9B               	movwf	155,c	;volatile
 17611                           
 17612                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
 17613  005F1A  0E00               	movlw	0
 17614  005F1C  6E9A               	movwf	154,c	;volatile
 17615  005F1E  0012               	return		;funcret
 17616  005F20                     __end_of_OSCILLATOR_Initialize:
 17617                           	opt callstack 0
 17618                           
 17619 ;; *************** function _INTERRUPT_Initialize *****************
 17620 ;; Defined at:
 17621 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17622 ;; Parameters:    Size  Location     Type
 17623 ;;		None
 17624 ;; Auto vars:     Size  Location     Type
 17625 ;;		None
 17626 ;; Return value:  Size  Location     Type
 17627 ;;                  1    wreg      void 
 17628 ;; Registers used:
 17629 ;;		None
 17630 ;; Tracked objects:
 17631 ;;		On entry : 0/0
 17632 ;;		On exit  : 0/0
 17633 ;;		Unchanged: 0/0
 17634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17639 ;;Total ram usage:        0 bytes
 17640 ;; Hardware stack levels used:    1
 17641 ;; Hardware stack levels required when called:    4
 17642 ;; This function calls:
 17643 ;;		Nothing
 17644 ;; This function is called by:
 17645 ;;		_SYSTEM_Initialize
 17646 ;; This function uses a non-reentrant model
 17647 ;;
 17648                           
 17649                           	psect	text63
 17650  005F32                     __ptext63:
 17651                           	opt callstack 0
 17652  005F32                     _INTERRUPT_Initialize:
 17653                           	opt callstack 25
 17654  005F32                     
 17655                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 17656  005F32  9ED0               	bcf	208,7,c	;volatile
 17657  005F34  0012               	return		;funcret
 17658  005F36                     __end_of_INTERRUPT_Initialize:
 17659                           	opt callstack 0
 17660                           
 17661 ;; *************** function _ADC_Initialize *****************
 17662 ;; Defined at:
 17663 ;;		line 62 in file "mcc_generated_files/adc.c"
 17664 ;; Parameters:    Size  Location     Type
 17665 ;;		None
 17666 ;; Auto vars:     Size  Location     Type
 17667 ;;		None
 17668 ;; Return value:  Size  Location     Type
 17669 ;;                  1    wreg      void 
 17670 ;; Registers used:
 17671 ;;		wreg, status,2
 17672 ;; Tracked objects:
 17673 ;;		On entry : 0/0
 17674 ;;		On exit  : 0/0
 17675 ;;		Unchanged: 0/0
 17676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17681 ;;Total ram usage:        0 bytes
 17682 ;; Hardware stack levels used:    1
 17683 ;; Hardware stack levels required when called:    4
 17684 ;; This function calls:
 17685 ;;		Nothing
 17686 ;; This function is called by:
 17687 ;;		_SYSTEM_Initialize
 17688 ;; This function uses a non-reentrant model
 17689 ;;
 17690                           
 17691                           	psect	text64
 17692  005EE6                     __ptext64:
 17693                           	opt callstack 0
 17694  005EE6                     _ADC_Initialize:
 17695                           	opt callstack 25
 17696  005EE6                     
 17697                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 17698  005EE6  0E01               	movlw	1
 17699  005EE8  6EC2               	movwf	194,c	;volatile
 17700                           
 17701                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 17702  005EEA  0E80               	movlw	128
 17703  005EEC  6EC1               	movwf	193,c	;volatile
 17704                           
 17705                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 17706  005EEE  0EAD               	movlw	173
 17707  005EF0  6EC0               	movwf	192,c	;volatile
 17708                           
 17709                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 17710  005EF2  0E00               	movlw	0
 17711  005EF4  6EC4               	movwf	196,c	;volatile
 17712                           
 17713                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 17714  005EF6  0E00               	movlw	0
 17715  005EF8  6EC3               	movwf	195,c	;volatile
 17716  005EFA  0012               	return		;funcret
 17717  005EFC                     __end_of_ADC_Initialize:
 17718                           	opt callstack 0
 17719                           
 17720 ;; *************** function _SPI_Open *****************
 17721 ;; Defined at:
 17722 ;;		line 72 in file "mcc_generated_files/spi.c"
 17723 ;; Parameters:    Size  Location     Type
 17724 ;;  spiUniqueCon    1    wreg     enum E353
 17725 ;; Auto vars:     Size  Location     Type
 17726 ;;  spiUniqueCon    1    3[COMRAM] enum E353
 17727 ;; Return value:  Size  Location     Type
 17728 ;;                  1    wreg      _Bool 
 17729 ;; Registers used:
 17730 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17731 ;; Tracked objects:
 17732 ;;		On entry : 0/0
 17733 ;;		On exit  : 0/0
 17734 ;;		Unchanged: 0/0
 17735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17740 ;;Total ram usage:        2 bytes
 17741 ;; Hardware stack levels used:    1
 17742 ;; Hardware stack levels required when called:    4
 17743 ;; This function calls:
 17744 ;;		Nothing
 17745 ;; This function is called by:
 17746 ;;		_main
 17747 ;; This function uses a non-reentrant model
 17748 ;;
 17749                           
 17750                           	psect	text65
 17751  005586                     __ptext65:
 17752                           	opt callstack 0
 17753  005586                     _SPI_Open:
 17754                           	opt callstack 26
 17755                           
 17756                           ;incstack = 0
 17757                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 17758  005586  6E04               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 17759  005588                     
 17760                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 17761  005588  BAC6               	btfsc	198,5,c	;volatile
 17762  00558A  EFC9  F02A         	goto	u8061
 17763  00558E  EFCB  F02A         	goto	u8060
 17764  005592                     u8061:
 17765  005592  EF1A  F02B         	goto	l124
 17766  005596                     u8060:
 17767  005596                     
 17768                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 17769  005596  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17770  005598  0D04               	mullw	4
 17771  00559A  0E01               	movlw	1
 17772  00559C  26F3               	addwf	243,f,c
 17773  00559E  0E00               	movlw	0
 17774  0055A0  22F4               	addwfc	244,f,c
 17775  0055A2  0E73               	movlw	low _spi_configuration
 17776  0055A4  24F3               	addwf	243,w,c
 17777  0055A6  6EF6               	movwf	tblptrl,c
 17778  0055A8  0EFF               	movlw	high _spi_configuration
 17779  0055AA  20F4               	addwfc	244,w,c
 17780  0055AC  6EF7               	movwf	tblptrh,c
 17781  0055AE                     	if	1	;There are 3 active tblptr bytes
 17782  0055AE  6AF8               	clrf	tblptru,c
 17783  0055B0  0E00               	movlw	low (__mediumconst shr (0+16))
 17784  0055B2  22F8               	addwfc	tblptru,f,c
 17785  0055B4                     	endif
 17786  0055B4  0008               	tblrd		*
 17787  0055B6  CFF5 FFC7          	movff	tablat,4039	;volatile
 17788                           
 17789                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 17790  0055BA  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17791  0055BC  0D04               	mullw	4
 17792  0055BE  0E73               	movlw	low _spi_configuration
 17793  0055C0  24F3               	addwf	243,w,c
 17794  0055C2  6EF6               	movwf	tblptrl,c
 17795  0055C4  0EFF               	movlw	high _spi_configuration
 17796  0055C6  20F4               	addwfc	244,w,c
 17797  0055C8  6EF7               	movwf	tblptrh,c
 17798  0055CA                     	if	1	;There are 3 active tblptr bytes
 17799  0055CA  6AF8               	clrf	tblptru,c
 17800  0055CC  0E00               	movlw	low (__mediumconst shr (0+16))
 17801  0055CE  22F8               	addwfc	tblptru,f,c
 17802  0055D0                     	endif
 17803  0055D0  0008               	tblrd		*
 17804  0055D2  CFF5 FFC6          	movff	tablat,4038	;volatile
 17805  0055D6                     
 17806                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 17807  0055D6  0E00               	movlw	0
 17808  0055D8  6EC5               	movwf	197,c	;volatile
 17809  0055DA                     
 17810                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 17811  0055DA  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17812  0055DC  0D04               	mullw	4
 17813  0055DE  0E02               	movlw	2
 17814  0055E0  26F3               	addwf	243,f,c
 17815  0055E2  0E00               	movlw	0
 17816  0055E4  22F4               	addwfc	244,f,c
 17817  0055E6  0E73               	movlw	low _spi_configuration
 17818  0055E8  24F3               	addwf	243,w,c
 17819  0055EA  6EF6               	movwf	tblptrl,c
 17820  0055EC  0EFF               	movlw	high _spi_configuration
 17821  0055EE  20F4               	addwfc	244,w,c
 17822  0055F0  6EF7               	movwf	tblptrh,c
 17823  0055F2                     	if	1	;There are 3 active tblptr bytes
 17824  0055F2  6AF8               	clrf	tblptru,c
 17825  0055F4  0E00               	movlw	low (__mediumconst shr (0+16))
 17826  0055F6  22F8               	addwfc	tblptru,f,c
 17827  0055F8                     	endif
 17828  0055F8  0008               	tblrd		*
 17829  0055FA  CFF5 FFC8          	movff	tablat,4040	;volatile
 17830  0055FE                     
 17831                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 17832  0055FE  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17833  005600  0D04               	mullw	4
 17834  005602  0E03               	movlw	3
 17835  005604  26F3               	addwf	243,f,c
 17836  005606  0E00               	movlw	0
 17837  005608  22F4               	addwfc	244,f,c
 17838  00560A  0E73               	movlw	low _spi_configuration
 17839  00560C  24F3               	addwf	243,w,c
 17840  00560E  6EF6               	movwf	tblptrl,c
 17841  005610  0EFF               	movlw	high _spi_configuration
 17842  005612  20F4               	addwfc	244,w,c
 17843  005614  6EF7               	movwf	tblptrh,c
 17844  005616                     	if	1	;There are 3 active tblptr bytes
 17845  005616  6AF8               	clrf	tblptru,c
 17846  005618  0E00               	movlw	low (__mediumconst shr (0+16))
 17847  00561A  22F8               	addwfc	tblptru,f,c
 17848  00561C                     	endif
 17849  00561C  0008               	tblrd		*
 17850  00561E  CFF5 F003          	movff	tablat,??_SPI_Open
 17851  005622  4603               	rlncf	??_SPI_Open^0,f,c
 17852  005624  4603               	rlncf	??_SPI_Open^0,f,c
 17853  005626  4603               	rlncf	??_SPI_Open^0,f,c
 17854  005628  5094               	movf	148,w,c	;volatile
 17855  00562A  1803               	xorwf	??_SPI_Open^0,w,c
 17856  00562C  0BF7               	andlw	-9
 17857  00562E  1803               	xorwf	??_SPI_Open^0,w,c
 17858  005630  6E94               	movwf	148,c	;volatile
 17859  005632                     
 17860                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 17861  005632  8AC6               	bsf	198,5,c	;volatile
 17862  005634                     l124:
 17863  005634  0012               	return		;funcret
 17864  005636                     __end_of_SPI_Open:
 17865                           	opt callstack 0
 17866                           
 17867 ;; *************** function _ADC_GetConversion *****************
 17868 ;; Defined at:
 17869 ;;		line 108 in file "mcc_generated_files/adc.c"
 17870 ;; Parameters:    Size  Location     Type
 17871 ;;  channel         1    wreg     enum E12385
 17872 ;; Auto vars:     Size  Location     Type
 17873 ;;  channel         1    6[COMRAM] enum E12385
 17874 ;; Return value:  Size  Location     Type
 17875 ;;                  2    2[COMRAM] unsigned short 
 17876 ;; Registers used:
 17877 ;;		wreg, status,2, status,0
 17878 ;; Tracked objects:
 17879 ;;		On entry : 0/0
 17880 ;;		On exit  : 0/0
 17881 ;;		Unchanged: 0/0
 17882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17886 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17887 ;;Total ram usage:        5 bytes
 17888 ;; Hardware stack levels used:    1
 17889 ;; Hardware stack levels required when called:    4
 17890 ;; This function calls:
 17891 ;;		Nothing
 17892 ;; This function is called by:
 17893 ;;		_main
 17894 ;; This function uses a non-reentrant model
 17895 ;;
 17896                           
 17897                           	psect	text66
 17898  005C06                     __ptext66:
 17899                           	opt callstack 0
 17900  005C06                     _ADC_GetConversion:
 17901                           	opt callstack 26
 17902                           
 17903                           ;incstack = 0
 17904                           ;ADC_GetConversion@channel stored from wreg
 17905  005C06  6E07               	movwf	ADC_GetConversion@channel^0,c
 17906  005C08                     
 17907                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 17908  005C08  C007  F005         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 17909  005C0C  4605               	rlncf	??_ADC_GetConversion^0,f,c
 17910  005C0E  4605               	rlncf	??_ADC_GetConversion^0,f,c
 17911  005C10  50C2               	movf	194,w,c	;volatile
 17912  005C12  1805               	xorwf	??_ADC_GetConversion^0,w,c
 17913  005C14  0B83               	andlw	-125
 17914  005C16  1805               	xorwf	??_ADC_GetConversion^0,w,c
 17915  005C18  6EC2               	movwf	194,c	;volatile
 17916  005C1A                     
 17917                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 17918  005C1A  80C2               	bsf	194,0,c	;volatile
 17919  005C1C                     
 17920                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 17921  005C1C  82C2               	bsf	194,1,c	;volatile
 17922  005C1E                     l191:
 17923                           
 17924                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 17925  005C1E  B2C2               	btfsc	194,1,c	;volatile
 17926  005C20  EF14  F02E         	goto	u8071
 17927  005C24  EF16  F02E         	goto	u8070
 17928  005C28                     u8071:
 17929  005C28  EF0F  F02E         	goto	l191
 17930  005C2C                     u8070:
 17931  005C2C                     
 17932                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17933  005C2C  50C4               	movf	196,w,c	;volatile
 17934  005C2E  6E06               	movwf	(??_ADC_GetConversion+1)^0,c
 17935  005C30  6A05               	clrf	??_ADC_GetConversion^0,c
 17936  005C32  50C3               	movf	195,w,c	;volatile
 17937  005C34  2405               	addwf	??_ADC_GetConversion^0,w,c
 17938  005C36  6E03               	movwf	?_ADC_GetConversion^0,c
 17939  005C38  0E00               	movlw	0
 17940  005C3A  2006               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 17941  005C3C  6E04               	movwf	(?_ADC_GetConversion+1)^0,c
 17942  005C3E  0012               	return		;funcret
 17943  005C40                     __end_of_ADC_GetConversion:
 17944                           	opt callstack 0
 17945                           
 17946 ;; *************** function _INTERRUPT_InterruptManager *****************
 17947 ;; Defined at:
 17948 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17949 ;; Parameters:    Size  Location     Type
 17950 ;;		None
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;		None
 17953 ;; Return value:  Size  Location     Type
 17954 ;;                  1    wreg      void 
 17955 ;; Registers used:
 17956 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17957 ;; Tracked objects:
 17958 ;;		On entry : 0/0
 17959 ;;		On exit  : 0/0
 17960 ;;		Unchanged: 0/0
 17961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17966 ;;Total ram usage:        2 bytes
 17967 ;; Hardware stack levels used:    1
 17968 ;; Hardware stack levels required when called:    3
 17969 ;; This function calls:
 17970 ;;		_PIN_MANAGER_IOC
 17971 ;; This function is called by:
 17972 ;;		Interrupt level 2
 17973 ;; This function uses a non-reentrant model
 17974 ;;
 17975                           
 17976                           	psect	intcode
 17977  000008                     __pintcode:
 17978                           	opt callstack 0
 17979  000008                     _INTERRUPT_InterruptManager:
 17980                           	opt callstack 18
 17981                           
 17982                           ;incstack = 0
 17983  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17984  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 17985  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17986  000012                     
 17987                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 17988  000012  A6F2               	btfss	242,3,c	;volatile
 17989  000014  EF0E  F000         	goto	i2u831_41
 17990  000018  EF10  F000         	goto	i2u831_40
 17991  00001C                     i2u831_41:
 17992  00001C  EF19  F000         	goto	i2l42
 17993  000020                     i2u831_40:
 17994  000020  A0F2               	btfss	242,0,c	;volatile
 17995  000022  EF15  F000         	goto	i2u832_41
 17996  000026  EF17  F000         	goto	i2u832_40
 17997  00002A                     i2u832_41:
 17998  00002A  EF19  F000         	goto	i2l42
 17999  00002E                     i2u832_40:
 18000  00002E                     
 18001                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 18002  00002E  EC5C  F02F         	call	_PIN_MANAGER_IOC	;wreg free
 18003  000032                     i2l42:
 18004  000032  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18005  000036  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18006  00003A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18007  00003C  0011               	retfie		f
 18008  00003E                     __end_of_INTERRUPT_InterruptManager:
 18009                           	opt callstack 0
 18010                           
 18011 ;; *************** function _PIN_MANAGER_IOC *****************
 18012 ;; Defined at:
 18013 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;		None
 18016 ;; Auto vars:     Size  Location     Type
 18017 ;;		None
 18018 ;; Return value:  Size  Location     Type
 18019 ;;                  1    wreg      void 
 18020 ;; Registers used:
 18021 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18022 ;; Tracked objects:
 18023 ;;		On entry : 0/0
 18024 ;;		On exit  : 0/0
 18025 ;;		Unchanged: 0/0
 18026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18031 ;;Total ram usage:        0 bytes
 18032 ;; Hardware stack levels used:    1
 18033 ;; Hardware stack levels required when called:    2
 18034 ;; This function calls:
 18035 ;;		_IOCB4_ISR
 18036 ;; This function is called by:
 18037 ;;		_INTERRUPT_InterruptManager
 18038 ;; This function uses a non-reentrant model
 18039 ;;
 18040                           
 18041                           	psect	text68
 18042  005EB8                     __ptext68:
 18043                           	opt callstack 0
 18044  005EB8                     _PIN_MANAGER_IOC:
 18045                           	opt callstack 18
 18046  005EB8                     
 18047                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 18048  005EB8  010F               	movlb	15	; () banked
 18049  005EBA  A95A               	btfss	90,4,b	;volatile
 18050  005EBC  EF62  F02F         	goto	i2u805_41
 18051  005EC0  EF64  F02F         	goto	i2u805_40
 18052  005EC4                     i2u805_41:
 18053  005EC4  EF66  F02F         	goto	i2l6586
 18054  005EC8                     i2u805_40:
 18055  005EC8                     
 18056                           ; BSR set to: 15
 18057                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 18058  005EC8  ECF6  F02E         	call	_IOCB4_ISR	;wreg free
 18059  005ECC                     i2l6586:
 18060                           
 18061                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 18062  005ECC  90F2               	bcf	242,0,c	;volatile
 18063  005ECE  0012               	return		;funcret
 18064  005ED0                     __end_of_PIN_MANAGER_IOC:
 18065                           	opt callstack 0
 18066                           
 18067 ;; *************** function _IOCB4_ISR *****************
 18068 ;; Defined at:
 18069 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;		None
 18072 ;; Auto vars:     Size  Location     Type
 18073 ;;		None
 18074 ;; Return value:  Size  Location     Type
 18075 ;;                  1    wreg      void 
 18076 ;; Registers used:
 18077 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18087 ;;Total ram usage:        0 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; Hardware stack levels required when called:    1
 18090 ;; This function calls:
 18091 ;;		Absolute function
 18092 ;;		_IOCB4_DefaultInterruptHandler
 18093 ;;		_IOCB4_InterruptCall
 18094 ;; This function is called by:
 18095 ;;		_PIN_MANAGER_IOC
 18096 ;; This function uses a non-reentrant model
 18097 ;;
 18098                           
 18099                           	psect	text69
 18100  005DEC                     __ptext69:
 18101                           	opt callstack 0
 18102  005DEC                     _IOCB4_ISR:
 18103                           	opt callstack 18
 18104  005DEC                     
 18105                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 18106  005DEC  0101               	movlb	1	; () banked
 18107  005DEE  51FD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18108  005DF0  11FE               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18109  005DF2  B4D8               	btfsc	status,2,c
 18110  005DF4  EFFE  F02E         	goto	i2u788_41
 18111  005DF8  EF00  F02F         	goto	i2u788_40
 18112  005DFC                     i2u788_41:
 18113  005DFC  EF0C  F02F         	goto	i2l93
 18114  005E00                     i2u788_40:
 18115  005E00                     
 18116                           ; BSR set to: 1
 18117                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 18118  005E00  D802               	call	i2u789_48
 18119  005E02  EF0C  F02F         	goto	i2u789_49
 18120  005E06                     i2u789_48:
 18121  005E06  0005               	push	
 18122  005E08  6EFA               	movwf	pclath,c
 18123  005E0A  51FD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18124  005E0C  6EFD               	movwf	tosl,c
 18125  005E0E  51FE               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18126  005E10  6EFE               	movwf	tosh,c
 18127  005E12  6AFF               	clrf	tosu,c
 18128  005E14  50FA               	movf	pclath,w,c
 18129  005E16  0012               	return		;indir
 18130  005E18                     i2u789_49:
 18131  005E18                     i2l93:
 18132  005E18  0012               	return		;funcret
 18133  005E1A                     __end_of_IOCB4_ISR:
 18134                           	opt callstack 0
 18135                           
 18136 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18137 ;; Defined at:
 18138 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 18139 ;; Parameters:    Size  Location     Type
 18140 ;;		None
 18141 ;; Auto vars:     Size  Location     Type
 18142 ;;		None
 18143 ;; Return value:  Size  Location     Type
 18144 ;;                  1    wreg      void 
 18145 ;; Registers used:
 18146 ;;		None
 18147 ;; Tracked objects:
 18148 ;;		On entry : 0/0
 18149 ;;		On exit  : 0/0
 18150 ;;		Unchanged: 0/0
 18151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18156 ;;Total ram usage:        0 bytes
 18157 ;; Hardware stack levels used:    1
 18158 ;; This function calls:
 18159 ;;		Nothing
 18160 ;; This function is called by:
 18161 ;;		_PIN_MANAGER_Initialize
 18162 ;;		_IOCB4_ISR
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text70
 18167  005F38                     __ptext70:
 18168                           	opt callstack 0
 18169  005F38                     _IOCB4_DefaultInterruptHandler:
 18170                           	opt callstack 18
 18171  005F38  0012               	return		;funcret
 18172  005F3A                     __end_of_IOCB4_DefaultInterruptHandler:
 18173                           	opt callstack 0
 18174                           
 18175 ;; *************** function _IOCB4_InterruptCall *****************
 18176 ;; Defined at:
 18177 ;;		line 18 in file "main.c"
 18178 ;; Parameters:    Size  Location     Type
 18179 ;;		None
 18180 ;; Auto vars:     Size  Location     Type
 18181 ;;		None
 18182 ;; Return value:  Size  Location     Type
 18183 ;;                  1    wreg      void 
 18184 ;; Registers used:
 18185 ;;		wreg, status,2, status,0
 18186 ;; Tracked objects:
 18187 ;;		On entry : 0/0
 18188 ;;		On exit  : 0/0
 18189 ;;		Unchanged: 0/0
 18190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18195 ;;Total ram usage:        0 bytes
 18196 ;; Hardware stack levels used:    1
 18197 ;; This function calls:
 18198 ;;		Nothing
 18199 ;; This function is called by:
 18200 ;;		_main
 18201 ;;		_IOCB4_ISR
 18202 ;; This function uses a non-reentrant model
 18203 ;;
 18204                           
 18205                           	psect	text71
 18206  005D56                     __ptext71:
 18207                           	opt callstack 0
 18208  005D56                     _IOCB4_InterruptCall:
 18209                           	opt callstack 18
 18210  005D56                     
 18211                           ;main.c: 20:     if(!PORTBbits.RB4){
 18212  005D56  B881               	btfsc	129,4,c	;volatile
 18213  005D58  EFB0  F02E         	goto	i2u783_41
 18214  005D5C  EFB2  F02E         	goto	i2u783_40
 18215  005D60                     i2u783_41:
 18216  005D60  EFC5  F02E         	goto	i2l290
 18217  005D64                     i2u783_40:
 18218  005D64                     
 18219                           ;main.c: 22:         if(botao!=3){
 18220  005D64  0E03               	movlw	3
 18221  005D66  0101               	movlb	1	; () banked
 18222  005D68  191E               	xorwf	_botao& (0+255),w,b
 18223  005D6A  111F               	iorwf	(_botao+1)& (0+255),w,b
 18224  005D6C  B4D8               	btfsc	status,2,c
 18225  005D6E  EFBB  F02E         	goto	i2u784_41
 18226  005D72  EFBD  F02E         	goto	i2u784_40
 18227  005D76                     i2u784_41:
 18228  005D76  EFC1  F02E         	goto	i2l6414
 18229  005D7A                     i2u784_40:
 18230  005D7A                     
 18231                           ; BSR set to: 1
 18232                           ;main.c: 23:             botao++;
 18233  005D7A  4B1E               	infsnz	_botao& (0+255),f,b
 18234  005D7C  2B1F               	incf	(_botao+1)& (0+255),f,b
 18235                           
 18236                           ;main.c: 24:         }
 18237  005D7E  EFC5  F02E         	goto	i2l290
 18238  005D82                     i2l6414:
 18239                           
 18240                           ; BSR set to: 1
 18241                           ;main.c: 26:             botao=0;
 18242  005D82  0E00               	movlw	0
 18243  005D84  6F1F               	movwf	(_botao+1)& (0+255),b
 18244  005D86  0E00               	movlw	0
 18245  005D88  6F1E               	movwf	_botao& (0+255),b
 18246  005D8A                     i2l290:
 18247  005D8A  0012               	return		;funcret
 18248  005D8C                     __end_of_IOCB4_InterruptCall:
 18249                           	opt callstack 0
 18250                           
 18251                           	psect	text72
 18252  000000                     __ptext72:
 18253                           	opt callstack 0
 18254  000000                     
 18255                           	psect	rparam
 18256  0000                     
 18257                           	psect	temp
 18258  00005D                     btemp:
 18259                           	opt callstack 0
 18260  00005D                     	ds	1
 18261  0000                     int$flags	set	btemp
 18262  0000                     wtemp8	set	btemp+1
 18263  0000                     ttemp5	set	btemp+1
 18264  0000                     ttemp6	set	btemp+4
 18265  0000                     ttemp7	set	btemp+8
 18266                           tosu	equ	0xFFF
 18267                           tosh	equ	0xFFE
 18268                           tosl	equ	0xFFD
 18269                           stkptr	equ	0xFFC
 18270                           pclatu	equ	0xFFB
 18271                           pclath	equ	0xFFA
 18272                           pcl	equ	0xFF9
 18273                           tblptru	equ	0xFF8
 18274                           tblptrh	equ	0xFF7
 18275                           tblptrl	equ	0xFF6
 18276                           tablat	equ	0xFF5
 18277                           prodh	equ	0xFF4
 18278                           prodl	equ	0xFF3
 18279                           indf0	equ	0xFEF
 18280                           postinc0	equ	0xFEE
 18281                           postdec0	equ	0xFED
 18282                           preinc0	equ	0xFEC
 18283                           plusw0	equ	0xFEB
 18284                           fsr0h	equ	0xFEA
 18285                           fsr0l	equ	0xFE9
 18286                           wreg	equ	0xFE8
 18287                           indf1	equ	0xFE7
 18288                           postinc1	equ	0xFE6
 18289                           postdec1	equ	0xFE5
 18290                           preinc1	equ	0xFE4
 18291                           plusw1	equ	0xFE3
 18292                           fsr1h	equ	0xFE2
 18293                           fsr1l	equ	0xFE1
 18294                           bsr	equ	0xFE0
 18295                           indf2	equ	0xFDF
 18296                           postinc2	equ	0xFDE
 18297                           postdec2	equ	0xFDD
 18298                           preinc2	equ	0xFDC
 18299                           plusw2	equ	0xFDB
 18300                           fsr2h	equ	0xFDA
 18301                           fsr2l	equ	0xFD9
 18302                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    3536
    Data        7
    BSS         426
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    154     158
    BANK1           256     24     255
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_4(CODE[22]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), STR_24(CODE[3]), 
		 -> STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), STR_24(CODE[3]), 
		 -> STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 22
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[22]), STR_3(CODE[16]), STR_2(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 22
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[22]), STR_3(CODE[16]), STR_2(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), tensao_in(BANK1[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), tensao_in(BANK1[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_4(CODE[22]), STR_3(CODE[16]), STR_2(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    S2030_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_4(CODE[22]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_4(CODE[22]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_4(CODE[22]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), tensao_in(BANK1[4]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), STR_1(CODE[12]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->___fldiv
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___fldiv
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flsub
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  175690
                  _ADC_GetConversion
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10  100468
                                             10 BANK1     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   99353
                                            142 BANK0     12     4      8
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   98316
                                            134 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   97489
                                             88 BANK0     46    40      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             29 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   34087
                                             20 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              8 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                              0 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4547
                                             57 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3802
                                             41 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4133
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1166
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3083
                                             65 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             11 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   26180
                                             33 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             11 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              7 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              3 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___fldiv
     ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___flsub
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     18      FF       8       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C1       6        0.0%
DATA                 0      0     2C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 21 23:08:24 2020

                           _SPI_Initialize 5EFC                               ___fldiv@aexp 005A  
                             ___fldiv@bexp 0059                               ___fldiv@sign 0052  
                              _SSPSTATbits 000FC7                                         l23 5E9E  
                                       l26 5F1E                                         l35 5F34  
                                       l85 5B02                                         l96 5F28  
                             ___awdiv@sign 0008                        ___wmul@multiplicand 0005  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
              __end_of_IOCB4_InterruptCall 5D8C                 ?_IOCB4_SetInterruptHandler 0003  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l120 5F0C                                        l130 5E72  
                                      l124 5634                                        l132 5E80  
                                      l133 5E84                                        l301 2712  
                                      l216 5E44                                        l306 29CC  
                                      l501 5392                                        l309 29D2  
                                      l191 5C1E                                        l343 5DEA  
                                      l352 3524                                        l504 53D4  
                                      l361 5B88                                        l513 5944  
                                      l521 35CE                                        l601 1CAE  
                                      l194 5C3E                                        l506 5410  
                                      l179 5EFA                                        l355 5EB6  
                                      l372 5EE4                                        l365 5A76  
                                      l445 48C6                                        l454 4C92  
                                      l519 35C6                                        l376 5760  
                                      l712 3A82                                        l369 5A2E  
                                      l714 3AE6                                        l298 270C  
                                      l539 380A                                        l635 3F3A  
                                      l644 408A                                        l557 20D8  
                                      l637 3F42                                        l653 4648  
                                      l805 57C4                                        l646 40F0  
                                      l806 57CC                                        l575 1916  
                                      l655 4650                                        l664 46FA  
                                      l728 0138                                        l809 5E6A  
                                      l665 4744                                        l753 1528  
                                      l674 3D36                                        l923 45C6  
                                      l691 384C                                        l684 3F00  
                                      l676 3D3E                                        l669 474C  
                                      l773 093E                                        l936 4A2A  
                                      l689 3844                                        l698 38E4  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                          _timer1ReloadVal 01FB                                        _abs 5B8A  
                                      _pad 534C                               ___awmod@sign 0008  
                                      tosl 000FFD                                        wreg 000FE8  
                             ___flmul@aexp 001E                               ___flmul@bexp 0023  
                             ___flmul@sign 001D                               ___flmul@temp 0028  
                             ___flmul@prod 0024                            ?_lcd_set_cursor 0008  
                             ___fltol@exp1 000C                         __size_of_IOCB4_ISR 002E  
                                     l1040 54D4                                       l1106 4EBE  
                                     ?_abs 0015                                       l1053 5584  
                                     l1402 3044                                       l1074 4F7C  
                                     l1083 5CE6                                       l1404 30BC  
                                     l1068 56DE                                       l1405 30AA  
                                     l1430 2C96                                       l1254 51B0  
                                     l1079 4FC2                                       l1423 2AA0  
                                     l1247 5190                                       l1440 2DC6  
                                     l1432 2D0E                                       l1264 5280  
                                     l1433 2CFC                                       l1337 22C8  
                                     l1257 5260                                       l1610 5D54  
                                     l1354 23E2                                       l1346 2598  
                                     l1338 22B6                                       l1427 2E04  
                                     l1363 24B2                                       l1339 227C  
                                     l1364 24A0                                       l1604 58E8  
                                     l1526 4436                                       l1614 4DB8  
                                     l1471 41E0                                       l1551 5D1E  
                                     l1391 319E                                       l1535 3CFC  
                                     l1464 4148                                       l1624 5824  
                                     l1529 443E                                       l1393 2FFE  
                                     l1545 5C04                                       l1490 50C0  
                                     l1538 3C40                                       l1642 588A  
                                     l1467 42A4                                       l1379 5ABC  
                                     l1580 534A                                       l1396 2FC2  
                                     l1565 5CAE                                       l1629 582C  
                                     l1637 5882                                       l1478 423C  
                                     l1559 5996                                       l1591 5F36  
                                     l1495 5BC0                                       l1648 5C76  
                                     l1664 4B3A                                       l1498 5BC8  
                                     l1659 4B60                                       l6020 5A74  
                                     l6012 5A30                                       l1588 5B46  
                                     l6014 5A46                                       l6030 5A04  
                                     l1598 5DBC                                       l6032 5A2C  
                                     l6024 59E8                                       l6018 5A4C  
                                     l6026 59FE                                       ?_pad 0013  
                                     l7200 2158                                       l8000 4E4A  
                                     l7210 2180                                       l7202 215A  
                                     l8010 4E72                                       l8002 4E54  
                                     l5380 5EAE                                       l6420 5B80  
                                     l8100 35D6                                       l7300 2350  
                                     l7220 21BA                                       l7212 2190  
                                     l7204 2160                                       l8012 4E7E  
                                     l8004 4E5E                                       l6406 5F20  
                                     l5382 5EB4                                       l7150 52CE  
                                     l7142 5282                                       l8110 3610  
                                     l8102 35E8                                       l7310 23C2  
                                     l7302 2356                                       l7230 21E6  
                                     l7222 21CC                                       l7214 21A0  
                                     l7206 216E                                       l8014 4E8E  
                                     l8030 5108                                       l8022 50C2  
                                     l6440 5F32                                       l5376 5EA2  
                                     l6424 5B86                                       l6416 5B48  
                                     l6520 47A2                                       l6504 474E  
                                     l7152 5304                                       l7144 5294  
                                     l7160 5B22                                       l7400 53E4  
                                     l8112 3616                                       l8120 3708  
                                     l8104 35F8                                       l7320 241C  
                                     l7304 237C                                       l7312 23D2  
                                     l7240 21FA                                       l7232 21EA  
                                     l7224 21DA                                       l7216 21A2  
                                     l7208 2170                                       l8016 4E9E  
                                     l8040 5178                                       l8032 5116  
                                     l8024 50CE                                       l9000 123E  
                                     l6602 5C08                                       l6450 5ADA  
                                     l6442 5EFC                                       l5378 5EAC  
                                     l6418 5B64                                       l6530 487A  
                                     l6522 484C                                       l6514 479E  
                                     l6506 4756                                       l7146 52A6  
                                     l7162 5B26                                       l7170 5D48  
                                     l7402 53F8                                       l8122 3722  
                                     l8130 3784                                       l8114 3698  
                                     l8106 35FE                                       l7330 244C  
                                     l7322 2426                                       l7314 23F8  
                                     l7306 23B0                                       l7250 220E  
                                     l7242 21FE                                       l7234 21EE  
                                     l7226 21DE                                       l7218 21AA  
                                     l8018 4EAE                                       l7410 4FC4  
                                     l8202 1714                                       l8042 518A  
                                     l8034 5128                                       l8026 50EC  
                                     l8050 51EC                                       l9002 1274  
                                     l6604 5C1A                                       l6460 5B00  
                                     l6452 5AE0                                       l6444 5F08  
                                     l6428 5ED0                                       l6532 487C  
                                     l6524 485C                                       l6508 479A  
                                     l6700 330E                                       l8060 5946  
                                     l7148 52B0                                       l7156 5B04  
                                     l7164 5D20                                       l7500 4444  
                                     l8140 37CA                                       l8132 3796  
                                     l8124 3740                                       l8116 369E  
                                     l8108 3606                                       l7340 2474  
                                     l7332 2450                                       l7324 2434  
                                     l7316 2408                                       l7308 23B2  
                                     l7260 2248                                       l7252 2212  
                                     l7244 2202                                       l7236 21F2  
                                     l7228 21E2                                       l7180 20E6  
                                     l7412 4FE4                                       l8300 1BA8  
                                     l8220 17AE                                       l8204 1726  
                                     l8036 5156                                       l8028 50F4  
                                     l8052 51FA                                       l8044 51B2  
                                     l9020 1360                                       l9004 129E  
                                     l9012 12EE                                       l9100 4AEC  
                                     l6606 5C1C                                       l6462 5F0E  
                                     l6454 5AF0                                       l6446 5F0A  
                                     l6470 5E40                                       l4686 5E6E  
                                     l6534 488C                                       l6526 4868  
                                     l6710 3340                                       l6702 3318  
                                     l6630 31B0                                       l8062 594A  
                                     l7158 5B10                                       l7166 5D2C  
                                     l7510 44A4                                       l7502 4452  
                                     l7406 5B8A                                       l8142 37D2  
                                     l8134 37A6                                       l8126 375A  
                                     l8118 36A4                                       l7350 24CE  
                                     l7342 2482                                       l7334 2460  
                                     l7326 2436                                       l7270 229A  
                                     l7262 2264                                       l7254 2216  
                                     l7246 2206                                       l7238 21F6  
                                     l7190 2126                                       l7182 20F4  
                                     l7414 5022                                       l7422 5062  
                                     l7174 5C78                                       l8310 1C42  
                                     l8302 1BDA                                       l8230 187E  
                                     l8222 17E2                                       l8206 1742  
                                     l8214 175E                                       l8150 1534  
                                     l8038 5176                                       l8054 5228  
                                     l8046 51D0                                       l9030 140E  
                                     l9014 1314                                       l9006 12AE  
                                     l9102 4B22                                       l9110 5D8C  
                                     l6608 5C2C                                       l6472 5EE6  
                                     l6456 5AF2                                       l6448 5ABE  
                                     l6464 5E1A                                       l6528 486A  
                                     l6536 488E                                       l6480 5DC8  
                                     l6800 3508                                       l6720 3372  
                                     l6712 334A                                       l6704 3322  
                                     l6640 31E2                                       l6632 31BA  
                                     l8064 595E                                       l7168 5D30  
                                     l8080 591A                                       l8072 58EA  
                                     l7520 44EE                                       l7512 44A8  
                                     l7504 4472                                       l7408 5BA4  
                                     l8136 37AC                                       l8144 37E2  
                                     l8128 3774                                       l7600 2E78  
                                     l7360 2538                                       l7352 24DC  
                                     l7344 2498                                       l7328 2444  
                                     l7336 2462                                       l7280 22E6  
                                     l7272 22A8                                       l7264 2274  
                                     l7248 220A                                       l7256 221A  
                                     l7192 2128                                       l7184 20F6  
                                     l7424 5074                                       l7416 504A  
                                     l7432 588C                                       l7440 5804  
                                     l8400 1F84                                       l8320 1CCA  
                                     l8312 1C76                                       l8304 1BF0  
                                     l8240 18E8                                       l8224 17E8  
                                     l8232 18B0                                       l8216 1778  
                                     l8160 1588                                       l8152 1544  
                                     l8056 5248                                       l8048 51D8  
                                     l9032 1438                                       l9040 1488  
                                     l9016 133A                                       l9104 4B42  
                                     l9112 5D96                                       l9120 25A4  
                                     l6458 5AF4                                       l6466 5E26  
                                     l6570 5E86                                       l6810 4B7A  
                                     l6482 5DD6                                       l6802 3512  
                                     l6730 33A4                                       l6722 337C  
                                     l6714 3354                                       l6706 332C  
                                     l6650 3214                                       l6642 31EC  
                                     l6634 31C4                                       l6626 31A0  
                                     l8066 598C                                       l8082 5920  
                                     l8074 58FE                                       l7530 455E  
                                     l7522 44FC                                       l7514 44B4  
                                     l7506 4476                                       l8138 37BE  
                                     l8090 356E                                       l7610 2EB8  
                                     l7602 2E86                                       l7370 2572  
                                     l7362 2558                                       l7354 2516  
                                     l7290 2326                                       l7338 2470  
                                     l7274 22AA                                       l7266 228A  
                                     l7258 221E                                       l7186 2106  
                                     l7194 2130                                       l7178 20DA  
                                     l7418 5056                                       l7450 3B60  
                                     l7434 589C                                       l7442 5816  
                                     l8410 1FE6                                       l8402 1FAA  
                                     l8330 1D70                                       l8322 1D2E  
                                     l8314 1C86                                       l8306 1C22  
                                     l8242 18F0                                       l8234 18C0  
                                     l8226 1842                                       l8170 15CE  
                                     l8162 1590                                       l8154 1552  
                                     l8058 525A                                       l9042 14AE  
                                     l9050 14DE                                       l9034 1448  
                                     l9018 1352                                       l9026 13A2  
                                     l9106 4B58                                       l9130 25F4  
                                     l9122 25A8                                       l6468 5E28  
                                     l6580 5E9A                                       l6572 5E8A  
                                     l6900 424C                                       l6820 4C5C  
                                     l6812 4BB4                                       l6492 5718  
                                     l6484 5DD8                                       l6804 3518  
                                     l6740 33D6                                       l6732 33AE  
                                     l6724 3386                                       l6716 335E  
                                     l6708 3336                                       l6660 3246  
                                     l6652 321E                                       l6644 31F6  
                                     l6636 31CE                                       l6628 31AA  
                                     l8068 5990                                       l8076 590A  
                                     l7532 4570                                       l7524 450E  
                                     l7516 44D2                                       l7508 4484  
                                     l8092 358E                                       l7700 317A  
                                     l7620 2EF8                                       l7612 2EBA  
                                     l7604 2E88                                       l7372 2578  
                                     l7364 255C                                       l7348 24C2  
                                     l7356 2518                                       l7292 2332  
                                     l7284 22FA                                       l7276 22B4  
                                     l7268 2296                                       l7196 2140  
                                     l7188 2116                                       l7428 50B8  
                                     l7460 3C30                                       l7452 3B74  
                                     l7436 57CE                                       l8420 202C  
                                     l8412 2000                                       l8404 1FC6  
                                     l8340 1DAC                                       l8324 1D3E  
                                     l8332 1D78                                       l8316 1C9A  
                                     l8308 1C32                                       l8260 19A0  
                                     l8252 1934                                       l8244 190A  
                                     l8236 18C4                                       l8228 1876  
                                     l8180 160A                                       l8172 15D6  
                                     l8164 15A2                                       l8156 155A  
                                     l8148 152A                                       l8500 45F4  
                                     l7380 5C40                                       l9044 14BC  
                                     l9028 13D8                                       l9140 26DA  
                                     l9132 2602                                       l9124 25B4  
                                     l9116 259A                                       l6590 5596  
                                     l6574 5E8E                                       l6910 4294  
                                     l6902 4250                                       l6814 4BB8  
                                     l6822 4C60                                       l6806 4B62  
                                     l6494 5724                                       l6486 56E0  
                                     l6478 5DC0                                       l6750 3408  
                                     l6742 33E0                                       l6734 33B8  
                                     l6726 3390                                       l6718 3368  
                                     l6670 3278                                       l6662 3250  
                                     l6654 3228                                       l6646 3200  
                                     l6638 31D8                                       l7390 537E  
                                     l8078 5916                                       l7526 453C  
                                     l7518 44DA                                       l7534 4576  
                                     l7550 48FE                                       l7542 48C8  
                                     l8094 359C                                       l8086 3526  
                                     l7702 317E                                       l7630 2F28  
                                     l7622 2F00                                       l7606 2E98  
                                     l7614 2EC2                                       l7374 2586  
                                     l7366 256A                                       l7358 2528  
                                     l7294 2336                                       l7286 230A  
                                     l7278 22D6                                       l7198 2146  
                                     l7470 3CEC                                       l7454 3B82  
                                     l7462 3C64                                       l7446 3AE8  
                                     l8430 207C                                       l8422 203C  
                                     l8414 2006                                       l8406 1FCE  
                                     l8350 1DD8                                       l8342 1DB2  
                                     l8334 1D8A                                       l8326 1D50  
                                     l8318 1CA6                                       l8270 19DE  
                                     l8254 1946                                       l8262 19A4  
                                     l8238 18D6                                       l8246 1922  
                                     l8190 1686                                       l8174 15DA  
                                     l8166 15B0                                       l8158 157E  
                                     l8502 45FC                                       l9046 14D0  
                                     l9070 5762                                       l9150 27B0  
                                     l9134 264E                                       l9142 2714  
                                     l9126 25B6                                       l9118 259E  
                                     l6592 55D6                                       l6576 5E92  
                                     l6904 4274                                       l6816 4C04  
                                     l6808 4B66                                       l6496 573E  
                                     l6488 56F0                                       l6760 343A  
                                     l6752 3412                                       l6744 33EA  
                                     l6736 33C2                                       l6728 339A  
                                     l6680 32AA                                       l6672 3282  
                                     l6664 325A                                       l6656 3232  
                                     l6648 320A                                       l7392 538A  
                                     l7384 534C                                       l7536 4586  
                                     l7528 455C                                       l7560 4966  
                                     l7552 490C                                       l7544 48CC  
                                     l8096 35A0                                       l8088 3546  
                                     l7704 318C                                       l7640 2F66  
                                     l7632 2F28                                       l7624 2F04  
                                     l7616 2ED2                                       l7608 2EA8  
                                     l7800 2C86                                       l7720 29F6  
                                     l7376 2588                                       l7368 2570  
                                     l7296 2344                                       l7288 2318  
                                     l7464 3CA0                                       l7448 3B08  
                                     l8440 20B8                                       l8432 208E  
                                     l8424 2042                                       l8416 2018  
                                     l8408 1FD4                                       l8344 1DBE  
                                     l8336 1D98                                       l8352 1DDE  
                                     l8360 1E0C                                       l8328 1D62  
                                     l8280 1A2C                                       l8272 19E2  
                                     l8264 19AC                                       l8256 1962  
                                     l8192 1690                                       l8184 1640  
                                     l8176 15DE                                       l8168 15C2  
                                     l8520 46B6                                       l8512 4674  
                                     l8504 4610                                       l8600 3918  
                                     l9216 00F8                                       l9056 14F0  
                                     l9072 576A                                       l9080 4A40  
                                     l9160 2942                                       l9144 2728  
                                     l9152 27DA                                       l9136 2682  
                                     l9128 25E0                                       l6594 55DA  
                                     l6578 5E96                                       l6906 4284  
                                     l6818 4C30                                       l6498 5746  
                                     l6770 346C                                       l6762 3444  
                                     l6754 341C                                       l6746 33F4  
                                     l6738 33CC                                       l6690 32DC  
                                     l6682 32B4                                       l6674 328C  
                                     l6666 3264                                       l6658 323C  
                                     l9218 4368                                       l7394 539E  
                                     l7386 535C                                       l7538 45A6  
                                     l7562 4974                                       l7570 49DA  
                                     l7554 492C                                       l7546 48DA  
                                     l8098 35BA                                       l7706 3192  
                                     l7650 2FB2                                       l7642 2F76  
                                     l7618 2EE8                                       l7810 2CC6  
                                     l7802 2C94                                       l7730 2A2E  
                                     l7722 29F8                                       l7298 2346  
                                     l7466 3CB4                                       l7458 3BF4  
                                     l8434 209A                                       l8426 2048  
                                     l8418 2024                                       l8370 1EC2  
                                     l8362 1E64                                       l8354 1DF0  
                                     l8346 1DCE                                       l8338 1DA8  
                                     l8290 1AC4                                       l8274 19F4  
                                     l8282 1A34                                       l8266 19BE  
                                     l8258 1998                                       l8186 1652  
                                     l8178 15E4                                       l8450 3F14  
                                     l8530 470E                                       l8522 46D4  
                                     l8514 4688                                       l8506 4618  
                                     l7474 5BCA                                       l7482 5864  
                                     l8602 392A                                       l8610 398A  
                                     l9058 1516                                       l9074 5778  
                                     l9090 4A84                                       l9082 4A4A  
                                     l9162 2970                                       l9154 27F0  
                                     l9146 2736                                       l9138 26B0  
                                     l6596 55FE                                       l6588 5588  
                                     l6908 4292                                       l6780 349E  
                                     l6772 3476                                       l6764 344E  
                                     l6756 3426                                       l6748 33FE  
                                     l6692 32E6                                       l6684 32BE  
                                     l6676 3296                                       l6668 326E  
                                     l7492 5E46                                       l7396 53B2  
                                     l7388 5370                                       l7572 49EA  
                                     l7564 49A2                                       l7556 494A  
                                     l7548 48FA                                       l7900 54E8  
                                     l7708 3194                                       l7660 2FFC  
                                     l7652 2FC0                                       l7644 2F86  
                                     l7636 2F3C                                       l7628 2F18  
                                     l7580 2E12                                       l7820 2D38  
                                     l7812 2CF4                                       l7804 2CA6  
                                     l7740 2A5A                                       l7732 2A3E  
                                     l7724 2A08                                       l7716 29DC  
                                     l7468 3CDC                                       l8436 20A2  
                                     l8380 1F12                                       l8372 1EDE  
                                     l8364 1E98                                       l8356 1E02  
                                     l8348 1DD2                                       l8292 1B1C  
                                     l8284 1A3C                                       l8276 1A02  
                                     l8268 19D0                                       l8188 166E  
                                     l8196 16B8                                       l8460 3F84  
                                     l8452 3F2E                                       l8532 4722  
                                     l8524 46D8                                       l8516 468C  
                                     l8508 4626                                       l8540 3D10  
                                     l7484 5876                                       l8620 3A20  
                                     l8612 399A                                       l8700 0042  
                                     l9076 57A6                                       l9092 4A90  
                                     l9164 299A                                       l9156 27FE  
                                     l9148 2782                                       l6598 5632  
                                     l6870 4104                                       l6790 34D0  
                                     l6782 34A8                                       l6774 3480  
                                     l6766 3458                                       l6758 3430  
                                     l6694 32F0                                       l6686 32C8  
                                     l6678 32A0                                       l7494 5E62  
                                     l7398 53B6                                       l7574 4A0A  
                                     l7566 49C2                                       l7558 4952  
                                     l7910 551C                                       l7902 54F0  
                                     l7670 3042                                       l7662 300E  
                                     l7654 2FCC                                       l7646 2F8E  
                                     l7638 2F56                                       l7590 2E52  
                                     l7582 2E20                                       l7830 2DAE  
                                     l7822 2D62                                       l7806 2CB4  
                                     l7750 2AB0                                       l7742 2A6A  
                                     l7734 2A44                                       l7726 2A18  
                                     l7718 29E8                                       l8438 20B2  
                                     l8390 1F54                                       l8382 1F22  
                                     l8374 1EF0                                       l8366 1EA0  
                                     l8358 1E06                                       l8294 1B50  
                                     l8286 1A4C                                       l8278 1A1A  
                                     l8198 16DE                                       l8470 3FB0  
                                     l8462 3F8A                                       l8454 3F6A  
                                     l8446 3F02                                       l8534 4726  
                                     l8526 46DC                                       l8518 46AA  
                                     l8550 3D7E                                       l8542 3D2A  
                                     l7478 582E                                       l8630 3A98  
                                     l8622 3A3E                                       l8614 39A0  
                                     l8606 3964                                       l8710 0098  
                                     l8702 0068                                       l9094 4AA2  
                                     l9086 4A54                                       l9078 4A2C  
                                     l9158 284A                                       l6880 4182  
                                     l6872 4112                                       l6792 34DA  
                                     l6784 34B2                                       l6776 348A  
                                     l6768 3462                                       l6696 32FA  
                                     l6688 32D2                                       l7488 5CE8  
                                     l8640 42BA                                       l7568 49D4  
                                     l7920 5558                                       l7912 5524  
                                     l7904 54F4                                       l7680 30A2  
                                     l7664 3024                                       l7672 3054  
                                     l7656 2FEA                                       l7648 2F9E  
                                     l7592 2E54                                       l7584 2E22  
                                     l7832 2DCA                                       l7840 2DF0  
                                     l7816 2D1E                                       l7824 2D66  
                                     l7808 2CB8                                       l7760 2AEA  
                                     l7752 2AC0                                       l7744 2A7A  
                                     l7736 2A4A                                       l7728 2A28  
                                     l8392 1F62                                       l8384 1F34  
                                     l8376 1EFE                                       l8368 1EA4  
                                     l8288 1A60                                       l8296 1B56  
                                     l8480 407A                                       l8464 3F92  
                                     l8472 400E                                       l8456 3F72  
                                     l8448 3F10                                       l8560 3E76  
                                     l8552 3DF4                                       l8544 3D66  
                                     l8536 3CFE                                       l8632 3AA8  
                                     l8624 3A58                                       l8616 39A6  
                                     l8608 3976                                       l8800 04FC  
                                     l8712 009A                                       l8704 0076  
                                     l9096 4AC8                                       l9088 4A72  
                                     l6890 41D6                                       l6882 418A  
                                     l6874 4158                                       l6794 34E4  
                                     l6786 34BC                                       l6778 3494  
                                     l6698 3304                                       l8650 431C  
                                     l8642 42BE                                       l7498 4440  
                                     l7922 555E                                       l7914 552C  
                                     l7906 5502                                       l7690 3110  
                                     l7674 3062                                       l7666 302A  
                                     l7658 2FEC                                       l7586 2E32  
                                     l7594 2E5C                                       l7578 2E06  
                                     l7842 2DF4                                       l7834 2DDA  
                                     l7826 2D80                                       l7818 2D2A  
                                     l7770 2B3C                                       l7762 2B00  
                                     l7746 2A8A                                       l7738 2A58  
                                     l8394 1F6A                                       l8386 1F3C  
                                     l8378 1F0E                                       l8298 1B74  
                                     l8482 409A                                       l8490 40C8  
                                     l8474 4028                                       l8466 3FA4  
                                     l8458 3F78                                       l8562 3E94  
                                     l8554 3DFA                                       l8546 3D6E  
                                     l8538 3D0C                                       l8634 3ABE  
                                     l8626 3A72                                       l8618 3A04  
                                     l8810 05EA                                       l8802 0546  
                                     l8730 00C4                                       l8722 00B8  
                                     l8714 00AC                                       l8706 0088  
                                     l9098 4ADC                                       l6892 4212  
                                     l6884 4196                                       l6876 416E  
                                     l6868 40F4                                       l6796 34EE  
                                     l6788 34C6                                       l8660 4348  
                                     l8644 42C2                                       l7860 5430  
                                     l7852 5412                                       l7916 553A  
                                     l7924 5564                                       l7908 550A  
                                     l7684 30CC                                       l7692 3114  
                                     l7676 3066                                       l7668 3034  
                                     l7596 2E6C                                       l7588 2E42  
                                     l7940 56B2                                       l7932 5636  
                                     l7836 2DE8                                       l7828 2D94  
                                     l7780 2B82                                       l7772 2B4A  
                                     l7764 2B0C                                       l7756 2AD4  
                                     l7748 2A90                                       l8396 1F72  
                                     l8388 1F4C                                       l8484 40AC  
                                     l8476 4046                                       l8468 3FAA  
                                     l8564 3EAE                                       l8556 3E00  
                                     l8548 3D78                                       l8628 3A92  
                                     l8580 3864                                       l8572 380C  
                                     l8900 0BFC                                       l8820 0686  
                                     l8740 0148                                       l8708 008C  
                                     l6894 421E                                       l6886 41C8  
                                     l6798 34F8                                       l8670 43F6  
                                     l8662 437E                                       l8654 4322  
                                     l8646 42E0                                       l8638 42A6  
                                     l7870 5464                                       l7862 543E  
                                     l7854 5416                                       l7926 5574  
                                     l7918 5550                                       l7694 312E  
                                     l7686 30D8                                       l7678 3074  
                                     l7598 2E72                                       l7942 56D6  
                                     l7934 5664                                       l7950 4EEE  
                                     l7838 2DEA                                       l7790 2BF0  
                                     l7782 2B9C                                       l7774 2B56  
                                     l7766 2B24                                       l7758 2AE0  
                                     l7846 5A78                                       l8398 1F7E  
                                     l8486 40B2                                       l8478 4060  
                                     l8494 45C8                                       l8566 3EC8  
                                     l8558 3E64                                       l8590 38A4  
                                     l8582 386C                                       l8574 381A  
                                     l8910 0C84                                       l8902 0C08  
                                     l8830 0740                                       l8806 057E  
                                     l8750 01E0                                       l8742 016E  
                                     l8734 00D0                                       l8726 00BE  
                                     l8718 00B2                                       l6896 422C  
                                     l6888 41CA                                       l8672 4408  
                                     l8656 4338                                       l8648 4318  
                                     l7880 549E                                       l7872 546C  
                                     l7864 5446                                       l7856 5424  
                                     l7928 557C                                       l7696 3144  
                                     l7688 30E6                                       l7944 56DC  
                                     l7936 5674                                       l7960 4F5C  
                                     l7952 4EFE                                       l7792 2C1A  
                                     l7784 2BAC                                       l7776 2B66  
                                     l7768 2B30                                       l7848 5A88  
                                     l8488 40C2                                       l8496 45DA  
                                     l8680 4C94                                       l8568 3ED8  
                                     l8592 38AC                                       l8584 388C  
                                     l8576 381E                                       l8920 0CF4  
                                     l8840 07BE                                       l8816 063A  
                                     l8808 05B4                                       l8760 0270  
                                     l8752 01EE                                       l8744 01A4  
                                     l8736 0126                                       l6898 424A  
                                     l8674 441A                                       l8666 43B6  
                                     l8658 4340                                       l7890 54C4  
                                     l7882 54A6                                       l7874 5474  
                                     l7866 544A                                       l7858 542C  
                                     l7698 315E                                       l7938 56A2  
                                     l7962 4F6A                                       l7954 4F2C  
                                     l7794 2C50                                       l7786 2BC8  
                                     l7778 2B72                                       l7970 5CB0  
                                     l8498 45E2                                       l8690 4D0A  
                                     l8682 4CBE                                       l8594 38C8  
                                     l8586 3894                                       l8578 3838  
                                     l8930 0D76                                       l8906 0C16  
                                     l8850 0856                                       l8842 07CC  
                                     l8826 06D4                                       l8818 0660  
                                     l8770 0306                                       l8762 0278  
                                     l8746 01B2                                       l8738 0146  
                                     l7892 54CC                                       l7884 54A8  
                                     l7876 5482                                       l7868 5452  
                                     l7964 4FBA                                       l7956 4F3C  
                                     l7948 4EC0                                       l7796 2C5E  
                                     l7788 2BD4                                       l7972 5CC6  
                                     l7980 4DD0                                       l8692 4D28  
                                     l8596 38D8                                       l8588 389E  
                                     l8940 0DFC                                       l8908 0C4C  
                                     l8916 0C98                                       l8844 07FC  
                                     l8836 0792                                       l8828 070A  
                                     l8780 0394                                       l8772 0314  
                                     l8764 0286                                       l8756 0238  
                                     l8748 01C0                                       l7886 54AE  
                                     l7878 5488                                       l7966 4FC0  
                                     l7958 4F4A                                       l7798 2C7C  
                                     l7974 5CD6                                       l7990 4E20  
                                     l8694 4D3A                                       l8686 4CCA  
                                     l8918 0CBE                                       l8926 0D08  
                                     l8854 08C8                                       l8838 07A6  
                                     l8790 0442                                       l8782 03A4  
                                     l8766 02AC                                       l8758 024A  
                                     l7888 54B4                                       l7896 54D6  
                                     l7992 4E24                                       l7984 4DE4  
                                     l8696 4D7C                                       l8688 4CD8  
                                     l8960 0F6A                                       l8952 0EB4  
                                     l8944 0E38                                       l8928 0D3E  
                                     l8936 0D8A                                       l8880 0A90  
                                     l8872 0A08                                       l8856 08DA  
                                     l8864 0952                                       l8848 0828  
                                     l8792 0474                                       l8784 03D8  
                                     l8776 035E                                       l8768 02E6  
                                     l7898 54DA                                       l7994 4E32  
                                     l7986 4E0E                                       l7978 4DBA  
                                     l8970 1018                                       l8962 0FA0  
                                     l8954 0EEA                                       l8946 0E5E  
                                     l8938 0DB0                                       l8890 0B3C  
                                     l8882 0AB6                                       l8874 0A3E  
                                     l8866 0988                                       l8858 090E  
                                     l8786 03E8                                       l8778 0370  
                                     l7988 4E10                                       l8956 0F32  
                                     l8948 0E94                                       l8868 09D0  
                                     l8796 0490                                       l8788 041C  
                                     l8990 1186                                       l8798 04C6  
                                     STR_1 FFAE                                       l8992 1196  
                                     l8984 10F0                                       l8976 1068  
                                     l8968 0FF2                                       l8896 0B8E  
                                     l8888 0B06                                       STR_2 FF8D  
                                     STR_3 FF9E                                       l8994 11CC  
                                     l8986 1126                                       l8978 109E  
                                     l8898 0BC4                                       STR_4 FF77  
                                     STR_5 FFBA                                       l8988 115C  
                                     STR_6 FFCA                                       l8998 1208  
                                     STR_9 FFBE                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u6035 5EAA                                       u6036 5EAC  
                                     u7300 59FE                                       u8100 4C04  
                                     u7301 59FA                                       u8101 4C00  
                                     u8110 4C82                                       u4760 5E80  
                                     u8120 4C92                                       u9000 537E  
                                     u4761 5E7C                                       u8121 4C8E  
                                     u9001 537A                                       i2l42 0032  
                                     u8210 4104                                       u9010 53D4  
                                     u8211 4100                                       u9011 53D0  
                                     u8060 5596                                       u8300 4292  
                                     u8220 4112                                       u9020 53E4  
                                     u9100 50B0                                       u8061 5592  
                                     u8301 428E                                       u8221 410E  
                                     u8117 4C78                                       u9021 53E0  
                                     u8070 5C2C                                       u8230 416E  
                                     u9030 5BA4                                       u9110 58D6  
                                     u8071 5C28                                       u8231 416A  
                                     u9031 5BA0                                       u8240 41C4  
                                     u9040 5004                                       u9200 3BF0  
                                     u9120 58E8                                       u8241 41C0  
                                     u9201 3BEC                                       u9121 58E4  
                                     u8250 420E                                       u7290 5A46  
                                     u8090 4BE2                                       u9050 5022  
                                     u9210 3C14                                       u9130 57FE  
                                     u8251 420A                                       u7291 5A42  
                                     u9051 501E                                       u9131 57F8  
                                     u8260 422C                                       u8500 5294  
                                     u9060 504A                                       u9220 3C30  
                                     u9140 5800                                       u9300 5876  
                                     i2l93 5E18                                       u8261 4228  
                                     u8501 5290                                       u9061 5046  
                                     u9045 4FFA                                       u9221 3C2C  
                                     u9117 58CC                                       u9301 5872  
                                     u8270 423C                                       u9310 5D18  
                                     u8510 52A6                                       u9070 5074  
                                     u9230 3C84                                       u9150 5816  
                                     u8271 4238                                       u9311 5D12  
                                     u8511 52A2                                       u9071 5070  
                                     u9215 3C0A                                       u9151 5812  
                                     u8280 424A                                       u9320 5D1A  
                                     u8520 52CE                                       u9400 48DA  
                                     u8600 2116                                       u9240 3CA0  
                                     u9160 3B32                                       i2l89 5ECE  
                                     u8281 4246                                       u8097 4BD8  
                                     u8521 52CA                                       u9401 48D6  
                                     u8601 2112                                       u9241 3C9C  
                                     u8290 4284                                       u8530 5304  
                                     u9330 4452                                       u9410 490C  
                                     u8610 2158                                       u9090 50AE  
                                     u9250 3CDC                                       u9170 3B60  
                                     i2l99 5F38                                       u8291 4280  
                                     u8531 5300                                       u9331 444E  
                                     u9411 4908                                       u8611 2154  
                                     u9091 50A8                                       u9251 3CD8  
                                     u9235 3C7A                                       u9171 3B5C  
                                     u7900 5DEA                                       u8540 5B46  
                                     u9340 4484                                       u9420 494A  
                                     u9500 2E98                                       u8700 228A  
                                     u8620 216E                                       u9180 3B82  
                                     u9260 5BFE                                       u7901 5DE6  
                                     u8541 5B42                                       u9341 4480  
                                     u9421 4946                                       u9501 2E94  
                                     u8701 2286                                       u8621 216A  
                                     u9085 5086                                       u9181 3B7E  
                                     u9165 3B28                                       u9261 5BF8  
                                     u7910 5714                                       u8550 5D48  
                                     u9430 4974                                       u9510 2EA8  
                                     u8710 22A8                                       u8630 2180  
                                     u9270 5C00                                       u7911 5710  
                                     u8551 5D44                                       u9351 44AE  
                                     u9431 4970                                       u9511 2EA4  
                                     u8711 22A4                                       u8631 217C  
                                     u7920 573E                                       u9360 44D2  
                                     u9440 49A2                                       u9600 3062  
                                     u9520 2EE8                                       u8800 23F8  
                                     u8720 22C8                                       u8640 2190  
                                     u8560 5CA8                                       u9280 585E  
                                     u7921 573A                                       u9361 44CE  
                                     u9441 499E                                       u9601 305E  
                                     u9521 2EE4                                       u8801 23F4  
                                     u8721 22C4                                       u8641 218C  
                                     u8561 5CA2                                       u9281 5858  
                                     u7850 5B64                                       u7930 5760  
                                     u9370 44FC                                       u9450 49EA  
                                     u9610 3074                                       u9530 2F28  
                                     u8810 2408                                       u8730 22D6  
                                     u8650 21CC                                       u8570 5CAA  
                                     u9290 5860                                       u7851 5B60  
                                     u7931 575C                                       u9371 44F8  
                                     u9451 49E6                                       u9611 3070  
                                     u9531 2F24                                       u8811 2404  
                                     u8731 22D2                                       u8651 21C8  
                                     u9195 3B96                                       u7860 5B80  
                                     u9380 453C                                       u9620 30A2  
                                     u9540 2F9E                                       u9460 2E20  
                                     u9700 2A08                                       u8900 24DC  
                                     u8820 2434                                       u8740 22E6  
                                     u8660 21DA                                       u8580 20F4  
                                     u9196 3BA0                                       u7861 5B7C  
                                     u9381 4538                                       u9621 309E  
                                     u9541 2F9A                                       u9461 2E1C  
                                     u9701 2A04                                       u8901 24D8  
                                     u8821 2430                                       u8741 22E2  
                                     u8661 21D6                                       u8581 20F0  
                                     u9197 3BB0                                       u9390 4586  
                                     u9630 30B8                                       u9550 2FC0  
                                     u9470 2E32                                       u9710 2A18  
                                     u8910 2516                                       u8830 2444  
                                     u8750 2318                                       u8670 2248  
                                     u8590 2106                                       u9391 4582  
                                     u9631 30B4                                       u9551 2FBC  
                                     u9471 2E2E                                       u9711 2A14  
                                     u8911 2512                                       u8831 2440  
                                     u8751 2314                                       u8671 2244  
                                     u8591 2102                                       u7960 484C  
                                     u9640 30CC                                       u9560 2FEA  
                                     u9480 2E42                                       u9800 2CC6  
                                     u9720 2A58                                       u8920 2528  
                                     u8840 2460                                       u8760 2326  
                                     u8680 2260                                       u7961 4848  
                                     u9641 30C8                                       u9561 2FE6  
                                     u9481 2E3E                                       u9801 2CC2  
                                     u9721 2A54                                       u8921 2524  
                                     u8841 245C                                       u8761 2322  
                                     u8681 225A                                       u7970 487A  
                                     u7954 482C                                       u9650 30E6  
                                     u9570 300E                                       u9490 2E86  
                                     u9810 2CF4                                       u9730 2A6A  
                                     u8930 2538                                       u8850 2470  
                                     u8770 2344                                       u8690 2262  
                                     u7971 4876                                       u7955 4826  
                                     u9651 30E2                                       u9571 300A  
                                     u9491 2E82                                       u9811 2CF0  
                                     u9731 2A66                                       u8931 2534  
                                     u8851 246C                                       u8771 2340  
                                     u7980 488C                                       u9900 5464  
                                     u9660 312E                                       u9580 3024  
                                     u9820 2D0A                                       u9740 2A7A  
                                     u8940 2558                                       u8860 2482  
                                     u8780 237C                                       u7981 4888  
                                     u9901 5460                                       u9661 312A  
                                     u9581 3020                                       u9821 2D06  
                                     u9741 2A76                                       u8941 2554  
                                     u8861 247E                                       u8781 2378  
                                     u7990 48C6                                       u9910 5482  
                                     u9670 315E                                       u9590 3042  
                                     u9830 2D1E                                       u9750 2AB0  
                                     u8950 256A                                       u8870 2498  
                                     u8790 23C2                                       u7991 48C2  
                                     u9911 547E                                       u9671 315A  
                                     u9591 303E                                       u9831 2D1A  
                                     u9751 2AAC                                       u8951 2566  
                                     u8871 2494                                       u8791 23BE  
                                     u9920 549E                                       u9680 318C  
                                     u9840 2D38                                       u9760 2AC0  
                                     u8960 2586                                       u8880 24AE  
                                     u9921 549A                                       u9681 3188  
                                     u9841 2D34                                       u9761 2ABC  
                                     u8961 2582                                       u8881 24AA  
                                     u9930 54C4                                       u9850 2D80  
                                     u9770 2C3A                                       u9690 29F6  
                                     u8890 24C2                                       u8970 5C70  
                                     u9931 54C0                                       u9851 2D7C  
                                     u9691 29F2                                       u8891 24BE  
                                     u8971 5C6A                                       u9940 54E8  
                                     u9860 2DAE                                       u9780 2C94  
                                     u8980 5C72                                       u9941 54E4  
                                     u9861 2DAA                                       u9781 2C90  
                                     u8990 535C                                       u9950 5502  
                                     u9870 2DE8                                       u9790 2CB4  
                                     u8991 5358                                       u9951 54FE  
                                     u9871 2DE4                                       u9791 2CB0  
                                     u9775 2C30                                       u9880 5424  
                                     u9960 551C                                       u9881 5420  
                                     u9961 5518                                       u9890 543E  
                                     u9970 553A                                       u9891 543A  
                                     u9971 5536                                       u9980 5550  
                                     u9981 554C                                       u9990 5574  
                                     u9991 5570                                       _WPUB 000F5B  
                                     abs@a 0015                                       _dbuf 0188  
                                     _atoi 42A6                                       _ctoa 58EA  
                                     _main 259A                                       _dtoa 3526  
                                     _font F1A7                                       _prec 005B  
                                     _temp 0114                                       _otoa 3F02  
                                     _nout 011A                                       pad@i 001A  
                                     pad@p 0017                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001C                                       fsr2l 000FD9  
                                     _stoa 45C8                                       btemp 005D  
                                     _utoa 3CFE                                       _xtoa 380C  
                            ___fpclassifyf 4FC4                                       prodh 000FF4  
                                     prodl 000FF3                                       start 003E  
                            __CFG_IESO$OFF 000000                            ___fldiv@new_exp 0053  
                   __end_of_SPI_Initialize 5F0E                               _tolower$2100 000F  
                            lcd_fill@width 0010                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                _string_temp 0124  
                                    ??_abs 0017                                      ??_pad 0019  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 5F20  
                            ___fltol@sign1 000B                            __end_of___aodiv 45C8  
                                    ?_atoi 000A                                      ?_ctoa 001E  
                          __end_of___fladd 259A                                      ?_main 0001  
                                    ?_dtoa 001E                            __end_of___aomod 4A2C  
                          __end_of___fldiv 31A0                            __end_of___awdiv 54D6  
                          __end_of___flneg 5CE8                                      STR_10 FFD2  
                                    STR_13 FFC6                                      STR_15 FFC6  
                                    STR_31 FFE9                                      STR_24 FFC7  
                                    STR_40 FFEC                                      STR_33 FFE9  
                                    STR_17 FFCE                                      STR_42 FFEC  
                                    STR_19 FFCE                                      STR_35 FFEF  
                                    STR_28 FFCF                                      STR_52 FFDB  
                                    STR_60 FFD6                            __end_of___awmod 5586  
                                    STR_37 FFEF                                      STR_45 FFDA  
                                    STR_62 FFD6                                      STR_70 FFF2  
                                    STR_47 FFDA                                      STR_55 FFF5  
                                    STR_72 FFF2                                      STR_57 FFF5  
                                    STR_82 FFDF                                      STR_90 FFE2  
                                    STR_67 FFD7                                      STR_75 FFDE  
                                    STR_92 FFE2                                      STR_77 FFDE  
                                    STR_85 FFF8                                      STR_94 FFC2  
                                    STR_87 FFF8                                      STR_96 FFC2  
                          __end_of___flmul 2E06                                      ?_otoa 001E  
                          __end_of___flsub 5ABE                            __end_of___fltol 4EC0  
        __end_of_IOCB4_SetInterruptHandler 5F2A                                      ?_stoa 000C  
                                    u10000 5664                                      u10001 5660  
                                    u10010 56A2                                      u10011 569E  
                                    u10020 56D6                                      u10100 4E04  
                                    u10021 56D2                                      u10030 4EEE  
                                    u10110 4E32                                      u10031 4EEA  
                                    u10111 4E2E                                      ?_utoa 001E  
                                    u10040 4F2C                                      u10120 4E46  
                                    u11000 408A                                      u10200 51D0  
                                    u10041 4F28                                      u10121 4E42  
                                    u10105 4DFA                                      u11001 4086  
                                    u10201 51CC                                      u10050 4F4A  
                                    u10130 4E6E                                      u11010 409A  
                                    u10210 51FA                                      u10051 4F46  
                                    u10131 4E6A                                      u11011 4096  
                                    u10211 51F6                                      u10300 35BA  
                                    u10060 4F6A                                      u10140 4E8E  
                                    u11020 40AC                                      u11100 470A  
                                    u10220 5228                                      u10301 35B6  
                                    u10061 4F66                                      u10141 4E8A  
                                    u11021 40A8                                      u11101 4706  
                                    u10221 5224                                      u10230 595E  
                                    u10310 35E8                                      u10070 4FBA  
                                    u10150 4E9E                                      u11110 4744  
                                    u10231 595A                                      u10311 35E4  
                                    u10071 4FB6                                      u10151 4E9A  
                                    u11111 4740                                      u11031 45D2  
                                    u10240 598C                                      u10400 37BE  
                                    u10320 35F8                                      u10080 5CC6  
                                    u11040 45F4                                      u11120 3D0C  
                                    u11200 3838                                      u12000 140E  
                                    u10241 5988                                      u10401 37BA  
                                    u10321 35F4                                      u10081 5CC2  
                                    u11041 45F0                                      u10161 50C8  
                                    u11121 3D08                                      u11201 3834  
                                    u12001 140A                                      u10250 58FE  
                                    u10330 3722                                      u10090 4DD0  
                                    u10410 1552                                      u11050 4626  
                                    u10170 50EC                                      u11130 3D2A  
                                    u11210 3864                                      u12010 14AE  
                                    u10251 58FA                                      u10331 371E  
                                    u10091 4DCC                                      u10411 154E  
                                    u11051 4622                                      u10171 50E8  
                                    u11131 3D26                                      u11211 3860  
                                    u12011 14AA                                      u10340 3740  
                                    u10260 3556                                      u10500 170E  
                                    u10420 15A2                                      u11060 4644  
                                    u10180 5116                                      u11140 3E76  
                                    u11300 3A20                                      u11220 38C8  
                                    u12020 57C4                                      u12100 2728  
                                    u10341 373C                                      u10261 3550  
                                    u10501 1708                                      u10421 159E  
                                    u11061 4640                                      u10181 5112  
                                    u11141 3E72                                      u11301 3A1C  
                                    u11221 38C4                                      u12021 57C0  
                                    u12101 2724                                      u10350 375A  
                                    u10270 3558                                      u10510 1710  
                                    u10430 15B0                                      u11070 4670  
                                    u10190 5156                                      u11150 3E94  
                                    u11310 3A3E                                      u11230 3912  
                                    u12030 4A40                                      u12110 27F0  
                                    u10351 3756                                      u10431 15AC  
                                    u11071 466C                                      u10191 5152  
                                    u11151 3E90                                      u11311 3A3A  
                                    u11231 390C                                      u12031 4A3C  
                                    u12111 27EC                                      u11400 43F2  
                                    u10360 3774                                      u10280 356E  
                                    u10600 1946                                      u10520 1726  
                                    u10440 15C2                                      u11080 46AA  
                                    u11160 3EAE                                      u11320 3A58  
                                    u11240 3914                                      u12040 4A72  
                                    u12120 29CC                                      u10361 3770  
                                    u10281 356A                                      u10601 1942  
                                    u10521 1722                                      u10441 15BE  
                                    u11081 46A6                                      u11161 3EAA  
                                    u11321 3A54                                      u12041 4A6E  
                                    u12121 29C8                                      u11410 4408  
                                    u10370 3784                                      u10290 359C  
                                    u10610 1962                                      u10530 17AA  
                                    u10450 160A                                      u11090 46FA  
                                    u11170 3EC8                                      u11330 3A72  
                                    u11250 392A                                      u12050 4ADC  
                                    u11411 4404                                      u10371 3780  
                                    u10291 3598                                      u10611 195E  
                                    u10531 17A6                                      u10451 1606  
                                    u11091 46F6                            __end_of___lodiv 51B2  
                                    u11171 3EC4                                      u11331 3A6E  
                                    u11251 3926                                      u12051 4AD8  
                                    u11420 441A                                      u10380 3796  
                                    u10700 1BDA                                      u10620 1998  
                                    u10540 183E                                      u10460 163A  
                                    u11180 3ED8                                      u11340 3A82  
                                    u11260 395E                                      u11500 0068  
                                    u12060 4AEC                            ___awdiv@divisor 0005  
                                    u11421 4416                                      u10381 3792  
                                    u10701 1BD6                                      u10621 1994  
                                    u10541 183A                                      u10461 1634  
                                    u11181 3ED4                                      u11341 3A7E  
                                    u11261 3958                                      u11501 0064  
                                    u12061 4AE8                                      u10390 37A6  
                                    u10710 1C22                                      u10630 19BE  
                                    u10550 18B0                                      u10470 163C  
                                    u11430 4CBE                                      u11350 3A92  
                                    u11270 3960                                      u11190 381A  
                                    u11510 0138                                      u12070 4B22  
                                    u10391 37A2                                      u10711 1C1E  
                                    u10631 19BA                                      u10551 18AC  
                                    u11431 4CBA                                      u11351 3A8E  
                                    u11191 3816                                      u11511 0134  
                                    u12071 4B1E                                      ?_xtoa 001E  
                                    u11360 42E0                                      u10800 1DF0  
                                    u10720 1C32                                      u10640 19D0  
                                    u10560 18D6                                      u10480 1652  
                                    u11440 4CFA                                      u11280 3976  
                                    u11600 0358                                      u11520 0146  
                                    u12080 25F4                                      _T1CON 000FCD  
                                    u12137 5DCE                                      u11361 42DC  
                                    u10801 1DEC                                      u10721 1C2E  
                                    u10641 19CC                                      u10561 18D2  
                                    u10481 164E                                      u11281 3972  
                                    u11601 0352                                      u11521 0142  
                                    u12081 25F0                                      u11370 4318  
                                    u10810 1EC2                                      u10730 1C9A  
                                    u10650 19DE                                      u10570 18E8  
                                    u10490 16DE                                      u11450 4D0A  
                                    u11290 39DE                                      u11610 035A  
                                    u11530 016E                                      u12090 270C  
                                    u11371 4314                                      u10811 1EBE  
                                    u10731 1C96                                      u10651 19DA  
                                    u10571 18E4                                      u10491 16DA  
                                    u11451 4D06                                      u11531 016A  
                                    u12091 2708                                      u11380 4334  
                                    u10900 2076                                      u10820 1EDE  
                                    u10740 1D3E                                      u10660 19F4  
                                    u10580 190A                                      u11460 4D28  
                                    u11700 0660                                      u11620 0370  
                                    u11540 01B2                                      u11381 4330  
                                    u10901 2070                                      u10821 1EDA  
                                    u10741 1D3A                                      u10661 19F0  
                                    u10581 1906                                      u11461 4D24  
                                    u11701 065C                                      u11621 036C  
                                    u11541 01AE                                      u11390 43F0  
                                    u10910 2078                                      u10830 1EF0  
                                    u10750 1D50                                      u10670 1A02  
                                    u10590 1930                                      u11470 4D3A  
                                    u11710 0686                                      u11630 03A4  
                                    u11550 0232                                      u11391 43EA  
                                    u10831 1EEC                                      u10751 1D4C  
                                    u10671 19FE                                      u10591 192C  
                                    u11471 4D36                                      u11447 4CF0  
                                    u11295 39CC                                      u11711 0682  
                                    u11631 03A0                                      u11551 022C  
                                    u10920 208E                                      u10840 1EFE  
                                    u10760 1D62                                      u10680 1A2C  
                                    u11480 4D7C                                      u11800 0A3E  
                                    u11720 070A                                      u11640 03E8  
                                    u11560 0234                                      u10921 208A  
                                    u10841 1EFA                                      u10761 1D5E  
                                    u10681 1A28                                      u11481 4D78  
                                    u11801 0A3A                                      u11721 0706  
                                    u11641 03E4                                      u10850 1F34  
                                    u10770 1D70                                      u10690 1B74  
                                    u10930 3F10                                      u11490 4D9E  
                                    u11810 0AB6                                      u11730 0740  
                                    u11650 0442                                      u11570 024A  
                                    u10851 1F30                                      u10771 1D6C  
                                    u10691 1B70                                      u10931 3F0C  
                                    u11811 0AB2                                      u11731 073C  
                                    u11651 043E                                      u11571 0246  
                                    u10860 1F62                                      u10780 1D8A  
                                    u10940 3F2E                                      u11900 0FA0  
                                    u11820 0B3C                                      u11740 07A6  
                                    u11660 04C6                                      u11580 0270  
                                    u10861 1F5E                                      u10781 1D86  
                                    u10941 3F2A                                      u11485 4D6C  
                                    u11901 0F9C                                      u11821 0B38  
                                    u11741 07A2                                      u11661 04C2  
                                    u11581 026C                                      u10870 1FE6  
                                    u10790 1D98                                      u10950 3FE8  
                                    u11910 1018                                      u11830 0BC4  
                                    u11750 0856                                      u11670 04FC  
                                    u11590 02AC                                      u10871 1FE2  
                                    u10791 1D94                                      u11487 4D62  
                                    u11911 1014                                      u11831 0BC0  
                                    u11751 0852                                      u11671 04F8  
                                    u11591 02A8                                      u10880 2000  
                                    u10960 4028                                      u11920 109E  
                                    u11840 0C4C                                      u11760 08C2  
                                    u11680 05B4                                      u10881 1FFC  
                                    u10961 4024                                      u11497 4D94  
                                    u11921 109A                                      u11841 0C48  
                                    u11761 08BC                                      u11681 05B0  
                                    u10890 2018                                      u10970 4046  
                                    u11930 1126                                      u11850 0CBE  
                                    u11770 08C4                                      u11690 05EA  
                                    u10891 2014                                      u10971 4042  
                                    u10955 3FD6                                      u11931 1122  
                                    u11851 0CBA                                      u11691 05E6  
                                    u10980 4060                                      u11940 115C  
                                    u11860 0D3E                                      u11780 08DA  
                                    u10981 405C                                      u11941 1158  
                                    u11861 0D3A                                      u11781 08D6  
                                    u10990 407A                                      u11950 123E  
                                    u11870 0DB0                                      u11790 0988  
                                    u10991 4076                                      u11951 123A  
                                    u11871 0DAC                                      u11791 0984  
                                    u11960 1274                                      u11880 0E5E  
                          __end_of___lomod 5282                                      u11961 1270  
                                    u11881 0E5A                                      u11970 1314  
                                    u11890 0EEA                                      u11971 1310  
                                    u11891 0EE6                                      u11980 133A  
                                    u11981 1336                                      u11990 13D8  
                                    u11991 13D4                                      i2l290 5D8A  
                          ___awdiv@counter 0007                               vfpfcnvrt@fmt 00BA  
                             vfpfcnvrt@llu 00DE                                      _TMR1H 000FCF  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0016  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_msDelay 5DEC  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 5ED0  
                                    _flags 00FC                                      _botao 011E  
                                    _errno 0118                                      _fputc 5282  
                          __end_of_isalpha 5C06                                      _fputs 5B04  
                          __end_of_isdigit 5D20                                      atoi@n 0017  
                                    pad@fp 0013                                      atoi@s 000A  
                                    _width 00FA                                      ctoa@c 0020  
                                    _putch 5F36                                      ctoa@w 0021  
                                    dtoa@d 0020                                      dtoa@i 0040  
                                    dtoa@n 0038                                      dtoa@p 0032  
                                    dtoa@s 0036                                      dtoa@w 0034  
                         __end_of_SPI_Open 5636                            __end_of_islower 5C78  
                          __end_of_isspace 5998                    __end_of_TMR1_Initialize 5E46  
                          __end_of_isupper 5CB0                                      pclath 000FFA  
                                    tablat 000FF5                                      otoa@d 0020  
                                    otoa@i 003E                                      otoa@n 0036  
                                    otoa@p 0030                                      otoa@t 0032  
                                    otoa@w 0034                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0018  
                                    stoa@l 0020                                      stoa@p 001E  
                                    stoa@s 000E                                      stoa@w 001A  
                                    ttemp5 005E                                      ttemp6 0061  
                                    ttemp7 0065                                      utoa@d 0020  
                                    utoa@i 003C                                      utoa@n 0034  
                                    utoa@p 0030                                      utoa@w 0032  
                                    status 000FD8                                      wtemp8 005E  
                           ?___fpclassifyf 0003                            __end_of_tolower 582E  
                                    xtoa@c 0043                                      xtoa@d 0020  
                                    xtoa@i 0041                                      xtoa@n 0039  
                                    xtoa@p 0035                                      xtoa@w 0037  
                                    xtoa@x 0028                            __end_of_strncmp 4DBA  
                          __end_of_toupper 588C                             lcd_fill@height 000E  
                         ___lodiv@dividend 0003                            ?_SPI_Initialize 0001  
                             _toupper$2115 000F            ??_IOCB4_DefaultInterruptHandler 0001  
                          __initialization 5998                               __end_of_atoi 4440  
                             __end_of_ctoa 5946                               __end_of_main 29DC  
                             __end_of_dtoa 380C                               __end_of_font FF73  
                             __end_of_otoa 40F2                               __end_of_stoa 474E  
                             __end_of_utoa 3F02                               __end_of_xtoa 3AE8  
                        __end_of_IOCB4_ISR 5E1A                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 000C                                     ??_ctoa 0021  
                                   ??_main 005B                                     ??_dtoa 0028  
                        ?_lcd_set_cursor_x 0006                          ?_lcd_set_cursor_y 0006  
                            lcd_send@value 0004                                     ??_otoa 0028  
                                   ??_stoa 0010                                     ??_utoa 0028  
                                   ??_xtoa 0029                              __activetblptr 000003  
                       ??_lcd_set_cursor_x 0008                         ??_lcd_set_cursor_y 0008  
                           __CFG_RETEN$OFF 000000                           ___lodiv@quotient 0013  
                           lcd_draw_char@i 0021                             lcd_draw_char@j 001F  
                           lcd_draw_char@k 0020                   __end_of_SPI_ExchangeByte 5E86  
                           lcd_draw_char@x 000C                             lcd_draw_char@y 000E  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_fputc 0003  
                                   STR_101 FFE3                                     STR_110 FFFB  
                                   ?_fputs 000C                                     STR_112 FFE6  
                                   STR_105 FFC3                                     STR_114 FFE6  
                                   _ADRESH 000FC4                                     STR_108 FFFB  
                                   _ADRESL 000FC3                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                           ___awdiv@dividend 0003  
                                   ?_putch 0001                                     _T1GCON 000FAA  
                          __CFG_BBSIZ$BB2K 000000                             __CFG_WDTEN$OFF 000000  
                                   i2l6410 5D64                                     i2l6412 5D7A  
                                   i2l6414 5D82                                     i2l6408 5D56  
                                   i2l6474 5DEC                                     i2l6476 5E00  
                                   i2l6582 5EB8                                     i2l6584 5EC8  
                                   i2l6586 5ECC                                     i2l6914 0012  
                                   i2l6916 0020                                     i2l6918 002E  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 00C4  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                         __end_of___xxtofl 42A6                            _global_bg_color 011C  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0008  
                         __end_of_lcd_fill 5762                               vfprintf@cfmt 00EC  
                         __end_of_lcd_init 3526                           __end_of_lcd_send 5EB8  
                                   ___flge 4EC0                                     ___fleq 5636  
                                ??___aodiv 0013                                  ??___fladd 0032  
                                ??___aomod 0013                                     ___wmul 5E46  
                                ??___fldiv 004A                                  ??___awdiv 0007  
                                ??___flneg 0007                             __CFG_STVREN$ON 000000  
                                ??___awmod 0007                                  ??___flmul 0019  
                                ??___flsub 0042                                  ??___fltol 0007  
                                ??___lodiv 0013                                  ??___lomod 0013  
                                   _efgtoa 152A                                     _floorf 3AE8  
                                   clear_0 59BE                                     clear_1 59CA  
                         ___awdiv@quotient 0009                            ___awmod@divisor 0005  
                          ___awmod@counter 0007                                     pad@buf 0015  
                                   ctoa@fp 001E                                     dtoa@fp 001E  
                                   _strcpy 588C                                     _strlen 5D20  
                                ??_msDelay 0003                                     fputc@c 0003  
                                   fputs@c 0010                                     fputs@i 0011  
                                   fputs@s 000C                                  ??_isalpha 0005  
                                ??_isdigit 0005                            ___fpclassifyf@e 000B  
                          ___fpclassifyf@u 000D                            ___fpclassifyf@x 0003  
                                ??_islower 0005                               __mediumconst F1A6  
                                ??_isspace 0005                                     otoa@fp 001E  
                                   tblptrh 000FF7                                  ??_isupper 0005  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0007                                     stoa@cp 001C  
                                   stoa@fp 000C                                     putch@c 0001  
                         __end_of_vfprintf 57CE                                     utoa@fp 001E  
IOCB4_SetInterruptHandler@InterruptHandler 0003                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 5DBE                                  ??_tolower 000B  
                                   xtoa@fp 001E                                  ??_strncmp 0009  
                                ??_toupper 000B              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 002A                                 ___flge@ff2 002E  
                          ??___fpclassifyf 0007                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 000D                               ___xxtofl@exp 000C  
                        _SYSTEM_Initialize 5E86                               ___xxtofl@val 0003  
                               ___fleq@ff1 0003                                 ___fleq@ff2 0007  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 59DE                                 ___flneg@f1 0003  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0003                             __pcstackCOMRAM 0001  
                             __pidataBANK1 5F2A                        ??_SYSTEM_Initialize 0005  
                            __end_of_fputc 534C                              __end_of_fputs 5B48  
    __end_of_IOCB4_DefaultInterruptHandler 5F3A     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 5F38                              __end_of_putch 5F38  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0005  
                         ??_lcd_set_cursor 000C                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0007                  __end_of_SYSTEM_Initialize 5EA0  
                                  ??_fputs 0010                                    ??_putch 0003  
                               __pbssBANK0 00FA                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                            __CFG_PLLCFG$OFF 000000  
                                  ?___flge 002A                                    ?___fleq 0003  
                                  ?___wmul 0003                                    ?_efgtoa 0074  
                                  ?_floorf 0060                                 ??_SPI_Open 0003  
                  __size_of_ADC_Initialize 0016                                    ?_strcpy 0003  
                                  ?_strlen 0003                           __CFG_CANMX$PORTB 000000  
                                ?___xxtofl 0003                                    _REFOCON 000F9A  
                                  _OSCCON2 000FD2                         __size_of_vfpfcnvrt 14E8  
                                  _OSCTUNE 000F9B               __size_of_IOCB4_InterruptCall 0036  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 000C                                  ?_lcd_init 0001  
                                ?_lcd_send 0004                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0003                           ??_SPI_Initialize 0003  
                _IOCB4_SetInterruptHandler 5F20                               _codigo_digit 0120  
                          __CFG_PWRTEN$OFF 000000                       _ADC_InterruptHandler 0122  
                                  __Hparam 0000                                    __Lparam 0000  
                       __size_of_vsnprintf 0136                          ??_lcd_draw_string 002C  
                          __size_of___flge 0104                            __size_of___fleq 00AA  
                                  ___aodiv 4440                                    ___fladd 20DA  
                                  ___aomod 48C8                                    ___fldiv 2E06  
                                  ___awdiv 5412                                    ___flneg 5CB0  
                                  ___awmod 54D6                                    ___flmul 29DC  
                                  ___flsub 5A78                                    ___fltol 4DBA  
                          __size_of___wmul 0026                                    ___lodiv 50C2  
                                  ___lomod 51B2                                  ?_vfprintf 00E6  
                          __size_of_efgtoa 0BB0                                  ?_snprintf 01E6  
                          __size_of_floorf 0216                                    __pcinit 5998  
                                  __ramtop 0F00                                    __ptext0 259A  
                                  __ptext1 5D8C                                    __ptext2 4A2C  
                                  __ptext3 5762                                    __ptext4 0042  
                                  __ptext5 380C                                    __ptext6 582E  
                                  __ptext7 5C40                                    __ptext8 5BCA  
                                  __ptext9 3CFE                                    _msDelay 5DBE  
                                _IOCB4_ISR 5DEC                            __size_of_strcpy 005E  
                          __size_of_strlen 0036                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 5F0E                               __size_of_abs 0040  
                             __size_of_pad 00C6                                    _isalpha 5BCA  
                                  _isdigit 5CE8                                 ??___xxtofl 0007  
                         ___awmod@dividend 0003                                    _islower 5C40  
                 ??_PIN_MANAGER_Initialize 0005                                    _isspace 5946  
                        __CFG_MSSPMSK$MSK7 000000                                    _ntc_val 010C  
                                  _isupper 5C78                                    efgtoa@c 007A  
                                  efgtoa@d 0098                                    efgtoa@e 00B0  
                                  efgtoa@f 0076                                    efgtoa@g 00AC  
                                  efgtoa@h 00A2                                    efgtoa@i 00AA  
                                  efgtoa@l 00A6                                    efgtoa@m 0094  
                                  efgtoa@n 00B2                                    efgtoa@p 009C  
                                  efgtoa@t 0090                                    efgtoa@u 00B4  
                                  efgtoa@w 009F                                    _pot_val 0110  
                                  atoi@neg 0010                      __end_of_lcd_draw_char 48C8  
               __size_of_SYSTEM_Initialize 001A                                 ??_lcd_fill 000E  
                                  _tolower 57CE                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 0012                                 ??_lcd_send 0005  
                                  _strncmp 4C94                                    _toupper 582E  
                     end_of_initialization 59DE                                    floorf@e 006E  
                                  floorf@m 006A                                    floorf@u 0070  
                                  floorf@x 0060                         ??_SPI_ExchangeByte 0003  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 0005                                    fputs@fp 000E  
                      lcd_draw_char@fIndex 0010                          __end_of_vfpfcnvrt 152A  
                               efgtoa@mode 00A1                                 efgtoa@sign 009A  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                           lcd_fill@bg_color 000C  
                               ??_vfprintf 005B                                 ??_snprintf 005B  
                                  strcpy@d 000B                                    strlen@a 0005  
                                  strcpy@s 0009                                    strlen@s 0003  
                        lcd_draw_string@pS 0026                                  _PORTBbits 000F81  
                        _spi_configuration FF73                                 ?_IOCB4_ISR 0001  
                              ___fladd@grs 0039                           __CFG_FOSC$INTIO2 000000  
                            ___xxtofl@sign 000B                                  _TRISCbits 000F94  
                        __end_of_vsnprintf 4B62                                ___fldiv@grs 0055  
                              ___fldiv@rem 004E                                ___flmul@grs 001F  
                               lcd_send@dc 0005                                 _string_ntc 0200  
                               _string_pot 0264               __end_of_INTERRUPT_Initialize 5F36  
                     SPI_ExchangeByte@data 0003                             __end_of___flge 4FC4  
                           __end_of___fleq 56E0                  __end_of_spi_configuration FF77  
                              vfpfcnvrt@ap 00BC                                vfpfcnvrt@cp 00C2  
                              vfpfcnvrt@ct 00D0                                vfpfcnvrt@fp 00B8  
                              vfpfcnvrt@ll 00D3                             __end_of___wmul 5E6C  
                              vfpfcnvrt@vp 00DB                             __end_of_efgtoa 20DA  
                           _ADC_Initialize 5EE6                             __end_of_floorf 3CFE  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 0100  
                        __size_of_SPI_Open 00B0                             __end_of_strcpy 58EA  
                           __end_of_strlen 5D56                        start_initialization 5998  
                          ___lodiv@divisor 000B                            ___lodiv@counter 001B  
          __size_of_PIN_MANAGER_Initialize 0046                                __end_of_abs 5BCA  
                              __end_of_pad 5412                      __end_of___fpclassifyf 50C2  
                 __size_of_PIN_MANAGER_IOC 0018             SPI_Open@spiUniqueConfiguration 0004  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 00E8  
                      _IOCB4_InterruptCall 5D56                                   ??___flge 0032  
                                 ??___fleq 000B                                   ??___wmul 0007  
                                 ??_efgtoa 007B                     __end_of_ADC_Initialize 5EFC  
                              __pdataBANK1 01F4                                   ??_floorf 0064  
                                 ??_strcpy 0007                                   ??_strlen 0005  
                              ??_IOCB4_ISR 0001                                  ___fladd@a 002E  
                                ___fladd@b 002A                    __size_of_lcd_draw_pixel 0016  
                             vsnprintf@cnt 01DE                               vsnprintf@fmt 00F2  
                                ___fldiv@a 0046                                  ___fldiv@b 0042  
                                ___flmul@a 0015                                  ___flmul@b 0011  
                              __pbssCOMRAM 005B                                  ___flsub@a 003E  
                                ___flsub@b 003A                              __pcstackBANK0 0060  
                            __pcstackBANK1 01DC                           ___aodiv@dividend 0003  
                     ?_IOCB4_InterruptCall 0001                                snprintf@fmt 01EA  
                        __size_of___xxtofl 01B4                            _lcd_draw_string 4B62  
                         _lcd_set_cursor_x 5A30                           _lcd_set_cursor_y 59E8  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$1977 0012  
                                _atoi$1978 0016                                  _atoi$1979 0014  
                                __pnvBANK1 01FB                                _efgtoa$1332 0084  
                              _efgtoa$1341 008A                                _efgtoa$1333 0086  
                              _efgtoa$1342 008C                                _efgtoa$1343 008E  
                              _efgtoa$1337 0088                     _PIN_MANAGER_Initialize 5ABE  
                                _dtoa$1309 0030                                  __pintcode 0008  
                            __pmediumconst F1A6                                   ?___aodiv 0003  
                                 ?___fladd 002A                                   ?___aomod 0003  
                                 ?___fldiv 0042                                   ?___awdiv 0003  
                         ___aodiv@quotient 0015                                   ?___flneg 0003  
                                 ?___awmod 0003                                   ?___flmul 0011  
                                 ?___flsub 003A                                   ?___fltol 0003  
                                 ?___lodiv 0003                                   ?___lomod 0003  
                          ?_ADC_Initialize 0001               ??_INTERRUPT_InterruptManager 0001  
                        __size_of_vfprintf 006C                          __size_of_snprintf 0032  
                                 ?_msDelay 0001                            ___lomod@divisor 000B  
                          ___lomod@counter 0013                                   ?_isalpha 0003  
                                 ?_isdigit 0003                                   ?_islower 0003  
                    ??_IOCB4_InterruptCall 0001                                   ?_isspace 0003  
                                 ?_isupper 0003                                   ?_tolower 0009  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0003                                   ?_toupper 0009  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 5F32  
                  __size_of_lcd_set_cursor 0042                             ___wmul@product 0007  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                            lcd_set_cursor@x 0008  
                          lcd_set_cursor@y 000A        __size_of_INTERRUPT_InterruptManager 0036  
                                 _PIR1bits 000F9E                      lcd_draw_string@lIndex 0032  
                                 i2u805_40 5EC8                                   i2u805_41 5EC4  
                                 i2u831_40 0020                                   i2u831_41 001C  
                                 i2u832_40 002E                                   i2u832_41 002A  
                                 i2u783_40 5D64                                   i2u783_41 5D60  
                                 i2u784_40 5D7A                                   i2u784_41 5D76  
                                 i2u788_40 5E00                                   i2u788_41 5DFC  
                                 i2u789_48 5E06                                   i2u789_49 5E18  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001A  
                                _tensao_in 01D8                           lcd_draw_string@k 0030  
                         lcd_draw_string@x 0022                           lcd_draw_string@y 0024  
                        ??_PIN_MANAGER_IOC 0001                                  _vfpfcnvrt 0042  
                                _xtoa$1380 0033                                  _xtoa$1379 0031  
                                 _SPI_Open 5586                          ??_TMR1_Initialize 0003  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0003  
                         __CFG_SOSCSEL$DIG 000000                    __end_of_lcd_draw_string 4C94  
                             _isspace$2017 0009                                  msDelay@ms 0004  
                               vfpfcnvrt@c 00DD                                 vfpfcnvrt@f 00CC  
                              _INTCON2bits 000FF1                                  copy_data0 59AC  
                    ?_INTERRUPT_Initialize 0001                                  _vsnprintf 4A2C  
                      lcd_draw_pixel@color 0006                                   __Hrparam 0000  
                               vfprintf@ap 00EA                                   __Lrparam 0000  
                               vfprintf@fp 00E6                          _ADC_GetConversion 5C06  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0003                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0003                           __size_of___aodiv 0188  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039A                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                              vsnprintf@ap 00F4                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0106  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 00B8                                 snprintf@ap 01F2  
                          ___aodiv@divisor 000B                            ___aodiv@counter 0013  
                   _IOCB4_InterruptHandler 01FD                             _lcd_draw_pixel 5ED0  
                       ___fpclassifyf@F463 0104                        ??_ADC_GetConversion 0005  
                         __size_of_msDelay 002E                                   ___xxtofl 40F2  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 51B2                                   __ptext11 50C2  
                                 __ptext20 4FC4                                   __ptext12 4C94  
                                 __ptext21 4DBA                                   __ptext13 45C8  
                               _T1GCONbits 000FAA                                   __ptext30 5412  
                                 __ptext22 5A78                                   __ptext14 3F02  
                                 __ptext31 3526                                   __ptext23 20DA  
                                 __ptext15 152A                                   __ptext40 5F36  
                                 __ptext32 5B8A                                   __ptext24 5CB0  
                                 __ptext16 57CE                                   __ptext41 42A6  
                                 __ptext33 48C8                                   __ptext25 29DC  
                                 __ptext17 5C78                                   __ptext50 5B48  
                                 __ptext42 5946                                   __ptext34 4440  
                                 __ptext26 4EC0                                   __ptext18 588C  
                                 __ptext51 59E8                                   __ptext43 5CE8  
                                 __ptext35 58EA                                   __ptext27 5636  
                                 __ptext19 3AE8                                   __ptext60 5ABE  
                                 __ptext52 5A30                                   __ptext44 5E46  
                                 __ptext36 534C                                   __ptext28 2E06  
                                 __ptext61 5F20                                   __ptext53 5ED0  
                                 __ptext45 31A0                                   __ptext37 5D20  
                                 __ptext29 54D6                                   __ptext70 5F38  
                                 __ptext62 5F0E                                   __ptext54 5EA0  
                                 __ptext46 5DBE                                   __ptext38 5B04  
                                 __ptext71 5D56                                   __ptext63 5F32  
                                 __ptext55 5E6C                                   __ptext47 56E0  
                                 __ptext39 5282                                   __ptext72 0000  
                                 __ptext64 5EE6                                   __ptext56 40F2  
                                 __ptext48 4B62                                   __ptext65 5586  
                                 __ptext57 5E86                                   __ptext49 474E  
                                 __ptext66 5C06                                   __ptext58 5E1A  
                                 __ptext59 5EFC                                   __ptext68 5EB8  
                                 __ptext69 5DEC                           __size_of_isupper 0038  
                                 _lcd_fill 56E0                                   _lcd_init 31A0  
                                 _lcd_send 5EA0                           __size_of_tolower 0060  
                               strcpy@dest 0003                           __size_of_strncmp 0126  
                         __size_of_toupper 005E                                 ?_vsnprintf 00EE  
                            __size_of_atoi 019A                              __size_of_ctoa 005C  
                            __size_of_main 0442                              __size_of_dtoa 02E6  
                            __size_of_otoa 01F0                              __size_of_stoa 0186  
                            __size_of_utoa 0204                              __size_of_xtoa 02DC  
                __end_of_ADC_GetConversion 5C40                                   efgtoa@fp 0074  
                                 efgtoa@ne 0096                                   efgtoa@pp 0092  
                                 efgtoa@ou 0080                                  stoa@F1174 01F4  
                                 _temp_ntc 0108                      lcd_draw_char@bg_color 0014  
                                 int$flags 005D                                   _vfprintf 5762  
                    lcd_draw_char@fg_color 0012         __end_of_INTERRUPT_InterruptManager 003E  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 5EE6  
                                 _snprintf 5D8C                   __end_of_lcd_set_cursor_x 5A78  
                 __end_of_lcd_set_cursor_y 5A30                        __CFG_INTOSCSEL$HIGH 000000  
                                 msDelay@k 0005                           ___aomod@dividend 0003  
                           _vfpfcnvrt$1416 00CA                             _vfpfcnvrt$1394 00C6  
                           _vfpfcnvrt$1395 00C8                                 _INTCONbits 000FF2  
                         ?_lcd_draw_string 0022                                   isalpha@c 0003  
                                 isdigit@c 0003                     ??_INTERRUPT_Initialize 0003  
                               vsnprintf@f 01E0                                 vsnprintf@n 00F0  
                               vsnprintf@s 00EE                              _lcd_draw_char 474E  
                                snprintf@n 01E8                                  snprintf@s 01E6  
                                 intlevel2 0000                             _lcd_set_cursor 5B48  
                        lcd_set_cursor_x@x 0006                          lcd_set_cursor_y@y 0006  
                                 islower@c 0003                                   isspace@c 0003  
                  ?_PIN_MANAGER_Initialize 0001                                  strcpy@src 0005  
                                 isupper@c 0003                                  strncmp@_l 0003  
                                strncmp@_r 0005                           ??_ADC_Initialize 0003  
                         _SPI_ExchangeByte 5E6C                    lcd_draw_string@bg_color 002A  
                              efgtoa@nmode 009E                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 000B                    lcd_draw_string@fg_color 0028  
                          ?_lcd_draw_pixel 0006                                ??_vfpfcnvrt 00BE  
                                 stoa@nuls 0011                            ___aomod@counter 0013  
                                 tolower@c 0009                             _vsnprintf$2147 01DC  
                   __size_of___fpclassifyf 00FE                                   strncmp@l 000A  
                                 strncmp@n 0007                                   strncmp@r 000C  
                                 toupper@c 0009                                _SSPCON1bits 000FC6  
                   __end_of_lcd_set_cursor 5B8A                             ?_lcd_draw_char 000C  
                            ___fladd@signs 0036                               ___aodiv@sign 0014  
           __end_of_PIN_MANAGER_Initialize 5B04                                ??_vsnprintf 00F6  
                             ___fladd@aexp 0037                               ___fladd@bexp 0038  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 5EB8  
               __size_of_ADC_GetConversion 003A                               ___aomod@sign 0014  
                          _TMR1_Initialize 5E1A  
