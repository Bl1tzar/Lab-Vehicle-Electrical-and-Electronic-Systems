

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 21 20:34:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           ; Version 2.10
    96                           ; Generated 31/07/2019 GMT
    97                           ; 
    98                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F46K80 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  005F1A                     __pidataBANK1:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for stoa@F1174
   135  005F1A  28                 	db	40
   136  005F1B  6E                 	db	110
   137  005F1C  75                 	db	117
   138  005F1D  6C                 	db	108
   139  005F1E  6C                 	db	108
   140  005F1F  29                 	db	41
   141  005F20  00                 	db	0
   142                           
   143                           	psect	mediumconst
   144  00F1A8                     __pmediumconst:
   145                           	opt callstack 0
   146  00F1A8  00                 	db	0
   147  00F1A9                     _font:
   148                           	opt callstack 0
   149  00F1A9  0004               	dw	4
   150  00F1AB  0000               	dw	0
   151  00F1AD  0000               	dw	0
   152  00F1AF  0000               	dw	0
   153  00F1B1  0000               	dw	0
   154  00F1B3  0000               	dw	0
   155  00F1B5  0000               	dw	0
   156  00F1B7  0000               	dw	0
   157  00F1B9  0000               	dw	0
   158  00F1BB  0003               	dw	3
   159  00F1BD  0000               	dw	0
   160  00F1BF  0000               	dw	0
   161  00F1C1  00FE               	dw	254
   162  00F1C3  001B               	dw	27
   163  00F1C5  0000               	dw	0
   164  00F1C7  0000               	dw	0
   165  00F1C9  0005               	dw	5
   166  00F1CB  001E               	dw	30
   167  00F1CD  0000               	dw	0
   168  00F1CF  0000               	dw	0
   169  00F1D1  0000               	dw	0
   170  00F1D3  0000               	dw	0
   171  00F1D5  0000               	dw	0
   172  00F1D7  001E               	dw	30
   173  00F1D9  0000               	dw	0
   174  00F1DB  0000               	dw	0
   175  00F1DD  0000               	dw	0
   176  00F1DF  000B               	dw	11
   177  00F1E1  0000               	dw	0
   178  00F1E3  0000               	dw	0
   179  00F1E5  0010               	dw	16
   180  00F1E7  0001               	dw	1
   181  00F1E9  0010               	dw	16
   182  00F1EB  001D               	dw	29
   183  00F1ED  00F0               	dw	240
   184  00F1EF  0003               	dw	3
   185  00F1F1  001E               	dw	30
   186  00F1F3  0001               	dw	1
   187  00F1F5  0010               	dw	16
   188  00F1F7  0001               	dw	1
   189  00F1F9  0010               	dw	16
   190  00F1FB  001D               	dw	29
   191  00F1FD  00F0               	dw	240
   192  00F1FF  0003               	dw	3
   193  00F201  001E               	dw	30
   194  00F203  0001               	dw	1
   195  00F205  0010               	dw	16
   196  00F207  0001               	dw	1
   197  00F209  0000               	dw	0
   198  00F20B  0000               	dw	0
   199  00F20D  0009               	dw	9
   200  00F20F  0000               	dw	0
   201  00F211  0004               	dw	4
   202  00F213  001C               	dw	28
   203  00F215  0008               	dw	8
   204  00F217  0022               	dw	34
   205  00F219  0010               	dw	16
   206  00F21B  0042               	dw	66
   207  00F21D  0010               	dw	16
   208  00F21F  00FF               	dw	255
   209  00F221  007F               	dw	127
   210  00F223  0042               	dw	66
   211  00F225  0010               	dw	16
   212  00F227  0084               	dw	132
   213  00F229  0010               	dw	16
   214  00F22B  0000               	dw	0
   215  00F22D  000F               	dw	15
   216  00F22F  0000               	dw	0
   217  00F231  0000               	dw	0
   218  00F233  000C               	dw	12
   219  00F235  001C               	dw	28
   220  00F237  0000               	dw	0
   221  00F239  0022               	dw	34
   222  00F23B  0010               	dw	16
   223  00F23D  0022               	dw	34
   224  00F23F  0008               	dw	8
   225  00F241  0022               	dw	34
   226  00F243  0006               	dw	6
   227  00F245  001C               	dw	28
   228  00F247  0001               	dw	1
   229  00F249  00C0               	dw	192
   230  00F24B  0000               	dw	0
   231  00F24D  0020               	dw	32
   232  00F24F  000E               	dw	14
   233  00F251  0018               	dw	24
   234  00F253  0011               	dw	17
   235  00F255  0004               	dw	4
   236  00F257  0011               	dw	17
   237  00F259  0002               	dw	2
   238  00F25B  0011               	dw	17
   239  00F25D  0000               	dw	0
   240  00F25F  000E               	dw	14
   241  00F261  0000               	dw	0
   242  00F263  0000               	dw	0
   243  00F265  000B               	dw	11
   244  00F267  0000               	dw	0
   245  00F269  0000               	dw	0
   246  00F26B  0000               	dw	0
   247  00F26D  000E               	dw	14
   248  00F26F  001C               	dw	28
   249  00F271  0011               	dw	17
   250  00F273  00A2               	dw	162
   251  00F275  0010               	dw	16
   252  00F277  00C2               	dw	194
   253  00F279  0010               	dw	16
   254  00F27B  0022               	dw	34
   255  00F27D  0011               	dw	17
   256  00F27F  001C               	dw	28
   257  00F281  000A               	dw	10
   258  00F283  0000               	dw	0
   259  00F285  000C               	dw	12
   260  00F287  0000               	dw	0
   261  00F289  000C               	dw	12
   262  00F28B  0000               	dw	0
   263  00F28D  0012               	dw	18
   264  00F28F  0000               	dw	0
   265  00F291  0000               	dw	0
   266  00F293  0003               	dw	3
   267  00F295  0000               	dw	0
   268  00F297  0000               	dw	0
   269  00F299  001E               	dw	30
   270  00F29B  0000               	dw	0
   271  00F29D  0000               	dw	0
   272  00F29F  0000               	dw	0
   273  00F2A1  0006               	dw	6
   274  00F2A3  0000               	dw	0
   275  00F2A5  0000               	dw	0
   276  00F2A7  0000               	dw	0
   277  00F2A9  0000               	dw	0
   278  00F2AB  00E0               	dw	224
   279  00F2AD  001F               	dw	31
   280  00F2AF  001C               	dw	28
   281  00F2B1  0060               	dw	96
   282  00F2B3  0002               	dw	2
   283  00F2B5  0080               	dw	128
   284  00F2B7  0000               	dw	0
   285  00F2B9  0000               	dw	0
   286  00F2BB  0004               	dw	4
   287  00F2BD  0000               	dw	0
   288  00F2BF  0000               	dw	0
   289  00F2C1  0006               	dw	6
   290  00F2C3  00C0               	dw	192
   291  00F2C5  00F8               	dw	248
   292  00F2C7  003F               	dw	63
   293  00F2C9  0000               	dw	0
   294  00F2CB  0000               	dw	0
   295  00F2CD  0006               	dw	6
   296  00F2CF  0024               	dw	36
   297  00F2D1  0000               	dw	0
   298  00F2D3  0018               	dw	24
   299  00F2D5  0000               	dw	0
   300  00F2D7  007E               	dw	126
   301  00F2D9  0000               	dw	0
   302  00F2DB  0018               	dw	24
   303  00F2DD  0000               	dw	0
   304  00F2DF  0024               	dw	36
   305  00F2E1  0000               	dw	0
   306  00F2E3  0000               	dw	0
   307  00F2E5  0000               	dw	0
   308  00F2E7  0009               	dw	9
   309  00F2E9  0000               	dw	0
   310  00F2EB  0000               	dw	0
   311  00F2ED  0080               	dw	128
   312  00F2EF  0000               	dw	0
   313  00F2F1  0080               	dw	128
   314  00F2F3  0000               	dw	0
   315  00F2F5  0080               	dw	128
   316  00F2F7  0000               	dw	0
   317  00F2F9  00F0               	dw	240
   318  00F2FB  0007               	dw	7
   319  00F2FD  0080               	dw	128
   320  00F2FF  0000               	dw	0
   321  00F301  0080               	dw	128
   322  00F303  0000               	dw	0
   323  00F305  0080               	dw	128
   324  00F307  0000               	dw	0
   325  00F309  0000               	dw	0
   326  00F30B  0000               	dw	0
   327  00F30D  0004               	dw	4
   328  00F30F  0000               	dw	0
   329  00F311  0000               	dw	0
   330  00F313  0000               	dw	0
   331  00F315  0060               	dw	96
   332  00F317  0000               	dw	0
   333  00F319  0018               	dw	24
   334  00F31B  0000               	dw	0
   335  00F31D  0000               	dw	0
   336  00F31F  0005               	dw	5
   337  00F321  0000               	dw	0
   338  00F323  0001               	dw	1
   339  00F325  0000               	dw	0
   340  00F327  0001               	dw	1
   341  00F329  0000               	dw	0
   342  00F32B  0001               	dw	1
   343  00F32D  0000               	dw	0
   344  00F32F  0001               	dw	1
   345  00F331  0000               	dw	0
   346  00F333  0000               	dw	0
   347  00F335  0004               	dw	4
   348  00F337  0000               	dw	0
   349  00F339  0000               	dw	0
   350  00F33B  0000               	dw	0
   351  00F33D  0018               	dw	24
   352  00F33F  0000               	dw	0
   353  00F341  0018               	dw	24
   354  00F343  0000               	dw	0
   355  00F345  0000               	dw	0
   356  00F347  0008               	dw	8
   357  00F349  0000               	dw	0
   358  00F34B  0000               	dw	0
   359  00F34D  0000               	dw	0
   360  00F34F  0040               	dw	64
   361  00F351  0000               	dw	0
   362  00F353  0038               	dw	56
   363  00F355  0000               	dw	0
   364  00F357  0007               	dw	7
   365  00F359  00E0               	dw	224
   366  00F35B  0000               	dw	0
   367  00F35D  001C               	dw	28
   368  00F35F  0000               	dw	0
   369  00F361  0002               	dw	2
   370  00F363  0000               	dw	0
   371  00F365  0000               	dw	0
   372  00F367  0000               	dw	0
   373  00F369  0009               	dw	9
   374  00F36B  00F8               	dw	248
   375  00F36D  0007               	dw	7
   376  00F36F  0004               	dw	4
   377  00F371  0008               	dw	8
   378  00F373  0002               	dw	2
   379  00F375  0010               	dw	16
   380  00F377  0002               	dw	2
   381  00F379  0010               	dw	16
   382  00F37B  0002               	dw	2
   383  00F37D  0010               	dw	16
   384  00F37F  0002               	dw	2
   385  00F381  0010               	dw	16
   386  00F383  0004               	dw	4
   387  00F385  0008               	dw	8
   388  00F387  00F8               	dw	248
   389  00F389  0007               	dw	7
   390  00F38B  0000               	dw	0
   391  00F38D  0000               	dw	0
   392  00F38F  0006               	dw	6
   393  00F391  0000               	dw	0
   394  00F393  0000               	dw	0
   395  00F395  0000               	dw	0
   396  00F397  0000               	dw	0
   397  00F399  0002               	dw	2
   398  00F39B  0000               	dw	0
   399  00F39D  0002               	dw	2
   400  00F39F  0000               	dw	0
   401  00F3A1  00FE               	dw	254
   402  00F3A3  001F               	dw	31
   403  00F3A5  0000               	dw	0
   404  00F3A7  0000               	dw	0
   405  00F3A9  0009               	dw	9
   406  00F3AB  0018               	dw	24
   407  00F3AD  0010               	dw	16
   408  00F3AF  0004               	dw	4
   409  00F3B1  0018               	dw	24
   410  00F3B3  0002               	dw	2
   411  00F3B5  0014               	dw	20
   412  00F3B7  0002               	dw	2
   413  00F3B9  0012               	dw	18
   414  00F3BB  0002               	dw	2
   415  00F3BD  0011               	dw	17
   416  00F3BF  0082               	dw	130
   417  00F3C1  0010               	dw	16
   418  00F3C3  0044               	dw	68
   419  00F3C5  0010               	dw	16
   420  00F3C7  0038               	dw	56
   421  00F3C9  0010               	dw	16
   422  00F3CB  0000               	dw	0
   423  00F3CD  0000               	dw	0
   424  00F3CF  0009               	dw	9
   425  00F3D1  0008               	dw	8
   426  00F3D3  000C               	dw	12
   427  00F3D5  0004               	dw	4
   428  00F3D7  0010               	dw	16
   429  00F3D9  0002               	dw	2
   430  00F3DB  0010               	dw	16
   431  00F3DD  0042               	dw	66
   432  00F3DF  0010               	dw	16
   433  00F3E1  0042               	dw	66
   434  00F3E3  0010               	dw	16
   435  00F3E5  0044               	dw	68
   436  00F3E7  0010               	dw	16
   437  00F3E9  00B8               	dw	184
   438  00F3EB  0008               	dw	8
   439  00F3ED  0000               	dw	0
   440  00F3EF  0007               	dw	7
   441  00F3F1  0000               	dw	0
   442  00F3F3  0000               	dw	0
   443  00F3F5  0009               	dw	9
   444  00F3F7  0000               	dw	0
   445  00F3F9  0002               	dw	2
   446  00F3FB  0000               	dw	0
   447  00F3FD  0003               	dw	3
   448  00F3FF  0080               	dw	128
   449  00F401  0002               	dw	2
   450  00F403  0060               	dw	96
   451  00F405  0002               	dw	2
   452  00F407  0010               	dw	16
   453  00F409  0002               	dw	2
   454  00F40B  0008               	dw	8
   455  00F40D  0002               	dw	2
   456  00F40F  00FE               	dw	254
   457  00F411  001F               	dw	31
   458  00F413  0000               	dw	0
   459  00F415  0002               	dw	2
   460  00F417  0000               	dw	0
   461  00F419  0000               	dw	0
   462  00F41B  0009               	dw	9
   463  00F41D  0000               	dw	0
   464  00F41F  0004               	dw	4
   465  00F421  0070               	dw	112
   466  00F423  0008               	dw	8
   467  00F425  002E               	dw	46
   468  00F427  0010               	dw	16
   469  00F429  0022               	dw	34
   470  00F42B  0010               	dw	16
   471  00F42D  0022               	dw	34
   472  00F42F  0010               	dw	16
   473  00F431  0022               	dw	34
   474  00F433  0010               	dw	16
   475  00F435  0042               	dw	66
   476  00F437  0008               	dw	8
   477  00F439  0082               	dw	130
   478  00F43B  0007               	dw	7
   479  00F43D  0000               	dw	0
   480  00F43F  0000               	dw	0
   481  00F441  0009               	dw	9
   482  00F443  0000               	dw	0
   483  00F445  0000               	dw	0
   484  00F447  0000               	dw	0
   485  00F449  0007               	dw	7
   486  00F44B  00C0               	dw	192
   487  00F44D  0008               	dw	8
   488  00F44F  0060               	dw	96
   489  00F451  0010               	dw	16
   490  00F453  0058               	dw	88
   491  00F455  0010               	dw	16
   492  00F457  0044               	dw	68
   493  00F459  0010               	dw	16
   494  00F45B  0082               	dw	130
   495  00F45D  0008               	dw	8
   496  00F45F  0000               	dw	0
   497  00F461  0007               	dw	7
   498  00F463  0000               	dw	0
   499  00F465  0000               	dw	0
   500  00F467  0009               	dw	9
   501  00F469  0000               	dw	0
   502  00F46B  0000               	dw	0
   503  00F46D  0002               	dw	2
   504  00F46F  0010               	dw	16
   505  00F471  0002               	dw	2
   506  00F473  000C               	dw	12
   507  00F475  0002               	dw	2
   508  00F477  0003               	dw	3
   509  00F479  00C2               	dw	194
   510  00F47B  0000               	dw	0
   511  00F47D  0032               	dw	50
   512  00F47F  0000               	dw	0
   513  00F481  000E               	dw	14
   514  00F483  0000               	dw	0
   515  00F485  0002               	dw	2
   516  00F487  0000               	dw	0
   517  00F489  0000               	dw	0
   518  00F48B  0000               	dw	0
   519  00F48D  0009               	dw	9
   520  00F48F  0000               	dw	0
   521  00F491  0007               	dw	7
   522  00F493  0098               	dw	152
   523  00F495  0008               	dw	8
   524  00F497  0064               	dw	100
   525  00F499  0010               	dw	16
   526  00F49B  0042               	dw	66
   527  00F49D  0010               	dw	16
   528  00F49F  0042               	dw	66
   529  00F4A1  0010               	dw	16
   530  00F4A3  0064               	dw	100
   531  00F4A5  0010               	dw	16
   532  00F4A7  0098               	dw	152
   533  00F4A9  0008               	dw	8
   534  00F4AB  0000               	dw	0
   535  00F4AD  0007               	dw	7
   536  00F4AF  0000               	dw	0
   537  00F4B1  0000               	dw	0
   538  00F4B3  0009               	dw	9
   539  00F4B5  0000               	dw	0
   540  00F4B7  0000               	dw	0
   541  00F4B9  0038               	dw	56
   542  00F4BB  0000               	dw	0
   543  00F4BD  0044               	dw	68
   544  00F4BF  0010               	dw	16
   545  00F4C1  0082               	dw	130
   546  00F4C3  0008               	dw	8
   547  00F4C5  0082               	dw	130
   548  00F4C7  0004               	dw	4
   549  00F4C9  0082               	dw	130
   550  00F4CB  0003               	dw	3
   551  00F4CD  0084               	dw	132
   552  00F4CF  0000               	dw	0
   553  00F4D1  0078               	dw	120
   554  00F4D3  0000               	dw	0
   555  00F4D5  0000               	dw	0
   556  00F4D7  0000               	dw	0
   557  00F4D9  0004               	dw	4
   558  00F4DB  0000               	dw	0
   559  00F4DD  0000               	dw	0
   560  00F4DF  0030               	dw	48
   561  00F4E1  0018               	dw	24
   562  00F4E3  0030               	dw	48
   563  00F4E5  0018               	dw	24
   564  00F4E7  0000               	dw	0
   565  00F4E9  0000               	dw	0
   566  00F4EB  0004               	dw	4
   567  00F4ED  0000               	dw	0
   568  00F4EF  0000               	dw	0
   569  00F4F1  0030               	dw	48
   570  00F4F3  0060               	dw	96
   571  00F4F5  0030               	dw	48
   572  00F4F7  0018               	dw	24
   573  00F4F9  0000               	dw	0
   574  00F4FB  0000               	dw	0
   575  00F4FD  000A               	dw	10
   576  00F4FF  0000               	dw	0
   577  00F501  0000               	dw	0
   578  00F503  0080               	dw	128
   579  00F505  0000               	dw	0
   580  00F507  0080               	dw	128
   581  00F509  0000               	dw	0
   582  00F50B  0040               	dw	64
   583  00F50D  0001               	dw	1
   584  00F50F  0020               	dw	32
   585  00F511  0002               	dw	2
   586  00F513  0020               	dw	32
   587  00F515  0002               	dw	2
   588  00F517  0010               	dw	16
   589  00F519  0004               	dw	4
   590  00F51B  0010               	dw	16
   591  00F51D  0004               	dw	4
   592  00F51F  0008               	dw	8
   593  00F521  0008               	dw	8
   594  00F523  0000               	dw	0
   595  00F525  0000               	dw	0
   596  00F527  000A               	dw	10
   597  00F529  0000               	dw	0
   598  00F52B  0000               	dw	0
   599  00F52D  0020               	dw	32
   600  00F52F  0001               	dw	1
   601  00F531  0020               	dw	32
   602  00F533  0001               	dw	1
   603  00F535  0020               	dw	32
   604  00F537  0001               	dw	1
   605  00F539  0020               	dw	32
   606  00F53B  0001               	dw	1
   607  00F53D  0020               	dw	32
   608  00F53F  0001               	dw	1
   609  00F541  0020               	dw	32
   610  00F543  0001               	dw	1
   611  00F545  0020               	dw	32
   612  00F547  0001               	dw	1
   613  00F549  0020               	dw	32
   614  00F54B  0001               	dw	1
   615  00F54D  0000               	dw	0
   616  00F54F  0000               	dw	0
   617  00F551  000A               	dw	10
   618  00F553  0000               	dw	0
   619  00F555  0000               	dw	0
   620  00F557  0008               	dw	8
   621  00F559  0008               	dw	8
   622  00F55B  0010               	dw	16
   623  00F55D  0004               	dw	4
   624  00F55F  0010               	dw	16
   625  00F561  0004               	dw	4
   626  00F563  0020               	dw	32
   627  00F565  0002               	dw	2
   628  00F567  0020               	dw	32
   629  00F569  0002               	dw	2
   630  00F56B  0040               	dw	64
   631  00F56D  0001               	dw	1
   632  00F56F  0080               	dw	128
   633  00F571  0000               	dw	0
   634  00F573  0080               	dw	128
   635  00F575  0000               	dw	0
   636  00F577  0000               	dw	0
   637  00F579  0000               	dw	0
   638  00F57B  0008               	dw	8
   639  00F57D  0000               	dw	0
   640  00F57F  0000               	dw	0
   641  00F581  000C               	dw	12
   642  00F583  0000               	dw	0
   643  00F585  0082               	dw	130
   644  00F587  0001               	dw	1
   645  00F589  0042               	dw	66
   646  00F58B  0002               	dw	2
   647  00F58D  0022               	dw	34
   648  00F58F  001A               	dw	26
   649  00F591  0022               	dw	34
   650  00F593  001A               	dw	26
   651  00F595  009C               	dw	156
   652  00F597  0001               	dw	1
   653  00F599  0000               	dw	0
   654  00F59B  0000               	dw	0
   655  00F59D  000E               	dw	14
   656  00F59F  0000               	dw	0
   657  00F5A1  0000               	dw	0
   658  00F5A3  00F0               	dw	240
   659  00F5A5  0003               	dw	3
   660  00F5A7  0008               	dw	8
   661  00F5A9  0004               	dw	4
   662  00F5AB  0004               	dw	4
   663  00F5AD  0008               	dw	8
   664  00F5AF  00C2               	dw	194
   665  00F5B1  0011               	dw	17
   666  00F5B3  0022               	dw	34
   667  00F5B5  0012               	dw	18
   668  00F5B7  0012               	dw	18
   669  00F5B9  0012               	dw	18
   670  00F5BB  0012               	dw	18
   671  00F5BD  0012               	dw	18
   672  00F5BF  00E2               	dw	226
   673  00F5C1  0011               	dw	17
   674  00F5C3  0012               	dw	18
   675  00F5C5  0012               	dw	18
   676  00F5C7  0004               	dw	4
   677  00F5C9  0012               	dw	18
   678  00F5CB  0008               	dw	8
   679  00F5CD  0009               	dw	9
   680  00F5CF  00F0               	dw	240
   681  00F5D1  0004               	dw	4
   682  00F5D3  0000               	dw	0
   683  00F5D5  0000               	dw	0
   684  00F5D7  000D               	dw	13
   685  00F5D9  0000               	dw	0
   686  00F5DB  0000               	dw	0
   687  00F5DD  0000               	dw	0
   688  00F5DF  0010               	dw	16
   689  00F5E1  0000               	dw	0
   690  00F5E3  000E               	dw	14
   691  00F5E5  0080               	dw	128
   692  00F5E7  0001               	dw	1
   693  00F5E9  0060               	dw	96
   694  00F5EB  0001               	dw	1
   695  00F5ED  001C               	dw	28
   696  00F5EF  0001               	dw	1
   697  00F5F1  0002               	dw	2
   698  00F5F3  0001               	dw	1
   699  00F5F5  001C               	dw	28
   700  00F5F7  0001               	dw	1
   701  00F5F9  0060               	dw	96
   702  00F5FB  0001               	dw	1
   703  00F5FD  0080               	dw	128
   704  00F5FF  0001               	dw	1
   705  00F601  0000               	dw	0
   706  00F603  000E               	dw	14
   707  00F605  0000               	dw	0
   708  00F607  0010               	dw	16
   709  00F609  0000               	dw	0
   710  00F60B  0000               	dw	0
   711  00F60D  0009               	dw	9
   712  00F60F  0000               	dw	0
   713  00F611  0000               	dw	0
   714  00F613  0000               	dw	0
   715  00F615  0000               	dw	0
   716  00F617  00FE               	dw	254
   717  00F619  001F               	dw	31
   718  00F61B  0042               	dw	66
   719  00F61D  0010               	dw	16
   720  00F61F  0042               	dw	66
   721  00F621  0010               	dw	16
   722  00F623  0064               	dw	100
   723  00F625  0010               	dw	16
   724  00F627  0098               	dw	152
   725  00F629  0008               	dw	8
   726  00F62B  0000               	dw	0
   727  00F62D  0007               	dw	7
   728  00F62F  0000               	dw	0
   729  00F631  0000               	dw	0
   730  00F633  000D               	dw	13
   731  00F635  0000               	dw	0
   732  00F637  0000               	dw	0
   733  00F639  00F0               	dw	240
   734  00F63B  0003               	dw	3
   735  00F63D  0008               	dw	8
   736  00F63F  0004               	dw	4
   737  00F641  0004               	dw	4
   738  00F643  0008               	dw	8
   739  00F645  0002               	dw	2
   740  00F647  0010               	dw	16
   741  00F649  0002               	dw	2
   742  00F64B  0010               	dw	16
   743  00F64D  0002               	dw	2
   744  00F64F  0010               	dw	16
   745  00F651  0002               	dw	2
   746  00F653  0010               	dw	16
   747  00F655  0002               	dw	2
   748  00F657  0010               	dw	16
   749  00F659  0004               	dw	4
   750  00F65B  0008               	dw	8
   751  00F65D  0004               	dw	4
   752  00F65F  0008               	dw	8
   753  00F661  0008               	dw	8
   754  00F663  0004               	dw	4
   755  00F665  0000               	dw	0
   756  00F667  0000               	dw	0
   757  00F669  000C               	dw	12
   758  00F66B  0000               	dw	0
   759  00F66D  0000               	dw	0
   760  00F66F  0000               	dw	0
   761  00F671  0000               	dw	0
   762  00F673  00FE               	dw	254
   763  00F675  001F               	dw	31
   764  00F677  0002               	dw	2
   765  00F679  0010               	dw	16
   766  00F67B  0002               	dw	2
   767  00F67D  0010               	dw	16
   768  00F67F  0002               	dw	2
   769  00F681  0010               	dw	16
   770  00F683  0002               	dw	2
   771  00F685  0010               	dw	16
   772  00F687  0002               	dw	2
   773  00F689  0010               	dw	16
   774  00F68B  0004               	dw	4
   775  00F68D  0008               	dw	8
   776  00F68F  0008               	dw	8
   777  00F691  0004               	dw	4
   778  00F693  00F0               	dw	240
   779  00F695  0003               	dw	3
   780  00F697  0000               	dw	0
   781  00F699  0000               	dw	0
   782  00F69B  0009               	dw	9
   783  00F69D  0000               	dw	0
   784  00F69F  0000               	dw	0
   785  00F6A1  0000               	dw	0
   786  00F6A3  0000               	dw	0
   787  00F6A5  00FE               	dw	254
   788  00F6A7  001F               	dw	31
   789  00F6A9  0042               	dw	66
   790  00F6AB  0010               	dw	16
   791  00F6AD  0042               	dw	66
   792  00F6AF  0010               	dw	16
   793  00F6B1  0042               	dw	66
   794  00F6B3  0010               	dw	16
   795  00F6B5  0042               	dw	66
   796  00F6B7  0010               	dw	16
   797  00F6B9  0042               	dw	66
   798  00F6BB  0010               	dw	16
   799  00F6BD  0000               	dw	0
   800  00F6BF  0000               	dw	0
   801  00F6C1  0008               	dw	8
   802  00F6C3  0000               	dw	0
   803  00F6C5  0000               	dw	0
   804  00F6C7  0000               	dw	0
   805  00F6C9  0000               	dw	0
   806  00F6CB  00FE               	dw	254
   807  00F6CD  001F               	dw	31
   808  00F6CF  0042               	dw	66
   809  00F6D1  0000               	dw	0
   810  00F6D3  0042               	dw	66
   811  00F6D5  0000               	dw	0
   812  00F6D7  0042               	dw	66
   813  00F6D9  0000               	dw	0
   814  00F6DB  0042               	dw	66
   815  00F6DD  0000               	dw	0
   816  00F6DF  0000               	dw	0
   817  00F6E1  0000               	dw	0
   818  00F6E3  000E               	dw	14
   819  00F6E5  0000               	dw	0
   820  00F6E7  0000               	dw	0
   821  00F6E9  00F0               	dw	240
   822  00F6EB  0003               	dw	3
   823  00F6ED  0008               	dw	8
   824  00F6EF  0004               	dw	4
   825  00F6F1  0004               	dw	4
   826  00F6F3  0008               	dw	8
   827  00F6F5  0002               	dw	2
   828  00F6F7  0010               	dw	16
   829  00F6F9  0002               	dw	2
   830  00F6FB  0010               	dw	16
   831  00F6FD  0002               	dw	2
   832  00F6FF  0010               	dw	16
   833  00F701  0002               	dw	2
   834  00F703  0010               	dw	16
   835  00F705  0082               	dw	130
   836  00F707  0010               	dw	16
   837  00F709  0084               	dw	132
   838  00F70B  0010               	dw	16
   839  00F70D  0084               	dw	132
   840  00F70F  0008               	dw	8
   841  00F711  0088               	dw	136
   842  00F713  0004               	dw	4
   843  00F715  0080               	dw	128
   844  00F717  0003               	dw	3
   845  00F719  0000               	dw	0
   846  00F71B  0000               	dw	0
   847  00F71D  000A               	dw	10
   848  00F71F  0000               	dw	0
   849  00F721  0000               	dw	0
   850  00F723  0000               	dw	0
   851  00F725  0000               	dw	0
   852  00F727  00FE               	dw	254
   853  00F729  001F               	dw	31
   854  00F72B  0040               	dw	64
   855  00F72D  0000               	dw	0
   856  00F72F  0040               	dw	64
   857  00F731  0000               	dw	0
   858  00F733  0040               	dw	64
   859  00F735  0000               	dw	0
   860  00F737  0040               	dw	64
   861  00F739  0000               	dw	0
   862  00F73B  0040               	dw	64
   863  00F73D  0000               	dw	0
   864  00F73F  00FE               	dw	254
   865  00F741  001F               	dw	31
   866  00F743  0000               	dw	0
   867  00F745  0000               	dw	0
   868  00F747  0004               	dw	4
   869  00F749  0000               	dw	0
   870  00F74B  0000               	dw	0
   871  00F74D  0000               	dw	0
   872  00F74F  0000               	dw	0
   873  00F751  00FE               	dw	254
   874  00F753  001F               	dw	31
   875  00F755  0000               	dw	0
   876  00F757  0000               	dw	0
   877  00F759  0007               	dw	7
   878  00F75B  0000               	dw	0
   879  00F75D  0000               	dw	0
   880  00F75F  0000               	dw	0
   881  00F761  0008               	dw	8
   882  00F763  0000               	dw	0
   883  00F765  0010               	dw	16
   884  00F767  0000               	dw	0
   885  00F769  0010               	dw	16
   886  00F76B  0000               	dw	0
   887  00F76D  0008               	dw	8
   888  00F76F  00FE               	dw	254
   889  00F771  0007               	dw	7
   890  00F773  0000               	dw	0
   891  00F775  0000               	dw	0
   892  00F777  0009               	dw	9
   893  00F779  0000               	dw	0
   894  00F77B  0000               	dw	0
   895  00F77D  0000               	dw	0
   896  00F77F  0000               	dw	0
   897  00F781  00FE               	dw	254
   898  00F783  001F               	dw	31
   899  00F785  0060               	dw	96
   900  00F787  0000               	dw	0
   901  00F789  0090               	dw	144
   902  00F78B  0001               	dw	1
   903  00F78D  0008               	dw	8
   904  00F78F  0002               	dw	2
   905  00F791  0004               	dw	4
   906  00F793  000C               	dw	12
   907  00F795  0002               	dw	2
   908  00F797  0010               	dw	16
   909  00F799  0000               	dw	0
   910  00F79B  0000               	dw	0
   911  00F79D  0008               	dw	8
   912  00F79F  0000               	dw	0
   913  00F7A1  0000               	dw	0
   914  00F7A3  0000               	dw	0
   915  00F7A5  0000               	dw	0
   916  00F7A7  00FE               	dw	254
   917  00F7A9  001F               	dw	31
   918  00F7AB  0000               	dw	0
   919  00F7AD  0010               	dw	16
   920  00F7AF  0000               	dw	0
   921  00F7B1  0010               	dw	16
   922  00F7B3  0000               	dw	0
   923  00F7B5  0010               	dw	16
   924  00F7B7  0000               	dw	0
   925  00F7B9  0010               	dw	16
   926  00F7BB  0000               	dw	0
   927  00F7BD  0000               	dw	0
   928  00F7BF  000F               	dw	15
   929  00F7C1  0000               	dw	0
   930  00F7C3  0000               	dw	0
   931  00F7C5  0000               	dw	0
   932  00F7C7  001C               	dw	28
   933  00F7C9  00F8               	dw	248
   934  00F7CB  0003               	dw	3
   935  00F7CD  0006               	dw	6
   936  00F7CF  0000               	dw	0
   937  00F7D1  0038               	dw	56
   938  00F7D3  0000               	dw	0
   939  00F7D5  00C0               	dw	192
   940  00F7D7  0001               	dw	1
   941  00F7D9  0000               	dw	0
   942  00F7DB  000E               	dw	14
   943  00F7DD  0000               	dw	0
   944  00F7DF  0010               	dw	16
   945  00F7E1  0000               	dw	0
   946  00F7E3  000E               	dw	14
   947  00F7E5  00C0               	dw	192
   948  00F7E7  0001               	dw	1
   949  00F7E9  0038               	dw	56
   950  00F7EB  0000               	dw	0
   951  00F7ED  0006               	dw	6
   952  00F7EF  0000               	dw	0
   953  00F7F1  00F8               	dw	248
   954  00F7F3  0003               	dw	3
   955  00F7F5  0000               	dw	0
   956  00F7F7  001C               	dw	28
   957  00F7F9  0000               	dw	0
   958  00F7FB  0000               	dw	0
   959  00F7FD  000B               	dw	11
   960  00F7FF  0000               	dw	0
   961  00F801  0000               	dw	0
   962  00F803  0000               	dw	0
   963  00F805  0000               	dw	0
   964  00F807  00FE               	dw	254
   965  00F809  001F               	dw	31
   966  00F80B  0008               	dw	8
   967  00F80D  0000               	dw	0
   968  00F80F  0030               	dw	48
   969  00F811  0000               	dw	0
   970  00F813  0040               	dw	64
   971  00F815  0000               	dw	0
   972  00F817  0080               	dw	128
   973  00F819  0000               	dw	0
   974  00F81B  0000               	dw	0
   975  00F81D  0003               	dw	3
   976  00F81F  0000               	dw	0
   977  00F821  0004               	dw	4
   978  00F823  00FE               	dw	254
   979  00F825  001F               	dw	31
   980  00F827  0000               	dw	0
   981  00F829  0000               	dw	0
   982  00F82B  000E               	dw	14
   983  00F82D  0000               	dw	0
   984  00F82F  0000               	dw	0
   985  00F831  00F0               	dw	240
   986  00F833  0003               	dw	3
   987  00F835  0008               	dw	8
   988  00F837  0004               	dw	4
   989  00F839  0004               	dw	4
   990  00F83B  0008               	dw	8
   991  00F83D  0002               	dw	2
   992  00F83F  0010               	dw	16
   993  00F841  0002               	dw	2
   994  00F843  0010               	dw	16
   995  00F845  0002               	dw	2
   996  00F847  0010               	dw	16
   997  00F849  0002               	dw	2
   998  00F84B  0010               	dw	16
   999  00F84D  0002               	dw	2
  1000  00F84F  0010               	dw	16
  1001  00F851  0002               	dw	2
  1002  00F853  0010               	dw	16
  1003  00F855  0004               	dw	4
  1004  00F857  0008               	dw	8
  1005  00F859  0008               	dw	8
  1006  00F85B  0004               	dw	4
  1007  00F85D  00F0               	dw	240
  1008  00F85F  0003               	dw	3
  1009  00F861  0000               	dw	0
  1010  00F863  0000               	dw	0
  1011  00F865  0009               	dw	9
  1012  00F867  0000               	dw	0
  1013  00F869  0000               	dw	0
  1014  00F86B  0000               	dw	0
  1015  00F86D  0000               	dw	0
  1016  00F86F  00FE               	dw	254
  1017  00F871  001F               	dw	31
  1018  00F873  0042               	dw	66
  1019  00F875  0000               	dw	0
  1020  00F877  0042               	dw	66
  1021  00F879  0000               	dw	0
  1022  00F87B  0042               	dw	66
  1023  00F87D  0000               	dw	0
  1024  00F87F  0024               	dw	36
  1025  00F881  0000               	dw	0
  1026  00F883  0018               	dw	24
  1027  00F885  0000               	dw	0
  1028  00F887  0000               	dw	0
  1029  00F889  0000               	dw	0
  1030  00F88B  000E               	dw	14
  1031  00F88D  0000               	dw	0
  1032  00F88F  0000               	dw	0
  1033  00F891  00F0               	dw	240
  1034  00F893  0003               	dw	3
  1035  00F895  0008               	dw	8
  1036  00F897  0004               	dw	4
  1037  00F899  0004               	dw	4
  1038  00F89B  0008               	dw	8
  1039  00F89D  0002               	dw	2
  1040  00F89F  0010               	dw	16
  1041  00F8A1  0002               	dw	2
  1042  00F8A3  0010               	dw	16
  1043  00F8A5  0002               	dw	2
  1044  00F8A7  0010               	dw	16
  1045  00F8A9  0002               	dw	2
  1046  00F8AB  0011               	dw	17
  1047  00F8AD  0002               	dw	2
  1048  00F8AF  0012               	dw	18
  1049  00F8B1  0002               	dw	2
  1050  00F8B3  000C               	dw	12
  1051  00F8B5  0004               	dw	4
  1052  00F8B7  0008               	dw	8
  1053  00F8B9  0008               	dw	8
  1054  00F8BB  0016               	dw	22
  1055  00F8BD  00F0               	dw	240
  1056  00F8BF  0021               	dw	33
  1057  00F8C1  0000               	dw	0
  1058  00F8C3  0000               	dw	0
  1059  00F8C5  000A               	dw	10
  1060  00F8C7  0000               	dw	0
  1061  00F8C9  0000               	dw	0
  1062  00F8CB  0000               	dw	0
  1063  00F8CD  0000               	dw	0
  1064  00F8CF  00FE               	dw	254
  1065  00F8D1  001F               	dw	31
  1066  00F8D3  0042               	dw	66
  1067  00F8D5  0000               	dw	0
  1068  00F8D7  00C2               	dw	194
  1069  00F8D9  0000               	dw	0
  1070  00F8DB  0042               	dw	66
  1071  00F8DD  0001               	dw	1
  1072  00F8DF  0042               	dw	66
  1073  00F8E1  0006               	dw	6
  1074  00F8E3  0024               	dw	36
  1075  00F8E5  0008               	dw	8
  1076  00F8E7  0018               	dw	24
  1077  00F8E9  0010               	dw	16
  1078  00F8EB  0000               	dw	0
  1079  00F8ED  0000               	dw	0
  1080  00F8EF  0008               	dw	8
  1081  00F8F1  0000               	dw	0
  1082  00F8F3  0004               	dw	4
  1083  00F8F5  0018               	dw	24
  1084  00F8F7  0008               	dw	8
  1085  00F8F9  0024               	dw	36
  1086  00F8FB  0010               	dw	16
  1087  00F8FD  0042               	dw	66
  1088  00F8FF  0010               	dw	16
  1089  00F901  0042               	dw	66
  1090  00F903  0010               	dw	16
  1091  00F905  0084               	dw	132
  1092  00F907  0008               	dw	8
  1093  00F909  0008               	dw	8
  1094  00F90B  0007               	dw	7
  1095  00F90D  0000               	dw	0
  1096  00F90F  0000               	dw	0
  1097  00F911  0008               	dw	8
  1098  00F913  0002               	dw	2
  1099  00F915  0000               	dw	0
  1100  00F917  0002               	dw	2
  1101  00F919  0000               	dw	0
  1102  00F91B  0002               	dw	2
  1103  00F91D  0000               	dw	0
  1104  00F91F  00FE               	dw	254
  1105  00F921  001F               	dw	31
  1106  00F923  0002               	dw	2
  1107  00F925  0000               	dw	0
  1108  00F927  0002               	dw	2
  1109  00F929  0000               	dw	0
  1110  00F92B  0002               	dw	2
  1111  00F92D  0000               	dw	0
  1112  00F92F  0000               	dw	0
  1113  00F931  0000               	dw	0
  1114  00F933  000A               	dw	10
  1115  00F935  0000               	dw	0
  1116  00F937  0000               	dw	0
  1117  00F939  0000               	dw	0
  1118  00F93B  0000               	dw	0
  1119  00F93D  00FE               	dw	254
  1120  00F93F  0007               	dw	7
  1121  00F941  0000               	dw	0
  1122  00F943  0008               	dw	8
  1123  00F945  0000               	dw	0
  1124  00F947  0010               	dw	16
  1125  00F949  0000               	dw	0
  1126  00F94B  0010               	dw	16
  1127  00F94D  0000               	dw	0
  1128  00F94F  0010               	dw	16
  1129  00F951  0000               	dw	0
  1130  00F953  0008               	dw	8
  1131  00F955  00FE               	dw	254
  1132  00F957  0007               	dw	7
  1133  00F959  0000               	dw	0
  1134  00F95B  0000               	dw	0
  1135  00F95D  000C               	dw	12
  1136  00F95F  0002               	dw	2
  1137  00F961  0000               	dw	0
  1138  00F963  001C               	dw	28
  1139  00F965  0000               	dw	0
  1140  00F967  0060               	dw	96
  1141  00F969  0000               	dw	0
  1142  00F96B  0080               	dw	128
  1143  00F96D  0001               	dw	1
  1144  00F96F  0000               	dw	0
  1145  00F971  000E               	dw	14
  1146  00F973  0000               	dw	0
  1147  00F975  0010               	dw	16
  1148  00F977  0000               	dw	0
  1149  00F979  000E               	dw	14
  1150  00F97B  0080               	dw	128
  1151  00F97D  0001               	dw	1
  1152  00F97F  0060               	dw	96
  1153  00F981  0000               	dw	0
  1154  00F983  001C               	dw	28
  1155  00F985  0000               	dw	0
  1156  00F987  0002               	dw	2
  1157  00F989  0000               	dw	0
  1158  00F98B  0000               	dw	0
  1159  00F98D  0000               	dw	0
  1160  00F98F  000F               	dw	15
  1161  00F991  0000               	dw	0
  1162  00F993  0000               	dw	0
  1163  00F995  0006               	dw	6
  1164  00F997  0000               	dw	0
  1165  00F999  0078               	dw	120
  1166  00F99B  0000               	dw	0
  1167  00F99D  0080               	dw	128
  1168  00F99F  0007               	dw	7
  1169  00F9A1  0000               	dw	0
  1170  00F9A3  0018               	dw	24
  1171  00F9A5  0080               	dw	128
  1172  00F9A7  0007               	dw	7
  1173  00F9A9  0078               	dw	120
  1174  00F9AB  0000               	dw	0
  1175  00F9AD  0006               	dw	6
  1176  00F9AF  0000               	dw	0
  1177  00F9B1  0078               	dw	120
  1178  00F9B3  0000               	dw	0
  1179  00F9B5  0080               	dw	128
  1180  00F9B7  0007               	dw	7
  1181  00F9B9  0000               	dw	0
  1182  00F9BB  0018               	dw	24
  1183  00F9BD  0080               	dw	128
  1184  00F9BF  0007               	dw	7
  1185  00F9C1  0078               	dw	120
  1186  00F9C3  0000               	dw	0
  1187  00F9C5  0006               	dw	6
  1188  00F9C7  0000               	dw	0
  1189  00F9C9  0000               	dw	0
  1190  00F9CB  0000               	dw	0
  1191  00F9CD  0009               	dw	9
  1192  00F9CF  0000               	dw	0
  1193  00F9D1  0000               	dw	0
  1194  00F9D3  0006               	dw	6
  1195  00F9D5  0018               	dw	24
  1196  00F9D7  0008               	dw	8
  1197  00F9D9  0004               	dw	4
  1198  00F9DB  0030               	dw	48
  1199  00F9DD  0003               	dw	3
  1200  00F9DF  00C0               	dw	192
  1201  00F9E1  0000               	dw	0
  1202  00F9E3  0030               	dw	48
  1203  00F9E5  0003               	dw	3
  1204  00F9E7  0008               	dw	8
  1205  00F9E9  0004               	dw	4
  1206  00F9EB  0006               	dw	6
  1207  00F9ED  0018               	dw	24
  1208  00F9EF  0000               	dw	0
  1209  00F9F1  0000               	dw	0
  1210  00F9F3  000B               	dw	11
  1211  00F9F5  0000               	dw	0
  1212  00F9F7  0000               	dw	0
  1213  00F9F9  0002               	dw	2
  1214  00F9FB  0000               	dw	0
  1215  00F9FD  0004               	dw	4
  1216  00F9FF  0000               	dw	0
  1217  00FA01  0018               	dw	24
  1218  00FA03  0000               	dw	0
  1219  00FA05  0060               	dw	96
  1220  00FA07  0000               	dw	0
  1221  00FA09  0080               	dw	128
  1222  00FA0B  001F               	dw	31
  1223  00FA0D  0060               	dw	96
  1224  00FA0F  0000               	dw	0
  1225  00FA11  0018               	dw	24
  1226  00FA13  0000               	dw	0
  1227  00FA15  0004               	dw	4
  1228  00FA17  0000               	dw	0
  1229  00FA19  0002               	dw	2
  1230  00FA1B  0000               	dw	0
  1231  00FA1D  0000               	dw	0
  1232  00FA1F  0000               	dw	0
  1233  00FA21  0008               	dw	8
  1234  00FA23  0002               	dw	2
  1235  00FA25  0010               	dw	16
  1236  00FA27  0002               	dw	2
  1237  00FA29  001C               	dw	28
  1238  00FA2B  0002               	dw	2
  1239  00FA2D  0013               	dw	19
  1240  00FA2F  00C2               	dw	194
  1241  00FA31  0010               	dw	16
  1242  00FA33  0032               	dw	50
  1243  00FA35  0010               	dw	16
  1244  00FA37  000E               	dw	14
  1245  00FA39  0010               	dw	16
  1246  00FA3B  0002               	dw	2
  1247  00FA3D  0010               	dw	16
  1248  00FA3F  0000               	dw	0
  1249  00FA41  0000               	dw	0
  1250  00FA43  0006               	dw	6
  1251  00FA45  0000               	dw	0
  1252  00FA47  0000               	dw	0
  1253  00FA49  0000               	dw	0
  1254  00FA4B  0000               	dw	0
  1255  00FA4D  00FE               	dw	254
  1256  00FA4F  00FF               	dw	255
  1257  00FA51  0002               	dw	2
  1258  00FA53  0080               	dw	128
  1259  00FA55  0002               	dw	2
  1260  00FA57  0080               	dw	128
  1261  00FA59  0000               	dw	0
  1262  00FA5B  0000               	dw	0
  1263  00FA5D  000A               	dw	10
  1264  00FA5F  0002               	dw	2
  1265  00FA61  0000               	dw	0
  1266  00FA63  000C               	dw	12
  1267  00FA65  0000               	dw	0
  1268  00FA67  0010               	dw	16
  1269  00FA69  0000               	dw	0
  1270  00FA6B  0060               	dw	96
  1271  00FA6D  0000               	dw	0
  1272  00FA6F  0080               	dw	128
  1273  00FA71  0001               	dw	1
  1274  00FA73  0000               	dw	0
  1275  00FA75  0006               	dw	6
  1276  00FA77  0000               	dw	0
  1277  00FA79  0008               	dw	8
  1278  00FA7B  0000               	dw	0
  1279  00FA7D  0030               	dw	48
  1280  00FA7F  0000               	dw	0
  1281  00FA81  0040               	dw	64
  1282  00FA83  0000               	dw	0
  1283  00FA85  0000               	dw	0
  1284  00FA87  0005               	dw	5
  1285  00FA89  0000               	dw	0
  1286  00FA8B  0000               	dw	0
  1287  00FA8D  0002               	dw	2
  1288  00FA8F  0080               	dw	128
  1289  00FA91  0002               	dw	2
  1290  00FA93  0080               	dw	128
  1291  00FA95  00FE               	dw	254
  1292  00FA97  00FF               	dw	255
  1293  00FA99  0000               	dw	0
  1294  00FA9B  0000               	dw	0
  1295  00FA9D  000B               	dw	11
  1296  00FA9F  0000               	dw	0
  1297  00FAA1  0000               	dw	0
  1298  00FAA3  0000               	dw	0
  1299  00FAA5  0002               	dw	2
  1300  00FAA7  0080               	dw	128
  1301  00FAA9  0001               	dw	1
  1302  00FAAB  0070               	dw	112
  1303  00FAAD  0000               	dw	0
  1304  00FAAF  000C               	dw	12
  1305  00FAB1  0000               	dw	0
  1306  00FAB3  0002               	dw	2
  1307  00FAB5  0000               	dw	0
  1308  00FAB7  000C               	dw	12
  1309  00FAB9  0000               	dw	0
  1310  00FABB  0070               	dw	112
  1311  00FABD  0000               	dw	0
  1312  00FABF  0080               	dw	128
  1313  00FAC1  0001               	dw	1
  1314  00FAC3  0000               	dw	0
  1315  00FAC5  0002               	dw	2
  1316  00FAC7  0000               	dw	0
  1317  00FAC9  0000               	dw	0
  1318  00FACB  0009               	dw	9
  1319  00FACD  0000               	dw	0
  1320  00FACF  0040               	dw	64
  1321  00FAD1  0000               	dw	0
  1322  00FAD3  0040               	dw	64
  1323  00FAD5  0000               	dw	0
  1324  00FAD7  0040               	dw	64
  1325  00FAD9  0000               	dw	0
  1326  00FADB  0040               	dw	64
  1327  00FADD  0000               	dw	0
  1328  00FADF  0040               	dw	64
  1329  00FAE1  0000               	dw	0
  1330  00FAE3  0040               	dw	64
  1331  00FAE5  0000               	dw	0
  1332  00FAE7  0040               	dw	64
  1333  00FAE9  0000               	dw	0
  1334  00FAEB  0040               	dw	64
  1335  00FAED  0000               	dw	0
  1336  00FAEF  0000               	dw	0
  1337  00FAF1  0005               	dw	5
  1338  00FAF3  0000               	dw	0
  1339  00FAF5  0000               	dw	0
  1340  00FAF7  0000               	dw	0
  1341  00FAF9  0000               	dw	0
  1342  00FAFB  0002               	dw	2
  1343  00FAFD  0000               	dw	0
  1344  00FAFF  0004               	dw	4
  1345  00FB01  0000               	dw	0
  1346  00FB03  0000               	dw	0
  1347  00FB05  0000               	dw	0
  1348  00FB07  000B               	dw	11
  1349  00FB09  0000               	dw	0
  1350  00FB0B  0000               	dw	0
  1351  00FB0D  00C0               	dw	192
  1352  00FB0F  0007               	dw	7
  1353  00FB11  0020               	dw	32
  1354  00FB13  0008               	dw	8
  1355  00FB15  0010               	dw	16
  1356  00FB17  0010               	dw	16
  1357  00FB19  0010               	dw	16
  1358  00FB1B  0010               	dw	16
  1359  00FB1D  0010               	dw	16
  1360  00FB1F  0010               	dw	16
  1361  00FB21  0010               	dw	16
  1362  00FB23  0010               	dw	16
  1363  00FB25  0010               	dw	16
  1364  00FB27  0010               	dw	16
  1365  00FB29  0020               	dw	32
  1366  00FB2B  0008               	dw	8
  1367  00FB2D  00F0               	dw	240
  1368  00FB2F  001F               	dw	31
  1369  00FB31  0000               	dw	0
  1370  00FB33  0000               	dw	0
  1371  00FB35  000B               	dw	11
  1372  00FB37  0000               	dw	0
  1373  00FB39  0000               	dw	0
  1374  00FB3B  00FE               	dw	254
  1375  00FB3D  001F               	dw	31
  1376  00FB3F  0020               	dw	32
  1377  00FB41  0008               	dw	8
  1378  00FB43  0010               	dw	16
  1379  00FB45  0010               	dw	16
  1380  00FB47  0010               	dw	16
  1381  00FB49  0010               	dw	16
  1382  00FB4B  0010               	dw	16
  1383  00FB4D  0010               	dw	16
  1384  00FB4F  0010               	dw	16
  1385  00FB51  0010               	dw	16
  1386  00FB53  0010               	dw	16
  1387  00FB55  0010               	dw	16
  1388  00FB57  0020               	dw	32
  1389  00FB59  0008               	dw	8
  1390  00FB5B  00C0               	dw	192
  1391  00FB5D  0007               	dw	7
  1392  00FB5F  0000               	dw	0
  1393  00FB61  0000               	dw	0
  1394  00FB63  000A               	dw	10
  1395  00FB65  0000               	dw	0
  1396  00FB67  0000               	dw	0
  1397  00FB69  00C0               	dw	192
  1398  00FB6B  0007               	dw	7
  1399  00FB6D  0020               	dw	32
  1400  00FB6F  0008               	dw	8
  1401  00FB71  0010               	dw	16
  1402  00FB73  0010               	dw	16
  1403  00FB75  0010               	dw	16
  1404  00FB77  0010               	dw	16
  1405  00FB79  0010               	dw	16
  1406  00FB7B  0010               	dw	16
  1407  00FB7D  0010               	dw	16
  1408  00FB7F  0010               	dw	16
  1409  00FB81  0020               	dw	32
  1410  00FB83  0008               	dw	8
  1411  00FB85  0040               	dw	64
  1412  00FB87  0004               	dw	4
  1413  00FB89  0000               	dw	0
  1414  00FB8B  0000               	dw	0
  1415  00FB8D  000B               	dw	11
  1416  00FB8F  0000               	dw	0
  1417  00FB91  0000               	dw	0
  1418  00FB93  00C0               	dw	192
  1419  00FB95  0007               	dw	7
  1420  00FB97  0020               	dw	32
  1421  00FB99  0008               	dw	8
  1422  00FB9B  0010               	dw	16
  1423  00FB9D  0010               	dw	16
  1424  00FB9F  0010               	dw	16
  1425  00FBA1  0010               	dw	16
  1426  00FBA3  0010               	dw	16
  1427  00FBA5  0010               	dw	16
  1428  00FBA7  0010               	dw	16
  1429  00FBA9  0010               	dw	16
  1430  00FBAB  0010               	dw	16
  1431  00FBAD  0010               	dw	16
  1432  00FBAF  0020               	dw	32
  1433  00FBB1  0008               	dw	8
  1434  00FBB3  00FE               	dw	254
  1435  00FBB5  001F               	dw	31
  1436  00FBB7  0000               	dw	0
  1437  00FBB9  0000               	dw	0
  1438  00FBBB  000A               	dw	10
  1439  00FBBD  0000               	dw	0
  1440  00FBBF  0000               	dw	0
  1441  00FBC1  00C0               	dw	192
  1442  00FBC3  0007               	dw	7
  1443  00FBC5  0020               	dw	32
  1444  00FBC7  0009               	dw	9
  1445  00FBC9  0010               	dw	16
  1446  00FBCB  0011               	dw	17
  1447  00FBCD  0010               	dw	16
  1448  00FBCF  0011               	dw	17
  1449  00FBD1  0010               	dw	16
  1450  00FBD3  0011               	dw	17
  1451  00FBD5  0010               	dw	16
  1452  00FBD7  0011               	dw	17
  1453  00FBD9  0020               	dw	32
  1454  00FBDB  0009               	dw	9
  1455  00FBDD  00C0               	dw	192
  1456  00FBDF  0005               	dw	5
  1457  00FBE1  0000               	dw	0
  1458  00FBE3  0000               	dw	0
  1459  00FBE5  0006               	dw	6
  1460  00FBE7  0000               	dw	0
  1461  00FBE9  0000               	dw	0
  1462  00FBEB  0010               	dw	16
  1463  00FBED  0000               	dw	0
  1464  00FBEF  00FC               	dw	252
  1465  00FBF1  001F               	dw	31
  1466  00FBF3  0012               	dw	18
  1467  00FBF5  0000               	dw	0
  1468  00FBF7  0012               	dw	18
  1469  00FBF9  0000               	dw	0
  1470  00FBFB  0000               	dw	0
  1471  00FBFD  0000               	dw	0
  1472  00FBFF  000B               	dw	11
  1473  00FC01  0000               	dw	0
  1474  00FC03  0000               	dw	0
  1475  00FC05  00C0               	dw	192
  1476  00FC07  0027               	dw	39
  1477  00FC09  0020               	dw	32
  1478  00FC0B  0048               	dw	72
  1479  00FC0D  0010               	dw	16
  1480  00FC0F  0090               	dw	144
  1481  00FC11  0010               	dw	16
  1482  00FC13  0090               	dw	144
  1483  00FC15  0010               	dw	16
  1484  00FC17  0090               	dw	144
  1485  00FC19  0010               	dw	16
  1486  00FC1B  0090               	dw	144
  1487  00FC1D  0010               	dw	16
  1488  00FC1F  0090               	dw	144
  1489  00FC21  0020               	dw	32
  1490  00FC23  0048               	dw	72
  1491  00FC25  00F0               	dw	240
  1492  00FC27  003F               	dw	63
  1493  00FC29  0000               	dw	0
  1494  00FC2B  0000               	dw	0
  1495  00FC2D  000A               	dw	10
  1496  00FC2F  0000               	dw	0
  1497  00FC31  0000               	dw	0
  1498  00FC33  00FE               	dw	254
  1499  00FC35  001F               	dw	31
  1500  00FC37  0020               	dw	32
  1501  00FC39  0000               	dw	0
  1502  00FC3B  0010               	dw	16
  1503  00FC3D  0000               	dw	0
  1504  00FC3F  0010               	dw	16
  1505  00FC41  0000               	dw	0
  1506  00FC43  0010               	dw	16
  1507  00FC45  0000               	dw	0
  1508  00FC47  0010               	dw	16
  1509  00FC49  0000               	dw	0
  1510  00FC4B  0020               	dw	32
  1511  00FC4D  0000               	dw	0
  1512  00FC4F  00C0               	dw	192
  1513  00FC51  001F               	dw	31
  1514  00FC53  0000               	dw	0
  1515  00FC55  0000               	dw	0
  1516  00FC57  0003               	dw	3
  1517  00FC59  0000               	dw	0
  1518  00FC5B  0000               	dw	0
  1519  00FC5D  00F6               	dw	246
  1520  00FC5F  001F               	dw	31
  1521  00FC61  0000               	dw	0
  1522  00FC63  0000               	dw	0
  1523  00FC65  0003               	dw	3
  1524  00FC67  0000               	dw	0
  1525  00FC69  0080               	dw	128
  1526  00FC6B  00F6               	dw	246
  1527  00FC6D  007F               	dw	127
  1528  00FC6F  0000               	dw	0
  1529  00FC71  0000               	dw	0
  1530  00FC73  0008               	dw	8
  1531  00FC75  0000               	dw	0
  1532  00FC77  0000               	dw	0
  1533  00FC79  00FE               	dw	254
  1534  00FC7B  001F               	dw	31
  1535  00FC7D  0000               	dw	0
  1536  00FC7F  0001               	dw	1
  1537  00FC81  0080               	dw	128
  1538  00FC83  0002               	dw	2
  1539  00FC85  0040               	dw	64
  1540  00FC87  0004               	dw	4
  1541  00FC89  0020               	dw	32
  1542  00FC8B  0008               	dw	8
  1543  00FC8D  0010               	dw	16
  1544  00FC8F  0010               	dw	16
  1545  00FC91  0000               	dw	0
  1546  00FC93  0000               	dw	0
  1547  00FC95  0003               	dw	3
  1548  00FC97  0000               	dw	0
  1549  00FC99  0000               	dw	0
  1550  00FC9B  00FE               	dw	254
  1551  00FC9D  001F               	dw	31
  1552  00FC9F  0000               	dw	0
  1553  00FCA1  0000               	dw	0
  1554  00FCA3  000F               	dw	15
  1555  00FCA5  0000               	dw	0
  1556  00FCA7  0000               	dw	0
  1557  00FCA9  00F0               	dw	240
  1558  00FCAB  001F               	dw	31
  1559  00FCAD  0020               	dw	32
  1560  00FCAF  0000               	dw	0
  1561  00FCB1  0010               	dw	16
  1562  00FCB3  0000               	dw	0
  1563  00FCB5  0010               	dw	16
  1564  00FCB7  0000               	dw	0
  1565  00FCB9  0010               	dw	16
  1566  00FCBB  0000               	dw	0
  1567  00FCBD  0020               	dw	32
  1568  00FCBF  0000               	dw	0
  1569  00FCC1  00C0               	dw	192
  1570  00FCC3  001F               	dw	31
  1571  00FCC5  0020               	dw	32
  1572  00FCC7  0000               	dw	0
  1573  00FCC9  0010               	dw	16
  1574  00FCCB  0000               	dw	0
  1575  00FCCD  0010               	dw	16
  1576  00FCCF  0000               	dw	0
  1577  00FCD1  0010               	dw	16
  1578  00FCD3  0000               	dw	0
  1579  00FCD5  0020               	dw	32
  1580  00FCD7  0000               	dw	0
  1581  00FCD9  00C0               	dw	192
  1582  00FCDB  001F               	dw	31
  1583  00FCDD  0000               	dw	0
  1584  00FCDF  0000               	dw	0
  1585  00FCE1  000A               	dw	10
  1586  00FCE3  0000               	dw	0
  1587  00FCE5  0000               	dw	0
  1588  00FCE7  00F0               	dw	240
  1589  00FCE9  001F               	dw	31
  1590  00FCEB  0020               	dw	32
  1591  00FCED  0000               	dw	0
  1592  00FCEF  0010               	dw	16
  1593  00FCF1  0000               	dw	0
  1594  00FCF3  0010               	dw	16
  1595  00FCF5  0000               	dw	0
  1596  00FCF7  0010               	dw	16
  1597  00FCF9  0000               	dw	0
  1598  00FCFB  0010               	dw	16
  1599  00FCFD  0000               	dw	0
  1600  00FCFF  0020               	dw	32
  1601  00FD01  0000               	dw	0
  1602  00FD03  00C0               	dw	192
  1603  00FD05  001F               	dw	31
  1604  00FD07  0000               	dw	0
  1605  00FD09  0000               	dw	0
  1606  00FD0B  000A               	dw	10
  1607  00FD0D  0000               	dw	0
  1608  00FD0F  0000               	dw	0
  1609  00FD11  00C0               	dw	192
  1610  00FD13  0007               	dw	7
  1611  00FD15  0020               	dw	32
  1612  00FD17  0008               	dw	8
  1613  00FD19  0010               	dw	16
  1614  00FD1B  0010               	dw	16
  1615  00FD1D  0010               	dw	16
  1616  00FD1F  0010               	dw	16
  1617  00FD21  0010               	dw	16
  1618  00FD23  0010               	dw	16
  1619  00FD25  0010               	dw	16
  1620  00FD27  0010               	dw	16
  1621  00FD29  0020               	dw	32
  1622  00FD2B  0008               	dw	8
  1623  00FD2D  00C0               	dw	192
  1624  00FD2F  0007               	dw	7
  1625  00FD31  0000               	dw	0
  1626  00FD33  0000               	dw	0
  1627  00FD35  000B               	dw	11
  1628  00FD37  0000               	dw	0
  1629  00FD39  0000               	dw	0
  1630  00FD3B  00F0               	dw	240
  1631  00FD3D  00FF               	dw	255
  1632  00FD3F  0020               	dw	32
  1633  00FD41  0008               	dw	8
  1634  00FD43  0010               	dw	16
  1635  00FD45  0010               	dw	16
  1636  00FD47  0010               	dw	16
  1637  00FD49  0010               	dw	16
  1638  00FD4B  0010               	dw	16
  1639  00FD4D  0010               	dw	16
  1640  00FD4F  0010               	dw	16
  1641  00FD51  0010               	dw	16
  1642  00FD53  0010               	dw	16
  1643  00FD55  0010               	dw	16
  1644  00FD57  0020               	dw	32
  1645  00FD59  0008               	dw	8
  1646  00FD5B  00C0               	dw	192
  1647  00FD5D  0007               	dw	7
  1648  00FD5F  0000               	dw	0
  1649  00FD61  0000               	dw	0
  1650  00FD63  000B               	dw	11
  1651  00FD65  0000               	dw	0
  1652  00FD67  0000               	dw	0
  1653  00FD69  00C0               	dw	192
  1654  00FD6B  0007               	dw	7
  1655  00FD6D  0020               	dw	32
  1656  00FD6F  0008               	dw	8
  1657  00FD71  0010               	dw	16
  1658  00FD73  0010               	dw	16
  1659  00FD75  0010               	dw	16
  1660  00FD77  0010               	dw	16
  1661  00FD79  0010               	dw	16
  1662  00FD7B  0010               	dw	16
  1663  00FD7D  0010               	dw	16
  1664  00FD7F  0010               	dw	16
  1665  00FD81  0010               	dw	16
  1666  00FD83  0010               	dw	16
  1667  00FD85  0020               	dw	32
  1668  00FD87  0008               	dw	8
  1669  00FD89  00F0               	dw	240
  1670  00FD8B  00FF               	dw	255
  1671  00FD8D  0000               	dw	0
  1672  00FD8F  0000               	dw	0
  1673  00FD91  0006               	dw	6
  1674  00FD93  0000               	dw	0
  1675  00FD95  0000               	dw	0
  1676  00FD97  00F0               	dw	240
  1677  00FD99  001F               	dw	31
  1678  00FD9B  0020               	dw	32
  1679  00FD9D  0000               	dw	0
  1680  00FD9F  0010               	dw	16
  1681  00FDA1  0000               	dw	0
  1682  00FDA3  0010               	dw	16
  1683  00FDA5  0000               	dw	0
  1684  00FDA7  0000               	dw	0
  1685  00FDA9  0000               	dw	0
  1686  00FDAB  0006               	dw	6
  1687  00FDAD  0060               	dw	96
  1688  00FDAF  0008               	dw	8
  1689  00FDB1  0090               	dw	144
  1690  00FDB3  0010               	dw	16
  1691  00FDB5  0010               	dw	16
  1692  00FDB7  0011               	dw	17
  1693  00FDB9  0010               	dw	16
  1694  00FDBB  0011               	dw	17
  1695  00FDBD  0020               	dw	32
  1696  00FDBF  000E               	dw	14
  1697  00FDC1  0000               	dw	0
  1698  00FDC3  0000               	dw	0
  1699  00FDC5  0007               	dw	7
  1700  00FDC7  0000               	dw	0
  1701  00FDC9  0000               	dw	0
  1702  00FDCB  0010               	dw	16
  1703  00FDCD  0000               	dw	0
  1704  00FDCF  0010               	dw	16
  1705  00FDD1  0000               	dw	0
  1706  00FDD3  00FE               	dw	254
  1707  00FDD5  001F               	dw	31
  1708  00FDD7  0010               	dw	16
  1709  00FDD9  0000               	dw	0
  1710  00FDDB  0010               	dw	16
  1711  00FDDD  0000               	dw	0
  1712  00FDDF  0000               	dw	0
  1713  00FDE1  0000               	dw	0
  1714  00FDE3  000A               	dw	10
  1715  00FDE5  0000               	dw	0
  1716  00FDE7  0000               	dw	0
  1717  00FDE9  00F0               	dw	240
  1718  00FDEB  0007               	dw	7
  1719  00FDED  0000               	dw	0
  1720  00FDEF  0008               	dw	8
  1721  00FDF1  0000               	dw	0
  1722  00FDF3  0010               	dw	16
  1723  00FDF5  0000               	dw	0
  1724  00FDF7  0010               	dw	16
  1725  00FDF9  0000               	dw	0
  1726  00FDFB  0010               	dw	16
  1727  00FDFD  0000               	dw	0
  1728  00FDFF  0010               	dw	16
  1729  00FE01  0000               	dw	0
  1730  00FE03  0008               	dw	8
  1731  00FE05  00F0               	dw	240
  1732  00FE07  0007               	dw	7
  1733  00FE09  0000               	dw	0
  1734  00FE0B  0000               	dw	0
  1735  00FE0D  000A               	dw	10
  1736  00FE0F  0010               	dw	16
  1737  00FE11  0000               	dw	0
  1738  00FE13  0060               	dw	96
  1739  00FE15  0000               	dw	0
  1740  00FE17  0080               	dw	128
  1741  00FE19  0003               	dw	3
  1742  00FE1B  0000               	dw	0
  1743  00FE1D  000C               	dw	12
  1744  00FE1F  0000               	dw	0
  1745  00FE21  0010               	dw	16
  1746  00FE23  0000               	dw	0
  1747  00FE25  000C               	dw	12
  1748  00FE27  0080               	dw	128
  1749  00FE29  0003               	dw	3
  1750  00FE2B  0060               	dw	96
  1751  00FE2D  0000               	dw	0
  1752  00FE2F  0010               	dw	16
  1753  00FE31  0000               	dw	0
  1754  00FE33  0000               	dw	0
  1755  00FE35  0000               	dw	0
  1756  00FE37  000E               	dw	14
  1757  00FE39  0010               	dw	16
  1758  00FE3B  0000               	dw	0
  1759  00FE3D  00E0               	dw	224
  1760  00FE3F  0000               	dw	0
  1761  00FE41  0000               	dw	0
  1762  00FE43  0007               	dw	7
  1763  00FE45  0000               	dw	0
  1764  00FE47  0018               	dw	24
  1765  00FE49  0000               	dw	0
  1766  00FE4B  0007               	dw	7
  1767  00FE4D  00E0               	dw	224
  1768  00FE4F  0000               	dw	0
  1769  00FE51  0010               	dw	16
  1770  00FE53  0000               	dw	0
  1771  00FE55  00E0               	dw	224
  1772  00FE57  0000               	dw	0
  1773  00FE59  0000               	dw	0
  1774  00FE5B  0007               	dw	7
  1775  00FE5D  0000               	dw	0
  1776  00FE5F  0018               	dw	24
  1777  00FE61  0000               	dw	0
  1778  00FE63  0007               	dw	7
  1779  00FE65  00E0               	dw	224
  1780  00FE67  0000               	dw	0
  1781  00FE69  0010               	dw	16
  1782  00FE6B  0000               	dw	0
  1783  00FE6D  0000               	dw	0
  1784  00FE6F  0000               	dw	0
  1785  00FE71  0009               	dw	9
  1786  00FE73  0010               	dw	16
  1787  00FE75  0010               	dw	16
  1788  00FE77  0020               	dw	32
  1789  00FE79  0008               	dw	8
  1790  00FE7B  0040               	dw	64
  1791  00FE7D  0004               	dw	4
  1792  00FE7F  0080               	dw	128
  1793  00FE81  0003               	dw	3
  1794  00FE83  0080               	dw	128
  1795  00FE85  0003               	dw	3
  1796  00FE87  0040               	dw	64
  1797  00FE89  0004               	dw	4
  1798  00FE8B  0020               	dw	32
  1799  00FE8D  0008               	dw	8
  1800  00FE8F  0010               	dw	16
  1801  00FE91  0010               	dw	16
  1802  00FE93  0000               	dw	0
  1803  00FE95  0000               	dw	0
  1804  00FE97  0009               	dw	9
  1805  00FE99  0010               	dw	16
  1806  00FE9B  0000               	dw	0
  1807  00FE9D  00E0               	dw	224
  1808  00FE9F  0000               	dw	0
  1809  00FEA1  0000               	dw	0
  1810  00FEA3  0083               	dw	131
  1811  00FEA5  0000               	dw	0
  1812  00FEA7  007C               	dw	124
  1813  00FEA9  0000               	dw	0
  1814  00FEAB  000C               	dw	12
  1815  00FEAD  0000               	dw	0
  1816  00FEAF  0003               	dw	3
  1817  00FEB1  00E0               	dw	224
  1818  00FEB3  0000               	dw	0
  1819  00FEB5  0010               	dw	16
  1820  00FEB7  0000               	dw	0
  1821  00FEB9  0000               	dw	0
  1822  00FEBB  0000               	dw	0
  1823  00FEBD  0008               	dw	8
  1824  00FEBF  0010               	dw	16
  1825  00FEC1  0010               	dw	16
  1826  00FEC3  0010               	dw	16
  1827  00FEC5  0018               	dw	24
  1828  00FEC7  0010               	dw	16
  1829  00FEC9  0016               	dw	22
  1830  00FECB  0010               	dw	16
  1831  00FECD  0011               	dw	17
  1832  00FECF  00D0               	dw	208
  1833  00FED1  0010               	dw	16
  1834  00FED3  0030               	dw	48
  1835  00FED5  0010               	dw	16
  1836  00FED7  0010               	dw	16
  1837  00FED9  0010               	dw	16
  1838  00FEDB  0000               	dw	0
  1839  00FEDD  0000               	dw	0
  1840  00FEDF  0007               	dw	7
  1841  00FEE1  0000               	dw	0
  1842  00FEE3  0000               	dw	0
  1843  00FEE5  0000               	dw	0
  1844  00FEE7  0001               	dw	1
  1845  00FEE9  0080               	dw	128
  1846  00FEEB  0002               	dw	2
  1847  00FEED  00FC               	dw	252
  1848  00FEEF  007E               	dw	126
  1849  00FEF1  0002               	dw	2
  1850  00FEF3  0080               	dw	128
  1851  00FEF5  0002               	dw	2
  1852  00FEF7  0080               	dw	128
  1853  00FEF9  0000               	dw	0
  1854  00FEFB  0000               	dw	0
  1855  00FEFD  0007               	dw	7
  1856  00FEFF  0000               	dw	0
  1857  00FF01  0000               	dw	0
  1858  00FF03  0000               	dw	0
  1859  00FF05  0000               	dw	0
  1860  00FF07  0000               	dw	0
  1861  00FF09  0000               	dw	0
  1862  00FF0B  0000               	dw	0
  1863  00FF0D  0000               	dw	0
  1864  00FF0F  0000               	dw	0
  1865  00FF11  0000               	dw	0
  1866  00FF13  00FE               	dw	254
  1867  00FF15  00FF               	dw	255
  1868  00FF17  0000               	dw	0
  1869  00FF19  0000               	dw	0
  1870  00FF1B  0006               	dw	6
  1871  00FF1D  0002               	dw	2
  1872  00FF1F  0080               	dw	128
  1873  00FF21  0002               	dw	2
  1874  00FF23  0080               	dw	128
  1875  00FF25  00FC               	dw	252
  1876  00FF27  007E               	dw	126
  1877  00FF29  0080               	dw	128
  1878  00FF2B  0002               	dw	2
  1879  00FF2D  0000               	dw	0
  1880  00FF2F  0001               	dw	1
  1881  00FF31  0000               	dw	0
  1882  00FF33  0000               	dw	0
  1883  00FF35  000A               	dw	10
  1884  00FF37  0000               	dw	0
  1885  00FF39  0000               	dw	0
  1886  00FF3B  0080               	dw	128
  1887  00FF3D  0000               	dw	0
  1888  00FF3F  0040               	dw	64
  1889  00FF41  0000               	dw	0
  1890  00FF43  0040               	dw	64
  1891  00FF45  0000               	dw	0
  1892  00FF47  0040               	dw	64
  1893  00FF49  0000               	dw	0
  1894  00FF4B  0080               	dw	128
  1895  00FF4D  0000               	dw	0
  1896  00FF4F  0080               	dw	128
  1897  00FF51  0000               	dw	0
  1898  00FF53  0080               	dw	128
  1899  00FF55  0000               	dw	0
  1900  00FF57  0040               	dw	64
  1901  00FF59  0000               	dw	0
  1902  00FF5B  0000               	dw	0
  1903  00FF5D  0000               	dw	0
  1904  00FF5F  0005               	dw	5
  1905  00FF61  00FF               	dw	255
  1906  00FF63  000F               	dw	15
  1907  00FF65  0001               	dw	1
  1908  00FF67  0008               	dw	8
  1909  00FF69  0001               	dw	1
  1910  00FF6B  0008               	dw	8
  1911  00FF6D  00FF               	dw	255
  1912  00FF6F  000F               	dw	15
  1913  00FF71  0000               	dw	0
  1914  00FF73  0000               	dw	0
  1915  00FF75                     __end_of_font:
  1916                           	opt callstack 0
  1917  00FF75                     _spi_configuration:
  1918                           	opt callstack 0
  1919  00FF75  00                 	db	0
  1920  00FF76  40                 	db	64
  1921  00FF77  01                 	db	1
  1922  00FF78  00                 	db	0
  1923  00FF79                     __end_of_spi_configuration:
  1924                           	opt callstack 0
  1925  00FF79                     STR_4:
  1926  00FF79  4E                 	db	78	;'N'
  1927  00FF7A  54                 	db	84	;'T'
  1928  00FF7B  43                 	db	67	;'C'
  1929  00FF7C  3D                 	db	61	;'='
  1930  00FF7D  25                 	db	37
  1931  00FF7E  66                 	db	102	;'f'
  1932  00FF7F  BA                 	db	-70
  1933  00FF80  43                 	db	67	;'C'
  1934  00FF81  20                 	db	32
  1935  00FF82  20                 	db	32
  1936  00FF83  20                 	db	32
  1937  00FF84  20                 	db	32
  1938  00FF85  20                 	db	32
  1939  00FF86  20                 	db	32
  1940  00FF87  20                 	db	32
  1941  00FF88  20                 	db	32
  1942  00FF89  20                 	db	32
  1943  00FF8A  20                 	db	32
  1944  00FF8B  20                 	db	32
  1945  00FF8C  20                 	db	32
  1946  00FF8D  00                 	db	0
  1947  00FF8E                     STR_2:
  1948  00FF8E  54                 	db	84	;'T'
  1949  00FF8F  65                 	db	101	;'e'
  1950  00FF90  6D                 	db	109	;'m'
  1951  00FF91  70                 	db	112	;'p'
  1952  00FF92  3D                 	db	61	;'='
  1953  00FF93  25                 	db	37
  1954  00FF94  2E                 	db	46
  1955  00FF95  66                 	db	102	;'f'
  1956  00FF96  20                 	db	32
  1957  00FF97  43                 	db	67	;'C'
  1958  00FF98  20                 	db	32
  1959  00FF99  20                 	db	32
  1960  00FF9A  20                 	db	32
  1961  00FF9B  20                 	db	32
  1962  00FF9C  20                 	db	32
  1963  00FF9D  20                 	db	32
  1964  00FF9E  00                 	db	0
  1965  00FF9F                     STR_3:
  1966  00FF9F  50                 	db	80	;'P'
  1967  00FFA0  6F                 	db	111	;'o'
  1968  00FFA1  74                 	db	116	;'t'
  1969  00FFA2  3D                 	db	61	;'='
  1970  00FFA3  25                 	db	37
  1971  00FFA4  2E                 	db	46
  1972  00FFA5  66                 	db	102	;'f'
  1973  00FFA6  25                 	db	37
  1974  00FFA7  25                 	db	37
  1975  00FFA8  20                 	db	32
  1976  00FFA9  20                 	db	32
  1977  00FFAA  20                 	db	32
  1978  00FFAB  20                 	db	32
  1979  00FFAC  20                 	db	32
  1980  00FFAD  20                 	db	32
  1981  00FFAE  00                 	db	0
  1982  00FFAF                     STR_1:
  1983  00FFAF  48                 	db	72	;'H'
  1984  00FFB0  45                 	db	69	;'E'
  1985  00FFB1  4C                 	db	76	;'L'
  1986  00FFB2  4C                 	db	76	;'L'
  1987  00FFB3  4F                 	db	79	;'O'
  1988  00FFB4  20                 	db	32
  1989  00FFB5  57                 	db	87	;'W'
  1990  00FFB6  4F                 	db	79	;'O'
  1991  00FFB7  52                 	db	82	;'R'
  1992  00FFB8  4C                 	db	76	;'L'
  1993  00FFB9  44                 	db	68	;'D'
  1994  00FFBA  00                 	db	0
  1995  00FFBB                     STR_5:
  1996  00FFBB  49                 	db	73	;'I'
  1997  00FFBC  4E                 	db	78	;'N'
  1998  00FFBD  46                 	db	70	;'F'
  1999  00FFBE  00                 	db	0
  2000  00FFBF                     STR_9:
  2001  00FFBF  4E                 	db	78	;'N'
  2002  00FFC0  41                 	db	65	;'A'
  2003  00FFC1  4E                 	db	78	;'N'
  2004  00FFC2  00                 	db	0
  2005  00FFC3                     STR_94:
  2006  00FFC3  68                 	db	104	;'h'
  2007  00FFC4  68                 	db	104	;'h'
  2008  00FFC5  58                 	db	88	;'X'
  2009  00FFC6  00                 	db	0
  2010  00FFC7                     STR_13:
  2011  00FFC7  68                 	db	104	;'h'
  2012  00FFC8  68                 	db	104	;'h'
  2013  00FFC9  64                 	db	100	;'d'
  2014  00FFCA  00                 	db	0
  2015  00FFCB                     STR_6:
  2016  00FFCB  69                 	db	105	;'i'
  2017  00FFCC  6E                 	db	110	;'n'
  2018  00FFCD  66                 	db	102	;'f'
  2019  00FFCE  00                 	db	0
  2020  00FFCF                     STR_17:
  2021  00FFCF  68                 	db	104	;'h'
  2022  00FFD0  68                 	db	104	;'h'
  2023  00FFD1  69                 	db	105	;'i'
  2024  00FFD2  00                 	db	0
  2025  00FFD3                     STR_10:
  2026  00FFD3  6E                 	db	110	;'n'
  2027  00FFD4  61                 	db	97	;'a'
  2028  00FFD5  6E                 	db	110	;'n'
  2029  00FFD6  00                 	db	0
  2030  00FFD7                     STR_60:
  2031  00FFD7  68                 	db	104	;'h'
  2032  00FFD8  68                 	db	104	;'h'
  2033  00FFD9  6E                 	db	110	;'n'
  2034  00FFDA  00                 	db	0
  2035  00FFDB                     STR_45:
  2036  00FFDB  68                 	db	104	;'h'
  2037  00FFDC  68                 	db	104	;'h'
  2038  00FFDD  6F                 	db	111	;'o'
  2039  00FFDE  00                 	db	0
  2040  00FFDF                     STR_75:
  2041  00FFDF  68                 	db	104	;'h'
  2042  00FFE0  68                 	db	104	;'h'
  2043  00FFE1  75                 	db	117	;'u'
  2044  00FFE2  00                 	db	0
  2045  00FFE3                     STR_90:
  2046  00FFE3  68                 	db	104	;'h'
  2047  00FFE4  68                 	db	104	;'h'
  2048  00FFE5  78                 	db	120	;'x'
  2049  00FFE6  00                 	db	0
  2050  00FFE7                     STR_112:
  2051  00FFE7  7A                 	db	122	;'z'
  2052  00FFE8  58                 	db	88	;'X'
  2053  00FFE9  00                 	db	0
  2054  00FFEA                     STR_31:
  2055  00FFEA  7A                 	db	122	;'z'
  2056  00FFEB  64                 	db	100	;'d'
  2057  00FFEC  00                 	db	0
  2058  00FFED                     STR_40:
  2059  00FFED  6C                 	db	108	;'l'
  2060  00FFEE  66                 	db	102	;'f'
  2061  00FFEF  00                 	db	0
  2062  00FFF0                     STR_35:
  2063  00FFF0  7A                 	db	122	;'z'
  2064  00FFF1  69                 	db	105	;'i'
  2065  00FFF2  00                 	db	0
  2066  00FFF3                     STR_70:
  2067  00FFF3  7A                 	db	122	;'z'
  2068  00FFF4  6E                 	db	110	;'n'
  2069  00FFF5  00                 	db	0
  2070  00FFF6                     STR_55:
  2071  00FFF6  7A                 	db	122	;'z'
  2072  00FFF7  6F                 	db	111	;'o'
  2073  00FFF8  00                 	db	0
  2074  00FFF9                     STR_85:
  2075  00FFF9  7A                 	db	122	;'z'
  2076  00FFFA  75                 	db	117	;'u'
  2077  00FFFB  00                 	db	0
  2078  00FFFC                     STR_108:
  2079  00FFFC  7A                 	db	122	;'z'
  2080  00FFFD  78                 	db	120	;'x'
  2081  00FFFE  00                 	db	0
  2082  0000                     
  2083                           ; #config settings
  2084  00FFFF  00                 	db	0	; dummy byte at the end
  2085  0000                     
  2086                           	psect	nvBANK1
  2087  0001F9                     __pnvBANK1:
  2088                           	opt callstack 0
  2089  0001F9                     _timer1ReloadVal:
  2090                           	opt callstack 0
  2091  0001F9                     	ds	2
  2092  0001FB                     _IOCB4_InterruptHandler:
  2093                           	opt callstack 0
  2094  0001FB                     	ds	2
  2095  0000                     _IOCBbits	set	3930
  2096  0000                     _WPUB	set	3931
  2097  0000                     _ANCON1	set	3932
  2098  0000                     _ANCON0	set	3933
  2099  0000                     _LATEbits	set	3981
  2100  0000                     _SSPSTATbits	set	4039
  2101  0000                     _LATAbits	set	3977
  2102  0000                     _PORTBbits	set	3969
  2103  0000                     _T1GCONbits	set	4010
  2104  0000                     _T1CONbits	set	4045
  2105  0000                     _T1CON	set	4045
  2106  0000                     _TMR1L	set	4046
  2107  0000                     _TMR1H	set	4047
  2108  0000                     _T1GCON	set	4010
  2109  0000                     _ADCON0bits	set	4034
  2110  0000                     _ADRESL	set	4035
  2111  0000                     _ADRESH	set	4036
  2112  0000                     _ADCON2	set	4032
  2113  0000                     _ADCON1	set	4033
  2114  0000                     _ADCON0	set	4034
  2115  0000                     _PIR1bits	set	3998
  2116  0000                     _SSPBUF	set	4041
  2117  0000                     _SSPCON2	set	4037
  2118  0000                     _SSPCON1bits	set	4038
  2119  0000                     _TRISCbits	set	3988
  2120  0000                     _SSPADD	set	4040
  2121  0000                     _SSPCON1	set	4038
  2122  0000                     _SSPSTAT	set	4039
  2123  0000                     _INTCON2bits	set	4081
  2124  0000                     _TRISD	set	3989
  2125  0000                     _TRISC	set	3988
  2126  0000                     _TRISB	set	3987
  2127  0000                     _TRISA	set	3986
  2128  0000                     _TRISE	set	3990
  2129  0000                     _LATC	set	3979
  2130  0000                     _LATB	set	3978
  2131  0000                     _LATA	set	3977
  2132  0000                     _LATD	set	3980
  2133  0000                     _LATE	set	3981
  2134  0000                     _INTCONbits	set	4082
  2135  0000                     _RCONbits	set	4048
  2136  0000                     _REFOCON	set	3994
  2137  0000                     _OSCTUNE	set	3995
  2138  0000                     _OSCCON2	set	4050
  2139  0000                     _OSCCON	set	4051
  2140                           
  2141                           	psect	cinit
  2142  0059C2                     __pcinit:
  2143                           	opt callstack 0
  2144  0059C2                     start_initialization:
  2145                           	opt callstack 0
  2146  0059C2                     __initialization:
  2147                           	opt callstack 0
  2148                           
  2149                           ; Initialize objects allocated to BANK1 (7 bytes)
  2150                           ; load TBLPTR registers with __pidataBANK1
  2151  0059C2  0E1A               	movlw	low __pidataBANK1
  2152  0059C4  6EF6               	movwf	tblptrl,c
  2153  0059C6  0E5F               	movlw	high __pidataBANK1
  2154  0059C8  6EF7               	movwf	tblptrh,c
  2155  0059CA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2156  0059CC  6EF8               	movwf	tblptru,c
  2157  0059CE  EE01  F0F2         	lfsr	0,__pdataBANK1
  2158  0059D2  EE10 F007          	lfsr	1,7
  2159  0059D6                     copy_data0:
  2160  0059D6  0009               	tblrd		*+
  2161  0059D8  CFF5 FFEE          	movff	tablat,postinc0
  2162  0059DC  50E5               	movf	postdec1,w,c
  2163  0059DE  50E1               	movf	fsr1l,w,c
  2164  0059E0  E1FA               	bnz	copy_data0
  2165                           
  2166                           ; Clear objects allocated to BANK2 (200 bytes)
  2167  0059E2  EE02  F000         	lfsr	0,__pbssBANK2
  2168  0059E6  0EC8               	movlw	200
  2169  0059E8                     clear_0:
  2170  0059E8  6AEE               	clrf	postinc0,c
  2171  0059EA  06E8               	decf	wreg,f,c
  2172  0059EC  E1FD               	bnz	clear_0
  2173                           
  2174                           ; Clear objects allocated to BANK1 (222 bytes)
  2175  0059EE  EE01  F000         	lfsr	0,__pbssBANK1
  2176  0059F2  0EDE               	movlw	222
  2177  0059F4                     clear_1:
  2178  0059F4  6AEE               	clrf	postinc0,c
  2179  0059F6  06E8               	decf	wreg,f,c
  2180  0059F8  E1FD               	bnz	clear_1
  2181                           
  2182                           ; Clear objects allocated to BANK0 (2 bytes)
  2183  0059FA  0100               	movlb	0
  2184  0059FC  6BFD               	clrf	(__pbssBANK0+1)& (0+255),b
  2185  0059FE  6BFC               	clrf	__pbssBANK0& (0+255),b
  2186                           
  2187                           ; Clear objects allocated to COMRAM (2 bytes)
  2188  005A00  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2189  005A02  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  2190  005A04                     end_of_initialization:
  2191                           	opt callstack 0
  2192  005A04                     __end_of__initialization:
  2193                           	opt callstack 0
  2194  005A04  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2195  005A06  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2196  005A08  0100               	movlb	0
  2197  005A0A  EFE6  F014         	goto	_main	;jump to C main() function
  2198                           
  2199                           	psect	bssCOMRAM
  2200  00005A                     __pbssCOMRAM:
  2201                           	opt callstack 0
  2202  00005A                     _prec:
  2203                           	opt callstack 0
  2204  00005A                     	ds	2
  2205                           
  2206                           	psect	bssBANK0
  2207  0000FC                     __pbssBANK0:
  2208                           	opt callstack 0
  2209  0000FC                     _flags:
  2210                           	opt callstack 0
  2211  0000FC                     	ds	2
  2212                           
  2213                           	psect	bssBANK1
  2214  000100                     __pbssBANK1:
  2215                           	opt callstack 0
  2216  000100                     floorf@F524:
  2217                           	opt callstack 0
  2218  000100                     	ds	4
  2219  000104                     ___fpclassifyf@F463:
  2220                           	opt callstack 0
  2221  000104                     	ds	4
  2222  000108                     _temp_ntc:
  2223                           	opt callstack 0
  2224  000108                     	ds	4
  2225  00010C                     _ntc_val:
  2226                           	opt callstack 0
  2227  00010C                     	ds	4
  2228  000110                     _pot_val:
  2229                           	opt callstack 0
  2230  000110                     	ds	4
  2231  000114                     _temp:
  2232                           	opt callstack 0
  2233  000114                     	ds	4
  2234  000118                     _errno:
  2235                           	opt callstack 0
  2236  000118                     	ds	2
  2237  00011A                     _nout:
  2238                           	opt callstack 0
  2239  00011A                     	ds	2
  2240  00011C                     _width:
  2241                           	opt callstack 0
  2242  00011C                     	ds	2
  2243  00011E                     _global_bg_color:
  2244                           	opt callstack 0
  2245  00011E                     	ds	2
  2246  000120                     _botao:
  2247                           	opt callstack 0
  2248  000120                     	ds	2
  2249  000122                     _codigo_digit:
  2250                           	opt callstack 0
  2251  000122                     	ds	2
  2252  000124                     _ADC_InterruptHandler:
  2253                           	opt callstack 0
  2254  000124                     	ds	2
  2255  000126                     _string_temp:
  2256                           	opt callstack 0
  2257  000126                     	ds	100
  2258  00018A                     _dbuf:
  2259                           	opt callstack 0
  2260  00018A                     	ds	80
  2261  0001DA                     _tensao_in:
  2262                           	opt callstack 0
  2263  0001DA                     	ds	4
  2264                           
  2265                           	psect	dataBANK1
  2266  0001F2                     __pdataBANK1:
  2267                           	opt callstack 0
  2268  0001F2                     stoa@F1174:
  2269                           	opt callstack 0
  2270  0001F2                     	ds	7
  2271                           
  2272                           	psect	bssBANK2
  2273  000200                     __pbssBANK2:
  2274                           	opt callstack 0
  2275  000200                     _string_ntc:
  2276                           	opt callstack 0
  2277  000200                     	ds	100
  2278  000264                     _string_pot:
  2279                           	opt callstack 0
  2280  000264                     	ds	100
  2281                           
  2282                           	psect	cstackBANK2
  2283  0002C8                     __pcstackBANK2:
  2284                           	opt callstack 0
  2285  0002C8                     	ds	2
  2286  0002CA                     snprintf@ap:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x2
  2290  0002CA                     	ds	2
  2291                           
  2292                           	psect	cstackBANK1
  2293  0001DE                     __pcstackBANK1:
  2294                           	opt callstack 0
  2295  0001DE                     _vsnprintf$2147:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 2 bytes @ 0x0
  2299  0001DE                     	ds	2
  2300  0001E0                     vsnprintf@cnt:
  2301                           	opt callstack 0
  2302                           
  2303                           ; 2 bytes @ 0x2
  2304  0001E0                     	ds	2
  2305  0001E2                     vsnprintf@f:
  2306                           	opt callstack 0
  2307                           
  2308                           ; 6 bytes @ 0x4
  2309  0001E2                     	ds	6
  2310  0001E8                     ?_snprintf:
  2311                           	opt callstack 0
  2312  0001E8                     snprintf@s:
  2313                           	opt callstack 0
  2314                           
  2315                           ; 2 bytes @ 0xA
  2316  0001E8                     	ds	2
  2317  0001EA                     snprintf@n:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 2 bytes @ 0xC
  2321  0001EA                     	ds	2
  2322  0001EC                     snprintf@fmt:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 2 bytes @ 0xE
  2326  0001EC                     	ds	6
  2327                           
  2328                           	psect	cstackBANK0
  2329  000060                     __pcstackBANK0:
  2330                           	opt callstack 0
  2331  000060                     ___fldiv@rem:
  2332                           	opt callstack 0
  2333                           
  2334                           ; 4 bytes @ 0x0
  2335  000060                     	ds	4
  2336  000064                     ___fldiv@sign:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 1 bytes @ 0x4
  2340  000064                     	ds	1
  2341  000065                     ___fldiv@new_exp:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x5
  2345  000065                     	ds	2
  2346  000067                     ___fldiv@grs:
  2347                           	opt callstack 0
  2348                           
  2349                           ; 4 bytes @ 0x7
  2350  000067                     	ds	4
  2351  00006B                     ___fldiv@bexp:
  2352                           	opt callstack 0
  2353                           
  2354                           ; 1 bytes @ 0xB
  2355  00006B                     	ds	1
  2356  00006C                     ___fldiv@aexp:
  2357                           	opt callstack 0
  2358                           
  2359                           ; 1 bytes @ 0xC
  2360  00006C                     	ds	1
  2361  00006D                     ?_floorf:
  2362                           	opt callstack 0
  2363  00006D                     floorf@x:
  2364                           	opt callstack 0
  2365                           
  2366                           ; 4 bytes @ 0xD
  2367  00006D                     	ds	4
  2368  000071                     floorf@m:
  2369                           	opt callstack 0
  2370                           
  2371                           ; 4 bytes @ 0x11
  2372  000071                     	ds	4
  2373  000075                     floorf@e:
  2374                           	opt callstack 0
  2375                           
  2376                           ; 2 bytes @ 0x15
  2377  000075                     	ds	2
  2378  000077                     floorf@u:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 4 bytes @ 0x17
  2382  000077                     	ds	4
  2383  00007B                     ?_efgtoa:
  2384                           	opt callstack 0
  2385  00007B                     efgtoa@fp:
  2386                           	opt callstack 0
  2387                           
  2388                           ; 2 bytes @ 0x1B
  2389  00007B                     	ds	2
  2390  00007D                     efgtoa@f:
  2391                           	opt callstack 0
  2392                           
  2393                           ; 4 bytes @ 0x1D
  2394  00007D                     	ds	4
  2395  000081                     efgtoa@c:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 1 bytes @ 0x21
  2399  000081                     	ds	1
  2400  000082                     efgtoa@ou:
  2401                           	opt callstack 0
  2402                           
  2403                           ; 4 bytes @ 0x22
  2404  000082                     	ds	4
  2405  000086                     _efgtoa$1332:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 2 bytes @ 0x26
  2409  000086                     	ds	2
  2410  000088                     _efgtoa$1333:
  2411                           	opt callstack 0
  2412                           
  2413                           ; 2 bytes @ 0x28
  2414  000088                     	ds	2
  2415  00008A                     _efgtoa$1337:
  2416                           	opt callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x2A
  2419  00008A                     	ds	2
  2420  00008C                     _efgtoa$1341:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x2C
  2424  00008C                     	ds	2
  2425  00008E                     _efgtoa$1342:
  2426                           	opt callstack 0
  2427                           
  2428                           ; 2 bytes @ 0x2E
  2429  00008E                     	ds	2
  2430  000090                     _efgtoa$1343:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x30
  2434  000090                     	ds	2
  2435  000092                     efgtoa@t:
  2436                           	opt callstack 0
  2437                           
  2438                           ; 2 bytes @ 0x32
  2439  000092                     	ds	2
  2440  000094                     efgtoa@pp:
  2441                           	opt callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x34
  2444  000094                     	ds	2
  2445  000096                     efgtoa@m:
  2446                           	opt callstack 0
  2447                           
  2448                           ; 2 bytes @ 0x36
  2449  000096                     	ds	2
  2450  000098                     efgtoa@ne:
  2451                           	opt callstack 0
  2452                           
  2453                           ; 2 bytes @ 0x38
  2454  000098                     	ds	2
  2455  00009A                     efgtoa@d:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x3A
  2459  00009A                     	ds	2
  2460  00009C                     efgtoa@sign:
  2461                           	opt callstack 0
  2462                           
  2463                           ; 2 bytes @ 0x3C
  2464  00009C                     	ds	2
  2465  00009E                     efgtoa@p:
  2466                           	opt callstack 0
  2467                           
  2468                           ; 2 bytes @ 0x3E
  2469  00009E                     	ds	2
  2470  0000A0                     efgtoa@nmode:
  2471                           	opt callstack 0
  2472                           
  2473                           ; 1 bytes @ 0x40
  2474  0000A0                     	ds	1
  2475  0000A1                     efgtoa@w:
  2476                           	opt callstack 0
  2477                           
  2478                           ; 2 bytes @ 0x41
  2479  0000A1                     	ds	2
  2480  0000A3                     efgtoa@mode:
  2481                           	opt callstack 0
  2482                           
  2483                           ; 1 bytes @ 0x43
  2484  0000A3                     	ds	1
  2485  0000A4                     efgtoa@h:
  2486                           	opt callstack 0
  2487                           
  2488                           ; 4 bytes @ 0x44
  2489  0000A4                     	ds	4
  2490  0000A8                     efgtoa@l:
  2491                           	opt callstack 0
  2492                           
  2493                           ; 4 bytes @ 0x48
  2494  0000A8                     	ds	4
  2495  0000AC                     efgtoa@i:
  2496                           	opt callstack 0
  2497                           
  2498                           ; 2 bytes @ 0x4C
  2499  0000AC                     	ds	2
  2500  0000AE                     efgtoa@g:
  2501                           	opt callstack 0
  2502                           
  2503                           ; 4 bytes @ 0x4E
  2504  0000AE                     	ds	4
  2505  0000B2                     efgtoa@e:
  2506                           	opt callstack 0
  2507                           
  2508                           ; 2 bytes @ 0x52
  2509  0000B2                     	ds	2
  2510  0000B4                     efgtoa@n:
  2511                           	opt callstack 0
  2512                           
  2513                           ; 2 bytes @ 0x54
  2514  0000B4                     	ds	2
  2515  0000B6                     efgtoa@u:
  2516                           	opt callstack 0
  2517                           
  2518                           ; 4 bytes @ 0x56
  2519  0000B6                     	ds	4
  2520  0000BA                     ?_vfpfcnvrt:
  2521                           	opt callstack 0
  2522  0000BA                     vfpfcnvrt@fp:
  2523                           	opt callstack 0
  2524                           
  2525                           ; 2 bytes @ 0x5A
  2526  0000BA                     	ds	2
  2527  0000BC                     vfpfcnvrt@fmt:
  2528                           	opt callstack 0
  2529                           
  2530                           ; 2 bytes @ 0x5C
  2531  0000BC                     	ds	2
  2532  0000BE                     vfpfcnvrt@ap:
  2533                           	opt callstack 0
  2534                           
  2535                           ; 2 bytes @ 0x5E
  2536  0000BE                     	ds	2
  2537  0000C0                     ??_vfpfcnvrt:
  2538                           
  2539                           ; 1 bytes @ 0x60
  2540  0000C0                     	ds	4
  2541  0000C4                     vfpfcnvrt@cp:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 2 bytes @ 0x64
  2545  0000C4                     	ds	2
  2546  0000C6                     vfpfcnvrt@done:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 2 bytes @ 0x66
  2550  0000C6                     	ds	2
  2551  0000C8                     _vfpfcnvrt$1394:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x68
  2555  0000C8                     	ds	2
  2556  0000CA                     _vfpfcnvrt$1395:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 2 bytes @ 0x6A
  2560  0000CA                     	ds	2
  2561  0000CC                     _vfpfcnvrt$1416:
  2562                           	opt callstack 0
  2563                           
  2564                           ; 2 bytes @ 0x6C
  2565  0000CC                     	ds	2
  2566  0000CE                     vfpfcnvrt@f:
  2567                           	opt callstack 0
  2568                           
  2569                           ; 4 bytes @ 0x6E
  2570  0000CE                     	ds	4
  2571  0000D2                     vfpfcnvrt@ct:
  2572                           	opt callstack 0
  2573                           
  2574                           ; 3 bytes @ 0x72
  2575  0000D2                     	ds	3
  2576  0000D5                     vfpfcnvrt@ll:
  2577                           	opt callstack 0
  2578                           
  2579                           ; 8 bytes @ 0x75
  2580  0000D5                     	ds	8
  2581  0000DD                     vfpfcnvrt@vp:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 2 bytes @ 0x7D
  2585  0000DD                     	ds	2
  2586  0000DF                     vfpfcnvrt@c:
  2587                           	opt callstack 0
  2588                           
  2589                           ; 1 bytes @ 0x7F
  2590  0000DF                     	ds	1
  2591  0000E0                     vfpfcnvrt@llu:
  2592                           	opt callstack 0
  2593                           
  2594                           ; 8 bytes @ 0x80
  2595  0000E0                     	ds	8
  2596  0000E8                     ?_vfprintf:
  2597                           	opt callstack 0
  2598  0000E8                     vfprintf@fp:
  2599                           	opt callstack 0
  2600                           
  2601                           ; 2 bytes @ 0x88
  2602  0000E8                     	ds	2
  2603  0000EA                     vfprintf@fmt:
  2604                           	opt callstack 0
  2605                           
  2606                           ; 2 bytes @ 0x8A
  2607  0000EA                     	ds	2
  2608  0000EC                     vfprintf@ap:
  2609                           	opt callstack 0
  2610                           
  2611                           ; 2 bytes @ 0x8C
  2612  0000EC                     	ds	2
  2613  0000EE                     vfprintf@cfmt:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 2 bytes @ 0x8E
  2617  0000EE                     	ds	2
  2618  0000F0                     ?_vsnprintf:
  2619                           	opt callstack 0
  2620  0000F0                     vsnprintf@s:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 2 bytes @ 0x90
  2624  0000F0                     	ds	2
  2625  0000F2                     vsnprintf@n:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 2 bytes @ 0x92
  2629  0000F2                     	ds	2
  2630  0000F4                     vsnprintf@fmt:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x94
  2634  0000F4                     	ds	2
  2635  0000F6                     vsnprintf@ap:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 2 bytes @ 0x96
  2639  0000F6                     	ds	2
  2640  0000F8                     ??_vsnprintf:
  2641                           
  2642                           ; 1 bytes @ 0x98
  2643  0000F8                     	ds	4
  2644                           
  2645                           	psect	cstackCOMRAM
  2646  000001                     __pcstackCOMRAM:
  2647                           	opt callstack 0
  2648  000001                     ??_IOCB4_InterruptCall:
  2649  000001                     
  2650                           ; 1 bytes @ 0x0
  2651  000001                     	ds	1
  2652  000002                     ??_INTERRUPT_InterruptManager:
  2653                           
  2654                           ; 1 bytes @ 0x1
  2655  000002                     	ds	2
  2656  000004                     ??_TMR1_Initialize:
  2657  000004                     ??_SPI_Open:
  2658  000004                     ??_msDelay:
  2659  000004                     ?_strlen:
  2660                           	opt callstack 0
  2661  000004                     ?___fpclassifyf:
  2662                           	opt callstack 0
  2663  000004                     ?_isupper:
  2664                           	opt callstack 0
  2665  000004                     ?_isalpha:
  2666                           	opt callstack 0
  2667  000004                     ?_isdigit:
  2668                           	opt callstack 0
  2669  000004                     ?_strncmp:
  2670                           	opt callstack 0
  2671  000004                     ?_isspace:
  2672                           	opt callstack 0
  2673  000004                     ?_islower:
  2674                           	opt callstack 0
  2675  000004                     ?_ADC_GetConversion:
  2676                           	opt callstack 0
  2677  000004                     ?___wmul:
  2678                           	opt callstack 0
  2679  000004                     ?___awdiv:
  2680                           	opt callstack 0
  2681  000004                     ?___awmod:
  2682                           	opt callstack 0
  2683  000004                     ?___flneg:
  2684                           	opt callstack 0
  2685  000004                     ?___fltol:
  2686                           	opt callstack 0
  2687  000004                     ?___xxtofl:
  2688                           	opt callstack 0
  2689  000004                     ?___aodiv:
  2690                           	opt callstack 0
  2691  000004                     ?___aomod:
  2692                           	opt callstack 0
  2693  000004                     ?___lodiv:
  2694                           	opt callstack 0
  2695  000004                     ?___lomod:
  2696                           	opt callstack 0
  2697  000004                     SPI_ExchangeByte@data:
  2698                           	opt callstack 0
  2699  000004                     IOCB4_SetInterruptHandler@InterruptHandler:
  2700                           	opt callstack 0
  2701  000004                     ___wmul@multiplier:
  2702                           	opt callstack 0
  2703  000004                     ___awdiv@dividend:
  2704                           	opt callstack 0
  2705  000004                     ___awmod@dividend:
  2706                           	opt callstack 0
  2707  000004                     isalpha@c:
  2708                           	opt callstack 0
  2709  000004                     isdigit@c:
  2710                           	opt callstack 0
  2711  000004                     isspace@c:
  2712                           	opt callstack 0
  2713  000004                     isupper@c:
  2714                           	opt callstack 0
  2715  000004                     fputc@c:
  2716                           	opt callstack 0
  2717  000004                     strcpy@dest:
  2718                           	opt callstack 0
  2719  000004                     strlen@s:
  2720                           	opt callstack 0
  2721  000004                     strncmp@_l:
  2722                           	opt callstack 0
  2723  000004                     islower@c:
  2724                           	opt callstack 0
  2725  000004                     ___fleq@ff1:
  2726                           	opt callstack 0
  2727  000004                     ___flneg@f1:
  2728                           	opt callstack 0
  2729  000004                     ___fltol@f1:
  2730                           	opt callstack 0
  2731  000004                     ___xxtofl@val:
  2732                           	opt callstack 0
  2733  000004                     ___fpclassifyf@x:
  2734                           	opt callstack 0
  2735  000004                     ___aodiv@dividend:
  2736                           	opt callstack 0
  2737  000004                     ___aomod@dividend:
  2738                           	opt callstack 0
  2739  000004                     ___lodiv@dividend:
  2740                           	opt callstack 0
  2741  000004                     ___lomod@dividend:
  2742                           	opt callstack 0
  2743                           
  2744                           ; 8 bytes @ 0x3
  2745  000004                     	ds	1
  2746  000005                     SPI_Open@spiUniqueConfiguration:
  2747                           	opt callstack 0
  2748  000005                     msDelay@ms:
  2749                           	opt callstack 0
  2750  000005                     lcd_send@value:
  2751                           	opt callstack 0
  2752                           
  2753                           ; 1 bytes @ 0x4
  2754  000005                     	ds	1
  2755  000006                     ??_isupper:
  2756  000006                     ??_isalpha:
  2757  000006                     ??_isdigit:
  2758  000006                     ??_isspace:
  2759  000006                     ??_islower:
  2760  000006                     ??_ADC_GetConversion:
  2761  000006                     msDelay@k:
  2762                           	opt callstack 0
  2763  000006                     lcd_send@dc:
  2764                           	opt callstack 0
  2765  000006                     ___wmul@multiplicand:
  2766                           	opt callstack 0
  2767  000006                     ___awdiv@divisor:
  2768                           	opt callstack 0
  2769  000006                     ___awmod@divisor:
  2770                           	opt callstack 0
  2771  000006                     fputc@fp:
  2772                           	opt callstack 0
  2773  000006                     strcpy@src:
  2774                           	opt callstack 0
  2775  000006                     strlen@a:
  2776                           	opt callstack 0
  2777  000006                     strncmp@_r:
  2778                           	opt callstack 0
  2779                           
  2780                           ; 2 bytes @ 0x5
  2781  000006                     	ds	1
  2782  000007                     lcd_set_cursor_x@x:
  2783                           	opt callstack 0
  2784  000007                     lcd_set_cursor_y@y:
  2785                           	opt callstack 0
  2786  000007                     lcd_draw_pixel@color:
  2787                           	opt callstack 0
  2788                           
  2789                           ; 2 bytes @ 0x6
  2790  000007                     	ds	1
  2791  000008                     ??_fputc:
  2792  000008                     ??___fpclassifyf:
  2793  000008                     ??_strcpy:
  2794  000008                     ??___fltol:
  2795  000008                     ??___xxtofl:
  2796  000008                     ADC_GetConversion@channel:
  2797                           	opt callstack 0
  2798  000008                     ___awdiv@counter:
  2799                           	opt callstack 0
  2800  000008                     ___awmod@counter:
  2801                           	opt callstack 0
  2802  000008                     ___wmul@product:
  2803                           	opt callstack 0
  2804  000008                     strncmp@n:
  2805                           	opt callstack 0
  2806  000008                     ___fleq@ff2:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 4 bytes @ 0x7
  2810  000008                     	ds	1
  2811  000009                     ___awdiv@sign:
  2812                           	opt callstack 0
  2813  000009                     ___awmod@sign:
  2814                           	opt callstack 0
  2815  000009                     lcd_set_cursor@x:
  2816                           	opt callstack 0
  2817                           
  2818                           ; 2 bytes @ 0x8
  2819  000009                     	ds	1
  2820  00000A                     ??_strncmp:
  2821  00000A                     ?_tolower:
  2822                           	opt callstack 0
  2823  00000A                     ?_toupper:
  2824                           	opt callstack 0
  2825  00000A                     _isspace$2017:
  2826                           	opt callstack 0
  2827  00000A                     ___awdiv@quotient:
  2828                           	opt callstack 0
  2829  00000A                     strcpy@s:
  2830                           	opt callstack 0
  2831  00000A                     tolower@c:
  2832                           	opt callstack 0
  2833  00000A                     toupper@c:
  2834                           	opt callstack 0
  2835                           
  2836                           ; 2 bytes @ 0x9
  2837  00000A                     	ds	1
  2838  00000B                     ?_atoi:
  2839                           	opt callstack 0
  2840  00000B                     lcd_set_cursor@y:
  2841                           	opt callstack 0
  2842  00000B                     atoi@s:
  2843                           	opt callstack 0
  2844  00000B                     strncmp@l:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 2 bytes @ 0xA
  2848  00000B                     	ds	1
  2849  00000C                     ??_tolower:
  2850  00000C                     ??_toupper:
  2851  00000C                     ??___fleq:
  2852  00000C                     ___fltol@sign1:
  2853                           	opt callstack 0
  2854  00000C                     ___xxtofl@sign:
  2855                           	opt callstack 0
  2856  00000C                     ___fpclassifyf@e:
  2857                           	opt callstack 0
  2858  00000C                     strcpy@d:
  2859                           	opt callstack 0
  2860  00000C                     ___aodiv@divisor:
  2861                           	opt callstack 0
  2862  00000C                     ___aomod@divisor:
  2863                           	opt callstack 0
  2864  00000C                     ___lodiv@divisor:
  2865                           	opt callstack 0
  2866  00000C                     ___lomod@divisor:
  2867                           	opt callstack 0
  2868                           
  2869                           ; 8 bytes @ 0xB
  2870  00000C                     	ds	1
  2871  00000D                     ??_atoi:
  2872  00000D                     ?_stoa:
  2873                           	opt callstack 0
  2874  00000D                     ___fltol@exp1:
  2875                           	opt callstack 0
  2876  00000D                     ___xxtofl@exp:
  2877                           	opt callstack 0
  2878  00000D                     lcd_fill@bg_color:
  2879                           	opt callstack 0
  2880  00000D                     lcd_draw_char@x:
  2881                           	opt callstack 0
  2882  00000D                     stoa@fp:
  2883                           	opt callstack 0
  2884  00000D                     fputs@s:
  2885                           	opt callstack 0
  2886  00000D                     strncmp@r:
  2887                           	opt callstack 0
  2888                           
  2889                           ; 2 bytes @ 0xC
  2890  00000D                     	ds	1
  2891  00000E                     ___xxtofl@arg:
  2892                           	opt callstack 0
  2893  00000E                     ___fpclassifyf@u:
  2894                           	opt callstack 0
  2895                           
  2896                           ; 4 bytes @ 0xD
  2897  00000E                     	ds	1
  2898  00000F                     lcd_fill@height:
  2899                           	opt callstack 0
  2900  00000F                     lcd_draw_char@y:
  2901                           	opt callstack 0
  2902  00000F                     stoa@s:
  2903                           	opt callstack 0
  2904  00000F                     fputs@fp:
  2905                           	opt callstack 0
  2906                           
  2907                           ; 2 bytes @ 0xE
  2908  00000F                     	ds	1
  2909  000010                     _tolower$2100:
  2910                           	opt callstack 0
  2911  000010                     _toupper$2115:
  2912                           	opt callstack 0
  2913                           
  2914                           ; 2 bytes @ 0xF
  2915  000010                     	ds	1
  2916  000011                     ??_stoa:
  2917  000011                     fputs@c:
  2918                           	opt callstack 0
  2919  000011                     lcd_fill@width:
  2920                           	opt callstack 0
  2921  000011                     lcd_draw_char@fIndex:
  2922                           	opt callstack 0
  2923  000011                     atoi@neg:
  2924                           	opt callstack 0
  2925                           
  2926                           ; 2 bytes @ 0x10
  2927  000011                     	ds	1
  2928  000012                     ?___flmul:
  2929                           	opt callstack 0
  2930  000012                     fputs@i:
  2931                           	opt callstack 0
  2932  000012                     ___flmul@b:
  2933                           	opt callstack 0
  2934  000012                     stoa@nuls:
  2935                           	opt callstack 0
  2936                           
  2937                           ; 7 bytes @ 0x11
  2938  000012                     	ds	1
  2939  000013                     lcd_draw_char@fg_color:
  2940                           	opt callstack 0
  2941  000013                     _atoi$1977:
  2942                           	opt callstack 0
  2943                           
  2944                           ; 2 bytes @ 0x12
  2945  000013                     	ds	1
  2946  000014                     ?_pad:
  2947                           	opt callstack 0
  2948  000014                     ___aodiv@counter:
  2949                           	opt callstack 0
  2950  000014                     ___aomod@counter:
  2951                           	opt callstack 0
  2952  000014                     ___lomod@counter:
  2953                           	opt callstack 0
  2954  000014                     pad@fp:
  2955                           	opt callstack 0
  2956  000014                     ___lodiv@quotient:
  2957                           	opt callstack 0
  2958                           
  2959                           ; 8 bytes @ 0x13
  2960  000014                     	ds	1
  2961  000015                     ___aodiv@sign:
  2962                           	opt callstack 0
  2963  000015                     ___aomod@sign:
  2964                           	opt callstack 0
  2965  000015                     lcd_draw_char@bg_color:
  2966                           	opt callstack 0
  2967  000015                     _atoi$1979:
  2968                           	opt callstack 0
  2969                           
  2970                           ; 2 bytes @ 0x14
  2971  000015                     	ds	1
  2972  000016                     ?_abs:
  2973                           	opt callstack 0
  2974  000016                     pad@buf:
  2975                           	opt callstack 0
  2976  000016                     abs@a:
  2977                           	opt callstack 0
  2978  000016                     ___flmul@a:
  2979                           	opt callstack 0
  2980  000016                     ___aodiv@quotient:
  2981                           	opt callstack 0
  2982                           
  2983                           ; 8 bytes @ 0x15
  2984  000016                     	ds	1
  2985  000017                     ??_lcd_draw_char:
  2986  000017                     _atoi$1978:
  2987                           	opt callstack 0
  2988                           
  2989                           ; 1 bytes @ 0x16
  2990  000017                     	ds	1
  2991  000018                     ??_abs:
  2992  000018                     pad@p:
  2993                           	opt callstack 0
  2994  000018                     atoi@n:
  2995                           	opt callstack 0
  2996                           
  2997                           ; 2 bytes @ 0x17
  2998  000018                     	ds	1
  2999  000019                     stoa@i:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x18
  3003  000019                     	ds	1
  3004  00001A                     ??___flmul:
  3005  00001A                     ??_pad:
  3006                           
  3007                           ; 1 bytes @ 0x19
  3008  00001A                     	ds	1
  3009  00001B                     pad@i:
  3010                           	opt callstack 0
  3011  00001B                     stoa@w:
  3012                           	opt callstack 0
  3013                           
  3014                           ; 2 bytes @ 0x1A
  3015  00001B                     	ds	1
  3016  00001C                     ___lodiv@counter:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 1 bytes @ 0x1B
  3020  00001C                     	ds	1
  3021  00001D                     pad@w:
  3022                           	opt callstack 0
  3023  00001D                     stoa@cp:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 2 bytes @ 0x1C
  3027  00001D                     	ds	1
  3028  00001E                     ___flmul@sign:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 1 bytes @ 0x1D
  3032  00001E                     	ds	1
  3033  00001F                     ?_ctoa:
  3034                           	opt callstack 0
  3035  00001F                     ?_dtoa:
  3036                           	opt callstack 0
  3037  00001F                     ?_otoa:
  3038                           	opt callstack 0
  3039  00001F                     ?_utoa:
  3040                           	opt callstack 0
  3041  00001F                     ?_xtoa:
  3042                           	opt callstack 0
  3043  00001F                     ___flmul@aexp:
  3044                           	opt callstack 0
  3045  00001F                     ctoa@fp:
  3046                           	opt callstack 0
  3047  00001F                     dtoa@fp:
  3048                           	opt callstack 0
  3049  00001F                     otoa@fp:
  3050                           	opt callstack 0
  3051  00001F                     stoa@p:
  3052                           	opt callstack 0
  3053  00001F                     utoa@fp:
  3054                           	opt callstack 0
  3055  00001F                     xtoa@fp:
  3056                           	opt callstack 0
  3057                           
  3058                           ; 2 bytes @ 0x1E
  3059  00001F                     	ds	1
  3060  000020                     lcd_draw_char@j:
  3061                           	opt callstack 0
  3062  000020                     ___flmul@grs:
  3063                           	opt callstack 0
  3064                           
  3065                           ; 4 bytes @ 0x1F
  3066  000020                     	ds	1
  3067  000021                     lcd_draw_char@k:
  3068                           	opt callstack 0
  3069  000021                     ctoa@c:
  3070                           	opt callstack 0
  3071  000021                     stoa@l:
  3072                           	opt callstack 0
  3073  000021                     dtoa@d:
  3074                           	opt callstack 0
  3075  000021                     otoa@d:
  3076                           	opt callstack 0
  3077  000021                     utoa@d:
  3078                           	opt callstack 0
  3079  000021                     xtoa@d:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 8 bytes @ 0x20
  3083  000021                     	ds	1
  3084  000022                     lcd_draw_char@i:
  3085                           	opt callstack 0
  3086  000022                     ctoa@w:
  3087                           	opt callstack 0
  3088                           
  3089                           ; 2 bytes @ 0x21
  3090  000022                     	ds	1
  3091  000023                     lcd_draw_string@x:
  3092                           	opt callstack 0
  3093                           
  3094                           ; 2 bytes @ 0x22
  3095  000023                     	ds	1
  3096  000024                     ___flmul@bexp:
  3097                           	opt callstack 0
  3098                           
  3099                           ; 1 bytes @ 0x23
  3100  000024                     	ds	1
  3101  000025                     lcd_draw_string@y:
  3102                           	opt callstack 0
  3103  000025                     ___flmul@prod:
  3104                           	opt callstack 0
  3105                           
  3106                           ; 4 bytes @ 0x24
  3107  000025                     	ds	2
  3108  000027                     lcd_draw_string@pS:
  3109                           	opt callstack 0
  3110                           
  3111                           ; 2 bytes @ 0x26
  3112  000027                     	ds	2
  3113  000029                     ??_dtoa:
  3114  000029                     ??_otoa:
  3115  000029                     ??_utoa:
  3116  000029                     xtoa@x:
  3117                           	opt callstack 0
  3118  000029                     lcd_draw_string@fg_color:
  3119                           	opt callstack 0
  3120  000029                     ___flmul@temp:
  3121                           	opt callstack 0
  3122                           
  3123                           ; 2 bytes @ 0x28
  3124  000029                     	ds	1
  3125  00002A                     ??_xtoa:
  3126                           
  3127                           ; 1 bytes @ 0x29
  3128  00002A                     	ds	1
  3129  00002B                     ?___fladd:
  3130                           	opt callstack 0
  3131  00002B                     lcd_draw_string@bg_color:
  3132                           	opt callstack 0
  3133  00002B                     ___flge@ff1:
  3134                           	opt callstack 0
  3135  00002B                     ___fladd@b:
  3136                           	opt callstack 0
  3137                           
  3138                           ; 4 bytes @ 0x2A
  3139  00002B                     	ds	2
  3140  00002D                     ??_lcd_draw_string:
  3141                           
  3142                           ; 1 bytes @ 0x2C
  3143  00002D                     	ds	2
  3144  00002F                     ___flge@ff2:
  3145                           	opt callstack 0
  3146  00002F                     ___fladd@a:
  3147                           	opt callstack 0
  3148                           
  3149                           ; 4 bytes @ 0x2E
  3150  00002F                     	ds	2
  3151  000031                     lcd_draw_string@k:
  3152                           	opt callstack 0
  3153  000031                     _dtoa$1309:
  3154                           	opt callstack 0
  3155  000031                     otoa@p:
  3156                           	opt callstack 0
  3157  000031                     utoa@p:
  3158                           	opt callstack 0
  3159                           
  3160                           ; 2 bytes @ 0x30
  3161  000031                     	ds	1
  3162  000032                     _xtoa$1379:
  3163                           	opt callstack 0
  3164                           
  3165                           ; 2 bytes @ 0x31
  3166  000032                     	ds	1
  3167  000033                     ??___fladd:
  3168  000033                     ??___flge:
  3169  000033                     lcd_draw_string@lIndex:
  3170                           	opt callstack 0
  3171  000033                     dtoa@p:
  3172                           	opt callstack 0
  3173  000033                     otoa@t:
  3174                           	opt callstack 0
  3175  000033                     utoa@w:
  3176                           	opt callstack 0
  3177                           
  3178                           ; 2 bytes @ 0x32
  3179  000033                     	ds	1
  3180  000034                     _xtoa$1380:
  3181                           	opt callstack 0
  3182                           
  3183                           ; 2 bytes @ 0x33
  3184  000034                     	ds	1
  3185  000035                     dtoa@w:
  3186                           	opt callstack 0
  3187  000035                     otoa@w:
  3188                           	opt callstack 0
  3189  000035                     utoa@n:
  3190                           	opt callstack 0
  3191                           
  3192                           ; 8 bytes @ 0x34
  3193  000035                     	ds	1
  3194  000036                     xtoa@p:
  3195                           	opt callstack 0
  3196                           
  3197                           ; 2 bytes @ 0x35
  3198  000036                     	ds	1
  3199  000037                     ___fladd@signs:
  3200                           	opt callstack 0
  3201  000037                     dtoa@s:
  3202                           	opt callstack 0
  3203  000037                     otoa@n:
  3204                           	opt callstack 0
  3205                           
  3206                           ; 8 bytes @ 0x36
  3207  000037                     	ds	1
  3208  000038                     ___fladd@aexp:
  3209                           	opt callstack 0
  3210  000038                     xtoa@w:
  3211                           	opt callstack 0
  3212                           
  3213                           ; 2 bytes @ 0x37
  3214  000038                     	ds	1
  3215  000039                     ___fladd@bexp:
  3216                           	opt callstack 0
  3217  000039                     dtoa@n:
  3218                           	opt callstack 0
  3219                           
  3220                           ; 8 bytes @ 0x38
  3221  000039                     	ds	1
  3222  00003A                     ___fladd@grs:
  3223                           	opt callstack 0
  3224  00003A                     xtoa@n:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 8 bytes @ 0x39
  3228  00003A                     	ds	1
  3229  00003B                     ?___flsub:
  3230                           	opt callstack 0
  3231  00003B                     ___flsub@b:
  3232                           	opt callstack 0
  3233                           
  3234                           ; 4 bytes @ 0x3A
  3235  00003B                     	ds	2
  3236  00003D                     utoa@i:
  3237                           	opt callstack 0
  3238                           
  3239                           ; 2 bytes @ 0x3C
  3240  00003D                     	ds	2
  3241  00003F                     otoa@i:
  3242                           	opt callstack 0
  3243  00003F                     ___flsub@a:
  3244                           	opt callstack 0
  3245                           
  3246                           ; 4 bytes @ 0x3E
  3247  00003F                     	ds	2
  3248  000041                     dtoa@i:
  3249                           	opt callstack 0
  3250                           
  3251                           ; 2 bytes @ 0x40
  3252  000041                     	ds	1
  3253  000042                     xtoa@i:
  3254                           	opt callstack 0
  3255                           
  3256                           ; 2 bytes @ 0x41
  3257  000042                     	ds	1
  3258  000043                     ?___fldiv:
  3259                           	opt callstack 0
  3260  000043                     ___fldiv@b:
  3261                           	opt callstack 0
  3262                           
  3263                           ; 4 bytes @ 0x42
  3264  000043                     	ds	1
  3265  000044                     xtoa@c:
  3266                           	opt callstack 0
  3267                           
  3268                           ; 2 bytes @ 0x43
  3269  000044                     	ds	3
  3270  000047                     ___fldiv@a:
  3271                           	opt callstack 0
  3272                           
  3273                           ; 4 bytes @ 0x46
  3274  000047                     	ds	4
  3275  00004B                     ??___fldiv:
  3276                           
  3277                           ; 1 bytes @ 0x4A
  3278  00004B                     	ds	4
  3279  00004F                     ??_floorf:
  3280                           
  3281                           ; 1 bytes @ 0x4E
  3282  00004F                     	ds	6
  3283  000055                     ??_efgtoa:
  3284                           
  3285                           ; 1 bytes @ 0x54
  3286  000055                     	ds	5
  3287  00005A                     
  3288                           ; 1 bytes @ 0x59
  3289 ;;
  3290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3291 ;;
  3292 ;; *************** function _main *****************
  3293 ;; Defined at:
  3294 ;;		line 34 in file "main.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels required when called:   13
  3314 ;; This function calls:
  3315 ;;		_ADC_GetConversion
  3316 ;;		_IOCB4_SetInterruptHandler
  3317 ;;		_SPI_Open
  3318 ;;		_SYSTEM_Initialize
  3319 ;;		___fladd
  3320 ;;		___fldiv
  3321 ;;		___flge
  3322 ;;		___flmul
  3323 ;;		___flsub
  3324 ;;		___xxtofl
  3325 ;;		_lcd_draw_string
  3326 ;;		_lcd_init
  3327 ;;		_snprintf
  3328 ;; This function is called by:
  3329 ;;		Startup code after reset
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text0
  3334  0029CC                     __ptext0:
  3335                           	opt callstack 0
  3336  0029CC                     _main:
  3337                           	opt callstack 18
  3338  0029CC                     
  3339                           ;main.c: 37:     SYSTEM_Initialize();
  3340  0029CC  EC3B  F02F         	call	_SYSTEM_Initialize	;wreg free
  3341  0029D0                     
  3342                           ;main.c: 38:     SPI_Open(SPI_DEFAULT);
  3343  0029D0  0E00               	movlw	0
  3344  0029D2  ECAB  F02A         	call	_SPI_Open
  3345  0029D6                     
  3346                           ;main.c: 39:     lcd_init();
  3347  0029D6  ECB8  F018         	call	_lcd_init	;wreg free
  3348  0029DA                     
  3349                           ;main.c: 42:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  3350  0029DA  0EBA               	movlw	low _IOCB4_InterruptCall
  3351  0029DC  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3352  0029DE  0E58               	movlw	high _IOCB4_InterruptCall
  3353  0029E0  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3354  0029E2  EC88  F02F         	call	_IOCB4_SetInterruptHandler	;wreg free
  3355  0029E6                     
  3356                           ;main.c: 45:     (INTCONbits.GIE = 1);
  3357  0029E6  8EF2               	bsf	242,7,c	;volatile
  3358  0029E8                     
  3359                           ;main.c: 56:     lcd_draw_string(100,120,"HELLO WORLD",0xFFFF,0x0000);
  3360  0029E8  0E00               	movlw	0
  3361  0029EA  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3362  0029EC  0E64               	movlw	100
  3363  0029EE  6E23               	movwf	lcd_draw_string@x^0,c
  3364  0029F0  0E00               	movlw	0
  3365  0029F2  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3366  0029F4  0E78               	movlw	120
  3367  0029F6  6E25               	movwf	lcd_draw_string@y^0,c
  3368  0029F8  0EAF               	movlw	low STR_1
  3369  0029FA  6E27               	movwf	lcd_draw_string@pS^0,c
  3370  0029FC  0EFF               	movlw	high STR_1
  3371  0029FE  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3372  002A00  0EFF               	movlw	255
  3373  002A02  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3374  002A04  6829               	setf	lcd_draw_string@fg_color^0,c
  3375  002A06  0E00               	movlw	0
  3376  002A08  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3377  002A0A  0E00               	movlw	0
  3378  002A0C  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3379  002A0E  EC99  F025         	call	_lcd_draw_string	;wreg free
  3380  002A12                     l9120:
  3381                           
  3382                           ;main.c: 59:     {;main.c: 61:         if (botao==1){
  3383  002A12  0101               	movlb	1	; () banked
  3384  002A14  0520               	decf	_botao& (0+255),w,b
  3385  002A16  1121               	iorwf	(_botao+1)& (0+255),w,b
  3386  002A18  A4D8               	btfss	status,2,c
  3387  002A1A  EF11  F015         	goto	u12081
  3388  002A1E  EF13  F015         	goto	u12080
  3389  002A22                     u12081:
  3390  002A22  EFA3  F015         	goto	l9134
  3391  002A26                     u12080:
  3392  002A26                     
  3393                           ; BSR set to: 1
  3394                           ;main.c: 62:             codigo_digit=ADC_GetConversion(TEMP);
  3395  002A26  0E01               	movlw	1
  3396  002A28  EC16  F02E         	call	_ADC_GetConversion
  3397  002A2C  C004  F122         	movff	?_ADC_GetConversion,_codigo_digit
  3398  002A30  C005  F123         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3399  002A34                     
  3400                           ;main.c: 63:             tensao_in=codigo_digit*0.000805664063;
  3401  002A34  C122  F004         	movff	_codigo_digit,___xxtofl@val
  3402  002A38  C123  F005         	movff	_codigo_digit+1,___xxtofl@val+1
  3403  002A3C  0E00               	movlw	0
  3404  002A3E  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  3405  002A40  0EFF               	movlw	-1
  3406  002A42  6E06               	movwf	(___xxtofl@val+2)^0,c
  3407  002A44  6E07               	movwf	(___xxtofl@val+3)^0,c
  3408  002A46  0E01               	movlw	1
  3409  002A48  EC61  F020         	call	___xxtofl
  3410  002A4C  C004  F012         	movff	?___xxtofl,___flmul@b
  3411  002A50  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3412  002A54  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3413  002A58  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3414  002A5C  0E33               	movlw	51
  3415  002A5E  6E16               	movwf	___flmul@a^0,c
  3416  002A60  0E33               	movlw	51
  3417  002A62  6E17               	movwf	(___flmul@a+1)^0,c
  3418  002A64  0E53               	movlw	83
  3419  002A66  6E18               	movwf	(___flmul@a+2)^0,c
  3420  002A68  0E3A               	movlw	58
  3421  002A6A  6E19               	movwf	(___flmul@a+3)^0,c
  3422  002A6C  ECD1  F012         	call	___flmul	;wreg free
  3423  002A70  C012  F1DA         	movff	?___flmul,_tensao_in
  3424  002A74  C013  F1DB         	movff	?___flmul+1,_tensao_in+1
  3425  002A78  C014  F1DC         	movff	?___flmul+2,_tensao_in+2
  3426  002A7C  C015  F1DD         	movff	?___flmul+3,_tensao_in+3
  3427  002A80                     
  3428                           ;main.c: 64:             temp=tensao_in*33.3333333;
  3429  002A80  C1DA  F012         	movff	_tensao_in,___flmul@b
  3430  002A84  C1DB  F013         	movff	_tensao_in+1,___flmul@b+1
  3431  002A88  C1DC  F014         	movff	_tensao_in+2,___flmul@b+2
  3432  002A8C  C1DD  F015         	movff	_tensao_in+3,___flmul@b+3
  3433  002A90  0E55               	movlw	85
  3434  002A92  6E16               	movwf	___flmul@a^0,c
  3435  002A94  0E55               	movlw	85
  3436  002A96  6E17               	movwf	(___flmul@a+1)^0,c
  3437  002A98  0E05               	movlw	5
  3438  002A9A  6E18               	movwf	(___flmul@a+2)^0,c
  3439  002A9C  0E42               	movlw	66
  3440  002A9E  6E19               	movwf	(___flmul@a+3)^0,c
  3441  002AA0  ECD1  F012         	call	___flmul	;wreg free
  3442  002AA4  C012  F114         	movff	?___flmul,_temp
  3443  002AA8  C013  F115         	movff	?___flmul+1,_temp+1
  3444  002AAC  C014  F116         	movff	?___flmul+2,_temp+2
  3445  002AB0  C015  F117         	movff	?___flmul+3,_temp+3
  3446  002AB4                     
  3447                           ;main.c: 65:             snprintf(string_temp,sizeof(string_temp),"Temp=%.f C      ",tem
      +                          p);
  3448  002AB4  0E26               	movlw	low _string_temp
  3449  002AB6  0101               	movlb	1	; () banked
  3450  002AB8  6FE8               	movwf	snprintf@s& (0+255),b
  3451  002ABA  0E01               	movlw	high _string_temp
  3452  002ABC  6FE9               	movwf	(snprintf@s+1)& (0+255),b
  3453  002ABE  0E00               	movlw	0
  3454  002AC0  6FEB               	movwf	(snprintf@n+1)& (0+255),b
  3455  002AC2  0E64               	movlw	100
  3456  002AC4  6FEA               	movwf	snprintf@n& (0+255),b
  3457  002AC6  0E8E               	movlw	low STR_2
  3458  002AC8  6FEC               	movwf	snprintf@fmt& (0+255),b
  3459  002ACA  0EFF               	movlw	high STR_2
  3460  002ACC  6FED               	movwf	(snprintf@fmt+1)& (0+255),b
  3461  002ACE  C114  F1EE         	movff	_temp,?_snprintf+6
  3462  002AD2  C115  F1EF         	movff	_temp+1,?_snprintf+7
  3463  002AD6  C116  F1F0         	movff	_temp+2,?_snprintf+8
  3464  002ADA  C117  F1F1         	movff	_temp+3,?_snprintf+9
  3465  002ADE  ECBE  F02E         	call	_snprintf	;wreg free
  3466  002AE2                     
  3467                           ;main.c: 66:             lcd_draw_string(100,100,string_temp,0xFFFF,0x0000);
  3468  002AE2  0E00               	movlw	0
  3469  002AE4  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3470  002AE6  0E64               	movlw	100
  3471  002AE8  6E23               	movwf	lcd_draw_string@x^0,c
  3472  002AEA  0E00               	movlw	0
  3473  002AEC  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3474  002AEE  0E64               	movlw	100
  3475  002AF0  6E25               	movwf	lcd_draw_string@y^0,c
  3476  002AF2  0E26               	movlw	low _string_temp
  3477  002AF4  6E27               	movwf	lcd_draw_string@pS^0,c
  3478  002AF6  0E01               	movlw	high _string_temp
  3479  002AF8  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3480  002AFA  0EFF               	movlw	255
  3481  002AFC  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3482  002AFE  6829               	setf	lcd_draw_string@fg_color^0,c
  3483  002B00  0E00               	movlw	0
  3484  002B02  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3485  002B04  0E00               	movlw	0
  3486  002B06  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3487  002B08  EC99  F025         	call	_lcd_draw_string	;wreg free
  3488  002B0C                     
  3489                           ;main.c: 67:                 if (temp >= 90){
  3490  002B0C  C114  F02B         	movff	_temp,___flge@ff1
  3491  002B10  C115  F02C         	movff	_temp+1,___flge@ff1+1
  3492  002B14  C116  F02D         	movff	_temp+2,___flge@ff1+2
  3493  002B18  C117  F02E         	movff	_temp+3,___flge@ff1+3
  3494  002B1C  0E00               	movlw	0
  3495  002B1E  6E2F               	movwf	___flge@ff2^0,c
  3496  002B20  0E00               	movlw	0
  3497  002B22  6E30               	movwf	(___flge@ff2+1)^0,c
  3498  002B24  0EB4               	movlw	180
  3499  002B26  6E31               	movwf	(___flge@ff2+2)^0,c
  3500  002B28  0E42               	movlw	66
  3501  002B2A  6E32               	movwf	(___flge@ff2+3)^0,c
  3502  002B2C  EC48  F027         	call	___flge	;wreg free
  3503  002B30  A0D8               	btfss	status,0,c
  3504  002B32  EF9D  F015         	goto	u12091
  3505  002B36  EF9F  F015         	goto	u12090
  3506  002B3A                     u12091:
  3507  002B3A  EFA2  F015         	goto	l303
  3508  002B3E                     u12090:
  3509  002B3E  8A89               	bsf	137,5,c	;volatile
  3510  002B40  EFA3  F015         	goto	l9134
  3511  002B44                     l303:
  3512  002B44  9A89               	bcf	137,5,c	;volatile
  3513  002B46                     l9134:
  3514                           
  3515                           ;main.c: 74:         if (botao==0){
  3516  002B46  0101               	movlb	1	; () banked
  3517  002B48  5120               	movf	_botao& (0+255),w,b
  3518  002B4A  1121               	iorwf	(_botao+1)& (0+255),w,b
  3519  002B4C  A4D8               	btfss	status,2,c
  3520  002B4E  EFAB  F015         	goto	u12101
  3521  002B52  EFAD  F015         	goto	u12100
  3522  002B56                     u12101:
  3523  002B56  EF06  F016         	goto	l9144
  3524  002B5A                     u12100:
  3525  002B5A                     
  3526                           ; BSR set to: 1
  3527                           ;main.c: 75:             codigo_digit=ADC_GetConversion(POT);
  3528  002B5A  0E00               	movlw	0
  3529  002B5C  EC16  F02E         	call	_ADC_GetConversion
  3530  002B60  C004  F122         	movff	?_ADC_GetConversion,_codigo_digit
  3531  002B64  C005  F123         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3532  002B68                     
  3533                           ;main.c: 76:             pot_val=codigo_digit*0.0244200244200244;
  3534  002B68  C122  F004         	movff	_codigo_digit,___xxtofl@val
  3535  002B6C  C123  F005         	movff	_codigo_digit+1,___xxtofl@val+1
  3536  002B70  0E00               	movlw	0
  3537  002B72  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  3538  002B74  0EFF               	movlw	-1
  3539  002B76  6E06               	movwf	(___xxtofl@val+2)^0,c
  3540  002B78  6E07               	movwf	(___xxtofl@val+3)^0,c
  3541  002B7A  0E01               	movlw	1
  3542  002B7C  EC61  F020         	call	___xxtofl
  3543  002B80  C004  F012         	movff	?___xxtofl,___flmul@b
  3544  002B84  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3545  002B88  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3546  002B8C  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3547  002B90  0E81               	movlw	129
  3548  002B92  6E16               	movwf	___flmul@a^0,c
  3549  002B94  0E0C               	movlw	12
  3550  002B96  6E17               	movwf	(___flmul@a+1)^0,c
  3551  002B98  0EC8               	movlw	200
  3552  002B9A  6E18               	movwf	(___flmul@a+2)^0,c
  3553  002B9C  0E3C               	movlw	60
  3554  002B9E  6E19               	movwf	(___flmul@a+3)^0,c
  3555  002BA0  ECD1  F012         	call	___flmul	;wreg free
  3556  002BA4  C012  F110         	movff	?___flmul,_pot_val
  3557  002BA8  C013  F111         	movff	?___flmul+1,_pot_val+1
  3558  002BAC  C014  F112         	movff	?___flmul+2,_pot_val+2
  3559  002BB0  C015  F113         	movff	?___flmul+3,_pot_val+3
  3560  002BB4                     
  3561                           ;main.c: 77:             snprintf(string_pot,sizeof(string_pot),"Pot=%.f%%      ",pot_va
      +                          l);
  3562  002BB4  0E64               	movlw	low _string_pot
  3563  002BB6  0101               	movlb	1	; () banked
  3564  002BB8  6FE8               	movwf	snprintf@s& (0+255),b
  3565  002BBA  0E02               	movlw	high _string_pot
  3566  002BBC  6FE9               	movwf	(snprintf@s+1)& (0+255),b
  3567  002BBE  0E00               	movlw	0
  3568  002BC0  6FEB               	movwf	(snprintf@n+1)& (0+255),b
  3569  002BC2  0E64               	movlw	100
  3570  002BC4  6FEA               	movwf	snprintf@n& (0+255),b
  3571  002BC6  0E9F               	movlw	low STR_3
  3572  002BC8  6FEC               	movwf	snprintf@fmt& (0+255),b
  3573  002BCA  0EFF               	movlw	high STR_3
  3574  002BCC  6FED               	movwf	(snprintf@fmt+1)& (0+255),b
  3575  002BCE  C110  F1EE         	movff	_pot_val,?_snprintf+6
  3576  002BD2  C111  F1EF         	movff	_pot_val+1,?_snprintf+7
  3577  002BD6  C112  F1F0         	movff	_pot_val+2,?_snprintf+8
  3578  002BDA  C113  F1F1         	movff	_pot_val+3,?_snprintf+9
  3579  002BDE  ECBE  F02E         	call	_snprintf	;wreg free
  3580  002BE2                     
  3581                           ;main.c: 78:             lcd_draw_string(100,100,string_pot,0xFFFF,0x0000);
  3582  002BE2  0E00               	movlw	0
  3583  002BE4  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3584  002BE6  0E64               	movlw	100
  3585  002BE8  6E23               	movwf	lcd_draw_string@x^0,c
  3586  002BEA  0E00               	movlw	0
  3587  002BEC  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3588  002BEE  0E64               	movlw	100
  3589  002BF0  6E25               	movwf	lcd_draw_string@y^0,c
  3590  002BF2  0E64               	movlw	low _string_pot
  3591  002BF4  6E27               	movwf	lcd_draw_string@pS^0,c
  3592  002BF6  0E02               	movlw	high _string_pot
  3593  002BF8  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3594  002BFA  0EFF               	movlw	255
  3595  002BFC  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3596  002BFE  6829               	setf	lcd_draw_string@fg_color^0,c
  3597  002C00  0E00               	movlw	0
  3598  002C02  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3599  002C04  0E00               	movlw	0
  3600  002C06  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3601  002C08  EC99  F025         	call	_lcd_draw_string	;wreg free
  3602  002C0C                     l9144:
  3603                           
  3604                           ;main.c: 80:         if (botao==2){
  3605  002C0C  0E02               	movlw	2
  3606  002C0E  0101               	movlb	1	; () banked
  3607  002C10  1920               	xorwf	_botao& (0+255),w,b
  3608  002C12  1121               	iorwf	(_botao+1)& (0+255),w,b
  3609  002C14  A4D8               	btfss	status,2,c
  3610  002C16  EF0F  F016         	goto	u12111
  3611  002C1A  EF11  F016         	goto	u12110
  3612  002C1E                     u12111:
  3613  002C1E  EF09  F015         	goto	l9120
  3614  002C22                     u12110:
  3615  002C22                     
  3616                           ; BSR set to: 1
  3617                           ;main.c: 81:             codigo_digit=ADC_GetConversion(NTC);
  3618  002C22  0E08               	movlw	8
  3619  002C24  EC16  F02E         	call	_ADC_GetConversion
  3620  002C28  C004  F122         	movff	?_ADC_GetConversion,_codigo_digit
  3621  002C2C  C005  F123         	movff	?_ADC_GetConversion+1,_codigo_digit+1
  3622  002C30                     
  3623                           ;main.c: 82:             tensao_in=codigo_digit*0.000805664063;
  3624  002C30  C122  F004         	movff	_codigo_digit,___xxtofl@val
  3625  002C34  C123  F005         	movff	_codigo_digit+1,___xxtofl@val+1
  3626  002C38  0E00               	movlw	0
  3627  002C3A  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  3628  002C3C  0EFF               	movlw	-1
  3629  002C3E  6E06               	movwf	(___xxtofl@val+2)^0,c
  3630  002C40  6E07               	movwf	(___xxtofl@val+3)^0,c
  3631  002C42  0E01               	movlw	1
  3632  002C44  EC61  F020         	call	___xxtofl
  3633  002C48  C004  F012         	movff	?___xxtofl,___flmul@b
  3634  002C4C  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  3635  002C50  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  3636  002C54  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  3637  002C58  0E33               	movlw	51
  3638  002C5A  6E16               	movwf	___flmul@a^0,c
  3639  002C5C  0E33               	movlw	51
  3640  002C5E  6E17               	movwf	(___flmul@a+1)^0,c
  3641  002C60  0E53               	movlw	83
  3642  002C62  6E18               	movwf	(___flmul@a+2)^0,c
  3643  002C64  0E3A               	movlw	58
  3644  002C66  6E19               	movwf	(___flmul@a+3)^0,c
  3645  002C68  ECD1  F012         	call	___flmul	;wreg free
  3646  002C6C  C012  F1DA         	movff	?___flmul,_tensao_in
  3647  002C70  C013  F1DB         	movff	?___flmul+1,_tensao_in+1
  3648  002C74  C014  F1DC         	movff	?___flmul+2,_tensao_in+2
  3649  002C78  C015  F1DD         	movff	?___flmul+3,_tensao_in+3
  3650  002C7C                     
  3651                           ;main.c: 83:             ntc_val=((-1440*tensao_in)-12853.770491803)/(tensao_in-8.926229
      +                          5081968);
  3652  002C7C  0E15               	movlw	21
  3653  002C7E  6E2F               	movwf	___fladd@a^0,c
  3654  002C80  0ED7               	movlw	215
  3655  002C82  6E30               	movwf	(___fladd@a+1)^0,c
  3656  002C84  0E48               	movlw	72
  3657  002C86  6E31               	movwf	(___fladd@a+2)^0,c
  3658  002C88  0EC6               	movlw	198
  3659  002C8A  6E32               	movwf	(___fladd@a+3)^0,c
  3660  002C8C  0E00               	movlw	0
  3661  002C8E  6E16               	movwf	___flmul@a^0,c
  3662  002C90  0E00               	movlw	0
  3663  002C92  6E17               	movwf	(___flmul@a+1)^0,c
  3664  002C94  0EB4               	movlw	180
  3665  002C96  6E18               	movwf	(___flmul@a+2)^0,c
  3666  002C98  0EC4               	movlw	196
  3667  002C9A  6E19               	movwf	(___flmul@a+3)^0,c
  3668  002C9C  C1DA  F012         	movff	_tensao_in,___flmul@b
  3669  002CA0  C1DB  F013         	movff	_tensao_in+1,___flmul@b+1
  3670  002CA4  C1DC  F014         	movff	_tensao_in+2,___flmul@b+2
  3671  002CA8  C1DD  F015         	movff	_tensao_in+3,___flmul@b+3
  3672  002CAC  ECD1  F012         	call	___flmul	;wreg free
  3673  002CB0  C012  F02B         	movff	?___flmul,___fladd@b
  3674  002CB4  C013  F02C         	movff	?___flmul+1,___fladd@b+1
  3675  002CB8  C014  F02D         	movff	?___flmul+2,___fladd@b+2
  3676  002CBC  C015  F02E         	movff	?___flmul+3,___fladd@b+3
  3677  002CC0  EC71  F010         	call	___fladd	;wreg free
  3678  002CC4  C02B  F043         	movff	?___fladd,___fldiv@b
  3679  002CC8  C02C  F044         	movff	?___fladd+1,___fldiv@b+1
  3680  002CCC  C02D  F045         	movff	?___fladd+2,___fldiv@b+2
  3681  002CD0  C02E  F046         	movff	?___fladd+3,___fldiv@b+3
  3682  002CD4  0ED6               	movlw	214
  3683  002CD6  6E2F               	movwf	___fladd@a^0,c
  3684  002CD8  0ED1               	movlw	209
  3685  002CDA  6E30               	movwf	(___fladd@a+1)^0,c
  3686  002CDC  0E0E               	movlw	14
  3687  002CDE  6E31               	movwf	(___fladd@a+2)^0,c
  3688  002CE0  0EC1               	movlw	193
  3689  002CE2  6E32               	movwf	(___fladd@a+3)^0,c
  3690  002CE4  C1DA  F02B         	movff	_tensao_in,___fladd@b
  3691  002CE8  C1DB  F02C         	movff	_tensao_in+1,___fladd@b+1
  3692  002CEC  C1DC  F02D         	movff	_tensao_in+2,___fladd@b+2
  3693  002CF0  C1DD  F02E         	movff	_tensao_in+3,___fladd@b+3
  3694  002CF4  EC71  F010         	call	___fladd	;wreg free
  3695  002CF8  C02B  F047         	movff	?___fladd,___fldiv@a
  3696  002CFC  C02C  F048         	movff	?___fladd+1,___fldiv@a+1
  3697  002D00  C02D  F049         	movff	?___fladd+2,___fldiv@a+2
  3698  002D04  C02E  F04A         	movff	?___fladd+3,___fldiv@a+3
  3699  002D08  ECEA  F016         	call	___fldiv	;wreg free
  3700  002D0C  C043  F10C         	movff	?___fldiv,_ntc_val
  3701  002D10  C044  F10D         	movff	?___fldiv+1,_ntc_val+1
  3702  002D14  C045  F10E         	movff	?___fldiv+2,_ntc_val+2
  3703  002D18  C046  F10F         	movff	?___fldiv+3,_ntc_val+3
  3704                           
  3705                           ;main.c: 84:             temp_ntc=(-ntc_val+4425.5)/(85.3);
  3706  002D1C  C10C  F03F         	movff	_ntc_val,___flsub@a
  3707  002D20  C10D  F040         	movff	_ntc_val+1,___flsub@a+1
  3708  002D24  C10E  F041         	movff	_ntc_val+2,___flsub@a+2
  3709  002D28  C10F  F042         	movff	_ntc_val+3,___flsub@a+3
  3710  002D2C  0E00               	movlw	0
  3711  002D2E  6E3B               	movwf	___flsub@b^0,c
  3712  002D30  0E4C               	movlw	76
  3713  002D32  6E3C               	movwf	(___flsub@b+1)^0,c
  3714  002D34  0E8A               	movlw	138
  3715  002D36  6E3D               	movwf	(___flsub@b+2)^0,c
  3716  002D38  0E45               	movlw	69
  3717  002D3A  6E3E               	movwf	(___flsub@b+3)^0,c
  3718  002D3C  EC4F  F02D         	call	___flsub	;wreg free
  3719  002D40  C03B  F043         	movff	?___flsub,___fldiv@b
  3720  002D44  C03C  F044         	movff	?___flsub+1,___fldiv@b+1
  3721  002D48  C03D  F045         	movff	?___flsub+2,___fldiv@b+2
  3722  002D4C  C03E  F046         	movff	?___flsub+3,___fldiv@b+3
  3723  002D50  0E9A               	movlw	154
  3724  002D52  6E47               	movwf	___fldiv@a^0,c
  3725  002D54  0E99               	movlw	153
  3726  002D56  6E48               	movwf	(___fldiv@a+1)^0,c
  3727  002D58  0EAA               	movlw	170
  3728  002D5A  6E49               	movwf	(___fldiv@a+2)^0,c
  3729  002D5C  0E42               	movlw	66
  3730  002D5E  6E4A               	movwf	(___fldiv@a+3)^0,c
  3731  002D60  ECEA  F016         	call	___fldiv	;wreg free
  3732  002D64  C043  F108         	movff	?___fldiv,_temp_ntc
  3733  002D68  C044  F109         	movff	?___fldiv+1,_temp_ntc+1
  3734  002D6C  C045  F10A         	movff	?___fldiv+2,_temp_ntc+2
  3735  002D70  C046  F10B         	movff	?___fldiv+3,_temp_ntc+3
  3736  002D74                     
  3737                           ;main.c: 85:             snprintf(string_ntc,sizeof(string_ntc),"NTC=%fºC            ",t
      +                          emp_ntc);
  3738  002D74  0E00               	movlw	low _string_ntc
  3739  002D76  0101               	movlb	1	; () banked
  3740  002D78  6FE8               	movwf	snprintf@s& (0+255),b
  3741  002D7A  0E02               	movlw	high _string_ntc
  3742  002D7C  6FE9               	movwf	(snprintf@s+1)& (0+255),b
  3743  002D7E  0E00               	movlw	0
  3744  002D80  6FEB               	movwf	(snprintf@n+1)& (0+255),b
  3745  002D82  0E64               	movlw	100
  3746  002D84  6FEA               	movwf	snprintf@n& (0+255),b
  3747  002D86  0E79               	movlw	low STR_4
  3748  002D88  6FEC               	movwf	snprintf@fmt& (0+255),b
  3749  002D8A  0EFF               	movlw	high STR_4
  3750  002D8C  6FED               	movwf	(snprintf@fmt+1)& (0+255),b
  3751  002D8E  C108  F1EE         	movff	_temp_ntc,?_snprintf+6
  3752  002D92  C109  F1EF         	movff	_temp_ntc+1,?_snprintf+7
  3753  002D96  C10A  F1F0         	movff	_temp_ntc+2,?_snprintf+8
  3754  002D9A  C10B  F1F1         	movff	_temp_ntc+3,?_snprintf+9
  3755  002D9E  ECBE  F02E         	call	_snprintf	;wreg free
  3756  002DA2                     
  3757                           ;main.c: 86:             lcd_draw_string(100,100,string_ntc,0xFFFF,0x0000);
  3758  002DA2  0E00               	movlw	0
  3759  002DA4  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3760  002DA6  0E64               	movlw	100
  3761  002DA8  6E23               	movwf	lcd_draw_string@x^0,c
  3762  002DAA  0E00               	movlw	0
  3763  002DAC  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3764  002DAE  0E64               	movlw	100
  3765  002DB0  6E25               	movwf	lcd_draw_string@y^0,c
  3766  002DB2  0E00               	movlw	low _string_ntc
  3767  002DB4  6E27               	movwf	lcd_draw_string@pS^0,c
  3768  002DB6  0E02               	movlw	high _string_ntc
  3769  002DB8  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3770  002DBA  0EFF               	movlw	255
  3771  002DBC  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3772  002DBE  6829               	setf	lcd_draw_string@fg_color^0,c
  3773  002DC0  0E00               	movlw	0
  3774  002DC2  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3775  002DC4  0E00               	movlw	0
  3776  002DC6  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3777  002DC8  EC99  F025         	call	_lcd_draw_string	;wreg free
  3778  002DCC  EF09  F015         	goto	l9120
  3779  002DD0  EF1F  F000         	goto	start
  3780  002DD4                     __end_of_main:
  3781                           	opt callstack 0
  3782                           
  3783 ;; *************** function _snprintf *****************
  3784 ;; Defined at:
  3785 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  s               2   10[BANK1 ] PTR unsigned char 
  3788 ;;		 -> string_ntc(100), string_pot(100), string_temp(100), 
  3789 ;;  n               2   12[BANK1 ] unsigned int 
  3790 ;;  fmt             2   14[BANK1 ] PTR const unsigned char 
  3791 ;;		 -> STR_4(21), STR_3(16), STR_2(17), 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  ap              2    2[BANK2 ] PTR void [1]
  3794 ;;		 -> ?_snprintf(2), 
  3795 ;;  ret             2    0        int 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2   10[BANK1 ] int 
  3798 ;; Registers used:
  3799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3805 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Totals:         0       0      10       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;Total ram usage:       14 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:   12
  3812 ;; This function calls:
  3813 ;;		_vsnprintf
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text1
  3820  005D7C                     __ptext1:
  3821                           	opt callstack 0
  3822  005D7C                     _snprintf:
  3823                           	opt callstack 18
  3824  005D7C  0EEE               	movlw	low (?_snprintf+6)
  3825  005D7E  0102               	movlb	2	; () banked
  3826  005D80  6FCA               	movwf	snprintf@ap& (0+255),b
  3827  005D82  0E01               	movlw	high (?_snprintf+6)
  3828  005D84  6FCB               	movwf	(snprintf@ap+1)& (0+255),b
  3829  005D86                     
  3830                           ; BSR set to: 2
  3831  005D86  C1E8  F0F0         	movff	snprintf@s,vsnprintf@s
  3832  005D8A  C1E9  F0F1         	movff	snprintf@s+1,vsnprintf@s+1
  3833  005D8E  C1EA  F0F2         	movff	snprintf@n,vsnprintf@n
  3834  005D92  C1EB  F0F3         	movff	snprintf@n+1,vsnprintf@n+1
  3835  005D96  C1EC  F0F4         	movff	snprintf@fmt,vsnprintf@fmt
  3836  005D9A  C1ED  F0F5         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3837  005D9E  0ECA               	movlw	low snprintf@ap
  3838  005DA0  0100               	movlb	0	; () banked
  3839  005DA2  6FF6               	movwf	vsnprintf@ap& (0+255),b
  3840  005DA4  0E02               	movlw	high snprintf@ap
  3841  005DA6  6FF7               	movwf	(vsnprintf@ap+1)& (0+255),b
  3842  005DA8  ECFE  F024         	call	_vsnprintf	;wreg free
  3843  005DAC  0012               	return		;funcret
  3844  005DAE                     __end_of_snprintf:
  3845                           	opt callstack 0
  3846                           
  3847 ;; *************** function _vsnprintf *****************
  3848 ;; Defined at:
  3849 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  s               2  144[BANK0 ] PTR unsigned char 
  3852 ;;		 -> string_ntc(100), string_pot(100), string_temp(100), 
  3853 ;;  n               2  146[BANK0 ] unsigned int 
  3854 ;;  fmt             2  148[BANK0 ] PTR const unsigned char 
  3855 ;;		 -> STR_4(21), STR_3(16), STR_2(17), 
  3856 ;;  ap              2  150[BANK0 ] PTR PTR void 
  3857 ;;		 -> snprintf@ap(2), 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  f               6    4[BANK1 ] struct _IO_FILE
  3860 ;;  cnt             2    2[BANK1 ] int 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  2  144[BANK0 ] int 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3870 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Totals:         0      12      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;Total ram usage:       22 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:   11
  3877 ;; This function calls:
  3878 ;;		_vfprintf
  3879 ;; This function is called by:
  3880 ;;		_snprintf
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text2
  3885  0049FC                     __ptext2:
  3886                           	opt callstack 0
  3887  0049FC                     _vsnprintf:
  3888                           	opt callstack 18
  3889  0049FC  0E80               	movlw	128
  3890  0049FE  0100               	movlb	0	; () banked
  3891  004A00  5DF3               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3892  004A02  A0D8               	btfss	status,0,c
  3893  004A04  EF06  F025         	goto	u12031
  3894  004A08  EF08  F025         	goto	u12030
  3895  004A0C                     u12031:
  3896  004A0C  EF12  F025         	goto	l9078
  3897  004A10                     u12030:
  3898  004A10                     
  3899                           ; BSR set to: 0
  3900  004A10  0E00               	movlw	0
  3901  004A12  0101               	movlb	1	; () banked
  3902  004A14  6F19               	movwf	(_errno+1)& (0+255),b
  3903  004A16  0E4B               	movlw	75
  3904  004A18  6F18               	movwf	_errno& (0+255),b
  3905  004A1A                     
  3906                           ; BSR set to: 1
  3907  004A1A  0100               	movlb	0	; () banked
  3908  004A1C  69F0               	setf	?_vsnprintf& (0+255),b
  3909  004A1E  69F1               	setf	(?_vsnprintf+1)& (0+255),b
  3910  004A20  EF98  F025         	goto	l1655
  3911  004A24                     l9078:
  3912                           
  3913                           ; BSR set to: 0
  3914  004A24  C0F0  F1E2         	movff	vsnprintf@s,vsnprintf@f
  3915  004A28  C0F1  F1E3         	movff	vsnprintf@s+1,vsnprintf@f+1
  3916  004A2C  51F3               	movf	(vsnprintf@n+1)& (0+255),w,b
  3917  004A2E  E109               	bnz	u12040
  3918  004A30  0E02               	movlw	2
  3919  004A32  5DF2               	subwf	vsnprintf@n& (0+255),w,b
  3920  004A34  A0D8               	btfss	status,0,c
  3921  004A36  EF1F  F025         	goto	u12041
  3922  004A3A  EF21  F025         	goto	u12040
  3923  004A3E                     u12041:
  3924  004A3E  EF30  F025         	goto	l9084
  3925  004A42                     u12040:
  3926  004A42                     
  3927                           ; BSR set to: 0
  3928  004A42  0EFF               	movlw	255
  3929  004A44  25F2               	addwf	vsnprintf@n& (0+255),w,b
  3930  004A46  0101               	movlb	1	; () banked
  3931  004A48  6FE6               	movwf	(vsnprintf@f+4)& (0+255),b
  3932  004A4A  0EFF               	movlw	255
  3933  004A4C  0100               	movlb	0	; () banked
  3934  004A4E  21F3               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3935  004A50  0101               	movlb	1	; () banked
  3936  004A52  6FE7               	movwf	(vsnprintf@f+5)& (0+255),b
  3937  004A54                     
  3938                           ; BSR set to: 1
  3939  004A54  0E00               	movlw	0
  3940  004A56  6FE5               	movwf	(vsnprintf@f+3)& (0+255),b
  3941  004A58  0E00               	movlw	0
  3942  004A5A  6FE4               	movwf	(vsnprintf@f+2)& (0+255),b
  3943  004A5C  EF39  F025         	goto	l9086
  3944  004A60                     l9084:
  3945                           
  3946                           ; BSR set to: 0
  3947  004A60  0E00               	movlw	0
  3948  004A62  0101               	movlb	1	; () banked
  3949  004A64  6FE7               	movwf	(vsnprintf@f+5)& (0+255),b
  3950  004A66  0E01               	movlw	1
  3951  004A68  6FE6               	movwf	(vsnprintf@f+4)& (0+255),b
  3952  004A6A  0E00               	movlw	0
  3953  004A6C  6FE5               	movwf	(vsnprintf@f+3)& (0+255),b
  3954  004A6E  0E01               	movlw	1
  3955  004A70  6FE4               	movwf	(vsnprintf@f+2)& (0+255),b
  3956  004A72                     l9086:
  3957                           
  3958                           ; BSR set to: 1
  3959  004A72  0EE2               	movlw	low vsnprintf@f
  3960  004A74  0100               	movlb	0	; () banked
  3961  004A76  6FE8               	movwf	vfprintf@fp& (0+255),b
  3962  004A78  0E01               	movlw	high vsnprintf@f
  3963  004A7A  6FE9               	movwf	(vfprintf@fp+1)& (0+255),b
  3964  004A7C  C0F4  F0EA         	movff	vsnprintf@fmt,vfprintf@fmt
  3965  004A80  C0F5  F0EB         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3966  004A84  C0F6  F0EC         	movff	vsnprintf@ap,vfprintf@ap
  3967  004A88  C0F7  F0ED         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3968  004A8C  EC99  F02B         	call	_vfprintf	;wreg free
  3969  004A90  C0E8  F1E0         	movff	?_vfprintf,vsnprintf@cnt
  3970  004A94  C0E9  F1E1         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3971  004A98  0100               	movlb	0	; () banked
  3972  004A9A  51F2               	movf	vsnprintf@n& (0+255),w,b
  3973  004A9C  11F3               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3974  004A9E  B4D8               	btfsc	status,2,c
  3975  004AA0  EF54  F025         	goto	u12051
  3976  004AA4  EF56  F025         	goto	u12050
  3977  004AA8                     u12051:
  3978  004AA8  EF94  F025         	goto	l9098
  3979  004AAC                     u12050:
  3980  004AAC                     
  3981                           ; BSR set to: 0
  3982  004AAC  0101               	movlb	1	; () banked
  3983  004AAE  BFE1               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3984  004AB0  EF5C  F025         	goto	u12061
  3985  004AB4  EF5E  F025         	goto	u12060
  3986  004AB8                     u12061:
  3987  004AB8  EF94  F025         	goto	l9098
  3988  004ABC                     u12060:
  3989  004ABC                     
  3990                           ; BSR set to: 1
  3991  004ABC  0EFF               	movlw	255
  3992  004ABE  0100               	movlb	0	; () banked
  3993  004AC0  6FF8               	movwf	??_vsnprintf& (0+255),b
  3994  004AC2  0EFF               	movlw	255
  3995  004AC4  6FF9               	movwf	(??_vsnprintf+1)& (0+255),b
  3996  004AC6  C0F2  F0FA         	movff	vsnprintf@n,??_vsnprintf+2
  3997  004ACA  C0F3  F0FB         	movff	vsnprintf@n+1,??_vsnprintf+3
  3998  004ACE  51F8               	movf	??_vsnprintf& (0+255),w,b
  3999  004AD0  27FA               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4000  004AD2  51F9               	movf	(??_vsnprintf+1)& (0+255),w,b
  4001  004AD4  23FB               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4002  004AD6  51FA               	movf	(??_vsnprintf+2)& (0+255),w,b
  4003  004AD8  0101               	movlb	1	; () banked
  4004  004ADA  5DE0               	subwf	vsnprintf@cnt& (0+255),w,b
  4005  004ADC  0100               	movlb	0	; () banked
  4006  004ADE  51FB               	movf	(??_vsnprintf+3)& (0+255),w,b
  4007  004AE0  0101               	movlb	1	; () banked
  4008  004AE2  59E1               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4009  004AE4  A0D8               	btfss	status,0,c
  4010  004AE6  EF77  F025         	goto	u12071
  4011  004AEA  EF79  F025         	goto	u12070
  4012  004AEE                     u12071:
  4013  004AEE  EF85  F025         	goto	l1660
  4014  004AF2                     u12070:
  4015  004AF2                     
  4016                           ; BSR set to: 1
  4017  004AF2  0EFF               	movlw	255
  4018  004AF4  0100               	movlb	0	; () banked
  4019  004AF6  25F2               	addwf	vsnprintf@n& (0+255),w,b
  4020  004AF8  0101               	movlb	1	; () banked
  4021  004AFA  6FDE               	movwf	_vsnprintf$2147& (0+255),b
  4022  004AFC  0EFF               	movlw	255
  4023  004AFE  0100               	movlb	0	; () banked
  4024  004B00  21F3               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4025  004B02  0101               	movlb	1	; () banked
  4026  004B04  6FDF               	movwf	(_vsnprintf$2147+1)& (0+255),b
  4027  004B06  EF89  F025         	goto	l9096
  4028  004B0A                     l1660:
  4029                           
  4030                           ; BSR set to: 1
  4031  004B0A  C1E0  F1DE         	movff	vsnprintf@cnt,_vsnprintf$2147
  4032  004B0E  C1E1  F1DF         	movff	vsnprintf@cnt+1,_vsnprintf$2147+1
  4033  004B12                     l9096:
  4034                           
  4035                           ; BSR set to: 1
  4036  004B12  51DE               	movf	_vsnprintf$2147& (0+255),w,b
  4037  004B14  0100               	movlb	0	; () banked
  4038  004B16  25F0               	addwf	vsnprintf@s& (0+255),w,b
  4039  004B18  6ED9               	movwf	fsr2l,c
  4040  004B1A  0101               	movlb	1	; () banked
  4041  004B1C  51DF               	movf	(_vsnprintf$2147+1)& (0+255),w,b
  4042  004B1E  0100               	movlb	0	; () banked
  4043  004B20  21F1               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4044  004B22  6EDA               	movwf	fsr2h,c
  4045  004B24  0E00               	movlw	0
  4046  004B26  6EDF               	movwf	indf2,c
  4047  004B28                     l9098:
  4048  004B28  C1E0  F0F0         	movff	vsnprintf@cnt,?_vsnprintf
  4049  004B2C  C1E1  F0F1         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4050  004B30                     l1655:
  4051  004B30  0012               	return		;funcret
  4052  004B32                     __end_of_vsnprintf:
  4053                           	opt callstack 0
  4054                           
  4055 ;; *************** function _vfprintf *****************
  4056 ;; Defined at:
  4057 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  fp              2  136[BANK0 ] PTR struct _IO_FILE
  4060 ;;		 -> vsnprintf@f(6), 
  4061 ;;  fmt             2  138[BANK0 ] PTR const unsigned char 
  4062 ;;		 -> STR_4(21), STR_3(16), STR_2(17), 
  4063 ;;  ap              2  140[BANK0 ] PTR PTR void 
  4064 ;;		 -> snprintf@ap(2), 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  cfmt            2  142[BANK0 ] PTR unsigned char 
  4067 ;;		 -> STR_4(21), STR_3(16), STR_2(17), 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  2  136[BANK0 ] int 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4077 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;Total ram usage:        8 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:   10
  4084 ;; This function calls:
  4085 ;;		_vfpfcnvrt
  4086 ;; This function is called by:
  4087 ;;		_vsnprintf
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text3
  4092  005732                     __ptext3:
  4093                           	opt callstack 0
  4094  005732                     _vfprintf:
  4095                           	opt callstack 18
  4096  005732                     
  4097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4098  005732  C0EA  F0EE         	movff	vfprintf@fmt,vfprintf@cfmt
  4099  005736  C0EB  F0EF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4100  00573A                     
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4102  00573A  0E00               	movlw	0
  4103  00573C  0101               	movlb	1	; () banked
  4104  00573E  6F1B               	movwf	(_nout+1)& (0+255),b
  4105  005740  0E00               	movlw	0
  4106  005742  6F1A               	movwf	_nout& (0+255),b
  4107                           
  4108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4109  005744  EFBB  F02B         	goto	l9068
  4110  005748                     l9066:
  4111                           
  4112                           ; BSR set to: 1
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4114  005748  C0E8  F0BA         	movff	vfprintf@fp,vfpfcnvrt@fp
  4115  00574C  C0E9  F0BB         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4116  005750  0EEE               	movlw	low vfprintf@cfmt
  4117  005752  0100               	movlb	0	; () banked
  4118  005754  6FBC               	movwf	vfpfcnvrt@fmt& (0+255),b
  4119  005756  0E00               	movlw	high vfprintf@cfmt
  4120  005758  6FBD               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4121  00575A  C0EC  F0BE         	movff	vfprintf@ap,vfpfcnvrt@ap
  4122  00575E  C0ED  F0BF         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4123  005762  EC21  F000         	call	_vfpfcnvrt	;wreg free
  4124  005766  0100               	movlb	0	; () banked
  4125  005768  51BA               	movf	?_vfpfcnvrt& (0+255),w,b
  4126  00576A  0101               	movlb	1	; () banked
  4127  00576C  271A               	addwf	_nout& (0+255),f,b
  4128  00576E  0100               	movlb	0	; () banked
  4129  005770  51BB               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4130  005772  0101               	movlb	1	; () banked
  4131  005774  231B               	addwfc	(_nout+1)& (0+255),f,b
  4132  005776                     l9068:
  4133                           
  4134                           ; BSR set to: 1
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4136  005776  C0EE  FFF6         	movff	vfprintf@cfmt,tblptrl
  4137  00577A  C0EF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4138  00577E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4139  00577E  6AF8               	clrf	tblptru,c
  4140  005780                     	endif
  4141  005780                     	if	0	;tblptru may be non-zero
  4142  005780                     	endif
  4143  005780  0008               	tblrd		*
  4144  005782  50F5               	movf	tablat,w,c
  4145  005784  0900               	iorlw	0
  4146  005786  A4D8               	btfss	status,2,c
  4147  005788  EFC8  F02B         	goto	u12021
  4148  00578C  EFCA  F02B         	goto	u12020
  4149  005790                     u12021:
  4150  005790  EFA4  F02B         	goto	l9066
  4151  005794                     u12020:
  4152  005794                     
  4153                           ; BSR set to: 1
  4154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4155  005794  C11A  F0E8         	movff	_nout,?_vfprintf
  4156  005798  C11B  F0E9         	movff	_nout+1,?_vfprintf+1
  4157  00579C                     
  4158                           ; BSR set to: 1
  4159  00579C  0012               	return		;funcret
  4160  00579E                     __end_of_vfprintf:
  4161                           	opt callstack 0
  4162                           
  4163 ;; *************** function _vfpfcnvrt *****************
  4164 ;; Defined at:
  4165 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  4168 ;;		 -> vsnprintf@f(6), 
  4169 ;;  fmt             2   92[BANK0 ] PTR PTR unsigned char 
  4170 ;;		 -> vfprintf@cfmt(2), 
  4171 ;;  ap              2   94[BANK0 ] PTR PTR void 
  4172 ;;		 -> snprintf@ap(2), 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  llu             8  128[BANK0 ] unsigned long long 
  4175 ;;  ll              8  117[BANK0 ] long long 
  4176 ;;  f               4  110[BANK0 ] long long 
  4177 ;;  ct              3  114[BANK0 ] unsigned char [3]
  4178 ;;  vp              2  125[BANK0 ] PTR void 
  4179 ;;		 -> ?_snprintf(2), tensao_in(4), 
  4180 ;;  done            2  102[BANK0 ] int 
  4181 ;;  cp              2  100[BANK0 ] PTR unsigned char 
  4182 ;;		 -> ?_snprintf(2), tensao_in(4), 
  4183 ;;  i               2    0        int 
  4184 ;;  c               1  127[BANK0 ] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  2   90[BANK0 ] int 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4194 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;Total ram usage:       46 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    9
  4201 ;; This function calls:
  4202 ;;		_atoi
  4203 ;;		_ctoa
  4204 ;;		_dtoa
  4205 ;;		_efgtoa
  4206 ;;		_fputc
  4207 ;;		_isdigit
  4208 ;;		_isupper
  4209 ;;		_otoa
  4210 ;;		_stoa
  4211 ;;		_strncmp
  4212 ;;		_tolower
  4213 ;;		_utoa
  4214 ;;		_xtoa
  4215 ;; This function is called by:
  4216 ;;		_vfprintf
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text4
  4221  000042                     __ptext4:
  4222                           	opt callstack 0
  4223  000042                     _vfpfcnvrt:
  4224                           	opt callstack 18
  4225  000042                     
  4226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4227  000042  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4228  000046  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4229  00004A  CFDE FFF6          	movff	postinc2,tblptrl
  4230  00004E  CFDD FFF7          	movff	postdec2,tblptrh
  4231  000052                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4232  000052  6AF8               	clrf	tblptru,c
  4233  000054                     	endif
  4234  000054                     	if	0	;tblptru may be non-zero
  4235  000054                     	endif
  4236  000054  0008               	tblrd		*
  4237  000056  50F5               	movf	tablat,w,c
  4238  000058  0A25               	xorlw	37
  4239  00005A  A4D8               	btfss	status,2,c
  4240  00005C  EF32  F000         	goto	u11501
  4241  000060  EF34  F000         	goto	u11500
  4242  000064                     u11501:
  4243  000064  EF7C  F00A         	goto	l9048
  4244  000068                     u11500:
  4245  000068                     
  4246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4247  000068  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4248  00006C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4249  000070  2ADE               	incf	postinc2,f,c
  4250  000072  0E00               	movlw	0
  4251  000074  22DD               	addwfc	postdec2,f,c
  4252  000076                     
  4253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4254  000076  0E00               	movlw	0
  4255  000078  0101               	movlb	1	; () banked
  4256  00007A  6F1D               	movwf	(_width+1)& (0+255),b
  4257  00007C  0E00               	movlw	0
  4258  00007E  6F1C               	movwf	_width& (0+255),b
  4259  000080  C11C  F0FC         	movff	_width,_flags
  4260  000084  C11D  F0FD         	movff	_width+1,_flags+1
  4261  000088                     
  4262                           ; BSR set to: 1
  4263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4264  000088  685A               	setf	_prec^0,c
  4265  00008A  685B               	setf	(_prec+1)^0,c
  4266  00008C                     
  4267                           ; BSR set to: 1
  4268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4269  00008C  0E00               	movlw	0
  4270  00008E  0100               	movlb	0	; () banked
  4271  000090  6FC7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4272  000092  0E00               	movlw	0
  4273  000094  6FC6               	movwf	vfpfcnvrt@done& (0+255),b
  4274                           
  4275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4276  000096  EF94  F000         	goto	l8728
  4277  00009A                     l8702:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4281  00009A  81FC               	bsf	_flags& (0+255),0,b
  4282  00009C                     l8704:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4286  00009C  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4287  0000A0  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4288  0000A4  2ADE               	incf	postinc2,f,c
  4289  0000A6  0E00               	movlw	0
  4290  0000A8  22DD               	addwfc	postdec2,f,c
  4291                           
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4293  0000AA  EF94  F000         	goto	l8728
  4294  0000AE                     l8706:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4298  0000AE  83FC               	bsf	_flags& (0+255),1,b
  4299  0000B0  EF4E  F000         	goto	l8704
  4300  0000B4                     l8710:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4304  0000B4  85FC               	bsf	_flags& (0+255),2,b
  4305  0000B6  EF4E  F000         	goto	l8704
  4306  0000BA                     l8714:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4310  0000BA  87FC               	bsf	_flags& (0+255),3,b
  4311  0000BC  EF4E  F000         	goto	l8704
  4312  0000C0                     l8718:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4316  0000C0  89FC               	bsf	_flags& (0+255),4,b
  4317  0000C2  EF4E  F000         	goto	l8704
  4318  0000C6                     l8722:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4322  0000C6  0E00               	movlw	0
  4323  0000C8  6FC7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4324  0000CA  0E01               	movlw	1
  4325  0000CC  6FC6               	movwf	vfpfcnvrt@done& (0+255),b
  4326                           
  4327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4328  0000CE  EF94  F000         	goto	l8728
  4329  0000D2                     l8726:
  4330                           
  4331                           ; BSR set to: 0
  4332  0000D2  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4333  0000D6  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4334  0000DA  CFDE FFF6          	movff	postinc2,tblptrl
  4335  0000DE  CFDD FFF7          	movff	postdec2,tblptrh
  4336  0000E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4337  0000E2  6AF8               	clrf	tblptru,c
  4338  0000E4                     	endif
  4339  0000E4                     	if	0	;tblptru may be non-zero
  4340  0000E4                     	endif
  4341  0000E4  0008               	tblrd		*
  4342  0000E6  50F5               	movf	tablat,w,c
  4343  0000E8  6FC0               	movwf	??_vfpfcnvrt& (0+255),b
  4344  0000EA  6BC1               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4345                           
  4346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4347                           ; Switch size 1, requested type "simple"
  4348                           ; Number of cases is 1, Range of values is 0 to 0
  4349                           ; switch strategies available:
  4350                           ; Name         Instructions Cycles
  4351                           ; simple_byte            4     3 (average)
  4352                           ;	Chosen strategy is simple_byte
  4353  0000EC  51C1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4354  0000EE  0A00               	xorlw	0	; case 0
  4355  0000F0  B4D8               	btfsc	status,2,c
  4356  0000F2  EF7D  F000         	goto	l9206
  4357  0000F6  EF63  F000         	goto	l8722
  4358  0000FA                     l9206:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ; Switch size 1, requested type "simple"
  4362                           ; Number of cases is 5, Range of values is 32 to 48
  4363                           ; switch strategies available:
  4364                           ; Name         Instructions Cycles
  4365                           ; simple_byte           16     9 (average)
  4366                           ;	Chosen strategy is simple_byte
  4367  0000FA  51C0               	movf	??_vfpfcnvrt& (0+255),w,b
  4368  0000FC  0A20               	xorlw	32	; case 32
  4369  0000FE  B4D8               	btfsc	status,2,c
  4370  000100  EF5D  F000         	goto	l8714
  4371  000104  0A03               	xorlw	3	; case 35
  4372  000106  B4D8               	btfsc	status,2,c
  4373  000108  EF60  F000         	goto	l8718
  4374  00010C  0A08               	xorlw	8	; case 43
  4375  00010E  B4D8               	btfsc	status,2,c
  4376  000110  EF5A  F000         	goto	l8710
  4377  000114  0A06               	xorlw	6	; case 45
  4378  000116  B4D8               	btfsc	status,2,c
  4379  000118  EF4D  F000         	goto	l8702
  4380  00011C  0A1D               	xorlw	29	; case 48
  4381  00011E  B4D8               	btfsc	status,2,c
  4382  000120  EF57  F000         	goto	l8706
  4383  000124  EF63  F000         	goto	l8722
  4384  000128                     l8728:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4388  000128  51C6               	movf	vfpfcnvrt@done& (0+255),w,b
  4389  00012A  11C7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4390  00012C  B4D8               	btfsc	status,2,c
  4391  00012E  EF9B  F000         	goto	u11511
  4392  000132  EF9D  F000         	goto	u11510
  4393  000136                     u11511:
  4394  000136  EF69  F000         	goto	l8726
  4395  00013A                     u11510:
  4396  00013A                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4399  00013A  A1FC               	btfss	_flags& (0+255),0,b
  4400  00013C  EFA2  F000         	goto	u11521
  4401  000140  EFA4  F000         	goto	u11520
  4402  000144                     u11521:
  4403  000144  EFA5  F000         	goto	l8732
  4404  000148                     u11520:
  4405  000148                     
  4406                           ; BSR set to: 0
  4407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4408  000148  93FC               	bcf	_flags& (0+255),1,b
  4409  00014A                     l8732:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4413  00014A  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4414  00014E  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4415  000152  CFDE FFF6          	movff	postinc2,tblptrl
  4416  000156  CFDD FFF7          	movff	postdec2,tblptrh
  4417  00015A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4418  00015A  6AF8               	clrf	tblptru,c
  4419  00015C                     	endif
  4420  00015C                     	if	0	;tblptru may be non-zero
  4421  00015C                     	endif
  4422  00015C  0008               	tblrd		*
  4423  00015E  50F5               	movf	tablat,w,c
  4424  000160  0A2A               	xorlw	42
  4425  000162  A4D8               	btfss	status,2,c
  4426  000164  EFB6  F000         	goto	u11531
  4427  000168  EFB8  F000         	goto	u11530
  4428  00016C                     u11531:
  4429  00016C  EFE4  F000         	goto	l8740
  4430  000170                     u11530:
  4431  000170                     
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4434  000170  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4435  000174  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4436  000178  2ADE               	incf	postinc2,f,c
  4437  00017A  0E00               	movlw	0
  4438  00017C  22DD               	addwfc	postdec2,f,c
  4439                           
  4440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4441  00017E  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4442  000182  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4443  000186  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  4444  00018A  0E02               	movlw	2
  4445  00018C  26DE               	addwf	postinc2,f,c
  4446  00018E  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  4447  000192  0E00               	movlw	0
  4448  000194  22DD               	addwfc	postdec2,f,c
  4449  000196  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4450  00019A  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4451  00019E  CFDE F11C          	movff	postinc2,_width
  4452  0001A2  CFDD F11D          	movff	postdec2,_width+1
  4453  0001A6                     
  4454                           ; BSR set to: 0
  4455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4456  0001A6  0101               	movlb	1	; () banked
  4457  0001A8  BF1D               	btfsc	(_width+1)& (0+255),7,b
  4458  0001AA  EFDB  F000         	goto	u11540
  4459  0001AE  EFD9  F000         	goto	u11541
  4460  0001B2                     u11541:
  4461  0001B2  EF29  F001         	goto	l8750
  4462  0001B6                     u11540:
  4463  0001B6                     
  4464                           ; BSR set to: 1
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4466  0001B6  0100               	movlb	0	; () banked
  4467  0001B8  81FC               	bsf	_flags& (0+255),0,b
  4468                           
  4469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4470  0001BA  0101               	movlb	1	; () banked
  4471  0001BC  6D1C               	negf	_width& (0+255),b
  4472  0001BE  1F1D               	comf	(_width+1)& (0+255),f,b
  4473  0001C0  B0D8               	btfsc	status,0,c
  4474  0001C2  2B1D               	incf	(_width+1)& (0+255),f,b
  4475  0001C4  EF29  F001         	goto	l8750
  4476  0001C8                     l8740:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4480  0001C8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4481  0001CC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4482  0001D0  CFDE F00B          	movff	postinc2,atoi@s
  4483  0001D4  CFDD F00C          	movff	postdec2,atoi@s+1
  4484  0001D8  EC3B  F021         	call	_atoi	;wreg free
  4485  0001DC  C00B  F11C         	movff	?_atoi,_width
  4486  0001E0  C00C  F11D         	movff	?_atoi+1,_width+1
  4487                           
  4488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4489  0001E4  EFFB  F000         	goto	l8744
  4490  0001E8                     l8742:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4494  0001E8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4495  0001EC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4496  0001F0  2ADE               	incf	postinc2,f,c
  4497  0001F2  0E00               	movlw	0
  4498  0001F4  22DD               	addwfc	postdec2,f,c
  4499  0001F6                     l8744:
  4500  0001F6  0ED0               	movlw	208
  4501  0001F8  0100               	movlb	0	; () banked
  4502  0001FA  6FC0               	movwf	??_vfpfcnvrt& (0+255),b
  4503  0001FC  0EFF               	movlw	255
  4504  0001FE  6FC1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4505  000200  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4506  000204  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4507  000208  CFDE FFF6          	movff	postinc2,tblptrl
  4508  00020C  CFDD FFF7          	movff	postdec2,tblptrh
  4509  000210                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4510  000210  6AF8               	clrf	tblptru,c
  4511  000212                     	endif
  4512  000212                     	if	0	;tblptru may be non-zero
  4513  000212                     	endif
  4514  000212  0008               	tblrd		*
  4515  000214  50F5               	movf	tablat,w,c
  4516  000216  6FC2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4517  000218  6BC3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4518  00021A  51C0               	movf	??_vfpfcnvrt& (0+255),w,b
  4519  00021C  27C2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4520  00021E  51C1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4521  000220  23C3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4522  000222  51C3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4523  000224  E10A               	bnz	u11550
  4524  000226  0E0A               	movlw	10
  4525  000228  5DC2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4526  00022A  A0D8               	btfss	status,0,c
  4527  00022C  EF1A  F001         	goto	u11551
  4528  000230  EF1D  F001         	goto	u11550
  4529  000234                     u11551:
  4530  000234  0E01               	movlw	1
  4531  000236  EF1E  F001         	goto	u11560
  4532  00023A                     u11550:
  4533  00023A  0E00               	movlw	0
  4534  00023C                     u11560:
  4535  00023C  6FC8               	movwf	_vfpfcnvrt$1394& (0+255),b
  4536  00023E  6BC9               	clrf	(_vfpfcnvrt$1394+1)& (0+255),b
  4537  000240                     
  4538                           ; BSR set to: 0
  4539  000240  51C8               	movf	_vfpfcnvrt$1394& (0+255),w,b
  4540  000242  11C9               	iorwf	(_vfpfcnvrt$1394+1)& (0+255),w,b
  4541  000244  A4D8               	btfss	status,2,c
  4542  000246  EF27  F001         	goto	u11571
  4543  00024A  EF29  F001         	goto	u11570
  4544  00024E                     u11571:
  4545  00024E  EFF4  F000         	goto	l8742
  4546  000252                     u11570:
  4547  000252                     l8750:
  4548                           
  4549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4550  000252  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4551  000256  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4552  00025A  CFDE FFF6          	movff	postinc2,tblptrl
  4553  00025E  CFDD FFF7          	movff	postdec2,tblptrh
  4554  000262                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4555  000262  6AF8               	clrf	tblptru,c
  4556  000264                     	endif
  4557  000264                     	if	0	;tblptru may be non-zero
  4558  000264                     	endif
  4559  000264  0008               	tblrd		*
  4560  000266  50F5               	movf	tablat,w,c
  4561  000268  0A2E               	xorlw	46
  4562  00026A  A4D8               	btfss	status,2,c
  4563  00026C  EF3A  F001         	goto	u11581
  4564  000270  EF3C  F001         	goto	u11580
  4565  000274                     u11581:
  4566  000274  EFBC  F001         	goto	l8770
  4567  000278                     u11580:
  4568  000278                     
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4570  000278  0E00               	movlw	0
  4571  00027A  6E5B               	movwf	(_prec+1)^0,c
  4572  00027C  0E00               	movlw	0
  4573  00027E  6E5A               	movwf	_prec^0,c
  4574  000280                     
  4575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4576  000280  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4577  000284  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4578  000288  2ADE               	incf	postinc2,f,c
  4579  00028A  0E00               	movlw	0
  4580  00028C  22DD               	addwfc	postdec2,f,c
  4581  00028E                     
  4582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4583  00028E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4584  000292  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4585  000296  CFDE FFF6          	movff	postinc2,tblptrl
  4586  00029A  CFDD FFF7          	movff	postdec2,tblptrh
  4587  00029E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4588  00029E  6AF8               	clrf	tblptru,c
  4589  0002A0                     	endif
  4590  0002A0                     	if	0	;tblptru may be non-zero
  4591  0002A0                     	endif
  4592  0002A0  0008               	tblrd		*
  4593  0002A2  50F5               	movf	tablat,w,c
  4594  0002A4  0A2A               	xorlw	42
  4595  0002A6  A4D8               	btfss	status,2,c
  4596  0002A8  EF58  F001         	goto	u11591
  4597  0002AC  EF5A  F001         	goto	u11590
  4598  0002B0                     u11591:
  4599  0002B0  EF77  F001         	goto	l8760
  4600  0002B4                     u11590:
  4601  0002B4                     
  4602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4603  0002B4  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4604  0002B8  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4605  0002BC  2ADE               	incf	postinc2,f,c
  4606  0002BE  0E00               	movlw	0
  4607  0002C0  22DD               	addwfc	postdec2,f,c
  4608                           
  4609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4610  0002C2  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4611  0002C6  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4612  0002CA  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  4613  0002CE  0E02               	movlw	2
  4614  0002D0  26DE               	addwf	postinc2,f,c
  4615  0002D2  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  4616  0002D6  0E00               	movlw	0
  4617  0002D8  22DD               	addwfc	postdec2,f,c
  4618  0002DA  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4619  0002DE  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4620  0002E2  CFDE F05A          	movff	postinc2,_prec
  4621  0002E6  CFDD F05B          	movff	postdec2,_prec+1
  4622                           
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4624  0002EA  EFBC  F001         	goto	l8770
  4625  0002EE                     l8760:
  4626                           
  4627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4628  0002EE  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4629  0002F2  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4630  0002F6  CFDE F00B          	movff	postinc2,atoi@s
  4631  0002FA  CFDD F00C          	movff	postdec2,atoi@s+1
  4632  0002FE  EC3B  F021         	call	_atoi	;wreg free
  4633  000302  C00B  F05A         	movff	?_atoi,_prec
  4634  000306  C00C  F05B         	movff	?_atoi+1,_prec+1
  4635                           
  4636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4637  00030A  EF8E  F001         	goto	l8764
  4638  00030E                     l8762:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4642  00030E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4643  000312  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4644  000316  2ADE               	incf	postinc2,f,c
  4645  000318  0E00               	movlw	0
  4646  00031A  22DD               	addwfc	postdec2,f,c
  4647  00031C                     l8764:
  4648  00031C  0ED0               	movlw	208
  4649  00031E  0100               	movlb	0	; () banked
  4650  000320  6FC0               	movwf	??_vfpfcnvrt& (0+255),b
  4651  000322  0EFF               	movlw	255
  4652  000324  6FC1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4653  000326  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4654  00032A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4655  00032E  CFDE FFF6          	movff	postinc2,tblptrl
  4656  000332  CFDD FFF7          	movff	postdec2,tblptrh
  4657  000336                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4658  000336  6AF8               	clrf	tblptru,c
  4659  000338                     	endif
  4660  000338                     	if	0	;tblptru may be non-zero
  4661  000338                     	endif
  4662  000338  0008               	tblrd		*
  4663  00033A  50F5               	movf	tablat,w,c
  4664  00033C  6FC2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4665  00033E  6BC3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4666  000340  51C0               	movf	??_vfpfcnvrt& (0+255),w,b
  4667  000342  27C2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4668  000344  51C1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4669  000346  23C3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4670  000348  51C3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4671  00034A  E10A               	bnz	u11600
  4672  00034C  0E0A               	movlw	10
  4673  00034E  5DC2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4674  000350  A0D8               	btfss	status,0,c
  4675  000352  EFAD  F001         	goto	u11601
  4676  000356  EFB0  F001         	goto	u11600
  4677  00035A                     u11601:
  4678  00035A  0E01               	movlw	1
  4679  00035C  EFB1  F001         	goto	u11610
  4680  000360                     u11600:
  4681  000360  0E00               	movlw	0
  4682  000362                     u11610:
  4683  000362  6FCA               	movwf	_vfpfcnvrt$1395& (0+255),b
  4684  000364  6BCB               	clrf	(_vfpfcnvrt$1395+1)& (0+255),b
  4685  000366                     
  4686                           ; BSR set to: 0
  4687  000366  51CA               	movf	_vfpfcnvrt$1395& (0+255),w,b
  4688  000368  11CB               	iorwf	(_vfpfcnvrt$1395+1)& (0+255),w,b
  4689  00036A  A4D8               	btfss	status,2,c
  4690  00036C  EFBA  F001         	goto	u11621
  4691  000370  EFBC  F001         	goto	u11620
  4692  000374                     u11621:
  4693  000374  EF87  F001         	goto	l8762
  4694  000378                     u11620:
  4695  000378                     l8770:
  4696                           
  4697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4698  000378  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4699  00037C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4700  000380  CFDE FFF6          	movff	postinc2,tblptrl
  4701  000384  CFDD FFF7          	movff	postdec2,tblptrh
  4702  000388                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4703  000388  6AF8               	clrf	tblptru,c
  4704  00038A                     	endif
  4705  00038A                     	if	0	;tblptru may be non-zero
  4706  00038A                     	endif
  4707  00038A  0008               	tblrd		*
  4708  00038C  50F5               	movf	tablat,w,c
  4709  00038E  6E0A               	movwf	tolower@c^0,c
  4710  000390  6A0B               	clrf	(tolower@c+1)^0,c
  4711  000392  ECCF  F02B         	call	_tolower	;wreg free
  4712  000396  500A               	movf	?_tolower^0,w,c
  4713  000398  0100               	movlb	0	; () banked
  4714  00039A  6FD2               	movwf	vfpfcnvrt@ct& (0+255),b
  4715  00039C                     
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4718  00039C  51D2               	movf	vfpfcnvrt@ct& (0+255),w,b
  4719  00039E  B4D8               	btfsc	status,2,c
  4720  0003A0  EFD4  F001         	goto	u11631
  4721  0003A4  EFD6  F001         	goto	u11630
  4722  0003A8                     u11631:
  4723  0003A8  EF12  F002         	goto	l8780
  4724  0003AC                     u11630:
  4725  0003AC                     
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4728  0003AC  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4729  0003B0  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4730  0003B4  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt
  4731  0003B8  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+1
  4732  0003BC  0E01               	movlw	1
  4733  0003BE  27C0               	addwf	??_vfpfcnvrt& (0+255),f,b
  4734  0003C0  0E00               	movlw	0
  4735  0003C2  23C1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4736  0003C4  C0C0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4737  0003C8  C0C1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4738  0003CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4739  0003CC  6AF8               	clrf	tblptru,c
  4740  0003CE                     	endif
  4741  0003CE                     	if	0	;tblptru may be non-zero
  4742  0003CE                     	endif
  4743  0003CE  0008               	tblrd		*
  4744  0003D0  50F5               	movf	tablat,w,c
  4745  0003D2  6E0A               	movwf	tolower@c^0,c
  4746  0003D4  6A0B               	clrf	(tolower@c+1)^0,c
  4747  0003D6  ECCF  F02B         	call	_tolower	;wreg free
  4748  0003DA  500A               	movf	?_tolower^0,w,c
  4749  0003DC  0100               	movlb	0	; () banked
  4750  0003DE  6FD3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4751  0003E0                     
  4752                           ; BSR set to: 0
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4754  0003E0  51D3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4755  0003E2  B4D8               	btfsc	status,2,c
  4756  0003E4  EFF6  F001         	goto	u11641
  4757  0003E8  EFF8  F001         	goto	u11640
  4758  0003EC                     u11641:
  4759  0003EC  EF12  F002         	goto	l8780
  4760  0003F0                     u11640:
  4761  0003F0                     
  4762                           ; BSR set to: 0
  4763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4764  0003F0  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4765  0003F4  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4766  0003F8  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt
  4767  0003FC  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+1
  4768  000400  0E02               	movlw	2
  4769  000402  27C0               	addwf	??_vfpfcnvrt& (0+255),f,b
  4770  000404  0E00               	movlw	0
  4771  000406  23C1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4772  000408  C0C0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4773  00040C  C0C1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4774  000410                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4775  000410  6AF8               	clrf	tblptru,c
  4776  000412                     	endif
  4777  000412                     	if	0	;tblptru may be non-zero
  4778  000412                     	endif
  4779  000412  0008               	tblrd		*
  4780  000414  50F5               	movf	tablat,w,c
  4781  000416  6E0A               	movwf	tolower@c^0,c
  4782  000418  6A0B               	clrf	(tolower@c+1)^0,c
  4783  00041A  ECCF  F02B         	call	_tolower	;wreg free
  4784  00041E  500A               	movf	?_tolower^0,w,c
  4785  000420  0100               	movlb	0	; () banked
  4786  000422  6FD4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4787  000424                     l8780:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4791  000424  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4792  000428  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4793  00042C  CFDE FFF6          	movff	postinc2,tblptrl
  4794  000430  CFDD FFF7          	movff	postdec2,tblptrh
  4795  000434                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4796  000434  6AF8               	clrf	tblptru,c
  4797  000436                     	endif
  4798  000436                     	if	0	;tblptru may be non-zero
  4799  000436                     	endif
  4800  000436  0008               	tblrd		*
  4801  000438  50F5               	movf	tablat,w,c
  4802  00043A  0A63               	xorlw	99
  4803  00043C  A4D8               	btfss	status,2,c
  4804  00043E  EF23  F002         	goto	u11651
  4805  000442  EF25  F002         	goto	u11650
  4806  000446                     u11651:
  4807  000446  EF4C  F002         	goto	l8788
  4808  00044A                     u11650:
  4809  00044A                     
  4810                           ; BSR set to: 0
  4811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4812  00044A  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4813  00044E  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4814  000452  2ADE               	incf	postinc2,f,c
  4815  000454  0E00               	movlw	0
  4816  000456  22DD               	addwfc	postdec2,f,c
  4817                           
  4818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4819  000458  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4820  00045C  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4821  000460  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  4822  000464  0E02               	movlw	2
  4823  000466  26DE               	addwf	postinc2,f,c
  4824  000468  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  4825  00046C  0E00               	movlw	0
  4826  00046E  22DD               	addwfc	postdec2,f,c
  4827  000470  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4828  000474  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4829  000478  50DF               	movf	indf2,w,c
  4830  00047A  6FDF               	movwf	vfpfcnvrt@c& (0+255),b
  4831  00047C                     
  4832                           ; BSR set to: 0
  4833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4834  00047C  C0BA  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  4835  000480  C0BB  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4836  000484  C0DF  F021         	movff	vfpfcnvrt@c,ctoa@c
  4837  000488  EC8B  F02C         	call	_ctoa	;wreg free
  4838  00048C  C01F  F0BA         	movff	?_ctoa,?_vfpfcnvrt
  4839  000490  C020  F0BB         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4840  000494  EF98  F00A         	goto	l749
  4841  000498                     l8788:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4845  000498  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4846  00049C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4847  0004A0  CFDE F004          	movff	postinc2,strncmp@_l
  4848  0004A4  CFDD F005          	movff	postdec2,strncmp@_l+1
  4849  0004A8  0EC7               	movlw	low STR_13
  4850  0004AA  6E06               	movwf	strncmp@_r^0,c
  4851  0004AC  0EFF               	movlw	high STR_13
  4852  0004AE  6E07               	movwf	(strncmp@_r+1)^0,c
  4853  0004B0  0E00               	movlw	0
  4854  0004B2  6E09               	movwf	(strncmp@n+1)^0,c
  4855  0004B4  0E03               	movlw	3
  4856  0004B6  6E08               	movwf	strncmp@n^0,c
  4857  0004B8  EC32  F026         	call	_strncmp	;wreg free
  4858  0004BC  5004               	movf	?_strncmp^0,w,c
  4859  0004BE  1005               	iorwf	(?_strncmp+1)^0,w,c
  4860  0004C0  B4D8               	btfsc	status,2,c
  4861  0004C2  EF65  F002         	goto	u11661
  4862  0004C6  EF67  F002         	goto	u11660
  4863  0004CA                     u11661:
  4864  0004CA  EF82  F002         	goto	l8792
  4865  0004CE                     u11660:
  4866  0004CE  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4867  0004D2  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4868  0004D6  CFDE F004          	movff	postinc2,strncmp@_l
  4869  0004DA  CFDD F005          	movff	postdec2,strncmp@_l+1
  4870  0004DE  0ECF               	movlw	low STR_17
  4871  0004E0  6E06               	movwf	strncmp@_r^0,c
  4872  0004E2  0EFF               	movlw	high STR_17
  4873  0004E4  6E07               	movwf	(strncmp@_r+1)^0,c
  4874  0004E6  0E00               	movlw	0
  4875  0004E8  6E09               	movwf	(strncmp@n+1)^0,c
  4876  0004EA  0E03               	movlw	3
  4877  0004EC  6E08               	movwf	strncmp@n^0,c
  4878  0004EE  EC32  F026         	call	_strncmp	;wreg free
  4879  0004F2  5004               	movf	?_strncmp^0,w,c
  4880  0004F4  1005               	iorwf	(?_strncmp+1)^0,w,c
  4881  0004F6  A4D8               	btfss	status,2,c
  4882  0004F8  EF80  F002         	goto	u11671
  4883  0004FC  EF82  F002         	goto	u11670
  4884  000500                     u11671:
  4885  000500  EFC3  F002         	goto	l8798
  4886  000504                     u11670:
  4887  000504                     l8792:
  4888                           
  4889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4890  000504  0E03               	movlw	3
  4891  000506  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4892  00050A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4893  00050E  26DE               	addwf	postinc2,f,c
  4894  000510  0E00               	movlw	0
  4895  000512  22DD               	addwfc	postdec2,f,c
  4896                           
  4897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4898  000514  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4899  000518  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4900  00051C  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  4901  000520  0E02               	movlw	2
  4902  000522  26DE               	addwf	postinc2,f,c
  4903  000524  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  4904  000528  0E00               	movlw	0
  4905  00052A  22DD               	addwfc	postdec2,f,c
  4906  00052C  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4907  000530  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4908  000534  50DF               	movf	indf2,w,c
  4909  000536  0100               	movlb	0	; () banked
  4910  000538  6FD5               	movwf	vfpfcnvrt@ll& (0+255),b
  4911  00053A  0E00               	movlw	0
  4912  00053C  BFD5               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4913  00053E  0EFF               	movlw	-1
  4914  000540  6FD6               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4915  000542  6FD7               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4916  000544  6FD8               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4917  000546  6FD9               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4918  000548  6FDA               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4919  00054A  6FDB               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4920  00054C  6FDC               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4921  00054E                     l8794:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4925  00054E  C0BA  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4926  000552  C0BB  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4927  000556  C0D5  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4928  00055A  C0D6  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4929  00055E  C0D7  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4930  000562  C0D8  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4931  000566  C0D9  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4932  00056A  C0DA  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4933  00056E  C0DB  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4934  000572  C0DC  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4935  000576  EC7B  F01A         	call	_dtoa	;wreg free
  4936  00057A  C01F  F0BA         	movff	?_dtoa,?_vfpfcnvrt
  4937  00057E  C020  F0BB         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4938  000582  EF98  F00A         	goto	l749
  4939  000586                     l8798:
  4940                           
  4941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4942  000586  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4943  00058A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4944  00058E  CFDE F004          	movff	postinc2,strncmp@_l
  4945  000592  CFDD F005          	movff	postdec2,strncmp@_l+1
  4946  000596  0EC8               	movlw	low (STR_13+1)
  4947  000598  6E06               	movwf	strncmp@_r^0,c
  4948  00059A  0EFF               	movlw	high (STR_13+1)
  4949  00059C  6E07               	movwf	(strncmp@_r+1)^0,c
  4950  00059E  0E00               	movlw	0
  4951  0005A0  6E09               	movwf	(strncmp@n+1)^0,c
  4952  0005A2  0E02               	movlw	2
  4953  0005A4  6E08               	movwf	strncmp@n^0,c
  4954  0005A6  EC32  F026         	call	_strncmp	;wreg free
  4955  0005AA  5004               	movf	?_strncmp^0,w,c
  4956  0005AC  1005               	iorwf	(?_strncmp+1)^0,w,c
  4957  0005AE  B4D8               	btfsc	status,2,c
  4958  0005B0  EFDC  F002         	goto	u11681
  4959  0005B4  EFDE  F002         	goto	u11680
  4960  0005B8                     u11681:
  4961  0005B8  EFF9  F002         	goto	l8802
  4962  0005BC                     u11680:
  4963  0005BC  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4964  0005C0  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4965  0005C4  CFDE F004          	movff	postinc2,strncmp@_l
  4966  0005C8  CFDD F005          	movff	postdec2,strncmp@_l+1
  4967  0005CC  0ED0               	movlw	low (STR_17+1)
  4968  0005CE  6E06               	movwf	strncmp@_r^0,c
  4969  0005D0  0EFF               	movlw	high (STR_17+1)
  4970  0005D2  6E07               	movwf	(strncmp@_r+1)^0,c
  4971  0005D4  0E00               	movlw	0
  4972  0005D6  6E09               	movwf	(strncmp@n+1)^0,c
  4973  0005D8  0E02               	movlw	2
  4974  0005DA  6E08               	movwf	strncmp@n^0,c
  4975  0005DC  EC32  F026         	call	_strncmp	;wreg free
  4976  0005E0  5004               	movf	?_strncmp^0,w,c
  4977  0005E2  1005               	iorwf	(?_strncmp+1)^0,w,c
  4978  0005E4  A4D8               	btfss	status,2,c
  4979  0005E6  EFF7  F002         	goto	u11691
  4980  0005EA  EFF9  F002         	goto	u11690
  4981  0005EE                     u11691:
  4982  0005EE  EF21  F003         	goto	l8808
  4983  0005F2                     u11690:
  4984  0005F2                     l8802:
  4985                           
  4986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4987  0005F2  0E02               	movlw	2
  4988  0005F4  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4989  0005F8  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4990  0005FC  26DE               	addwf	postinc2,f,c
  4991  0005FE  0E00               	movlw	0
  4992  000600  22DD               	addwfc	postdec2,f,c
  4993                           
  4994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4995  000602  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4996  000606  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4997  00060A  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  4998  00060E  0E02               	movlw	2
  4999  000610  26DE               	addwf	postinc2,f,c
  5000  000612  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5001  000616  0E00               	movlw	0
  5002  000618  22DD               	addwfc	postdec2,f,c
  5003  00061A  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5004  00061E  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5005  000622  CFDE F0D5          	movff	postinc2,vfpfcnvrt@ll
  5006  000626  CFDD F0D6          	movff	postdec2,vfpfcnvrt@ll+1
  5007  00062A  0100               	movlb	0	; () banked
  5008  00062C  0E00               	movlw	0
  5009  00062E  BFD6               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5010  000630  0EFF               	movlw	-1
  5011  000632  6FD7               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5012  000634  6FD8               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5013  000636  6FD9               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5014  000638  6FDA               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5015  00063A  6FDB               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5016  00063C  6FDC               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5017  00063E  EFA7  F002         	goto	l8794
  5018  000642                     l8808:
  5019                           
  5020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5021  000642  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5022  000646  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5023  00064A  CFDE FFF6          	movff	postinc2,tblptrl
  5024  00064E  CFDD FFF7          	movff	postdec2,tblptrh
  5025  000652                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5026  000652  6AF8               	clrf	tblptru,c
  5027  000654                     	endif
  5028  000654                     	if	0	;tblptru may be non-zero
  5029  000654                     	endif
  5030  000654  0008               	tblrd		*
  5031  000656  50F5               	movf	tablat,w,c
  5032  000658  0A64               	xorlw	100
  5033  00065A  B4D8               	btfsc	status,2,c
  5034  00065C  EF32  F003         	goto	u11701
  5035  000660  EF34  F003         	goto	u11700
  5036  000664                     u11701:
  5037  000664  EF47  F003         	goto	l8812
  5038  000668                     u11700:
  5039  000668  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5040  00066C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5041  000670  CFDE FFF6          	movff	postinc2,tblptrl
  5042  000674  CFDD FFF7          	movff	postdec2,tblptrh
  5043  000678                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5044  000678  6AF8               	clrf	tblptru,c
  5045  00067A                     	endif
  5046  00067A                     	if	0	;tblptru may be non-zero
  5047  00067A                     	endif
  5048  00067A  0008               	tblrd		*
  5049  00067C  50F5               	movf	tablat,w,c
  5050  00067E  0A69               	xorlw	105
  5051  000680  A4D8               	btfss	status,2,c
  5052  000682  EF45  F003         	goto	u11711
  5053  000686  EF47  F003         	goto	u11710
  5054  00068A                     u11711:
  5055  00068A  EF6E  F003         	goto	l8818
  5056  00068E                     u11710:
  5057  00068E                     l8812:
  5058                           
  5059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5060  00068E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5061  000692  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5062  000696  2ADE               	incf	postinc2,f,c
  5063  000698  0E00               	movlw	0
  5064  00069A  22DD               	addwfc	postdec2,f,c
  5065                           
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5067  00069C  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5068  0006A0  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5069  0006A4  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5070  0006A8  0E02               	movlw	2
  5071  0006AA  26DE               	addwf	postinc2,f,c
  5072  0006AC  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5073  0006B0  0E00               	movlw	0
  5074  0006B2  22DD               	addwfc	postdec2,f,c
  5075  0006B4  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5076  0006B8  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5077  0006BC  CFDE F0D5          	movff	postinc2,vfpfcnvrt@ll
  5078  0006C0  CFDD F0D6          	movff	postdec2,vfpfcnvrt@ll+1
  5079  0006C4  0100               	movlb	0	; () banked
  5080  0006C6  0E00               	movlw	0
  5081  0006C8  BFD6               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5082  0006CA  0EFF               	movlw	-1
  5083  0006CC  6FD7               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5084  0006CE  6FD8               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5085  0006D0  6FD9               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5086  0006D2  6FDA               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5087  0006D4  6FDB               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5088  0006D6  6FDC               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5089  0006D8  EFA7  F002         	goto	l8794
  5090  0006DC                     l8818:
  5091                           
  5092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5093  0006DC  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5094  0006E0  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5095  0006E4  CFDE F004          	movff	postinc2,strncmp@_l
  5096  0006E8  CFDD F005          	movff	postdec2,strncmp@_l+1
  5097  0006EC  0EEA               	movlw	low STR_31
  5098  0006EE  6E06               	movwf	strncmp@_r^0,c
  5099  0006F0  0EFF               	movlw	high STR_31
  5100  0006F2  6E07               	movwf	(strncmp@_r+1)^0,c
  5101  0006F4  0E00               	movlw	0
  5102  0006F6  6E09               	movwf	(strncmp@n+1)^0,c
  5103  0006F8  0E02               	movlw	2
  5104  0006FA  6E08               	movwf	strncmp@n^0,c
  5105  0006FC  EC32  F026         	call	_strncmp	;wreg free
  5106  000700  5004               	movf	?_strncmp^0,w,c
  5107  000702  1005               	iorwf	(?_strncmp+1)^0,w,c
  5108  000704  B4D8               	btfsc	status,2,c
  5109  000706  EF87  F003         	goto	u11721
  5110  00070A  EF89  F003         	goto	u11720
  5111  00070E                     u11721:
  5112  00070E  EFA4  F003         	goto	l8822
  5113  000712                     u11720:
  5114  000712  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5115  000716  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5116  00071A  CFDE F004          	movff	postinc2,strncmp@_l
  5117  00071E  CFDD F005          	movff	postdec2,strncmp@_l+1
  5118  000722  0EF0               	movlw	low STR_35
  5119  000724  6E06               	movwf	strncmp@_r^0,c
  5120  000726  0EFF               	movlw	high STR_35
  5121  000728  6E07               	movwf	(strncmp@_r+1)^0,c
  5122  00072A  0E00               	movlw	0
  5123  00072C  6E09               	movwf	(strncmp@n+1)^0,c
  5124  00072E  0E02               	movlw	2
  5125  000730  6E08               	movwf	strncmp@n^0,c
  5126  000732  EC32  F026         	call	_strncmp	;wreg free
  5127  000736  5004               	movf	?_strncmp^0,w,c
  5128  000738  1005               	iorwf	(?_strncmp+1)^0,w,c
  5129  00073A  A4D8               	btfss	status,2,c
  5130  00073C  EFA2  F003         	goto	u11731
  5131  000740  EFA4  F003         	goto	u11730
  5132  000744                     u11731:
  5133  000744  EFCD  F003         	goto	l8828
  5134  000748                     u11730:
  5135  000748                     l8822:
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5138  000748  0E02               	movlw	2
  5139  00074A  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5140  00074E  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5141  000752  26DE               	addwf	postinc2,f,c
  5142  000754  0E00               	movlw	0
  5143  000756  22DD               	addwfc	postdec2,f,c
  5144                           
  5145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5146  000758  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5147  00075C  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5148  000760  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5149  000764  0E02               	movlw	2
  5150  000766  26DE               	addwf	postinc2,f,c
  5151  000768  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5152  00076C  0E00               	movlw	0
  5153  00076E  22DD               	addwfc	postdec2,f,c
  5154  000770  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5155  000774  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5156  000778  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  5157  00077C  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  5158  000780  C0C2  F0D5         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5159  000784  C0C3  F0D6         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5160  000788  0100               	movlb	0	; () banked
  5161  00078A  6BD7               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5162  00078C  6BD8               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5163  00078E  6BD9               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5164  000790  6BDA               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5165  000792  6BDB               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5166  000794  6BDC               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5167  000796  EFA7  F002         	goto	l8794
  5168  00079A                     l8828:
  5169                           
  5170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5171  00079A  0E66               	movlw	102
  5172  00079C  0100               	movlb	0	; () banked
  5173  00079E  19D2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5174  0007A0  A4D8               	btfss	status,2,c
  5175  0007A2  EFD5  F003         	goto	u11741
  5176  0007A6  EFD7  F003         	goto	u11740
  5177  0007AA                     u11741:
  5178  0007AA  EF18  F004         	goto	l8840
  5179  0007AE                     u11740:
  5180  0007AE                     
  5181                           ; BSR set to: 0
  5182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5183  0007AE  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5184  0007B2  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5185  0007B6  CFDE FFF6          	movff	postinc2,tblptrl
  5186  0007BA  CFDD FFF7          	movff	postdec2,tblptrh
  5187  0007BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5188  0007BE  6AF8               	clrf	tblptru,c
  5189  0007C0                     	endif
  5190  0007C0                     	if	0	;tblptru may be non-zero
  5191  0007C0                     	endif
  5192  0007C0  0008               	tblrd		*
  5193  0007C2  CFF5 F0DF          	movff	tablat,vfpfcnvrt@c
  5194  0007C6                     
  5195                           ; BSR set to: 0
  5196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5197  0007C6  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5198  0007CA  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5199  0007CE  2ADE               	incf	postinc2,f,c
  5200  0007D0  0E00               	movlw	0
  5201  0007D2  22DD               	addwfc	postdec2,f,c
  5202  0007D4                     
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5205  0007D4  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5206  0007D8  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5207  0007DC  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5208  0007E0  0E04               	movlw	4
  5209  0007E2  26DE               	addwf	postinc2,f,c
  5210  0007E4  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5211  0007E8  0E00               	movlw	0
  5212  0007EA  22DD               	addwfc	postdec2,f,c
  5213  0007EC  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5214  0007F0  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5215  0007F4  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f
  5216  0007F8  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+1
  5217  0007FC  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+2
  5218  000800  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+3
  5219  000804                     l8836:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5223  000804  C0BA  F07B         	movff	vfpfcnvrt@fp,efgtoa@fp
  5224  000808  C0BB  F07C         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5225  00080C  C0CE  F07D         	movff	vfpfcnvrt@f,efgtoa@f
  5226  000810  C0CF  F07E         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5227  000814  C0D0  F07F         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5228  000818  C0D1  F080         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5229  00081C  C0DF  F081         	movff	vfpfcnvrt@c,efgtoa@c
  5230  000820  EC99  F00A         	call	_efgtoa	;wreg free
  5231  000824  C07B  F0BA         	movff	?_efgtoa,?_vfpfcnvrt
  5232  000828  C07C  F0BB         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5233  00082C  EF98  F00A         	goto	l749
  5234  000830                     l8840:
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5238  000830  0ED2               	movlw	low vfpfcnvrt@ct
  5239  000832  6E04               	movwf	strncmp@_l^0,c
  5240  000834  0E00               	movlw	high vfpfcnvrt@ct
  5241  000836  6E05               	movwf	(strncmp@_l+1)^0,c
  5242  000838  0EED               	movlw	low STR_40
  5243  00083A  6E06               	movwf	strncmp@_r^0,c
  5244  00083C  0EFF               	movlw	high STR_40
  5245  00083E  6E07               	movwf	(strncmp@_r+1)^0,c
  5246  000840  0E00               	movlw	0
  5247  000842  6E09               	movwf	(strncmp@n+1)^0,c
  5248  000844  0E02               	movlw	2
  5249  000846  6E08               	movwf	strncmp@n^0,c
  5250  000848  EC32  F026         	call	_strncmp	;wreg free
  5251  00084C  5004               	movf	?_strncmp^0,w,c
  5252  00084E  1005               	iorwf	(?_strncmp+1)^0,w,c
  5253  000850  A4D8               	btfss	status,2,c
  5254  000852  EF2D  F004         	goto	u11751
  5255  000856  EF2F  F004         	goto	u11750
  5256  00085A                     u11751:
  5257  00085A  EFAD  F004         	goto	l8856
  5258  00085E                     u11750:
  5259  00085E                     
  5260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5261  00085E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5262  000862  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5263  000866  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt
  5264  00086A  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+1
  5265  00086E  0E01               	movlw	1
  5266  000870  0100               	movlb	0	; () banked
  5267  000872  27C0               	addwf	??_vfpfcnvrt& (0+255),f,b
  5268  000874  0E00               	movlw	0
  5269  000876  23C1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5270  000878  C0C0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5271  00087C  C0C1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5272  000880                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5273  000880  6AF8               	clrf	tblptru,c
  5274  000882                     	endif
  5275  000882                     	if	0	;tblptru may be non-zero
  5276  000882                     	endif
  5277  000882  0008               	tblrd		*
  5278  000884  CFF5 F0DF          	movff	tablat,vfpfcnvrt@c
  5279  000888  0EBF               	movlw	191
  5280  00088A  6FC0               	movwf	??_vfpfcnvrt& (0+255),b
  5281  00088C  0EFF               	movlw	255
  5282  00088E  6FC1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5283  000890  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5284  000894  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5285  000898  CFDE FFF6          	movff	postinc2,tblptrl
  5286  00089C  CFDD FFF7          	movff	postdec2,tblptrh
  5287  0008A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5288  0008A0  6AF8               	clrf	tblptru,c
  5289  0008A2                     	endif
  5290  0008A2                     	if	0	;tblptru may be non-zero
  5291  0008A2                     	endif
  5292  0008A2  0008               	tblrd		*
  5293  0008A4  50F5               	movf	tablat,w,c
  5294  0008A6  6FC2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5295  0008A8  6BC3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5296  0008AA  51C0               	movf	??_vfpfcnvrt& (0+255),w,b
  5297  0008AC  27C2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5298  0008AE  51C1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5299  0008B0  23C3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5300  0008B2  51C3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5301  0008B4  E10A               	bnz	u11760
  5302  0008B6  0E1A               	movlw	26
  5303  0008B8  5DC2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5304  0008BA  A0D8               	btfss	status,0,c
  5305  0008BC  EF62  F004         	goto	u11761
  5306  0008C0  EF65  F004         	goto	u11760
  5307  0008C4                     u11761:
  5308  0008C4  0E01               	movlw	1
  5309  0008C6  EF66  F004         	goto	u11770
  5310  0008CA                     u11760:
  5311  0008CA  0E00               	movlw	0
  5312  0008CC                     u11770:
  5313  0008CC  6FCC               	movwf	_vfpfcnvrt$1416& (0+255),b
  5314  0008CE  6BCD               	clrf	(_vfpfcnvrt$1416+1)& (0+255),b
  5315  0008D0                     
  5316                           ; BSR set to: 0
  5317  0008D0  51CC               	movf	_vfpfcnvrt$1416& (0+255),w,b
  5318  0008D2  11CD               	iorwf	(_vfpfcnvrt$1416+1)& (0+255),w,b
  5319  0008D4  B4D8               	btfsc	status,2,c
  5320  0008D6  EF6F  F004         	goto	u11781
  5321  0008DA  EF71  F004         	goto	u11780
  5322  0008DE                     u11781:
  5323  0008DE  EF8B  F004         	goto	l8850
  5324  0008E2                     u11780:
  5325  0008E2                     
  5326                           ; BSR set to: 0
  5327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5328  0008E2  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5329  0008E6  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5330  0008EA  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5331  0008EE  0E04               	movlw	4
  5332  0008F0  26DE               	addwf	postinc2,f,c
  5333  0008F2  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5334  0008F6  0E00               	movlw	0
  5335  0008F8  22DD               	addwfc	postdec2,f,c
  5336  0008FA  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5337  0008FE  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5338  000902  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f
  5339  000906  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+1
  5340  00090A  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+2
  5341  00090E  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+3
  5342                           
  5343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5344  000912  EFA3  F004         	goto	l769
  5345  000916                     l8850:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5349  000916  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5350  00091A  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5351  00091E  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5352  000922  0E04               	movlw	4
  5353  000924  26DE               	addwf	postinc2,f,c
  5354  000926  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5355  00092A  0E00               	movlw	0
  5356  00092C  22DD               	addwfc	postdec2,f,c
  5357  00092E  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5358  000932  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5359  000936  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f
  5360  00093A  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+1
  5361  00093E  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+2
  5362  000942  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+3
  5363  000946                     l769:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5367  000946  0E02               	movlw	2
  5368  000948  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5369  00094C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5370  000950  26DE               	addwf	postinc2,f,c
  5371  000952  0E00               	movlw	0
  5372  000954  22DD               	addwfc	postdec2,f,c
  5373  000956  EF02  F004         	goto	l8836
  5374  00095A                     l8856:
  5375                           
  5376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5377  00095A  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5378  00095E  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5379  000962  CFDE F004          	movff	postinc2,strncmp@_l
  5380  000966  CFDD F005          	movff	postdec2,strncmp@_l+1
  5381  00096A  0EDB               	movlw	low STR_45
  5382  00096C  6E06               	movwf	strncmp@_r^0,c
  5383  00096E  0EFF               	movlw	high STR_45
  5384  000970  6E07               	movwf	(strncmp@_r+1)^0,c
  5385  000972  0E00               	movlw	0
  5386  000974  6E09               	movwf	(strncmp@n+1)^0,c
  5387  000976  0E03               	movlw	3
  5388  000978  6E08               	movwf	strncmp@n^0,c
  5389  00097A  EC32  F026         	call	_strncmp	;wreg free
  5390  00097E  5004               	movf	?_strncmp^0,w,c
  5391  000980  1005               	iorwf	(?_strncmp+1)^0,w,c
  5392  000982  A4D8               	btfss	status,2,c
  5393  000984  EFC6  F004         	goto	u11791
  5394  000988  EFC8  F004         	goto	u11790
  5395  00098C                     u11791:
  5396  00098C  EF08  F005         	goto	l8864
  5397  000990                     u11790:
  5398  000990                     
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5400  000990  0E03               	movlw	3
  5401  000992  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5402  000996  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5403  00099A  26DE               	addwf	postinc2,f,c
  5404  00099C  0E00               	movlw	0
  5405  00099E  22DD               	addwfc	postdec2,f,c
  5406                           
  5407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5408  0009A0  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5409  0009A4  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5410  0009A8  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5411  0009AC  0E02               	movlw	2
  5412  0009AE  26DE               	addwf	postinc2,f,c
  5413  0009B0  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5414  0009B4  0E00               	movlw	0
  5415  0009B6  22DD               	addwfc	postdec2,f,c
  5416  0009B8  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5417  0009BC  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5418  0009C0  50DF               	movf	indf2,w,c
  5419  0009C2  0100               	movlb	0	; () banked
  5420  0009C4  6FC2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5421  0009C6  51C2               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5422  0009C8  6FE0               	movwf	vfpfcnvrt@llu& (0+255),b
  5423  0009CA  6BE1               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5424  0009CC  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5425  0009CE  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5426  0009D0  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5427  0009D2  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5428  0009D4  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5429  0009D6  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5430  0009D8                     l8860:
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5434  0009D8  C0BA  F01F         	movff	vfpfcnvrt@fp,otoa@fp
  5435  0009DC  C0BB  F020         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5436  0009E0  C0E0  F021         	movff	vfpfcnvrt@llu,otoa@d
  5437  0009E4  C0E1  F022         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5438  0009E8  C0E2  F023         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5439  0009EC  C0E3  F024         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5440  0009F0  C0E4  F025         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5441  0009F4  C0E5  F026         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5442  0009F8  C0E6  F027         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5443  0009FC  C0E7  F028         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5444  000A00  EC69  F01F         	call	_otoa	;wreg free
  5445  000A04  C01F  F0BA         	movff	?_otoa,?_vfpfcnvrt
  5446  000A08  C020  F0BB         	movff	?_otoa+1,?_vfpfcnvrt+1
  5447  000A0C  EF98  F00A         	goto	l749
  5448  000A10                     l8864:
  5449                           
  5450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5451  000A10  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5452  000A14  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5453  000A18  CFDE F004          	movff	postinc2,strncmp@_l
  5454  000A1C  CFDD F005          	movff	postdec2,strncmp@_l+1
  5455  000A20  0EDC               	movlw	low (STR_45+1)
  5456  000A22  6E06               	movwf	strncmp@_r^0,c
  5457  000A24  0EFF               	movlw	high (STR_45+1)
  5458  000A26  6E07               	movwf	(strncmp@_r+1)^0,c
  5459  000A28  0E00               	movlw	0
  5460  000A2A  6E09               	movwf	(strncmp@n+1)^0,c
  5461  000A2C  0E02               	movlw	2
  5462  000A2E  6E08               	movwf	strncmp@n^0,c
  5463  000A30  EC32  F026         	call	_strncmp	;wreg free
  5464  000A34  5004               	movf	?_strncmp^0,w,c
  5465  000A36  1005               	iorwf	(?_strncmp+1)^0,w,c
  5466  000A38  A4D8               	btfss	status,2,c
  5467  000A3A  EF21  F005         	goto	u11801
  5468  000A3E  EF23  F005         	goto	u11800
  5469  000A42                     u11801:
  5470  000A42  EF4C  F005         	goto	l8872
  5471  000A46                     u11800:
  5472  000A46                     
  5473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5474  000A46  0E02               	movlw	2
  5475  000A48  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5476  000A4C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5477  000A50  26DE               	addwf	postinc2,f,c
  5478  000A52  0E00               	movlw	0
  5479  000A54  22DD               	addwfc	postdec2,f,c
  5480                           
  5481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5482  000A56  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5483  000A5A  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5484  000A5E  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5485  000A62  0E02               	movlw	2
  5486  000A64  26DE               	addwf	postinc2,f,c
  5487  000A66  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5488  000A6A  0E00               	movlw	0
  5489  000A6C  22DD               	addwfc	postdec2,f,c
  5490  000A6E  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5491  000A72  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5492  000A76  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  5493  000A7A  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  5494  000A7E  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5495  000A82  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5496  000A86  0100               	movlb	0	; () banked
  5497  000A88  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5498  000A8A  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5499  000A8C  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5500  000A8E  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5501  000A90  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5502  000A92  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5503  000A94  EFEC  F004         	goto	l8860
  5504  000A98                     l8872:
  5505                           
  5506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5507  000A98  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5508  000A9C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5509  000AA0  CFDE FFF6          	movff	postinc2,tblptrl
  5510  000AA4  CFDD FFF7          	movff	postdec2,tblptrh
  5511  000AA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5512  000AA8  6AF8               	clrf	tblptru,c
  5513  000AAA                     	endif
  5514  000AAA                     	if	0	;tblptru may be non-zero
  5515  000AAA                     	endif
  5516  000AAA  0008               	tblrd		*
  5517  000AAC  50F5               	movf	tablat,w,c
  5518  000AAE  0A6F               	xorlw	111
  5519  000AB0  A4D8               	btfss	status,2,c
  5520  000AB2  EF5D  F005         	goto	u11811
  5521  000AB6  EF5F  F005         	goto	u11810
  5522  000ABA                     u11811:
  5523  000ABA  EF87  F005         	goto	l8880
  5524  000ABE                     u11810:
  5525  000ABE                     
  5526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5527  000ABE  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5528  000AC2  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5529  000AC6  2ADE               	incf	postinc2,f,c
  5530  000AC8  0E00               	movlw	0
  5531  000ACA  22DD               	addwfc	postdec2,f,c
  5532                           
  5533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5534  000ACC  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5535  000AD0  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5536  000AD4  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5537  000AD8  0E02               	movlw	2
  5538  000ADA  26DE               	addwf	postinc2,f,c
  5539  000ADC  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5540  000AE0  0E00               	movlw	0
  5541  000AE2  22DD               	addwfc	postdec2,f,c
  5542  000AE4  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5543  000AE8  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5544  000AEC  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  5545  000AF0  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  5546  000AF4  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5547  000AF8  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5548  000AFC  0100               	movlb	0	; () banked
  5549  000AFE  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5550  000B00  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5551  000B02  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5552  000B04  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5553  000B06  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5554  000B08  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5555  000B0A  EFEC  F004         	goto	l8860
  5556  000B0E                     l8880:
  5557                           
  5558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5559  000B0E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5560  000B12  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5561  000B16  CFDE F004          	movff	postinc2,strncmp@_l
  5562  000B1A  CFDD F005          	movff	postdec2,strncmp@_l+1
  5563  000B1E  0EF6               	movlw	low STR_55
  5564  000B20  6E06               	movwf	strncmp@_r^0,c
  5565  000B22  0EFF               	movlw	high STR_55
  5566  000B24  6E07               	movwf	(strncmp@_r+1)^0,c
  5567  000B26  0E00               	movlw	0
  5568  000B28  6E09               	movwf	(strncmp@n+1)^0,c
  5569  000B2A  0E02               	movlw	2
  5570  000B2C  6E08               	movwf	strncmp@n^0,c
  5571  000B2E  EC32  F026         	call	_strncmp	;wreg free
  5572  000B32  5004               	movf	?_strncmp^0,w,c
  5573  000B34  1005               	iorwf	(?_strncmp+1)^0,w,c
  5574  000B36  A4D8               	btfss	status,2,c
  5575  000B38  EFA0  F005         	goto	u11821
  5576  000B3C  EFA2  F005         	goto	u11820
  5577  000B40                     u11821:
  5578  000B40  EFCB  F005         	goto	l8888
  5579  000B44                     u11820:
  5580  000B44                     
  5581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5582  000B44  0E02               	movlw	2
  5583  000B46  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5584  000B4A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5585  000B4E  26DE               	addwf	postinc2,f,c
  5586  000B50  0E00               	movlw	0
  5587  000B52  22DD               	addwfc	postdec2,f,c
  5588                           
  5589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5590  000B54  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5591  000B58  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5592  000B5C  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5593  000B60  0E02               	movlw	2
  5594  000B62  26DE               	addwf	postinc2,f,c
  5595  000B64  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5596  000B68  0E00               	movlw	0
  5597  000B6A  22DD               	addwfc	postdec2,f,c
  5598  000B6C  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5599  000B70  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5600  000B74  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  5601  000B78  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  5602  000B7C  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5603  000B80  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5604  000B84  0100               	movlb	0	; () banked
  5605  000B86  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5606  000B88  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5607  000B8A  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5608  000B8C  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5609  000B8E  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5610  000B90  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5611  000B92  EFEC  F004         	goto	l8860
  5612  000B96                     l8888:
  5613                           
  5614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5615  000B96  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5616  000B9A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5617  000B9E  CFDE F004          	movff	postinc2,strncmp@_l
  5618  000BA2  CFDD F005          	movff	postdec2,strncmp@_l+1
  5619  000BA6  0ED7               	movlw	low STR_60
  5620  000BA8  6E06               	movwf	strncmp@_r^0,c
  5621  000BAA  0EFF               	movlw	high STR_60
  5622  000BAC  6E07               	movwf	(strncmp@_r+1)^0,c
  5623  000BAE  0E00               	movlw	0
  5624  000BB0  6E09               	movwf	(strncmp@n+1)^0,c
  5625  000BB2  0E03               	movlw	3
  5626  000BB4  6E08               	movwf	strncmp@n^0,c
  5627  000BB6  EC32  F026         	call	_strncmp	;wreg free
  5628  000BBA  5004               	movf	?_strncmp^0,w,c
  5629  000BBC  1005               	iorwf	(?_strncmp+1)^0,w,c
  5630  000BBE  A4D8               	btfss	status,2,c
  5631  000BC0  EFE4  F005         	goto	u11831
  5632  000BC4  EFE6  F005         	goto	u11830
  5633  000BC8                     u11831:
  5634  000BC8  EF0F  F006         	goto	l8898
  5635  000BCC                     u11830:
  5636  000BCC                     
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5638  000BCC  0E03               	movlw	3
  5639  000BCE  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5640  000BD2  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5641  000BD6  26DE               	addwf	postinc2,f,c
  5642  000BD8  0E00               	movlw	0
  5643  000BDA  22DD               	addwfc	postdec2,f,c
  5644                           
  5645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5646  000BDC  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5647  000BE0  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5648  000BE4  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5649  000BE8  0E02               	movlw	2
  5650  000BEA  26DE               	addwf	postinc2,f,c
  5651  000BEC  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5652  000BF0  0E00               	movlw	0
  5653  000BF2  22DD               	addwfc	postdec2,f,c
  5654  000BF4  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5655  000BF8  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5656  000BFC  CFDE F0DD          	movff	postinc2,vfpfcnvrt@vp
  5657  000C00  CFDD F0DE          	movff	postdec2,vfpfcnvrt@vp+1
  5658  000C04                     
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5660  000C04  C0DD  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5661  000C08  C0DE  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5662  000C0C  C11A  FFDF         	movff	_nout,indf2
  5663  000C10                     l8894:
  5664                           
  5665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5666  000C10  0E00               	movlw	0
  5667  000C12  0100               	movlb	0	; () banked
  5668  000C14  6FBB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5669  000C16  0E00               	movlw	0
  5670  000C18  6FBA               	movwf	?_vfpfcnvrt& (0+255),b
  5671  000C1A  EF98  F00A         	goto	l749
  5672  000C1E                     l8898:
  5673                           
  5674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5675  000C1E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5676  000C22  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5677  000C26  CFDE F004          	movff	postinc2,strncmp@_l
  5678  000C2A  CFDD F005          	movff	postdec2,strncmp@_l+1
  5679  000C2E  0ED8               	movlw	low (STR_60+1)
  5680  000C30  6E06               	movwf	strncmp@_r^0,c
  5681  000C32  0EFF               	movlw	high (STR_60+1)
  5682  000C34  6E07               	movwf	(strncmp@_r+1)^0,c
  5683  000C36  0E00               	movlw	0
  5684  000C38  6E09               	movwf	(strncmp@n+1)^0,c
  5685  000C3A  0E02               	movlw	2
  5686  000C3C  6E08               	movwf	strncmp@n^0,c
  5687  000C3E  EC32  F026         	call	_strncmp	;wreg free
  5688  000C42  5004               	movf	?_strncmp^0,w,c
  5689  000C44  1005               	iorwf	(?_strncmp+1)^0,w,c
  5690  000C46  A4D8               	btfss	status,2,c
  5691  000C48  EF28  F006         	goto	u11841
  5692  000C4C  EF2A  F006         	goto	u11840
  5693  000C50                     u11841:
  5694  000C50  EF50  F006         	goto	l8908
  5695  000C54                     u11840:
  5696  000C54                     
  5697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5698  000C54  0E02               	movlw	2
  5699  000C56  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5700  000C5A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5701  000C5E  26DE               	addwf	postinc2,f,c
  5702  000C60  0E00               	movlw	0
  5703  000C62  22DD               	addwfc	postdec2,f,c
  5704                           
  5705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5706  000C64  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5707  000C68  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5708  000C6C  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5709  000C70  0E02               	movlw	2
  5710  000C72  26DE               	addwf	postinc2,f,c
  5711  000C74  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5712  000C78  0E00               	movlw	0
  5713  000C7A  22DD               	addwfc	postdec2,f,c
  5714  000C7C  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5715  000C80  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5716  000C84  CFDE F0DD          	movff	postinc2,vfpfcnvrt@vp
  5717  000C88  CFDD F0DE          	movff	postdec2,vfpfcnvrt@vp+1
  5718  000C8C                     
  5719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5720  000C8C  C0DD  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5721  000C90  C0DE  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5722  000C94  C11A  FFDE         	movff	_nout,postinc2
  5723  000C98  C11B  FFDD         	movff	_nout+1,postdec2
  5724  000C9C  EF08  F006         	goto	l8894
  5725  000CA0                     l8908:
  5726                           
  5727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5728  000CA0  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5729  000CA4  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5730  000CA8  CFDE FFF6          	movff	postinc2,tblptrl
  5731  000CAC  CFDD FFF7          	movff	postdec2,tblptrh
  5732  000CB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5733  000CB0  6AF8               	clrf	tblptru,c
  5734  000CB2                     	endif
  5735  000CB2                     	if	0	;tblptru may be non-zero
  5736  000CB2                     	endif
  5737  000CB2  0008               	tblrd		*
  5738  000CB4  50F5               	movf	tablat,w,c
  5739  000CB6  0A6E               	xorlw	110
  5740  000CB8  A4D8               	btfss	status,2,c
  5741  000CBA  EF61  F006         	goto	u11851
  5742  000CBE  EF63  F006         	goto	u11850
  5743  000CC2                     u11851:
  5744  000CC2  EF88  F006         	goto	l8918
  5745  000CC6                     u11850:
  5746  000CC6                     
  5747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5748  000CC6  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5749  000CCA  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5750  000CCE  2ADE               	incf	postinc2,f,c
  5751  000CD0  0E00               	movlw	0
  5752  000CD2  22DD               	addwfc	postdec2,f,c
  5753                           
  5754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5755  000CD4  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5756  000CD8  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5757  000CDC  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5758  000CE0  0E02               	movlw	2
  5759  000CE2  26DE               	addwf	postinc2,f,c
  5760  000CE4  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5761  000CE8  0E00               	movlw	0
  5762  000CEA  22DD               	addwfc	postdec2,f,c
  5763  000CEC  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5764  000CF0  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5765  000CF4  CFDE F0DD          	movff	postinc2,vfpfcnvrt@vp
  5766  000CF8  CFDD F0DE          	movff	postdec2,vfpfcnvrt@vp+1
  5767  000CFC                     
  5768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5769  000CFC  C0DD  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5770  000D00  C0DE  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5771  000D04  C11A  FFDE         	movff	_nout,postinc2
  5772  000D08  C11B  FFDD         	movff	_nout+1,postdec2
  5773  000D0C  EF08  F006         	goto	l8894
  5774  000D10                     l8918:
  5775                           
  5776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5777  000D10  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5778  000D14  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5779  000D18  CFDE F004          	movff	postinc2,strncmp@_l
  5780  000D1C  CFDD F005          	movff	postdec2,strncmp@_l+1
  5781  000D20  0EF3               	movlw	low STR_70
  5782  000D22  6E06               	movwf	strncmp@_r^0,c
  5783  000D24  0EFF               	movlw	high STR_70
  5784  000D26  6E07               	movwf	(strncmp@_r+1)^0,c
  5785  000D28  0E00               	movlw	0
  5786  000D2A  6E09               	movwf	(strncmp@n+1)^0,c
  5787  000D2C  0E02               	movlw	2
  5788  000D2E  6E08               	movwf	strncmp@n^0,c
  5789  000D30  EC32  F026         	call	_strncmp	;wreg free
  5790  000D34  5004               	movf	?_strncmp^0,w,c
  5791  000D36  1005               	iorwf	(?_strncmp+1)^0,w,c
  5792  000D38  A4D8               	btfss	status,2,c
  5793  000D3A  EFA1  F006         	goto	u11861
  5794  000D3E  EFA3  F006         	goto	u11860
  5795  000D42                     u11861:
  5796  000D42  EFC9  F006         	goto	l8928
  5797  000D46                     u11860:
  5798  000D46                     
  5799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5800  000D46  0E02               	movlw	2
  5801  000D48  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5802  000D4C  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5803  000D50  26DE               	addwf	postinc2,f,c
  5804  000D52  0E00               	movlw	0
  5805  000D54  22DD               	addwfc	postdec2,f,c
  5806                           
  5807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5808  000D56  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5809  000D5A  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5810  000D5E  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5811  000D62  0E02               	movlw	2
  5812  000D64  26DE               	addwf	postinc2,f,c
  5813  000D66  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5814  000D6A  0E00               	movlw	0
  5815  000D6C  22DD               	addwfc	postdec2,f,c
  5816  000D6E  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5817  000D72  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5818  000D76  CFDE F0DD          	movff	postinc2,vfpfcnvrt@vp
  5819  000D7A  CFDD F0DE          	movff	postdec2,vfpfcnvrt@vp+1
  5820  000D7E                     
  5821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5822  000D7E  C0DD  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5823  000D82  C0DE  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5824  000D86  C11A  FFDE         	movff	_nout,postinc2
  5825  000D8A  C11B  FFDD         	movff	_nout+1,postdec2
  5826  000D8E  EF08  F006         	goto	l8894
  5827  000D92                     l8928:
  5828                           
  5829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5830  000D92  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5831  000D96  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5832  000D9A  CFDE FFF6          	movff	postinc2,tblptrl
  5833  000D9E  CFDD FFF7          	movff	postdec2,tblptrh
  5834  000DA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5835  000DA2  6AF8               	clrf	tblptru,c
  5836  000DA4                     	endif
  5837  000DA4                     	if	0	;tblptru may be non-zero
  5838  000DA4                     	endif
  5839  000DA4  0008               	tblrd		*
  5840  000DA6  50F5               	movf	tablat,w,c
  5841  000DA8  0A70               	xorlw	112
  5842  000DAA  A4D8               	btfss	status,2,c
  5843  000DAC  EFDA  F006         	goto	u11871
  5844  000DB0  EFDC  F006         	goto	u11870
  5845  000DB4                     u11871:
  5846  000DB4  EF20  F007         	goto	l8936
  5847  000DB8                     u11870:
  5848  000DB8                     
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5850  000DB8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5851  000DBC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5852  000DC0  2ADE               	incf	postinc2,f,c
  5853  000DC2  0E00               	movlw	0
  5854  000DC4  22DD               	addwfc	postdec2,f,c
  5855                           
  5856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5857  000DC6  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5858  000DCA  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5859  000DCE  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5860  000DD2  0E02               	movlw	2
  5861  000DD4  26DE               	addwf	postinc2,f,c
  5862  000DD6  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5863  000DDA  0E00               	movlw	0
  5864  000DDC  22DD               	addwfc	postdec2,f,c
  5865  000DDE  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5866  000DE2  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5867  000DE6  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  5868  000DEA  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  5869  000DEE  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5870  000DF2  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5871  000DF6  0100               	movlb	0	; () banked
  5872  000DF8  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5873  000DFA  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5874  000DFC  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5875  000DFE  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5876  000E00  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5877  000E02  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5878  000E04                     
  5879                           ; BSR set to: 0
  5880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5881  000E04  C0BA  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  5882  000E08  C0BB  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5883  000E0C  C0E0  F021         	movff	vfpfcnvrt@llu,xtoa@d
  5884  000E10  C0E1  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5885  000E14  C0E2  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5886  000E18  C0E3  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5887  000E1C  C0E4  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5888  000E20  C0E5  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5889  000E24  C0E6  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5890  000E28  C0E7  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5891  000E2C  0E78               	movlw	120
  5892  000E2E  6E29               	movwf	xtoa@x^0,c
  5893  000E30  ECEE  F01B         	call	_xtoa	;wreg free
  5894  000E34  C01F  F0BA         	movff	?_xtoa,?_vfpfcnvrt
  5895  000E38  C020  F0BB         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5896  000E3C  EF98  F00A         	goto	l749
  5897  000E40                     l8936:
  5898                           
  5899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5900  000E40  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5901  000E44  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5902  000E48  CFDE FFF6          	movff	postinc2,tblptrl
  5903  000E4C  CFDD FFF7          	movff	postdec2,tblptrh
  5904  000E50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5905  000E50  6AF8               	clrf	tblptru,c
  5906  000E52                     	endif
  5907  000E52                     	if	0	;tblptru may be non-zero
  5908  000E52                     	endif
  5909  000E52  0008               	tblrd		*
  5910  000E54  50F5               	movf	tablat,w,c
  5911  000E56  0A73               	xorlw	115
  5912  000E58  A4D8               	btfss	status,2,c
  5913  000E5A  EF31  F007         	goto	u11881
  5914  000E5E  EF33  F007         	goto	u11880
  5915  000E62                     u11881:
  5916  000E62  EF5E  F007         	goto	l8944
  5917  000E66                     u11880:
  5918  000E66                     
  5919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5920  000E66  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5921  000E6A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5922  000E6E  2ADE               	incf	postinc2,f,c
  5923  000E70  0E00               	movlw	0
  5924  000E72  22DD               	addwfc	postdec2,f,c
  5925                           
  5926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5927  000E74  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5928  000E78  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5929  000E7C  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5930  000E80  0E02               	movlw	2
  5931  000E82  26DE               	addwf	postinc2,f,c
  5932  000E84  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5933  000E88  0E00               	movlw	0
  5934  000E8A  22DD               	addwfc	postdec2,f,c
  5935  000E8C  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5936  000E90  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5937  000E94  CFDE F0C4          	movff	postinc2,vfpfcnvrt@cp
  5938  000E98  CFDD F0C5          	movff	postdec2,vfpfcnvrt@cp+1
  5939  000E9C                     
  5940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5941  000E9C  C0BA  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  5942  000EA0  C0BB  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5943  000EA4  C0C4  F00F         	movff	vfpfcnvrt@cp,stoa@s
  5944  000EA8  C0C5  F010         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5945  000EAC  ECCC  F022         	call	_stoa	;wreg free
  5946  000EB0  C00D  F0BA         	movff	?_stoa,?_vfpfcnvrt
  5947  000EB4  C00E  F0BB         	movff	?_stoa+1,?_vfpfcnvrt+1
  5948  000EB8  EF98  F00A         	goto	l749
  5949  000EBC                     l8944:
  5950                           
  5951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5952  000EBC  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5953  000EC0  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5954  000EC4  CFDE F004          	movff	postinc2,strncmp@_l
  5955  000EC8  CFDD F005          	movff	postdec2,strncmp@_l+1
  5956  000ECC  0EDF               	movlw	low STR_75
  5957  000ECE  6E06               	movwf	strncmp@_r^0,c
  5958  000ED0  0EFF               	movlw	high STR_75
  5959  000ED2  6E07               	movwf	(strncmp@_r+1)^0,c
  5960  000ED4  0E00               	movlw	0
  5961  000ED6  6E09               	movwf	(strncmp@n+1)^0,c
  5962  000ED8  0E03               	movlw	3
  5963  000EDA  6E08               	movwf	strncmp@n^0,c
  5964  000EDC  EC32  F026         	call	_strncmp	;wreg free
  5965  000EE0  5004               	movf	?_strncmp^0,w,c
  5966  000EE2  1005               	iorwf	(?_strncmp+1)^0,w,c
  5967  000EE4  A4D8               	btfss	status,2,c
  5968  000EE6  EF77  F007         	goto	u11891
  5969  000EEA  EF79  F007         	goto	u11890
  5970  000EEE                     u11891:
  5971  000EEE  EFB9  F007         	goto	l8952
  5972  000EF2                     u11890:
  5973  000EF2                     
  5974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5975  000EF2  0E03               	movlw	3
  5976  000EF4  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5977  000EF8  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5978  000EFC  26DE               	addwf	postinc2,f,c
  5979  000EFE  0E00               	movlw	0
  5980  000F00  22DD               	addwfc	postdec2,f,c
  5981                           
  5982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5983  000F02  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5984  000F06  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5985  000F0A  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  5986  000F0E  0E02               	movlw	2
  5987  000F10  26DE               	addwf	postinc2,f,c
  5988  000F12  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  5989  000F16  0E00               	movlw	0
  5990  000F18  22DD               	addwfc	postdec2,f,c
  5991  000F1A  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5992  000F1E  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5993  000F22  50DF               	movf	indf2,w,c
  5994  000F24  0100               	movlb	0	; () banked
  5995  000F26  6FC2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5996  000F28  51C2               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5997  000F2A  6FE0               	movwf	vfpfcnvrt@llu& (0+255),b
  5998  000F2C  6BE1               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5999  000F2E  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6000  000F30  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6001  000F32  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6002  000F34  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6003  000F36  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6004  000F38  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6005  000F3A                     l8948:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  6009  000F3A  C0BA  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  6010  000F3E  C0BB  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6011  000F42  C0E0  F021         	movff	vfpfcnvrt@llu,utoa@d
  6012  000F46  C0E1  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6013  000F4A  C0E2  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6014  000F4E  C0E3  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6015  000F52  C0E4  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6016  000F56  C0E5  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6017  000F5A  C0E6  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6018  000F5E  C0E7  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6019  000F62  EC67  F01E         	call	_utoa	;wreg free
  6020  000F66  C01F  F0BA         	movff	?_utoa,?_vfpfcnvrt
  6021  000F6A  C020  F0BB         	movff	?_utoa+1,?_vfpfcnvrt+1
  6022  000F6E  EF98  F00A         	goto	l749
  6023  000F72                     l8952:
  6024                           
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  6026  000F72  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6027  000F76  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6028  000F7A  CFDE F004          	movff	postinc2,strncmp@_l
  6029  000F7E  CFDD F005          	movff	postdec2,strncmp@_l+1
  6030  000F82  0EE0               	movlw	low (STR_75+1)
  6031  000F84  6E06               	movwf	strncmp@_r^0,c
  6032  000F86  0EFF               	movlw	high (STR_75+1)
  6033  000F88  6E07               	movwf	(strncmp@_r+1)^0,c
  6034  000F8A  0E00               	movlw	0
  6035  000F8C  6E09               	movwf	(strncmp@n+1)^0,c
  6036  000F8E  0E02               	movlw	2
  6037  000F90  6E08               	movwf	strncmp@n^0,c
  6038  000F92  EC32  F026         	call	_strncmp	;wreg free
  6039  000F96  5004               	movf	?_strncmp^0,w,c
  6040  000F98  1005               	iorwf	(?_strncmp+1)^0,w,c
  6041  000F9A  A4D8               	btfss	status,2,c
  6042  000F9C  EFD2  F007         	goto	u11901
  6043  000FA0  EFD4  F007         	goto	u11900
  6044  000FA4                     u11901:
  6045  000FA4  EFFD  F007         	goto	l8960
  6046  000FA8                     u11900:
  6047  000FA8                     
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  6049  000FA8  0E02               	movlw	2
  6050  000FAA  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6051  000FAE  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6052  000FB2  26DE               	addwf	postinc2,f,c
  6053  000FB4  0E00               	movlw	0
  6054  000FB6  22DD               	addwfc	postdec2,f,c
  6055                           
  6056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6057  000FB8  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6058  000FBC  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6059  000FC0  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  6060  000FC4  0E02               	movlw	2
  6061  000FC6  26DE               	addwf	postinc2,f,c
  6062  000FC8  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  6063  000FCC  0E00               	movlw	0
  6064  000FCE  22DD               	addwfc	postdec2,f,c
  6065  000FD0  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6066  000FD4  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6067  000FD8  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  6068  000FDC  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  6069  000FE0  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6070  000FE4  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6071  000FE8  0100               	movlb	0	; () banked
  6072  000FEA  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6073  000FEC  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6074  000FEE  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6075  000FF0  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6076  000FF2  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6077  000FF4  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6078  000FF6  EF9D  F007         	goto	l8948
  6079  000FFA                     l8960:
  6080                           
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6082  000FFA  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6083  000FFE  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6084  001002  CFDE FFF6          	movff	postinc2,tblptrl
  6085  001006  CFDD FFF7          	movff	postdec2,tblptrh
  6086  00100A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6087  00100A  6AF8               	clrf	tblptru,c
  6088  00100C                     	endif
  6089  00100C                     	if	0	;tblptru may be non-zero
  6090  00100C                     	endif
  6091  00100C  0008               	tblrd		*
  6092  00100E  50F5               	movf	tablat,w,c
  6093  001010  0A75               	xorlw	117
  6094  001012  A4D8               	btfss	status,2,c
  6095  001014  EF0E  F008         	goto	u11911
  6096  001018  EF10  F008         	goto	u11910
  6097  00101C                     u11911:
  6098  00101C  EF38  F008         	goto	l8968
  6099  001020                     u11910:
  6100  001020                     
  6101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6102  001020  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6103  001024  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6104  001028  2ADE               	incf	postinc2,f,c
  6105  00102A  0E00               	movlw	0
  6106  00102C  22DD               	addwfc	postdec2,f,c
  6107                           
  6108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6109  00102E  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6110  001032  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6111  001036  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  6112  00103A  0E02               	movlw	2
  6113  00103C  26DE               	addwf	postinc2,f,c
  6114  00103E  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  6115  001042  0E00               	movlw	0
  6116  001044  22DD               	addwfc	postdec2,f,c
  6117  001046  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6118  00104A  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6119  00104E  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  6120  001052  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  6121  001056  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6122  00105A  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6123  00105E  0100               	movlb	0	; () banked
  6124  001060  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6125  001062  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6126  001064  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6127  001066  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6128  001068  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6129  00106A  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6130  00106C  EF9D  F007         	goto	l8948
  6131  001070                     l8968:
  6132                           
  6133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6134  001070  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6135  001074  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6136  001078  CFDE F004          	movff	postinc2,strncmp@_l
  6137  00107C  CFDD F005          	movff	postdec2,strncmp@_l+1
  6138  001080  0EF9               	movlw	low STR_85
  6139  001082  6E06               	movwf	strncmp@_r^0,c
  6140  001084  0EFF               	movlw	high STR_85
  6141  001086  6E07               	movwf	(strncmp@_r+1)^0,c
  6142  001088  0E00               	movlw	0
  6143  00108A  6E09               	movwf	(strncmp@n+1)^0,c
  6144  00108C  0E02               	movlw	2
  6145  00108E  6E08               	movwf	strncmp@n^0,c
  6146  001090  EC32  F026         	call	_strncmp	;wreg free
  6147  001094  5004               	movf	?_strncmp^0,w,c
  6148  001096  1005               	iorwf	(?_strncmp+1)^0,w,c
  6149  001098  A4D8               	btfss	status,2,c
  6150  00109A  EF51  F008         	goto	u11921
  6151  00109E  EF53  F008         	goto	u11920
  6152  0010A2                     u11921:
  6153  0010A2  EF7C  F008         	goto	l8976
  6154  0010A6                     u11920:
  6155  0010A6                     
  6156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6157  0010A6  0E02               	movlw	2
  6158  0010A8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6159  0010AC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6160  0010B0  26DE               	addwf	postinc2,f,c
  6161  0010B2  0E00               	movlw	0
  6162  0010B4  22DD               	addwfc	postdec2,f,c
  6163                           
  6164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6165  0010B6  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6166  0010BA  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6167  0010BE  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  6168  0010C2  0E02               	movlw	2
  6169  0010C4  26DE               	addwf	postinc2,f,c
  6170  0010C6  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  6171  0010CA  0E00               	movlw	0
  6172  0010CC  22DD               	addwfc	postdec2,f,c
  6173  0010CE  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6174  0010D2  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6175  0010D6  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  6176  0010DA  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  6177  0010DE  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6178  0010E2  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6179  0010E6  0100               	movlb	0	; () banked
  6180  0010E8  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6181  0010EA  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6182  0010EC  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6183  0010EE  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6184  0010F0  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6185  0010F2  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6186  0010F4  EF9D  F007         	goto	l8948
  6187  0010F8                     l8976:
  6188                           
  6189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6190  0010F8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6191  0010FC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6192  001100  CFDE F004          	movff	postinc2,strncmp@_l
  6193  001104  CFDD F005          	movff	postdec2,strncmp@_l+1
  6194  001108  0EE3               	movlw	low STR_90
  6195  00110A  6E06               	movwf	strncmp@_r^0,c
  6196  00110C  0EFF               	movlw	high STR_90
  6197  00110E  6E07               	movwf	(strncmp@_r+1)^0,c
  6198  001110  0E00               	movlw	0
  6199  001112  6E09               	movwf	(strncmp@n+1)^0,c
  6200  001114  0E03               	movlw	3
  6201  001116  6E08               	movwf	strncmp@n^0,c
  6202  001118  EC32  F026         	call	_strncmp	;wreg free
  6203  00111C  5004               	movf	?_strncmp^0,w,c
  6204  00111E  1005               	iorwf	(?_strncmp+1)^0,w,c
  6205  001120  B4D8               	btfsc	status,2,c
  6206  001122  EF95  F008         	goto	u11931
  6207  001126  EF97  F008         	goto	u11930
  6208  00112A                     u11931:
  6209  00112A  EFB2  F008         	goto	l8980
  6210  00112E                     u11930:
  6211  00112E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6212  001132  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6213  001136  CFDE F004          	movff	postinc2,strncmp@_l
  6214  00113A  CFDD F005          	movff	postdec2,strncmp@_l+1
  6215  00113E  0EC3               	movlw	low STR_94
  6216  001140  6E06               	movwf	strncmp@_r^0,c
  6217  001142  0EFF               	movlw	high STR_94
  6218  001144  6E07               	movwf	(strncmp@_r+1)^0,c
  6219  001146  0E00               	movlw	0
  6220  001148  6E09               	movwf	(strncmp@n+1)^0,c
  6221  00114A  0E03               	movlw	3
  6222  00114C  6E08               	movwf	strncmp@n^0,c
  6223  00114E  EC32  F026         	call	_strncmp	;wreg free
  6224  001152  5004               	movf	?_strncmp^0,w,c
  6225  001154  1005               	iorwf	(?_strncmp+1)^0,w,c
  6226  001156  A4D8               	btfss	status,2,c
  6227  001158  EFB0  F008         	goto	u11941
  6228  00115C  EFB2  F008         	goto	u11940
  6229  001160                     u11941:
  6230  001160  EF08  F009         	goto	l8990
  6231  001164                     u11940:
  6232  001164                     l8980:
  6233                           
  6234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6235  001164  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6236  001168  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6237  00116C  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt
  6238  001170  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+1
  6239  001174  0E02               	movlw	2
  6240  001176  0100               	movlb	0	; () banked
  6241  001178  27C0               	addwf	??_vfpfcnvrt& (0+255),f,b
  6242  00117A  0E00               	movlw	0
  6243  00117C  23C1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6244  00117E  C0C0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6245  001182  C0C1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6246  001186                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6247  001186  6AF8               	clrf	tblptru,c
  6248  001188                     	endif
  6249  001188                     	if	0	;tblptru may be non-zero
  6250  001188                     	endif
  6251  001188  0008               	tblrd		*
  6252  00118A  CFF5 F0DF          	movff	tablat,vfpfcnvrt@c
  6253  00118E                     
  6254                           ; BSR set to: 0
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6256  00118E  0E03               	movlw	3
  6257  001190  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6258  001194  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6259  001198  26DE               	addwf	postinc2,f,c
  6260  00119A  0E00               	movlw	0
  6261  00119C  22DD               	addwfc	postdec2,f,c
  6262  00119E                     
  6263                           ; BSR set to: 0
  6264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6265  00119E  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6266  0011A2  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6267  0011A6  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  6268  0011AA  0E02               	movlw	2
  6269  0011AC  26DE               	addwf	postinc2,f,c
  6270  0011AE  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  6271  0011B2  0E00               	movlw	0
  6272  0011B4  22DD               	addwfc	postdec2,f,c
  6273  0011B6  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6274  0011BA  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6275  0011BE  50DF               	movf	indf2,w,c
  6276  0011C0  6FC2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6277  0011C2  51C2               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6278  0011C4  6FE0               	movwf	vfpfcnvrt@llu& (0+255),b
  6279  0011C6  6BE1               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6280  0011C8  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6281  0011CA  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6282  0011CC  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6283  0011CE  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6284  0011D0  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6285  0011D2  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6286  0011D4                     l8986:
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6290  0011D4  C0BA  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  6291  0011D8  C0BB  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6292  0011DC  C0E0  F021         	movff	vfpfcnvrt@llu,xtoa@d
  6293  0011E0  C0E1  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6294  0011E4  C0E2  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6295  0011E8  C0E3  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6296  0011EC  C0E4  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6297  0011F0  C0E5  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6298  0011F4  C0E6  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6299  0011F8  C0E7  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6300  0011FC  C0DF  F029         	movff	vfpfcnvrt@c,xtoa@x
  6301  001200  ECEE  F01B         	call	_xtoa	;wreg free
  6302  001204  C01F  F0BA         	movff	?_xtoa,?_vfpfcnvrt
  6303  001208  C020  F0BB         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6304  00120C  EF98  F00A         	goto	l749
  6305  001210                     l8990:
  6306                           
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6308  001210  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6309  001214  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6310  001218  CFDE F004          	movff	postinc2,strncmp@_l
  6311  00121C  CFDD F005          	movff	postdec2,strncmp@_l+1
  6312  001220  0EE4               	movlw	low (STR_90+1)
  6313  001222  6E06               	movwf	strncmp@_r^0,c
  6314  001224  0EFF               	movlw	high (STR_90+1)
  6315  001226  6E07               	movwf	(strncmp@_r+1)^0,c
  6316  001228  0E00               	movlw	0
  6317  00122A  6E09               	movwf	(strncmp@n+1)^0,c
  6318  00122C  0E02               	movlw	2
  6319  00122E  6E08               	movwf	strncmp@n^0,c
  6320  001230  EC32  F026         	call	_strncmp	;wreg free
  6321  001234  5004               	movf	?_strncmp^0,w,c
  6322  001236  1005               	iorwf	(?_strncmp+1)^0,w,c
  6323  001238  B4D8               	btfsc	status,2,c
  6324  00123A  EF21  F009         	goto	u11951
  6325  00123E  EF23  F009         	goto	u11950
  6326  001242                     u11951:
  6327  001242  EF3E  F009         	goto	l8994
  6328  001246                     u11950:
  6329  001246  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6330  00124A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6331  00124E  CFDE F004          	movff	postinc2,strncmp@_l
  6332  001252  CFDD F005          	movff	postdec2,strncmp@_l+1
  6333  001256  0EC4               	movlw	low (STR_94+1)
  6334  001258  6E06               	movwf	strncmp@_r^0,c
  6335  00125A  0EFF               	movlw	high (STR_94+1)
  6336  00125C  6E07               	movwf	(strncmp@_r+1)^0,c
  6337  00125E  0E00               	movlw	0
  6338  001260  6E09               	movwf	(strncmp@n+1)^0,c
  6339  001262  0E02               	movlw	2
  6340  001264  6E08               	movwf	strncmp@n^0,c
  6341  001266  EC32  F026         	call	_strncmp	;wreg free
  6342  00126A  5004               	movf	?_strncmp^0,w,c
  6343  00126C  1005               	iorwf	(?_strncmp+1)^0,w,c
  6344  00126E  A4D8               	btfss	status,2,c
  6345  001270  EF3C  F009         	goto	u11961
  6346  001274  EF3E  F009         	goto	u11960
  6347  001278                     u11961:
  6348  001278  EF7B  F009         	goto	l9004
  6349  00127C                     u11960:
  6350  00127C                     l8994:
  6351                           
  6352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6353  00127C  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6354  001280  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6355  001284  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt
  6356  001288  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+1
  6357  00128C  0E01               	movlw	1
  6358  00128E  0100               	movlb	0	; () banked
  6359  001290  27C0               	addwf	??_vfpfcnvrt& (0+255),f,b
  6360  001292  0E00               	movlw	0
  6361  001294  23C1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6362  001296  C0C0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6363  00129A  C0C1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6364  00129E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6365  00129E  6AF8               	clrf	tblptru,c
  6366  0012A0                     	endif
  6367  0012A0                     	if	0	;tblptru may be non-zero
  6368  0012A0                     	endif
  6369  0012A0  0008               	tblrd		*
  6370  0012A2  CFF5 F0DF          	movff	tablat,vfpfcnvrt@c
  6371  0012A6                     
  6372                           ; BSR set to: 0
  6373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6374  0012A6  0E02               	movlw	2
  6375  0012A8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6376  0012AC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6377  0012B0  26DE               	addwf	postinc2,f,c
  6378  0012B2  0E00               	movlw	0
  6379  0012B4  22DD               	addwfc	postdec2,f,c
  6380  0012B6                     
  6381                           ; BSR set to: 0
  6382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6383  0012B6  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6384  0012BA  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6385  0012BE  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  6386  0012C2  0E02               	movlw	2
  6387  0012C4  26DE               	addwf	postinc2,f,c
  6388  0012C6  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  6389  0012CA  0E00               	movlw	0
  6390  0012CC  22DD               	addwfc	postdec2,f,c
  6391  0012CE  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6392  0012D2  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6393  0012D6  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  6394  0012DA  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  6395  0012DE  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6396  0012E2  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6397  0012E6  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6398  0012E8  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6399  0012EA  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6400  0012EC  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6401  0012EE  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6402  0012F0  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6403  0012F2  EFEA  F008         	goto	l8986
  6404  0012F6                     l9004:
  6405                           
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6407  0012F6  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6408  0012FA  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6409  0012FE  CFDE FFF6          	movff	postinc2,tblptrl
  6410  001302  CFDD FFF7          	movff	postdec2,tblptrh
  6411  001306                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6412  001306  6AF8               	clrf	tblptru,c
  6413  001308                     	endif
  6414  001308                     	if	0	;tblptru may be non-zero
  6415  001308                     	endif
  6416  001308  0008               	tblrd		*
  6417  00130A  50F5               	movf	tablat,w,c
  6418  00130C  0A78               	xorlw	120
  6419  00130E  B4D8               	btfsc	status,2,c
  6420  001310  EF8C  F009         	goto	u11971
  6421  001314  EF8E  F009         	goto	u11970
  6422  001318                     u11971:
  6423  001318  EFA1  F009         	goto	l9008
  6424  00131C                     u11970:
  6425  00131C  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6426  001320  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6427  001324  CFDE FFF6          	movff	postinc2,tblptrl
  6428  001328  CFDD FFF7          	movff	postdec2,tblptrh
  6429  00132C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6430  00132C  6AF8               	clrf	tblptru,c
  6431  00132E                     	endif
  6432  00132E                     	if	0	;tblptru may be non-zero
  6433  00132E                     	endif
  6434  00132E  0008               	tblrd		*
  6435  001330  50F5               	movf	tablat,w,c
  6436  001332  0A58               	xorlw	88
  6437  001334  A4D8               	btfss	status,2,c
  6438  001336  EF9F  F009         	goto	u11981
  6439  00133A  EFA1  F009         	goto	u11980
  6440  00133E                     u11981:
  6441  00133E  EFD5  F009         	goto	l9018
  6442  001342                     u11980:
  6443  001342                     l9008:
  6444                           
  6445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6446  001342  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6447  001346  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6448  00134A  CFDE FFF6          	movff	postinc2,tblptrl
  6449  00134E  CFDD FFF7          	movff	postdec2,tblptrh
  6450  001352                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6451  001352  6AF8               	clrf	tblptru,c
  6452  001354                     	endif
  6453  001354                     	if	0	;tblptru may be non-zero
  6454  001354                     	endif
  6455  001354  0008               	tblrd		*
  6456  001356  CFF5 F0DF          	movff	tablat,vfpfcnvrt@c
  6457  00135A                     
  6458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6459  00135A  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6460  00135E  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6461  001362  2ADE               	incf	postinc2,f,c
  6462  001364  0E00               	movlw	0
  6463  001366  22DD               	addwfc	postdec2,f,c
  6464  001368                     
  6465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6466  001368  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6467  00136C  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6468  001370  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  6469  001374  0E02               	movlw	2
  6470  001376  26DE               	addwf	postinc2,f,c
  6471  001378  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  6472  00137C  0E00               	movlw	0
  6473  00137E  22DD               	addwfc	postdec2,f,c
  6474  001380  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6475  001384  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6476  001388  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  6477  00138C  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  6478  001390  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6479  001394  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6480  001398  0100               	movlb	0	; () banked
  6481  00139A  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6482  00139C  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6483  00139E  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6484  0013A0  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6485  0013A2  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6486  0013A4  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6487  0013A6  EFEA  F008         	goto	l8986
  6488  0013AA                     l9018:
  6489                           
  6490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6491  0013AA  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6492  0013AE  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6493  0013B2  CFDE F004          	movff	postinc2,strncmp@_l
  6494  0013B6  CFDD F005          	movff	postdec2,strncmp@_l+1
  6495  0013BA  0EFC               	movlw	low STR_108
  6496  0013BC  6E06               	movwf	strncmp@_r^0,c
  6497  0013BE  0EFF               	movlw	high STR_108
  6498  0013C0  6E07               	movwf	(strncmp@_r+1)^0,c
  6499  0013C2  0E00               	movlw	0
  6500  0013C4  6E09               	movwf	(strncmp@n+1)^0,c
  6501  0013C6  0E02               	movlw	2
  6502  0013C8  6E08               	movwf	strncmp@n^0,c
  6503  0013CA  EC32  F026         	call	_strncmp	;wreg free
  6504  0013CE  5004               	movf	?_strncmp^0,w,c
  6505  0013D0  1005               	iorwf	(?_strncmp+1)^0,w,c
  6506  0013D2  B4D8               	btfsc	status,2,c
  6507  0013D4  EFEE  F009         	goto	u11991
  6508  0013D8  EFF0  F009         	goto	u11990
  6509  0013DC                     u11991:
  6510  0013DC  EF0B  F00A         	goto	l9022
  6511  0013E0                     u11990:
  6512  0013E0  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6513  0013E4  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6514  0013E8  CFDE F004          	movff	postinc2,strncmp@_l
  6515  0013EC  CFDD F005          	movff	postdec2,strncmp@_l+1
  6516  0013F0  0EE7               	movlw	low STR_112
  6517  0013F2  6E06               	movwf	strncmp@_r^0,c
  6518  0013F4  0EFF               	movlw	high STR_112
  6519  0013F6  6E07               	movwf	(strncmp@_r+1)^0,c
  6520  0013F8  0E00               	movlw	0
  6521  0013FA  6E09               	movwf	(strncmp@n+1)^0,c
  6522  0013FC  0E02               	movlw	2
  6523  0013FE  6E08               	movwf	strncmp@n^0,c
  6524  001400  EC32  F026         	call	_strncmp	;wreg free
  6525  001404  5004               	movf	?_strncmp^0,w,c
  6526  001406  1005               	iorwf	(?_strncmp+1)^0,w,c
  6527  001408  A4D8               	btfss	status,2,c
  6528  00140A  EF09  F00A         	goto	u12001
  6529  00140E  EF0B  F00A         	goto	u12000
  6530  001412                     u12001:
  6531  001412  EF48  F00A         	goto	l9032
  6532  001416                     u12000:
  6533  001416                     l9022:
  6534                           
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6536  001416  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6537  00141A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6538  00141E  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt
  6539  001422  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+1
  6540  001426  0E01               	movlw	1
  6541  001428  0100               	movlb	0	; () banked
  6542  00142A  27C0               	addwf	??_vfpfcnvrt& (0+255),f,b
  6543  00142C  0E00               	movlw	0
  6544  00142E  23C1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6545  001430  C0C0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6546  001434  C0C1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6547  001438                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6548  001438  6AF8               	clrf	tblptru,c
  6549  00143A                     	endif
  6550  00143A                     	if	0	;tblptru may be non-zero
  6551  00143A                     	endif
  6552  00143A  0008               	tblrd		*
  6553  00143C  CFF5 F0DF          	movff	tablat,vfpfcnvrt@c
  6554  001440                     
  6555                           ; BSR set to: 0
  6556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6557  001440  0E02               	movlw	2
  6558  001442  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6559  001446  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6560  00144A  26DE               	addwf	postinc2,f,c
  6561  00144C  0E00               	movlw	0
  6562  00144E  22DD               	addwfc	postdec2,f,c
  6563  001450                     
  6564                           ; BSR set to: 0
  6565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6566  001450  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6567  001454  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6568  001458  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  6569  00145C  0E02               	movlw	2
  6570  00145E  26DE               	addwf	postinc2,f,c
  6571  001460  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  6572  001464  0E00               	movlw	0
  6573  001466  22DD               	addwfc	postdec2,f,c
  6574  001468  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6575  00146C  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6576  001470  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  6577  001474  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  6578  001478  C0C2  F0E0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6579  00147C  C0C3  F0E1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6580  001480  6BE2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6581  001482  6BE3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6582  001484  6BE4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6583  001486  6BE5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6584  001488  6BE6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6585  00148A  6BE7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6586  00148C  EFEA  F008         	goto	l8986
  6587  001490                     l9032:
  6588                           
  6589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6590  001490  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6591  001494  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6592  001498  CFDE FFF6          	movff	postinc2,tblptrl
  6593  00149C  CFDD FFF7          	movff	postdec2,tblptrh
  6594  0014A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6595  0014A0  6AF8               	clrf	tblptru,c
  6596  0014A2                     	endif
  6597  0014A2                     	if	0	;tblptru may be non-zero
  6598  0014A2                     	endif
  6599  0014A2  0008               	tblrd		*
  6600  0014A4  50F5               	movf	tablat,w,c
  6601  0014A6  0A25               	xorlw	37
  6602  0014A8  A4D8               	btfss	status,2,c
  6603  0014AA  EF59  F00A         	goto	u12011
  6604  0014AE  EF5B  F00A         	goto	u12010
  6605  0014B2                     u12011:
  6606  0014B2  EF73  F00A         	goto	l9042
  6607  0014B6                     u12010:
  6608  0014B6                     
  6609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6610  0014B6  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6611  0014BA  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6612  0014BE  2ADE               	incf	postinc2,f,c
  6613  0014C0  0E00               	movlw	0
  6614  0014C2  22DD               	addwfc	postdec2,f,c
  6615  0014C4                     
  6616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6617  0014C4  0E00               	movlw	0
  6618  0014C6  6E05               	movwf	(fputc@c+1)^0,c
  6619  0014C8  0E25               	movlw	37
  6620  0014CA  6E04               	movwf	fputc@c^0,c
  6621  0014CC  C0BA  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6622  0014D0  C0BB  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6623  0014D4  EC29  F029         	call	_fputc	;wreg free
  6624  0014D8                     l9038:
  6625                           
  6626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6627  0014D8  0E00               	movlw	0
  6628  0014DA  0100               	movlb	0	; () banked
  6629  0014DC  6FBB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6630  0014DE  0E01               	movlw	1
  6631  0014E0  6FBA               	movwf	?_vfpfcnvrt& (0+255),b
  6632  0014E2  EF98  F00A         	goto	l749
  6633  0014E6                     l9042:
  6634                           
  6635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6636  0014E6  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6637  0014EA  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6638  0014EE  2ADE               	incf	postinc2,f,c
  6639  0014F0  0E00               	movlw	0
  6640  0014F2  22DD               	addwfc	postdec2,f,c
  6641  0014F4  EF08  F006         	goto	l8894
  6642  0014F8                     l9048:
  6643                           
  6644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6645  0014F8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6646  0014FC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6647  001500  CFDE FFF6          	movff	postinc2,tblptrl
  6648  001504  CFDD FFF7          	movff	postdec2,tblptrh
  6649  001508                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6650  001508  6AF8               	clrf	tblptru,c
  6651  00150A                     	endif
  6652  00150A                     	if	0	;tblptru may be non-zero
  6653  00150A                     	endif
  6654  00150A  0008               	tblrd		*
  6655  00150C  50F5               	movf	tablat,w,c
  6656  00150E  6E04               	movwf	fputc@c^0,c
  6657  001510  6A05               	clrf	(fputc@c+1)^0,c
  6658  001512  C0BA  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6659  001516  C0BB  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6660  00151A  EC29  F029         	call	_fputc	;wreg free
  6661  00151E                     
  6662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6663  00151E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6664  001522  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6665  001526  2ADE               	incf	postinc2,f,c
  6666  001528  0E00               	movlw	0
  6667  00152A  22DD               	addwfc	postdec2,f,c
  6668  00152C  EF6C  F00A         	goto	l9038
  6669  001530                     l749:
  6670  001530  0012               	return		;funcret
  6671  001532                     __end_of_vfpfcnvrt:
  6672                           	opt callstack 0
  6673                           
  6674 ;; *************** function _xtoa *****************
  6675 ;; Defined at:
  6676 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6679 ;;		 -> vsnprintf@f(6), 
  6680 ;;  d               8   32[COMRAM] unsigned long long 
  6681 ;;  x               1   40[COMRAM] unsigned char 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  n               8   57[COMRAM] unsigned long long 
  6684 ;;  c               2   67[COMRAM] int 
  6685 ;;  i               2   65[COMRAM] int 
  6686 ;;  w               2   55[COMRAM] int 
  6687 ;;  p               2   53[COMRAM] int 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  2   30[COMRAM] int 
  6690 ;; Registers used:
  6691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6697 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6700 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6701 ;;Total ram usage:       39 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    8
  6704 ;; This function calls:
  6705 ;;		_isalpha
  6706 ;;		_isupper
  6707 ;;		_pad
  6708 ;;		_toupper
  6709 ;; This function is called by:
  6710 ;;		_vfpfcnvrt
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text5
  6715  0037DC                     __ptext5:
  6716                           	opt callstack 0
  6717  0037DC                     _xtoa:
  6718                           	opt callstack 18
  6719  0037DC                     
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6721  0037DC  BE5B               	btfsc	(_prec+1)^0,7,c
  6722  0037DE  EFF3  F01B         	goto	u11191
  6723  0037E2  EFF5  F01B         	goto	u11190
  6724  0037E6                     u11191:
  6725  0037E6  EFF7  F01B         	goto	l8568
  6726  0037EA                     u11190:
  6727  0037EA                     
  6728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6729  0037EA  0100               	movlb	0	; () banked
  6730  0037EC  93FC               	bcf	_flags& (0+255),1,b
  6731  0037EE                     l8568:
  6732                           
  6733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6734  0037EE  BE5B               	btfsc	(_prec+1)^0,7,c
  6735  0037F0  EF04  F01C         	goto	u11200
  6736  0037F4  505B               	movf	(_prec+1)^0,w,c
  6737  0037F6  E106               	bnz	u11201
  6738  0037F8  045A               	decf	_prec^0,w,c
  6739  0037FA  B0D8               	btfsc	status,0,c
  6740  0037FC  EF02  F01C         	goto	u11201
  6741  003800  EF04  F01C         	goto	u11200
  6742  003804                     u11201:
  6743  003804  EF0A  F01C         	goto	l685
  6744  003808                     u11200:
  6745  003808  0E00               	movlw	0
  6746  00380A  6E37               	movwf	(xtoa@p+1)^0,c
  6747  00380C  0E01               	movlw	1
  6748  00380E  6E36               	movwf	xtoa@p^0,c
  6749  003810  EF0E  F01C         	goto	l687
  6750  003814                     l685:
  6751  003814  C05A  F036         	movff	_prec,xtoa@p
  6752  003818  C05B  F037         	movff	_prec+1,xtoa@p+1
  6753  00381C                     l687:
  6754                           
  6755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6756  00381C  C11C  F038         	movff	_width,xtoa@w
  6757  003820  C11D  F039         	movff	_width+1,xtoa@w+1
  6758                           
  6759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6760  003824  0100               	movlb	0	; () banked
  6761  003826  A9FC               	btfss	_flags& (0+255),4,b
  6762  003828  EF18  F01C         	goto	u11211
  6763  00382C  EF1A  F01C         	goto	u11210
  6764  003830                     u11211:
  6765  003830  EF1E  F01C         	goto	l8574
  6766  003834                     u11210:
  6767  003834                     
  6768                           ; BSR set to: 0
  6769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6770  003834  0EFE               	movlw	254
  6771  003836  2638               	addwf	xtoa@w^0,f,c
  6772  003838  0EFF               	movlw	255
  6773  00383A  2239               	addwfc	(xtoa@w+1)^0,f,c
  6774  00383C                     l8574:
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6778  00383C  C021  F03A         	movff	xtoa@d,xtoa@n
  6779  003840  C022  F03B         	movff	xtoa@d+1,xtoa@n+1
  6780  003844  C023  F03C         	movff	xtoa@d+2,xtoa@n+2
  6781  003848  C024  F03D         	movff	xtoa@d+3,xtoa@n+3
  6782  00384C  C025  F03E         	movff	xtoa@d+4,xtoa@n+4
  6783  003850  C026  F03F         	movff	xtoa@d+5,xtoa@n+5
  6784  003854  C027  F040         	movff	xtoa@d+6,xtoa@n+6
  6785  003858  C028  F041         	movff	xtoa@d+7,xtoa@n+7
  6786  00385C                     
  6787                           ; BSR set to: 0
  6788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6789  00385C  0E00               	movlw	0
  6790  00385E  6E43               	movwf	(xtoa@i+1)^0,c
  6791  003860  0E4F               	movlw	79
  6792  003862  6E42               	movwf	xtoa@i^0,c
  6793  003864                     
  6794                           ; BSR set to: 0
  6795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6796  003864  0E00               	movlw	0
  6797  003866  0101               	movlb	1	; () banked
  6798  003868  6FD9               	movwf	(_dbuf+79)& (0+255),b
  6799                           
  6800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6801  00386A  EFEA  F01C         	goto	l8610
  6802  00386E                     l8580:
  6803                           
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6805  00386E  0642               	decf	xtoa@i^0,f,c
  6806  003870  A0D8               	btfss	status,0,c
  6807  003872  0643               	decf	(xtoa@i+1)^0,f,c
  6808  003874                     
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6810  003874  0E0F               	movlw	15
  6811  003876  143A               	andwf	xtoa@n^0,w,c
  6812  003878  6E44               	movwf	xtoa@c^0,c
  6813  00387A  6A45               	clrf	(xtoa@c+1)^0,c
  6814  00387C                     
  6815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6816  00387C  BE45               	btfsc	(xtoa@c+1)^0,7,c
  6817  00387E  EF4A  F01C         	goto	u11221
  6818  003882  5045               	movf	(xtoa@c+1)^0,w,c
  6819  003884  E109               	bnz	u11220
  6820  003886  0E0A               	movlw	10
  6821  003888  5C44               	subwf	xtoa@c^0,w,c
  6822  00388A  A0D8               	btfss	status,0,c
  6823  00388C  EF4A  F01C         	goto	u11221
  6824  003890  EF4C  F01C         	goto	u11220
  6825  003894                     u11221:
  6826  003894  EF54  F01C         	goto	l8588
  6827  003898                     u11220:
  6828  003898  0E57               	movlw	87
  6829  00389A  2444               	addwf	xtoa@c^0,w,c
  6830  00389C  6E44               	movwf	xtoa@c^0,c
  6831  00389E  0E00               	movlw	0
  6832  0038A0  2045               	addwfc	(xtoa@c+1)^0,w,c
  6833  0038A2  6E45               	movwf	(xtoa@c+1)^0,c
  6834  0038A4  EF5A  F01C         	goto	l694
  6835  0038A8                     l8588:
  6836  0038A8  0E30               	movlw	48
  6837  0038AA  2444               	addwf	xtoa@c^0,w,c
  6838  0038AC  6E44               	movwf	xtoa@c^0,c
  6839  0038AE  0E00               	movlw	0
  6840  0038B0  2045               	addwfc	(xtoa@c+1)^0,w,c
  6841  0038B2  6E45               	movwf	(xtoa@c+1)^0,c
  6842  0038B4                     l694:
  6843  0038B4  0EBF               	movlw	191
  6844  0038B6  6E2A               	movwf	??_xtoa^0,c
  6845  0038B8  0EFF               	movlw	255
  6846  0038BA  6E2B               	movwf	(??_xtoa+1)^0,c
  6847  0038BC  5029               	movf	xtoa@x^0,w,c
  6848  0038BE  6E2C               	movwf	(??_xtoa+2)^0,c
  6849  0038C0  6A2D               	clrf	(??_xtoa+3)^0,c
  6850  0038C2  502A               	movf	??_xtoa^0,w,c
  6851  0038C4  262C               	addwf	(??_xtoa+2)^0,f,c
  6852  0038C6  502B               	movf	(??_xtoa+1)^0,w,c
  6853  0038C8  222D               	addwfc	(??_xtoa+3)^0,f,c
  6854  0038CA  502D               	movf	(??_xtoa+3)^0,w,c
  6855  0038CC  E10A               	bnz	u11230
  6856  0038CE  0E1A               	movlw	26
  6857  0038D0  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6858  0038D2  A0D8               	btfss	status,0,c
  6859  0038D4  EF6E  F01C         	goto	u11231
  6860  0038D8  EF71  F01C         	goto	u11230
  6861  0038DC                     u11231:
  6862  0038DC  0E01               	movlw	1
  6863  0038DE  EF72  F01C         	goto	u11240
  6864  0038E2                     u11230:
  6865  0038E2  0E00               	movlw	0
  6866  0038E4                     u11240:
  6867  0038E4  6E32               	movwf	_xtoa$1379^0,c
  6868  0038E6  6A33               	clrf	(_xtoa$1379+1)^0,c
  6869  0038E8  5032               	movf	_xtoa$1379^0,w,c
  6870  0038EA  1033               	iorwf	(_xtoa$1379+1)^0,w,c
  6871  0038EC  B4D8               	btfsc	status,2,c
  6872  0038EE  EF7B  F01C         	goto	u11251
  6873  0038F2  EF7D  F01C         	goto	u11250
  6874  0038F6                     u11251:
  6875  0038F6  EFAD  F01C         	goto	l8602
  6876  0038FA                     u11250:
  6877  0038FA  0E9F               	movlw	159
  6878  0038FC  6E2A               	movwf	??_xtoa^0,c
  6879  0038FE  0EFF               	movlw	255
  6880  003900  6E2B               	movwf	(??_xtoa+1)^0,c
  6881  003902  0E20               	movlw	32
  6882  003904  1044               	iorwf	xtoa@c^0,w,c
  6883  003906  6E2C               	movwf	(??_xtoa+2)^0,c
  6884  003908  0E00               	movlw	0
  6885  00390A  1045               	iorwf	(xtoa@c+1)^0,w,c
  6886  00390C  6E2D               	movwf	(??_xtoa+3)^0,c
  6887  00390E  502A               	movf	??_xtoa^0,w,c
  6888  003910  262C               	addwf	(??_xtoa+2)^0,f,c
  6889  003912  502B               	movf	(??_xtoa+1)^0,w,c
  6890  003914  222D               	addwfc	(??_xtoa+3)^0,f,c
  6891  003916  502D               	movf	(??_xtoa+3)^0,w,c
  6892  003918  E10A               	bnz	u11260
  6893  00391A  0E1A               	movlw	26
  6894  00391C  5C2C               	subwf	(??_xtoa+2)^0,w,c
  6895  00391E  A0D8               	btfss	status,0,c
  6896  003920  EF94  F01C         	goto	u11261
  6897  003924  EF97  F01C         	goto	u11260
  6898  003928                     u11261:
  6899  003928  0E01               	movlw	1
  6900  00392A  EF98  F01C         	goto	u11270
  6901  00392E                     u11260:
  6902  00392E  0E00               	movlw	0
  6903  003930                     u11270:
  6904  003930  6E34               	movwf	_xtoa$1380^0,c
  6905  003932  6A35               	clrf	(_xtoa$1380+1)^0,c
  6906  003934  5034               	movf	_xtoa$1380^0,w,c
  6907  003936  1035               	iorwf	(_xtoa$1380+1)^0,w,c
  6908  003938  B4D8               	btfsc	status,2,c
  6909  00393A  EFA1  F01C         	goto	u11281
  6910  00393E  EFA3  F01C         	goto	u11280
  6911  003942                     u11281:
  6912  003942  EFAD  F01C         	goto	l8602
  6913  003946                     u11280:
  6914  003946                     
  6915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6916  003946  C044  F00A         	movff	xtoa@c,toupper@c
  6917  00394A  C045  F00B         	movff	xtoa@c+1,toupper@c+1
  6918  00394E  ECFF  F02B         	call	_toupper	;wreg free
  6919  003952  C00A  F044         	movff	?_toupper,xtoa@c
  6920  003956  C00B  F045         	movff	?_toupper+1,xtoa@c+1
  6921  00395A                     l8602:
  6922                           
  6923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6924  00395A  0E8A               	movlw	low _dbuf
  6925  00395C  2442               	addwf	xtoa@i^0,w,c
  6926  00395E  6ED9               	movwf	fsr2l,c
  6927  003960  0E01               	movlw	high _dbuf
  6928  003962  2043               	addwfc	(xtoa@i+1)^0,w,c
  6929  003964  6EDA               	movwf	fsr2h,c
  6930  003966  C044  FFDF         	movff	xtoa@c,indf2
  6931  00396A                     
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6933  00396A  0636               	decf	xtoa@p^0,f,c
  6934  00396C  A0D8               	btfss	status,0,c
  6935  00396E  0637               	decf	(xtoa@p+1)^0,f,c
  6936  003970                     
  6937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6938  003970  0638               	decf	xtoa@w^0,f,c
  6939  003972  A0D8               	btfss	status,0,c
  6940  003974  0639               	decf	(xtoa@w+1)^0,f,c
  6941  003976                     
  6942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6943  003976  C03A  F02A         	movff	xtoa@n,??_xtoa
  6944  00397A  C03B  F02B         	movff	xtoa@n+1,??_xtoa+1
  6945  00397E  C03C  F02C         	movff	xtoa@n+2,??_xtoa+2
  6946  003982  C03D  F02D         	movff	xtoa@n+3,??_xtoa+3
  6947  003986  C03E  F02E         	movff	xtoa@n+4,??_xtoa+4
  6948  00398A  C03F  F02F         	movff	xtoa@n+5,??_xtoa+5
  6949  00398E  C040  F030         	movff	xtoa@n+6,??_xtoa+6
  6950  003992  C041  F031         	movff	xtoa@n+7,??_xtoa+7
  6951  003996  0E05               	movlw	5
  6952  003998  EFD7  F01C         	goto	u11290
  6953  00399C                     u11295:
  6954  00399C  90D8               	bcf	status,0,c
  6955  00399E  3231               	rrcf	(??_xtoa+7)^0,f,c
  6956  0039A0  3230               	rrcf	(??_xtoa+6)^0,f,c
  6957  0039A2  322F               	rrcf	(??_xtoa+5)^0,f,c
  6958  0039A4  322E               	rrcf	(??_xtoa+4)^0,f,c
  6959  0039A6  322D               	rrcf	(??_xtoa+3)^0,f,c
  6960  0039A8  322C               	rrcf	(??_xtoa+2)^0,f,c
  6961  0039AA  322B               	rrcf	(??_xtoa+1)^0,f,c
  6962  0039AC  322A               	rrcf	??_xtoa^0,f,c
  6963  0039AE                     u11290:
  6964  0039AE  2EE8               	decfsz	wreg,f,c
  6965  0039B0  EFCE  F01C         	goto	u11295
  6966  0039B4  C02A  F03A         	movff	??_xtoa,xtoa@n
  6967  0039B8  C02B  F03B         	movff	??_xtoa+1,xtoa@n+1
  6968  0039BC  C02C  F03C         	movff	??_xtoa+2,xtoa@n+2
  6969  0039C0  C02D  F03D         	movff	??_xtoa+3,xtoa@n+3
  6970  0039C4  C02E  F03E         	movff	??_xtoa+4,xtoa@n+4
  6971  0039C8  C02F  F03F         	movff	??_xtoa+5,xtoa@n+5
  6972  0039CC  C030  F040         	movff	??_xtoa+6,xtoa@n+6
  6973  0039D0  C031  F041         	movff	??_xtoa+7,xtoa@n+7
  6974  0039D4                     l8610:
  6975                           
  6976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6977  0039D4  BE43               	btfsc	(xtoa@i+1)^0,7,c
  6978  0039D6  EFF6  F01C         	goto	u11301
  6979  0039DA  5043               	movf	(xtoa@i+1)^0,w,c
  6980  0039DC  E109               	bnz	u11300
  6981  0039DE  0E02               	movlw	2
  6982  0039E0  5C42               	subwf	xtoa@i^0,w,c
  6983  0039E2  A0D8               	btfss	status,0,c
  6984  0039E4  EFF6  F01C         	goto	u11301
  6985  0039E8  EFF8  F01C         	goto	u11300
  6986  0039EC                     u11301:
  6987  0039EC  EF29  F01D         	goto	l708
  6988  0039F0                     u11300:
  6989  0039F0  503A               	movf	xtoa@n^0,w,c
  6990  0039F2  103B               	iorwf	(xtoa@n+1)^0,w,c
  6991  0039F4  103C               	iorwf	(xtoa@n+2)^0,w,c
  6992  0039F6  103D               	iorwf	(xtoa@n+3)^0,w,c
  6993  0039F8  103E               	iorwf	(xtoa@n+4)^0,w,c
  6994  0039FA  103F               	iorwf	(xtoa@n+5)^0,w,c
  6995  0039FC  1040               	iorwf	(xtoa@n+6)^0,w,c
  6996  0039FE  1041               	iorwf	(xtoa@n+7)^0,w,c
  6997  003A00  A4D8               	btfss	status,2,c
  6998  003A02  EF05  F01D         	goto	u11311
  6999  003A06  EF07  F01D         	goto	u11310
  7000  003A0A                     u11311:
  7001  003A0A  EF37  F01C         	goto	l8580
  7002  003A0E                     u11310:
  7003  003A0E  BE37               	btfsc	(xtoa@p+1)^0,7,c
  7004  003A10  EF14  F01D         	goto	u11320
  7005  003A14  5037               	movf	(xtoa@p+1)^0,w,c
  7006  003A16  E106               	bnz	u11321
  7007  003A18  0436               	decf	xtoa@p^0,w,c
  7008  003A1A  B0D8               	btfsc	status,0,c
  7009  003A1C  EF12  F01D         	goto	u11321
  7010  003A20  EF14  F01D         	goto	u11320
  7011  003A24                     u11321:
  7012  003A24  EF37  F01C         	goto	l8580
  7013  003A28                     u11320:
  7014  003A28  BE39               	btfsc	(xtoa@w+1)^0,7,c
  7015  003A2A  EF1F  F01D         	goto	u11331
  7016  003A2E  5039               	movf	(xtoa@w+1)^0,w,c
  7017  003A30  E108               	bnz	u11330
  7018  003A32  0438               	decf	xtoa@w^0,w,c
  7019  003A34  A0D8               	btfss	status,0,c
  7020  003A36  EF1F  F01D         	goto	u11331
  7021  003A3A  EF21  F01D         	goto	u11330
  7022  003A3E                     u11331:
  7023  003A3E  EF29  F01D         	goto	l708
  7024  003A42                     u11330:
  7025  003A42  0100               	movlb	0	; () banked
  7026  003A44  B3FC               	btfsc	_flags& (0+255),1,b
  7027  003A46  EF27  F01D         	goto	u11341
  7028  003A4A  EF29  F01D         	goto	u11340
  7029  003A4E                     u11341:
  7030  003A4E  EF37  F01C         	goto	l8580
  7031  003A52                     u11340:
  7032  003A52                     l708:
  7033                           
  7034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7035  003A52  0100               	movlb	0	; () banked
  7036  003A54  A9FC               	btfss	_flags& (0+255),4,b
  7037  003A56  EF2F  F01D         	goto	u11351
  7038  003A5A  EF31  F01D         	goto	u11350
  7039  003A5E                     u11351:
  7040  003A5E  EF47  F01D         	goto	l8626
  7041  003A62                     u11350:
  7042  003A62                     
  7043                           ; BSR set to: 0
  7044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7045  003A62  0642               	decf	xtoa@i^0,f,c
  7046  003A64  A0D8               	btfss	status,0,c
  7047  003A66  0643               	decf	(xtoa@i+1)^0,f,c
  7048  003A68                     
  7049                           ; BSR set to: 0
  7050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7051  003A68  0E8A               	movlw	low _dbuf
  7052  003A6A  2442               	addwf	xtoa@i^0,w,c
  7053  003A6C  6ED9               	movwf	fsr2l,c
  7054  003A6E  0E01               	movlw	high _dbuf
  7055  003A70  2043               	addwfc	(xtoa@i+1)^0,w,c
  7056  003A72  6EDA               	movwf	fsr2h,c
  7057  003A74  C029  FFDF         	movff	xtoa@x,indf2
  7058  003A78                     
  7059                           ; BSR set to: 0
  7060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7061  003A78  0642               	decf	xtoa@i^0,f,c
  7062  003A7A  A0D8               	btfss	status,0,c
  7063  003A7C  0643               	decf	(xtoa@i+1)^0,f,c
  7064                           
  7065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7066  003A7E  0E8A               	movlw	low _dbuf
  7067  003A80  2442               	addwf	xtoa@i^0,w,c
  7068  003A82  6ED9               	movwf	fsr2l,c
  7069  003A84  0E01               	movlw	high _dbuf
  7070  003A86  2043               	addwfc	(xtoa@i+1)^0,w,c
  7071  003A88  6EDA               	movwf	fsr2h,c
  7072  003A8A  0E30               	movlw	48
  7073  003A8C  6EDF               	movwf	indf2,c
  7074  003A8E                     l8626:
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7078  003A8E  C01F  F014         	movff	xtoa@fp,pad@fp
  7079  003A92  C020  F015         	movff	xtoa@fp+1,pad@fp+1
  7080  003A96  0E8A               	movlw	low _dbuf
  7081  003A98  2442               	addwf	xtoa@i^0,w,c
  7082  003A9A  6E16               	movwf	pad@buf^0,c
  7083  003A9C  0E01               	movlw	high _dbuf
  7084  003A9E  2043               	addwfc	(xtoa@i+1)^0,w,c
  7085  003AA0  6E17               	movwf	(pad@buf+1)^0,c
  7086  003AA2  C038  F018         	movff	xtoa@w,pad@p
  7087  003AA6  C039  F019         	movff	xtoa@w+1,pad@p+1
  7088  003AAA  EC8E  F029         	call	_pad	;wreg free
  7089  003AAE  C014  F01F         	movff	?_pad,?_xtoa
  7090  003AB2  C015  F020         	movff	?_pad+1,?_xtoa+1
  7091  003AB6  0012               	return		;funcret
  7092  003AB8                     __end_of_xtoa:
  7093                           	opt callstack 0
  7094                           
  7095 ;; *************** function _toupper *****************
  7096 ;; Defined at:
  7097 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  c               2    9[COMRAM] int 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  2    9[COMRAM] int 
  7104 ;; Registers used:
  7105 ;;		wreg, status,2, status,0
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;Total ram usage:        8 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    5
  7118 ;; This function calls:
  7119 ;;		_islower
  7120 ;; This function is called by:
  7121 ;;		_xtoa
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text6
  7126  0057FE                     __ptext6:
  7127                           	opt callstack 0
  7128  0057FE                     _toupper:
  7129                           	opt callstack 20
  7130  0057FE  0E9F               	movlw	159
  7131  005800  6E0C               	movwf	??_toupper^0,c
  7132  005802  0EFF               	movlw	255
  7133  005804  6E0D               	movwf	(??_toupper+1)^0,c
  7134  005806  C00A  F00E         	movff	toupper@c,??_toupper+2
  7135  00580A  C00B  F00F         	movff	toupper@c+1,??_toupper+3
  7136  00580E  500C               	movf	??_toupper^0,w,c
  7137  005810  260E               	addwf	(??_toupper+2)^0,f,c
  7138  005812  500D               	movf	(??_toupper+1)^0,w,c
  7139  005814  220F               	addwfc	(??_toupper+3)^0,f,c
  7140  005816  500F               	movf	(??_toupper+3)^0,w,c
  7141  005818  E10A               	bnz	u9280
  7142  00581A  0E1A               	movlw	26
  7143  00581C  5C0E               	subwf	(??_toupper+2)^0,w,c
  7144  00581E  A0D8               	btfss	status,0,c
  7145  005820  EF14  F02C         	goto	u9281
  7146  005824  EF17  F02C         	goto	u9280
  7147  005828                     u9281:
  7148  005828  0E01               	movlw	1
  7149  00582A  EF18  F02C         	goto	u9290
  7150  00582E                     u9280:
  7151  00582E  0E00               	movlw	0
  7152  005830                     u9290:
  7153  005830  6E10               	movwf	_toupper$2115^0,c
  7154  005832  6A11               	clrf	(_toupper$2115+1)^0,c
  7155  005834  5010               	movf	_toupper$2115^0,w,c
  7156  005836  1011               	iorwf	(_toupper$2115+1)^0,w,c
  7157  005838  B4D8               	btfsc	status,2,c
  7158  00583A  EF21  F02C         	goto	u9301
  7159  00583E  EF23  F02C         	goto	u9300
  7160  005842                     u9301:
  7161  005842  EF29  F02C         	goto	l1633
  7162  005846                     u9300:
  7163  005846  0E5F               	movlw	95
  7164  005848  140A               	andwf	toupper@c^0,w,c
  7165  00584A  6E0A               	movwf	?_toupper^0,c
  7166  00584C  6A0B               	clrf	(?_toupper+1)^0,c
  7167  00584E  EF2D  F02C         	goto	l1638
  7168  005852                     l1633:
  7169  005852  C00A  F00A         	movff	toupper@c,?_toupper
  7170  005856  C00B  F00B         	movff	toupper@c+1,?_toupper+1
  7171  00585A                     l1638:
  7172  00585A  0012               	return		;funcret
  7173  00585C                     __end_of_toupper:
  7174                           	opt callstack 0
  7175                           
  7176 ;; *************** function _islower *****************
  7177 ;; Defined at:
  7178 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  c               2    3[COMRAM] int 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  2    3[COMRAM] int 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7196 ;;Total ram usage:        6 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    4
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_toupper
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text7
  7207  005C66                     __ptext7:
  7208                           	opt callstack 0
  7209  005C66                     _islower:
  7210                           	opt callstack 20
  7211  005C66  0E9F               	movlw	159
  7212  005C68  6E06               	movwf	??_islower^0,c
  7213  005C6A  0EFF               	movlw	255
  7214  005C6C  6E07               	movwf	(??_islower+1)^0,c
  7215  005C6E  C004  F008         	movff	islower@c,??_islower+2
  7216  005C72  C005  F009         	movff	islower@c+1,??_islower+3
  7217  005C76  5006               	movf	??_islower^0,w,c
  7218  005C78  2608               	addwf	(??_islower+2)^0,f,c
  7219  005C7A  5007               	movf	(??_islower+1)^0,w,c
  7220  005C7C  2209               	addwfc	(??_islower+3)^0,f,c
  7221  005C7E  5009               	movf	(??_islower+3)^0,w,c
  7222  005C80  E10A               	bnz	u8970
  7223  005C82  0E1A               	movlw	26
  7224  005C84  5C08               	subwf	(??_islower+2)^0,w,c
  7225  005C86  A0D8               	btfss	status,0,c
  7226  005C88  EF48  F02E         	goto	u8971
  7227  005C8C  EF4B  F02E         	goto	u8970
  7228  005C90                     u8971:
  7229  005C90  0E01               	movlw	1
  7230  005C92  EF4C  F02E         	goto	u8980
  7231  005C96                     u8970:
  7232  005C96  0E00               	movlw	0
  7233  005C98                     u8980:
  7234  005C98  6E04               	movwf	?_islower^0,c
  7235  005C9A  6A05               	clrf	(?_islower+1)^0,c
  7236  005C9C  0012               	return		;funcret
  7237  005C9E                     __end_of_islower:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _isalpha *****************
  7241 ;; Defined at:
  7242 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  c               2    3[COMRAM] int 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  2    3[COMRAM] int 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;Total ram usage:        6 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    4
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_xtoa
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text8
  7271  005BF0                     __ptext8:
  7272                           	opt callstack 0
  7273  005BF0                     _isalpha:
  7274                           	opt callstack 21
  7275  005BF0  0E9F               	movlw	159
  7276  005BF2  6E06               	movwf	??_isalpha^0,c
  7277  005BF4  0EFF               	movlw	255
  7278  005BF6  6E07               	movwf	(??_isalpha+1)^0,c
  7279  005BF8  0E20               	movlw	32
  7280  005BFA  1004               	iorwf	isalpha@c^0,w,c
  7281  005BFC  6E08               	movwf	(??_isalpha+2)^0,c
  7282  005BFE  0E00               	movlw	0
  7283  005C00  1005               	iorwf	(isalpha@c+1)^0,w,c
  7284  005C02  6E09               	movwf	(??_isalpha+3)^0,c
  7285  005C04  5006               	movf	??_isalpha^0,w,c
  7286  005C06  2608               	addwf	(??_isalpha+2)^0,f,c
  7287  005C08  5007               	movf	(??_isalpha+1)^0,w,c
  7288  005C0A  2209               	addwfc	(??_isalpha+3)^0,f,c
  7289  005C0C  5009               	movf	(??_isalpha+3)^0,w,c
  7290  005C0E  E10A               	bnz	u9260
  7291  005C10  0E1A               	movlw	26
  7292  005C12  5C08               	subwf	(??_isalpha+2)^0,w,c
  7293  005C14  A0D8               	btfss	status,0,c
  7294  005C16  EF0F  F02E         	goto	u9261
  7295  005C1A  EF12  F02E         	goto	u9260
  7296  005C1E                     u9261:
  7297  005C1E  0E01               	movlw	1
  7298  005C20  EF13  F02E         	goto	u9270
  7299  005C24                     u9260:
  7300  005C24  0E00               	movlw	0
  7301  005C26                     u9270:
  7302  005C26  6E04               	movwf	?_isalpha^0,c
  7303  005C28  6A05               	clrf	(?_isalpha+1)^0,c
  7304  005C2A  0012               	return		;funcret
  7305  005C2C                     __end_of_isalpha:
  7306                           	opt callstack 0
  7307                           
  7308 ;; *************** function _utoa *****************
  7309 ;; Defined at:
  7310 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7313 ;;		 -> vsnprintf@f(6), 
  7314 ;;  d               8   32[COMRAM] unsigned long long 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  n               8   52[COMRAM] unsigned long long 
  7317 ;;  i               2   60[COMRAM] int 
  7318 ;;  w               2   50[COMRAM] int 
  7319 ;;  p               2   48[COMRAM] int 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  2   30[COMRAM] int 
  7322 ;; Registers used:
  7323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7329 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7330 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7331 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7332 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7333 ;;Total ram usage:       32 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; Hardware stack levels required when called:    8
  7336 ;; This function calls:
  7337 ;;		___lodiv
  7338 ;;		___lomod
  7339 ;;		_pad
  7340 ;; This function is called by:
  7341 ;;		_vfpfcnvrt
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text9
  7346  003CCE                     __ptext9:
  7347                           	opt callstack 0
  7348  003CCE                     _utoa:
  7349                           	opt callstack 18
  7350  003CCE                     
  7351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7352  003CCE  BE5B               	btfsc	(_prec+1)^0,7,c
  7353  003CD0  EF6C  F01E         	goto	u11121
  7354  003CD4  EF6E  F01E         	goto	u11120
  7355  003CD8                     u11121:
  7356  003CD8  EF70  F01E         	goto	l8532
  7357  003CDC                     u11120:
  7358  003CDC                     
  7359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7360  003CDC  0100               	movlb	0	; () banked
  7361  003CDE  93FC               	bcf	_flags& (0+255),1,b
  7362  003CE0                     l8532:
  7363                           
  7364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7365  003CE0  BE5B               	btfsc	(_prec+1)^0,7,c
  7366  003CE2  EF7D  F01E         	goto	u11130
  7367  003CE6  505B               	movf	(_prec+1)^0,w,c
  7368  003CE8  E106               	bnz	u11131
  7369  003CEA  045A               	decf	_prec^0,w,c
  7370  003CEC  B0D8               	btfsc	status,0,c
  7371  003CEE  EF7B  F01E         	goto	u11131
  7372  003CF2  EF7D  F01E         	goto	u11130
  7373  003CF6                     u11131:
  7374  003CF6  EF83  F01E         	goto	l670
  7375  003CFA                     u11130:
  7376  003CFA  0E00               	movlw	0
  7377  003CFC  6E32               	movwf	(utoa@p+1)^0,c
  7378  003CFE  0E01               	movlw	1
  7379  003D00  6E31               	movwf	utoa@p^0,c
  7380  003D02  EF87  F01E         	goto	l672
  7381  003D06                     l670:
  7382  003D06  C05A  F031         	movff	_prec,utoa@p
  7383  003D0A  C05B  F032         	movff	_prec+1,utoa@p+1
  7384  003D0E                     l672:
  7385                           
  7386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7387  003D0E  C11C  F033         	movff	_width,utoa@w
  7388  003D12  C11D  F034         	movff	_width+1,utoa@w+1
  7389                           
  7390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7391  003D16  C021  F035         	movff	utoa@d,utoa@n
  7392  003D1A  C022  F036         	movff	utoa@d+1,utoa@n+1
  7393  003D1E  C023  F037         	movff	utoa@d+2,utoa@n+2
  7394  003D22  C024  F038         	movff	utoa@d+3,utoa@n+3
  7395  003D26  C025  F039         	movff	utoa@d+4,utoa@n+4
  7396  003D2A  C026  F03A         	movff	utoa@d+5,utoa@n+5
  7397  003D2E  C027  F03B         	movff	utoa@d+6,utoa@n+6
  7398  003D32  C028  F03C         	movff	utoa@d+7,utoa@n+7
  7399  003D36                     
  7400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7401  003D36  0E00               	movlw	0
  7402  003D38  6E3E               	movwf	(utoa@i+1)^0,c
  7403  003D3A  0E4F               	movlw	79
  7404  003D3C  6E3D               	movwf	utoa@i^0,c
  7405  003D3E                     
  7406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7407  003D3E  0E00               	movlw	0
  7408  003D40  0101               	movlb	1	; () banked
  7409  003D42  6FD9               	movwf	(_dbuf+79)& (0+255),b
  7410                           
  7411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7412  003D44  EF1A  F01F         	goto	l8550
  7413  003D48                     l8540:
  7414                           
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7416  003D48  063D               	decf	utoa@i^0,f,c
  7417  003D4A  A0D8               	btfss	status,0,c
  7418  003D4C  063E               	decf	(utoa@i+1)^0,f,c
  7419  003D4E                     
  7420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7421  003D4E  0E8A               	movlw	low _dbuf
  7422  003D50  243D               	addwf	utoa@i^0,w,c
  7423  003D52  6ED9               	movwf	fsr2l,c
  7424  003D54  0E01               	movlw	high _dbuf
  7425  003D56  203E               	addwfc	(utoa@i+1)^0,w,c
  7426  003D58  6EDA               	movwf	fsr2h,c
  7427  003D5A  C035  F004         	movff	utoa@n,___lomod@dividend
  7428  003D5E  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  7429  003D62  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  7430  003D66  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  7431  003D6A  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  7432  003D6E  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  7433  003D72  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  7434  003D76  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  7435  003D7A  0E0A               	movlw	10
  7436  003D7C  6E0C               	movwf	___lomod@divisor^0,c
  7437  003D7E  0E00               	movlw	0
  7438  003D80  6E0D               	movwf	(___lomod@divisor+1)^0,c
  7439  003D82  0E00               	movlw	0
  7440  003D84  6E0E               	movwf	(___lomod@divisor+2)^0,c
  7441  003D86  0E00               	movlw	0
  7442  003D88  6E0F               	movwf	(___lomod@divisor+3)^0,c
  7443  003D8A  0E00               	movlw	0
  7444  003D8C  6E10               	movwf	(___lomod@divisor+4)^0,c
  7445  003D8E  0E00               	movlw	0
  7446  003D90  6E11               	movwf	(___lomod@divisor+5)^0,c
  7447  003D92  0E00               	movlw	0
  7448  003D94  6E12               	movwf	(___lomod@divisor+6)^0,c
  7449  003D96  0E00               	movlw	0
  7450  003D98  6E13               	movwf	(___lomod@divisor+7)^0,c
  7451  003D9A  ECC1  F028         	call	___lomod	;wreg free
  7452  003D9E  C004  F029         	movff	?___lomod,??_utoa
  7453  003DA2  C005  F02A         	movff	?___lomod+1,??_utoa+1
  7454  003DA6  C006  F02B         	movff	?___lomod+2,??_utoa+2
  7455  003DAA  C007  F02C         	movff	?___lomod+3,??_utoa+3
  7456  003DAE  C008  F02D         	movff	?___lomod+4,??_utoa+4
  7457  003DB2  C009  F02E         	movff	?___lomod+5,??_utoa+5
  7458  003DB6  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  7459  003DBA  C00B  F030         	movff	?___lomod+7,??_utoa+7
  7460  003DBE  5029               	movf	??_utoa^0,w,c
  7461  003DC0  0F30               	addlw	48
  7462  003DC2  6EDF               	movwf	indf2,c
  7463  003DC4                     
  7464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7465  003DC4  0631               	decf	utoa@p^0,f,c
  7466  003DC6  A0D8               	btfss	status,0,c
  7467  003DC8  0632               	decf	(utoa@p+1)^0,f,c
  7468  003DCA                     
  7469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7470  003DCA  0633               	decf	utoa@w^0,f,c
  7471  003DCC  A0D8               	btfss	status,0,c
  7472  003DCE  0634               	decf	(utoa@w+1)^0,f,c
  7473  003DD0                     
  7474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7475  003DD0  C035  F004         	movff	utoa@n,___lodiv@dividend
  7476  003DD4  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  7477  003DD8  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  7478  003DDC  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  7479  003DE0  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  7480  003DE4  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  7481  003DE8  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  7482  003DEC  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  7483  003DF0  0E0A               	movlw	10
  7484  003DF2  6E0C               	movwf	___lodiv@divisor^0,c
  7485  003DF4  0E00               	movlw	0
  7486  003DF6  6E0D               	movwf	(___lodiv@divisor+1)^0,c
  7487  003DF8  0E00               	movlw	0
  7488  003DFA  6E0E               	movwf	(___lodiv@divisor+2)^0,c
  7489  003DFC  0E00               	movlw	0
  7490  003DFE  6E0F               	movwf	(___lodiv@divisor+3)^0,c
  7491  003E00  0E00               	movlw	0
  7492  003E02  6E10               	movwf	(___lodiv@divisor+4)^0,c
  7493  003E04  0E00               	movlw	0
  7494  003E06  6E11               	movwf	(___lodiv@divisor+5)^0,c
  7495  003E08  0E00               	movlw	0
  7496  003E0A  6E12               	movwf	(___lodiv@divisor+6)^0,c
  7497  003E0C  0E00               	movlw	0
  7498  003E0E  6E13               	movwf	(___lodiv@divisor+7)^0,c
  7499  003E10  EC49  F028         	call	___lodiv	;wreg free
  7500  003E14  C004  F035         	movff	?___lodiv,utoa@n
  7501  003E18  C005  F036         	movff	?___lodiv+1,utoa@n+1
  7502  003E1C  C006  F037         	movff	?___lodiv+2,utoa@n+2
  7503  003E20  C007  F038         	movff	?___lodiv+3,utoa@n+3
  7504  003E24  C008  F039         	movff	?___lodiv+4,utoa@n+4
  7505  003E28  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  7506  003E2C  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  7507  003E30  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  7508  003E34                     l8550:
  7509                           
  7510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7511  003E34  503D               	movf	utoa@i^0,w,c
  7512  003E36  103E               	iorwf	(utoa@i+1)^0,w,c
  7513  003E38  B4D8               	btfsc	status,2,c
  7514  003E3A  EF21  F01F         	goto	u11141
  7515  003E3E  EF23  F01F         	goto	u11140
  7516  003E42                     u11141:
  7517  003E42  EF54  F01F         	goto	l8560
  7518  003E46                     u11140:
  7519  003E46  5035               	movf	utoa@n^0,w,c
  7520  003E48  1036               	iorwf	(utoa@n+1)^0,w,c
  7521  003E4A  1037               	iorwf	(utoa@n+2)^0,w,c
  7522  003E4C  1038               	iorwf	(utoa@n+3)^0,w,c
  7523  003E4E  1039               	iorwf	(utoa@n+4)^0,w,c
  7524  003E50  103A               	iorwf	(utoa@n+5)^0,w,c
  7525  003E52  103B               	iorwf	(utoa@n+6)^0,w,c
  7526  003E54  103C               	iorwf	(utoa@n+7)^0,w,c
  7527  003E56  A4D8               	btfss	status,2,c
  7528  003E58  EF30  F01F         	goto	u11151
  7529  003E5C  EF32  F01F         	goto	u11150
  7530  003E60                     u11151:
  7531  003E60  EFA4  F01E         	goto	l8540
  7532  003E64                     u11150:
  7533  003E64  BE32               	btfsc	(utoa@p+1)^0,7,c
  7534  003E66  EF3F  F01F         	goto	u11160
  7535  003E6A  5032               	movf	(utoa@p+1)^0,w,c
  7536  003E6C  E106               	bnz	u11161
  7537  003E6E  0431               	decf	utoa@p^0,w,c
  7538  003E70  B0D8               	btfsc	status,0,c
  7539  003E72  EF3D  F01F         	goto	u11161
  7540  003E76  EF3F  F01F         	goto	u11160
  7541  003E7A                     u11161:
  7542  003E7A  EFA4  F01E         	goto	l8540
  7543  003E7E                     u11160:
  7544  003E7E  BE34               	btfsc	(utoa@w+1)^0,7,c
  7545  003E80  EF4A  F01F         	goto	u11171
  7546  003E84  5034               	movf	(utoa@w+1)^0,w,c
  7547  003E86  E108               	bnz	u11170
  7548  003E88  0433               	decf	utoa@w^0,w,c
  7549  003E8A  A0D8               	btfss	status,0,c
  7550  003E8C  EF4A  F01F         	goto	u11171
  7551  003E90  EF4C  F01F         	goto	u11170
  7552  003E94                     u11171:
  7553  003E94  EF54  F01F         	goto	l8560
  7554  003E98                     u11170:
  7555  003E98  0100               	movlb	0	; () banked
  7556  003E9A  B3FC               	btfsc	_flags& (0+255),1,b
  7557  003E9C  EF52  F01F         	goto	u11181
  7558  003EA0  EF54  F01F         	goto	u11180
  7559  003EA4                     u11181:
  7560  003EA4  EFA4  F01E         	goto	l8540
  7561  003EA8                     u11180:
  7562  003EA8                     l8560:
  7563                           
  7564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7565  003EA8  C01F  F014         	movff	utoa@fp,pad@fp
  7566  003EAC  C020  F015         	movff	utoa@fp+1,pad@fp+1
  7567  003EB0  0E8A               	movlw	low _dbuf
  7568  003EB2  243D               	addwf	utoa@i^0,w,c
  7569  003EB4  6E16               	movwf	pad@buf^0,c
  7570  003EB6  0E01               	movlw	high _dbuf
  7571  003EB8  203E               	addwfc	(utoa@i+1)^0,w,c
  7572  003EBA  6E17               	movwf	(pad@buf+1)^0,c
  7573  003EBC  C033  F018         	movff	utoa@w,pad@p
  7574  003EC0  C034  F019         	movff	utoa@w+1,pad@p+1
  7575  003EC4  EC8E  F029         	call	_pad	;wreg free
  7576  003EC8  C014  F01F         	movff	?_pad,?_utoa
  7577  003ECC  C015  F020         	movff	?_pad+1,?_utoa+1
  7578  003ED0  0012               	return		;funcret
  7579  003ED2                     __end_of_utoa:
  7580                           	opt callstack 0
  7581                           
  7582 ;; *************** function ___lomod *****************
  7583 ;; Defined at:
  7584 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  dividend        8    3[COMRAM] unsigned long long 
  7587 ;;  divisor         8   11[COMRAM] unsigned long long 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  counter         1   19[COMRAM] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  8    3[COMRAM] unsigned long long 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7599 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;Total ram usage:       17 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    4
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_utoa
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text10
  7614  005182                     __ptext10:
  7615                           	opt callstack 0
  7616  005182                     ___lomod:
  7617                           	opt callstack 21
  7618  005182  500C               	movf	___lomod@divisor^0,w,c
  7619  005184  100D               	iorwf	(___lomod@divisor+1)^0,w,c
  7620  005186  100E               	iorwf	(___lomod@divisor+2)^0,w,c
  7621  005188  100F               	iorwf	(___lomod@divisor+3)^0,w,c
  7622  00518A  1010               	iorwf	(___lomod@divisor+4)^0,w,c
  7623  00518C  1011               	iorwf	(___lomod@divisor+5)^0,w,c
  7624  00518E  1012               	iorwf	(___lomod@divisor+6)^0,w,c
  7625  005190  1013               	iorwf	(___lomod@divisor+7)^0,w,c
  7626  005192  B4D8               	btfsc	status,2,c
  7627  005194  EFCE  F028         	goto	u10201
  7628  005198  EFD0  F028         	goto	u10200
  7629  00519C                     u10201:
  7630  00519C  EF18  F029         	goto	l1253
  7631  0051A0                     u10200:
  7632  0051A0  0E01               	movlw	1
  7633  0051A2  6E14               	movwf	___lomod@counter^0,c
  7634  0051A4  EFDE  F028         	goto	l8042
  7635  0051A8                     l8040:
  7636  0051A8  90D8               	bcf	status,0,c
  7637  0051AA  360C               	rlcf	___lomod@divisor^0,f,c
  7638  0051AC  360D               	rlcf	(___lomod@divisor+1)^0,f,c
  7639  0051AE  360E               	rlcf	(___lomod@divisor+2)^0,f,c
  7640  0051B0  360F               	rlcf	(___lomod@divisor+3)^0,f,c
  7641  0051B2  3610               	rlcf	(___lomod@divisor+4)^0,f,c
  7642  0051B4  3611               	rlcf	(___lomod@divisor+5)^0,f,c
  7643  0051B6  3612               	rlcf	(___lomod@divisor+6)^0,f,c
  7644  0051B8  3613               	rlcf	(___lomod@divisor+7)^0,f,c
  7645  0051BA  2A14               	incf	___lomod@counter^0,f,c
  7646  0051BC                     l8042:
  7647  0051BC  AE13               	btfss	(___lomod@divisor+7)^0,7,c
  7648  0051BE  EFE3  F028         	goto	u10211
  7649  0051C2  EFE5  F028         	goto	u10210
  7650  0051C6                     u10211:
  7651  0051C6  EFD4  F028         	goto	l8040
  7652  0051CA                     u10210:
  7653  0051CA                     l8044:
  7654  0051CA  500C               	movf	___lomod@divisor^0,w,c
  7655  0051CC  5C04               	subwf	___lomod@dividend^0,w,c
  7656  0051CE  500D               	movf	(___lomod@divisor+1)^0,w,c
  7657  0051D0  5805               	subwfb	(___lomod@dividend+1)^0,w,c
  7658  0051D2  500E               	movf	(___lomod@divisor+2)^0,w,c
  7659  0051D4  5806               	subwfb	(___lomod@dividend+2)^0,w,c
  7660  0051D6  500F               	movf	(___lomod@divisor+3)^0,w,c
  7661  0051D8  5807               	subwfb	(___lomod@dividend+3)^0,w,c
  7662  0051DA  5010               	movf	(___lomod@divisor+4)^0,w,c
  7663  0051DC  5808               	subwfb	(___lomod@dividend+4)^0,w,c
  7664  0051DE  5011               	movf	(___lomod@divisor+5)^0,w,c
  7665  0051E0  5809               	subwfb	(___lomod@dividend+5)^0,w,c
  7666  0051E2  5012               	movf	(___lomod@divisor+6)^0,w,c
  7667  0051E4  580A               	subwfb	(___lomod@dividend+6)^0,w,c
  7668  0051E6  5013               	movf	(___lomod@divisor+7)^0,w,c
  7669  0051E8  580B               	subwfb	(___lomod@dividend+7)^0,w,c
  7670  0051EA  A0D8               	btfss	status,0,c
  7671  0051EC  EFFA  F028         	goto	u10221
  7672  0051F0  EFFC  F028         	goto	u10220
  7673  0051F4                     u10221:
  7674  0051F4  EF0C  F029         	goto	l8048
  7675  0051F8                     u10220:
  7676  0051F8  500C               	movf	___lomod@divisor^0,w,c
  7677  0051FA  5E04               	subwf	___lomod@dividend^0,f,c
  7678  0051FC  500D               	movf	(___lomod@divisor+1)^0,w,c
  7679  0051FE  5A05               	subwfb	(___lomod@dividend+1)^0,f,c
  7680  005200  500E               	movf	(___lomod@divisor+2)^0,w,c
  7681  005202  5A06               	subwfb	(___lomod@dividend+2)^0,f,c
  7682  005204  500F               	movf	(___lomod@divisor+3)^0,w,c
  7683  005206  5A07               	subwfb	(___lomod@dividend+3)^0,f,c
  7684  005208  5010               	movf	(___lomod@divisor+4)^0,w,c
  7685  00520A  5A08               	subwfb	(___lomod@dividend+4)^0,f,c
  7686  00520C  5011               	movf	(___lomod@divisor+5)^0,w,c
  7687  00520E  5A09               	subwfb	(___lomod@dividend+5)^0,f,c
  7688  005210  5012               	movf	(___lomod@divisor+6)^0,w,c
  7689  005212  5A0A               	subwfb	(___lomod@dividend+6)^0,f,c
  7690  005214  5013               	movf	(___lomod@divisor+7)^0,w,c
  7691  005216  5A0B               	subwfb	(___lomod@dividend+7)^0,f,c
  7692  005218                     l8048:
  7693  005218  90D8               	bcf	status,0,c
  7694  00521A  3213               	rrcf	(___lomod@divisor+7)^0,f,c
  7695  00521C  3212               	rrcf	(___lomod@divisor+6)^0,f,c
  7696  00521E  3211               	rrcf	(___lomod@divisor+5)^0,f,c
  7697  005220  3210               	rrcf	(___lomod@divisor+4)^0,f,c
  7698  005222  320F               	rrcf	(___lomod@divisor+3)^0,f,c
  7699  005224  320E               	rrcf	(___lomod@divisor+2)^0,f,c
  7700  005226  320D               	rrcf	(___lomod@divisor+1)^0,f,c
  7701  005228  320C               	rrcf	___lomod@divisor^0,f,c
  7702  00522A  2E14               	decfsz	___lomod@counter^0,f,c
  7703  00522C  EFE5  F028         	goto	l8044
  7704  005230                     l1253:
  7705  005230  C004  F004         	movff	___lomod@dividend,?___lomod
  7706  005234  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  7707  005238  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  7708  00523C  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  7709  005240  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  7710  005244  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  7711  005248  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  7712  00524C  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  7713  005250  0012               	return		;funcret
  7714  005252                     __end_of___lomod:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function ___lodiv *****************
  7718 ;; Defined at:
  7719 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  dividend        8    3[COMRAM] unsigned long long 
  7722 ;;  divisor         8   11[COMRAM] unsigned long long 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  quotient        8   19[COMRAM] unsigned long long 
  7725 ;;  counter         1   27[COMRAM] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  8    3[COMRAM] unsigned long long 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7735 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7736 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7738 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7739 ;;Total ram usage:       25 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    4
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_utoa
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text11
  7750  005092                     __ptext11:
  7751                           	opt callstack 0
  7752  005092                     ___lodiv:
  7753                           	opt callstack 21
  7754  005092  EE20  F014         	lfsr	2,___lodiv@quotient
  7755  005096  0E07               	movlw	7
  7756  005098                     u10161:
  7757  005098  6ADE               	clrf	postinc2,c
  7758  00509A  06E8               	decf	wreg,f,c
  7759  00509C  E2FD               	bc	u10161
  7760  00509E  500C               	movf	___lodiv@divisor^0,w,c
  7761  0050A0  100D               	iorwf	(___lodiv@divisor+1)^0,w,c
  7762  0050A2  100E               	iorwf	(___lodiv@divisor+2)^0,w,c
  7763  0050A4  100F               	iorwf	(___lodiv@divisor+3)^0,w,c
  7764  0050A6  1010               	iorwf	(___lodiv@divisor+4)^0,w,c
  7765  0050A8  1011               	iorwf	(___lodiv@divisor+5)^0,w,c
  7766  0050AA  1012               	iorwf	(___lodiv@divisor+6)^0,w,c
  7767  0050AC  1013               	iorwf	(___lodiv@divisor+7)^0,w,c
  7768  0050AE  B4D8               	btfsc	status,2,c
  7769  0050B0  EF5C  F028         	goto	u10171
  7770  0050B4  EF5E  F028         	goto	u10170
  7771  0050B8                     u10171:
  7772  0050B8  EFB0  F028         	goto	l1243
  7773  0050BC                     u10170:
  7774  0050BC  0E01               	movlw	1
  7775  0050BE  6E1C               	movwf	___lodiv@counter^0,c
  7776  0050C0  EF6C  F028         	goto	l8022
  7777  0050C4                     l8020:
  7778  0050C4  90D8               	bcf	status,0,c
  7779  0050C6  360C               	rlcf	___lodiv@divisor^0,f,c
  7780  0050C8  360D               	rlcf	(___lodiv@divisor+1)^0,f,c
  7781  0050CA  360E               	rlcf	(___lodiv@divisor+2)^0,f,c
  7782  0050CC  360F               	rlcf	(___lodiv@divisor+3)^0,f,c
  7783  0050CE  3610               	rlcf	(___lodiv@divisor+4)^0,f,c
  7784  0050D0  3611               	rlcf	(___lodiv@divisor+5)^0,f,c
  7785  0050D2  3612               	rlcf	(___lodiv@divisor+6)^0,f,c
  7786  0050D4  3613               	rlcf	(___lodiv@divisor+7)^0,f,c
  7787  0050D6  2A1C               	incf	___lodiv@counter^0,f,c
  7788  0050D8                     l8022:
  7789  0050D8  AE13               	btfss	(___lodiv@divisor+7)^0,7,c
  7790  0050DA  EF71  F028         	goto	u10181
  7791  0050DE  EF73  F028         	goto	u10180
  7792  0050E2                     u10181:
  7793  0050E2  EF62  F028         	goto	l8020
  7794  0050E6                     u10180:
  7795  0050E6                     l8024:
  7796  0050E6  90D8               	bcf	status,0,c
  7797  0050E8  3614               	rlcf	___lodiv@quotient^0,f,c
  7798  0050EA  3615               	rlcf	(___lodiv@quotient+1)^0,f,c
  7799  0050EC  3616               	rlcf	(___lodiv@quotient+2)^0,f,c
  7800  0050EE  3617               	rlcf	(___lodiv@quotient+3)^0,f,c
  7801  0050F0  3618               	rlcf	(___lodiv@quotient+4)^0,f,c
  7802  0050F2  3619               	rlcf	(___lodiv@quotient+5)^0,f,c
  7803  0050F4  361A               	rlcf	(___lodiv@quotient+6)^0,f,c
  7804  0050F6  361B               	rlcf	(___lodiv@quotient+7)^0,f,c
  7805  0050F8  500C               	movf	___lodiv@divisor^0,w,c
  7806  0050FA  5C04               	subwf	___lodiv@dividend^0,w,c
  7807  0050FC  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7808  0050FE  5805               	subwfb	(___lodiv@dividend+1)^0,w,c
  7809  005100  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7810  005102  5806               	subwfb	(___lodiv@dividend+2)^0,w,c
  7811  005104  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7812  005106  5807               	subwfb	(___lodiv@dividend+3)^0,w,c
  7813  005108  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7814  00510A  5808               	subwfb	(___lodiv@dividend+4)^0,w,c
  7815  00510C  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7816  00510E  5809               	subwfb	(___lodiv@dividend+5)^0,w,c
  7817  005110  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7818  005112  580A               	subwfb	(___lodiv@dividend+6)^0,w,c
  7819  005114  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7820  005116  580B               	subwfb	(___lodiv@dividend+7)^0,w,c
  7821  005118  A0D8               	btfss	status,0,c
  7822  00511A  EF91  F028         	goto	u10191
  7823  00511E  EF93  F028         	goto	u10190
  7824  005122                     u10191:
  7825  005122  EFA4  F028         	goto	l8032
  7826  005126                     u10190:
  7827  005126  500C               	movf	___lodiv@divisor^0,w,c
  7828  005128  5E04               	subwf	___lodiv@dividend^0,f,c
  7829  00512A  500D               	movf	(___lodiv@divisor+1)^0,w,c
  7830  00512C  5A05               	subwfb	(___lodiv@dividend+1)^0,f,c
  7831  00512E  500E               	movf	(___lodiv@divisor+2)^0,w,c
  7832  005130  5A06               	subwfb	(___lodiv@dividend+2)^0,f,c
  7833  005132  500F               	movf	(___lodiv@divisor+3)^0,w,c
  7834  005134  5A07               	subwfb	(___lodiv@dividend+3)^0,f,c
  7835  005136  5010               	movf	(___lodiv@divisor+4)^0,w,c
  7836  005138  5A08               	subwfb	(___lodiv@dividend+4)^0,f,c
  7837  00513A  5011               	movf	(___lodiv@divisor+5)^0,w,c
  7838  00513C  5A09               	subwfb	(___lodiv@dividend+5)^0,f,c
  7839  00513E  5012               	movf	(___lodiv@divisor+6)^0,w,c
  7840  005140  5A0A               	subwfb	(___lodiv@dividend+6)^0,f,c
  7841  005142  5013               	movf	(___lodiv@divisor+7)^0,w,c
  7842  005144  5A0B               	subwfb	(___lodiv@dividend+7)^0,f,c
  7843  005146  8014               	bsf	___lodiv@quotient^0,0,c
  7844  005148                     l8032:
  7845  005148  90D8               	bcf	status,0,c
  7846  00514A  3213               	rrcf	(___lodiv@divisor+7)^0,f,c
  7847  00514C  3212               	rrcf	(___lodiv@divisor+6)^0,f,c
  7848  00514E  3211               	rrcf	(___lodiv@divisor+5)^0,f,c
  7849  005150  3210               	rrcf	(___lodiv@divisor+4)^0,f,c
  7850  005152  320F               	rrcf	(___lodiv@divisor+3)^0,f,c
  7851  005154  320E               	rrcf	(___lodiv@divisor+2)^0,f,c
  7852  005156  320D               	rrcf	(___lodiv@divisor+1)^0,f,c
  7853  005158  320C               	rrcf	___lodiv@divisor^0,f,c
  7854  00515A  2E1C               	decfsz	___lodiv@counter^0,f,c
  7855  00515C  EF73  F028         	goto	l8024
  7856  005160                     l1243:
  7857  005160  C014  F004         	movff	___lodiv@quotient,?___lodiv
  7858  005164  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  7859  005168  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  7860  00516C  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  7861  005170  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  7862  005174  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  7863  005178  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  7864  00517C  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  7865  005180  0012               	return		;funcret
  7866  005182                     __end_of___lodiv:
  7867                           	opt callstack 0
  7868                           
  7869 ;; *************** function _strncmp *****************
  7870 ;; Defined at:
  7871 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  7874 ;;		 -> vfpfcnvrt@ct(3), STR_4(21), STR_3(16), STR_2(17), 
  7875 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  7876 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7877 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7878 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7879 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7880 ;;		 -> STR_37(3), STR_33(3), STR_28(3), STR_24(3), 
  7881 ;;		 -> STR_19(4), STR_15(4), 
  7882 ;;  n               2    7[COMRAM] unsigned int 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  r               2   12[COMRAM] PTR const unsigned char 
  7885 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7886 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7887 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7888 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7889 ;;		 -> STR_37(3), STR_33(3), STR_28(3), STR_24(3), 
  7890 ;;		 -> STR_19(4), STR_15(4), 
  7891 ;;  l               2   10[COMRAM] PTR const unsigned char 
  7892 ;;		 -> vfpfcnvrt@ct(3), STR_4(21), STR_3(16), STR_2(17), 
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  2    3[COMRAM] int 
  7895 ;; Registers used:
  7896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7902 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7905 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7906 ;;Total ram usage:       11 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    4
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_vfpfcnvrt
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text12
  7917  004C64                     __ptext12:
  7918                           	opt callstack 0
  7919  004C64                     _strncmp:
  7920                           	opt callstack 22
  7921  004C64  C004  F00B         	movff	strncmp@_l,strncmp@l
  7922  004C68  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  7923  004C6C  C006  F00D         	movff	strncmp@_r,strncmp@r
  7924  004C70  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  7925  004C74  0608               	decf	strncmp@n^0,f,c
  7926  004C76  A0D8               	btfss	status,0,c
  7927  004C78  0609               	decf	(strncmp@n+1)^0,f,c
  7928  004C7A  2808               	incf	strncmp@n^0,w,c
  7929  004C7C  E106               	bnz	u11431
  7930  004C7E  2809               	incf	(strncmp@n+1)^0,w,c
  7931  004C80  A4D8               	btfss	status,2,c
  7932  004C82  EF45  F026         	goto	u11431
  7933  004C86  EF47  F026         	goto	u11430
  7934  004C8A                     u11431:
  7935  004C8A  EF54  F026         	goto	l8680
  7936  004C8E                     u11430:
  7937  004C8E  0E00               	movlw	0
  7938  004C90  6E05               	movwf	(?_strncmp+1)^0,c
  7939  004C92  0E00               	movlw	0
  7940  004C94  6E04               	movwf	?_strncmp^0,c
  7941  004C96  EFC4  F026         	goto	l1610
  7942  004C9A                     l8678:
  7943  004C9A  4A0B               	infsnz	strncmp@l^0,f,c
  7944  004C9C  2A0C               	incf	(strncmp@l+1)^0,f,c
  7945  004C9E  4A0D               	infsnz	strncmp@r^0,f,c
  7946  004CA0  2A0E               	incf	(strncmp@r+1)^0,f,c
  7947  004CA2  0608               	decf	strncmp@n^0,f,c
  7948  004CA4  A0D8               	btfss	status,0,c
  7949  004CA6  0609               	decf	(strncmp@n+1)^0,f,c
  7950  004CA8                     l8680:
  7951  004CA8  C00B  FFF6         	movff	strncmp@l,tblptrl
  7952  004CAC  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7953  004CB0  0E00               	movlw	low (__mediumconst shr (0+16))
  7954  004CB2  6EF8               	movwf	tblptru,c
  7955  004CB4  0E0E               	movlw	(high __ramtop+-1)
  7956  004CB6  64F7               	cpfsgt	tblptrh,c
  7957  004CB8  D003               	bra	u11447
  7958  004CBA  0008               	tblrd		*
  7959  004CBC  50F5               	movf	tablat,w,c
  7960  004CBE  D005               	bra	u11440
  7961  004CC0                     u11447:
  7962  004CC0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7963  004CC4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7964  004CC8  50E7               	movf	indf1,w,c
  7965  004CCA                     u11440:
  7966  004CCA  0900               	iorlw	0
  7967  004CCC  B4D8               	btfsc	status,2,c
  7968  004CCE  EF6B  F026         	goto	u11451
  7969  004CD2  EF6D  F026         	goto	u11450
  7970  004CD6                     u11451:
  7971  004CD6  EFA6  F026         	goto	l8688
  7972  004CDA                     u11450:
  7973  004CDA  C00D  FFF6         	movff	strncmp@r,tblptrl
  7974  004CDE  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7975  004CE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7976  004CE2  6AF8               	clrf	tblptru,c
  7977  004CE4                     	endif
  7978  004CE4                     	if	0	;tblptru may be non-zero
  7979  004CE4                     	endif
  7980  004CE4  0008               	tblrd		*
  7981  004CE6  50F5               	movf	tablat,w,c
  7982  004CE8  0900               	iorlw	0
  7983  004CEA  B4D8               	btfsc	status,2,c
  7984  004CEC  EF7A  F026         	goto	u11461
  7985  004CF0  EF7C  F026         	goto	u11460
  7986  004CF4                     u11461:
  7987  004CF4  EFA6  F026         	goto	l8688
  7988  004CF8                     u11460:
  7989  004CF8  5008               	movf	strncmp@n^0,w,c
  7990  004CFA  1009               	iorwf	(strncmp@n+1)^0,w,c
  7991  004CFC  B4D8               	btfsc	status,2,c
  7992  004CFE  EF83  F026         	goto	u11471
  7993  004D02  EF85  F026         	goto	u11470
  7994  004D06                     u11471:
  7995  004D06  EFA6  F026         	goto	l8688
  7996  004D0A                     u11470:
  7997  004D0A  C00D  FFF6         	movff	strncmp@r,tblptrl
  7998  004D0E  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7999  004D12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8000  004D12  6AF8               	clrf	tblptru,c
  8001  004D14                     	endif
  8002  004D14                     	if	0	;tblptru may be non-zero
  8003  004D14                     	endif
  8004  004D14  0008               	tblrd		*
  8005  004D16  CFF5 F00A          	movff	tablat,??_strncmp
  8006  004D1A  C00B  FFF6         	movff	strncmp@l,tblptrl
  8007  004D1E  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  8008  004D22  0E00               	movlw	low (__mediumconst shr (0+16))
  8009  004D24  6EF8               	movwf	tblptru,c
  8010  004D26  0E0E               	movlw	(high __ramtop+-1)
  8011  004D28  64F7               	cpfsgt	tblptrh,c
  8012  004D2A  D003               	bra	u11487
  8013  004D2C  0008               	tblrd		*
  8014  004D2E  50F5               	movf	tablat,w,c
  8015  004D30  D005               	bra	u11485
  8016  004D32                     u11487:
  8017  004D32  CFF6 FFE1          	movff	tblptrl,fsr1l
  8018  004D36  CFF7 FFE2          	movff	tblptrh,fsr1h
  8019  004D3A  50E7               	movf	indf1,w,c
  8020  004D3C                     u11485:
  8021  004D3C  180A               	xorwf	??_strncmp^0,w,c
  8022  004D3E  B4D8               	btfsc	status,2,c
  8023  004D40  EFA4  F026         	goto	u11481
  8024  004D44  EFA6  F026         	goto	u11480
  8025  004D48                     u11481:
  8026  004D48  EF4D  F026         	goto	l8678
  8027  004D4C                     u11480:
  8028  004D4C                     l8688:
  8029  004D4C  C00B  FFF6         	movff	strncmp@l,tblptrl
  8030  004D50  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  8031  004D54  0E00               	movlw	low (__mediumconst shr (0+16))
  8032  004D56  6EF8               	movwf	tblptru,c
  8033  004D58  0E0E               	movlw	(high __ramtop+-1)
  8034  004D5A  64F7               	cpfsgt	tblptrh,c
  8035  004D5C  D003               	bra	u11497
  8036  004D5E  0008               	tblrd		*
  8037  004D60  50F5               	movf	tablat,w,c
  8038  004D62  D005               	bra	u11490
  8039  004D64                     u11497:
  8040  004D64  CFF6 FFE1          	movff	tblptrl,fsr1l
  8041  004D68  CFF7 FFE2          	movff	tblptrh,fsr1h
  8042  004D6C  50E7               	movf	indf1,w,c
  8043  004D6E                     u11490:
  8044  004D6E  6E0A               	movwf	??_strncmp^0,c
  8045  004D70  C00D  FFF6         	movff	strncmp@r,tblptrl
  8046  004D74  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  8047  004D78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8048  004D78  6AF8               	clrf	tblptru,c
  8049  004D7A                     	endif
  8050  004D7A                     	if	0	;tblptru may be non-zero
  8051  004D7A                     	endif
  8052  004D7A  0008               	tblrd		*
  8053  004D7C  50F5               	movf	tablat,w,c
  8054  004D7E  5C0A               	subwf	??_strncmp^0,w,c
  8055  004D80  6E04               	movwf	?_strncmp^0,c
  8056  004D82  6A05               	clrf	(?_strncmp+1)^0,c
  8057  004D84  A0D8               	btfss	status,0,c
  8058  004D86  0605               	decf	(?_strncmp+1)^0,f,c
  8059  004D88                     l1610:
  8060  004D88  0012               	return		;funcret
  8061  004D8A                     __end_of_strncmp:
  8062                           	opt callstack 0
  8063                           
  8064 ;; *************** function _stoa *****************
  8065 ;; Defined at:
  8066 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  8069 ;;		 -> vsnprintf@f(6), 
  8070 ;;  s               2   14[COMRAM] PTR unsigned char 
  8071 ;;		 -> ?_snprintf(2), tensao_in(4), 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  nuls            7   17[COMRAM] unsigned char [7]
  8074 ;;  l               2   32[COMRAM] int 
  8075 ;;  p               2   30[COMRAM] int 
  8076 ;;  cp              2   28[COMRAM] PTR unsigned char 
  8077 ;;		 -> ?_snprintf(2), stoa@nuls(7), tensao_in(4), 
  8078 ;;  w               2   26[COMRAM] int 
  8079 ;;  i               2   24[COMRAM] int 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  2   12[COMRAM] int 
  8082 ;; Registers used:
  8083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8090 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8092 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;Total ram usage:       22 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    6
  8096 ;; This function calls:
  8097 ;;		_fputc
  8098 ;;		_strlen
  8099 ;; This function is called by:
  8100 ;;		_vfpfcnvrt
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text13
  8105  004598                     __ptext13:
  8106                           	opt callstack 0
  8107  004598                     _stoa:
  8108                           	opt callstack 20
  8109  004598                     
  8110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8111  004598  EE21  F0F2         	lfsr	2,stoa@F1174
  8112  00459C  EE10  F012         	lfsr	1,stoa@nuls
  8113  0045A0  0E06               	movlw	6
  8114  0045A2                     u11031:
  8115  0045A2  CFDB FFE3          	movff	plusw2,plusw1
  8116  0045A6  06E8               	decf	wreg,f,c
  8117  0045A8  E2FC               	bc	u11031
  8118  0045AA                     
  8119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8120  0045AA  C00F  F01D         	movff	stoa@s,stoa@cp
  8121  0045AE  C010  F01E         	movff	stoa@s+1,stoa@cp+1
  8122  0045B2                     
  8123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8124  0045B2  501D               	movf	stoa@cp^0,w,c
  8125  0045B4  101E               	iorwf	(stoa@cp+1)^0,w,c
  8126  0045B6  A4D8               	btfss	status,2,c
  8127  0045B8  EFE0  F022         	goto	u11041
  8128  0045BC  EFE2  F022         	goto	u11040
  8129  0045C0                     u11041:
  8130  0045C0  EFE6  F022         	goto	l8494
  8131  0045C4                     u11040:
  8132  0045C4                     
  8133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8134  0045C4  0E12               	movlw	low stoa@nuls
  8135  0045C6  6E1D               	movwf	stoa@cp^0,c
  8136  0045C8  0E00               	movlw	high stoa@nuls
  8137  0045CA  6E1E               	movwf	(stoa@cp+1)^0,c
  8138  0045CC                     l8494:
  8139                           
  8140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8141  0045CC  C01D  F004         	movff	stoa@cp,strlen@s
  8142  0045D0  C01E  F005         	movff	stoa@cp+1,strlen@s+1
  8143  0045D4  ECA3  F02E         	call	_strlen	;wreg free
  8144  0045D8  C004  F021         	movff	?_strlen,stoa@l
  8145  0045DC  C005  F022         	movff	?_strlen+1,stoa@l+1
  8146  0045E0                     
  8147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8148  0045E0  C05A  F01F         	movff	_prec,stoa@p
  8149  0045E4  C05B  F020         	movff	_prec+1,stoa@p+1
  8150  0045E8                     
  8151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8152  0045E8  BE20               	btfsc	(stoa@p+1)^0,7,c
  8153  0045EA  EFF9  F022         	goto	u11051
  8154  0045EE  EFFB  F022         	goto	u11050
  8155  0045F2                     u11051:
  8156  0045F2  EF10  F023         	goto	l651
  8157  0045F6                     u11050:
  8158  0045F6  5021               	movf	stoa@l^0,w,c
  8159  0045F8  5C1F               	subwf	stoa@p^0,w,c
  8160  0045FA  5020               	movf	(stoa@p+1)^0,w,c
  8161  0045FC  0A80               	xorlw	128
  8162  0045FE  6E11               	movwf	??_stoa^0,c
  8163  004600  5022               	movf	(stoa@l+1)^0,w,c
  8164  004602  0A80               	xorlw	128
  8165  004604  5811               	subwfb	??_stoa^0,w,c
  8166  004606  A0D8               	btfss	status,0,c
  8167  004608  EF08  F023         	goto	u11061
  8168  00460C  EF0A  F023         	goto	u11060
  8169  004610                     u11061:
  8170  004610  EF0C  F023         	goto	l649
  8171  004614                     u11060:
  8172  004614  EF10  F023         	goto	l651
  8173  004618                     l649:
  8174  004618  C01F  F021         	movff	stoa@p,stoa@l
  8175  00461C  C020  F022         	movff	stoa@p+1,stoa@l+1
  8176  004620                     l651:
  8177                           
  8178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8179  004620  C021  F01F         	movff	stoa@l,stoa@p
  8180  004624  C022  F020         	movff	stoa@l+1,stoa@p+1
  8181                           
  8182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8183  004628  C11C  F01B         	movff	_width,stoa@w
  8184  00462C  C11D  F01C         	movff	_width+1,stoa@w+1
  8185                           
  8186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8187  004630  0100               	movlb	0	; () banked
  8188  004632  B1FC               	btfsc	_flags& (0+255),0,b
  8189  004634  EF1E  F023         	goto	u11071
  8190  004638  EF20  F023         	goto	u11070
  8191  00463C                     u11071:
  8192  00463C  EF3D  F023         	goto	l8510
  8193  004640                     u11070:
  8194  004640  EF2E  F023         	goto	l8508
  8195  004644                     l8504:
  8196                           
  8197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8198  004644  0E00               	movlw	0
  8199  004646  6E05               	movwf	(fputc@c+1)^0,c
  8200  004648  0E20               	movlw	32
  8201  00464A  6E04               	movwf	fputc@c^0,c
  8202  00464C  C00D  F006         	movff	stoa@fp,fputc@fp
  8203  004650  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  8204  004654  EC29  F029         	call	_fputc	;wreg free
  8205  004658                     
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8207  004658  4A21               	infsnz	stoa@l^0,f,c
  8208  00465A  2A22               	incf	(stoa@l+1)^0,f,c
  8209  00465C                     l8508:
  8210                           
  8211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8212  00465C  501B               	movf	stoa@w^0,w,c
  8213  00465E  5C21               	subwf	stoa@l^0,w,c
  8214  004660  5022               	movf	(stoa@l+1)^0,w,c
  8215  004662  0A80               	xorlw	128
  8216  004664  6E11               	movwf	??_stoa^0,c
  8217  004666  501C               	movf	(stoa@w+1)^0,w,c
  8218  004668  0A80               	xorlw	128
  8219  00466A  5811               	subwfb	??_stoa^0,w,c
  8220  00466C  A0D8               	btfss	status,0,c
  8221  00466E  EF3B  F023         	goto	u11081
  8222  004672  EF3D  F023         	goto	u11080
  8223  004676                     u11081:
  8224  004676  EF22  F023         	goto	l8504
  8225  00467A                     u11080:
  8226  00467A                     l8510:
  8227                           
  8228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8229  00467A  0E00               	movlw	0
  8230  00467C  6E1A               	movwf	(stoa@i+1)^0,c
  8231  00467E  0E00               	movlw	0
  8232  004680  6E19               	movwf	stoa@i^0,c
  8233                           
  8234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8235  004682  EF56  F023         	goto	l8518
  8236  004686                     l8512:
  8237                           
  8238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8239  004686  C01D  FFD9         	movff	stoa@cp,fsr2l
  8240  00468A  C01E  FFDA         	movff	stoa@cp+1,fsr2h
  8241  00468E  50DF               	movf	indf2,w,c
  8242  004690  6E11               	movwf	??_stoa^0,c
  8243  004692  5011               	movf	??_stoa^0,w,c
  8244  004694  6E04               	movwf	fputc@c^0,c
  8245  004696  6A05               	clrf	(fputc@c+1)^0,c
  8246  004698  C00D  F006         	movff	stoa@fp,fputc@fp
  8247  00469C  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  8248  0046A0  EC29  F029         	call	_fputc	;wreg free
  8249  0046A4                     
  8250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8251  0046A4  4A1D               	infsnz	stoa@cp^0,f,c
  8252  0046A6  2A1E               	incf	(stoa@cp+1)^0,f,c
  8253  0046A8                     
  8254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8255  0046A8  4A19               	infsnz	stoa@i^0,f,c
  8256  0046AA  2A1A               	incf	(stoa@i+1)^0,f,c
  8257  0046AC                     l8518:
  8258                           
  8259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8260  0046AC  501F               	movf	stoa@p^0,w,c
  8261  0046AE  5C19               	subwf	stoa@i^0,w,c
  8262  0046B0  501A               	movf	(stoa@i+1)^0,w,c
  8263  0046B2  0A80               	xorlw	128
  8264  0046B4  6E11               	movwf	??_stoa^0,c
  8265  0046B6  5020               	movf	(stoa@p+1)^0,w,c
  8266  0046B8  0A80               	xorlw	128
  8267  0046BA  5811               	subwfb	??_stoa^0,w,c
  8268  0046BC  A0D8               	btfss	status,0,c
  8269  0046BE  EF63  F023         	goto	u11091
  8270  0046C2  EF65  F023         	goto	u11090
  8271  0046C6                     u11091:
  8272  0046C6  EF43  F023         	goto	l8512
  8273  0046CA                     u11090:
  8274  0046CA                     
  8275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8276  0046CA  0100               	movlb	0	; () banked
  8277  0046CC  A1FC               	btfss	_flags& (0+255),0,b
  8278  0046CE  EF6B  F023         	goto	u11101
  8279  0046D2  EF6D  F023         	goto	u11100
  8280  0046D6                     u11101:
  8281  0046D6  EF8A  F023         	goto	l661
  8282  0046DA                     u11100:
  8283  0046DA  EF7B  F023         	goto	l8526
  8284  0046DE                     l8522:
  8285                           
  8286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8287  0046DE  0E00               	movlw	0
  8288  0046E0  6E05               	movwf	(fputc@c+1)^0,c
  8289  0046E2  0E20               	movlw	32
  8290  0046E4  6E04               	movwf	fputc@c^0,c
  8291  0046E6  C00D  F006         	movff	stoa@fp,fputc@fp
  8292  0046EA  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  8293  0046EE  EC29  F029         	call	_fputc	;wreg free
  8294  0046F2                     
  8295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8296  0046F2  4A21               	infsnz	stoa@l^0,f,c
  8297  0046F4  2A22               	incf	(stoa@l+1)^0,f,c
  8298  0046F6                     l8526:
  8299                           
  8300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8301  0046F6  501B               	movf	stoa@w^0,w,c
  8302  0046F8  5C21               	subwf	stoa@l^0,w,c
  8303  0046FA  5022               	movf	(stoa@l+1)^0,w,c
  8304  0046FC  0A80               	xorlw	128
  8305  0046FE  6E11               	movwf	??_stoa^0,c
  8306  004700  501C               	movf	(stoa@w+1)^0,w,c
  8307  004702  0A80               	xorlw	128
  8308  004704  5811               	subwfb	??_stoa^0,w,c
  8309  004706  A0D8               	btfss	status,0,c
  8310  004708  EF88  F023         	goto	u11111
  8311  00470C  EF8A  F023         	goto	u11110
  8312  004710                     u11111:
  8313  004710  EF6F  F023         	goto	l8522
  8314  004714                     u11110:
  8315  004714                     l661:
  8316                           
  8317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8318  004714  C021  F00D         	movff	stoa@l,?_stoa
  8319  004718  C022  F00E         	movff	stoa@l+1,?_stoa+1
  8320  00471C  0012               	return		;funcret
  8321  00471E                     __end_of_stoa:
  8322                           	opt callstack 0
  8323                           
  8324 ;; *************** function _otoa *****************
  8325 ;; Defined at:
  8326 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  8329 ;;		 -> vsnprintf@f(6), 
  8330 ;;  d               8   32[COMRAM] unsigned long long 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  n               8   54[COMRAM] unsigned long long 
  8333 ;;  i               2   62[COMRAM] int 
  8334 ;;  w               2   52[COMRAM] int 
  8335 ;;  t               2   50[COMRAM] int 
  8336 ;;  p               2   48[COMRAM] int 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  2   30[COMRAM] int 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8346 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;Total ram usage:       34 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    8
  8353 ;; This function calls:
  8354 ;;		_pad
  8355 ;; This function is called by:
  8356 ;;		_vfpfcnvrt
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text14
  8361  003ED2                     __ptext14:
  8362                           	opt callstack 0
  8363  003ED2                     _otoa:
  8364                           	opt callstack 18
  8365  003ED2                     
  8366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8367  003ED2  BE5B               	btfsc	(_prec+1)^0,7,c
  8368  003ED4  EF6E  F01F         	goto	u10931
  8369  003ED8  EF70  F01F         	goto	u10930
  8370  003EDC                     u10931:
  8371  003EDC  EF72  F01F         	goto	l8442
  8372  003EE0                     u10930:
  8373  003EE0                     
  8374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8375  003EE0  0100               	movlb	0	; () banked
  8376  003EE2  93FC               	bcf	_flags& (0+255),1,b
  8377  003EE4                     l8442:
  8378                           
  8379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8380  003EE4  BE5B               	btfsc	(_prec+1)^0,7,c
  8381  003EE6  EF7F  F01F         	goto	u10940
  8382  003EEA  505B               	movf	(_prec+1)^0,w,c
  8383  003EEC  E106               	bnz	u10941
  8384  003EEE  045A               	decf	_prec^0,w,c
  8385  003EF0  B0D8               	btfsc	status,0,c
  8386  003EF2  EF7D  F01F         	goto	u10941
  8387  003EF6  EF7F  F01F         	goto	u10940
  8388  003EFA                     u10941:
  8389  003EFA  EF85  F01F         	goto	l631
  8390  003EFE                     u10940:
  8391  003EFE  0E00               	movlw	0
  8392  003F00  6E32               	movwf	(otoa@p+1)^0,c
  8393  003F02  0E01               	movlw	1
  8394  003F04  6E31               	movwf	otoa@p^0,c
  8395  003F06  EF89  F01F         	goto	l633
  8396  003F0A                     l631:
  8397  003F0A  C05A  F031         	movff	_prec,otoa@p
  8398  003F0E  C05B  F032         	movff	_prec+1,otoa@p+1
  8399  003F12                     l633:
  8400                           
  8401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8402  003F12  C11C  F035         	movff	_width,otoa@w
  8403  003F16  C11D  F036         	movff	_width+1,otoa@w+1
  8404                           
  8405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8406  003F1A  C021  F037         	movff	otoa@d,otoa@n
  8407  003F1E  C022  F038         	movff	otoa@d+1,otoa@n+1
  8408  003F22  C023  F039         	movff	otoa@d+2,otoa@n+2
  8409  003F26  C024  F03A         	movff	otoa@d+3,otoa@n+3
  8410  003F2A  C025  F03B         	movff	otoa@d+4,otoa@n+4
  8411  003F2E  C026  F03C         	movff	otoa@d+5,otoa@n+5
  8412  003F32  C027  F03D         	movff	otoa@d+6,otoa@n+6
  8413  003F36  C028  F03E         	movff	otoa@d+7,otoa@n+7
  8414  003F3A                     
  8415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8416  003F3A  0E00               	movlw	0
  8417  003F3C  6E40               	movwf	(otoa@i+1)^0,c
  8418  003F3E  0E4F               	movlw	79
  8419  003F40  6E3F               	movwf	otoa@i^0,c
  8420  003F42                     
  8421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8422  003F42  0E00               	movlw	0
  8423  003F44  0101               	movlb	1	; () banked
  8424  003F46  6FD9               	movwf	(_dbuf+79)& (0+255),b
  8425  003F48                     
  8426                           ; BSR set to: 1
  8427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8428  003F48  0E00               	movlw	0
  8429  003F4A  6E34               	movwf	(otoa@t+1)^0,c
  8430  003F4C  0E00               	movlw	0
  8431  003F4E  6E33               	movwf	otoa@t^0,c
  8432                           
  8433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8434  003F50  EFEF  F01F         	goto	l8464
  8435  003F54                     l8452:
  8436                           
  8437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8438  003F54  063F               	decf	otoa@i^0,f,c
  8439  003F56  A0D8               	btfss	status,0,c
  8440  003F58  0640               	decf	(otoa@i+1)^0,f,c
  8441  003F5A                     
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8443  003F5A  0E07               	movlw	7
  8444  003F5C  1437               	andwf	otoa@n^0,w,c
  8445  003F5E  6E33               	movwf	otoa@t^0,c
  8446  003F60  6A34               	clrf	(otoa@t+1)^0,c
  8447  003F62                     
  8448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8449  003F62  0E8A               	movlw	low _dbuf
  8450  003F64  243F               	addwf	otoa@i^0,w,c
  8451  003F66  6ED9               	movwf	fsr2l,c
  8452  003F68  0E01               	movlw	high _dbuf
  8453  003F6A  2040               	addwfc	(otoa@i+1)^0,w,c
  8454  003F6C  6EDA               	movwf	fsr2h,c
  8455  003F6E  5033               	movf	otoa@t^0,w,c
  8456  003F70  0F30               	addlw	48
  8457  003F72  6EDF               	movwf	indf2,c
  8458  003F74                     
  8459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8460  003F74  0631               	decf	otoa@p^0,f,c
  8461  003F76  A0D8               	btfss	status,0,c
  8462  003F78  0632               	decf	(otoa@p+1)^0,f,c
  8463  003F7A                     
  8464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8465  003F7A  0635               	decf	otoa@w^0,f,c
  8466  003F7C  A0D8               	btfss	status,0,c
  8467  003F7E  0636               	decf	(otoa@w+1)^0,f,c
  8468  003F80                     
  8469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8470  003F80  C037  F029         	movff	otoa@n,??_otoa
  8471  003F84  C038  F02A         	movff	otoa@n+1,??_otoa+1
  8472  003F88  C039  F02B         	movff	otoa@n+2,??_otoa+2
  8473  003F8C  C03A  F02C         	movff	otoa@n+3,??_otoa+3
  8474  003F90  C03B  F02D         	movff	otoa@n+4,??_otoa+4
  8475  003F94  C03C  F02E         	movff	otoa@n+5,??_otoa+5
  8476  003F98  C03D  F02F         	movff	otoa@n+6,??_otoa+6
  8477  003F9C  C03E  F030         	movff	otoa@n+7,??_otoa+7
  8478  003FA0  0E04               	movlw	4
  8479  003FA2  EFDC  F01F         	goto	u10950
  8480  003FA6                     u10955:
  8481  003FA6  90D8               	bcf	status,0,c
  8482  003FA8  3230               	rrcf	(??_otoa+7)^0,f,c
  8483  003FAA  322F               	rrcf	(??_otoa+6)^0,f,c
  8484  003FAC  322E               	rrcf	(??_otoa+5)^0,f,c
  8485  003FAE  322D               	rrcf	(??_otoa+4)^0,f,c
  8486  003FB0  322C               	rrcf	(??_otoa+3)^0,f,c
  8487  003FB2  322B               	rrcf	(??_otoa+2)^0,f,c
  8488  003FB4  322A               	rrcf	(??_otoa+1)^0,f,c
  8489  003FB6  3229               	rrcf	??_otoa^0,f,c
  8490  003FB8                     u10950:
  8491  003FB8  2EE8               	decfsz	wreg,f,c
  8492  003FBA  EFD3  F01F         	goto	u10955
  8493  003FBE  C029  F037         	movff	??_otoa,otoa@n
  8494  003FC2  C02A  F038         	movff	??_otoa+1,otoa@n+1
  8495  003FC6  C02B  F039         	movff	??_otoa+2,otoa@n+2
  8496  003FCA  C02C  F03A         	movff	??_otoa+3,otoa@n+3
  8497  003FCE  C02D  F03B         	movff	??_otoa+4,otoa@n+4
  8498  003FD2  C02E  F03C         	movff	??_otoa+5,otoa@n+5
  8499  003FD6  C02F  F03D         	movff	??_otoa+6,otoa@n+6
  8500  003FDA  C030  F03E         	movff	??_otoa+7,otoa@n+7
  8501  003FDE                     l8464:
  8502                           
  8503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8504  003FDE  BE40               	btfsc	(otoa@i+1)^0,7,c
  8505  003FE0  EFFA  F01F         	goto	u10961
  8506  003FE4  5040               	movf	(otoa@i+1)^0,w,c
  8507  003FE6  E108               	bnz	u10960
  8508  003FE8  043F               	decf	otoa@i^0,w,c
  8509  003FEA  A0D8               	btfss	status,0,c
  8510  003FEC  EFFA  F01F         	goto	u10961
  8511  003FF0  EFFC  F01F         	goto	u10960
  8512  003FF4                     u10961:
  8513  003FF4  EF2D  F020         	goto	l640
  8514  003FF8                     u10960:
  8515  003FF8  5037               	movf	otoa@n^0,w,c
  8516  003FFA  1038               	iorwf	(otoa@n+1)^0,w,c
  8517  003FFC  1039               	iorwf	(otoa@n+2)^0,w,c
  8518  003FFE  103A               	iorwf	(otoa@n+3)^0,w,c
  8519  004000  103B               	iorwf	(otoa@n+4)^0,w,c
  8520  004002  103C               	iorwf	(otoa@n+5)^0,w,c
  8521  004004  103D               	iorwf	(otoa@n+6)^0,w,c
  8522  004006  103E               	iorwf	(otoa@n+7)^0,w,c
  8523  004008  A4D8               	btfss	status,2,c
  8524  00400A  EF09  F020         	goto	u10971
  8525  00400E  EF0B  F020         	goto	u10970
  8526  004012                     u10971:
  8527  004012  EFAA  F01F         	goto	l8452
  8528  004016                     u10970:
  8529  004016  BE32               	btfsc	(otoa@p+1)^0,7,c
  8530  004018  EF18  F020         	goto	u10980
  8531  00401C  5032               	movf	(otoa@p+1)^0,w,c
  8532  00401E  E106               	bnz	u10981
  8533  004020  0431               	decf	otoa@p^0,w,c
  8534  004022  B0D8               	btfsc	status,0,c
  8535  004024  EF16  F020         	goto	u10981
  8536  004028  EF18  F020         	goto	u10980
  8537  00402C                     u10981:
  8538  00402C  EFAA  F01F         	goto	l8452
  8539  004030                     u10980:
  8540  004030  BE36               	btfsc	(otoa@w+1)^0,7,c
  8541  004032  EF23  F020         	goto	u10991
  8542  004036  5036               	movf	(otoa@w+1)^0,w,c
  8543  004038  E108               	bnz	u10990
  8544  00403A  0435               	decf	otoa@w^0,w,c
  8545  00403C  A0D8               	btfss	status,0,c
  8546  00403E  EF23  F020         	goto	u10991
  8547  004042  EF25  F020         	goto	u10990
  8548  004046                     u10991:
  8549  004046  EF2D  F020         	goto	l640
  8550  00404A                     u10990:
  8551  00404A  0100               	movlb	0	; () banked
  8552  00404C  B3FC               	btfsc	_flags& (0+255),1,b
  8553  00404E  EF2B  F020         	goto	u11001
  8554  004052  EF2D  F020         	goto	u11000
  8555  004056                     u11001:
  8556  004056  EFAA  F01F         	goto	l8452
  8557  00405A                     u11000:
  8558  00405A                     l640:
  8559                           
  8560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8561  00405A  0100               	movlb	0	; () banked
  8562  00405C  A9FC               	btfss	_flags& (0+255),4,b
  8563  00405E  EF33  F020         	goto	u11011
  8564  004062  EF35  F020         	goto	u11010
  8565  004066                     u11011:
  8566  004066  EF4C  F020         	goto	l8482
  8567  00406A                     u11010:
  8568  00406A                     
  8569                           ; BSR set to: 0
  8570  00406A  5033               	movf	otoa@t^0,w,c
  8571  00406C  1034               	iorwf	(otoa@t+1)^0,w,c
  8572  00406E  B4D8               	btfsc	status,2,c
  8573  004070  EF3C  F020         	goto	u11021
  8574  004074  EF3E  F020         	goto	u11020
  8575  004078                     u11021:
  8576  004078  EF4C  F020         	goto	l8482
  8577  00407C                     u11020:
  8578  00407C                     
  8579                           ; BSR set to: 0
  8580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8581  00407C  063F               	decf	otoa@i^0,f,c
  8582  00407E  A0D8               	btfss	status,0,c
  8583  004080  0640               	decf	(otoa@i+1)^0,f,c
  8584  004082                     
  8585                           ; BSR set to: 0
  8586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8587  004082  0E8A               	movlw	low _dbuf
  8588  004084  243F               	addwf	otoa@i^0,w,c
  8589  004086  6ED9               	movwf	fsr2l,c
  8590  004088  0E01               	movlw	high _dbuf
  8591  00408A  2040               	addwfc	(otoa@i+1)^0,w,c
  8592  00408C  6EDA               	movwf	fsr2h,c
  8593  00408E  0E30               	movlw	48
  8594  004090  6EDF               	movwf	indf2,c
  8595  004092                     
  8596                           ; BSR set to: 0
  8597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8598  004092  0635               	decf	otoa@w^0,f,c
  8599  004094  A0D8               	btfss	status,0,c
  8600  004096  0636               	decf	(otoa@w+1)^0,f,c
  8601  004098                     l8482:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8605  004098  C01F  F014         	movff	otoa@fp,pad@fp
  8606  00409C  C020  F015         	movff	otoa@fp+1,pad@fp+1
  8607  0040A0  0E8A               	movlw	low _dbuf
  8608  0040A2  243F               	addwf	otoa@i^0,w,c
  8609  0040A4  6E16               	movwf	pad@buf^0,c
  8610  0040A6  0E01               	movlw	high _dbuf
  8611  0040A8  2040               	addwfc	(otoa@i+1)^0,w,c
  8612  0040AA  6E17               	movwf	(pad@buf+1)^0,c
  8613  0040AC  C035  F018         	movff	otoa@w,pad@p
  8614  0040B0  C036  F019         	movff	otoa@w+1,pad@p+1
  8615  0040B4  EC8E  F029         	call	_pad	;wreg free
  8616  0040B8  C014  F01F         	movff	?_pad,?_otoa
  8617  0040BC  C015  F020         	movff	?_pad+1,?_otoa+1
  8618  0040C0  0012               	return		;funcret
  8619  0040C2                     __end_of_otoa:
  8620                           	opt callstack 0
  8621                           
  8622 ;; *************** function _efgtoa *****************
  8623 ;; Defined at:
  8624 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  8627 ;;		 -> vsnprintf@f(6), 
  8628 ;;  f               4   29[BANK0 ] PTR struct _IO_FILE
  8629 ;;  c               1   33[BANK0 ] unsigned char 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;  u               4   86[BANK0 ] unsigned char 
  8632 ;;  g               4   78[BANK0 ] unsigned char 
  8633 ;;  l               4   72[BANK0 ] unsigned char 
  8634 ;;  h               4   68[BANK0 ] unsigned char 
  8635 ;;  ou              4   34[BANK0 ] unsigned char 
  8636 ;;  n               2   84[BANK0 ] int 
  8637 ;;  e               2   82[BANK0 ] int 
  8638 ;;  i               2   76[BANK0 ] int 
  8639 ;;  w               2   65[BANK0 ] int 
  8640 ;;  p               2   62[BANK0 ] int 
  8641 ;;  sign            2   60[BANK0 ] int 
  8642 ;;  d               2   58[BANK0 ] int 
  8643 ;;  ne              2   56[BANK0 ] int 
  8644 ;;  m               2   54[BANK0 ] int 
  8645 ;;  pp              2   52[BANK0 ] int 
  8646 ;;  t               2   50[BANK0 ] int 
  8647 ;;  mode            1   67[BANK0 ] unsigned char 
  8648 ;;  nmode           1   64[BANK0 ] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  2   27[BANK0 ] int 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8658 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8659 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8660 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Totals:         5      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;Total ram usage:       68 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    8
  8665 ;; This function calls:
  8666 ;;		___awdiv
  8667 ;;		___awmod
  8668 ;;		___fladd
  8669 ;;		___fldiv
  8670 ;;		___fleq
  8671 ;;		___flge
  8672 ;;		___flmul
  8673 ;;		___flneg
  8674 ;;		___flsub
  8675 ;;		___fltol
  8676 ;;		___fpclassifyf
  8677 ;;		_floorf
  8678 ;;		_isupper
  8679 ;;		_pad
  8680 ;;		_strcpy
  8681 ;;		_tolower
  8682 ;; This function is called by:
  8683 ;;		_vfpfcnvrt
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text15
  8688  001532                     __ptext15:
  8689                           	opt callstack 0
  8690  001532                     _efgtoa:
  8691                           	opt callstack 18
  8692  001532                     
  8693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8694  001532  0E00               	movlw	0
  8695  001534  0100               	movlb	0	; () banked
  8696  001536  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
  8697  001538  0E00               	movlw	0
  8698  00153A  6F9C               	movwf	efgtoa@sign& (0+255),b
  8699  00153C                     
  8700                           ; BSR set to: 0
  8701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8702  00153C  C07D  F0AE         	movff	efgtoa@f,efgtoa@g
  8703  001540  C07E  F0AF         	movff	efgtoa@f+1,efgtoa@g+1
  8704  001544  C07F  F0B0         	movff	efgtoa@f+2,efgtoa@g+2
  8705  001548  C080  F0B1         	movff	efgtoa@f+3,efgtoa@g+3
  8706  00154C                     
  8707                           ; BSR set to: 0
  8708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8709  00154C  BFB1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8710  00154E  EFAD  F00A         	goto	u10410
  8711  001552  EFAB  F00A         	goto	u10411
  8712  001556                     u10411:
  8713  001556  EFC3  F00A         	goto	l8150
  8714  00155A                     u10410:
  8715  00155A                     
  8716                           ; BSR set to: 0
  8717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8718  00155A  0E00               	movlw	0
  8719  00155C  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
  8720  00155E  0E01               	movlw	1
  8721  001560  6F9C               	movwf	efgtoa@sign& (0+255),b
  8722  001562                     
  8723                           ; BSR set to: 0
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8725  001562  C0AE  F004         	movff	efgtoa@g,___flneg@f1
  8726  001566  C0AF  F005         	movff	efgtoa@g+1,___flneg@f1+1
  8727  00156A  C0B0  F006         	movff	efgtoa@g+2,___flneg@f1+2
  8728  00156E  C0B1  F007         	movff	efgtoa@g+3,___flneg@f1+3
  8729  001572  EC6B  F02E         	call	___flneg	;wreg free
  8730  001576  C004  F0AE         	movff	?___flneg,efgtoa@g
  8731  00157A  C005  F0AF         	movff	?___flneg+1,efgtoa@g+1
  8732  00157E  C006  F0B0         	movff	?___flneg+2,efgtoa@g+2
  8733  001582  C007  F0B1         	movff	?___flneg+3,efgtoa@g+3
  8734  001586                     l8150:
  8735                           
  8736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8737  001586  0E00               	movlw	0
  8738  001588  0100               	movlb	0	; () banked
  8739  00158A  6FB5               	movwf	(efgtoa@n+1)& (0+255),b
  8740  00158C  0E00               	movlw	0
  8741  00158E  6FB4               	movwf	efgtoa@n& (0+255),b
  8742  001590                     
  8743                           ; BSR set to: 0
  8744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8745  001590  C11C  F0A1         	movff	_width,efgtoa@w
  8746  001594  C11D  F0A2         	movff	_width+1,efgtoa@w+1
  8747  001598                     
  8748                           ; BSR set to: 0
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8750  001598  519C               	movf	efgtoa@sign& (0+255),w,b
  8751  00159A  119D               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8752  00159C  A4D8               	btfss	status,2,c
  8753  00159E  EFD3  F00A         	goto	u10421
  8754  0015A2  EFD5  F00A         	goto	u10420
  8755  0015A6                     u10421:
  8756  0015A6  EFDC  F00A         	goto	l8158
  8757  0015AA                     u10420:
  8758  0015AA                     
  8759                           ; BSR set to: 0
  8760  0015AA  A5FC               	btfss	_flags& (0+255),2,b
  8761  0015AC  EFDA  F00A         	goto	u10431
  8762  0015B0  EFDC  F00A         	goto	u10430
  8763  0015B4                     u10431:
  8764  0015B4  EFF6  F00A         	goto	l8170
  8765  0015B8                     u10430:
  8766  0015B8                     l8158:
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8770  0015B8  519C               	movf	efgtoa@sign& (0+255),w,b
  8771  0015BA  119D               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8772  0015BC  A4D8               	btfss	status,2,c
  8773  0015BE  EFE3  F00A         	goto	u10441
  8774  0015C2  EFE5  F00A         	goto	u10440
  8775  0015C6                     u10441:
  8776  0015C6  EFEB  F00A         	goto	l8162
  8777  0015CA                     u10440:
  8778  0015CA                     
  8779                           ; BSR set to: 0
  8780  0015CA  0E00               	movlw	0
  8781  0015CC  6F87               	movwf	(_efgtoa$1332+1)& (0+255),b
  8782  0015CE  0E2B               	movlw	43
  8783  0015D0  6F86               	movwf	_efgtoa$1332& (0+255),b
  8784  0015D2  EFEF  F00A         	goto	l8164
  8785  0015D6                     l8162:
  8786                           
  8787                           ; BSR set to: 0
  8788  0015D6  0E00               	movlw	0
  8789  0015D8  6F87               	movwf	(_efgtoa$1332+1)& (0+255),b
  8790  0015DA  0E2D               	movlw	45
  8791  0015DC  6F86               	movwf	_efgtoa$1332& (0+255),b
  8792  0015DE                     l8164:
  8793                           
  8794                           ; BSR set to: 0
  8795  0015DE  C086  F18A         	movff	_efgtoa$1332,_dbuf
  8796  0015E2                     
  8797                           ; BSR set to: 0
  8798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8799  0015E2  4BB4               	infsnz	efgtoa@n& (0+255),f,b
  8800  0015E4  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
  8801  0015E6                     
  8802                           ; BSR set to: 0
  8803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8804  0015E6  07A1               	decf	efgtoa@w& (0+255),f,b
  8805  0015E8  A0D8               	btfss	status,0,c
  8806  0015EA  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  8807  0015EC                     l8170:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8811  0015EC  C0AE  F004         	movff	efgtoa@g,___fpclassifyf@x
  8812  0015F0  C0AF  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8813  0015F4  C0B0  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8814  0015F8  C0B1  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8815  0015FC  ECCA  F027         	call	___fpclassifyf	;wreg free
  8816  001600  0404               	decf	?___fpclassifyf^0,w,c
  8817  001602  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8818  001604  A4D8               	btfss	status,2,c
  8819  001606  EF07  F00B         	goto	u10451
  8820  00160A  EF09  F00B         	goto	u10450
  8821  00160E                     u10451:
  8822  00160E  EF60  F00B         	goto	l8188
  8823  001612                     u10450:
  8824  001612  0EBF               	movlw	191
  8825  001614  6E55               	movwf	??_efgtoa^0,c
  8826  001616  0EFF               	movlw	255
  8827  001618  6E56               	movwf	(??_efgtoa+1)^0,c
  8828  00161A  0100               	movlb	0	; () banked
  8829  00161C  5181               	movf	efgtoa@c& (0+255),w,b
  8830  00161E  6E57               	movwf	(??_efgtoa+2)^0,c
  8831  001620  6A58               	clrf	(??_efgtoa+3)^0,c
  8832  001622  5055               	movf	??_efgtoa^0,w,c
  8833  001624  2657               	addwf	(??_efgtoa+2)^0,f,c
  8834  001626  5056               	movf	(??_efgtoa+1)^0,w,c
  8835  001628  2258               	addwfc	(??_efgtoa+3)^0,f,c
  8836  00162A  5058               	movf	(??_efgtoa+3)^0,w,c
  8837  00162C  E10A               	bnz	u10460
  8838  00162E  0E1A               	movlw	26
  8839  001630  5C57               	subwf	(??_efgtoa+2)^0,w,c
  8840  001632  A0D8               	btfss	status,0,c
  8841  001634  EF1E  F00B         	goto	u10461
  8842  001638  EF21  F00B         	goto	u10460
  8843  00163C                     u10461:
  8844  00163C  0E01               	movlw	1
  8845  00163E  EF22  F00B         	goto	u10470
  8846  001642                     u10460:
  8847  001642  0E00               	movlw	0
  8848  001644                     u10470:
  8849  001644  6F88               	movwf	_efgtoa$1333& (0+255),b
  8850  001646  6B89               	clrf	(_efgtoa$1333+1)& (0+255),b
  8851  001648                     
  8852                           ; BSR set to: 0
  8853  001648  5188               	movf	_efgtoa$1333& (0+255),w,b
  8854  00164A  1189               	iorwf	(_efgtoa$1333+1)& (0+255),w,b
  8855  00164C  B4D8               	btfsc	status,2,c
  8856  00164E  EF2B  F00B         	goto	u10481
  8857  001652  EF2D  F00B         	goto	u10480
  8858  001656                     u10481:
  8859  001656  EF3B  F00B         	goto	l8180
  8860  00165A                     u10480:
  8861  00165A                     
  8862                           ; BSR set to: 0
  8863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8864  00165A  0E8A               	movlw	low _dbuf
  8865  00165C  25B4               	addwf	efgtoa@n& (0+255),w,b
  8866  00165E  6E04               	movwf	strcpy@dest^0,c
  8867  001660  0E01               	movlw	high _dbuf
  8868  001662  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8869  001664  6E05               	movwf	(strcpy@dest+1)^0,c
  8870  001666  0EBB               	movlw	low STR_5
  8871  001668  6E06               	movwf	strcpy@src^0,c
  8872  00166A  0EFF               	movlw	high STR_5
  8873  00166C  6E07               	movwf	(strcpy@src+1)^0,c
  8874  00166E  EC2E  F02C         	call	_strcpy	;wreg free
  8875                           
  8876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8877  001672  EF47  F00B         	goto	l8182
  8878  001676                     l8180:
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8882  001676  0E8A               	movlw	low _dbuf
  8883  001678  25B4               	addwf	efgtoa@n& (0+255),w,b
  8884  00167A  6E04               	movwf	strcpy@dest^0,c
  8885  00167C  0E01               	movlw	high _dbuf
  8886  00167E  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8887  001680  6E05               	movwf	(strcpy@dest+1)^0,c
  8888  001682  0ECB               	movlw	low STR_6
  8889  001684  6E06               	movwf	strcpy@src^0,c
  8890  001686  0EFF               	movlw	high STR_6
  8891  001688  6E07               	movwf	(strcpy@src+1)^0,c
  8892  00168A  EC2E  F02C         	call	_strcpy	;wreg free
  8893  00168E                     l8182:
  8894                           
  8895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8896  00168E  0100               	movlb	0	; () banked
  8897  001690  0EFD               	movlw	253
  8898  001692  27A1               	addwf	efgtoa@w& (0+255),f,b
  8899  001694  0EFF               	movlw	255
  8900  001696  23A2               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8901  001698                     l8184:
  8902                           
  8903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8904  001698  C07B  F014         	movff	efgtoa@fp,pad@fp
  8905  00169C  C07C  F015         	movff	efgtoa@fp+1,pad@fp+1
  8906  0016A0  0E8A               	movlw	low _dbuf
  8907  0016A2  6E16               	movwf	pad@buf^0,c
  8908  0016A4  0E01               	movlw	high _dbuf
  8909  0016A6  6E17               	movwf	(pad@buf+1)^0,c
  8910  0016A8  C0A1  F018         	movff	efgtoa@w,pad@p
  8911  0016AC  C0A2  F019         	movff	efgtoa@w+1,pad@p+1
  8912  0016B0  EC8E  F029         	call	_pad	;wreg free
  8913  0016B4  C014  F07B         	movff	?_pad,?_efgtoa
  8914  0016B8  C015  F07C         	movff	?_pad+1,?_efgtoa+1
  8915  0016BC  EF70  F010         	goto	l553
  8916  0016C0                     l8188:
  8917                           
  8918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8919  0016C0  C0AE  F004         	movff	efgtoa@g,___fpclassifyf@x
  8920  0016C4  C0AF  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8921  0016C8  C0B0  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8922  0016CC  C0B1  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8923  0016D0  ECCA  F027         	call	___fpclassifyf	;wreg free
  8924  0016D4  5004               	movf	?___fpclassifyf^0,w,c
  8925  0016D6  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  8926  0016D8  A4D8               	btfss	status,2,c
  8927  0016DA  EF71  F00B         	goto	u10491
  8928  0016DE  EF73  F00B         	goto	u10490
  8929  0016E2                     u10491:
  8930  0016E2  EFB3  F00B         	goto	l8206
  8931  0016E6                     u10490:
  8932  0016E6  0EBF               	movlw	191
  8933  0016E8  6E55               	movwf	??_efgtoa^0,c
  8934  0016EA  0EFF               	movlw	255
  8935  0016EC  6E56               	movwf	(??_efgtoa+1)^0,c
  8936  0016EE  0100               	movlb	0	; () banked
  8937  0016F0  5181               	movf	efgtoa@c& (0+255),w,b
  8938  0016F2  6E57               	movwf	(??_efgtoa+2)^0,c
  8939  0016F4  6A58               	clrf	(??_efgtoa+3)^0,c
  8940  0016F6  5055               	movf	??_efgtoa^0,w,c
  8941  0016F8  2657               	addwf	(??_efgtoa+2)^0,f,c
  8942  0016FA  5056               	movf	(??_efgtoa+1)^0,w,c
  8943  0016FC  2258               	addwfc	(??_efgtoa+3)^0,f,c
  8944  0016FE  5058               	movf	(??_efgtoa+3)^0,w,c
  8945  001700  E10A               	bnz	u10500
  8946  001702  0E1A               	movlw	26
  8947  001704  5C57               	subwf	(??_efgtoa+2)^0,w,c
  8948  001706  A0D8               	btfss	status,0,c
  8949  001708  EF88  F00B         	goto	u10501
  8950  00170C  EF8B  F00B         	goto	u10500
  8951  001710                     u10501:
  8952  001710  0E01               	movlw	1
  8953  001712  EF8C  F00B         	goto	u10510
  8954  001716                     u10500:
  8955  001716  0E00               	movlw	0
  8956  001718                     u10510:
  8957  001718  6F8A               	movwf	_efgtoa$1337& (0+255),b
  8958  00171A  6B8B               	clrf	(_efgtoa$1337+1)& (0+255),b
  8959  00171C                     
  8960                           ; BSR set to: 0
  8961  00171C  518A               	movf	_efgtoa$1337& (0+255),w,b
  8962  00171E  118B               	iorwf	(_efgtoa$1337+1)& (0+255),w,b
  8963  001720  B4D8               	btfsc	status,2,c
  8964  001722  EF95  F00B         	goto	u10521
  8965  001726  EF97  F00B         	goto	u10520
  8966  00172A                     u10521:
  8967  00172A  EFA5  F00B         	goto	l8198
  8968  00172E                     u10520:
  8969  00172E                     
  8970                           ; BSR set to: 0
  8971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8972  00172E  0E8A               	movlw	low _dbuf
  8973  001730  25B4               	addwf	efgtoa@n& (0+255),w,b
  8974  001732  6E04               	movwf	strcpy@dest^0,c
  8975  001734  0E01               	movlw	high _dbuf
  8976  001736  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8977  001738  6E05               	movwf	(strcpy@dest+1)^0,c
  8978  00173A  0EBF               	movlw	low STR_9
  8979  00173C  6E06               	movwf	strcpy@src^0,c
  8980  00173E  0EFF               	movlw	high STR_9
  8981  001740  6E07               	movwf	(strcpy@src+1)^0,c
  8982  001742  EC2E  F02C         	call	_strcpy	;wreg free
  8983                           
  8984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8985  001746  EF47  F00B         	goto	l8182
  8986  00174A                     l8198:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8990  00174A  0E8A               	movlw	low _dbuf
  8991  00174C  25B4               	addwf	efgtoa@n& (0+255),w,b
  8992  00174E  6E04               	movwf	strcpy@dest^0,c
  8993  001750  0E01               	movlw	high _dbuf
  8994  001752  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8995  001754  6E05               	movwf	(strcpy@dest+1)^0,c
  8996  001756  0ED3               	movlw	low STR_10
  8997  001758  6E06               	movwf	strcpy@src^0,c
  8998  00175A  0EFF               	movlw	high STR_10
  8999  00175C  6E07               	movwf	(strcpy@src+1)^0,c
  9000  00175E  EC2E  F02C         	call	_strcpy	;wreg free
  9001  001762  EF47  F00B         	goto	l8182
  9002  001766                     l8206:
  9003                           
  9004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9005  001766  0E00               	movlw	0
  9006  001768  0100               	movlb	0	; () banked
  9007  00176A  6FB6               	movwf	efgtoa@u& (0+255),b
  9008  00176C  0E00               	movlw	0
  9009  00176E  6FB7               	movwf	(efgtoa@u+1)& (0+255),b
  9010  001770  0E80               	movlw	128
  9011  001772  6FB8               	movwf	(efgtoa@u+2)& (0+255),b
  9012  001774  0E3F               	movlw	63
  9013  001776  6FB9               	movwf	(efgtoa@u+3)& (0+255),b
  9014                           
  9015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9016  001778  0E00               	movlw	0
  9017  00177A  6FB3               	movwf	(efgtoa@e+1)& (0+255),b
  9018  00177C  0E00               	movlw	0
  9019  00177E  6FB2               	movwf	efgtoa@e& (0+255),b
  9020  001780                     
  9021                           ; BSR set to: 0
  9022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9023  001780  C0AE  F004         	movff	efgtoa@g,___fleq@ff1
  9024  001784  C0AF  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  9025  001788  C0B0  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  9026  00178C  C0B1  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  9027  001790  0E00               	movlw	0
  9028  001792  6E08               	movwf	___fleq@ff2^0,c
  9029  001794  0E00               	movlw	0
  9030  001796  6E09               	movwf	(___fleq@ff2+1)^0,c
  9031  001798  0E00               	movlw	0
  9032  00179A  6E0A               	movwf	(___fleq@ff2+2)^0,c
  9033  00179C  0E00               	movlw	0
  9034  00179E  6E0B               	movwf	(___fleq@ff2+3)^0,c
  9035  0017A0  EC03  F02B         	call	___fleq	;wreg free
  9036  0017A4  B0D8               	btfsc	status,0,c
  9037  0017A6  EFD7  F00B         	goto	u10531
  9038  0017AA  EFD9  F00B         	goto	u10530
  9039  0017AE                     u10531:
  9040  0017AE  EF5C  F00C         	goto	l8224
  9041  0017B2                     u10530:
  9042  0017B2  EFF8  F00B         	goto	l8216
  9043  0017B6                     l8212:
  9044                           
  9045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9046  0017B6  C0B6  F012         	movff	efgtoa@u,___flmul@b
  9047  0017BA  C0B7  F013         	movff	efgtoa@u+1,___flmul@b+1
  9048  0017BE  C0B8  F014         	movff	efgtoa@u+2,___flmul@b+2
  9049  0017C2  C0B9  F015         	movff	efgtoa@u+3,___flmul@b+3
  9050  0017C6  0E00               	movlw	0
  9051  0017C8  6E16               	movwf	___flmul@a^0,c
  9052  0017CA  0E00               	movlw	0
  9053  0017CC  6E17               	movwf	(___flmul@a+1)^0,c
  9054  0017CE  0E20               	movlw	32
  9055  0017D0  6E18               	movwf	(___flmul@a+2)^0,c
  9056  0017D2  0E41               	movlw	65
  9057  0017D4  6E19               	movwf	(___flmul@a+3)^0,c
  9058  0017D6  ECD1  F012         	call	___flmul	;wreg free
  9059  0017DA  C012  F0B6         	movff	?___flmul,efgtoa@u
  9060  0017DE  C013  F0B7         	movff	?___flmul+1,efgtoa@u+1
  9061  0017E2  C014  F0B8         	movff	?___flmul+2,efgtoa@u+2
  9062  0017E6  C015  F0B9         	movff	?___flmul+3,efgtoa@u+3
  9063  0017EA                     
  9064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9065  0017EA  0100               	movlb	0	; () banked
  9066  0017EC  4BB2               	infsnz	efgtoa@e& (0+255),f,b
  9067  0017EE  2BB3               	incf	(efgtoa@e+1)& (0+255),f,b
  9068  0017F0                     l8216:
  9069                           
  9070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9071  0017F0  C0AE  F02B         	movff	efgtoa@g,___flge@ff1
  9072  0017F4  C0AF  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  9073  0017F8  C0B0  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  9074  0017FC  C0B1  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  9075  001800  0E00               	movlw	0
  9076  001802  6E16               	movwf	___flmul@a^0,c
  9077  001804  0E00               	movlw	0
  9078  001806  6E17               	movwf	(___flmul@a+1)^0,c
  9079  001808  0E20               	movlw	32
  9080  00180A  6E18               	movwf	(___flmul@a+2)^0,c
  9081  00180C  0E41               	movlw	65
  9082  00180E  6E19               	movwf	(___flmul@a+3)^0,c
  9083  001810  C0B6  F012         	movff	efgtoa@u,___flmul@b
  9084  001814  C0B7  F013         	movff	efgtoa@u+1,___flmul@b+1
  9085  001818  C0B8  F014         	movff	efgtoa@u+2,___flmul@b+2
  9086  00181C  C0B9  F015         	movff	efgtoa@u+3,___flmul@b+3
  9087  001820  ECD1  F012         	call	___flmul	;wreg free
  9088  001824  C012  F02F         	movff	?___flmul,___flge@ff2
  9089  001828  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  9090  00182C  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  9091  001830  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  9092  001834  EC48  F027         	call	___flge	;wreg free
  9093  001838  B0D8               	btfsc	status,0,c
  9094  00183A  EF21  F00C         	goto	u10541
  9095  00183E  EF23  F00C         	goto	u10540
  9096  001842                     u10541:
  9097  001842  EFDB  F00B         	goto	l8212
  9098  001846                     u10540:
  9099  001846  EF43  F00C         	goto	l8222
  9100  00184A                     l8218:
  9101                           
  9102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9103  00184A  C0B6  F043         	movff	efgtoa@u,___fldiv@b
  9104  00184E  C0B7  F044         	movff	efgtoa@u+1,___fldiv@b+1
  9105  001852  C0B8  F045         	movff	efgtoa@u+2,___fldiv@b+2
  9106  001856  C0B9  F046         	movff	efgtoa@u+3,___fldiv@b+3
  9107  00185A  0E00               	movlw	0
  9108  00185C  6E47               	movwf	___fldiv@a^0,c
  9109  00185E  0E00               	movlw	0
  9110  001860  6E48               	movwf	(___fldiv@a+1)^0,c
  9111  001862  0E20               	movlw	32
  9112  001864  6E49               	movwf	(___fldiv@a+2)^0,c
  9113  001866  0E41               	movlw	65
  9114  001868  6E4A               	movwf	(___fldiv@a+3)^0,c
  9115  00186A  ECEA  F016         	call	___fldiv	;wreg free
  9116  00186E  C043  F0B6         	movff	?___fldiv,efgtoa@u
  9117  001872  C044  F0B7         	movff	?___fldiv+1,efgtoa@u+1
  9118  001876  C045  F0B8         	movff	?___fldiv+2,efgtoa@u+2
  9119  00187A  C046  F0B9         	movff	?___fldiv+3,efgtoa@u+3
  9120  00187E                     
  9121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9122  00187E  0100               	movlb	0	; () banked
  9123  001880  07B2               	decf	efgtoa@e& (0+255),f,b
  9124  001882  A0D8               	btfss	status,0,c
  9125  001884  07B3               	decf	(efgtoa@e+1)& (0+255),f,b
  9126  001886                     l8222:
  9127                           
  9128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9129  001886  C0AE  F02B         	movff	efgtoa@g,___flge@ff1
  9130  00188A  C0AF  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  9131  00188E  C0B0  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  9132  001892  C0B1  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  9133  001896  C0B6  F02F         	movff	efgtoa@u,___flge@ff2
  9134  00189A  C0B7  F030         	movff	efgtoa@u+1,___flge@ff2+1
  9135  00189E  C0B8  F031         	movff	efgtoa@u+2,___flge@ff2+2
  9136  0018A2  C0B9  F032         	movff	efgtoa@u+3,___flge@ff2+3
  9137  0018A6  EC48  F027         	call	___flge	;wreg free
  9138  0018AA  A0D8               	btfss	status,0,c
  9139  0018AC  EF5A  F00C         	goto	u10551
  9140  0018B0  EF5C  F00C         	goto	u10550
  9141  0018B4                     u10551:
  9142  0018B4  EF25  F00C         	goto	l8218
  9143  0018B8                     u10550:
  9144  0018B8                     l8224:
  9145                           
  9146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9147  0018B8  C081  F00A         	movff	efgtoa@c,tolower@c
  9148  0018BC  6A0B               	clrf	(tolower@c+1)^0,c
  9149  0018BE  ECCF  F02B         	call	_tolower	;wreg free
  9150  0018C2  500A               	movf	?_tolower^0,w,c
  9151  0018C4  0100               	movlb	0	; () banked
  9152  0018C6  6FA3               	movwf	efgtoa@mode& (0+255),b
  9153  0018C8                     
  9154                           ; BSR set to: 0
  9155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9156  0018C8  C0A3  F0A0         	movff	efgtoa@mode,efgtoa@nmode
  9157  0018CC                     
  9158                           ; BSR set to: 0
  9159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9160  0018CC  0E67               	movlw	103
  9161  0018CE  19A3               	xorwf	efgtoa@mode& (0+255),w,b
  9162  0018D0  A4D8               	btfss	status,2,c
  9163  0018D2  EF6D  F00C         	goto	u10561
  9164  0018D6  EF6F  F00C         	goto	u10560
  9165  0018DA                     u10561:
  9166  0018DA  EF95  F00C         	goto	l8238
  9167  0018DE                     u10560:
  9168  0018DE                     
  9169                           ; BSR set to: 0
  9170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9171  0018DE  505A               	movf	_prec^0,w,c
  9172  0018E0  105B               	iorwf	(_prec+1)^0,w,c
  9173  0018E2  A4D8               	btfss	status,2,c
  9174  0018E4  EF76  F00C         	goto	u10571
  9175  0018E8  EF78  F00C         	goto	u10570
  9176  0018EC                     u10571:
  9177  0018EC  EF7C  F00C         	goto	l8234
  9178  0018F0                     u10570:
  9179  0018F0                     
  9180                           ; BSR set to: 0
  9181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9182  0018F0  0E00               	movlw	0
  9183  0018F2  6E5B               	movwf	(_prec+1)^0,c
  9184  0018F4  0E01               	movlw	1
  9185  0018F6  6E5A               	movwf	_prec^0,c
  9186  0018F8                     l8234:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9190  0018F8  BE5B               	btfsc	(_prec+1)^0,7,c
  9191  0018FA  EF89  F00C         	goto	u10580
  9192  0018FE  505B               	movf	(_prec+1)^0,w,c
  9193  001900  E106               	bnz	u10581
  9194  001902  045A               	decf	_prec^0,w,c
  9195  001904  B0D8               	btfsc	status,0,c
  9196  001906  EF87  F00C         	goto	u10581
  9197  00190A  EF89  F00C         	goto	u10580
  9198  00190E                     u10581:
  9199  00190E  EF8F  F00C         	goto	l571
  9200  001912                     u10580:
  9201  001912                     l8236:
  9202                           
  9203                           ; BSR set to: 0
  9204  001912  0E00               	movlw	0
  9205  001914  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
  9206  001916  0E06               	movlw	6
  9207  001918  6F9E               	movwf	efgtoa@p& (0+255),b
  9208  00191A  EF9E  F00C         	goto	l8244
  9209  00191E                     l571:
  9210                           
  9211                           ; BSR set to: 0
  9212  00191E  C05A  F09E         	movff	_prec,efgtoa@p
  9213  001922  C05B  F09F         	movff	_prec+1,efgtoa@p+1
  9214  001926  EF9E  F00C         	goto	l8244
  9215  00192A                     l8238:
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9219  00192A  BE5B               	btfsc	(_prec+1)^0,7,c
  9220  00192C  EF9A  F00C         	goto	u10591
  9221  001930  EF9C  F00C         	goto	u10590
  9222  001934                     u10591:
  9223  001934  EF89  F00C         	goto	l8236
  9224  001938                     u10590:
  9225  001938  EF8F  F00C         	goto	l571
  9226  00193C                     l8244:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9230  00193C  0E67               	movlw	103
  9231  00193E  19A3               	xorwf	efgtoa@mode& (0+255),w,b
  9232  001940  A4D8               	btfss	status,2,c
  9233  001942  EFA5  F00C         	goto	u10601
  9234  001946  EFA7  F00C         	goto	u10600
  9235  00194A                     u10601:
  9236  00194A  EFD6  F00C         	goto	l8254
  9237  00194E                     u10600:
  9238  00194E                     
  9239                           ; BSR set to: 0
  9240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9241  00194E  AFB3               	btfss	(efgtoa@e+1)& (0+255),7,b
  9242  001950  EFB5  F00C         	goto	u10610
  9243  001954  0EFC               	movlw	252
  9244  001956  5DB2               	subwf	efgtoa@e& (0+255),w,b
  9245  001958  0EFF               	movlw	255
  9246  00195A  59B3               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9247  00195C  A0D8               	btfss	status,0,c
  9248  00195E  EFB3  F00C         	goto	u10611
  9249  001962  EFB5  F00C         	goto	u10610
  9250  001966                     u10611:
  9251  001966  EFD4  F00C         	goto	l8252
  9252  00196A                     u10610:
  9253  00196A                     
  9254                           ; BSR set to: 0
  9255  00196A  0EFF               	movlw	255
  9256  00196C  6E55               	movwf	??_efgtoa^0,c
  9257  00196E  0EFF               	movlw	255
  9258  001970  6E56               	movwf	(??_efgtoa+1)^0,c
  9259  001972  C09E  F057         	movff	efgtoa@p,??_efgtoa+2
  9260  001976  C09F  F058         	movff	efgtoa@p+1,??_efgtoa+3
  9261  00197A  5055               	movf	??_efgtoa^0,w,c
  9262  00197C  2657               	addwf	(??_efgtoa+2)^0,f,c
  9263  00197E  5056               	movf	(??_efgtoa+1)^0,w,c
  9264  001980  2258               	addwfc	(??_efgtoa+3)^0,f,c
  9265  001982  51B2               	movf	efgtoa@e& (0+255),w,b
  9266  001984  5C57               	subwf	(??_efgtoa+2)^0,w,c
  9267  001986  5058               	movf	(??_efgtoa+3)^0,w,c
  9268  001988  0A80               	xorlw	128
  9269  00198A  6E59               	movwf	(??_efgtoa+4)^0,c
  9270  00198C  51B3               	movf	(efgtoa@e+1)& (0+255),w,b
  9271  00198E  0A80               	xorlw	128
  9272  001990  5859               	subwfb	(??_efgtoa+4)^0,w,c
  9273  001992  A0D8               	btfss	status,0,c
  9274  001994  EFCE  F00C         	goto	u10621
  9275  001998  EFD0  F00C         	goto	u10620
  9276  00199C                     u10621:
  9277  00199C  EFD4  F00C         	goto	l8252
  9278  0019A0                     u10620:
  9279  0019A0                     
  9280                           ; BSR set to: 0
  9281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9282  0019A0  0E66               	movlw	102
  9283  0019A2  6FA0               	movwf	efgtoa@nmode& (0+255),b
  9284                           
  9285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9286  0019A4  EFD6  F00C         	goto	l8254
  9287  0019A8                     l8252:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9291  0019A8  0E65               	movlw	101
  9292  0019AA  6FA0               	movwf	efgtoa@nmode& (0+255),b
  9293  0019AC                     l8254:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9297  0019AC  C09E  F096         	movff	efgtoa@p,efgtoa@m
  9298  0019B0  C09F  F097         	movff	efgtoa@p+1,efgtoa@m+1
  9299  0019B4                     
  9300                           ; BSR set to: 0
  9301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9302  0019B4  0E67               	movlw	103
  9303  0019B6  19A3               	xorwf	efgtoa@mode& (0+255),w,b
  9304  0019B8  A4D8               	btfss	status,2,c
  9305  0019BA  EFE1  F00C         	goto	u10631
  9306  0019BE  EFE3  F00C         	goto	u10630
  9307  0019C2                     u10631:
  9308  0019C2  EFF3  F00C         	goto	l8262
  9309  0019C6                     u10630:
  9310  0019C6                     
  9311                           ; BSR set to: 0
  9312  0019C6  0E66               	movlw	102
  9313  0019C8  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  9314  0019CA  A4D8               	btfss	status,2,c
  9315  0019CC  EFEA  F00C         	goto	u10641
  9316  0019D0  EFEC  F00C         	goto	u10640
  9317  0019D4                     u10641:
  9318  0019D4  EFF5  F00C         	goto	l8264
  9319  0019D8                     u10640:
  9320  0019D8                     
  9321                           ; BSR set to: 0
  9322  0019D8  BFB3               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9323  0019DA  EFF3  F00C         	goto	u10650
  9324  0019DE  EFF1  F00C         	goto	u10651
  9325  0019E2                     u10651:
  9326  0019E2  EFF5  F00C         	goto	l8264
  9327  0019E6                     u10650:
  9328  0019E6                     l8262:
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9332  0019E6  4B96               	infsnz	efgtoa@m& (0+255),f,b
  9333  0019E8  2B97               	incf	(efgtoa@m+1)& (0+255),f,b
  9334  0019EA                     l8264:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9338  0019EA  0E66               	movlw	102
  9339  0019EC  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  9340  0019EE  A4D8               	btfss	status,2,c
  9341  0019F0  EFFC  F00C         	goto	u10661
  9342  0019F4  EFFE  F00C         	goto	u10660
  9343  0019F8                     u10661:
  9344  0019F8  EF1E  F00D         	goto	l8274
  9345  0019FC                     u10660:
  9346  0019FC                     
  9347                           ; BSR set to: 0
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9349  0019FC  BFB3               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9350  0019FE  EF05  F00D         	goto	u10670
  9351  001A02  EF03  F00D         	goto	u10671
  9352  001A06                     u10671:
  9353  001A06  EF11  F00D         	goto	l8270
  9354  001A0A                     u10670:
  9355  001A0A                     
  9356                           ; BSR set to: 0
  9357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9358  001A0A  0E00               	movlw	0
  9359  001A0C  6FB6               	movwf	efgtoa@u& (0+255),b
  9360  001A0E  0E00               	movlw	0
  9361  001A10  6FB7               	movwf	(efgtoa@u+1)& (0+255),b
  9362  001A12  0E80               	movlw	128
  9363  001A14  6FB8               	movwf	(efgtoa@u+2)& (0+255),b
  9364  001A16  0E3F               	movlw	63
  9365  001A18  6FB9               	movwf	(efgtoa@u+3)& (0+255),b
  9366                           
  9367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9368  001A1A  0E00               	movlw	0
  9369  001A1C  6FB3               	movwf	(efgtoa@e+1)& (0+255),b
  9370  001A1E  0E00               	movlw	0
  9371  001A20  6FB2               	movwf	efgtoa@e& (0+255),b
  9372  001A22                     l8270:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9376  001A22  0E67               	movlw	103
  9377  001A24  19A3               	xorwf	efgtoa@mode& (0+255),w,b
  9378  001A26  B4D8               	btfsc	status,2,c
  9379  001A28  EF18  F00D         	goto	u10681
  9380  001A2C  EF1A  F00D         	goto	u10680
  9381  001A30                     u10681:
  9382  001A30  EF1E  F00D         	goto	l8274
  9383  001A34                     u10680:
  9384  001A34                     
  9385                           ; BSR set to: 0
  9386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9387  001A34  51B2               	movf	efgtoa@e& (0+255),w,b
  9388  001A36  2796               	addwf	efgtoa@m& (0+255),f,b
  9389  001A38  51B3               	movf	(efgtoa@e+1)& (0+255),w,b
  9390  001A3A  2397               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9391  001A3C                     l8274:
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9395  001A3C  0E00               	movlw	0
  9396  001A3E  6FAD               	movwf	(efgtoa@i+1)& (0+255),b
  9397  001A40  0E00               	movlw	0
  9398  001A42  6FAC               	movwf	efgtoa@i& (0+255),b
  9399  001A44                     
  9400                           ; BSR set to: 0
  9401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9402  001A44  C0AE  F0A4         	movff	efgtoa@g,efgtoa@h
  9403  001A48  C0AF  F0A5         	movff	efgtoa@g+1,efgtoa@h+1
  9404  001A4C  C0B0  F0A6         	movff	efgtoa@g+2,efgtoa@h+2
  9405  001A50  C0B1  F0A7         	movff	efgtoa@g+3,efgtoa@h+3
  9406  001A54                     
  9407                           ; BSR set to: 0
  9408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9409  001A54  C0B6  F082         	movff	efgtoa@u,efgtoa@ou
  9410  001A58  C0B7  F083         	movff	efgtoa@u+1,efgtoa@ou+1
  9411  001A5C  C0B8  F084         	movff	efgtoa@u+2,efgtoa@ou+2
  9412  001A60  C0B9  F085         	movff	efgtoa@u+3,efgtoa@ou+3
  9413                           
  9414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9415  001A64  EFAF  F00D         	goto	l8288
  9416  001A68                     l8280:
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9420  001A68  C0A4  F043         	movff	efgtoa@h,___fldiv@b
  9421  001A6C  C0A5  F044         	movff	efgtoa@h+1,___fldiv@b+1
  9422  001A70  C0A6  F045         	movff	efgtoa@h+2,___fldiv@b+2
  9423  001A74  C0A7  F046         	movff	efgtoa@h+3,___fldiv@b+3
  9424  001A78  C0B6  F047         	movff	efgtoa@u,___fldiv@a
  9425  001A7C  C0B7  F048         	movff	efgtoa@u+1,___fldiv@a+1
  9426  001A80  C0B8  F049         	movff	efgtoa@u+2,___fldiv@a+2
  9427  001A84  C0B9  F04A         	movff	efgtoa@u+3,___fldiv@a+3
  9428  001A88  ECEA  F016         	call	___fldiv	;wreg free
  9429  001A8C  C043  F06D         	movff	?___fldiv,floorf@x
  9430  001A90  C044  F06E         	movff	?___fldiv+1,floorf@x+1
  9431  001A94  C045  F06F         	movff	?___fldiv+2,floorf@x+2
  9432  001A98  C046  F070         	movff	?___fldiv+3,floorf@x+3
  9433  001A9C  EC5C  F01D         	call	_floorf	;wreg free
  9434  001AA0  C06D  F0A8         	movff	?_floorf,efgtoa@l
  9435  001AA4  C06E  F0A9         	movff	?_floorf+1,efgtoa@l+1
  9436  001AA8  C06F  F0AA         	movff	?_floorf+2,efgtoa@l+2
  9437  001AAC  C070  F0AB         	movff	?_floorf+3,efgtoa@l+3
  9438                           
  9439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9440  001AB0  C0A8  F004         	movff	efgtoa@l,___fltol@f1
  9441  001AB4  C0A9  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9442  001AB8  C0AA  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9443  001ABC  C0AB  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9444  001AC0  ECC5  F026         	call	___fltol	;wreg free
  9445  001AC4  C004  F09A         	movff	?___fltol,efgtoa@d
  9446  001AC8  C005  F09B         	movff	?___fltol+1,efgtoa@d+1
  9447  001ACC                     
  9448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9449  001ACC  C0A4  F03B         	movff	efgtoa@h,___flsub@b
  9450  001AD0  C0A5  F03C         	movff	efgtoa@h+1,___flsub@b+1
  9451  001AD4  C0A6  F03D         	movff	efgtoa@h+2,___flsub@b+2
  9452  001AD8  C0A7  F03E         	movff	efgtoa@h+3,___flsub@b+3
  9453  001ADC  C0B6  F016         	movff	efgtoa@u,___flmul@a
  9454  001AE0  C0B7  F017         	movff	efgtoa@u+1,___flmul@a+1
  9455  001AE4  C0B8  F018         	movff	efgtoa@u+2,___flmul@a+2
  9456  001AE8  C0B9  F019         	movff	efgtoa@u+3,___flmul@a+3
  9457  001AEC  C0A8  F012         	movff	efgtoa@l,___flmul@b
  9458  001AF0  C0A9  F013         	movff	efgtoa@l+1,___flmul@b+1
  9459  001AF4  C0AA  F014         	movff	efgtoa@l+2,___flmul@b+2
  9460  001AF8  C0AB  F015         	movff	efgtoa@l+3,___flmul@b+3
  9461  001AFC  ECD1  F012         	call	___flmul	;wreg free
  9462  001B00  C012  F03F         	movff	?___flmul,___flsub@a
  9463  001B04  C013  F040         	movff	?___flmul+1,___flsub@a+1
  9464  001B08  C014  F041         	movff	?___flmul+2,___flsub@a+2
  9465  001B0C  C015  F042         	movff	?___flmul+3,___flsub@a+3
  9466  001B10  EC4F  F02D         	call	___flsub	;wreg free
  9467  001B14  C03B  F0A4         	movff	?___flsub,efgtoa@h
  9468  001B18  C03C  F0A5         	movff	?___flsub+1,efgtoa@h+1
  9469  001B1C  C03D  F0A6         	movff	?___flsub+2,efgtoa@h+2
  9470  001B20  C03E  F0A7         	movff	?___flsub+3,efgtoa@h+3
  9471  001B24                     
  9472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9473  001B24  C0B6  F043         	movff	efgtoa@u,___fldiv@b
  9474  001B28  C0B7  F044         	movff	efgtoa@u+1,___fldiv@b+1
  9475  001B2C  C0B8  F045         	movff	efgtoa@u+2,___fldiv@b+2
  9476  001B30  C0B9  F046         	movff	efgtoa@u+3,___fldiv@b+3
  9477  001B34  0E00               	movlw	0
  9478  001B36  6E47               	movwf	___fldiv@a^0,c
  9479  001B38  0E00               	movlw	0
  9480  001B3A  6E48               	movwf	(___fldiv@a+1)^0,c
  9481  001B3C  0E20               	movlw	32
  9482  001B3E  6E49               	movwf	(___fldiv@a+2)^0,c
  9483  001B40  0E41               	movlw	65
  9484  001B42  6E4A               	movwf	(___fldiv@a+3)^0,c
  9485  001B44  ECEA  F016         	call	___fldiv	;wreg free
  9486  001B48  C043  F0B6         	movff	?___fldiv,efgtoa@u
  9487  001B4C  C044  F0B7         	movff	?___fldiv+1,efgtoa@u+1
  9488  001B50  C045  F0B8         	movff	?___fldiv+2,efgtoa@u+2
  9489  001B54  C046  F0B9         	movff	?___fldiv+3,efgtoa@u+3
  9490  001B58                     
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9492  001B58  0100               	movlb	0	; () banked
  9493  001B5A  4BAC               	infsnz	efgtoa@i& (0+255),f,b
  9494  001B5C  2BAD               	incf	(efgtoa@i+1)& (0+255),f,b
  9495  001B5E                     l8288:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9499  001B5E  5196               	movf	efgtoa@m& (0+255),w,b
  9500  001B60  5DAC               	subwf	efgtoa@i& (0+255),w,b
  9501  001B62  51AD               	movf	(efgtoa@i+1)& (0+255),w,b
  9502  001B64  0A80               	xorlw	128
  9503  001B66  6E55               	movwf	??_efgtoa^0,c
  9504  001B68  5197               	movf	(efgtoa@m+1)& (0+255),w,b
  9505  001B6A  0A80               	xorlw	128
  9506  001B6C  5855               	subwfb	??_efgtoa^0,w,c
  9507  001B6E  A0D8               	btfss	status,0,c
  9508  001B70  EFBC  F00D         	goto	u10691
  9509  001B74  EFBE  F00D         	goto	u10690
  9510  001B78                     u10691:
  9511  001B78  EF34  F00D         	goto	l8280
  9512  001B7C                     u10690:
  9513  001B7C                     
  9514                           ; BSR set to: 0
  9515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9516  001B7C  C0B6  F012         	movff	efgtoa@u,___flmul@b
  9517  001B80  C0B7  F013         	movff	efgtoa@u+1,___flmul@b+1
  9518  001B84  C0B8  F014         	movff	efgtoa@u+2,___flmul@b+2
  9519  001B88  C0B9  F015         	movff	efgtoa@u+3,___flmul@b+3
  9520  001B8C  0E00               	movlw	0
  9521  001B8E  6E16               	movwf	___flmul@a^0,c
  9522  001B90  0E00               	movlw	0
  9523  001B92  6E17               	movwf	(___flmul@a+1)^0,c
  9524  001B94  0EA0               	movlw	160
  9525  001B96  6E18               	movwf	(___flmul@a+2)^0,c
  9526  001B98  0E40               	movlw	64
  9527  001B9A  6E19               	movwf	(___flmul@a+3)^0,c
  9528  001B9C  ECD1  F012         	call	___flmul	;wreg free
  9529  001BA0  C012  F0A8         	movff	?___flmul,efgtoa@l
  9530  001BA4  C013  F0A9         	movff	?___flmul+1,efgtoa@l+1
  9531  001BA8  C014  F0AA         	movff	?___flmul+2,efgtoa@l+2
  9532  001BAC  C015  F0AB         	movff	?___flmul+3,efgtoa@l+3
  9533  001BB0                     
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9535  001BB0  C0A4  F02B         	movff	efgtoa@h,___flge@ff1
  9536  001BB4  C0A5  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  9537  001BB8  C0A6  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  9538  001BBC  C0A7  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  9539  001BC0  C0A8  F02F         	movff	efgtoa@l,___flge@ff2
  9540  001BC4  C0A9  F030         	movff	efgtoa@l+1,___flge@ff2+1
  9541  001BC8  C0AA  F031         	movff	efgtoa@l+2,___flge@ff2+2
  9542  001BCC  C0AB  F032         	movff	efgtoa@l+3,___flge@ff2+3
  9543  001BD0  EC48  F027         	call	___flge	;wreg free
  9544  001BD4  B0D8               	btfsc	status,0,c
  9545  001BD6  EFEF  F00D         	goto	u10701
  9546  001BDA  EFF1  F00D         	goto	u10700
  9547  001BDE                     u10701:
  9548  001BDE  EFFC  F00D         	goto	l8296
  9549  001BE2                     u10700:
  9550  001BE2                     
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9552  001BE2  0E00               	movlw	0
  9553  001BE4  0100               	movlb	0	; () banked
  9554  001BE6  6FA8               	movwf	efgtoa@l& (0+255),b
  9555  001BE8  0E00               	movlw	0
  9556  001BEA  6FA9               	movwf	(efgtoa@l+1)& (0+255),b
  9557  001BEC  0E00               	movlw	0
  9558  001BEE  6FAA               	movwf	(efgtoa@l+2)& (0+255),b
  9559  001BF0  0E00               	movlw	0
  9560  001BF2  6FAB               	movwf	(efgtoa@l+3)& (0+255),b
  9561                           
  9562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9563  001BF4  EF25  F00E         	goto	l8302
  9564  001BF8                     l8296:
  9565                           
  9566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9567  001BF8  C0A4  F004         	movff	efgtoa@h,___fleq@ff1
  9568  001BFC  C0A5  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  9569  001C00  C0A6  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  9570  001C04  C0A7  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  9571  001C08  C0A8  F008         	movff	efgtoa@l,___fleq@ff2
  9572  001C0C  C0A9  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  9573  001C10  C0AA  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  9574  001C14  C0AB  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  9575  001C18  EC03  F02B         	call	___fleq	;wreg free
  9576  001C1C  A0D8               	btfss	status,0,c
  9577  001C1E  EF13  F00E         	goto	u10711
  9578  001C22  EF15  F00E         	goto	u10710
  9579  001C26                     u10711:
  9580  001C26  EF25  F00E         	goto	l8302
  9581  001C2A                     u10710:
  9582  001C2A  0100               	movlb	0	; () banked
  9583  001C2C  B19A               	btfsc	efgtoa@d& (0+255),0,b
  9584  001C2E  EF1B  F00E         	goto	u10721
  9585  001C32  EF1D  F00E         	goto	u10720
  9586  001C36                     u10721:
  9587  001C36  EF25  F00E         	goto	l8302
  9588  001C3A                     u10720:
  9589  001C3A                     
  9590                           ; BSR set to: 0
  9591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9592  001C3A  0E00               	movlw	0
  9593  001C3C  6FA8               	movwf	efgtoa@l& (0+255),b
  9594  001C3E  0E00               	movlw	0
  9595  001C40  6FA9               	movwf	(efgtoa@l+1)& (0+255),b
  9596  001C42  0E00               	movlw	0
  9597  001C44  6FAA               	movwf	(efgtoa@l+2)& (0+255),b
  9598  001C46  0E00               	movlw	0
  9599  001C48  6FAB               	movwf	(efgtoa@l+3)& (0+255),b
  9600  001C4A                     l8302:
  9601                           
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9603  001C4A  C0AE  F02B         	movff	efgtoa@g,___fladd@b
  9604  001C4E  C0AF  F02C         	movff	efgtoa@g+1,___fladd@b+1
  9605  001C52  C0B0  F02D         	movff	efgtoa@g+2,___fladd@b+2
  9606  001C56  C0B1  F02E         	movff	efgtoa@g+3,___fladd@b+3
  9607  001C5A  C0A8  F02F         	movff	efgtoa@l,___fladd@a
  9608  001C5E  C0A9  F030         	movff	efgtoa@l+1,___fladd@a+1
  9609  001C62  C0AA  F031         	movff	efgtoa@l+2,___fladd@a+2
  9610  001C66  C0AB  F032         	movff	efgtoa@l+3,___fladd@a+3
  9611  001C6A  EC71  F010         	call	___fladd	;wreg free
  9612  001C6E  C02B  F0A4         	movff	?___fladd,efgtoa@h
  9613  001C72  C02C  F0A5         	movff	?___fladd+1,efgtoa@h+1
  9614  001C76  C02D  F0A6         	movff	?___fladd+2,efgtoa@h+2
  9615  001C7A  C02E  F0A7         	movff	?___fladd+3,efgtoa@h+3
  9616  001C7E                     
  9617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9618  001C7E  C082  F0B6         	movff	efgtoa@ou,efgtoa@u
  9619  001C82  C083  F0B7         	movff	efgtoa@ou+1,efgtoa@u+1
  9620  001C86  C084  F0B8         	movff	efgtoa@ou+2,efgtoa@u+2
  9621  001C8A  C085  F0B9         	movff	efgtoa@ou+3,efgtoa@u+3
  9622  001C8E                     
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9624  001C8E  0E65               	movlw	101
  9625  001C90  0100               	movlb	0	; () banked
  9626  001C92  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  9627  001C94  B4D8               	btfsc	status,2,c
  9628  001C96  EF4F  F00E         	goto	u10731
  9629  001C9A  EF51  F00E         	goto	u10730
  9630  001C9E                     u10731:
  9631  001C9E  EF57  F00E         	goto	l8310
  9632  001CA2                     u10730:
  9633  001CA2                     
  9634                           ; BSR set to: 0
  9635  001CA2  C0B2  F098         	movff	efgtoa@e,efgtoa@ne
  9636  001CA6  C0B3  F099         	movff	efgtoa@e+1,efgtoa@ne+1
  9637  001CAA  EF5B  F00E         	goto	l597
  9638  001CAE                     l8310:
  9639                           
  9640                           ; BSR set to: 0
  9641  001CAE  0E00               	movlw	0
  9642  001CB0  6F99               	movwf	(efgtoa@ne+1)& (0+255),b
  9643  001CB2  0E00               	movlw	0
  9644  001CB4  6F98               	movwf	efgtoa@ne& (0+255),b
  9645  001CB6                     l597:
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9649  001CB6  0E00               	movlw	0
  9650  001CB8  6F95               	movwf	(efgtoa@pp+1)& (0+255),b
  9651  001CBA  0E00               	movlw	0
  9652  001CBC  6F94               	movwf	efgtoa@pp& (0+255),b
  9653                           
  9654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9655  001CBE  0E00               	movlw	0
  9656  001CC0  6F93               	movwf	(efgtoa@t+1)& (0+255),b
  9657  001CC2  0E00               	movlw	0
  9658  001CC4  6F92               	movwf	efgtoa@t& (0+255),b
  9659                           
  9660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9661  001CC6  0E00               	movlw	0
  9662  001CC8  6FAD               	movwf	(efgtoa@i+1)& (0+255),b
  9663  001CCA  0E00               	movlw	0
  9664  001CCC  6FAC               	movwf	efgtoa@i& (0+255),b
  9665                           
  9666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9667  001CCE  EF56  F00F         	goto	l8360
  9668  001CD2                     l8312:
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9672  001CD2  C0A4  F043         	movff	efgtoa@h,___fldiv@b
  9673  001CD6  C0A5  F044         	movff	efgtoa@h+1,___fldiv@b+1
  9674  001CDA  C0A6  F045         	movff	efgtoa@h+2,___fldiv@b+2
  9675  001CDE  C0A7  F046         	movff	efgtoa@h+3,___fldiv@b+3
  9676  001CE2  C0B6  F047         	movff	efgtoa@u,___fldiv@a
  9677  001CE6  C0B7  F048         	movff	efgtoa@u+1,___fldiv@a+1
  9678  001CEA  C0B8  F049         	movff	efgtoa@u+2,___fldiv@a+2
  9679  001CEE  C0B9  F04A         	movff	efgtoa@u+3,___fldiv@a+3
  9680  001CF2  ECEA  F016         	call	___fldiv	;wreg free
  9681  001CF6  C043  F06D         	movff	?___fldiv,floorf@x
  9682  001CFA  C044  F06E         	movff	?___fldiv+1,floorf@x+1
  9683  001CFE  C045  F06F         	movff	?___fldiv+2,floorf@x+2
  9684  001D02  C046  F070         	movff	?___fldiv+3,floorf@x+3
  9685  001D06  EC5C  F01D         	call	_floorf	;wreg free
  9686  001D0A  C06D  F0A8         	movff	?_floorf,efgtoa@l
  9687  001D0E  C06E  F0A9         	movff	?_floorf+1,efgtoa@l+1
  9688  001D12  C06F  F0AA         	movff	?_floorf+2,efgtoa@l+2
  9689  001D16  C070  F0AB         	movff	?_floorf+3,efgtoa@l+3
  9690                           
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9692  001D1A  C0A8  F004         	movff	efgtoa@l,___fltol@f1
  9693  001D1E  C0A9  F005         	movff	efgtoa@l+1,___fltol@f1+1
  9694  001D22  C0AA  F006         	movff	efgtoa@l+2,___fltol@f1+2
  9695  001D26  C0AB  F007         	movff	efgtoa@l+3,___fltol@f1+3
  9696  001D2A  ECC5  F026         	call	___fltol	;wreg free
  9697  001D2E  C004  F09A         	movff	?___fltol,efgtoa@d
  9698  001D32  C005  F09B         	movff	?___fltol+1,efgtoa@d+1
  9699  001D36                     
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9701  001D36  0100               	movlb	0	; () banked
  9702  001D38  B9FC               	btfsc	_flags& (0+255),4,b
  9703  001D3A  EFA1  F00E         	goto	u10741
  9704  001D3E  EFA3  F00E         	goto	u10740
  9705  001D42                     u10741:
  9706  001D42  EFC0  F00E         	goto	l8324
  9707  001D46                     u10740:
  9708  001D46                     
  9709                           ; BSR set to: 0
  9710  001D46  519A               	movf	efgtoa@d& (0+255),w,b
  9711  001D48  119B               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9712  001D4A  A4D8               	btfss	status,2,c
  9713  001D4C  EFAA  F00E         	goto	u10751
  9714  001D50  EFAC  F00E         	goto	u10750
  9715  001D54                     u10751:
  9716  001D54  EFC0  F00E         	goto	l8324
  9717  001D58                     u10750:
  9718  001D58                     
  9719                           ; BSR set to: 0
  9720  001D58  0E67               	movlw	103
  9721  001D5A  19A3               	xorwf	efgtoa@mode& (0+255),w,b
  9722  001D5C  A4D8               	btfss	status,2,c
  9723  001D5E  EFB3  F00E         	goto	u10761
  9724  001D62  EFB5  F00E         	goto	u10760
  9725  001D66                     u10761:
  9726  001D66  EFC0  F00E         	goto	l8324
  9727  001D6A                     u10760:
  9728  001D6A                     
  9729                           ; BSR set to: 0
  9730  001D6A  BF99               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9731  001D6C  EFBC  F00E         	goto	u10770
  9732  001D70  EFBA  F00E         	goto	u10771
  9733  001D74                     u10771:
  9734  001D74  EFC0  F00E         	goto	l8324
  9735  001D78                     u10770:
  9736  001D78                     
  9737                           ; BSR set to: 0
  9738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9739  001D78  4B92               	infsnz	efgtoa@t& (0+255),f,b
  9740  001D7A  2B93               	incf	(efgtoa@t+1)& (0+255),f,b
  9741                           
  9742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9743  001D7C  EF0A  F00F         	goto	l8352
  9744  001D80                     l8324:
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9748  001D80  5194               	movf	efgtoa@pp& (0+255),w,b
  9749  001D82  1195               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9750  001D84  A4D8               	btfss	status,2,c
  9751  001D86  EFC7  F00E         	goto	u10781
  9752  001D8A  EFC9  F00E         	goto	u10780
  9753  001D8E                     u10781:
  9754  001D8E  EFF3  F00E         	goto	l8344
  9755  001D92                     u10780:
  9756  001D92                     
  9757                           ; BSR set to: 0
  9758  001D92  BF99               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9759  001D94  EFD0  F00E         	goto	u10790
  9760  001D98  EFCE  F00E         	goto	u10791
  9761  001D9C                     u10791:
  9762  001D9C  EFF3  F00E         	goto	l8344
  9763  001DA0                     u10790:
  9764  001DA0                     
  9765                           ; BSR set to: 0
  9766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9767  001DA0  0E8A               	movlw	low _dbuf
  9768  001DA2  25B4               	addwf	efgtoa@n& (0+255),w,b
  9769  001DA4  6ED9               	movwf	fsr2l,c
  9770  001DA6  0E01               	movlw	high _dbuf
  9771  001DA8  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9772  001DAA  6EDA               	movwf	fsr2h,c
  9773  001DAC  0E2E               	movlw	46
  9774  001DAE  6EDF               	movwf	indf2,c
  9775  001DB0                     
  9776                           ; BSR set to: 0
  9777  001DB0  4BB4               	infsnz	efgtoa@n& (0+255),f,b
  9778  001DB2  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
  9779  001DB4                     
  9780                           ; BSR set to: 0
  9781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9782  001DB4  07A1               	decf	efgtoa@w& (0+255),f,b
  9783  001DB6  A0D8               	btfss	status,0,c
  9784  001DB8  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  9785  001DBA                     
  9786                           ; BSR set to: 0
  9787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9788  001DBA  0E00               	movlw	0
  9789  001DBC  6F95               	movwf	(efgtoa@pp+1)& (0+255),b
  9790  001DBE  0E01               	movlw	1
  9791  001DC0  6F94               	movwf	efgtoa@pp& (0+255),b
  9792  001DC2  EFF3  F00E         	goto	l8344
  9793  001DC6                     l8336:
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9797  001DC6  0E8A               	movlw	low _dbuf
  9798  001DC8  25B4               	addwf	efgtoa@n& (0+255),w,b
  9799  001DCA  6ED9               	movwf	fsr2l,c
  9800  001DCC  0E01               	movlw	high _dbuf
  9801  001DCE  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9802  001DD0  6EDA               	movwf	fsr2h,c
  9803  001DD2  0E30               	movlw	48
  9804  001DD4  6EDF               	movwf	indf2,c
  9805  001DD6                     
  9806                           ; BSR set to: 0
  9807  001DD6  4BB4               	infsnz	efgtoa@n& (0+255),f,b
  9808  001DD8  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
  9809  001DDA                     
  9810                           ; BSR set to: 0
  9811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9812  001DDA  07A1               	decf	efgtoa@w& (0+255),f,b
  9813  001DDC  A0D8               	btfss	status,0,c
  9814  001DDE  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  9815  001DE0                     
  9816                           ; BSR set to: 0
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9818  001DE0  0792               	decf	efgtoa@t& (0+255),f,b
  9819  001DE2  A0D8               	btfss	status,0,c
  9820  001DE4  0793               	decf	(efgtoa@t+1)& (0+255),f,b
  9821  001DE6                     l8344:
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9825  001DE6  5192               	movf	efgtoa@t& (0+255),w,b
  9826  001DE8  1193               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9827  001DEA  A4D8               	btfss	status,2,c
  9828  001DEC  EFFA  F00E         	goto	u10801
  9829  001DF0  EFFC  F00E         	goto	u10800
  9830  001DF4                     u10801:
  9831  001DF4  EFE3  F00E         	goto	l8336
  9832  001DF8                     u10800:
  9833  001DF8                     
  9834                           ; BSR set to: 0
  9835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9836  001DF8  0E8A               	movlw	low _dbuf
  9837  001DFA  25B4               	addwf	efgtoa@n& (0+255),w,b
  9838  001DFC  6ED9               	movwf	fsr2l,c
  9839  001DFE  0E01               	movlw	high _dbuf
  9840  001E00  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9841  001E02  6EDA               	movwf	fsr2h,c
  9842  001E04  519A               	movf	efgtoa@d& (0+255),w,b
  9843  001E06  0F30               	addlw	48
  9844  001E08  6EDF               	movwf	indf2,c
  9845  001E0A                     
  9846                           ; BSR set to: 0
  9847  001E0A  4BB4               	infsnz	efgtoa@n& (0+255),f,b
  9848  001E0C  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
  9849  001E0E                     
  9850                           ; BSR set to: 0
  9851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9852  001E0E  07A1               	decf	efgtoa@w& (0+255),f,b
  9853  001E10  A0D8               	btfss	status,0,c
  9854  001E12  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  9855  001E14                     l8352:
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9859  001E14  C0A4  F03B         	movff	efgtoa@h,___flsub@b
  9860  001E18  C0A5  F03C         	movff	efgtoa@h+1,___flsub@b+1
  9861  001E1C  C0A6  F03D         	movff	efgtoa@h+2,___flsub@b+2
  9862  001E20  C0A7  F03E         	movff	efgtoa@h+3,___flsub@b+3
  9863  001E24  C0B6  F016         	movff	efgtoa@u,___flmul@a
  9864  001E28  C0B7  F017         	movff	efgtoa@u+1,___flmul@a+1
  9865  001E2C  C0B8  F018         	movff	efgtoa@u+2,___flmul@a+2
  9866  001E30  C0B9  F019         	movff	efgtoa@u+3,___flmul@a+3
  9867  001E34  C0A8  F012         	movff	efgtoa@l,___flmul@b
  9868  001E38  C0A9  F013         	movff	efgtoa@l+1,___flmul@b+1
  9869  001E3C  C0AA  F014         	movff	efgtoa@l+2,___flmul@b+2
  9870  001E40  C0AB  F015         	movff	efgtoa@l+3,___flmul@b+3
  9871  001E44  ECD1  F012         	call	___flmul	;wreg free
  9872  001E48  C012  F03F         	movff	?___flmul,___flsub@a
  9873  001E4C  C013  F040         	movff	?___flmul+1,___flsub@a+1
  9874  001E50  C014  F041         	movff	?___flmul+2,___flsub@a+2
  9875  001E54  C015  F042         	movff	?___flmul+3,___flsub@a+3
  9876  001E58  EC4F  F02D         	call	___flsub	;wreg free
  9877  001E5C  C03B  F0A4         	movff	?___flsub,efgtoa@h
  9878  001E60  C03C  F0A5         	movff	?___flsub+1,efgtoa@h+1
  9879  001E64  C03D  F0A6         	movff	?___flsub+2,efgtoa@h+2
  9880  001E68  C03E  F0A7         	movff	?___flsub+3,efgtoa@h+3
  9881  001E6C                     
  9882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9883  001E6C  C0B6  F043         	movff	efgtoa@u,___fldiv@b
  9884  001E70  C0B7  F044         	movff	efgtoa@u+1,___fldiv@b+1
  9885  001E74  C0B8  F045         	movff	efgtoa@u+2,___fldiv@b+2
  9886  001E78  C0B9  F046         	movff	efgtoa@u+3,___fldiv@b+3
  9887  001E7C  0E00               	movlw	0
  9888  001E7E  6E47               	movwf	___fldiv@a^0,c
  9889  001E80  0E00               	movlw	0
  9890  001E82  6E48               	movwf	(___fldiv@a+1)^0,c
  9891  001E84  0E20               	movlw	32
  9892  001E86  6E49               	movwf	(___fldiv@a+2)^0,c
  9893  001E88  0E41               	movlw	65
  9894  001E8A  6E4A               	movwf	(___fldiv@a+3)^0,c
  9895  001E8C  ECEA  F016         	call	___fldiv	;wreg free
  9896  001E90  C043  F0B6         	movff	?___fldiv,efgtoa@u
  9897  001E94  C044  F0B7         	movff	?___fldiv+1,efgtoa@u+1
  9898  001E98  C045  F0B8         	movff	?___fldiv+2,efgtoa@u+2
  9899  001E9C  C046  F0B9         	movff	?___fldiv+3,efgtoa@u+3
  9900  001EA0                     
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9902  001EA0  0100               	movlb	0	; () banked
  9903  001EA2  0798               	decf	efgtoa@ne& (0+255),f,b
  9904  001EA4  A0D8               	btfss	status,0,c
  9905  001EA6  0799               	decf	(efgtoa@ne+1)& (0+255),f,b
  9906  001EA8                     
  9907                           ; BSR set to: 0
  9908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9909  001EA8  4BAC               	infsnz	efgtoa@i& (0+255),f,b
  9910  001EAA  2BAD               	incf	(efgtoa@i+1)& (0+255),f,b
  9911  001EAC                     l8360:
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9915  001EAC  5196               	movf	efgtoa@m& (0+255),w,b
  9916  001EAE  5DAC               	subwf	efgtoa@i& (0+255),w,b
  9917  001EB0  51AD               	movf	(efgtoa@i+1)& (0+255),w,b
  9918  001EB2  0A80               	xorlw	128
  9919  001EB4  6E55               	movwf	??_efgtoa^0,c
  9920  001EB6  5197               	movf	(efgtoa@m+1)& (0+255),w,b
  9921  001EB8  0A80               	xorlw	128
  9922  001EBA  5855               	subwfb	??_efgtoa^0,w,c
  9923  001EBC  B0D8               	btfsc	status,0,c
  9924  001EBE  EF63  F00F         	goto	u10811
  9925  001EC2  EF65  F00F         	goto	u10810
  9926  001EC6                     u10811:
  9927  001EC6  EF73  F00F         	goto	l8364
  9928  001ECA                     u10810:
  9929  001ECA                     
  9930                           ; BSR set to: 0
  9931  001ECA  BFB5               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9932  001ECC  EF71  F00F         	goto	u10821
  9933  001ED0  51B5               	movf	(efgtoa@n+1)& (0+255),w,b
  9934  001ED2  E109               	bnz	u10820
  9935  001ED4  0E4B               	movlw	75
  9936  001ED6  5DB4               	subwf	efgtoa@n& (0+255),w,b
  9937  001ED8  A0D8               	btfss	status,0,c
  9938  001EDA  EF71  F00F         	goto	u10821
  9939  001EDE  EF73  F00F         	goto	u10820
  9940  001EE2                     u10821:
  9941  001EE2  EF69  F00E         	goto	l8312
  9942  001EE6                     u10820:
  9943  001EE6                     l8364:
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9947  001EE6  5194               	movf	efgtoa@pp& (0+255),w,b
  9948  001EE8  1195               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9949  001EEA  A4D8               	btfss	status,2,c
  9950  001EEC  EF7A  F00F         	goto	u10831
  9951  001EF0  EF7C  F00F         	goto	u10830
  9952  001EF4                     u10831:
  9953  001EF4  EF8D  F00F         	goto	l8372
  9954  001EF8                     u10830:
  9955  001EF8                     
  9956                           ; BSR set to: 0
  9957  001EF8  A9FC               	btfss	_flags& (0+255),4,b
  9958  001EFA  EF81  F00F         	goto	u10841
  9959  001EFE  EF83  F00F         	goto	u10840
  9960  001F02                     u10841:
  9961  001F02  EF8D  F00F         	goto	l8372
  9962  001F06                     u10840:
  9963  001F06                     
  9964                           ; BSR set to: 0
  9965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9966  001F06  0E8A               	movlw	low _dbuf
  9967  001F08  25B4               	addwf	efgtoa@n& (0+255),w,b
  9968  001F0A  6ED9               	movwf	fsr2l,c
  9969  001F0C  0E01               	movlw	high _dbuf
  9970  001F0E  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9971  001F10  6EDA               	movwf	fsr2h,c
  9972  001F12  0E2E               	movlw	46
  9973  001F14  6EDF               	movwf	indf2,c
  9974  001F16                     
  9975                           ; BSR set to: 0
  9976  001F16  4BB4               	infsnz	efgtoa@n& (0+255),f,b
  9977  001F18  2BB5               	incf	(efgtoa@n+1)& (0+255),f,b
  9978  001F1A                     l8372:
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9982  001F1A  0E8A               	movlw	low _dbuf
  9983  001F1C  25B4               	addwf	efgtoa@n& (0+255),w,b
  9984  001F1E  6ED9               	movwf	fsr2l,c
  9985  001F20  0E01               	movlw	high _dbuf
  9986  001F22  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9987  001F24  6EDA               	movwf	fsr2h,c
  9988  001F26  0E00               	movlw	0
  9989  001F28  6EDF               	movwf	indf2,c
  9990  001F2A                     
  9991                           ; BSR set to: 0
  9992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9993  001F2A  0E65               	movlw	101
  9994  001F2C  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  9995  001F2E  A4D8               	btfss	status,2,c
  9996  001F30  EF9C  F00F         	goto	u10851
  9997  001F34  EF9E  F00F         	goto	u10850
  9998  001F38                     u10851:
  9999  001F38  EF4C  F00B         	goto	l8184
 10000  001F3C                     u10850:
 10001  001F3C                     
 10002                           ; BSR set to: 0
 10003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10004  001F3C  0E00               	movlw	0
 10005  001F3E  6FAD               	movwf	(efgtoa@i+1)& (0+255),b
 10006  001F40  0E4F               	movlw	79
 10007  001F42  6FAC               	movwf	efgtoa@i& (0+255),b
 10008  001F44                     
 10009                           ; BSR set to: 0
 10010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10011  001F44  0E8A               	movlw	low _dbuf
 10012  001F46  25AC               	addwf	efgtoa@i& (0+255),w,b
 10013  001F48  6ED9               	movwf	fsr2l,c
 10014  001F4A  0E01               	movlw	high _dbuf
 10015  001F4C  21AD               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10016  001F4E  6EDA               	movwf	fsr2h,c
 10017  001F50  0E00               	movlw	0
 10018  001F52  6EDF               	movwf	indf2,c
 10019  001F54                     
 10020                           ; BSR set to: 0
 10021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10022  001F54  0E00               	movlw	0
 10023  001F56  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
 10024  001F58  0E00               	movlw	0
 10025  001F5A  6F9C               	movwf	efgtoa@sign& (0+255),b
 10026  001F5C                     
 10027                           ; BSR set to: 0
 10028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10029  001F5C  BFB3               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10030  001F5E  EFB5  F00F         	goto	u10860
 10031  001F62  EFB3  F00F         	goto	u10861
 10032  001F66                     u10861:
 10033  001F66  EFBD  F00F         	goto	l8388
 10034  001F6A                     u10860:
 10035  001F6A                     
 10036                           ; BSR set to: 0
 10037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10038  001F6A  0E00               	movlw	0
 10039  001F6C  6F9D               	movwf	(efgtoa@sign+1)& (0+255),b
 10040  001F6E  0E01               	movlw	1
 10041  001F70  6F9C               	movwf	efgtoa@sign& (0+255),b
 10042  001F72                     
 10043                           ; BSR set to: 0
 10044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10045  001F72  6DB2               	negf	efgtoa@e& (0+255),b
 10046  001F74  1FB3               	comf	(efgtoa@e+1)& (0+255),f,b
 10047  001F76  B0D8               	btfsc	status,0,c
 10048  001F78  2BB3               	incf	(efgtoa@e+1)& (0+255),f,b
 10049  001F7A                     l8388:
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10053  001F7A  0E00               	movlw	0
 10054  001F7C  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
 10055  001F7E  0E02               	movlw	2
 10056  001F80  6F9E               	movwf	efgtoa@p& (0+255),b
 10057                           
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10059  001F82  EFEE  F00F         	goto	l8400
 10060  001F86                     l8390:
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10064  001F86  07AC               	decf	efgtoa@i& (0+255),f,b
 10065  001F88  A0D8               	btfss	status,0,c
 10066  001F8A  07AD               	decf	(efgtoa@i+1)& (0+255),f,b
 10067  001F8C                     
 10068                           ; BSR set to: 0
 10069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10070  001F8C  0E8A               	movlw	low _dbuf
 10071  001F8E  25AC               	addwf	efgtoa@i& (0+255),w,b
 10072  001F90  6ED9               	movwf	fsr2l,c
 10073  001F92  0E01               	movlw	high _dbuf
 10074  001F94  21AD               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10075  001F96  6EDA               	movwf	fsr2h,c
 10076  001F98  C0B2  F004         	movff	efgtoa@e,___awmod@dividend
 10077  001F9C  C0B3  F005         	movff	efgtoa@e+1,___awmod@dividend+1
 10078  001FA0  0E00               	movlw	0
 10079  001FA2  6E07               	movwf	(___awmod@divisor+1)^0,c
 10080  001FA4  0E0A               	movlw	10
 10081  001FA6  6E06               	movwf	___awmod@divisor^0,c
 10082  001FA8  EC53  F02A         	call	___awmod	;wreg free
 10083  001FAC  5004               	movf	?___awmod^0,w,c
 10084  001FAE  0F30               	addlw	48
 10085  001FB0  6EDF               	movwf	indf2,c
 10086  001FB2                     
 10087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10088  001FB2  C0B2  F004         	movff	efgtoa@e,___awdiv@dividend
 10089  001FB6  C0B3  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
 10090  001FBA  0E00               	movlw	0
 10091  001FBC  6E07               	movwf	(___awdiv@divisor+1)^0,c
 10092  001FBE  0E0A               	movlw	10
 10093  001FC0  6E06               	movwf	___awdiv@divisor^0,c
 10094  001FC2  ECF1  F029         	call	___awdiv	;wreg free
 10095  001FC6  C004  F0B2         	movff	?___awdiv,efgtoa@e
 10096  001FCA  C005  F0B3         	movff	?___awdiv+1,efgtoa@e+1
 10097  001FCE                     
 10098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10099  001FCE  0100               	movlb	0	; () banked
 10100  001FD0  079E               	decf	efgtoa@p& (0+255),f,b
 10101  001FD2  A0D8               	btfss	status,0,c
 10102  001FD4  079F               	decf	(efgtoa@p+1)& (0+255),f,b
 10103  001FD6                     
 10104                           ; BSR set to: 0
 10105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10106  001FD6  07A1               	decf	efgtoa@w& (0+255),f,b
 10107  001FD8  A0D8               	btfss	status,0,c
 10108  001FDA  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 10109  001FDC                     l8400:
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10113  001FDC  51B2               	movf	efgtoa@e& (0+255),w,b
 10114  001FDE  11B3               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10115  001FE0  A4D8               	btfss	status,2,c
 10116  001FE2  EFF5  F00F         	goto	u10871
 10117  001FE6  EFF7  F00F         	goto	u10870
 10118  001FEA                     u10871:
 10119  001FEA  EFC3  F00F         	goto	l8390
 10120  001FEE                     u10870:
 10121  001FEE                     
 10122                           ; BSR set to: 0
 10123  001FEE  BF9F               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10124  001FF0  EF04  F010         	goto	u10880
 10125  001FF4  519F               	movf	(efgtoa@p+1)& (0+255),w,b
 10126  001FF6  E106               	bnz	u10881
 10127  001FF8  059E               	decf	efgtoa@p& (0+255),w,b
 10128  001FFA  B0D8               	btfsc	status,0,c
 10129  001FFC  EF02  F010         	goto	u10881
 10130  002000  EF04  F010         	goto	u10880
 10131  002004                     u10881:
 10132  002004  EFC3  F00F         	goto	l8390
 10133  002008                     u10880:
 10134  002008                     
 10135                           ; BSR set to: 0
 10136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10137  002008  07AC               	decf	efgtoa@i& (0+255),f,b
 10138  00200A  A0D8               	btfss	status,0,c
 10139  00200C  07AD               	decf	(efgtoa@i+1)& (0+255),f,b
 10140  00200E                     
 10141                           ; BSR set to: 0
 10142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10143  00200E  519C               	movf	efgtoa@sign& (0+255),w,b
 10144  002010  119D               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10145  002012  A4D8               	btfss	status,2,c
 10146  002014  EF0E  F010         	goto	u10891
 10147  002018  EF10  F010         	goto	u10890
 10148  00201C                     u10891:
 10149  00201C  EF16  F010         	goto	l8410
 10150  002020                     u10890:
 10151  002020                     
 10152                           ; BSR set to: 0
 10153  002020  0E00               	movlw	0
 10154  002022  6F8D               	movwf	(_efgtoa$1341+1)& (0+255),b
 10155  002024  0E2B               	movlw	43
 10156  002026  6F8C               	movwf	_efgtoa$1341& (0+255),b
 10157  002028  EF1A  F010         	goto	l8412
 10158  00202C                     l8410:
 10159                           
 10160                           ; BSR set to: 0
 10161  00202C  0E00               	movlw	0
 10162  00202E  6F8D               	movwf	(_efgtoa$1341+1)& (0+255),b
 10163  002030  0E2D               	movlw	45
 10164  002032  6F8C               	movwf	_efgtoa$1341& (0+255),b
 10165  002034                     l8412:
 10166                           
 10167                           ; BSR set to: 0
 10168  002034  0E8A               	movlw	low _dbuf
 10169  002036  25AC               	addwf	efgtoa@i& (0+255),w,b
 10170  002038  6ED9               	movwf	fsr2l,c
 10171  00203A  0E01               	movlw	high _dbuf
 10172  00203C  21AD               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10173  00203E  6EDA               	movwf	fsr2h,c
 10174  002040  C08C  FFDF         	movff	_efgtoa$1341,indf2
 10175  002044                     
 10176                           ; BSR set to: 0
 10177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10178  002044  07A1               	decf	efgtoa@w& (0+255),f,b
 10179  002046  A0D8               	btfss	status,0,c
 10180  002048  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 10181  00204A                     
 10182                           ; BSR set to: 0
 10183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10184  00204A  07AC               	decf	efgtoa@i& (0+255),f,b
 10185  00204C  A0D8               	btfss	status,0,c
 10186  00204E  07AD               	decf	(efgtoa@i+1)& (0+255),f,b
 10187  002050                     
 10188                           ; BSR set to: 0
 10189  002050  0EBF               	movlw	191
 10190  002052  6E55               	movwf	??_efgtoa^0,c
 10191  002054  0EFF               	movlw	255
 10192  002056  6E56               	movwf	(??_efgtoa+1)^0,c
 10193  002058  5181               	movf	efgtoa@c& (0+255),w,b
 10194  00205A  6E57               	movwf	(??_efgtoa+2)^0,c
 10195  00205C  6A58               	clrf	(??_efgtoa+3)^0,c
 10196  00205E  5055               	movf	??_efgtoa^0,w,c
 10197  002060  2657               	addwf	(??_efgtoa+2)^0,f,c
 10198  002062  5056               	movf	(??_efgtoa+1)^0,w,c
 10199  002064  2258               	addwfc	(??_efgtoa+3)^0,f,c
 10200  002066  5058               	movf	(??_efgtoa+3)^0,w,c
 10201  002068  E10A               	bnz	u10900
 10202  00206A  0E1A               	movlw	26
 10203  00206C  5C57               	subwf	(??_efgtoa+2)^0,w,c
 10204  00206E  A0D8               	btfss	status,0,c
 10205  002070  EF3C  F010         	goto	u10901
 10206  002074  EF3F  F010         	goto	u10900
 10207  002078                     u10901:
 10208  002078  0E01               	movlw	1
 10209  00207A  EF40  F010         	goto	u10910
 10210  00207E                     u10900:
 10211  00207E  0E00               	movlw	0
 10212  002080                     u10910:
 10213  002080  6F90               	movwf	_efgtoa$1343& (0+255),b
 10214  002082  6B91               	clrf	(_efgtoa$1343+1)& (0+255),b
 10215  002084                     
 10216                           ; BSR set to: 0
 10217  002084  5190               	movf	_efgtoa$1343& (0+255),w,b
 10218  002086  1191               	iorwf	(_efgtoa$1343+1)& (0+255),w,b
 10219  002088  A4D8               	btfss	status,2,c
 10220  00208A  EF49  F010         	goto	u10921
 10221  00208E  EF4B  F010         	goto	u10920
 10222  002092                     u10921:
 10223  002092  EF51  F010         	goto	l8426
 10224  002096                     u10920:
 10225  002096                     
 10226                           ; BSR set to: 0
 10227  002096  0E00               	movlw	0
 10228  002098  6F8F               	movwf	(_efgtoa$1342+1)& (0+255),b
 10229  00209A  0E65               	movlw	101
 10230  00209C  6F8E               	movwf	_efgtoa$1342& (0+255),b
 10231  00209E  EF55  F010         	goto	l8428
 10232  0020A2                     l8426:
 10233                           
 10234                           ; BSR set to: 0
 10235  0020A2  0E00               	movlw	0
 10236  0020A4  6F8F               	movwf	(_efgtoa$1342+1)& (0+255),b
 10237  0020A6  0E45               	movlw	69
 10238  0020A8  6F8E               	movwf	_efgtoa$1342& (0+255),b
 10239  0020AA                     l8428:
 10240                           
 10241                           ; BSR set to: 0
 10242  0020AA  0E8A               	movlw	low _dbuf
 10243  0020AC  25AC               	addwf	efgtoa@i& (0+255),w,b
 10244  0020AE  6ED9               	movwf	fsr2l,c
 10245  0020B0  0E01               	movlw	high _dbuf
 10246  0020B2  21AD               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10247  0020B4  6EDA               	movwf	fsr2h,c
 10248  0020B6  C08E  FFDF         	movff	_efgtoa$1342,indf2
 10249  0020BA                     
 10250                           ; BSR set to: 0
 10251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10252  0020BA  07A1               	decf	efgtoa@w& (0+255),f,b
 10253  0020BC  A0D8               	btfss	status,0,c
 10254  0020BE  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
 10255  0020C0                     
 10256                           ; BSR set to: 0
 10257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10258  0020C0  0E8A               	movlw	low _dbuf
 10259  0020C2  25B4               	addwf	efgtoa@n& (0+255),w,b
 10260  0020C4  6E04               	movwf	strcpy@dest^0,c
 10261  0020C6  0E01               	movlw	high _dbuf
 10262  0020C8  21B5               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10263  0020CA  6E05               	movwf	(strcpy@dest+1)^0,c
 10264  0020CC  0E8A               	movlw	low _dbuf
 10265  0020CE  25AC               	addwf	efgtoa@i& (0+255),w,b
 10266  0020D0  6E06               	movwf	strcpy@src^0,c
 10267  0020D2  0E01               	movlw	high _dbuf
 10268  0020D4  21AD               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10269  0020D6  6E07               	movwf	(strcpy@src+1)^0,c
 10270  0020D8  EC2E  F02C         	call	_strcpy	;wreg free
 10271  0020DC  EF4C  F00B         	goto	l8184
 10272  0020E0                     l553:
 10273  0020E0  0012               	return		;funcret
 10274  0020E2                     __end_of_efgtoa:
 10275                           	opt callstack 0
 10276                           
 10277 ;; *************** function _tolower *****************
 10278 ;; Defined at:
 10279 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  c               2    9[COMRAM] int 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  2    9[COMRAM] int 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10295 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10296 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10297 ;;Total ram usage:        8 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    5
 10300 ;; This function calls:
 10301 ;;		_isupper
 10302 ;; This function is called by:
 10303 ;;		_efgtoa
 10304 ;;		_vfpfcnvrt
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text16
 10309  00579E                     __ptext16:
 10310                           	opt callstack 0
 10311  00579E                     _tolower:
 10312                           	opt callstack 21
 10313  00579E  0EBF               	movlw	191
 10314  0057A0  6E0C               	movwf	??_tolower^0,c
 10315  0057A2  0EFF               	movlw	255
 10316  0057A4  6E0D               	movwf	(??_tolower+1)^0,c
 10317  0057A6  C00A  F00E         	movff	tolower@c,??_tolower+2
 10318  0057AA  C00B  F00F         	movff	tolower@c+1,??_tolower+3
 10319  0057AE  500C               	movf	??_tolower^0,w,c
 10320  0057B0  260E               	addwf	(??_tolower+2)^0,f,c
 10321  0057B2  500D               	movf	(??_tolower+1)^0,w,c
 10322  0057B4  220F               	addwfc	(??_tolower+3)^0,f,c
 10323  0057B6  500F               	movf	(??_tolower+3)^0,w,c
 10324  0057B8  E10A               	bnz	u9130
 10325  0057BA  0E1A               	movlw	26
 10326  0057BC  5C0E               	subwf	(??_tolower+2)^0,w,c
 10327  0057BE  A0D8               	btfss	status,0,c
 10328  0057C0  EFE4  F02B         	goto	u9131
 10329  0057C4  EFE7  F02B         	goto	u9130
 10330  0057C8                     u9131:
 10331  0057C8  0E01               	movlw	1
 10332  0057CA  EFE8  F02B         	goto	u9140
 10333  0057CE                     u9130:
 10334  0057CE  0E00               	movlw	0
 10335  0057D0                     u9140:
 10336  0057D0  6E10               	movwf	_tolower$2100^0,c
 10337  0057D2  6A11               	clrf	(_tolower$2100+1)^0,c
 10338  0057D4  5010               	movf	_tolower$2100^0,w,c
 10339  0057D6  1011               	iorwf	(_tolower$2100+1)^0,w,c
 10340  0057D8  B4D8               	btfsc	status,2,c
 10341  0057DA  EFF1  F02B         	goto	u9151
 10342  0057DE  EFF3  F02B         	goto	u9150
 10343  0057E2                     u9151:
 10344  0057E2  EFFA  F02B         	goto	l1620
 10345  0057E6                     u9150:
 10346  0057E6  0E20               	movlw	32
 10347  0057E8  100A               	iorwf	tolower@c^0,w,c
 10348  0057EA  6E0A               	movwf	?_tolower^0,c
 10349  0057EC  500B               	movf	(tolower@c+1)^0,w,c
 10350  0057EE  6E0B               	movwf	(?_tolower+1)^0,c
 10351  0057F0  EFFE  F02B         	goto	l1625
 10352  0057F4                     l1620:
 10353  0057F4  C00A  F00A         	movff	tolower@c,?_tolower
 10354  0057F8  C00B  F00B         	movff	tolower@c+1,?_tolower+1
 10355  0057FC                     l1625:
 10356  0057FC  0012               	return		;funcret
 10357  0057FE                     __end_of_tolower:
 10358                           	opt callstack 0
 10359                           
 10360 ;; *************** function _isupper *****************
 10361 ;; Defined at:
 10362 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  c               2    3[COMRAM] int 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  2    3[COMRAM] int 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2, status,0
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10378 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;Total ram usage:        6 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:    4
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		_efgtoa
 10387 ;;		_xtoa
 10388 ;;		_vfpfcnvrt
 10389 ;;		_tolower
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text17
 10394  005C9E                     __ptext17:
 10395                           	opt callstack 0
 10396  005C9E                     _isupper:
 10397                           	opt callstack 21
 10398  005C9E  0EBF               	movlw	191
 10399  005CA0  6E06               	movwf	??_isupper^0,c
 10400  005CA2  0EFF               	movlw	255
 10401  005CA4  6E07               	movwf	(??_isupper+1)^0,c
 10402  005CA6  C004  F008         	movff	isupper@c,??_isupper+2
 10403  005CAA  C005  F009         	movff	isupper@c+1,??_isupper+3
 10404  005CAE  5006               	movf	??_isupper^0,w,c
 10405  005CB0  2608               	addwf	(??_isupper+2)^0,f,c
 10406  005CB2  5007               	movf	(??_isupper+1)^0,w,c
 10407  005CB4  2209               	addwfc	(??_isupper+3)^0,f,c
 10408  005CB6  5009               	movf	(??_isupper+3)^0,w,c
 10409  005CB8  E10A               	bnz	u8560
 10410  005CBA  0E1A               	movlw	26
 10411  005CBC  5C08               	subwf	(??_isupper+2)^0,w,c
 10412  005CBE  A0D8               	btfss	status,0,c
 10413  005CC0  EF64  F02E         	goto	u8561
 10414  005CC4  EF67  F02E         	goto	u8560
 10415  005CC8                     u8561:
 10416  005CC8  0E01               	movlw	1
 10417  005CCA  EF68  F02E         	goto	u8570
 10418  005CCE                     u8560:
 10419  005CCE  0E00               	movlw	0
 10420  005CD0                     u8570:
 10421  005CD0  6E04               	movwf	?_isupper^0,c
 10422  005CD2  6A05               	clrf	(?_isupper+1)^0,c
 10423  005CD4  0012               	return		;funcret
 10424  005CD6                     __end_of_isupper:
 10425                           	opt callstack 0
 10426                           
 10427 ;; *************** function _strcpy *****************
 10428 ;; Defined at:
 10429 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  dest            2    3[COMRAM] PTR unsigned char 
 10432 ;;		 -> dbuf(80), 
 10433 ;;  src             2    5[COMRAM] PTR const unsigned char 
 10434 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10435 ;;		 -> dbuf(80), 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;  d               2   11[COMRAM] PTR unsigned char 
 10438 ;;		 -> dbuf(80), 
 10439 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10440 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10441 ;;		 -> dbuf(80), 
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  2    3[COMRAM] PTR unsigned char 
 10444 ;; Registers used:
 10445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10452 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10454 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10455 ;;Total ram usage:       10 bytes
 10456 ;; Hardware stack levels used:    1
 10457 ;; Hardware stack levels required when called:    4
 10458 ;; This function calls:
 10459 ;;		Nothing
 10460 ;; This function is called by:
 10461 ;;		_efgtoa
 10462 ;; This function uses a non-reentrant model
 10463 ;;
 10464                           
 10465                           	psect	text18
 10466  00585C                     __ptext18:
 10467                           	opt callstack 0
 10468  00585C                     _strcpy:
 10469                           	opt callstack 21
 10470  00585C  C006  F00A         	movff	strcpy@src,strcpy@s
 10471  005860  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
 10472  005864  C004  F00C         	movff	strcpy@dest,strcpy@d
 10473  005868  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
 10474  00586C                     l7426:
 10475  00586C  500A               	movf	strcpy@s^0,w,c
 10476  00586E  6E08               	movwf	??_strcpy^0,c
 10477  005870  500B               	movf	(strcpy@s+1)^0,w,c
 10478  005872  6E09               	movwf	(??_strcpy+1)^0,c
 10479  005874  4A0A               	infsnz	strcpy@s^0,f,c
 10480  005876  2A0B               	incf	(strcpy@s+1)^0,f,c
 10481  005878  C008  FFF6         	movff	??_strcpy,tblptrl
 10482  00587C  C009  FFF7         	movff	??_strcpy+1,tblptrh
 10483  005880  0E00               	movlw	low (__mediumconst shr (0+16))
 10484  005882  6EF8               	movwf	tblptru,c
 10485  005884  C00C  FFD9         	movff	strcpy@d,fsr2l
 10486  005888  C00D  FFDA         	movff	strcpy@d+1,fsr2h
 10487  00588C  4A0C               	infsnz	strcpy@d^0,f,c
 10488  00588E  2A0D               	incf	(strcpy@d+1)^0,f,c
 10489  005890  0E0E               	movlw	(high __ramtop+-1)
 10490  005892  64F7               	cpfsgt	tblptrh,c
 10491  005894  D003               	bra	u9117
 10492  005896  0008               	tblrd		*
 10493  005898  50F5               	movf	tablat,w,c
 10494  00589A  D005               	bra	u9110
 10495  00589C                     u9117:
 10496  00589C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10497  0058A0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10498  0058A4  50E7               	movf	indf1,w,c
 10499  0058A6                     u9110:
 10500  0058A6  6EDF               	movwf	indf2,c
 10501  0058A8  50DF               	movf	indf2,w,c
 10502  0058AA  A4D8               	btfss	status,2,c
 10503  0058AC  EF5A  F02C         	goto	u9121
 10504  0058B0  EF5C  F02C         	goto	u9120
 10505  0058B4                     u9121:
 10506  0058B4  EF36  F02C         	goto	l7426
 10507  0058B8                     u9120:
 10508  0058B8  0012               	return		;funcret
 10509  0058BA                     __end_of_strcpy:
 10510                           	opt callstack 0
 10511                           
 10512 ;; *************** function _floorf *****************
 10513 ;; Defined at:
 10514 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  x               4   13[BANK0 ] float 
 10517 ;; Auto vars:     Size  Location     Type
 10518 ;;  u               4   23[BANK0 ] struct .
 10519 ;;  m               4   17[BANK0 ] unsigned long 
 10520 ;;  e               2   21[BANK0 ] int 
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  4   13[BANK0 ] float 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10530 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10531 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10532 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10533 ;;      Totals:         6      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10534 ;;Total ram usage:       20 bytes
 10535 ;; Hardware stack levels used:    1
 10536 ;; Hardware stack levels required when called:    4
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_efgtoa
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text19
 10545  003AB8                     __ptext19:
 10546                           	opt callstack 0
 10547  003AB8                     _floorf:
 10548                           	opt callstack 21
 10549  003AB8  C100  F077         	movff	floorf@F524,floorf@u
 10550  003ABC  C101  F078         	movff	floorf@F524+1,floorf@u+1
 10551  003AC0  C102  F079         	movff	floorf@F524+2,floorf@u+2
 10552  003AC4  C103  F07A         	movff	floorf@F524+3,floorf@u+3
 10553  003AC8  C06D  F077         	movff	floorf@x,floorf@u
 10554  003ACC  C06E  F078         	movff	floorf@x+1,floorf@u+1
 10555  003AD0  C06F  F079         	movff	floorf@x+2,floorf@u+2
 10556  003AD4  C070  F07A         	movff	floorf@x+3,floorf@u+3
 10557  003AD8  0E81               	movlw	129
 10558  003ADA  6E4F               	movwf	??_floorf^0,c
 10559  003ADC  0EFF               	movlw	255
 10560  003ADE  6E50               	movwf	(??_floorf+1)^0,c
 10561  003AE0  C077  F051         	movff	floorf@u,??_floorf+2
 10562  003AE4  C078  F052         	movff	floorf@u+1,??_floorf+3
 10563  003AE8  C079  F053         	movff	floorf@u+2,??_floorf+4
 10564  003AEC  C07A  F054         	movff	floorf@u+3,??_floorf+5
 10565  003AF0  0E18               	movlw	24
 10566  003AF2  EF80  F01D         	goto	u9160
 10567  003AF6                     u9165:
 10568  003AF6  90D8               	bcf	status,0,c
 10569  003AF8  3254               	rrcf	(??_floorf+5)^0,f,c
 10570  003AFA  3253               	rrcf	(??_floorf+4)^0,f,c
 10571  003AFC  3252               	rrcf	(??_floorf+3)^0,f,c
 10572  003AFE  3251               	rrcf	(??_floorf+2)^0,f,c
 10573  003B00                     u9160:
 10574  003B00  2EE8               	decfsz	wreg,f,c
 10575  003B02  EF7B  F01D         	goto	u9165
 10576  003B06  5051               	movf	(??_floorf+2)^0,w,c
 10577  003B08  244F               	addwf	??_floorf^0,w,c
 10578  003B0A  0100               	movlb	0	; () banked
 10579  003B0C  6F75               	movwf	floorf@e& (0+255),b
 10580  003B0E  0E00               	movlw	0
 10581  003B10  2050               	addwfc	(??_floorf+1)^0,w,c
 10582  003B12  6F76               	movwf	(floorf@e+1)& (0+255),b
 10583  003B14  BF76               	btfsc	(floorf@e+1)& (0+255),7,b
 10584  003B16  EF96  F01D         	goto	u9171
 10585  003B1A  5176               	movf	(floorf@e+1)& (0+255),w,b
 10586  003B1C  E109               	bnz	u9170
 10587  003B1E  0E17               	movlw	23
 10588  003B20  5D75               	subwf	floorf@e& (0+255),w,b
 10589  003B22  A0D8               	btfss	status,0,c
 10590  003B24  EF96  F01D         	goto	u9171
 10591  003B28  EF98  F01D         	goto	u9170
 10592  003B2C                     u9171:
 10593  003B2C  EFA2  F01D         	goto	l7444
 10594  003B30                     u9170:
 10595  003B30                     l7442:
 10596                           
 10597                           ; BSR set to: 0
 10598  003B30  C06D  F06D         	movff	floorf@x,?_floorf
 10599  003B34  C06E  F06E         	movff	floorf@x+1,?_floorf+1
 10600  003B38  C06F  F06F         	movff	floorf@x+2,?_floorf+2
 10601  003B3C  C070  F070         	movff	floorf@x+3,?_floorf+3
 10602  003B40  EF66  F01E         	goto	l1531
 10603  003B44                     l7444:
 10604                           
 10605                           ; BSR set to: 0
 10606  003B44  BF76               	btfsc	(floorf@e+1)& (0+255),7,b
 10607  003B46  EFA7  F01D         	goto	u9181
 10608  003B4A  EFA9  F01D         	goto	u9180
 10609  003B4E                     u9181:
 10610  003B4E  EF1A  F01E         	goto	l7454
 10611  003B52                     u9180:
 10612  003B52                     
 10613                           ; BSR set to: 0
 10614  003B52  C075  F04F         	movff	floorf@e,??_floorf
 10615  003B56  0EFF               	movlw	255
 10616  003B58  6E50               	movwf	(??_floorf+1)^0,c
 10617  003B5A  0EFF               	movlw	255
 10618  003B5C  6E51               	movwf	(??_floorf+2)^0,c
 10619  003B5E  0E7F               	movlw	127
 10620  003B60  6E52               	movwf	(??_floorf+3)^0,c
 10621  003B62  0E00               	movlw	0
 10622  003B64  6E53               	movwf	(??_floorf+4)^0,c
 10623  003B66                     u9195:
 10624  003B66  664F               	tstfsz	??_floorf^0,c
 10625  003B68  EFB8  F01D         	goto	u9196
 10626  003B6C  EFC0  F01D         	goto	u9197
 10627  003B70                     u9196:
 10628  003B70  3453               	rlcf	(??_floorf+4)^0,w,c
 10629  003B72  3253               	rrcf	(??_floorf+4)^0,f,c
 10630  003B74  3252               	rrcf	(??_floorf+3)^0,f,c
 10631  003B76  3251               	rrcf	(??_floorf+2)^0,f,c
 10632  003B78  3250               	rrcf	(??_floorf+1)^0,f,c
 10633  003B7A  2E4F               	decfsz	??_floorf^0,f,c
 10634  003B7C  EFB3  F01D         	goto	u9195
 10635  003B80                     u9197:
 10636  003B80  C050  F071         	movff	??_floorf+1,floorf@m
 10637  003B84  C051  F072         	movff	??_floorf+2,floorf@m+1
 10638  003B88  C052  F073         	movff	??_floorf+3,floorf@m+2
 10639  003B8C  C053  F074         	movff	??_floorf+4,floorf@m+3
 10640  003B90  0100               	movlb	0	; () banked
 10641  003B92  5171               	movf	floorf@m& (0+255),w,b
 10642  003B94  1577               	andwf	floorf@u& (0+255),w,b
 10643  003B96  6E4F               	movwf	??_floorf^0,c
 10644  003B98  5172               	movf	(floorf@m+1)& (0+255),w,b
 10645  003B9A  1578               	andwf	(floorf@u+1)& (0+255),w,b
 10646  003B9C  6E50               	movwf	(??_floorf+1)^0,c
 10647  003B9E  5173               	movf	(floorf@m+2)& (0+255),w,b
 10648  003BA0  1579               	andwf	(floorf@u+2)& (0+255),w,b
 10649  003BA2  6E51               	movwf	(??_floorf+2)^0,c
 10650  003BA4  5174               	movf	(floorf@m+3)& (0+255),w,b
 10651  003BA6  157A               	andwf	(floorf@u+3)& (0+255),w,b
 10652  003BA8  6E52               	movwf	(??_floorf+3)^0,c
 10653  003BAA  504F               	movf	??_floorf^0,w,c
 10654  003BAC  1050               	iorwf	(??_floorf+1)^0,w,c
 10655  003BAE  1051               	iorwf	(??_floorf+2)^0,w,c
 10656  003BB0  1052               	iorwf	(??_floorf+3)^0,w,c
 10657  003BB2  A4D8               	btfss	status,2,c
 10658  003BB4  EFDE  F01D         	goto	u9201
 10659  003BB8  EFE0  F01D         	goto	u9200
 10660  003BBC                     u9201:
 10661  003BBC  EFE2  F01D         	goto	l7450
 10662  003BC0                     u9200:
 10663  003BC0  EF98  F01D         	goto	l7442
 10664  003BC4                     l7450:
 10665                           
 10666                           ; BSR set to: 0
 10667  003BC4  C077  F04F         	movff	floorf@u,??_floorf
 10668  003BC8  C078  F050         	movff	floorf@u+1,??_floorf+1
 10669  003BCC  C079  F051         	movff	floorf@u+2,??_floorf+2
 10670  003BD0  C07A  F052         	movff	floorf@u+3,??_floorf+3
 10671  003BD4  0E20               	movlw	32
 10672  003BD6  EFF2  F01D         	goto	u9210
 10673  003BDA                     u9215:
 10674  003BDA  90D8               	bcf	status,0,c
 10675  003BDC  3252               	rrcf	(??_floorf+3)^0,f,c
 10676  003BDE  3251               	rrcf	(??_floorf+2)^0,f,c
 10677  003BE0  3250               	rrcf	(??_floorf+1)^0,f,c
 10678  003BE2  324F               	rrcf	??_floorf^0,f,c
 10679  003BE4                     u9210:
 10680  003BE4  2EE8               	decfsz	wreg,f,c
 10681  003BE6  EFED  F01D         	goto	u9215
 10682  003BEA  504F               	movf	??_floorf^0,w,c
 10683  003BEC  1050               	iorwf	(??_floorf+1)^0,w,c
 10684  003BEE  1051               	iorwf	(??_floorf+2)^0,w,c
 10685  003BF0  1052               	iorwf	(??_floorf+3)^0,w,c
 10686  003BF2  B4D8               	btfsc	status,2,c
 10687  003BF4  EFFE  F01D         	goto	u9221
 10688  003BF8  EF00  F01E         	goto	u9220
 10689  003BFC                     u9221:
 10690  003BFC  EF08  F01E         	goto	l1534
 10691  003C00                     u9220:
 10692  003C00                     
 10693                           ; BSR set to: 0
 10694  003C00  5171               	movf	floorf@m& (0+255),w,b
 10695  003C02  2777               	addwf	floorf@u& (0+255),f,b
 10696  003C04  5172               	movf	(floorf@m+1)& (0+255),w,b
 10697  003C06  2378               	addwfc	(floorf@u+1)& (0+255),f,b
 10698  003C08  5173               	movf	(floorf@m+2)& (0+255),w,b
 10699  003C0A  2379               	addwfc	(floorf@u+2)& (0+255),f,b
 10700  003C0C  5174               	movf	(floorf@m+3)& (0+255),w,b
 10701  003C0E  237A               	addwfc	(floorf@u+3)& (0+255),f,b
 10702  003C10                     l1534:
 10703                           
 10704                           ; BSR set to: 0
 10705  003C10  1D71               	comf	floorf@m& (0+255),w,b
 10706  003C12  6E4F               	movwf	??_floorf^0,c
 10707  003C14  1D72               	comf	(floorf@m+1)& (0+255),w,b
 10708  003C16  6E50               	movwf	(??_floorf+1)^0,c
 10709  003C18  1D73               	comf	(floorf@m+2)& (0+255),w,b
 10710  003C1A  6E51               	movwf	(??_floorf+2)^0,c
 10711  003C1C  1D74               	comf	(floorf@m+3)& (0+255),w,b
 10712  003C1E  6E52               	movwf	(??_floorf+3)^0,c
 10713  003C20  504F               	movf	??_floorf^0,w,c
 10714  003C22  1777               	andwf	floorf@u& (0+255),f,b
 10715  003C24  5050               	movf	(??_floorf+1)^0,w,c
 10716  003C26  1778               	andwf	(floorf@u+1)& (0+255),f,b
 10717  003C28  5051               	movf	(??_floorf+2)^0,w,c
 10718  003C2A  1779               	andwf	(floorf@u+2)& (0+255),f,b
 10719  003C2C  5052               	movf	(??_floorf+3)^0,w,c
 10720  003C2E  177A               	andwf	(floorf@u+3)& (0+255),f,b
 10721  003C30  EF5E  F01E         	goto	l7462
 10722  003C34                     l7454:
 10723                           
 10724                           ; BSR set to: 0
 10725  003C34  C077  F04F         	movff	floorf@u,??_floorf
 10726  003C38  C078  F050         	movff	floorf@u+1,??_floorf+1
 10727  003C3C  C079  F051         	movff	floorf@u+2,??_floorf+2
 10728  003C40  C07A  F052         	movff	floorf@u+3,??_floorf+3
 10729  003C44  0E20               	movlw	32
 10730  003C46  EF2A  F01E         	goto	u9230
 10731  003C4A                     u9235:
 10732  003C4A  90D8               	bcf	status,0,c
 10733  003C4C  3252               	rrcf	(??_floorf+3)^0,f,c
 10734  003C4E  3251               	rrcf	(??_floorf+2)^0,f,c
 10735  003C50  3250               	rrcf	(??_floorf+1)^0,f,c
 10736  003C52  324F               	rrcf	??_floorf^0,f,c
 10737  003C54                     u9230:
 10738  003C54  2EE8               	decfsz	wreg,f,c
 10739  003C56  EF25  F01E         	goto	u9235
 10740  003C5A  504F               	movf	??_floorf^0,w,c
 10741  003C5C  1050               	iorwf	(??_floorf+1)^0,w,c
 10742  003C5E  1051               	iorwf	(??_floorf+2)^0,w,c
 10743  003C60  1052               	iorwf	(??_floorf+3)^0,w,c
 10744  003C62  A4D8               	btfss	status,2,c
 10745  003C64  EF36  F01E         	goto	u9241
 10746  003C68  EF38  F01E         	goto	u9240
 10747  003C6C                     u9241:
 10748  003C6C  EF42  F01E         	goto	l7458
 10749  003C70                     u9240:
 10750  003C70                     
 10751                           ; BSR set to: 0
 10752  003C70  0E00               	movlw	0
 10753  003C72  6F77               	movwf	floorf@u& (0+255),b
 10754  003C74  0E00               	movlw	0
 10755  003C76  6F78               	movwf	(floorf@u+1)& (0+255),b
 10756  003C78  0E00               	movlw	0
 10757  003C7A  6F79               	movwf	(floorf@u+2)& (0+255),b
 10758  003C7C  0E00               	movlw	0
 10759  003C7E  6F7A               	movwf	(floorf@u+3)& (0+255),b
 10760  003C80  EF5E  F01E         	goto	l7462
 10761  003C84                     l7458:
 10762                           
 10763                           ; BSR set to: 0
 10764  003C84  90D8               	bcf	status,0,c
 10765  003C86  3577               	rlcf	floorf@u& (0+255),w,b
 10766  003C88  6E4F               	movwf	??_floorf^0,c
 10767  003C8A  3578               	rlcf	(floorf@u+1)& (0+255),w,b
 10768  003C8C  6E50               	movwf	(??_floorf+1)^0,c
 10769  003C8E  3579               	rlcf	(floorf@u+2)& (0+255),w,b
 10770  003C90  6E51               	movwf	(??_floorf+2)^0,c
 10771  003C92  357A               	rlcf	(floorf@u+3)& (0+255),w,b
 10772  003C94  6E52               	movwf	(??_floorf+3)^0,c
 10773  003C96  504F               	movf	??_floorf^0,w,c
 10774  003C98  1050               	iorwf	(??_floorf+1)^0,w,c
 10775  003C9A  1051               	iorwf	(??_floorf+2)^0,w,c
 10776  003C9C  1052               	iorwf	(??_floorf+3)^0,w,c
 10777  003C9E  B4D8               	btfsc	status,2,c
 10778  003CA0  EF54  F01E         	goto	u9251
 10779  003CA4  EF56  F01E         	goto	u9250
 10780  003CA8                     u9251:
 10781  003CA8  EF5E  F01E         	goto	l7462
 10782  003CAC                     u9250:
 10783  003CAC                     
 10784                           ; BSR set to: 0
 10785  003CAC  0E00               	movlw	0
 10786  003CAE  6F77               	movwf	floorf@u& (0+255),b
 10787  003CB0  0E00               	movlw	0
 10788  003CB2  6F78               	movwf	(floorf@u+1)& (0+255),b
 10789  003CB4  0E80               	movlw	128
 10790  003CB6  6F79               	movwf	(floorf@u+2)& (0+255),b
 10791  003CB8  0EBF               	movlw	191
 10792  003CBA  6F7A               	movwf	(floorf@u+3)& (0+255),b
 10793  003CBC                     l7462:
 10794                           
 10795                           ; BSR set to: 0
 10796  003CBC  C077  F06D         	movff	floorf@u,?_floorf
 10797  003CC0  C078  F06E         	movff	floorf@u+1,?_floorf+1
 10798  003CC4  C079  F06F         	movff	floorf@u+2,?_floorf+2
 10799  003CC8  C07A  F070         	movff	floorf@u+3,?_floorf+3
 10800  003CCC                     l1531:
 10801                           
 10802                           ; BSR set to: 0
 10803  003CCC  0012               	return		;funcret
 10804  003CCE                     __end_of_floorf:
 10805                           	opt callstack 0
 10806                           
 10807 ;; *************** function ___fpclassifyf *****************
 10808 ;; Defined at:
 10809 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;  x               4    3[COMRAM] float 
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;  u               4   13[COMRAM] struct .
 10814 ;;  e               2   11[COMRAM] int 
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  2    3[COMRAM] int 
 10817 ;; Registers used:
 10818 ;;		wreg, status,2, status,0
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10825 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10827 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10828 ;;Total ram usage:       14 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:    4
 10831 ;; This function calls:
 10832 ;;		Nothing
 10833 ;; This function is called by:
 10834 ;;		_efgtoa
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text20
 10839  004F94                     __ptext20:
 10840                           	opt callstack 0
 10841  004F94                     ___fpclassifyf:
 10842                           	opt callstack 21
 10843  004F94  C104  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10844  004F98  C105  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10845  004F9C  C106  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10846  004FA0  C107  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10847  004FA4  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
 10848  004FA8  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10849  004FAC  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10850  004FB0  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10851  004FB4  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10852  004FB8  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10853  004FBC  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10854  004FC0  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10855  004FC4  0E18               	movlw	24
 10856  004FC6  EFEA  F027         	goto	u9040
 10857  004FCA                     u9045:
 10858  004FCA  90D8               	bcf	status,0,c
 10859  004FCC  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
 10860  004FCE  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
 10861  004FD0  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
 10862  004FD2  3208               	rrcf	??___fpclassifyf^0,f,c
 10863  004FD4                     u9040:
 10864  004FD4  2EE8               	decfsz	wreg,f,c
 10865  004FD6  EFE5  F027         	goto	u9045
 10866  004FDA  5008               	movf	??___fpclassifyf^0,w,c
 10867  004FDC  6E0C               	movwf	___fpclassifyf@e^0,c
 10868  004FDE  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
 10869  004FE0  500C               	movf	___fpclassifyf@e^0,w,c
 10870  004FE2  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10871  004FE4  A4D8               	btfss	status,2,c
 10872  004FE6  EFF7  F027         	goto	u9051
 10873  004FEA  EFF9  F027         	goto	u9050
 10874  004FEE                     u9051:
 10875  004FEE  EF19  F028         	goto	l7414
 10876  004FF2                     u9050:
 10877  004FF2  90D8               	bcf	status,0,c
 10878  004FF4  340E               	rlcf	___fpclassifyf@u^0,w,c
 10879  004FF6  6E08               	movwf	??___fpclassifyf^0,c
 10880  004FF8  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10881  004FFA  6E09               	movwf	(??___fpclassifyf+1)^0,c
 10882  004FFC  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10883  004FFE  6E0A               	movwf	(??___fpclassifyf+2)^0,c
 10884  005000  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10885  005002  6E0B               	movwf	(??___fpclassifyf+3)^0,c
 10886  005004  5008               	movf	??___fpclassifyf^0,w,c
 10887  005006  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10888  005008  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10889  00500A  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10890  00500C  A4D8               	btfss	status,2,c
 10891  00500E  EF0B  F028         	goto	u9061
 10892  005012  EF0D  F028         	goto	u9060
 10893  005016                     u9061:
 10894  005016  EF13  F028         	goto	l7410
 10895  00501A                     u9060:
 10896  00501A  0E00               	movlw	0
 10897  00501C  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10898  00501E  0E02               	movlw	2
 10899  005020  6E04               	movwf	?___fpclassifyf^0,c
 10900  005022  EF48  F028         	goto	l1486
 10901  005026                     l7410:
 10902  005026  0E00               	movlw	0
 10903  005028  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10904  00502A  0E03               	movlw	3
 10905  00502C  6E04               	movwf	?___fpclassifyf^0,c
 10906  00502E  EF48  F028         	goto	l1486
 10907  005032                     l7414:
 10908  005032  280C               	incf	___fpclassifyf@e^0,w,c
 10909  005034  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10910  005036  A4D8               	btfss	status,2,c
 10911  005038  EF20  F028         	goto	u9071
 10912  00503C  EF22  F028         	goto	u9070
 10913  005040                     u9071:
 10914  005040  EF44  F028         	goto	l7420
 10915  005044                     u9070:
 10916  005044  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
 10917  005048  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10918  00504C  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10919  005050  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10920  005054  0E09               	movlw	9
 10921  005056                     u9085:
 10922  005056  90D8               	bcf	status,0,c
 10923  005058  3608               	rlcf	??___fpclassifyf^0,f,c
 10924  00505A  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
 10925  00505C  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
 10926  00505E  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
 10927  005060  2EE8               	decfsz	wreg,f,c
 10928  005062  EF2B  F028         	goto	u9085
 10929  005066  5008               	movf	??___fpclassifyf^0,w,c
 10930  005068  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
 10931  00506A  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
 10932  00506C  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
 10933  00506E  B4D8               	btfsc	status,2,c
 10934  005070  EF3C  F028         	goto	u9091
 10935  005074  EF3F  F028         	goto	u9090
 10936  005078                     u9091:
 10937  005078  0E01               	movlw	1
 10938  00507A  EF40  F028         	goto	u9100
 10939  00507E                     u9090:
 10940  00507E  0E00               	movlw	0
 10941  005080                     u9100:
 10942  005080  6E04               	movwf	?___fpclassifyf^0,c
 10943  005082  6A05               	clrf	(?___fpclassifyf+1)^0,c
 10944  005084  EF48  F028         	goto	l1486
 10945  005088                     l7420:
 10946  005088  0E00               	movlw	0
 10947  00508A  6E05               	movwf	(?___fpclassifyf+1)^0,c
 10948  00508C  0E04               	movlw	4
 10949  00508E  6E04               	movwf	?___fpclassifyf^0,c
 10950  005090                     l1486:
 10951  005090  0012               	return		;funcret
 10952  005092                     __end_of___fpclassifyf:
 10953                           	opt callstack 0
 10954                           
 10955 ;; *************** function ___fltol *****************
 10956 ;; Defined at:
 10957 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;  f1              4    3[COMRAM] int 
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;  exp1            1   12[COMRAM] unsigned char 
 10962 ;;  sign1           1   11[COMRAM] unsigned char 
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  4    3[COMRAM] long 
 10965 ;; Registers used:
 10966 ;;		wreg, status,2, status,0
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10975 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10976 ;;Total ram usage:       10 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; Hardware stack levels required when called:    4
 10979 ;; This function calls:
 10980 ;;		Nothing
 10981 ;; This function is called by:
 10982 ;;		_efgtoa
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           	psect	text21
 10987  004D8A                     __ptext21:
 10988                           	opt callstack 0
 10989  004D8A                     ___fltol:
 10990                           	opt callstack 21
 10991  004D8A  3406               	rlcf	(___fltol@f1+2)^0,w,c
 10992  004D8C  3407               	rlcf	(___fltol@f1+3)^0,w,c
 10993  004D8E  6E0D               	movwf	___fltol@exp1^0,c
 10994  004D90  500D               	movf	___fltol@exp1^0,w,c
 10995  004D92  A4D8               	btfss	status,2,c
 10996  004D94  EFCE  F026         	goto	u10091
 10997  004D98  EFD0  F026         	goto	u10090
 10998  004D9C                     u10091:
 10999  004D9C  EFDA  F026         	goto	l7976
 11000  004DA0                     u10090:
 11001  004DA0                     l7972:
 11002  004DA0  0E00               	movlw	0
 11003  004DA2  6E04               	movwf	?___fltol^0,c
 11004  004DA4  0E00               	movlw	0
 11005  004DA6  6E05               	movwf	(?___fltol+1)^0,c
 11006  004DA8  0E00               	movlw	0
 11007  004DAA  6E06               	movwf	(?___fltol+2)^0,c
 11008  004DAC  0E00               	movlw	0
 11009  004DAE  6E07               	movwf	(?___fltol+3)^0,c
 11010  004DB0  EF47  F027         	goto	l1102
 11011  004DB4                     l7976:
 11012  004DB4  C004  F008         	movff	___fltol@f1,??___fltol
 11013  004DB8  C005  F009         	movff	___fltol@f1+1,??___fltol+1
 11014  004DBC  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
 11015  004DC0  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
 11016  004DC4  0E20               	movlw	32
 11017  004DC6  EFEA  F026         	goto	u10100
 11018  004DCA                     u10105:
 11019  004DCA  90D8               	bcf	status,0,c
 11020  004DCC  320B               	rrcf	(??___fltol+3)^0,f,c
 11021  004DCE  320A               	rrcf	(??___fltol+2)^0,f,c
 11022  004DD0  3209               	rrcf	(??___fltol+1)^0,f,c
 11023  004DD2  3208               	rrcf	??___fltol^0,f,c
 11024  004DD4                     u10100:
 11025  004DD4  2EE8               	decfsz	wreg,f,c
 11026  004DD6  EFE5  F026         	goto	u10105
 11027  004DDA  5008               	movf	??___fltol^0,w,c
 11028  004DDC  6E0C               	movwf	___fltol@sign1^0,c
 11029  004DDE  8E06               	bsf	(___fltol@f1+2)^0,7,c
 11030  004DE0  0EFF               	movlw	255
 11031  004DE2  1604               	andwf	___fltol@f1^0,f,c
 11032  004DE4  0EFF               	movlw	255
 11033  004DE6  1605               	andwf	(___fltol@f1+1)^0,f,c
 11034  004DE8  0EFF               	movlw	255
 11035  004DEA  1606               	andwf	(___fltol@f1+2)^0,f,c
 11036  004DEC  0E00               	movlw	0
 11037  004DEE  1607               	andwf	(___fltol@f1+3)^0,f,c
 11038  004DF0  0E96               	movlw	150
 11039  004DF2  5E0D               	subwf	___fltol@exp1^0,f,c
 11040  004DF4  BE0D               	btfsc	___fltol@exp1^0,7,c
 11041  004DF6  EF01  F027         	goto	u10110
 11042  004DFA  EFFF  F026         	goto	u10111
 11043  004DFE                     u10111:
 11044  004DFE  EF17  F027         	goto	l7996
 11045  004E02                     u10110:
 11046  004E02  500D               	movf	___fltol@exp1^0,w,c
 11047  004E04  0A80               	xorlw	128
 11048  004E06  0F97               	addlw	151
 11049  004E08  B0D8               	btfsc	status,0,c
 11050  004E0A  EF09  F027         	goto	u10121
 11051  004E0E  EF0B  F027         	goto	u10120
 11052  004E12                     u10121:
 11053  004E12  EF0D  F027         	goto	l7992
 11054  004E16                     u10120:
 11055  004E16  EFD0  F026         	goto	l7972
 11056  004E1A                     l7992:
 11057  004E1A  90D8               	bcf	status,0,c
 11058  004E1C  3207               	rrcf	(___fltol@f1+3)^0,f,c
 11059  004E1E  3206               	rrcf	(___fltol@f1+2)^0,f,c
 11060  004E20  3205               	rrcf	(___fltol@f1+1)^0,f,c
 11061  004E22  3204               	rrcf	___fltol@f1^0,f,c
 11062  004E24  3E0D               	incfsz	___fltol@exp1^0,f,c
 11063  004E26  EF0D  F027         	goto	l7992
 11064  004E2A  EF2F  F027         	goto	l8006
 11065  004E2E                     l7996:
 11066  004E2E  0E1F               	movlw	31
 11067  004E30  640D               	cpfsgt	___fltol@exp1^0,c
 11068  004E32  EF1D  F027         	goto	u10131
 11069  004E36  EF1F  F027         	goto	u10130
 11070  004E3A                     u10131:
 11071  004E3A  EF27  F027         	goto	l8004
 11072  004E3E                     u10130:
 11073  004E3E  EFD0  F026         	goto	l7972
 11074  004E42                     l8002:
 11075  004E42  90D8               	bcf	status,0,c
 11076  004E44  3604               	rlcf	___fltol@f1^0,f,c
 11077  004E46  3605               	rlcf	(___fltol@f1+1)^0,f,c
 11078  004E48  3606               	rlcf	(___fltol@f1+2)^0,f,c
 11079  004E4A  3607               	rlcf	(___fltol@f1+3)^0,f,c
 11080  004E4C  060D               	decf	___fltol@exp1^0,f,c
 11081  004E4E                     l8004:
 11082  004E4E  500D               	movf	___fltol@exp1^0,w,c
 11083  004E50  A4D8               	btfss	status,2,c
 11084  004E52  EF2D  F027         	goto	u10141
 11085  004E56  EF2F  F027         	goto	u10140
 11086  004E5A                     u10141:
 11087  004E5A  EF21  F027         	goto	l8002
 11088  004E5E                     u10140:
 11089  004E5E                     l8006:
 11090  004E5E  500C               	movf	___fltol@sign1^0,w,c
 11091  004E60  B4D8               	btfsc	status,2,c
 11092  004E62  EF35  F027         	goto	u10151
 11093  004E66  EF37  F027         	goto	u10150
 11094  004E6A                     u10151:
 11095  004E6A  EF3F  F027         	goto	l8010
 11096  004E6E                     u10150:
 11097  004E6E  1E07               	comf	(___fltol@f1+3)^0,f,c
 11098  004E70  1E06               	comf	(___fltol@f1+2)^0,f,c
 11099  004E72  1E05               	comf	(___fltol@f1+1)^0,f,c
 11100  004E74  6C04               	negf	___fltol@f1^0,c
 11101  004E76  0E00               	movlw	0
 11102  004E78  2205               	addwfc	(___fltol@f1+1)^0,f,c
 11103  004E7A  2206               	addwfc	(___fltol@f1+2)^0,f,c
 11104  004E7C  2207               	addwfc	(___fltol@f1+3)^0,f,c
 11105  004E7E                     l8010:
 11106  004E7E  C004  F004         	movff	___fltol@f1,?___fltol
 11107  004E82  C005  F005         	movff	___fltol@f1+1,?___fltol+1
 11108  004E86  C006  F006         	movff	___fltol@f1+2,?___fltol+2
 11109  004E8A  C007  F007         	movff	___fltol@f1+3,?___fltol+3
 11110  004E8E                     l1102:
 11111  004E8E  0012               	return		;funcret
 11112  004E90                     __end_of___fltol:
 11113                           	opt callstack 0
 11114                           
 11115 ;; *************** function ___flsub *****************
 11116 ;; Defined at:
 11117 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  b               4   58[COMRAM] long 
 11120 ;;  a               4   62[COMRAM] long 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  4   58[COMRAM] long 
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, status,0, cstack
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;Total ram usage:        8 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:    5
 11139 ;; This function calls:
 11140 ;;		___fladd
 11141 ;; This function is called by:
 11142 ;;		_main
 11143 ;;		_efgtoa
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text22
 11148  005A9E                     __ptext22:
 11149                           	opt callstack 0
 11150  005A9E                     ___flsub:
 11151                           	opt callstack 20
 11152  005A9E  0E00               	movlw	0
 11153  005AA0  1A3F               	xorwf	___flsub@a^0,f,c
 11154  005AA2  0E00               	movlw	0
 11155  005AA4  1A40               	xorwf	(___flsub@a+1)^0,f,c
 11156  005AA6  0E00               	movlw	0
 11157  005AA8  1A41               	xorwf	(___flsub@a+2)^0,f,c
 11158  005AAA  0E80               	movlw	128
 11159  005AAC  1A42               	xorwf	(___flsub@a+3)^0,f,c
 11160  005AAE  C03B  F02B         	movff	___flsub@b,___fladd@b
 11161  005AB2  C03C  F02C         	movff	___flsub@b+1,___fladd@b+1
 11162  005AB6  C03D  F02D         	movff	___flsub@b+2,___fladd@b+2
 11163  005ABA  C03E  F02E         	movff	___flsub@b+3,___fladd@b+3
 11164  005ABE  C03F  F02F         	movff	___flsub@a,___fladd@a
 11165  005AC2  C040  F030         	movff	___flsub@a+1,___fladd@a+1
 11166  005AC6  C041  F031         	movff	___flsub@a+2,___fladd@a+2
 11167  005ACA  C042  F032         	movff	___flsub@a+3,___fladd@a+3
 11168  005ACE  EC71  F010         	call	___fladd	;wreg free
 11169  005AD2  C02B  F03B         	movff	?___fladd,?___flsub
 11170  005AD6  C02C  F03C         	movff	?___fladd+1,?___flsub+1
 11171  005ADA  C02D  F03D         	movff	?___fladd+2,?___flsub+2
 11172  005ADE  C02E  F03E         	movff	?___fladd+3,?___flsub+3
 11173  005AE2  0012               	return		;funcret
 11174  005AE4                     __end_of___flsub:
 11175                           	opt callstack 0
 11176                           
 11177 ;; *************** function ___fladd *****************
 11178 ;; Defined at:
 11179 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  b               4   42[COMRAM] long 
 11182 ;;  a               4   46[COMRAM] long 
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;  grs             1   57[COMRAM] unsigned char 
 11185 ;;  bexp            1   56[COMRAM] unsigned char 
 11186 ;;  aexp            1   55[COMRAM] unsigned char 
 11187 ;;  signs           1   54[COMRAM] unsigned char 
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  4   42[COMRAM] unsigned char 
 11190 ;; Registers used:
 11191 ;;		wreg, status,2, status,0
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11197 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11201 ;;Total ram usage:       16 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    4
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_main
 11208 ;;		_efgtoa
 11209 ;;		___flsub
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text23
 11214  0020E2                     __ptext23:
 11215                           	opt callstack 0
 11216  0020E2                     ___fladd:
 11217                           	opt callstack 20
 11218  0020E2  502E               	movf	(___fladd@b+3)^0,w,c
 11219  0020E4  0B80               	andlw	128
 11220  0020E6  6E37               	movwf	___fladd@signs^0,c
 11221  0020E8  502E               	movf	(___fladd@b+3)^0,w,c
 11222  0020EA  242E               	addwf	(___fladd@b+3)^0,w,c
 11223  0020EC  6E39               	movwf	___fladd@bexp^0,c
 11224  0020EE  AE2D               	btfss	(___fladd@b+2)^0,7,c
 11225  0020F0  EF7C  F010         	goto	u8581
 11226  0020F4  EF7E  F010         	goto	u8580
 11227  0020F8                     u8581:
 11228  0020F8  EF7F  F010         	goto	l7176
 11229  0020FC                     u8580:
 11230  0020FC  8039               	bsf	___fladd@bexp^0,0,c
 11231  0020FE                     l7176:
 11232  0020FE  5039               	movf	___fladd@bexp^0,w,c
 11233  002100  B4D8               	btfsc	status,2,c
 11234  002102  EF85  F010         	goto	u8591
 11235  002106  EF87  F010         	goto	u8590
 11236  00210A                     u8591:
 11237  00210A  EF9C  F010         	goto	l7186
 11238  00210E                     u8590:
 11239  00210E  2839               	incf	___fladd@bexp^0,w,c
 11240  002110  A4D8               	btfss	status,2,c
 11241  002112  EF8D  F010         	goto	u8601
 11242  002116  EF8F  F010         	goto	u8600
 11243  00211A                     u8601:
 11244  00211A  EF97  F010         	goto	l7182
 11245  00211E                     u8600:
 11246  00211E  0E00               	movlw	0
 11247  002120  6E2B               	movwf	___fladd@b^0,c
 11248  002122  0E00               	movlw	0
 11249  002124  6E2C               	movwf	(___fladd@b+1)^0,c
 11250  002126  0E00               	movlw	0
 11251  002128  6E2D               	movwf	(___fladd@b+2)^0,c
 11252  00212A  0E00               	movlw	0
 11253  00212C  6E2E               	movwf	(___fladd@b+3)^0,c
 11254  00212E                     l7182:
 11255  00212E  8E2D               	bsf	(___fladd@b+2)^0,7,c
 11256  002130  0E00               	movlw	0
 11257  002132  6E2E               	movwf	(___fladd@b+3)^0,c
 11258  002134  EFA4  F010         	goto	l7188
 11259  002138                     l7186:
 11260  002138  0E00               	movlw	0
 11261  00213A  6E2B               	movwf	___fladd@b^0,c
 11262  00213C  0E00               	movlw	0
 11263  00213E  6E2C               	movwf	(___fladd@b+1)^0,c
 11264  002140  0E00               	movlw	0
 11265  002142  6E2D               	movwf	(___fladd@b+2)^0,c
 11266  002144  0E00               	movlw	0
 11267  002146  6E2E               	movwf	(___fladd@b+3)^0,c
 11268  002148                     l7188:
 11269  002148  5032               	movf	(___fladd@a+3)^0,w,c
 11270  00214A  0B80               	andlw	128
 11271  00214C  6E38               	movwf	___fladd@aexp^0,c
 11272  00214E  5037               	movf	___fladd@signs^0,w,c
 11273  002150  1838               	xorwf	___fladd@aexp^0,w,c
 11274  002152  B4D8               	btfsc	status,2,c
 11275  002154  EFAE  F010         	goto	u8611
 11276  002158  EFB0  F010         	goto	u8610
 11277  00215C                     u8611:
 11278  00215C  EFB1  F010         	goto	l7194
 11279  002160                     u8610:
 11280  002160  8C37               	bsf	___fladd@signs^0,6,c
 11281  002162                     l7194:
 11282  002162  5032               	movf	(___fladd@a+3)^0,w,c
 11283  002164  2432               	addwf	(___fladd@a+3)^0,w,c
 11284  002166  6E38               	movwf	___fladd@aexp^0,c
 11285  002168  AE31               	btfss	(___fladd@a+2)^0,7,c
 11286  00216A  EFB9  F010         	goto	u8621
 11287  00216E  EFBB  F010         	goto	u8620
 11288  002172                     u8621:
 11289  002172  EFBC  F010         	goto	l7200
 11290  002176                     u8620:
 11291  002176  8038               	bsf	___fladd@aexp^0,0,c
 11292  002178                     l7200:
 11293  002178  5038               	movf	___fladd@aexp^0,w,c
 11294  00217A  B4D8               	btfsc	status,2,c
 11295  00217C  EFC2  F010         	goto	u8631
 11296  002180  EFC4  F010         	goto	u8630
 11297  002184                     u8631:
 11298  002184  EFD9  F010         	goto	l7210
 11299  002188                     u8630:
 11300  002188  2838               	incf	___fladd@aexp^0,w,c
 11301  00218A  A4D8               	btfss	status,2,c
 11302  00218C  EFCA  F010         	goto	u8641
 11303  002190  EFCC  F010         	goto	u8640
 11304  002194                     u8641:
 11305  002194  EFD4  F010         	goto	l7206
 11306  002198                     u8640:
 11307  002198  0E00               	movlw	0
 11308  00219A  6E2F               	movwf	___fladd@a^0,c
 11309  00219C  0E00               	movlw	0
 11310  00219E  6E30               	movwf	(___fladd@a+1)^0,c
 11311  0021A0  0E00               	movlw	0
 11312  0021A2  6E31               	movwf	(___fladd@a+2)^0,c
 11313  0021A4  0E00               	movlw	0
 11314  0021A6  6E32               	movwf	(___fladd@a+3)^0,c
 11315  0021A8                     l7206:
 11316  0021A8  8E31               	bsf	(___fladd@a+2)^0,7,c
 11317  0021AA  0E00               	movlw	0
 11318  0021AC  6E32               	movwf	(___fladd@a+3)^0,c
 11319  0021AE  EFE1  F010         	goto	l7212
 11320  0021B2                     l7210:
 11321  0021B2  0E00               	movlw	0
 11322  0021B4  6E2F               	movwf	___fladd@a^0,c
 11323  0021B6  0E00               	movlw	0
 11324  0021B8  6E30               	movwf	(___fladd@a+1)^0,c
 11325  0021BA  0E00               	movlw	0
 11326  0021BC  6E31               	movwf	(___fladd@a+2)^0,c
 11327  0021BE  0E00               	movlw	0
 11328  0021C0  6E32               	movwf	(___fladd@a+3)^0,c
 11329  0021C2                     l7212:
 11330  0021C2  5039               	movf	___fladd@bexp^0,w,c
 11331  0021C4  5C38               	subwf	___fladd@aexp^0,w,c
 11332  0021C6  B0D8               	btfsc	status,0,c
 11333  0021C8  EFE8  F010         	goto	u8651
 11334  0021CC  EFEA  F010         	goto	u8650
 11335  0021D0                     u8651:
 11336  0021D0  EF11  F011         	goto	l7248
 11337  0021D4                     u8650:
 11338  0021D4  AC37               	btfss	___fladd@signs^0,6,c
 11339  0021D6  EFEF  F010         	goto	u8661
 11340  0021DA  EFF1  F010         	goto	u8660
 11341  0021DE                     u8661:
 11342  0021DE  EFF3  F010         	goto	l7218
 11343  0021E2                     u8660:
 11344  0021E2  0E80               	movlw	128
 11345  0021E4  1A37               	xorwf	___fladd@signs^0,f,c
 11346  0021E6                     l7218:
 11347  0021E6  C039  F03A         	movff	___fladd@bexp,___fladd@grs
 11348  0021EA  C038  F039         	movff	___fladd@aexp,___fladd@bexp
 11349  0021EE  C03A  F038         	movff	___fladd@grs,___fladd@aexp
 11350  0021F2  C02B  F03A         	movff	___fladd@b,___fladd@grs
 11351  0021F6  C02F  F02B         	movff	___fladd@a,___fladd@b
 11352  0021FA  C03A  F02F         	movff	___fladd@grs,___fladd@a
 11353  0021FE  C02C  F03A         	movff	___fladd@b+1,___fladd@grs
 11354  002202  C030  F02C         	movff	___fladd@a+1,___fladd@b+1
 11355  002206  C03A  F030         	movff	___fladd@grs,___fladd@a+1
 11356  00220A  C02D  F03A         	movff	___fladd@b+2,___fladd@grs
 11357  00220E  C031  F02D         	movff	___fladd@a+2,___fladd@b+2
 11358  002212  C03A  F031         	movff	___fladd@grs,___fladd@a+2
 11359  002216  C02E  F03A         	movff	___fladd@b+3,___fladd@grs
 11360  00221A  C032  F02E         	movff	___fladd@a+3,___fladd@b+3
 11361  00221E  C03A  F032         	movff	___fladd@grs,___fladd@a+3
 11362  002222                     l7248:
 11363  002222  0E00               	movlw	0
 11364  002224  6E3A               	movwf	___fladd@grs^0,c
 11365  002226  5039               	movf	___fladd@bexp^0,w,c
 11366  002228  C038  F033         	movff	___fladd@aexp,??___fladd
 11367  00222C  6A34               	clrf	(??___fladd+1)^0,c
 11368  00222E  5E33               	subwf	??___fladd^0,f,c
 11369  002230  0E00               	movlw	0
 11370  002232  5A34               	subwfb	(??___fladd+1)^0,f,c
 11371  002234  BE34               	btfsc	(??___fladd+1)^0,7,c
 11372  002236  EF26  F011         	goto	u8671
 11373  00223A  5034               	movf	(??___fladd+1)^0,w,c
 11374  00223C  E109               	bnz	u8670
 11375  00223E  0E1A               	movlw	26
 11376  002240  5C33               	subwf	??___fladd^0,w,c
 11377  002242  A0D8               	btfss	status,0,c
 11378  002244  EF26  F011         	goto	u8671
 11379  002248  EF28  F011         	goto	u8670
 11380  00224C                     u8671:
 11381  00224C  EF5F  F011         	goto	l1334
 11382  002250                     u8670:
 11383  002250  502B               	movf	___fladd@b^0,w,c
 11384  002252  102C               	iorwf	(___fladd@b+1)^0,w,c
 11385  002254  102D               	iorwf	(___fladd@b+2)^0,w,c
 11386  002256  102E               	iorwf	(___fladd@b+3)^0,w,c
 11387  002258  A4D8               	btfss	status,2,c
 11388  00225A  EF31  F011         	goto	u8681
 11389  00225E  EF34  F011         	goto	u8680
 11390  002262                     u8681:
 11391  002262  0E01               	movlw	1
 11392  002264  EF35  F011         	goto	u8690
 11393  002268                     u8680:
 11394  002268  0E00               	movlw	0
 11395  00226A                     u8690:
 11396  00226A  6E3A               	movwf	___fladd@grs^0,c
 11397  00226C  0E00               	movlw	0
 11398  00226E  6E2B               	movwf	___fladd@b^0,c
 11399  002270  0E00               	movlw	0
 11400  002272  6E2C               	movwf	(___fladd@b+1)^0,c
 11401  002274  0E00               	movlw	0
 11402  002276  6E2D               	movwf	(___fladd@b+2)^0,c
 11403  002278  0E00               	movlw	0
 11404  00227A  6E2E               	movwf	(___fladd@b+3)^0,c
 11405  00227C  C038  F039         	movff	___fladd@aexp,___fladd@bexp
 11406  002280  EF68  F011         	goto	l1333
 11407  002284                     l1335:
 11408  002284  A03A               	btfss	___fladd@grs^0,0,c
 11409  002286  EF47  F011         	goto	u8701
 11410  00228A  EF49  F011         	goto	u8700
 11411  00228E                     u8701:
 11412  00228E  EF4F  F011         	goto	l7260
 11413  002292                     u8700:
 11414  002292  90D8               	bcf	status,0,c
 11415  002294  303A               	rrcf	___fladd@grs^0,w,c
 11416  002296  0901               	iorlw	1
 11417  002298  6E3A               	movwf	___fladd@grs^0,c
 11418  00229A  EF51  F011         	goto	l7262
 11419  00229E                     l7260:
 11420  00229E  90D8               	bcf	status,0,c
 11421  0022A0  323A               	rrcf	___fladd@grs^0,f,c
 11422  0022A2                     l7262:
 11423  0022A2  A02B               	btfss	___fladd@b^0,0,c
 11424  0022A4  EF56  F011         	goto	u8711
 11425  0022A8  EF58  F011         	goto	u8710
 11426  0022AC                     u8711:
 11427  0022AC  EF59  F011         	goto	l7266
 11428  0022B0                     u8710:
 11429  0022B0  8E3A               	bsf	___fladd@grs^0,7,c
 11430  0022B2                     l7266:
 11431  0022B2  342E               	rlcf	(___fladd@b+3)^0,w,c
 11432  0022B4  322E               	rrcf	(___fladd@b+3)^0,f,c
 11433  0022B6  322D               	rrcf	(___fladd@b+2)^0,f,c
 11434  0022B8  322C               	rrcf	(___fladd@b+1)^0,f,c
 11435  0022BA  322B               	rrcf	___fladd@b^0,f,c
 11436  0022BC  2A39               	incf	___fladd@bexp^0,f,c
 11437  0022BE                     l1334:
 11438  0022BE  5038               	movf	___fladd@aexp^0,w,c
 11439  0022C0  5C39               	subwf	___fladd@bexp^0,w,c
 11440  0022C2  A0D8               	btfss	status,0,c
 11441  0022C4  EF66  F011         	goto	u8721
 11442  0022C8  EF68  F011         	goto	u8720
 11443  0022CC                     u8721:
 11444  0022CC  EF42  F011         	goto	l1335
 11445  0022D0                     u8720:
 11446  0022D0                     l1333:
 11447  0022D0  BC37               	btfsc	___fladd@signs^0,6,c
 11448  0022D2  EF6D  F011         	goto	u8731
 11449  0022D6  EF6F  F011         	goto	u8730
 11450  0022DA                     u8731:
 11451  0022DA  EFAF  F011         	goto	l7294
 11452  0022DE                     u8730:
 11453  0022DE  5039               	movf	___fladd@bexp^0,w,c
 11454  0022E0  A4D8               	btfss	status,2,c
 11455  0022E2  EF75  F011         	goto	u8741
 11456  0022E6  EF77  F011         	goto	u8740
 11457  0022EA                     u8741:
 11458  0022EA  EF81  F011         	goto	l7276
 11459  0022EE                     u8740:
 11460  0022EE  0E00               	movlw	0
 11461  0022F0  6E2B               	movwf	?___fladd^0,c
 11462  0022F2  0E00               	movlw	0
 11463  0022F4  6E2C               	movwf	(?___fladd+1)^0,c
 11464  0022F6  0E00               	movlw	0
 11465  0022F8  6E2D               	movwf	(?___fladd+2)^0,c
 11466  0022FA  0E00               	movlw	0
 11467  0022FC  6E2E               	movwf	(?___fladd+3)^0,c
 11468  0022FE  EFD0  F012         	goto	l1342
 11469  002302                     l7276:
 11470  002302  502F               	movf	___fladd@a^0,w,c
 11471  002304  262B               	addwf	___fladd@b^0,f,c
 11472  002306  5030               	movf	(___fladd@a+1)^0,w,c
 11473  002308  222C               	addwfc	(___fladd@b+1)^0,f,c
 11474  00230A  5031               	movf	(___fladd@a+2)^0,w,c
 11475  00230C  222D               	addwfc	(___fladd@b+2)^0,f,c
 11476  00230E  5032               	movf	(___fladd@a+3)^0,w,c
 11477  002310  222E               	addwfc	(___fladd@b+3)^0,f,c
 11478  002312  A02E               	btfss	(___fladd@b+3)^0,0,c
 11479  002314  EF8E  F011         	goto	u8751
 11480  002318  EF90  F011         	goto	u8750
 11481  00231C                     u8751:
 11482  00231C  EF3C  F012         	goto	l7330
 11483  002320                     u8750:
 11484  002320  A03A               	btfss	___fladd@grs^0,0,c
 11485  002322  EF95  F011         	goto	u8761
 11486  002326  EF97  F011         	goto	u8760
 11487  00232A                     u8761:
 11488  00232A  EF9D  F011         	goto	l7284
 11489  00232E                     u8760:
 11490  00232E  90D8               	bcf	status,0,c
 11491  002330  303A               	rrcf	___fladd@grs^0,w,c
 11492  002332  0901               	iorlw	1
 11493  002334  6E3A               	movwf	___fladd@grs^0,c
 11494  002336  EF9F  F011         	goto	l7286
 11495  00233A                     l7284:
 11496  00233A  90D8               	bcf	status,0,c
 11497  00233C  323A               	rrcf	___fladd@grs^0,f,c
 11498  00233E                     l7286:
 11499  00233E  A02B               	btfss	___fladd@b^0,0,c
 11500  002340  EFA4  F011         	goto	u8771
 11501  002344  EFA6  F011         	goto	u8770
 11502  002348                     u8771:
 11503  002348  EFA7  F011         	goto	l7290
 11504  00234C                     u8770:
 11505  00234C  8E3A               	bsf	___fladd@grs^0,7,c
 11506  00234E                     l7290:
 11507  00234E  342E               	rlcf	(___fladd@b+3)^0,w,c
 11508  002350  322E               	rrcf	(___fladd@b+3)^0,f,c
 11509  002352  322D               	rrcf	(___fladd@b+2)^0,f,c
 11510  002354  322C               	rrcf	(___fladd@b+1)^0,f,c
 11511  002356  322B               	rrcf	___fladd@b^0,f,c
 11512  002358  2A39               	incf	___fladd@bexp^0,f,c
 11513  00235A  EF3C  F012         	goto	l7330
 11514  00235E                     l7294:
 11515  00235E  502F               	movf	___fladd@a^0,w,c
 11516  002360  5C2B               	subwf	___fladd@b^0,w,c
 11517  002362  5030               	movf	(___fladd@a+1)^0,w,c
 11518  002364  582C               	subwfb	(___fladd@b+1)^0,w,c
 11519  002366  5031               	movf	(___fladd@a+2)^0,w,c
 11520  002368  582D               	subwfb	(___fladd@b+2)^0,w,c
 11521  00236A  502E               	movf	(___fladd@b+3)^0,w,c
 11522  00236C  0A80               	xorlw	128
 11523  00236E  6E33               	movwf	??___fladd^0,c
 11524  002370  5032               	movf	(___fladd@a+3)^0,w,c
 11525  002372  0A80               	xorlw	128
 11526  002374  5833               	subwfb	??___fladd^0,w,c
 11527  002376  B0D8               	btfsc	status,0,c
 11528  002378  EFC0  F011         	goto	u8781
 11529  00237C  EFC2  F011         	goto	u8780
 11530  002380                     u8781:
 11531  002380  EFED  F011         	goto	l7304
 11532  002384                     u8780:
 11533  002384  502B               	movf	___fladd@b^0,w,c
 11534  002386  5C2F               	subwf	___fladd@a^0,w,c
 11535  002388  6E33               	movwf	??___fladd^0,c
 11536  00238A  502C               	movf	(___fladd@b+1)^0,w,c
 11537  00238C  5830               	subwfb	(___fladd@a+1)^0,w,c
 11538  00238E  6E34               	movwf	(??___fladd+1)^0,c
 11539  002390  502D               	movf	(___fladd@b+2)^0,w,c
 11540  002392  5831               	subwfb	(___fladd@a+2)^0,w,c
 11541  002394  6E35               	movwf	(??___fladd+2)^0,c
 11542  002396  502E               	movf	(___fladd@b+3)^0,w,c
 11543  002398  5832               	subwfb	(___fladd@a+3)^0,w,c
 11544  00239A  6E36               	movwf	(??___fladd+3)^0,c
 11545  00239C  0EFF               	movlw	255
 11546  00239E  2433               	addwf	??___fladd^0,w,c
 11547  0023A0  6E2B               	movwf	___fladd@b^0,c
 11548  0023A2  0EFF               	movlw	255
 11549  0023A4  2034               	addwfc	(??___fladd+1)^0,w,c
 11550  0023A6  6E2C               	movwf	(___fladd@b+1)^0,c
 11551  0023A8  0EFF               	movlw	255
 11552  0023AA  2035               	addwfc	(??___fladd+2)^0,w,c
 11553  0023AC  6E2D               	movwf	(___fladd@b+2)^0,c
 11554  0023AE  0EFF               	movlw	255
 11555  0023B0  2036               	addwfc	(??___fladd+3)^0,w,c
 11556  0023B2  6E2E               	movwf	(___fladd@b+3)^0,c
 11557  0023B4  0E80               	movlw	128
 11558  0023B6  1A37               	xorwf	___fladd@signs^0,f,c
 11559  0023B8  6C3A               	negf	___fladd@grs^0,c
 11560  0023BA  503A               	movf	___fladd@grs^0,w,c
 11561  0023BC  A4D8               	btfss	status,2,c
 11562  0023BE  EFE3  F011         	goto	u8791
 11563  0023C2  EFE5  F011         	goto	u8790
 11564  0023C6                     u8791:
 11565  0023C6  EFF5  F011         	goto	l1350
 11566  0023CA                     u8790:
 11567  0023CA  0E01               	movlw	1
 11568  0023CC  262B               	addwf	___fladd@b^0,f,c
 11569  0023CE  0E00               	movlw	0
 11570  0023D0  222C               	addwfc	(___fladd@b+1)^0,f,c
 11571  0023D2  222D               	addwfc	(___fladd@b+2)^0,f,c
 11572  0023D4  222E               	addwfc	(___fladd@b+3)^0,f,c
 11573  0023D6  EFF5  F011         	goto	l1350
 11574  0023DA                     l7304:
 11575  0023DA  502F               	movf	___fladd@a^0,w,c
 11576  0023DC  5E2B               	subwf	___fladd@b^0,f,c
 11577  0023DE  5030               	movf	(___fladd@a+1)^0,w,c
 11578  0023E0  5A2C               	subwfb	(___fladd@b+1)^0,f,c
 11579  0023E2  5031               	movf	(___fladd@a+2)^0,w,c
 11580  0023E4  5A2D               	subwfb	(___fladd@b+2)^0,f,c
 11581  0023E6  5032               	movf	(___fladd@a+3)^0,w,c
 11582  0023E8  5A2E               	subwfb	(___fladd@b+3)^0,f,c
 11583  0023EA                     l1350:
 11584  0023EA  502B               	movf	___fladd@b^0,w,c
 11585  0023EC  102C               	iorwf	(___fladd@b+1)^0,w,c
 11586  0023EE  102D               	iorwf	(___fladd@b+2)^0,w,c
 11587  0023F0  102E               	iorwf	(___fladd@b+3)^0,w,c
 11588  0023F2  A4D8               	btfss	status,2,c
 11589  0023F4  EFFE  F011         	goto	u8801
 11590  0023F8  EF00  F012         	goto	u8800
 11591  0023FC                     u8801:
 11592  0023FC  EF35  F012         	goto	l7328
 11593  002400                     u8800:
 11594  002400  503A               	movf	___fladd@grs^0,w,c
 11595  002402  A4D8               	btfss	status,2,c
 11596  002404  EF06  F012         	goto	u8811
 11597  002408  EF08  F012         	goto	u8810
 11598  00240C                     u8811:
 11599  00240C  EF35  F012         	goto	l7328
 11600  002410                     u8810:
 11601  002410  0E00               	movlw	0
 11602  002412  6E2B               	movwf	?___fladd^0,c
 11603  002414  0E00               	movlw	0
 11604  002416  6E2C               	movwf	(?___fladd+1)^0,c
 11605  002418  0E00               	movlw	0
 11606  00241A  6E2D               	movwf	(?___fladd+2)^0,c
 11607  00241C  0E00               	movlw	0
 11608  00241E  6E2E               	movwf	(?___fladd+3)^0,c
 11609  002420  EFD0  F012         	goto	l1342
 11610  002424                     l7312:
 11611  002424  90D8               	bcf	status,0,c
 11612  002426  362B               	rlcf	___fladd@b^0,f,c
 11613  002428  362C               	rlcf	(___fladd@b+1)^0,f,c
 11614  00242A  362D               	rlcf	(___fladd@b+2)^0,f,c
 11615  00242C  362E               	rlcf	(___fladd@b+3)^0,f,c
 11616  00242E  AE3A               	btfss	___fladd@grs^0,7,c
 11617  002430  EF1C  F012         	goto	u8821
 11618  002434  EF1E  F012         	goto	u8820
 11619  002438                     u8821:
 11620  002438  EF1F  F012         	goto	l7318
 11621  00243C                     u8820:
 11622  00243C  802B               	bsf	___fladd@b^0,0,c
 11623  00243E                     l7318:
 11624  00243E  A03A               	btfss	___fladd@grs^0,0,c
 11625  002440  EF24  F012         	goto	u8831
 11626  002444  EF26  F012         	goto	u8830
 11627  002448                     u8831:
 11628  002448  EF2A  F012         	goto	l7322
 11629  00244C                     u8830:
 11630  00244C  80D8               	bsf	status,0,c
 11631  00244E  363A               	rlcf	___fladd@grs^0,f,c
 11632  002450  EF2C  F012         	goto	l7324
 11633  002454                     l7322:
 11634  002454  90D8               	bcf	status,0,c
 11635  002456  363A               	rlcf	___fladd@grs^0,f,c
 11636  002458                     l7324:
 11637  002458  5039               	movf	___fladd@bexp^0,w,c
 11638  00245A  B4D8               	btfsc	status,2,c
 11639  00245C  EF32  F012         	goto	u8841
 11640  002460  EF34  F012         	goto	u8840
 11641  002464                     u8841:
 11642  002464  EF35  F012         	goto	l7328
 11643  002468                     u8840:
 11644  002468  0639               	decf	___fladd@bexp^0,f,c
 11645  00246A                     l7328:
 11646  00246A  AE2D               	btfss	(___fladd@b+2)^0,7,c
 11647  00246C  EF3A  F012         	goto	u8851
 11648  002470  EF3C  F012         	goto	u8850
 11649  002474                     u8851:
 11650  002474  EF12  F012         	goto	l7312
 11651  002478                     u8850:
 11652  002478                     l7330:
 11653  002478  0E00               	movlw	0
 11654  00247A  6E38               	movwf	___fladd@aexp^0,c
 11655  00247C  AE3A               	btfss	___fladd@grs^0,7,c
 11656  00247E  EF43  F012         	goto	u8861
 11657  002482  EF45  F012         	goto	u8860
 11658  002486                     u8861:
 11659  002486  EF5D  F012         	goto	l1359
 11660  00248A                     u8860:
 11661  00248A  C03A  F033         	movff	___fladd@grs,??___fladd
 11662  00248E  0E7F               	movlw	127
 11663  002490  1633               	andwf	??___fladd^0,f,c
 11664  002492  B4D8               	btfsc	status,2,c
 11665  002494  EF4E  F012         	goto	u8871
 11666  002498  EF50  F012         	goto	u8870
 11667  00249C                     u8871:
 11668  00249C  EF54  F012         	goto	l1360
 11669  0024A0                     u8870:
 11670  0024A0                     l7336:
 11671  0024A0  0E01               	movlw	1
 11672  0024A2  6E38               	movwf	___fladd@aexp^0,c
 11673  0024A4  EF5D  F012         	goto	l1359
 11674  0024A8                     l1360:
 11675  0024A8  A02B               	btfss	___fladd@b^0,0,c
 11676  0024AA  EF59  F012         	goto	u8881
 11677  0024AE  EF5B  F012         	goto	u8880
 11678  0024B2                     u8881:
 11679  0024B2  EF5D  F012         	goto	l1359
 11680  0024B6                     u8880:
 11681  0024B6  EF50  F012         	goto	l7336
 11682  0024BA                     l1359:
 11683  0024BA  5038               	movf	___fladd@aexp^0,w,c
 11684  0024BC  B4D8               	btfsc	status,2,c
 11685  0024BE  EF63  F012         	goto	u8891
 11686  0024C2  EF65  F012         	goto	u8890
 11687  0024C6                     u8891:
 11688  0024C6  EF90  F012         	goto	l7348
 11689  0024CA                     u8890:
 11690  0024CA  0E01               	movlw	1
 11691  0024CC  262B               	addwf	___fladd@b^0,f,c
 11692  0024CE  0E00               	movlw	0
 11693  0024D0  222C               	addwfc	(___fladd@b+1)^0,f,c
 11694  0024D2  222D               	addwfc	(___fladd@b+2)^0,f,c
 11695  0024D4  222E               	addwfc	(___fladd@b+3)^0,f,c
 11696  0024D6  A02E               	btfss	(___fladd@b+3)^0,0,c
 11697  0024D8  EF70  F012         	goto	u8901
 11698  0024DC  EF72  F012         	goto	u8900
 11699  0024E0                     u8901:
 11700  0024E0  EF90  F012         	goto	l7348
 11701  0024E4                     u8900:
 11702  0024E4  C02B  F033         	movff	___fladd@b,??___fladd
 11703  0024E8  C02C  F034         	movff	___fladd@b+1,??___fladd+1
 11704  0024EC  C02D  F035         	movff	___fladd@b+2,??___fladd+2
 11705  0024F0  C02E  F036         	movff	___fladd@b+3,??___fladd+3
 11706  0024F4  3436               	rlcf	(??___fladd+3)^0,w,c
 11707  0024F6  3236               	rrcf	(??___fladd+3)^0,f,c
 11708  0024F8  3235               	rrcf	(??___fladd+2)^0,f,c
 11709  0024FA  3234               	rrcf	(??___fladd+1)^0,f,c
 11710  0024FC  3233               	rrcf	??___fladd^0,f,c
 11711  0024FE  C033  F02B         	movff	??___fladd,___fladd@b
 11712  002502  C034  F02C         	movff	??___fladd+1,___fladd@b+1
 11713  002506  C035  F02D         	movff	??___fladd+2,___fladd@b+2
 11714  00250A  C036  F02E         	movff	??___fladd+3,___fladd@b+3
 11715  00250E  2839               	incf	___fladd@bexp^0,w,c
 11716  002510  B4D8               	btfsc	status,2,c
 11717  002512  EF8D  F012         	goto	u8911
 11718  002516  EF8F  F012         	goto	u8910
 11719  00251A                     u8911:
 11720  00251A  EF90  F012         	goto	l7348
 11721  00251E                     u8910:
 11722  00251E  2A39               	incf	___fladd@bexp^0,f,c
 11723  002520                     l7348:
 11724  002520  2839               	incf	___fladd@bexp^0,w,c
 11725  002522  B4D8               	btfsc	status,2,c
 11726  002524  EF96  F012         	goto	u8921
 11727  002528  EF98  F012         	goto	u8920
 11728  00252C                     u8921:
 11729  00252C  EFA0  F012         	goto	l7352
 11730  002530                     u8920:
 11731  002530  5039               	movf	___fladd@bexp^0,w,c
 11732  002532  A4D8               	btfss	status,2,c
 11733  002534  EF9E  F012         	goto	u8931
 11734  002538  EFA0  F012         	goto	u8930
 11735  00253C                     u8931:
 11736  00253C  EFB2  F012         	goto	l7356
 11737  002540                     u8930:
 11738  002540                     l7352:
 11739  002540  0E00               	movlw	0
 11740  002542  6E2B               	movwf	___fladd@b^0,c
 11741  002544  0E00               	movlw	0
 11742  002546  6E2C               	movwf	(___fladd@b+1)^0,c
 11743  002548  0E00               	movlw	0
 11744  00254A  6E2D               	movwf	(___fladd@b+2)^0,c
 11745  00254C  0E00               	movlw	0
 11746  00254E  6E2E               	movwf	(___fladd@b+3)^0,c
 11747  002550  5039               	movf	___fladd@bexp^0,w,c
 11748  002552  A4D8               	btfss	status,2,c
 11749  002554  EFAE  F012         	goto	u8941
 11750  002558  EFB0  F012         	goto	u8940
 11751  00255C                     u8941:
 11752  00255C  EFB2  F012         	goto	l7356
 11753  002560                     u8940:
 11754  002560  0E00               	movlw	0
 11755  002562  6E37               	movwf	___fladd@signs^0,c
 11756  002564                     l7356:
 11757  002564  A039               	btfss	___fladd@bexp^0,0,c
 11758  002566  EFB7  F012         	goto	u8951
 11759  00256A  EFB9  F012         	goto	u8950
 11760  00256E                     u8951:
 11761  00256E  EFBC  F012         	goto	l7360
 11762  002572                     u8950:
 11763  002572  8E2D               	bsf	(___fladd@b+2)^0,7,c
 11764  002574  EFBD  F012         	goto	l7362
 11765  002578                     l7360:
 11766  002578  9E2D               	bcf	(___fladd@b+2)^0,7,c
 11767  00257A                     l7362:
 11768  00257A  90D8               	bcf	status,0,c
 11769  00257C  3039               	rrcf	___fladd@bexp^0,w,c
 11770  00257E  6E2E               	movwf	(___fladd@b+3)^0,c
 11771  002580  AE37               	btfss	___fladd@signs^0,7,c
 11772  002582  EFC5  F012         	goto	u8961
 11773  002586  EFC7  F012         	goto	u8960
 11774  00258A                     u8961:
 11775  00258A  EFC8  F012         	goto	l7368
 11776  00258E                     u8960:
 11777  00258E  8E2E               	bsf	(___fladd@b+3)^0,7,c
 11778  002590                     l7368:
 11779  002590  C02B  F02B         	movff	___fladd@b,?___fladd
 11780  002594  C02C  F02C         	movff	___fladd@b+1,?___fladd+1
 11781  002598  C02D  F02D         	movff	___fladd@b+2,?___fladd+2
 11782  00259C  C02E  F02E         	movff	___fladd@b+3,?___fladd+3
 11783  0025A0                     l1342:
 11784  0025A0  0012               	return		;funcret
 11785  0025A2                     __end_of___fladd:
 11786                           	opt callstack 0
 11787                           
 11788 ;; *************** function ___flneg *****************
 11789 ;; Defined at:
 11790 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  f1              4    3[COMRAM] unsigned char 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;		None
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  4    3[COMRAM] unsigned char 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11808 ;;Total ram usage:        4 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    4
 11811 ;; This function calls:
 11812 ;;		Nothing
 11813 ;; This function is called by:
 11814 ;;		_efgtoa
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           	psect	text24
 11819  005CD6                     __ptext24:
 11820                           	opt callstack 0
 11821  005CD6                     ___flneg:
 11822                           	opt callstack 21
 11823  005CD6  5004               	movf	___flneg@f1^0,w,c
 11824  005CD8  1005               	iorwf	(___flneg@f1+1)^0,w,c
 11825  005CDA  1006               	iorwf	(___flneg@f1+2)^0,w,c
 11826  005CDC  1007               	iorwf	(___flneg@f1+3)^0,w,c
 11827  005CDE  B4D8               	btfsc	status,2,c
 11828  005CE0  EF74  F02E         	goto	u10081
 11829  005CE4  EF76  F02E         	goto	u10080
 11830  005CE8                     u10081:
 11831  005CE8  EF7E  F02E         	goto	l7966
 11832  005CEC                     u10080:
 11833  005CEC  0E00               	movlw	0
 11834  005CEE  1A04               	xorwf	___flneg@f1^0,f,c
 11835  005CF0  0E00               	movlw	0
 11836  005CF2  1A05               	xorwf	(___flneg@f1+1)^0,f,c
 11837  005CF4  0E00               	movlw	0
 11838  005CF6  1A06               	xorwf	(___flneg@f1+2)^0,f,c
 11839  005CF8  0E80               	movlw	128
 11840  005CFA  1A07               	xorwf	(___flneg@f1+3)^0,f,c
 11841  005CFC                     l7966:
 11842  005CFC  C004  F004         	movff	___flneg@f1,?___flneg
 11843  005D00  C005  F005         	movff	___flneg@f1+1,?___flneg+1
 11844  005D04  C006  F006         	movff	___flneg@f1+2,?___flneg+2
 11845  005D08  C007  F007         	movff	___flneg@f1+3,?___flneg+3
 11846  005D0C  0012               	return		;funcret
 11847  005D0E                     __end_of___flneg:
 11848                           	opt callstack 0
 11849                           
 11850 ;; *************** function ___flmul *****************
 11851 ;; Defined at:
 11852 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;  b               4   17[COMRAM] unsigned char 
 11855 ;;  a               4   21[COMRAM] unsigned char 
 11856 ;; Auto vars:     Size  Location     Type
 11857 ;;  prod            4   36[COMRAM] struct .
 11858 ;;  grs             4   31[COMRAM] unsigned long 
 11859 ;;  temp            2   40[COMRAM] struct .
 11860 ;;  bexp            1   35[COMRAM] unsigned char 
 11861 ;;  aexp            1   30[COMRAM] unsigned char 
 11862 ;;  sign            1   29[COMRAM] unsigned char 
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  4   17[COMRAM] unsigned char 
 11865 ;; Registers used:
 11866 ;;		wreg, status,2, status,0, prodl, prodh
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11872 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11873 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11874 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11875 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;Total ram usage:       25 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:    4
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_main
 11883 ;;		_efgtoa
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text25
 11888  0025A2                     __ptext25:
 11889                           	opt callstack 0
 11890  0025A2                     ___flmul:
 11891                           	opt callstack 21
 11892  0025A2  5015               	movf	(___flmul@b+3)^0,w,c
 11893  0025A4  0B80               	andlw	128
 11894  0025A6  6E1E               	movwf	___flmul@sign^0,c
 11895  0025A8  5015               	movf	(___flmul@b+3)^0,w,c
 11896  0025AA  2415               	addwf	(___flmul@b+3)^0,w,c
 11897  0025AC  6E24               	movwf	___flmul@bexp^0,c
 11898  0025AE  AE14               	btfss	(___flmul@b+2)^0,7,c
 11899  0025B0  EFDC  F012         	goto	u9691
 11900  0025B4  EFDE  F012         	goto	u9690
 11901  0025B8                     u9691:
 11902  0025B8  EFDF  F012         	goto	l7714
 11903  0025BC                     u9690:
 11904  0025BC  8024               	bsf	___flmul@bexp^0,0,c
 11905  0025BE                     l7714:
 11906  0025BE  5024               	movf	___flmul@bexp^0,w,c
 11907  0025C0  B4D8               	btfsc	status,2,c
 11908  0025C2  EFE5  F012         	goto	u9701
 11909  0025C6  EFE7  F012         	goto	u9700
 11910  0025CA                     u9701:
 11911  0025CA  EFFA  F012         	goto	l7722
 11912  0025CE                     u9700:
 11913  0025CE  2824               	incf	___flmul@bexp^0,w,c
 11914  0025D0  A4D8               	btfss	status,2,c
 11915  0025D2  EFED  F012         	goto	u9711
 11916  0025D6  EFEF  F012         	goto	u9710
 11917  0025DA                     u9711:
 11918  0025DA  EFF7  F012         	goto	l7720
 11919  0025DE                     u9710:
 11920  0025DE  0E00               	movlw	0
 11921  0025E0  6E12               	movwf	___flmul@b^0,c
 11922  0025E2  0E00               	movlw	0
 11923  0025E4  6E13               	movwf	(___flmul@b+1)^0,c
 11924  0025E6  0E00               	movlw	0
 11925  0025E8  6E14               	movwf	(___flmul@b+2)^0,c
 11926  0025EA  0E00               	movlw	0
 11927  0025EC  6E15               	movwf	(___flmul@b+3)^0,c
 11928  0025EE                     l7720:
 11929  0025EE  8E14               	bsf	(___flmul@b+2)^0,7,c
 11930  0025F0  EF02  F013         	goto	l7724
 11931  0025F4                     l7722:
 11932  0025F4  0E00               	movlw	0
 11933  0025F6  6E12               	movwf	___flmul@b^0,c
 11934  0025F8  0E00               	movlw	0
 11935  0025FA  6E13               	movwf	(___flmul@b+1)^0,c
 11936  0025FC  0E00               	movlw	0
 11937  0025FE  6E14               	movwf	(___flmul@b+2)^0,c
 11938  002600  0E00               	movlw	0
 11939  002602  6E15               	movwf	(___flmul@b+3)^0,c
 11940  002604                     l7724:
 11941  002604  5019               	movf	(___flmul@a+3)^0,w,c
 11942  002606  0B80               	andlw	128
 11943  002608  1A1E               	xorwf	___flmul@sign^0,f,c
 11944  00260A  5019               	movf	(___flmul@a+3)^0,w,c
 11945  00260C  2419               	addwf	(___flmul@a+3)^0,w,c
 11946  00260E  6E1F               	movwf	___flmul@aexp^0,c
 11947  002610  AE18               	btfss	(___flmul@a+2)^0,7,c
 11948  002612  EF0D  F013         	goto	u9721
 11949  002616  EF0F  F013         	goto	u9720
 11950  00261A                     u9721:
 11951  00261A  EF10  F013         	goto	l7732
 11952  00261E                     u9720:
 11953  00261E  801F               	bsf	___flmul@aexp^0,0,c
 11954  002620                     l7732:
 11955  002620  501F               	movf	___flmul@aexp^0,w,c
 11956  002622  B4D8               	btfsc	status,2,c
 11957  002624  EF16  F013         	goto	u9731
 11958  002628  EF18  F013         	goto	u9730
 11959  00262C                     u9731:
 11960  00262C  EF2B  F013         	goto	l7740
 11961  002630                     u9730:
 11962  002630  281F               	incf	___flmul@aexp^0,w,c
 11963  002632  A4D8               	btfss	status,2,c
 11964  002634  EF1E  F013         	goto	u9741
 11965  002638  EF20  F013         	goto	u9740
 11966  00263C                     u9741:
 11967  00263C  EF28  F013         	goto	l7738
 11968  002640                     u9740:
 11969  002640  0E00               	movlw	0
 11970  002642  6E16               	movwf	___flmul@a^0,c
 11971  002644  0E00               	movlw	0
 11972  002646  6E17               	movwf	(___flmul@a+1)^0,c
 11973  002648  0E00               	movlw	0
 11974  00264A  6E18               	movwf	(___flmul@a+2)^0,c
 11975  00264C  0E00               	movlw	0
 11976  00264E  6E19               	movwf	(___flmul@a+3)^0,c
 11977  002650                     l7738:
 11978  002650  8E18               	bsf	(___flmul@a+2)^0,7,c
 11979  002652  EF33  F013         	goto	l1419
 11980  002656                     l7740:
 11981  002656  0E00               	movlw	0
 11982  002658  6E16               	movwf	___flmul@a^0,c
 11983  00265A  0E00               	movlw	0
 11984  00265C  6E17               	movwf	(___flmul@a+1)^0,c
 11985  00265E  0E00               	movlw	0
 11986  002660  6E18               	movwf	(___flmul@a+2)^0,c
 11987  002662  0E00               	movlw	0
 11988  002664  6E19               	movwf	(___flmul@a+3)^0,c
 11989  002666                     l1419:
 11990  002666  501F               	movf	___flmul@aexp^0,w,c
 11991  002668  B4D8               	btfsc	status,2,c
 11992  00266A  EF39  F013         	goto	u9751
 11993  00266E  EF3B  F013         	goto	u9750
 11994  002672                     u9751:
 11995  002672  EF43  F013         	goto	l7744
 11996  002676                     u9750:
 11997  002676  5024               	movf	___flmul@bexp^0,w,c
 11998  002678  A4D8               	btfss	status,2,c
 11999  00267A  EF41  F013         	goto	u9761
 12000  00267E  EF43  F013         	goto	u9760
 12001  002682                     u9761:
 12002  002682  EF4D  F013         	goto	l7748
 12003  002686                     u9760:
 12004  002686                     l7744:
 12005  002686  0E00               	movlw	0
 12006  002688  6E12               	movwf	?___flmul^0,c
 12007  00268A  0E00               	movlw	0
 12008  00268C  6E13               	movwf	(?___flmul+1)^0,c
 12009  00268E  0E00               	movlw	0
 12010  002690  6E14               	movwf	(?___flmul+2)^0,c
 12011  002692  0E00               	movlw	0
 12012  002694  6E15               	movwf	(?___flmul+3)^0,c
 12013  002696  EFE5  F014         	goto	l1423
 12014  00269A                     l7748:
 12015  00269A  5018               	movf	(___flmul@a+2)^0,w,c
 12016  00269C  0212               	mulwf	___flmul@b^0,c
 12017  00269E  CFF3 F029          	movff	prodl,___flmul@temp
 12018  0026A2  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12019  0026A6  5029               	movf	___flmul@temp^0,w,c
 12020  0026A8  6E20               	movwf	___flmul@grs^0,c
 12021  0026AA  6A21               	clrf	(___flmul@grs+1)^0,c
 12022  0026AC  6A22               	clrf	(___flmul@grs+2)^0,c
 12023  0026AE  6A23               	clrf	(___flmul@grs+3)^0,c
 12024  0026B0  502A               	movf	(___flmul@temp+1)^0,w,c
 12025  0026B2  6E25               	movwf	___flmul@prod^0,c
 12026  0026B4  6A26               	clrf	(___flmul@prod+1)^0,c
 12027  0026B6  6A27               	clrf	(___flmul@prod+2)^0,c
 12028  0026B8  6A28               	clrf	(___flmul@prod+3)^0,c
 12029  0026BA  5017               	movf	(___flmul@a+1)^0,w,c
 12030  0026BC  0213               	mulwf	(___flmul@b+1)^0,c
 12031  0026BE  CFF3 F029          	movff	prodl,___flmul@temp
 12032  0026C2  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12033  0026C6  5029               	movf	___flmul@temp^0,w,c
 12034  0026C8  2620               	addwf	___flmul@grs^0,f,c
 12035  0026CA  0E00               	movlw	0
 12036  0026CC  2221               	addwfc	(___flmul@grs+1)^0,f,c
 12037  0026CE  2222               	addwfc	(___flmul@grs+2)^0,f,c
 12038  0026D0  2223               	addwfc	(___flmul@grs+3)^0,f,c
 12039  0026D2  502A               	movf	(___flmul@temp+1)^0,w,c
 12040  0026D4  2625               	addwf	___flmul@prod^0,f,c
 12041  0026D6  0E00               	movlw	0
 12042  0026D8  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12043  0026DA  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12044  0026DC  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12045  0026DE  5016               	movf	___flmul@a^0,w,c
 12046  0026E0  0214               	mulwf	(___flmul@b+2)^0,c
 12047  0026E2  CFF3 F029          	movff	prodl,___flmul@temp
 12048  0026E6  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12049  0026EA  5029               	movf	___flmul@temp^0,w,c
 12050  0026EC  2620               	addwf	___flmul@grs^0,f,c
 12051  0026EE  0E00               	movlw	0
 12052  0026F0  2221               	addwfc	(___flmul@grs+1)^0,f,c
 12053  0026F2  2222               	addwfc	(___flmul@grs+2)^0,f,c
 12054  0026F4  2223               	addwfc	(___flmul@grs+3)^0,f,c
 12055  0026F6  502A               	movf	(___flmul@temp+1)^0,w,c
 12056  0026F8  2625               	addwf	___flmul@prod^0,f,c
 12057  0026FA  0E00               	movlw	0
 12058  0026FC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12059  0026FE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12060  002700  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12061  002702  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 12062  002706  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 12063  00270A  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 12064  00270E  6A20               	clrf	___flmul@grs^0,c
 12065  002710  5016               	movf	___flmul@a^0,w,c
 12066  002712  0213               	mulwf	(___flmul@b+1)^0,c
 12067  002714  CFF3 F029          	movff	prodl,___flmul@temp
 12068  002718  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12069  00271C  5029               	movf	___flmul@temp^0,w,c
 12070  00271E  2620               	addwf	___flmul@grs^0,f,c
 12071  002720  502A               	movf	(___flmul@temp+1)^0,w,c
 12072  002722  2221               	addwfc	(___flmul@grs+1)^0,f,c
 12073  002724  0E00               	movlw	0
 12074  002726  2222               	addwfc	(___flmul@grs+2)^0,f,c
 12075  002728  0E00               	movlw	0
 12076  00272A  2223               	addwfc	(___flmul@grs+3)^0,f,c
 12077  00272C  5017               	movf	(___flmul@a+1)^0,w,c
 12078  00272E  0212               	mulwf	___flmul@b^0,c
 12079  002730  CFF3 F029          	movff	prodl,___flmul@temp
 12080  002734  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12081  002738  5029               	movf	___flmul@temp^0,w,c
 12082  00273A  2620               	addwf	___flmul@grs^0,f,c
 12083  00273C  502A               	movf	(___flmul@temp+1)^0,w,c
 12084  00273E  2221               	addwfc	(___flmul@grs+1)^0,f,c
 12085  002740  0E00               	movlw	0
 12086  002742  2222               	addwfc	(___flmul@grs+2)^0,f,c
 12087  002744  0E00               	movlw	0
 12088  002746  2223               	addwfc	(___flmul@grs+3)^0,f,c
 12089  002748  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 12090  00274C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 12091  002750  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 12092  002754  6A20               	clrf	___flmul@grs^0,c
 12093  002756  5016               	movf	___flmul@a^0,w,c
 12094  002758  0212               	mulwf	___flmul@b^0,c
 12095  00275A  CFF3 F029          	movff	prodl,___flmul@temp
 12096  00275E  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12097  002762  5029               	movf	___flmul@temp^0,w,c
 12098  002764  2620               	addwf	___flmul@grs^0,f,c
 12099  002766  502A               	movf	(___flmul@temp+1)^0,w,c
 12100  002768  2221               	addwfc	(___flmul@grs+1)^0,f,c
 12101  00276A  0E00               	movlw	0
 12102  00276C  2222               	addwfc	(___flmul@grs+2)^0,f,c
 12103  00276E  0E00               	movlw	0
 12104  002770  2223               	addwfc	(___flmul@grs+3)^0,f,c
 12105  002772  5018               	movf	(___flmul@a+2)^0,w,c
 12106  002774  0213               	mulwf	(___flmul@b+1)^0,c
 12107  002776  CFF3 F029          	movff	prodl,___flmul@temp
 12108  00277A  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12109  00277E  5029               	movf	___flmul@temp^0,w,c
 12110  002780  2625               	addwf	___flmul@prod^0,f,c
 12111  002782  502A               	movf	(___flmul@temp+1)^0,w,c
 12112  002784  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12113  002786  0E00               	movlw	0
 12114  002788  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12115  00278A  0E00               	movlw	0
 12116  00278C  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12117  00278E  5017               	movf	(___flmul@a+1)^0,w,c
 12118  002790  0214               	mulwf	(___flmul@b+2)^0,c
 12119  002792  CFF3 F029          	movff	prodl,___flmul@temp
 12120  002796  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12121  00279A  5029               	movf	___flmul@temp^0,w,c
 12122  00279C  2625               	addwf	___flmul@prod^0,f,c
 12123  00279E  502A               	movf	(___flmul@temp+1)^0,w,c
 12124  0027A0  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12125  0027A2  0E00               	movlw	0
 12126  0027A4  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12127  0027A6  0E00               	movlw	0
 12128  0027A8  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12129  0027AA  5018               	movf	(___flmul@a+2)^0,w,c
 12130  0027AC  0214               	mulwf	(___flmul@b+2)^0,c
 12131  0027AE  CFF3 F029          	movff	prodl,___flmul@temp
 12132  0027B2  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12133  0027B6  5029               	movf	___flmul@temp^0,w,c
 12134  0027B8  6E1A               	movwf	??___flmul^0,c
 12135  0027BA  502A               	movf	(___flmul@temp+1)^0,w,c
 12136  0027BC  6E1B               	movwf	(??___flmul+1)^0,c
 12137  0027BE  6A1C               	clrf	(??___flmul+2)^0,c
 12138  0027C0  6A1D               	clrf	(??___flmul+3)^0,c
 12139  0027C2  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 12140  0027C6  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 12141  0027CA  C01A  F01B         	movff	??___flmul,??___flmul+1
 12142  0027CE  6A1A               	clrf	??___flmul^0,c
 12143  0027D0  501A               	movf	??___flmul^0,w,c
 12144  0027D2  2625               	addwf	___flmul@prod^0,f,c
 12145  0027D4  501B               	movf	(??___flmul+1)^0,w,c
 12146  0027D6  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12147  0027D8  501C               	movf	(??___flmul+2)^0,w,c
 12148  0027DA  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12149  0027DC  501D               	movf	(??___flmul+3)^0,w,c
 12150  0027DE  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12151  0027E0  C020  F01A         	movff	___flmul@grs,??___flmul
 12152  0027E4  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
 12153  0027E8  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
 12154  0027EC  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
 12155  0027F0  0E19               	movlw	25
 12156  0027F2  EF00  F014         	goto	u9770
 12157  0027F6                     u9775:
 12158  0027F6  90D8               	bcf	status,0,c
 12159  0027F8  321D               	rrcf	(??___flmul+3)^0,f,c
 12160  0027FA  321C               	rrcf	(??___flmul+2)^0,f,c
 12161  0027FC  321B               	rrcf	(??___flmul+1)^0,f,c
 12162  0027FE  321A               	rrcf	??___flmul^0,f,c
 12163  002800                     u9770:
 12164  002800  2EE8               	decfsz	wreg,f,c
 12165  002802  EFFB  F013         	goto	u9775
 12166  002806  501A               	movf	??___flmul^0,w,c
 12167  002808  2625               	addwf	___flmul@prod^0,f,c
 12168  00280A  501B               	movf	(??___flmul+1)^0,w,c
 12169  00280C  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12170  00280E  501C               	movf	(??___flmul+2)^0,w,c
 12171  002810  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12172  002812  501D               	movf	(??___flmul+3)^0,w,c
 12173  002814  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12174  002816  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 12175  00281A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 12176  00281E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 12177  002822  6A20               	clrf	___flmul@grs^0,c
 12178  002824  501F               	movf	___flmul@aexp^0,w,c
 12179  002826  C024  F01A         	movff	___flmul@bexp,??___flmul
 12180  00282A  6A1B               	clrf	(??___flmul+1)^0,c
 12181  00282C  261A               	addwf	??___flmul^0,f,c
 12182  00282E  0E00               	movlw	0
 12183  002830  221B               	addwfc	(??___flmul+1)^0,f,c
 12184  002832  0E82               	movlw	130
 12185  002834  241A               	addwf	??___flmul^0,w,c
 12186  002836  6E29               	movwf	___flmul@temp^0,c
 12187  002838  0EFF               	movlw	255
 12188  00283A  201B               	addwfc	(??___flmul+1)^0,w,c
 12189  00283C  6E2A               	movwf	(___flmul@temp+1)^0,c
 12190  00283E  EF36  F014         	goto	l7796
 12191  002842                     l7790:
 12192  002842  90D8               	bcf	status,0,c
 12193  002844  3625               	rlcf	___flmul@prod^0,f,c
 12194  002846  3626               	rlcf	(___flmul@prod+1)^0,f,c
 12195  002848  3627               	rlcf	(___flmul@prod+2)^0,f,c
 12196  00284A  3628               	rlcf	(___flmul@prod+3)^0,f,c
 12197  00284C  AE23               	btfss	(___flmul@grs+3)^0,7,c
 12198  00284E  EF2B  F014         	goto	u9781
 12199  002852  EF2D  F014         	goto	u9780
 12200  002856                     u9781:
 12201  002856  EF2E  F014         	goto	l1426
 12202  00285A                     u9780:
 12203  00285A  8025               	bsf	___flmul@prod^0,0,c
 12204  00285C                     l1426:
 12205  00285C  90D8               	bcf	status,0,c
 12206  00285E  3620               	rlcf	___flmul@grs^0,f,c
 12207  002860  3621               	rlcf	(___flmul@grs+1)^0,f,c
 12208  002862  3622               	rlcf	(___flmul@grs+2)^0,f,c
 12209  002864  3623               	rlcf	(___flmul@grs+3)^0,f,c
 12210  002866  0629               	decf	___flmul@temp^0,f,c
 12211  002868  A0D8               	btfss	status,0,c
 12212  00286A  062A               	decf	(___flmul@temp+1)^0,f,c
 12213  00286C                     l7796:
 12214  00286C  AE27               	btfss	(___flmul@prod+2)^0,7,c
 12215  00286E  EF3B  F014         	goto	u9791
 12216  002872  EF3D  F014         	goto	u9790
 12217  002876                     u9791:
 12218  002876  EF21  F014         	goto	l7790
 12219  00287A                     u9790:
 12220  00287A  0E00               	movlw	0
 12221  00287C  6E1F               	movwf	___flmul@aexp^0,c
 12222  00287E  AE23               	btfss	(___flmul@grs+3)^0,7,c
 12223  002880  EF44  F014         	goto	u9801
 12224  002884  EF46  F014         	goto	u9800
 12225  002888                     u9801:
 12226  002888  EF6A  F014         	goto	l1428
 12227  00288C                     u9800:
 12228  00288C  0EFF               	movlw	255
 12229  00288E  1420               	andwf	___flmul@grs^0,w,c
 12230  002890  6E1A               	movwf	??___flmul^0,c
 12231  002892  0EFF               	movlw	255
 12232  002894  1421               	andwf	(___flmul@grs+1)^0,w,c
 12233  002896  6E1B               	movwf	(??___flmul+1)^0,c
 12234  002898  0EFF               	movlw	255
 12235  00289A  1422               	andwf	(___flmul@grs+2)^0,w,c
 12236  00289C  6E1C               	movwf	(??___flmul+2)^0,c
 12237  00289E  0E7F               	movlw	127
 12238  0028A0  1423               	andwf	(___flmul@grs+3)^0,w,c
 12239  0028A2  6E1D               	movwf	(??___flmul+3)^0,c
 12240  0028A4  501A               	movf	??___flmul^0,w,c
 12241  0028A6  101B               	iorwf	(??___flmul+1)^0,w,c
 12242  0028A8  101C               	iorwf	(??___flmul+2)^0,w,c
 12243  0028AA  101D               	iorwf	(??___flmul+3)^0,w,c
 12244  0028AC  B4D8               	btfsc	status,2,c
 12245  0028AE  EF5B  F014         	goto	u9811
 12246  0028B2  EF5D  F014         	goto	u9810
 12247  0028B6                     u9811:
 12248  0028B6  EF61  F014         	goto	l1429
 12249  0028BA                     u9810:
 12250  0028BA                     l7804:
 12251  0028BA  0E01               	movlw	1
 12252  0028BC  6E1F               	movwf	___flmul@aexp^0,c
 12253  0028BE  EF6A  F014         	goto	l1428
 12254  0028C2                     l1429:
 12255  0028C2  A025               	btfss	___flmul@prod^0,0,c
 12256  0028C4  EF66  F014         	goto	u9821
 12257  0028C8  EF68  F014         	goto	u9820
 12258  0028CC                     u9821:
 12259  0028CC  EF6A  F014         	goto	l1428
 12260  0028D0                     u9820:
 12261  0028D0  EF5D  F014         	goto	l7804
 12262  0028D4                     l1428:
 12263  0028D4  501F               	movf	___flmul@aexp^0,w,c
 12264  0028D6  B4D8               	btfsc	status,2,c
 12265  0028D8  EF70  F014         	goto	u9831
 12266  0028DC  EF72  F014         	goto	u9830
 12267  0028E0                     u9831:
 12268  0028E0  EF96  F014         	goto	l7816
 12269  0028E4                     u9830:
 12270  0028E4  0E01               	movlw	1
 12271  0028E6  2625               	addwf	___flmul@prod^0,f,c
 12272  0028E8  0E00               	movlw	0
 12273  0028EA  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12274  0028EC  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12275  0028EE  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12276  0028F0  A028               	btfss	(___flmul@prod+3)^0,0,c
 12277  0028F2  EF7D  F014         	goto	u9841
 12278  0028F6  EF7F  F014         	goto	u9840
 12279  0028FA                     u9841:
 12280  0028FA  EF96  F014         	goto	l7816
 12281  0028FE                     u9840:
 12282  0028FE  C025  F01A         	movff	___flmul@prod,??___flmul
 12283  002902  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 12284  002906  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 12285  00290A  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 12286  00290E  341D               	rlcf	(??___flmul+3)^0,w,c
 12287  002910  321D               	rrcf	(??___flmul+3)^0,f,c
 12288  002912  321C               	rrcf	(??___flmul+2)^0,f,c
 12289  002914  321B               	rrcf	(??___flmul+1)^0,f,c
 12290  002916  321A               	rrcf	??___flmul^0,f,c
 12291  002918  C01A  F025         	movff	??___flmul,___flmul@prod
 12292  00291C  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 12293  002920  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 12294  002924  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 12295  002928  4A29               	infsnz	___flmul@temp^0,f,c
 12296  00292A  2A2A               	incf	(___flmul@temp+1)^0,f,c
 12297  00292C                     l7816:
 12298  00292C  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12299  00292E  EFA1  F014         	goto	u9851
 12300  002932  502A               	movf	(___flmul@temp+1)^0,w,c
 12301  002934  E108               	bnz	u9850
 12302  002936  2829               	incf	___flmul@temp^0,w,c
 12303  002938  A0D8               	btfss	status,0,c
 12304  00293A  EFA1  F014         	goto	u9851
 12305  00293E  EFA3  F014         	goto	u9850
 12306  002942                     u9851:
 12307  002942  EFAD  F014         	goto	l7820
 12308  002946                     u9850:
 12309  002946  0E00               	movlw	0
 12310  002948  6E25               	movwf	___flmul@prod^0,c
 12311  00294A  0E00               	movlw	0
 12312  00294C  6E26               	movwf	(___flmul@prod+1)^0,c
 12313  00294E  0E80               	movlw	128
 12314  002950  6E27               	movwf	(___flmul@prod+2)^0,c
 12315  002952  0E7F               	movlw	127
 12316  002954  6E28               	movwf	(___flmul@prod+3)^0,c
 12317  002956  EFDB  F014         	goto	l7832
 12318  00295A                     l7820:
 12319  00295A  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12320  00295C  EFBA  F014         	goto	u9860
 12321  002960  502A               	movf	(___flmul@temp+1)^0,w,c
 12322  002962  E106               	bnz	u9861
 12323  002964  0429               	decf	___flmul@temp^0,w,c
 12324  002966  B0D8               	btfsc	status,0,c
 12325  002968  EFB8  F014         	goto	u9861
 12326  00296C  EFBA  F014         	goto	u9860
 12327  002970                     u9861:
 12328  002970  EFC6  F014         	goto	l1436
 12329  002974                     u9860:
 12330  002974  0E00               	movlw	0
 12331  002976  6E25               	movwf	___flmul@prod^0,c
 12332  002978  0E00               	movlw	0
 12333  00297A  6E26               	movwf	(___flmul@prod+1)^0,c
 12334  00297C  0E00               	movlw	0
 12335  00297E  6E27               	movwf	(___flmul@prod+2)^0,c
 12336  002980  0E00               	movlw	0
 12337  002982  6E28               	movwf	(___flmul@prod+3)^0,c
 12338  002984  0E00               	movlw	0
 12339  002986  6E1E               	movwf	___flmul@sign^0,c
 12340  002988  EFDB  F014         	goto	l7832
 12341  00298C                     l1436:
 12342  00298C  C029  F024         	movff	___flmul@temp,___flmul@bexp
 12343  002990  0EFF               	movlw	255
 12344  002992  1625               	andwf	___flmul@prod^0,f,c
 12345  002994  0EFF               	movlw	255
 12346  002996  1626               	andwf	(___flmul@prod+1)^0,f,c
 12347  002998  0E7F               	movlw	127
 12348  00299A  1627               	andwf	(___flmul@prod+2)^0,f,c
 12349  00299C  0E00               	movlw	0
 12350  00299E  1628               	andwf	(___flmul@prod+3)^0,f,c
 12351  0029A0  A024               	btfss	___flmul@bexp^0,0,c
 12352  0029A2  EFD5  F014         	goto	u9871
 12353  0029A6  EFD7  F014         	goto	u9870
 12354  0029AA                     u9871:
 12355  0029AA  EFD8  F014         	goto	l7830
 12356  0029AE                     u9870:
 12357  0029AE  8E27               	bsf	(___flmul@prod+2)^0,7,c
 12358  0029B0                     l7830:
 12359  0029B0  90D8               	bcf	status,0,c
 12360  0029B2  3024               	rrcf	___flmul@bexp^0,w,c
 12361  0029B4  6E28               	movwf	(___flmul@prod+3)^0,c
 12362  0029B6                     l7832:
 12363  0029B6  501E               	movf	___flmul@sign^0,w,c
 12364  0029B8  1228               	iorwf	(___flmul@prod+3)^0,f,c
 12365  0029BA  C025  F012         	movff	___flmul@prod,?___flmul
 12366  0029BE  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 12367  0029C2  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 12368  0029C6  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 12369  0029CA                     l1423:
 12370  0029CA  0012               	return		;funcret
 12371  0029CC                     __end_of___flmul:
 12372                           	opt callstack 0
 12373                           
 12374 ;; *************** function ___flge *****************
 12375 ;; Defined at:
 12376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;  ff1             4   42[COMRAM] unsigned char 
 12379 ;;  ff2             4   46[COMRAM] unsigned char 
 12380 ;; Auto vars:     Size  Location     Type
 12381 ;;		None
 12382 ;; Return value:  Size  Location     Type
 12383 ;;		None               void
 12384 ;; Registers used:
 12385 ;;		wreg, status,2, status,0
 12386 ;; Tracked objects:
 12387 ;;		On entry : 0/0
 12388 ;;		On exit  : 0/0
 12389 ;;		Unchanged: 0/0
 12390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12391 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12394 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12395 ;;Total ram usage:       12 bytes
 12396 ;; Hardware stack levels used:    1
 12397 ;; Hardware stack levels required when called:    4
 12398 ;; This function calls:
 12399 ;;		Nothing
 12400 ;; This function is called by:
 12401 ;;		_main
 12402 ;;		_efgtoa
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text26
 12407  004E90                     __ptext26:
 12408                           	opt callstack 0
 12409  004E90                     ___flge:
 12410                           	opt callstack 21
 12411  004E90  0E00               	movlw	0
 12412  004E92  142B               	andwf	___flge@ff1^0,w,c
 12413  004E94  6E33               	movwf	??___flge^0,c
 12414  004E96  0E00               	movlw	0
 12415  004E98  142C               	andwf	(___flge@ff1+1)^0,w,c
 12416  004E9A  6E34               	movwf	(??___flge+1)^0,c
 12417  004E9C  0E80               	movlw	128
 12418  004E9E  142D               	andwf	(___flge@ff1+2)^0,w,c
 12419  004EA0  6E35               	movwf	(??___flge+2)^0,c
 12420  004EA2  0E7F               	movlw	127
 12421  004EA4  142E               	andwf	(___flge@ff1+3)^0,w,c
 12422  004EA6  6E36               	movwf	(??___flge+3)^0,c
 12423  004EA8  5033               	movf	??___flge^0,w,c
 12424  004EAA  1034               	iorwf	(??___flge+1)^0,w,c
 12425  004EAC  1035               	iorwf	(??___flge+2)^0,w,c
 12426  004EAE  1036               	iorwf	(??___flge+3)^0,w,c
 12427  004EB0  A4D8               	btfss	status,2,c
 12428  004EB2  EF5D  F027         	goto	u10031
 12429  004EB6  EF5F  F027         	goto	u10030
 12430  004EBA                     u10031:
 12431  004EBA  EF67  F027         	goto	l7944
 12432  004EBE                     u10030:
 12433  004EBE  0E00               	movlw	0
 12434  004EC0  6E2B               	movwf	___flge@ff1^0,c
 12435  004EC2  0E00               	movlw	0
 12436  004EC4  6E2C               	movwf	(___flge@ff1+1)^0,c
 12437  004EC6  0E00               	movlw	0
 12438  004EC8  6E2D               	movwf	(___flge@ff1+2)^0,c
 12439  004ECA  0E00               	movlw	0
 12440  004ECC  6E2E               	movwf	(___flge@ff1+3)^0,c
 12441  004ECE                     l7944:
 12442  004ECE  0E00               	movlw	0
 12443  004ED0  142F               	andwf	___flge@ff2^0,w,c
 12444  004ED2  6E33               	movwf	??___flge^0,c
 12445  004ED4  0E00               	movlw	0
 12446  004ED6  1430               	andwf	(___flge@ff2+1)^0,w,c
 12447  004ED8  6E34               	movwf	(??___flge+1)^0,c
 12448  004EDA  0E80               	movlw	128
 12449  004EDC  1431               	andwf	(___flge@ff2+2)^0,w,c
 12450  004EDE  6E35               	movwf	(??___flge+2)^0,c
 12451  004EE0  0E7F               	movlw	127
 12452  004EE2  1432               	andwf	(___flge@ff2+3)^0,w,c
 12453  004EE4  6E36               	movwf	(??___flge+3)^0,c
 12454  004EE6  5033               	movf	??___flge^0,w,c
 12455  004EE8  1034               	iorwf	(??___flge+1)^0,w,c
 12456  004EEA  1035               	iorwf	(??___flge+2)^0,w,c
 12457  004EEC  1036               	iorwf	(??___flge+3)^0,w,c
 12458  004EEE  A4D8               	btfss	status,2,c
 12459  004EF0  EF7C  F027         	goto	u10041
 12460  004EF4  EF7E  F027         	goto	u10040
 12461  004EF8                     u10041:
 12462  004EF8  EF86  F027         	goto	l7948
 12463  004EFC                     u10040:
 12464  004EFC  0E00               	movlw	0
 12465  004EFE  6E2F               	movwf	___flge@ff2^0,c
 12466  004F00  0E00               	movlw	0
 12467  004F02  6E30               	movwf	(___flge@ff2+1)^0,c
 12468  004F04  0E00               	movlw	0
 12469  004F06  6E31               	movwf	(___flge@ff2+2)^0,c
 12470  004F08  0E00               	movlw	0
 12471  004F0A  6E32               	movwf	(___flge@ff2+3)^0,c
 12472  004F0C                     l7948:
 12473  004F0C  AE2E               	btfss	(___flge@ff1+3)^0,7,c
 12474  004F0E  EF8B  F027         	goto	u10051
 12475  004F12  EF8D  F027         	goto	u10050
 12476  004F16                     u10051:
 12477  004F16  EF96  F027         	goto	l7952
 12478  004F1A                     u10050:
 12479  004F1A  6C2B               	negf	___flge@ff1^0,c
 12480  004F1C  1E2C               	comf	(___flge@ff1+1)^0,f,c
 12481  004F1E  B0D8               	btfsc	status,0,c
 12482  004F20  2A2C               	incf	(___flge@ff1+1)^0,f,c
 12483  004F22  1E2D               	comf	(___flge@ff1+2)^0,f,c
 12484  004F24  B0D8               	btfsc	status,0,c
 12485  004F26  2A2D               	incf	(___flge@ff1+2)^0,f,c
 12486  004F28  0E80               	movlw	128
 12487  004F2A  562E               	subfwb	(___flge@ff1+3)^0,f,c
 12488  004F2C                     l7952:
 12489  004F2C  AE32               	btfss	(___flge@ff2+3)^0,7,c
 12490  004F2E  EF9B  F027         	goto	u10061
 12491  004F32  EF9D  F027         	goto	u10060
 12492  004F36                     u10061:
 12493  004F36  EFA6  F027         	goto	l1070
 12494  004F3A                     u10060:
 12495  004F3A  6C2F               	negf	___flge@ff2^0,c
 12496  004F3C  1E30               	comf	(___flge@ff2+1)^0,f,c
 12497  004F3E  B0D8               	btfsc	status,0,c
 12498  004F40  2A30               	incf	(___flge@ff2+1)^0,f,c
 12499  004F42  1E31               	comf	(___flge@ff2+2)^0,f,c
 12500  004F44  B0D8               	btfsc	status,0,c
 12501  004F46  2A31               	incf	(___flge@ff2+2)^0,f,c
 12502  004F48  0E80               	movlw	128
 12503  004F4A  5632               	subfwb	(___flge@ff2+3)^0,f,c
 12504  004F4C                     l1070:
 12505  004F4C  0E00               	movlw	0
 12506  004F4E  1A2B               	xorwf	___flge@ff1^0,f,c
 12507  004F50  0E00               	movlw	0
 12508  004F52  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
 12509  004F54  0E00               	movlw	0
 12510  004F56  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
 12511  004F58  0E80               	movlw	128
 12512  004F5A  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
 12513  004F5C  0E00               	movlw	0
 12514  004F5E  1A2F               	xorwf	___flge@ff2^0,f,c
 12515  004F60  0E00               	movlw	0
 12516  004F62  1A30               	xorwf	(___flge@ff2+1)^0,f,c
 12517  004F64  0E00               	movlw	0
 12518  004F66  1A31               	xorwf	(___flge@ff2+2)^0,f,c
 12519  004F68  0E80               	movlw	128
 12520  004F6A  1A32               	xorwf	(___flge@ff2+3)^0,f,c
 12521  004F6C  502F               	movf	___flge@ff2^0,w,c
 12522  004F6E  5C2B               	subwf	___flge@ff1^0,w,c
 12523  004F70  5030               	movf	(___flge@ff2+1)^0,w,c
 12524  004F72  582C               	subwfb	(___flge@ff1+1)^0,w,c
 12525  004F74  5031               	movf	(___flge@ff2+2)^0,w,c
 12526  004F76  582D               	subwfb	(___flge@ff1+2)^0,w,c
 12527  004F78  5032               	movf	(___flge@ff2+3)^0,w,c
 12528  004F7A  582E               	subwfb	(___flge@ff1+3)^0,w,c
 12529  004F7C  B0D8               	btfsc	status,0,c
 12530  004F7E  EFC3  F027         	goto	u10071
 12531  004F82  EFC5  F027         	goto	u10070
 12532  004F86                     u10071:
 12533  004F86  EFC8  F027         	goto	l7958
 12534  004F8A                     u10070:
 12535  004F8A  90D8               	bcf	status,0,c
 12536  004F8C  EFC9  F027         	goto	l1075
 12537  004F90                     l7958:
 12538  004F90  80D8               	bsf	status,0,c
 12539  004F92                     l1075:
 12540  004F92  0012               	return		;funcret
 12541  004F94                     __end_of___flge:
 12542                           	opt callstack 0
 12543                           
 12544 ;; *************** function ___fleq *****************
 12545 ;; Defined at:
 12546 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  ff1             4    3[COMRAM] unsigned char 
 12549 ;;  ff2             4    7[COMRAM] unsigned char 
 12550 ;; Auto vars:     Size  Location     Type
 12551 ;;		None
 12552 ;; Return value:  Size  Location     Type
 12553 ;;		None               void
 12554 ;; Registers used:
 12555 ;;		wreg, status,2, status,0
 12556 ;; Tracked objects:
 12557 ;;		On entry : 0/0
 12558 ;;		On exit  : 0/0
 12559 ;;		Unchanged: 0/0
 12560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12561 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12564 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12565 ;;Total ram usage:       12 bytes
 12566 ;; Hardware stack levels used:    1
 12567 ;; Hardware stack levels required when called:    4
 12568 ;; This function calls:
 12569 ;;		Nothing
 12570 ;; This function is called by:
 12571 ;;		_efgtoa
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575                           	psect	text27
 12576  005606                     __ptext27:
 12577                           	opt callstack 0
 12578  005606                     ___fleq:
 12579                           	opt callstack 21
 12580  005606  0E00               	movlw	0
 12581  005608  1404               	andwf	___fleq@ff1^0,w,c
 12582  00560A  6E0C               	movwf	??___fleq^0,c
 12583  00560C  0E00               	movlw	0
 12584  00560E  1405               	andwf	(___fleq@ff1+1)^0,w,c
 12585  005610  6E0D               	movwf	(??___fleq+1)^0,c
 12586  005612  0E80               	movlw	128
 12587  005614  1406               	andwf	(___fleq@ff1+2)^0,w,c
 12588  005616  6E0E               	movwf	(??___fleq+2)^0,c
 12589  005618  0E7F               	movlw	127
 12590  00561A  1407               	andwf	(___fleq@ff1+3)^0,w,c
 12591  00561C  6E0F               	movwf	(??___fleq+3)^0,c
 12592  00561E  500C               	movf	??___fleq^0,w,c
 12593  005620  100D               	iorwf	(??___fleq+1)^0,w,c
 12594  005622  100E               	iorwf	(??___fleq+2)^0,w,c
 12595  005624  100F               	iorwf	(??___fleq+3)^0,w,c
 12596  005626  A4D8               	btfss	status,2,c
 12597  005628  EF18  F02B         	goto	u10001
 12598  00562C  EF1A  F02B         	goto	u10000
 12599  005630                     u10001:
 12600  005630  EF22  F02B         	goto	l7928
 12601  005634                     u10000:
 12602  005634  0E00               	movlw	0
 12603  005636  6E04               	movwf	___fleq@ff1^0,c
 12604  005638  0E00               	movlw	0
 12605  00563A  6E05               	movwf	(___fleq@ff1+1)^0,c
 12606  00563C  0E00               	movlw	0
 12607  00563E  6E06               	movwf	(___fleq@ff1+2)^0,c
 12608  005640  0E00               	movlw	0
 12609  005642  6E07               	movwf	(___fleq@ff1+3)^0,c
 12610  005644                     l7928:
 12611  005644  0E00               	movlw	0
 12612  005646  1408               	andwf	___fleq@ff2^0,w,c
 12613  005648  6E0C               	movwf	??___fleq^0,c
 12614  00564A  0E00               	movlw	0
 12615  00564C  1409               	andwf	(___fleq@ff2+1)^0,w,c
 12616  00564E  6E0D               	movwf	(??___fleq+1)^0,c
 12617  005650  0E80               	movlw	128
 12618  005652  140A               	andwf	(___fleq@ff2+2)^0,w,c
 12619  005654  6E0E               	movwf	(??___fleq+2)^0,c
 12620  005656  0E7F               	movlw	127
 12621  005658  140B               	andwf	(___fleq@ff2+3)^0,w,c
 12622  00565A  6E0F               	movwf	(??___fleq+3)^0,c
 12623  00565C  500C               	movf	??___fleq^0,w,c
 12624  00565E  100D               	iorwf	(??___fleq+1)^0,w,c
 12625  005660  100E               	iorwf	(??___fleq+2)^0,w,c
 12626  005662  100F               	iorwf	(??___fleq+3)^0,w,c
 12627  005664  A4D8               	btfss	status,2,c
 12628  005666  EF37  F02B         	goto	u10011
 12629  00566A  EF39  F02B         	goto	u10010
 12630  00566E                     u10011:
 12631  00566E  EF41  F02B         	goto	l7932
 12632  005672                     u10010:
 12633  005672  0E00               	movlw	0
 12634  005674  6E08               	movwf	___fleq@ff2^0,c
 12635  005676  0E00               	movlw	0
 12636  005678  6E09               	movwf	(___fleq@ff2+1)^0,c
 12637  00567A  0E00               	movlw	0
 12638  00567C  6E0A               	movwf	(___fleq@ff2+2)^0,c
 12639  00567E  0E00               	movlw	0
 12640  005680  6E0B               	movwf	(___fleq@ff2+3)^0,c
 12641  005682                     l7932:
 12642  005682  5008               	movf	___fleq@ff2^0,w,c
 12643  005684  1804               	xorwf	___fleq@ff1^0,w,c
 12644  005686  E10F               	bnz	u10020
 12645  005688  5009               	movf	(___fleq@ff2+1)^0,w,c
 12646  00568A  1805               	xorwf	(___fleq@ff1+1)^0,w,c
 12647  00568C  E10C               	bnz	u10020
 12648  00568E  500A               	movf	(___fleq@ff2+2)^0,w,c
 12649  005690  1806               	xorwf	(___fleq@ff1+2)^0,w,c
 12650  005692  E109               	bnz	u10020
 12651  005694  500B               	movf	(___fleq@ff2+3)^0,w,c
 12652  005696  1807               	xorwf	(___fleq@ff1+3)^0,w,c
 12653  005698  B4D8               	btfsc	status,2,c
 12654  00569A  EF51  F02B         	goto	u10021
 12655  00569E  EF53  F02B         	goto	u10020
 12656  0056A2                     u10021:
 12657  0056A2  EF56  F02B         	goto	l7936
 12658  0056A6                     u10020:
 12659  0056A6  90D8               	bcf	status,0,c
 12660  0056A8  EF57  F02B         	goto	l1064
 12661  0056AC                     l7936:
 12662  0056AC  80D8               	bsf	status,0,c
 12663  0056AE                     l1064:
 12664  0056AE  0012               	return		;funcret
 12665  0056B0                     __end_of___fleq:
 12666                           	opt callstack 0
 12667                           
 12668 ;; *************** function ___fldiv *****************
 12669 ;; Defined at:
 12670 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;  b               4   66[COMRAM] unsigned char 
 12673 ;;  a               4   70[COMRAM] unsigned char 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;  grs             4    7[BANK0 ] unsigned long 
 12676 ;;  rem             4    0[BANK0 ] unsigned long 
 12677 ;;  new_exp         2    5[BANK0 ] short 
 12678 ;;  aexp            1   12[BANK0 ] unsigned char 
 12679 ;;  bexp            1   11[BANK0 ] unsigned char 
 12680 ;;  sign            1    4[BANK0 ] unsigned char 
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  4   66[COMRAM] unsigned char 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2, status,0
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12690 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12691 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12693 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12694 ;;Total ram usage:       25 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    4
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_main
 12701 ;;		_efgtoa
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           	psect	text28
 12706  002DD4                     __ptext28:
 12707                           	opt callstack 0
 12708  002DD4                     ___fldiv:
 12709                           	opt callstack 21
 12710  002DD4  5046               	movf	(___fldiv@b+3)^0,w,c
 12711  002DD6  0B80               	andlw	128
 12712  002DD8  0100               	movlb	0	; () banked
 12713  002DDA  6F64               	movwf	___fldiv@sign& (0+255),b
 12714  002DDC  5046               	movf	(___fldiv@b+3)^0,w,c
 12715  002DDE  2446               	addwf	(___fldiv@b+3)^0,w,c
 12716  002DE0  6F6B               	movwf	___fldiv@bexp& (0+255),b
 12717  002DE2                     
 12718                           ; BSR set to: 0
 12719  002DE2  AE45               	btfss	(___fldiv@b+2)^0,7,c
 12720  002DE4  EFF6  F016         	goto	u9461
 12721  002DE8  EFF8  F016         	goto	u9460
 12722  002DEC                     u9461:
 12723  002DEC  EFF9  F016         	goto	l7576
 12724  002DF0                     u9460:
 12725  002DF0                     
 12726                           ; BSR set to: 0
 12727  002DF0  816B               	bsf	___fldiv@bexp& (0+255),0,b
 12728  002DF2                     l7576:
 12729                           
 12730                           ; BSR set to: 0
 12731  002DF2  516B               	movf	___fldiv@bexp& (0+255),w,b
 12732  002DF4  B4D8               	btfsc	status,2,c
 12733  002DF6  EFFF  F016         	goto	u9471
 12734  002DFA  EF01  F017         	goto	u9470
 12735  002DFE                     u9471:
 12736  002DFE  EF16  F017         	goto	l7586
 12737  002E02                     u9470:
 12738  002E02                     
 12739                           ; BSR set to: 0
 12740  002E02  296B               	incf	___fldiv@bexp& (0+255),w,b
 12741  002E04  A4D8               	btfss	status,2,c
 12742  002E06  EF07  F017         	goto	u9481
 12743  002E0A  EF09  F017         	goto	u9480
 12744  002E0E                     u9481:
 12745  002E0E  EF11  F017         	goto	l7582
 12746  002E12                     u9480:
 12747  002E12                     
 12748                           ; BSR set to: 0
 12749  002E12  0E00               	movlw	0
 12750  002E14  6E43               	movwf	___fldiv@b^0,c
 12751  002E16  0E00               	movlw	0
 12752  002E18  6E44               	movwf	(___fldiv@b+1)^0,c
 12753  002E1A  0E00               	movlw	0
 12754  002E1C  6E45               	movwf	(___fldiv@b+2)^0,c
 12755  002E1E  0E00               	movlw	0
 12756  002E20  6E46               	movwf	(___fldiv@b+3)^0,c
 12757  002E22                     l7582:
 12758                           
 12759                           ; BSR set to: 0
 12760  002E22  8E45               	bsf	(___fldiv@b+2)^0,7,c
 12761  002E24                     
 12762                           ; BSR set to: 0
 12763  002E24  0E00               	movlw	0
 12764  002E26  6E46               	movwf	(___fldiv@b+3)^0,c
 12765  002E28  EF1E  F017         	goto	l7588
 12766  002E2C                     l7586:
 12767                           
 12768                           ; BSR set to: 0
 12769  002E2C  0E00               	movlw	0
 12770  002E2E  6E43               	movwf	___fldiv@b^0,c
 12771  002E30  0E00               	movlw	0
 12772  002E32  6E44               	movwf	(___fldiv@b+1)^0,c
 12773  002E34  0E00               	movlw	0
 12774  002E36  6E45               	movwf	(___fldiv@b+2)^0,c
 12775  002E38  0E00               	movlw	0
 12776  002E3A  6E46               	movwf	(___fldiv@b+3)^0,c
 12777  002E3C                     l7588:
 12778                           
 12779                           ; BSR set to: 0
 12780  002E3C  504A               	movf	(___fldiv@a+3)^0,w,c
 12781  002E3E  0B80               	andlw	128
 12782  002E40  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 12783  002E42                     
 12784                           ; BSR set to: 0
 12785  002E42  504A               	movf	(___fldiv@a+3)^0,w,c
 12786  002E44  244A               	addwf	(___fldiv@a+3)^0,w,c
 12787  002E46  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12788  002E48                     
 12789                           ; BSR set to: 0
 12790  002E48  AE49               	btfss	(___fldiv@a+2)^0,7,c
 12791  002E4A  EF29  F017         	goto	u9491
 12792  002E4E  EF2B  F017         	goto	u9490
 12793  002E52                     u9491:
 12794  002E52  EF2C  F017         	goto	l7596
 12795  002E56                     u9490:
 12796  002E56                     
 12797                           ; BSR set to: 0
 12798  002E56  816C               	bsf	___fldiv@aexp& (0+255),0,b
 12799  002E58                     l7596:
 12800                           
 12801                           ; BSR set to: 0
 12802  002E58  516C               	movf	___fldiv@aexp& (0+255),w,b
 12803  002E5A  B4D8               	btfsc	status,2,c
 12804  002E5C  EF32  F017         	goto	u9501
 12805  002E60  EF34  F017         	goto	u9500
 12806  002E64                     u9501:
 12807  002E64  EF49  F017         	goto	l7606
 12808  002E68                     u9500:
 12809  002E68                     
 12810                           ; BSR set to: 0
 12811  002E68  296C               	incf	___fldiv@aexp& (0+255),w,b
 12812  002E6A  A4D8               	btfss	status,2,c
 12813  002E6C  EF3A  F017         	goto	u9511
 12814  002E70  EF3C  F017         	goto	u9510
 12815  002E74                     u9511:
 12816  002E74  EF44  F017         	goto	l7602
 12817  002E78                     u9510:
 12818  002E78                     
 12819                           ; BSR set to: 0
 12820  002E78  0E00               	movlw	0
 12821  002E7A  6E47               	movwf	___fldiv@a^0,c
 12822  002E7C  0E00               	movlw	0
 12823  002E7E  6E48               	movwf	(___fldiv@a+1)^0,c
 12824  002E80  0E00               	movlw	0
 12825  002E82  6E49               	movwf	(___fldiv@a+2)^0,c
 12826  002E84  0E00               	movlw	0
 12827  002E86  6E4A               	movwf	(___fldiv@a+3)^0,c
 12828  002E88                     l7602:
 12829                           
 12830                           ; BSR set to: 0
 12831  002E88  8E49               	bsf	(___fldiv@a+2)^0,7,c
 12832  002E8A                     
 12833                           ; BSR set to: 0
 12834  002E8A  0E00               	movlw	0
 12835  002E8C  6E4A               	movwf	(___fldiv@a+3)^0,c
 12836  002E8E  EF51  F017         	goto	l7608
 12837  002E92                     l7606:
 12838                           
 12839                           ; BSR set to: 0
 12840  002E92  0E00               	movlw	0
 12841  002E94  6E47               	movwf	___fldiv@a^0,c
 12842  002E96  0E00               	movlw	0
 12843  002E98  6E48               	movwf	(___fldiv@a+1)^0,c
 12844  002E9A  0E00               	movlw	0
 12845  002E9C  6E49               	movwf	(___fldiv@a+2)^0,c
 12846  002E9E  0E00               	movlw	0
 12847  002EA0  6E4A               	movwf	(___fldiv@a+3)^0,c
 12848  002EA2                     l7608:
 12849                           
 12850                           ; BSR set to: 0
 12851  002EA2  5047               	movf	___fldiv@a^0,w,c
 12852  002EA4  1048               	iorwf	(___fldiv@a+1)^0,w,c
 12853  002EA6  1049               	iorwf	(___fldiv@a+2)^0,w,c
 12854  002EA8  104A               	iorwf	(___fldiv@a+3)^0,w,c
 12855  002EAA  A4D8               	btfss	status,2,c
 12856  002EAC  EF5A  F017         	goto	u9521
 12857  002EB0  EF5C  F017         	goto	u9520
 12858  002EB4                     u9521:
 12859  002EB4  EF74  F017         	goto	l7620
 12860  002EB8                     u9520:
 12861  002EB8                     
 12862                           ; BSR set to: 0
 12863  002EB8  0E00               	movlw	0
 12864  002EBA  6E43               	movwf	___fldiv@b^0,c
 12865  002EBC  0E00               	movlw	0
 12866  002EBE  6E44               	movwf	(___fldiv@b+1)^0,c
 12867  002EC0  0E00               	movlw	0
 12868  002EC2  6E45               	movwf	(___fldiv@b+2)^0,c
 12869  002EC4  0E00               	movlw	0
 12870  002EC6  6E46               	movwf	(___fldiv@b+3)^0,c
 12871  002EC8                     
 12872                           ; BSR set to: 0
 12873  002EC8  0E80               	movlw	128
 12874  002ECA  1245               	iorwf	(___fldiv@b+2)^0,f,c
 12875  002ECC  0E7F               	movlw	127
 12876  002ECE  1246               	iorwf	(___fldiv@b+3)^0,f,c
 12877  002ED0                     l7614:
 12878                           
 12879                           ; BSR set to: 0
 12880  002ED0  5164               	movf	___fldiv@sign& (0+255),w,b
 12881  002ED2  1246               	iorwf	(___fldiv@b+3)^0,f,c
 12882  002ED4                     
 12883                           ; BSR set to: 0
 12884  002ED4  C043  F043         	movff	___fldiv@b,?___fldiv
 12885  002ED8  C044  F044         	movff	___fldiv@b+1,?___fldiv+1
 12886  002EDC  C045  F045         	movff	___fldiv@b+2,?___fldiv+2
 12887  002EE0  C046  F046         	movff	___fldiv@b+3,?___fldiv+3
 12888  002EE4  EFB7  F018         	goto	l1387
 12889  002EE8                     l7620:
 12890                           
 12891                           ; BSR set to: 0
 12892  002EE8  516B               	movf	___fldiv@bexp& (0+255),w,b
 12893  002EEA  A4D8               	btfss	status,2,c
 12894  002EEC  EF7A  F017         	goto	u9531
 12895  002EF0  EF7C  F017         	goto	u9530
 12896  002EF4                     u9531:
 12897  002EF4  EF86  F017         	goto	l7628
 12898  002EF8                     u9530:
 12899  002EF8                     
 12900                           ; BSR set to: 0
 12901  002EF8  0E00               	movlw	0
 12902  002EFA  6E43               	movwf	?___fldiv^0,c
 12903  002EFC  0E00               	movlw	0
 12904  002EFE  6E44               	movwf	(?___fldiv+1)^0,c
 12905  002F00  0E00               	movlw	0
 12906  002F02  6E45               	movwf	(?___fldiv+2)^0,c
 12907  002F04  0E00               	movlw	0
 12908  002F06  6E46               	movwf	(?___fldiv+3)^0,c
 12909  002F08  EFB7  F018         	goto	l1387
 12910  002F0C                     l7628:
 12911                           
 12912                           ; BSR set to: 0
 12913  002F0C  516C               	movf	___fldiv@aexp& (0+255),w,b
 12914  002F0E  C06B  F04B         	movff	___fldiv@bexp,??___fldiv
 12915  002F12  6A4C               	clrf	(??___fldiv+1)^0,c
 12916  002F14  5E4B               	subwf	??___fldiv^0,f,c
 12917  002F16  0E00               	movlw	0
 12918  002F18  5A4C               	subwfb	(??___fldiv+1)^0,f,c
 12919  002F1A  0E7F               	movlw	127
 12920  002F1C  244B               	addwf	??___fldiv^0,w,c
 12921  002F1E  6F65               	movwf	___fldiv@new_exp& (0+255),b
 12922  002F20  0E00               	movlw	0
 12923  002F22  204C               	addwfc	(??___fldiv+1)^0,w,c
 12924  002F24  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12925  002F26                     
 12926                           ; BSR set to: 0
 12927  002F26  C043  F060         	movff	___fldiv@b,___fldiv@rem
 12928  002F2A  C044  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 12929  002F2E  C045  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 12930  002F32  C046  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 12931  002F36                     
 12932                           ; BSR set to: 0
 12933  002F36  0E00               	movlw	0
 12934  002F38  6E43               	movwf	___fldiv@b^0,c
 12935  002F3A  0E00               	movlw	0
 12936  002F3C  6E44               	movwf	(___fldiv@b+1)^0,c
 12937  002F3E  0E00               	movlw	0
 12938  002F40  6E45               	movwf	(___fldiv@b+2)^0,c
 12939  002F42  0E00               	movlw	0
 12940  002F44  6E46               	movwf	(___fldiv@b+3)^0,c
 12941  002F46                     
 12942                           ; BSR set to: 0
 12943  002F46  0E00               	movlw	0
 12944  002F48  6F67               	movwf	___fldiv@grs& (0+255),b
 12945  002F4A  0E00               	movlw	0
 12946  002F4C  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 12947  002F4E  0E00               	movlw	0
 12948  002F50  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 12949  002F52  0E00               	movlw	0
 12950  002F54  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 12951  002F56                     
 12952                           ; BSR set to: 0
 12953  002F56  0E00               	movlw	0
 12954  002F58  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12955  002F5A  EFE7  F017         	goto	l1389
 12956  002F5E                     l7638:
 12957                           
 12958                           ; BSR set to: 0
 12959  002F5E  516C               	movf	___fldiv@aexp& (0+255),w,b
 12960  002F60  B4D8               	btfsc	status,2,c
 12961  002F62  EFB5  F017         	goto	u9541
 12962  002F66  EFB7  F017         	goto	u9540
 12963  002F6A                     u9541:
 12964  002F6A  EFCE  F017         	goto	l7646
 12965  002F6E                     u9540:
 12966  002F6E                     
 12967                           ; BSR set to: 0
 12968  002F6E  90D8               	bcf	status,0,c
 12969  002F70  3760               	rlcf	___fldiv@rem& (0+255),f,b
 12970  002F72  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12971  002F74  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12972  002F76  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12973  002F78  90D8               	bcf	status,0,c
 12974  002F7A  3643               	rlcf	___fldiv@b^0,f,c
 12975  002F7C  3644               	rlcf	(___fldiv@b+1)^0,f,c
 12976  002F7E  3645               	rlcf	(___fldiv@b+2)^0,f,c
 12977  002F80  3646               	rlcf	(___fldiv@b+3)^0,f,c
 12978  002F82                     
 12979                           ; BSR set to: 0
 12980  002F82  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12981  002F84  EFC6  F017         	goto	u9551
 12982  002F88  EFC8  F017         	goto	u9550
 12983  002F8C                     u9551:
 12984  002F8C  EFC9  F017         	goto	l1392
 12985  002F90                     u9550:
 12986  002F90                     
 12987                           ; BSR set to: 0
 12988  002F90  8043               	bsf	___fldiv@b^0,0,c
 12989  002F92                     l1392:
 12990                           
 12991                           ; BSR set to: 0
 12992  002F92  90D8               	bcf	status,0,c
 12993  002F94  3767               	rlcf	___fldiv@grs& (0+255),f,b
 12994  002F96  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12995  002F98  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12996  002F9A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12997  002F9C                     l7646:
 12998                           
 12999                           ; BSR set to: 0
 13000  002F9C  5047               	movf	___fldiv@a^0,w,c
 13001  002F9E  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13002  002FA0  5048               	movf	(___fldiv@a+1)^0,w,c
 13003  002FA2  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13004  002FA4  5049               	movf	(___fldiv@a+2)^0,w,c
 13005  002FA6  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13006  002FA8  504A               	movf	(___fldiv@a+3)^0,w,c
 13007  002FAA  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13008  002FAC  A0D8               	btfss	status,0,c
 13009  002FAE  EFDB  F017         	goto	u9561
 13010  002FB2  EFDD  F017         	goto	u9560
 13011  002FB6                     u9561:
 13012  002FB6  EFE6  F017         	goto	l7652
 13013  002FBA                     u9560:
 13014  002FBA                     
 13015                           ; BSR set to: 0
 13016  002FBA  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13017  002FBC                     
 13018                           ; BSR set to: 0
 13019  002FBC  5047               	movf	___fldiv@a^0,w,c
 13020  002FBE  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13021  002FC0  5048               	movf	(___fldiv@a+1)^0,w,c
 13022  002FC2  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13023  002FC4  5049               	movf	(___fldiv@a+2)^0,w,c
 13024  002FC6  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13025  002FC8  504A               	movf	(___fldiv@a+3)^0,w,c
 13026  002FCA  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13027  002FCC                     l7652:
 13028                           
 13029                           ; BSR set to: 0
 13030  002FCC  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13031  002FCE                     l1389:
 13032                           
 13033                           ; BSR set to: 0
 13034  002FCE  0E19               	movlw	25
 13035  002FD0  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13036  002FD2  EFED  F017         	goto	u9571
 13037  002FD6  EFEF  F017         	goto	u9570
 13038  002FDA                     u9571:
 13039  002FDA  EFAF  F017         	goto	l7638
 13040  002FDE                     u9570:
 13041  002FDE                     
 13042                           ; BSR set to: 0
 13043  002FDE  5160               	movf	___fldiv@rem& (0+255),w,b
 13044  002FE0  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13045  002FE2  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13046  002FE4  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13047  002FE6  B4D8               	btfsc	status,2,c
 13048  002FE8  EFF8  F017         	goto	u9581
 13049  002FEC  EFFA  F017         	goto	u9580
 13050  002FF0                     u9581:
 13051  002FF0  EF12  F018         	goto	l7664
 13052  002FF4                     u9580:
 13053  002FF4                     
 13054                           ; BSR set to: 0
 13055  002FF4  8167               	bsf	___fldiv@grs& (0+255),0,b
 13056  002FF6  EF12  F018         	goto	l7664
 13057  002FFA                     l7658:
 13058                           
 13059                           ; BSR set to: 0
 13060  002FFA  90D8               	bcf	status,0,c
 13061  002FFC  3643               	rlcf	___fldiv@b^0,f,c
 13062  002FFE  3644               	rlcf	(___fldiv@b+1)^0,f,c
 13063  003000  3645               	rlcf	(___fldiv@b+2)^0,f,c
 13064  003002  3646               	rlcf	(___fldiv@b+3)^0,f,c
 13065  003004                     
 13066                           ; BSR set to: 0
 13067  003004  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13068  003006  EF07  F018         	goto	u9591
 13069  00300A  EF09  F018         	goto	u9590
 13070  00300E                     u9591:
 13071  00300E  EF0A  F018         	goto	l1398
 13072  003012                     u9590:
 13073  003012                     
 13074                           ; BSR set to: 0
 13075  003012  8043               	bsf	___fldiv@b^0,0,c
 13076  003014                     l1398:
 13077                           
 13078                           ; BSR set to: 0
 13079  003014  90D8               	bcf	status,0,c
 13080  003016  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13081  003018  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13082  00301A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13083  00301C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13084  00301E  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13085  003020  A0D8               	btfss	status,0,c
 13086  003022  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13087  003024                     l7664:
 13088                           
 13089                           ; BSR set to: 0
 13090  003024  AE45               	btfss	(___fldiv@b+2)^0,7,c
 13091  003026  EF17  F018         	goto	u9601
 13092  00302A  EF19  F018         	goto	u9600
 13093  00302E                     u9601:
 13094  00302E  EFFD  F017         	goto	l7658
 13095  003032                     u9600:
 13096  003032                     
 13097                           ; BSR set to: 0
 13098  003032  0E00               	movlw	0
 13099  003034  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13100  003036                     
 13101                           ; BSR set to: 0
 13102  003036  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13103  003038  EF20  F018         	goto	u9611
 13104  00303C  EF22  F018         	goto	u9610
 13105  003040                     u9611:
 13106  003040  EF46  F018         	goto	l1400
 13107  003044                     u9610:
 13108  003044                     
 13109                           ; BSR set to: 0
 13110  003044  0EFF               	movlw	255
 13111  003046  1567               	andwf	___fldiv@grs& (0+255),w,b
 13112  003048  6E4B               	movwf	??___fldiv^0,c
 13113  00304A  0EFF               	movlw	255
 13114  00304C  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13115  00304E  6E4C               	movwf	(??___fldiv+1)^0,c
 13116  003050  0EFF               	movlw	255
 13117  003052  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13118  003054  6E4D               	movwf	(??___fldiv+2)^0,c
 13119  003056  0E7F               	movlw	127
 13120  003058  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13121  00305A  6E4E               	movwf	(??___fldiv+3)^0,c
 13122  00305C  504B               	movf	??___fldiv^0,w,c
 13123  00305E  104C               	iorwf	(??___fldiv+1)^0,w,c
 13124  003060  104D               	iorwf	(??___fldiv+2)^0,w,c
 13125  003062  104E               	iorwf	(??___fldiv+3)^0,w,c
 13126  003064  B4D8               	btfsc	status,2,c
 13127  003066  EF37  F018         	goto	u9621
 13128  00306A  EF39  F018         	goto	u9620
 13129  00306E                     u9621:
 13130  00306E  EF3D  F018         	goto	l1401
 13131  003072                     u9620:
 13132  003072                     l7672:
 13133                           
 13134                           ; BSR set to: 0
 13135  003072  0E01               	movlw	1
 13136  003074  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13137  003076  EF46  F018         	goto	l1400
 13138  00307A                     l1401:
 13139                           
 13140                           ; BSR set to: 0
 13141  00307A  A043               	btfss	___fldiv@b^0,0,c
 13142  00307C  EF42  F018         	goto	u9631
 13143  003080  EF44  F018         	goto	u9630
 13144  003084                     u9631:
 13145  003084  EF46  F018         	goto	l1400
 13146  003088                     u9630:
 13147  003088  EF39  F018         	goto	l7672
 13148  00308C                     l1400:
 13149                           
 13150                           ; BSR set to: 0
 13151  00308C  516C               	movf	___fldiv@aexp& (0+255),w,b
 13152  00308E  B4D8               	btfsc	status,2,c
 13153  003090  EF4C  F018         	goto	u9641
 13154  003094  EF4E  F018         	goto	u9640
 13155  003098                     u9641:
 13156  003098  EF72  F018         	goto	l7684
 13157  00309C                     u9640:
 13158  00309C                     
 13159                           ; BSR set to: 0
 13160  00309C  0E01               	movlw	1
 13161  00309E  2643               	addwf	___fldiv@b^0,f,c
 13162  0030A0  0E00               	movlw	0
 13163  0030A2  2244               	addwfc	(___fldiv@b+1)^0,f,c
 13164  0030A4  2245               	addwfc	(___fldiv@b+2)^0,f,c
 13165  0030A6  2246               	addwfc	(___fldiv@b+3)^0,f,c
 13166  0030A8                     
 13167                           ; BSR set to: 0
 13168  0030A8  A046               	btfss	(___fldiv@b+3)^0,0,c
 13169  0030AA  EF59  F018         	goto	u9651
 13170  0030AE  EF5B  F018         	goto	u9650
 13171  0030B2                     u9651:
 13172  0030B2  EF72  F018         	goto	l7684
 13173  0030B6                     u9650:
 13174  0030B6                     
 13175                           ; BSR set to: 0
 13176  0030B6  C043  F04B         	movff	___fldiv@b,??___fldiv
 13177  0030BA  C044  F04C         	movff	___fldiv@b+1,??___fldiv+1
 13178  0030BE  C045  F04D         	movff	___fldiv@b+2,??___fldiv+2
 13179  0030C2  C046  F04E         	movff	___fldiv@b+3,??___fldiv+3
 13180  0030C6  344E               	rlcf	(??___fldiv+3)^0,w,c
 13181  0030C8  324E               	rrcf	(??___fldiv+3)^0,f,c
 13182  0030CA  324D               	rrcf	(??___fldiv+2)^0,f,c
 13183  0030CC  324C               	rrcf	(??___fldiv+1)^0,f,c
 13184  0030CE  324B               	rrcf	??___fldiv^0,f,c
 13185  0030D0  C04B  F043         	movff	??___fldiv,___fldiv@b
 13186  0030D4  C04C  F044         	movff	??___fldiv+1,___fldiv@b+1
 13187  0030D8  C04D  F045         	movff	??___fldiv+2,___fldiv@b+2
 13188  0030DC  C04E  F046         	movff	??___fldiv+3,___fldiv@b+3
 13189  0030E0                     
 13190                           ; BSR set to: 0
 13191  0030E0  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13192  0030E2  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13193  0030E4                     l7684:
 13194                           
 13195                           ; BSR set to: 0
 13196  0030E4  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13197  0030E6  EF7D  F018         	goto	u9661
 13198  0030EA  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13199  0030EC  E108               	bnz	u9660
 13200  0030EE  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13201  0030F0  A0D8               	btfss	status,0,c
 13202  0030F2  EF7D  F018         	goto	u9661
 13203  0030F6  EF7F  F018         	goto	u9660
 13204  0030FA                     u9661:
 13205  0030FA  EF8A  F018         	goto	l7688
 13206  0030FE                     u9660:
 13207  0030FE                     
 13208                           ; BSR set to: 0
 13209  0030FE  0E00               	movlw	0
 13210  003100  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13211  003102  6965               	setf	___fldiv@new_exp& (0+255),b
 13212  003104  0E00               	movlw	0
 13213  003106  6E43               	movwf	___fldiv@b^0,c
 13214  003108  0E00               	movlw	0
 13215  00310A  6E44               	movwf	(___fldiv@b+1)^0,c
 13216  00310C  0E00               	movlw	0
 13217  00310E  6E45               	movwf	(___fldiv@b+2)^0,c
 13218  003110  0E00               	movlw	0
 13219  003112  6E46               	movwf	(___fldiv@b+3)^0,c
 13220  003114                     l7688:
 13221                           
 13222                           ; BSR set to: 0
 13223  003114  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13224  003116  EF97  F018         	goto	u9670
 13225  00311A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13226  00311C  E106               	bnz	u9671
 13227  00311E  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13228  003120  B0D8               	btfsc	status,0,c
 13229  003122  EF95  F018         	goto	u9671
 13230  003126  EF97  F018         	goto	u9670
 13231  00312A                     u9671:
 13232  00312A  EFA5  F018         	goto	l7692
 13233  00312E                     u9670:
 13234  00312E                     
 13235                           ; BSR set to: 0
 13236  00312E  0E00               	movlw	0
 13237  003130  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13238  003132  0E00               	movlw	0
 13239  003134  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13240  003136  0E00               	movlw	0
 13241  003138  6E43               	movwf	___fldiv@b^0,c
 13242  00313A  0E00               	movlw	0
 13243  00313C  6E44               	movwf	(___fldiv@b+1)^0,c
 13244  00313E  0E00               	movlw	0
 13245  003140  6E45               	movwf	(___fldiv@b+2)^0,c
 13246  003142  0E00               	movlw	0
 13247  003144  6E46               	movwf	(___fldiv@b+3)^0,c
 13248  003146  0E00               	movlw	0
 13249  003148  6F64               	movwf	___fldiv@sign& (0+255),b
 13250  00314A                     l7692:
 13251                           
 13252                           ; BSR set to: 0
 13253  00314A  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13254  00314E                     
 13255                           ; BSR set to: 0
 13256  00314E  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13257  003150  EFAC  F018         	goto	u9681
 13258  003154  EFAE  F018         	goto	u9680
 13259  003158                     u9681:
 13260  003158  EFB1  F018         	goto	l7698
 13261  00315C                     u9680:
 13262  00315C                     
 13263                           ; BSR set to: 0
 13264  00315C  8E45               	bsf	(___fldiv@b+2)^0,7,c
 13265  00315E  EFB2  F018         	goto	l7700
 13266  003162                     l7698:
 13267                           
 13268                           ; BSR set to: 0
 13269  003162  9E45               	bcf	(___fldiv@b+2)^0,7,c
 13270  003164                     l7700:
 13271                           
 13272                           ; BSR set to: 0
 13273  003164  90D8               	bcf	status,0,c
 13274  003166  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13275  003168  6E46               	movwf	(___fldiv@b+3)^0,c
 13276  00316A  EF68  F017         	goto	l7614
 13277  00316E                     l1387:
 13278                           
 13279                           ; BSR set to: 0
 13280  00316E  0012               	return		;funcret
 13281  003170                     __end_of___fldiv:
 13282                           	opt callstack 0
 13283                           
 13284 ;; *************** function ___awmod *****************
 13285 ;; Defined at:
 13286 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13287 ;; Parameters:    Size  Location     Type
 13288 ;;  dividend        2    3[COMRAM] int 
 13289 ;;  divisor         2    5[COMRAM] int 
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;  sign            1    8[COMRAM] unsigned char 
 13292 ;;  counter         1    7[COMRAM] unsigned char 
 13293 ;; Return value:  Size  Location     Type
 13294 ;;                  2    3[COMRAM] int 
 13295 ;; Registers used:
 13296 ;;		wreg, status,2, status,0
 13297 ;; Tracked objects:
 13298 ;;		On entry : 0/0
 13299 ;;		On exit  : 0/0
 13300 ;;		Unchanged: 0/0
 13301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13306 ;;Total ram usage:        6 bytes
 13307 ;; Hardware stack levels used:    1
 13308 ;; Hardware stack levels required when called:    4
 13309 ;; This function calls:
 13310 ;;		Nothing
 13311 ;; This function is called by:
 13312 ;;		_efgtoa
 13313 ;; This function uses a non-reentrant model
 13314 ;;
 13315                           
 13316                           	psect	text29
 13317  0054A6                     __ptext29:
 13318                           	opt callstack 0
 13319  0054A6                     ___awmod:
 13320                           	opt callstack 21
 13321  0054A6  0E00               	movlw	0
 13322  0054A8  6E09               	movwf	___awmod@sign^0,c
 13323  0054AA  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
 13324  0054AC  EF5C  F02A         	goto	u9940
 13325  0054B0  EF5A  F02A         	goto	u9941
 13326  0054B4                     u9941:
 13327  0054B4  EF62  F02A         	goto	l7896
 13328  0054B8                     u9940:
 13329  0054B8  6C04               	negf	___awmod@dividend^0,c
 13330  0054BA  1E05               	comf	(___awmod@dividend+1)^0,f,c
 13331  0054BC  B0D8               	btfsc	status,0,c
 13332  0054BE  2A05               	incf	(___awmod@dividend+1)^0,f,c
 13333  0054C0  0E01               	movlw	1
 13334  0054C2  6E09               	movwf	___awmod@sign^0,c
 13335  0054C4                     l7896:
 13336  0054C4  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
 13337  0054C6  EF69  F02A         	goto	u9950
 13338  0054CA  EF67  F02A         	goto	u9951
 13339  0054CE                     u9951:
 13340  0054CE  EF6D  F02A         	goto	l7900
 13341  0054D2                     u9950:
 13342  0054D2  6C06               	negf	___awmod@divisor^0,c
 13343  0054D4  1E07               	comf	(___awmod@divisor+1)^0,f,c
 13344  0054D6  B0D8               	btfsc	status,0,c
 13345  0054D8  2A07               	incf	(___awmod@divisor+1)^0,f,c
 13346  0054DA                     l7900:
 13347  0054DA  5006               	movf	___awmod@divisor^0,w,c
 13348  0054DC  1007               	iorwf	(___awmod@divisor+1)^0,w,c
 13349  0054DE  B4D8               	btfsc	status,2,c
 13350  0054E0  EF74  F02A         	goto	u9961
 13351  0054E4  EF76  F02A         	goto	u9960
 13352  0054E8                     u9961:
 13353  0054E8  EF9A  F02A         	goto	l7916
 13354  0054EC                     u9960:
 13355  0054EC  0E01               	movlw	1
 13356  0054EE  6E08               	movwf	___awmod@counter^0,c
 13357  0054F0  EF7E  F02A         	goto	l7906
 13358  0054F4                     l7904:
 13359  0054F4  90D8               	bcf	status,0,c
 13360  0054F6  3606               	rlcf	___awmod@divisor^0,f,c
 13361  0054F8  3607               	rlcf	(___awmod@divisor+1)^0,f,c
 13362  0054FA  2A08               	incf	___awmod@counter^0,f,c
 13363  0054FC                     l7906:
 13364  0054FC  AE07               	btfss	(___awmod@divisor+1)^0,7,c
 13365  0054FE  EF83  F02A         	goto	u9971
 13366  005502  EF85  F02A         	goto	u9970
 13367  005506                     u9971:
 13368  005506  EF7A  F02A         	goto	l7904
 13369  00550A                     u9970:
 13370  00550A                     l7908:
 13371  00550A  5006               	movf	___awmod@divisor^0,w,c
 13372  00550C  5C04               	subwf	___awmod@dividend^0,w,c
 13373  00550E  5007               	movf	(___awmod@divisor+1)^0,w,c
 13374  005510  5805               	subwfb	(___awmod@dividend+1)^0,w,c
 13375  005512  A0D8               	btfss	status,0,c
 13376  005514  EF8E  F02A         	goto	u9981
 13377  005518  EF90  F02A         	goto	u9980
 13378  00551C                     u9981:
 13379  00551C  EF94  F02A         	goto	l7912
 13380  005520                     u9980:
 13381  005520  5006               	movf	___awmod@divisor^0,w,c
 13382  005522  5E04               	subwf	___awmod@dividend^0,f,c
 13383  005524  5007               	movf	(___awmod@divisor+1)^0,w,c
 13384  005526  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
 13385  005528                     l7912:
 13386  005528  90D8               	bcf	status,0,c
 13387  00552A  3207               	rrcf	(___awmod@divisor+1)^0,f,c
 13388  00552C  3206               	rrcf	___awmod@divisor^0,f,c
 13389  00552E  2E08               	decfsz	___awmod@counter^0,f,c
 13390  005530  EF85  F02A         	goto	l7908
 13391  005534                     l7916:
 13392  005534  5009               	movf	___awmod@sign^0,w,c
 13393  005536  B4D8               	btfsc	status,2,c
 13394  005538  EFA0  F02A         	goto	u9991
 13395  00553C  EFA2  F02A         	goto	u9990
 13396  005540                     u9991:
 13397  005540  EFA6  F02A         	goto	l7920
 13398  005544                     u9990:
 13399  005544  6C04               	negf	___awmod@dividend^0,c
 13400  005546  1E05               	comf	(___awmod@dividend+1)^0,f,c
 13401  005548  B0D8               	btfsc	status,0,c
 13402  00554A  2A05               	incf	(___awmod@dividend+1)^0,f,c
 13403  00554C                     l7920:
 13404  00554C  C004  F004         	movff	___awmod@dividend,?___awmod
 13405  005550  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
 13406  005554  0012               	return		;funcret
 13407  005556                     __end_of___awmod:
 13408                           	opt callstack 0
 13409                           
 13410 ;; *************** function ___awdiv *****************
 13411 ;; Defined at:
 13412 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;  dividend        2    3[COMRAM] int 
 13415 ;;  divisor         2    5[COMRAM] int 
 13416 ;; Auto vars:     Size  Location     Type
 13417 ;;  quotient        2    9[COMRAM] int 
 13418 ;;  sign            1    8[COMRAM] unsigned char 
 13419 ;;  counter         1    7[COMRAM] unsigned char 
 13420 ;; Return value:  Size  Location     Type
 13421 ;;                  2    3[COMRAM] int 
 13422 ;; Registers used:
 13423 ;;		wreg, status,2, status,0
 13424 ;; Tracked objects:
 13425 ;;		On entry : 0/0
 13426 ;;		On exit  : 0/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13430 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13432 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13433 ;;Total ram usage:        8 bytes
 13434 ;; Hardware stack levels used:    1
 13435 ;; Hardware stack levels required when called:    4
 13436 ;; This function calls:
 13437 ;;		Nothing
 13438 ;; This function is called by:
 13439 ;;		_efgtoa
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text30
 13444  0053E2                     __ptext30:
 13445                           	opt callstack 0
 13446  0053E2                     ___awdiv:
 13447                           	opt callstack 21
 13448  0053E2  0E00               	movlw	0
 13449  0053E4  6E09               	movwf	___awdiv@sign^0,c
 13450  0053E6  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
 13451  0053E8  EFFA  F029         	goto	u9880
 13452  0053EC  EFF8  F029         	goto	u9881
 13453  0053F0                     u9881:
 13454  0053F0  EF00  F02A         	goto	l7852
 13455  0053F4                     u9880:
 13456  0053F4  6C06               	negf	___awdiv@divisor^0,c
 13457  0053F6  1E07               	comf	(___awdiv@divisor+1)^0,f,c
 13458  0053F8  B0D8               	btfsc	status,0,c
 13459  0053FA  2A07               	incf	(___awdiv@divisor+1)^0,f,c
 13460  0053FC  0E01               	movlw	1
 13461  0053FE  6E09               	movwf	___awdiv@sign^0,c
 13462  005400                     l7852:
 13463  005400  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
 13464  005402  EF07  F02A         	goto	u9890
 13465  005406  EF05  F02A         	goto	u9891
 13466  00540A                     u9891:
 13467  00540A  EF0D  F02A         	goto	l7858
 13468  00540E                     u9890:
 13469  00540E  6C04               	negf	___awdiv@dividend^0,c
 13470  005410  1E05               	comf	(___awdiv@dividend+1)^0,f,c
 13471  005412  B0D8               	btfsc	status,0,c
 13472  005414  2A05               	incf	(___awdiv@dividend+1)^0,f,c
 13473  005416  0E01               	movlw	1
 13474  005418  1A09               	xorwf	___awdiv@sign^0,f,c
 13475  00541A                     l7858:
 13476  00541A  0E00               	movlw	0
 13477  00541C  6E0B               	movwf	(___awdiv@quotient+1)^0,c
 13478  00541E  0E00               	movlw	0
 13479  005420  6E0A               	movwf	___awdiv@quotient^0,c
 13480  005422  5006               	movf	___awdiv@divisor^0,w,c
 13481  005424  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
 13482  005426  B4D8               	btfsc	status,2,c
 13483  005428  EF18  F02A         	goto	u9901
 13484  00542C  EF1A  F02A         	goto	u9900
 13485  005430                     u9901:
 13486  005430  EF42  F02A         	goto	l7880
 13487  005434                     u9900:
 13488  005434  0E01               	movlw	1
 13489  005436  6E08               	movwf	___awdiv@counter^0,c
 13490  005438  EF22  F02A         	goto	l7866
 13491  00543C                     l7864:
 13492  00543C  90D8               	bcf	status,0,c
 13493  00543E  3606               	rlcf	___awdiv@divisor^0,f,c
 13494  005440  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
 13495  005442  2A08               	incf	___awdiv@counter^0,f,c
 13496  005444                     l7866:
 13497  005444  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
 13498  005446  EF27  F02A         	goto	u9911
 13499  00544A  EF29  F02A         	goto	u9910
 13500  00544E                     u9911:
 13501  00544E  EF1E  F02A         	goto	l7864
 13502  005452                     u9910:
 13503  005452                     l7868:
 13504  005452  90D8               	bcf	status,0,c
 13505  005454  360A               	rlcf	___awdiv@quotient^0,f,c
 13506  005456  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13507  005458  5006               	movf	___awdiv@divisor^0,w,c
 13508  00545A  5C04               	subwf	___awdiv@dividend^0,w,c
 13509  00545C  5007               	movf	(___awdiv@divisor+1)^0,w,c
 13510  00545E  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
 13511  005460  A0D8               	btfss	status,0,c
 13512  005462  EF35  F02A         	goto	u9921
 13513  005466  EF37  F02A         	goto	u9920
 13514  00546A                     u9921:
 13515  00546A  EF3C  F02A         	goto	l7876
 13516  00546E                     u9920:
 13517  00546E  5006               	movf	___awdiv@divisor^0,w,c
 13518  005470  5E04               	subwf	___awdiv@dividend^0,f,c
 13519  005472  5007               	movf	(___awdiv@divisor+1)^0,w,c
 13520  005474  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
 13521  005476  800A               	bsf	___awdiv@quotient^0,0,c
 13522  005478                     l7876:
 13523  005478  90D8               	bcf	status,0,c
 13524  00547A  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
 13525  00547C  3206               	rrcf	___awdiv@divisor^0,f,c
 13526  00547E  2E08               	decfsz	___awdiv@counter^0,f,c
 13527  005480  EF29  F02A         	goto	l7868
 13528  005484                     l7880:
 13529  005484  5009               	movf	___awdiv@sign^0,w,c
 13530  005486  B4D8               	btfsc	status,2,c
 13531  005488  EF48  F02A         	goto	u9931
 13532  00548C  EF4A  F02A         	goto	u9930
 13533  005490                     u9931:
 13534  005490  EF4E  F02A         	goto	l7884
 13535  005494                     u9930:
 13536  005494  6C0A               	negf	___awdiv@quotient^0,c
 13537  005496  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
 13538  005498  B0D8               	btfsc	status,0,c
 13539  00549A  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
 13540  00549C                     l7884:
 13541  00549C  C00A  F004         	movff	___awdiv@quotient,?___awdiv
 13542  0054A0  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
 13543  0054A4  0012               	return		;funcret
 13544  0054A6                     __end_of___awdiv:
 13545                           	opt callstack 0
 13546                           
 13547 ;; *************** function _dtoa *****************
 13548 ;; Defined at:
 13549 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13550 ;; Parameters:    Size  Location     Type
 13551 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 13552 ;;		 -> vsnprintf@f(6), 
 13553 ;;  d               8   32[COMRAM] long long 
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;  n               8   56[COMRAM] long long 
 13556 ;;  i               2   64[COMRAM] int 
 13557 ;;  s               2   54[COMRAM] int 
 13558 ;;  w               2   52[COMRAM] int 
 13559 ;;  p               2   50[COMRAM] int 
 13560 ;; Return value:  Size  Location     Type
 13561 ;;                  2   30[COMRAM] int 
 13562 ;; Registers used:
 13563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13564 ;; Tracked objects:
 13565 ;;		On entry : 0/0
 13566 ;;		On exit  : 0/0
 13567 ;;		Unchanged: 0/0
 13568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13569 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13570 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13571 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13572 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13573 ;;Total ram usage:       36 bytes
 13574 ;; Hardware stack levels used:    1
 13575 ;; Hardware stack levels required when called:    8
 13576 ;; This function calls:
 13577 ;;		___aodiv
 13578 ;;		___aomod
 13579 ;;		_abs
 13580 ;;		_pad
 13581 ;; This function is called by:
 13582 ;;		_vfpfcnvrt
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           	psect	text31
 13587  0034F6                     __ptext31:
 13588                           	opt callstack 0
 13589  0034F6                     _dtoa:
 13590                           	opt callstack 18
 13591  0034F6                     
 13592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13593  0034F6  C021  F039         	movff	dtoa@d,dtoa@n
 13594  0034FA  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
 13595  0034FE  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
 13596  003502  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
 13597  003506  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
 13598  00350A  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
 13599  00350E  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
 13600  003512  C028  F040         	movff	dtoa@d+7,dtoa@n+7
 13601  003516                     
 13602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13603  003516  BE40               	btfsc	(dtoa@n+7)^0,7,c
 13604  003518  EF90  F01A         	goto	u10261
 13605  00351C  EF93  F01A         	goto	u10260
 13606  003520                     u10261:
 13607  003520  0E01               	movlw	1
 13608  003522  EF94  F01A         	goto	u10270
 13609  003526                     u10260:
 13610  003526  0E00               	movlw	0
 13611  003528                     u10270:
 13612  003528  6E37               	movwf	dtoa@s^0,c
 13613  00352A  6A38               	clrf	(dtoa@s+1)^0,c
 13614                           
 13615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13616  00352C  5037               	movf	dtoa@s^0,w,c
 13617  00352E  1038               	iorwf	(dtoa@s+1)^0,w,c
 13618  003530  B4D8               	btfsc	status,2,c
 13619  003532  EF9D  F01A         	goto	u10281
 13620  003536  EF9F  F01A         	goto	u10280
 13621  00353A                     u10281:
 13622  00353A  EFAF  F01A         	goto	l8084
 13623  00353E                     u10280:
 13624  00353E                     
 13625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13626  00353E  1E40               	comf	(dtoa@n+7)^0,f,c
 13627  003540  1E3F               	comf	(dtoa@n+6)^0,f,c
 13628  003542  1E3E               	comf	(dtoa@n+5)^0,f,c
 13629  003544  1E3D               	comf	(dtoa@n+4)^0,f,c
 13630  003546  1E3C               	comf	(dtoa@n+3)^0,f,c
 13631  003548  1E3B               	comf	(dtoa@n+2)^0,f,c
 13632  00354A  1E3A               	comf	(dtoa@n+1)^0,f,c
 13633  00354C  6C39               	negf	dtoa@n^0,c
 13634  00354E  0E00               	movlw	0
 13635  003550  223A               	addwfc	(dtoa@n+1)^0,f,c
 13636  003552  223B               	addwfc	(dtoa@n+2)^0,f,c
 13637  003554  223C               	addwfc	(dtoa@n+3)^0,f,c
 13638  003556  223D               	addwfc	(dtoa@n+4)^0,f,c
 13639  003558  223E               	addwfc	(dtoa@n+5)^0,f,c
 13640  00355A  223F               	addwfc	(dtoa@n+6)^0,f,c
 13641  00355C  2240               	addwfc	(dtoa@n+7)^0,f,c
 13642  00355E                     l8084:
 13643                           
 13644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13645  00355E  BE5B               	btfsc	(_prec+1)^0,7,c
 13646  003560  EFB4  F01A         	goto	u10291
 13647  003564  EFB6  F01A         	goto	u10290
 13648  003568                     u10291:
 13649  003568  EFB8  F01A         	goto	l8088
 13650  00356C                     u10290:
 13651  00356C                     
 13652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13653  00356C  0100               	movlb	0	; () banked
 13654  00356E  93FC               	bcf	_flags& (0+255),1,b
 13655  003570                     l8088:
 13656                           
 13657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13658  003570  BE5B               	btfsc	(_prec+1)^0,7,c
 13659  003572  EFC5  F01A         	goto	u10300
 13660  003576  505B               	movf	(_prec+1)^0,w,c
 13661  003578  E106               	bnz	u10301
 13662  00357A  045A               	decf	_prec^0,w,c
 13663  00357C  B0D8               	btfsc	status,0,c
 13664  00357E  EFC3  F01A         	goto	u10301
 13665  003582  EFC5  F01A         	goto	u10300
 13666  003586                     u10301:
 13667  003586  EFCB  F01A         	goto	l515
 13668  00358A                     u10300:
 13669  00358A  0E00               	movlw	0
 13670  00358C  6E34               	movwf	(dtoa@p+1)^0,c
 13671  00358E  0E01               	movlw	1
 13672  003590  6E33               	movwf	dtoa@p^0,c
 13673  003592  EFCF  F01A         	goto	l517
 13674  003596                     l515:
 13675  003596  C05A  F033         	movff	_prec,dtoa@p
 13676  00359A  C05B  F034         	movff	_prec+1,dtoa@p+1
 13677  00359E                     l517:
 13678                           
 13679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13680  00359E  C11C  F035         	movff	_width,dtoa@w
 13681  0035A2  C11D  F036         	movff	_width+1,dtoa@w+1
 13682  0035A6                     
 13683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13684  0035A6  5037               	movf	dtoa@s^0,w,c
 13685  0035A8  1038               	iorwf	(dtoa@s+1)^0,w,c
 13686  0035AA  A4D8               	btfss	status,2,c
 13687  0035AC  EFDA  F01A         	goto	u10311
 13688  0035B0  EFDC  F01A         	goto	u10310
 13689  0035B4                     u10311:
 13690  0035B4  EFE4  F01A         	goto	l8096
 13691  0035B8                     u10310:
 13692  0035B8  0100               	movlb	0	; () banked
 13693  0035BA  A5FC               	btfss	_flags& (0+255),2,b
 13694  0035BC  EFE2  F01A         	goto	u10321
 13695  0035C0  EFE4  F01A         	goto	u10320
 13696  0035C4                     u10321:
 13697  0035C4  EFE7  F01A         	goto	l8098
 13698  0035C8                     u10320:
 13699  0035C8                     l8096:
 13700                           
 13701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13702  0035C8  0635               	decf	dtoa@w^0,f,c
 13703  0035CA  A0D8               	btfss	status,0,c
 13704  0035CC  0636               	decf	(dtoa@w+1)^0,f,c
 13705  0035CE                     l8098:
 13706                           
 13707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13708  0035CE  0E00               	movlw	0
 13709  0035D0  6E42               	movwf	(dtoa@i+1)^0,c
 13710  0035D2  0E4F               	movlw	79
 13711  0035D4  6E41               	movwf	dtoa@i^0,c
 13712  0035D6                     
 13713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13714  0035D6  0E00               	movlw	0
 13715  0035D8  0101               	movlb	1	; () banked
 13716  0035DA  6FD9               	movwf	(_dbuf+79)& (0+255),b
 13717                           
 13718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13719  0035DC  EF6C  F01B         	goto	l8112
 13720  0035E0                     l8102:
 13721                           
 13722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13723  0035E0  0641               	decf	dtoa@i^0,f,c
 13724  0035E2  A0D8               	btfss	status,0,c
 13725  0035E4  0642               	decf	(dtoa@i+1)^0,f,c
 13726  0035E6                     
 13727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13728  0035E6  0E8A               	movlw	low _dbuf
 13729  0035E8  2441               	addwf	dtoa@i^0,w,c
 13730  0035EA  6ED9               	movwf	fsr2l,c
 13731  0035EC  0E01               	movlw	high _dbuf
 13732  0035EE  2042               	addwfc	(dtoa@i+1)^0,w,c
 13733  0035F0  6EDA               	movwf	fsr2h,c
 13734  0035F2  C039  F004         	movff	dtoa@n,___aomod@dividend
 13735  0035F6  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
 13736  0035FA  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
 13737  0035FE  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
 13738  003602  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
 13739  003606  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
 13740  00360A  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
 13741  00360E  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
 13742  003612  0E0A               	movlw	10
 13743  003614  6E0C               	movwf	___aomod@divisor^0,c
 13744  003616  0E00               	movlw	0
 13745  003618  6E0D               	movwf	(___aomod@divisor+1)^0,c
 13746  00361A  0E00               	movlw	0
 13747  00361C  6E0E               	movwf	(___aomod@divisor+2)^0,c
 13748  00361E  0E00               	movlw	0
 13749  003620  6E0F               	movwf	(___aomod@divisor+3)^0,c
 13750  003622  0E00               	movlw	0
 13751  003624  6E10               	movwf	(___aomod@divisor+4)^0,c
 13752  003626  0E00               	movlw	0
 13753  003628  6E11               	movwf	(___aomod@divisor+5)^0,c
 13754  00362A  0E00               	movlw	0
 13755  00362C  6E12               	movwf	(___aomod@divisor+6)^0,c
 13756  00362E  0E00               	movlw	0
 13757  003630  6E13               	movwf	(___aomod@divisor+7)^0,c
 13758  003632  EC4C  F024         	call	___aomod	;wreg free
 13759  003636  C004  F029         	movff	?___aomod,??_dtoa
 13760  00363A  C005  F02A         	movff	?___aomod+1,??_dtoa+1
 13761  00363E  C006  F02B         	movff	?___aomod+2,??_dtoa+2
 13762  003642  C007  F02C         	movff	?___aomod+3,??_dtoa+3
 13763  003646  C008  F02D         	movff	?___aomod+4,??_dtoa+4
 13764  00364A  C009  F02E         	movff	?___aomod+5,??_dtoa+5
 13765  00364E  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
 13766  003652  C00B  F030         	movff	?___aomod+7,??_dtoa+7
 13767  003656  C029  F016         	movff	??_dtoa,abs@a
 13768  00365A  C02B  F017         	movff	??_dtoa+2,abs@a+1
 13769  00365E  ECD8  F02D         	call	_abs	;wreg free
 13770  003662  5016               	movf	?_abs^0,w,c
 13771  003664  0F30               	addlw	48
 13772  003666  6EDF               	movwf	indf2,c
 13773  003668                     
 13774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13775  003668  0633               	decf	dtoa@p^0,f,c
 13776  00366A  A0D8               	btfss	status,0,c
 13777  00366C  0634               	decf	(dtoa@p+1)^0,f,c
 13778  00366E                     
 13779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13780  00366E  0635               	decf	dtoa@w^0,f,c
 13781  003670  A0D8               	btfss	status,0,c
 13782  003672  0636               	decf	(dtoa@w+1)^0,f,c
 13783  003674                     
 13784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13785  003674  C039  F004         	movff	dtoa@n,___aodiv@dividend
 13786  003678  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
 13787  00367C  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
 13788  003680  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
 13789  003684  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
 13790  003688  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
 13791  00368C  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
 13792  003690  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
 13793  003694  0E0A               	movlw	10
 13794  003696  6E0C               	movwf	___aodiv@divisor^0,c
 13795  003698  0E00               	movlw	0
 13796  00369A  6E0D               	movwf	(___aodiv@divisor+1)^0,c
 13797  00369C  0E00               	movlw	0
 13798  00369E  6E0E               	movwf	(___aodiv@divisor+2)^0,c
 13799  0036A0  0E00               	movlw	0
 13800  0036A2  6E0F               	movwf	(___aodiv@divisor+3)^0,c
 13801  0036A4  0E00               	movlw	0
 13802  0036A6  6E10               	movwf	(___aodiv@divisor+4)^0,c
 13803  0036A8  0E00               	movlw	0
 13804  0036AA  6E11               	movwf	(___aodiv@divisor+5)^0,c
 13805  0036AC  0E00               	movlw	0
 13806  0036AE  6E12               	movwf	(___aodiv@divisor+6)^0,c
 13807  0036B0  0E00               	movlw	0
 13808  0036B2  6E13               	movwf	(___aodiv@divisor+7)^0,c
 13809  0036B4  EC08  F022         	call	___aodiv	;wreg free
 13810  0036B8  C004  F039         	movff	?___aodiv,dtoa@n
 13811  0036BC  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
 13812  0036C0  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
 13813  0036C4  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
 13814  0036C8  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
 13815  0036CC  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
 13816  0036D0  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
 13817  0036D4  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
 13818  0036D8                     l8112:
 13819                           
 13820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13821  0036D8  BE42               	btfsc	(dtoa@i+1)^0,7,c
 13822  0036DA  EF77  F01B         	goto	u10331
 13823  0036DE  5042               	movf	(dtoa@i+1)^0,w,c
 13824  0036E0  E108               	bnz	u10330
 13825  0036E2  0441               	decf	dtoa@i^0,w,c
 13826  0036E4  A0D8               	btfss	status,0,c
 13827  0036E6  EF77  F01B         	goto	u10331
 13828  0036EA  EF79  F01B         	goto	u10330
 13829  0036EE                     u10331:
 13830  0036EE  EFAA  F01B         	goto	l8122
 13831  0036F2                     u10330:
 13832  0036F2  5039               	movf	dtoa@n^0,w,c
 13833  0036F4  103A               	iorwf	(dtoa@n+1)^0,w,c
 13834  0036F6  103B               	iorwf	(dtoa@n+2)^0,w,c
 13835  0036F8  103C               	iorwf	(dtoa@n+3)^0,w,c
 13836  0036FA  103D               	iorwf	(dtoa@n+4)^0,w,c
 13837  0036FC  103E               	iorwf	(dtoa@n+5)^0,w,c
 13838  0036FE  103F               	iorwf	(dtoa@n+6)^0,w,c
 13839  003700  1040               	iorwf	(dtoa@n+7)^0,w,c
 13840  003702  A4D8               	btfss	status,2,c
 13841  003704  EF86  F01B         	goto	u10341
 13842  003708  EF88  F01B         	goto	u10340
 13843  00370C                     u10341:
 13844  00370C  EFF0  F01A         	goto	l8102
 13845  003710                     u10340:
 13846  003710  BE34               	btfsc	(dtoa@p+1)^0,7,c
 13847  003712  EF95  F01B         	goto	u10350
 13848  003716  5034               	movf	(dtoa@p+1)^0,w,c
 13849  003718  E106               	bnz	u10351
 13850  00371A  0433               	decf	dtoa@p^0,w,c
 13851  00371C  B0D8               	btfsc	status,0,c
 13852  00371E  EF93  F01B         	goto	u10351
 13853  003722  EF95  F01B         	goto	u10350
 13854  003726                     u10351:
 13855  003726  EFF0  F01A         	goto	l8102
 13856  00372A                     u10350:
 13857  00372A  BE36               	btfsc	(dtoa@w+1)^0,7,c
 13858  00372C  EFA0  F01B         	goto	u10361
 13859  003730  5036               	movf	(dtoa@w+1)^0,w,c
 13860  003732  E108               	bnz	u10360
 13861  003734  0435               	decf	dtoa@w^0,w,c
 13862  003736  A0D8               	btfss	status,0,c
 13863  003738  EFA0  F01B         	goto	u10361
 13864  00373C  EFA2  F01B         	goto	u10360
 13865  003740                     u10361:
 13866  003740  EFAA  F01B         	goto	l8122
 13867  003744                     u10360:
 13868  003744  0100               	movlb	0	; () banked
 13869  003746  B3FC               	btfsc	_flags& (0+255),1,b
 13870  003748  EFA8  F01B         	goto	u10371
 13871  00374C  EFAA  F01B         	goto	u10370
 13872  003750                     u10371:
 13873  003750  EFF0  F01A         	goto	l8102
 13874  003754                     u10370:
 13875  003754                     l8122:
 13876                           
 13877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13878  003754  5037               	movf	dtoa@s^0,w,c
 13879  003756  1038               	iorwf	(dtoa@s+1)^0,w,c
 13880  003758  A4D8               	btfss	status,2,c
 13881  00375A  EFB1  F01B         	goto	u10381
 13882  00375E  EFB3  F01B         	goto	u10380
 13883  003762                     u10381:
 13884  003762  EFBB  F01B         	goto	l8126
 13885  003766                     u10380:
 13886  003766  0100               	movlb	0	; () banked
 13887  003768  A5FC               	btfss	_flags& (0+255),2,b
 13888  00376A  EFB9  F01B         	goto	u10391
 13889  00376E  EFBB  F01B         	goto	u10390
 13890  003772                     u10391:
 13891  003772  EFD9  F01B         	goto	l8136
 13892  003776                     u10390:
 13893  003776                     l8126:
 13894                           
 13895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13896  003776  0641               	decf	dtoa@i^0,f,c
 13897  003778  A0D8               	btfss	status,0,c
 13898  00377A  0642               	decf	(dtoa@i+1)^0,f,c
 13899  00377C                     
 13900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13901  00377C  5037               	movf	dtoa@s^0,w,c
 13902  00377E  1038               	iorwf	(dtoa@s+1)^0,w,c
 13903  003780  A4D8               	btfss	status,2,c
 13904  003782  EFC5  F01B         	goto	u10401
 13905  003786  EFC7  F01B         	goto	u10400
 13906  00378A                     u10401:
 13907  00378A  EFCD  F01B         	goto	l8132
 13908  00378E                     u10400:
 13909  00378E  0E00               	movlw	0
 13910  003790  6E32               	movwf	(_dtoa$1309+1)^0,c
 13911  003792  0E2B               	movlw	43
 13912  003794  6E31               	movwf	_dtoa$1309^0,c
 13913  003796  EFD1  F01B         	goto	l8134
 13914  00379A                     l8132:
 13915  00379A  0E00               	movlw	0
 13916  00379C  6E32               	movwf	(_dtoa$1309+1)^0,c
 13917  00379E  0E2D               	movlw	45
 13918  0037A0  6E31               	movwf	_dtoa$1309^0,c
 13919  0037A2                     l8134:
 13920  0037A2  0E8A               	movlw	low _dbuf
 13921  0037A4  2441               	addwf	dtoa@i^0,w,c
 13922  0037A6  6ED9               	movwf	fsr2l,c
 13923  0037A8  0E01               	movlw	high _dbuf
 13924  0037AA  2042               	addwfc	(dtoa@i+1)^0,w,c
 13925  0037AC  6EDA               	movwf	fsr2h,c
 13926  0037AE  C031  FFDF         	movff	_dtoa$1309,indf2
 13927  0037B2                     l8136:
 13928                           
 13929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13930  0037B2  C01F  F014         	movff	dtoa@fp,pad@fp
 13931  0037B6  C020  F015         	movff	dtoa@fp+1,pad@fp+1
 13932  0037BA  0E8A               	movlw	low _dbuf
 13933  0037BC  2441               	addwf	dtoa@i^0,w,c
 13934  0037BE  6E16               	movwf	pad@buf^0,c
 13935  0037C0  0E01               	movlw	high _dbuf
 13936  0037C2  2042               	addwfc	(dtoa@i+1)^0,w,c
 13937  0037C4  6E17               	movwf	(pad@buf+1)^0,c
 13938  0037C6  C035  F018         	movff	dtoa@w,pad@p
 13939  0037CA  C036  F019         	movff	dtoa@w+1,pad@p+1
 13940  0037CE  EC8E  F029         	call	_pad	;wreg free
 13941  0037D2  C014  F01F         	movff	?_pad,?_dtoa
 13942  0037D6  C015  F020         	movff	?_pad+1,?_dtoa+1
 13943  0037DA  0012               	return		;funcret
 13944  0037DC                     __end_of_dtoa:
 13945                           	opt callstack 0
 13946                           
 13947 ;; *************** function _abs *****************
 13948 ;; Defined at:
 13949 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;  a               2   21[COMRAM] int 
 13952 ;; Auto vars:     Size  Location     Type
 13953 ;;		None
 13954 ;; Return value:  Size  Location     Type
 13955 ;;                  2   21[COMRAM] int 
 13956 ;; Registers used:
 13957 ;;		wreg, status,2, status,0
 13958 ;; Tracked objects:
 13959 ;;		On entry : 0/0
 13960 ;;		On exit  : 0/0
 13961 ;;		Unchanged: 0/0
 13962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13967 ;;Total ram usage:        4 bytes
 13968 ;; Hardware stack levels used:    1
 13969 ;; Hardware stack levels required when called:    4
 13970 ;; This function calls:
 13971 ;;		Nothing
 13972 ;; This function is called by:
 13973 ;;		_dtoa
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           	psect	text32
 13978  005BB0                     __ptext32:
 13979                           	opt callstack 0
 13980  005BB0                     _abs:
 13981                           	opt callstack 21
 13982  005BB0  BE17               	btfsc	(abs@a+1)^0,7,c
 13983  005BB2  EFE5  F02D         	goto	u9030
 13984  005BB6  5017               	movf	(abs@a+1)^0,w,c
 13985  005BB8  E106               	bnz	u9031
 13986  005BBA  0416               	decf	abs@a^0,w,c
 13987  005BBC  B0D8               	btfsc	status,0,c
 13988  005BBE  EFE3  F02D         	goto	u9031
 13989  005BC2  EFE5  F02D         	goto	u9030
 13990  005BC6                     u9031:
 13991  005BC6  EFF3  F02D         	goto	l1491
 13992  005BCA                     u9030:
 13993  005BCA  C016  F018         	movff	abs@a,??_abs
 13994  005BCE  C017  F019         	movff	abs@a+1,??_abs+1
 13995  005BD2  1E18               	comf	??_abs^0,f,c
 13996  005BD4  1E19               	comf	(??_abs+1)^0,f,c
 13997  005BD6  4A18               	infsnz	??_abs^0,f,c
 13998  005BD8  2A19               	incf	(??_abs+1)^0,f,c
 13999  005BDA  C018  F016         	movff	??_abs,?_abs
 14000  005BDE  C019  F017         	movff	??_abs+1,?_abs+1
 14001  005BE2  EFF7  F02D         	goto	l1494
 14002  005BE6                     l1491:
 14003  005BE6  C016  F016         	movff	abs@a,?_abs
 14004  005BEA  C017  F017         	movff	abs@a+1,?_abs+1
 14005  005BEE                     l1494:
 14006  005BEE  0012               	return		;funcret
 14007  005BF0                     __end_of_abs:
 14008                           	opt callstack 0
 14009                           
 14010 ;; *************** function ___aomod *****************
 14011 ;; Defined at:
 14012 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;  dividend        8    3[COMRAM] long long 
 14015 ;;  divisor         8   11[COMRAM] long long 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  sign            1   20[COMRAM] unsigned char 
 14018 ;;  counter         1   19[COMRAM] unsigned char 
 14019 ;; Return value:  Size  Location     Type
 14020 ;;                  8    3[COMRAM] long long 
 14021 ;; Registers used:
 14022 ;;		wreg, status,2, status,0
 14023 ;; Tracked objects:
 14024 ;;		On entry : 0/0
 14025 ;;		On exit  : 0/0
 14026 ;;		Unchanged: 0/0
 14027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14028 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14031 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14032 ;;Total ram usage:       18 bytes
 14033 ;; Hardware stack levels used:    1
 14034 ;; Hardware stack levels required when called:    4
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_dtoa
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text33
 14043  004898                     __ptext33:
 14044                           	opt callstack 0
 14045  004898                     ___aomod:
 14046                           	opt callstack 21
 14047  004898  0E00               	movlw	0
 14048  00489A  6E15               	movwf	___aomod@sign^0,c
 14049  00489C  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
 14050  00489E  EF55  F024         	goto	u9400
 14051  0048A2  EF53  F024         	goto	u9401
 14052  0048A6                     u9401:
 14053  0048A6  EF67  F024         	goto	l7542
 14054  0048AA                     u9400:
 14055  0048AA  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 14056  0048AC  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 14057  0048AE  1E09               	comf	(___aomod@dividend+5)^0,f,c
 14058  0048B0  1E08               	comf	(___aomod@dividend+4)^0,f,c
 14059  0048B2  1E07               	comf	(___aomod@dividend+3)^0,f,c
 14060  0048B4  1E06               	comf	(___aomod@dividend+2)^0,f,c
 14061  0048B6  1E05               	comf	(___aomod@dividend+1)^0,f,c
 14062  0048B8  6C04               	negf	___aomod@dividend^0,c
 14063  0048BA  0E00               	movlw	0
 14064  0048BC  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 14065  0048BE  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 14066  0048C0  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 14067  0048C2  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 14068  0048C4  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 14069  0048C6  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 14070  0048C8  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 14071  0048CA  0E01               	movlw	1
 14072  0048CC  6E15               	movwf	___aomod@sign^0,c
 14073  0048CE                     l7542:
 14074  0048CE  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
 14075  0048D0  EF6E  F024         	goto	u9410
 14076  0048D4  EF6C  F024         	goto	u9411
 14077  0048D8                     u9411:
 14078  0048D8  EF7E  F024         	goto	l7546
 14079  0048DC                     u9410:
 14080  0048DC  1E13               	comf	(___aomod@divisor+7)^0,f,c
 14081  0048DE  1E12               	comf	(___aomod@divisor+6)^0,f,c
 14082  0048E0  1E11               	comf	(___aomod@divisor+5)^0,f,c
 14083  0048E2  1E10               	comf	(___aomod@divisor+4)^0,f,c
 14084  0048E4  1E0F               	comf	(___aomod@divisor+3)^0,f,c
 14085  0048E6  1E0E               	comf	(___aomod@divisor+2)^0,f,c
 14086  0048E8  1E0D               	comf	(___aomod@divisor+1)^0,f,c
 14087  0048EA  6C0C               	negf	___aomod@divisor^0,c
 14088  0048EC  0E00               	movlw	0
 14089  0048EE  220D               	addwfc	(___aomod@divisor+1)^0,f,c
 14090  0048F0  220E               	addwfc	(___aomod@divisor+2)^0,f,c
 14091  0048F2  220F               	addwfc	(___aomod@divisor+3)^0,f,c
 14092  0048F4  2210               	addwfc	(___aomod@divisor+4)^0,f,c
 14093  0048F6  2211               	addwfc	(___aomod@divisor+5)^0,f,c
 14094  0048F8  2212               	addwfc	(___aomod@divisor+6)^0,f,c
 14095  0048FA  2213               	addwfc	(___aomod@divisor+7)^0,f,c
 14096  0048FC                     l7546:
 14097  0048FC  500C               	movf	___aomod@divisor^0,w,c
 14098  0048FE  100D               	iorwf	(___aomod@divisor+1)^0,w,c
 14099  004900  100E               	iorwf	(___aomod@divisor+2)^0,w,c
 14100  004902  100F               	iorwf	(___aomod@divisor+3)^0,w,c
 14101  004904  1010               	iorwf	(___aomod@divisor+4)^0,w,c
 14102  004906  1011               	iorwf	(___aomod@divisor+5)^0,w,c
 14103  004908  1012               	iorwf	(___aomod@divisor+6)^0,w,c
 14104  00490A  1013               	iorwf	(___aomod@divisor+7)^0,w,c
 14105  00490C  B4D8               	btfsc	status,2,c
 14106  00490E  EF8B  F024         	goto	u9421
 14107  004912  EF8D  F024         	goto	u9420
 14108  004916                     u9421:
 14109  004916  EFD5  F024         	goto	l7562
 14110  00491A                     u9420:
 14111  00491A  0E01               	movlw	1
 14112  00491C  6E14               	movwf	___aomod@counter^0,c
 14113  00491E  EF9B  F024         	goto	l7552
 14114  004922                     l7550:
 14115  004922  90D8               	bcf	status,0,c
 14116  004924  360C               	rlcf	___aomod@divisor^0,f,c
 14117  004926  360D               	rlcf	(___aomod@divisor+1)^0,f,c
 14118  004928  360E               	rlcf	(___aomod@divisor+2)^0,f,c
 14119  00492A  360F               	rlcf	(___aomod@divisor+3)^0,f,c
 14120  00492C  3610               	rlcf	(___aomod@divisor+4)^0,f,c
 14121  00492E  3611               	rlcf	(___aomod@divisor+5)^0,f,c
 14122  004930  3612               	rlcf	(___aomod@divisor+6)^0,f,c
 14123  004932  3613               	rlcf	(___aomod@divisor+7)^0,f,c
 14124  004934  2A14               	incf	___aomod@counter^0,f,c
 14125  004936                     l7552:
 14126  004936  AE13               	btfss	(___aomod@divisor+7)^0,7,c
 14127  004938  EFA0  F024         	goto	u9431
 14128  00493C  EFA2  F024         	goto	u9430
 14129  004940                     u9431:
 14130  004940  EF91  F024         	goto	l7550
 14131  004944                     u9430:
 14132  004944                     l7554:
 14133  004944  500C               	movf	___aomod@divisor^0,w,c
 14134  004946  5C04               	subwf	___aomod@dividend^0,w,c
 14135  004948  500D               	movf	(___aomod@divisor+1)^0,w,c
 14136  00494A  5805               	subwfb	(___aomod@dividend+1)^0,w,c
 14137  00494C  500E               	movf	(___aomod@divisor+2)^0,w,c
 14138  00494E  5806               	subwfb	(___aomod@dividend+2)^0,w,c
 14139  004950  500F               	movf	(___aomod@divisor+3)^0,w,c
 14140  004952  5807               	subwfb	(___aomod@dividend+3)^0,w,c
 14141  004954  5010               	movf	(___aomod@divisor+4)^0,w,c
 14142  004956  5808               	subwfb	(___aomod@dividend+4)^0,w,c
 14143  004958  5011               	movf	(___aomod@divisor+5)^0,w,c
 14144  00495A  5809               	subwfb	(___aomod@dividend+5)^0,w,c
 14145  00495C  5012               	movf	(___aomod@divisor+6)^0,w,c
 14146  00495E  580A               	subwfb	(___aomod@dividend+6)^0,w,c
 14147  004960  5013               	movf	(___aomod@divisor+7)^0,w,c
 14148  004962  580B               	subwfb	(___aomod@dividend+7)^0,w,c
 14149  004964  A0D8               	btfss	status,0,c
 14150  004966  EFB7  F024         	goto	u9441
 14151  00496A  EFB9  F024         	goto	u9440
 14152  00496E                     u9441:
 14153  00496E  EFC9  F024         	goto	l7558
 14154  004972                     u9440:
 14155  004972  500C               	movf	___aomod@divisor^0,w,c
 14156  004974  5E04               	subwf	___aomod@dividend^0,f,c
 14157  004976  500D               	movf	(___aomod@divisor+1)^0,w,c
 14158  004978  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
 14159  00497A  500E               	movf	(___aomod@divisor+2)^0,w,c
 14160  00497C  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
 14161  00497E  500F               	movf	(___aomod@divisor+3)^0,w,c
 14162  004980  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
 14163  004982  5010               	movf	(___aomod@divisor+4)^0,w,c
 14164  004984  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
 14165  004986  5011               	movf	(___aomod@divisor+5)^0,w,c
 14166  004988  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
 14167  00498A  5012               	movf	(___aomod@divisor+6)^0,w,c
 14168  00498C  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
 14169  00498E  5013               	movf	(___aomod@divisor+7)^0,w,c
 14170  004990  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
 14171  004992                     l7558:
 14172  004992  90D8               	bcf	status,0,c
 14173  004994  3213               	rrcf	(___aomod@divisor+7)^0,f,c
 14174  004996  3212               	rrcf	(___aomod@divisor+6)^0,f,c
 14175  004998  3211               	rrcf	(___aomod@divisor+5)^0,f,c
 14176  00499A  3210               	rrcf	(___aomod@divisor+4)^0,f,c
 14177  00499C  320F               	rrcf	(___aomod@divisor+3)^0,f,c
 14178  00499E  320E               	rrcf	(___aomod@divisor+2)^0,f,c
 14179  0049A0  320D               	rrcf	(___aomod@divisor+1)^0,f,c
 14180  0049A2  320C               	rrcf	___aomod@divisor^0,f,c
 14181  0049A4  2E14               	decfsz	___aomod@counter^0,f,c
 14182  0049A6  EFA2  F024         	goto	l7554
 14183  0049AA                     l7562:
 14184  0049AA  5015               	movf	___aomod@sign^0,w,c
 14185  0049AC  B4D8               	btfsc	status,2,c
 14186  0049AE  EFDB  F024         	goto	u9451
 14187  0049B2  EFDD  F024         	goto	u9450
 14188  0049B6                     u9451:
 14189  0049B6  EFED  F024         	goto	l7566
 14190  0049BA                     u9450:
 14191  0049BA  1E0B               	comf	(___aomod@dividend+7)^0,f,c
 14192  0049BC  1E0A               	comf	(___aomod@dividend+6)^0,f,c
 14193  0049BE  1E09               	comf	(___aomod@dividend+5)^0,f,c
 14194  0049C0  1E08               	comf	(___aomod@dividend+4)^0,f,c
 14195  0049C2  1E07               	comf	(___aomod@dividend+3)^0,f,c
 14196  0049C4  1E06               	comf	(___aomod@dividend+2)^0,f,c
 14197  0049C6  1E05               	comf	(___aomod@dividend+1)^0,f,c
 14198  0049C8  6C04               	negf	___aomod@dividend^0,c
 14199  0049CA  0E00               	movlw	0
 14200  0049CC  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 14201  0049CE  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 14202  0049D0  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 14203  0049D2  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 14204  0049D4  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 14205  0049D6  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 14206  0049D8  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 14207  0049DA                     l7566:
 14208  0049DA  C004  F004         	movff	___aomod@dividend,?___aomod
 14209  0049DE  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
 14210  0049E2  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
 14211  0049E6  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
 14212  0049EA  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
 14213  0049EE  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
 14214  0049F2  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
 14215  0049F6  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
 14216  0049FA  0012               	return		;funcret
 14217  0049FC                     __end_of___aomod:
 14218                           	opt callstack 0
 14219                           
 14220 ;; *************** function ___aodiv *****************
 14221 ;; Defined at:
 14222 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;  dividend        8    3[COMRAM] long long 
 14225 ;;  divisor         8   11[COMRAM] long long 
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;  quotient        8   21[COMRAM] long long 
 14228 ;;  sign            1   20[COMRAM] unsigned char 
 14229 ;;  counter         1   19[COMRAM] unsigned char 
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  8    3[COMRAM] long long 
 14232 ;; Registers used:
 14233 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14239 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14240 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14242 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14243 ;;Total ram usage:       26 bytes
 14244 ;; Hardware stack levels used:    1
 14245 ;; Hardware stack levels required when called:    4
 14246 ;; This function calls:
 14247 ;;		Nothing
 14248 ;; This function is called by:
 14249 ;;		_dtoa
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text34
 14254  004410                     __ptext34:
 14255                           	opt callstack 0
 14256  004410                     ___aodiv:
 14257                           	opt callstack 21
 14258  004410  0E00               	movlw	0
 14259  004412  6E15               	movwf	___aodiv@sign^0,c
 14260  004414  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
 14261  004416  EF11  F022         	goto	u9330
 14262  00441A  EF0F  F022         	goto	u9331
 14263  00441E                     u9331:
 14264  00441E  EF23  F022         	goto	l7498
 14265  004422                     u9330:
 14266  004422  1E13               	comf	(___aodiv@divisor+7)^0,f,c
 14267  004424  1E12               	comf	(___aodiv@divisor+6)^0,f,c
 14268  004426  1E11               	comf	(___aodiv@divisor+5)^0,f,c
 14269  004428  1E10               	comf	(___aodiv@divisor+4)^0,f,c
 14270  00442A  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
 14271  00442C  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
 14272  00442E  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
 14273  004430  6C0C               	negf	___aodiv@divisor^0,c
 14274  004432  0E00               	movlw	0
 14275  004434  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
 14276  004436  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
 14277  004438  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
 14278  00443A  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
 14279  00443C  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
 14280  00443E  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
 14281  004440  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
 14282  004442  0E01               	movlw	1
 14283  004444  6E15               	movwf	___aodiv@sign^0,c
 14284  004446                     l7498:
 14285  004446  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
 14286  004448  EF2A  F022         	goto	u9340
 14287  00444C  EF28  F022         	goto	u9341
 14288  004450                     u9341:
 14289  004450  EF3C  F022         	goto	l7504
 14290  004454                     u9340:
 14291  004454  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
 14292  004456  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
 14293  004458  1E09               	comf	(___aodiv@dividend+5)^0,f,c
 14294  00445A  1E08               	comf	(___aodiv@dividend+4)^0,f,c
 14295  00445C  1E07               	comf	(___aodiv@dividend+3)^0,f,c
 14296  00445E  1E06               	comf	(___aodiv@dividend+2)^0,f,c
 14297  004460  1E05               	comf	(___aodiv@dividend+1)^0,f,c
 14298  004462  6C04               	negf	___aodiv@dividend^0,c
 14299  004464  0E00               	movlw	0
 14300  004466  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
 14301  004468  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
 14302  00446A  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
 14303  00446C  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
 14304  00446E  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
 14305  004470  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
 14306  004472  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
 14307  004474  0E01               	movlw	1
 14308  004476  1A15               	xorwf	___aodiv@sign^0,f,c
 14309  004478                     l7504:
 14310  004478  EE20  F016         	lfsr	2,___aodiv@quotient
 14311  00447C  0E07               	movlw	7
 14312  00447E                     u9351:
 14313  00447E  6ADE               	clrf	postinc2,c
 14314  004480  06E8               	decf	wreg,f,c
 14315  004482  E2FD               	bc	u9351
 14316  004484  500C               	movf	___aodiv@divisor^0,w,c
 14317  004486  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
 14318  004488  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
 14319  00448A  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
 14320  00448C  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
 14321  00448E  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
 14322  004490  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
 14323  004492  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
 14324  004494  B4D8               	btfsc	status,2,c
 14325  004496  EF4F  F022         	goto	u9361
 14326  00449A  EF51  F022         	goto	u9360
 14327  00449E                     u9361:
 14328  00449E  EFA3  F022         	goto	l7526
 14329  0044A2                     u9360:
 14330  0044A2  0E01               	movlw	1
 14331  0044A4  6E14               	movwf	___aodiv@counter^0,c
 14332  0044A6  EF5F  F022         	goto	l7512
 14333  0044AA                     l7510:
 14334  0044AA  90D8               	bcf	status,0,c
 14335  0044AC  360C               	rlcf	___aodiv@divisor^0,f,c
 14336  0044AE  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
 14337  0044B0  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
 14338  0044B2  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
 14339  0044B4  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
 14340  0044B6  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
 14341  0044B8  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
 14342  0044BA  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
 14343  0044BC  2A14               	incf	___aodiv@counter^0,f,c
 14344  0044BE                     l7512:
 14345  0044BE  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
 14346  0044C0  EF64  F022         	goto	u9371
 14347  0044C4  EF66  F022         	goto	u9370
 14348  0044C8                     u9371:
 14349  0044C8  EF55  F022         	goto	l7510
 14350  0044CC                     u9370:
 14351  0044CC                     l7514:
 14352  0044CC  90D8               	bcf	status,0,c
 14353  0044CE  3616               	rlcf	___aodiv@quotient^0,f,c
 14354  0044D0  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
 14355  0044D2  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
 14356  0044D4  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
 14357  0044D6  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
 14358  0044D8  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
 14359  0044DA  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
 14360  0044DC  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
 14361  0044DE  500C               	movf	___aodiv@divisor^0,w,c
 14362  0044E0  5C04               	subwf	___aodiv@dividend^0,w,c
 14363  0044E2  500D               	movf	(___aodiv@divisor+1)^0,w,c
 14364  0044E4  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
 14365  0044E6  500E               	movf	(___aodiv@divisor+2)^0,w,c
 14366  0044E8  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
 14367  0044EA  500F               	movf	(___aodiv@divisor+3)^0,w,c
 14368  0044EC  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
 14369  0044EE  5010               	movf	(___aodiv@divisor+4)^0,w,c
 14370  0044F0  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
 14371  0044F2  5011               	movf	(___aodiv@divisor+5)^0,w,c
 14372  0044F4  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
 14373  0044F6  5012               	movf	(___aodiv@divisor+6)^0,w,c
 14374  0044F8  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
 14375  0044FA  5013               	movf	(___aodiv@divisor+7)^0,w,c
 14376  0044FC  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
 14377  0044FE  A0D8               	btfss	status,0,c
 14378  004500  EF84  F022         	goto	u9381
 14379  004504  EF86  F022         	goto	u9380
 14380  004508                     u9381:
 14381  004508  EF97  F022         	goto	l7522
 14382  00450C                     u9380:
 14383  00450C  500C               	movf	___aodiv@divisor^0,w,c
 14384  00450E  5E04               	subwf	___aodiv@dividend^0,f,c
 14385  004510  500D               	movf	(___aodiv@divisor+1)^0,w,c
 14386  004512  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
 14387  004514  500E               	movf	(___aodiv@divisor+2)^0,w,c
 14388  004516  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
 14389  004518  500F               	movf	(___aodiv@divisor+3)^0,w,c
 14390  00451A  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
 14391  00451C  5010               	movf	(___aodiv@divisor+4)^0,w,c
 14392  00451E  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
 14393  004520  5011               	movf	(___aodiv@divisor+5)^0,w,c
 14394  004522  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
 14395  004524  5012               	movf	(___aodiv@divisor+6)^0,w,c
 14396  004526  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
 14397  004528  5013               	movf	(___aodiv@divisor+7)^0,w,c
 14398  00452A  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
 14399  00452C  8016               	bsf	___aodiv@quotient^0,0,c
 14400  00452E                     l7522:
 14401  00452E  90D8               	bcf	status,0,c
 14402  004530  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
 14403  004532  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
 14404  004534  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
 14405  004536  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
 14406  004538  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
 14407  00453A  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
 14408  00453C  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
 14409  00453E  320C               	rrcf	___aodiv@divisor^0,f,c
 14410  004540  2E14               	decfsz	___aodiv@counter^0,f,c
 14411  004542  EF66  F022         	goto	l7514
 14412  004546                     l7526:
 14413  004546  5015               	movf	___aodiv@sign^0,w,c
 14414  004548  B4D8               	btfsc	status,2,c
 14415  00454A  EFA9  F022         	goto	u9391
 14416  00454E  EFAB  F022         	goto	u9390
 14417  004552                     u9391:
 14418  004552  EFBB  F022         	goto	l7530
 14419  004556                     u9390:
 14420  004556  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
 14421  004558  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
 14422  00455A  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
 14423  00455C  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
 14424  00455E  1E19               	comf	(___aodiv@quotient+3)^0,f,c
 14425  004560  1E18               	comf	(___aodiv@quotient+2)^0,f,c
 14426  004562  1E17               	comf	(___aodiv@quotient+1)^0,f,c
 14427  004564  6C16               	negf	___aodiv@quotient^0,c
 14428  004566  0E00               	movlw	0
 14429  004568  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
 14430  00456A  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
 14431  00456C  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
 14432  00456E  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
 14433  004570  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
 14434  004572  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
 14435  004574  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
 14436  004576                     l7530:
 14437  004576  C016  F004         	movff	___aodiv@quotient,?___aodiv
 14438  00457A  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
 14439  00457E  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
 14440  004582  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
 14441  004586  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
 14442  00458A  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
 14443  00458E  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
 14444  004592  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
 14445  004596  0012               	return		;funcret
 14446  004598                     __end_of___aodiv:
 14447                           	opt callstack 0
 14448                           
 14449 ;; *************** function _ctoa *****************
 14450 ;; Defined at:
 14451 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 14454 ;;		 -> vsnprintf@f(6), 
 14455 ;;  c               1   32[COMRAM] unsigned char 
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;  w               2   33[COMRAM] int 
 14458 ;;  l               2    0        int 
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  2   30[COMRAM] int 
 14461 ;; Registers used:
 14462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14463 ;; Tracked objects:
 14464 ;;		On entry : 0/0
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14468 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14471 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14472 ;;Total ram usage:        5 bytes
 14473 ;; Hardware stack levels used:    1
 14474 ;; Hardware stack levels required when called:    8
 14475 ;; This function calls:
 14476 ;;		_pad
 14477 ;; This function is called by:
 14478 ;;		_vfpfcnvrt
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           	psect	text35
 14483  005916                     __ptext35:
 14484                           	opt callstack 0
 14485  005916                     _ctoa:
 14486                           	opt callstack 18
 14487  005916                     
 14488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14489  005916  0101               	movlb	1	; () banked
 14490  005918  511C               	movf	_width& (0+255),w,b
 14491  00591A  111D               	iorwf	(_width+1)& (0+255),w,b
 14492  00591C  A4D8               	btfss	status,2,c
 14493  00591E  EF93  F02C         	goto	u10251
 14494  005922  EF95  F02C         	goto	u10250
 14495  005926                     u10251:
 14496  005926  EF9B  F02C         	goto	l8068
 14497  00592A                     u10250:
 14498  00592A                     
 14499                           ; BSR set to: 1
 14500  00592A  C11C  F022         	movff	_width,ctoa@w
 14501  00592E  C11D  F023         	movff	_width+1,ctoa@w+1
 14502  005932  EFA1  F02C         	goto	l8070
 14503  005936                     l8068:
 14504                           
 14505                           ; BSR set to: 1
 14506  005936  0EFF               	movlw	255
 14507  005938  251C               	addwf	_width& (0+255),w,b
 14508  00593A  6E22               	movwf	ctoa@w^0,c
 14509  00593C  0EFF               	movlw	255
 14510  00593E  211D               	addwfc	(_width+1)& (0+255),w,b
 14511  005940  6E23               	movwf	(ctoa@w+1)^0,c
 14512  005942                     l8070:
 14513                           
 14514                           ; BSR set to: 1
 14515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14516  005942  C021  F18A         	movff	ctoa@c,_dbuf
 14517  005946                     
 14518                           ; BSR set to: 1
 14519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14520  005946  0E00               	movlw	0
 14521  005948  6F8B               	movwf	(_dbuf+1)& (0+255),b
 14522  00594A                     
 14523                           ; BSR set to: 1
 14524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14525  00594A  C01F  F014         	movff	ctoa@fp,pad@fp
 14526  00594E  C020  F015         	movff	ctoa@fp+1,pad@fp+1
 14527  005952  0E8A               	movlw	low _dbuf
 14528  005954  6E16               	movwf	pad@buf^0,c
 14529  005956  0E01               	movlw	high _dbuf
 14530  005958  6E17               	movwf	(pad@buf+1)^0,c
 14531  00595A  C022  F018         	movff	ctoa@w,pad@p
 14532  00595E  C023  F019         	movff	ctoa@w+1,pad@p+1
 14533  005962  EC8E  F029         	call	_pad	;wreg free
 14534  005966  C014  F01F         	movff	?_pad,?_ctoa
 14535  00596A  C015  F020         	movff	?_pad+1,?_ctoa+1
 14536  00596E  0012               	return		;funcret
 14537  005970                     __end_of_ctoa:
 14538                           	opt callstack 0
 14539                           
 14540 ;; *************** function _pad *****************
 14541 ;; Defined at:
 14542 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 14545 ;;		 -> vsnprintf@f(6), 
 14546 ;;  buf             2   21[COMRAM] PTR unsigned char 
 14547 ;;		 -> dbuf(80), 
 14548 ;;  p               2   23[COMRAM] int 
 14549 ;; Auto vars:     Size  Location     Type
 14550 ;;  w               2   28[COMRAM] int 
 14551 ;;  i               2   26[COMRAM] int 
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  2   19[COMRAM] int 
 14554 ;; Registers used:
 14555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/0
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14561 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14562 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14564 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14565 ;;Total ram usage:       11 bytes
 14566 ;; Hardware stack levels used:    1
 14567 ;; Hardware stack levels required when called:    7
 14568 ;; This function calls:
 14569 ;;		_fputc
 14570 ;;		_fputs
 14571 ;;		_strlen
 14572 ;; This function is called by:
 14573 ;;		_ctoa
 14574 ;;		_dtoa
 14575 ;;		_efgtoa
 14576 ;;		_otoa
 14577 ;;		_utoa
 14578 ;;		_xtoa
 14579 ;; This function uses a non-reentrant model
 14580 ;;
 14581                           
 14582                           	psect	text36
 14583  00531C                     __ptext36:
 14584                           	opt callstack 0
 14585  00531C                     _pad:
 14586                           	opt callstack 18
 14587  00531C                     
 14588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14589  00531C  0100               	movlb	0	; () banked
 14590  00531E  A1FC               	btfss	_flags& (0+255),0,b
 14591  005320  EF94  F029         	goto	u8991
 14592  005324  EF96  F029         	goto	u8990
 14593  005328                     u8991:
 14594  005328  EFA0  F029         	goto	l7380
 14595  00532C                     u8990:
 14596  00532C                     
 14597                           ; BSR set to: 0
 14598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14599  00532C  C016  F00D         	movff	pad@buf,fputs@s
 14600  005330  C017  F00E         	movff	pad@buf+1,fputs@s+1
 14601  005334  C014  F00F         	movff	pad@fp,fputs@fp
 14602  005338  C015  F010         	movff	pad@fp+1,fputs@fp+1
 14603  00533C  EC95  F02D         	call	_fputs	;wreg free
 14604  005340                     l7380:
 14605                           
 14606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14607  005340  BE19               	btfsc	(pad@p+1)^0,7,c
 14608  005342  EFA5  F029         	goto	u9001
 14609  005346  EFA7  F029         	goto	u9000
 14610  00534A                     u9001:
 14611  00534A  EFAD  F029         	goto	l7384
 14612  00534E                     u9000:
 14613  00534E  C018  F01D         	movff	pad@p,pad@w
 14614  005352  C019  F01E         	movff	pad@p+1,pad@w+1
 14615  005356  EFB1  F029         	goto	l497
 14616  00535A                     l7384:
 14617  00535A  0E00               	movlw	0
 14618  00535C  6E1E               	movwf	(pad@w+1)^0,c
 14619  00535E  0E00               	movlw	0
 14620  005360  6E1D               	movwf	pad@w^0,c
 14621  005362                     l497:
 14622                           
 14623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14624  005362  0E00               	movlw	0
 14625  005364  6E1C               	movwf	(pad@i+1)^0,c
 14626  005366  0E00               	movlw	0
 14627  005368  6E1B               	movwf	pad@i^0,c
 14628                           
 14629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14630  00536A  EFC3  F029         	goto	l7390
 14631  00536E                     l7386:
 14632                           
 14633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14634  00536E  0E00               	movlw	0
 14635  005370  6E05               	movwf	(fputc@c+1)^0,c
 14636  005372  0E20               	movlw	32
 14637  005374  6E04               	movwf	fputc@c^0,c
 14638  005376  C014  F006         	movff	pad@fp,fputc@fp
 14639  00537A  C015  F007         	movff	pad@fp+1,fputc@fp+1
 14640  00537E  EC29  F029         	call	_fputc	;wreg free
 14641  005382                     
 14642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14643  005382  4A1B               	infsnz	pad@i^0,f,c
 14644  005384  2A1C               	incf	(pad@i+1)^0,f,c
 14645  005386                     l7390:
 14646                           
 14647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14648  005386  501D               	movf	pad@w^0,w,c
 14649  005388  5C1B               	subwf	pad@i^0,w,c
 14650  00538A  501C               	movf	(pad@i+1)^0,w,c
 14651  00538C  0A80               	xorlw	128
 14652  00538E  6E1A               	movwf	??_pad^0,c
 14653  005390  501E               	movf	(pad@w+1)^0,w,c
 14654  005392  0A80               	xorlw	128
 14655  005394  581A               	subwfb	??_pad^0,w,c
 14656  005396  A0D8               	btfss	status,0,c
 14657  005398  EFD0  F029         	goto	u9011
 14658  00539C  EFD2  F029         	goto	u9010
 14659  0053A0                     u9011:
 14660  0053A0  EFB7  F029         	goto	l7386
 14661  0053A4                     u9010:
 14662  0053A4                     
 14663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14664  0053A4  0100               	movlb	0	; () banked
 14665  0053A6  B1FC               	btfsc	_flags& (0+255),0,b
 14666  0053A8  EFD8  F029         	goto	u9021
 14667  0053AC  EFDA  F029         	goto	u9020
 14668  0053B0                     u9021:
 14669  0053B0  EFE4  F029         	goto	l7394
 14670  0053B4                     u9020:
 14671  0053B4                     
 14672                           ; BSR set to: 0
 14673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14674  0053B4  C016  F00D         	movff	pad@buf,fputs@s
 14675  0053B8  C017  F00E         	movff	pad@buf+1,fputs@s+1
 14676  0053BC  C014  F00F         	movff	pad@fp,fputs@fp
 14677  0053C0  C015  F010         	movff	pad@fp+1,fputs@fp+1
 14678  0053C4  EC95  F02D         	call	_fputs	;wreg free
 14679  0053C8                     l7394:
 14680                           
 14681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14682  0053C8  C016  F004         	movff	pad@buf,strlen@s
 14683  0053CC  C017  F005         	movff	pad@buf+1,strlen@s+1
 14684  0053D0  ECA3  F02E         	call	_strlen	;wreg free
 14685  0053D4  501D               	movf	pad@w^0,w,c
 14686  0053D6  2404               	addwf	?_strlen^0,w,c
 14687  0053D8  6E14               	movwf	?_pad^0,c
 14688  0053DA  501E               	movf	(pad@w+1)^0,w,c
 14689  0053DC  2005               	addwfc	(?_strlen+1)^0,w,c
 14690  0053DE  6E15               	movwf	(?_pad+1)^0,c
 14691  0053E0  0012               	return		;funcret
 14692  0053E2                     __end_of_pad:
 14693                           	opt callstack 0
 14694                           
 14695 ;; *************** function _strlen *****************
 14696 ;; Defined at:
 14697 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;  s               2    3[COMRAM] PTR const unsigned char 
 14700 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), tensao_in(4), 
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;  a               2    5[COMRAM] PTR const unsigned char 
 14703 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), tensao_in(4), 
 14704 ;; Return value:  Size  Location     Type
 14705 ;;                  2    3[COMRAM] unsigned int 
 14706 ;; Registers used:
 14707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14708 ;; Tracked objects:
 14709 ;;		On entry : 0/0
 14710 ;;		On exit  : 0/0
 14711 ;;		Unchanged: 0/0
 14712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14716 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14717 ;;Total ram usage:        4 bytes
 14718 ;; Hardware stack levels used:    1
 14719 ;; Hardware stack levels required when called:    4
 14720 ;; This function calls:
 14721 ;;		Nothing
 14722 ;; This function is called by:
 14723 ;;		_pad
 14724 ;;		_stoa
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text37
 14729  005D46                     __ptext37:
 14730                           	opt callstack 0
 14731  005D46                     _strlen:
 14732                           	opt callstack 20
 14733  005D46  C004  F006         	movff	strlen@s,strlen@a
 14734  005D4A  C005  F007         	movff	strlen@s+1,strlen@a+1
 14735  005D4E  EFAB  F02E         	goto	l7160
 14736  005D52                     l7158:
 14737  005D52  4A04               	infsnz	strlen@s^0,f,c
 14738  005D54  2A05               	incf	(strlen@s+1)^0,f,c
 14739  005D56                     l7160:
 14740  005D56  C004  FFD9         	movff	strlen@s,fsr2l
 14741  005D5A  C005  FFDA         	movff	strlen@s+1,fsr2h
 14742  005D5E  50DF               	movf	indf2,w,c
 14743  005D60  A4D8               	btfss	status,2,c
 14744  005D62  EFB5  F02E         	goto	u8551
 14745  005D66  EFB7  F02E         	goto	u8550
 14746  005D6A                     u8551:
 14747  005D6A  EFA9  F02E         	goto	l7158
 14748  005D6E                     u8550:
 14749  005D6E  5006               	movf	strlen@a^0,w,c
 14750  005D70  5C04               	subwf	strlen@s^0,w,c
 14751  005D72  6E04               	movwf	?_strlen^0,c
 14752  005D74  5007               	movf	(strlen@a+1)^0,w,c
 14753  005D76  5805               	subwfb	(strlen@s+1)^0,w,c
 14754  005D78  6E05               	movwf	(?_strlen+1)^0,c
 14755  005D7A  0012               	return		;funcret
 14756  005D7C                     __end_of_strlen:
 14757                           	opt callstack 0
 14758                           
 14759 ;; *************** function _fputs *****************
 14760 ;; Defined at:
 14761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14762 ;; Parameters:    Size  Location     Type
 14763 ;;  s               2   12[COMRAM] PTR const unsigned char 
 14764 ;;		 -> dbuf(80), 
 14765 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 14766 ;;		 -> vsnprintf@f(6), 
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;  i               2   17[COMRAM] int 
 14769 ;;  c               1   16[COMRAM] unsigned char 
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  2   12[COMRAM] int 
 14772 ;; Registers used:
 14773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 0/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14782 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14783 ;;Total ram usage:        7 bytes
 14784 ;; Hardware stack levels used:    1
 14785 ;; Hardware stack levels required when called:    6
 14786 ;; This function calls:
 14787 ;;		_fputc
 14788 ;; This function is called by:
 14789 ;;		_pad
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           	psect	text38
 14794  005B2A                     __ptext38:
 14795                           	opt callstack 0
 14796  005B2A                     _fputs:
 14797                           	opt callstack 18
 14798  005B2A  0E00               	movlw	0
 14799  005B2C  6E13               	movwf	(fputs@i+1)^0,c
 14800  005B2E  0E00               	movlw	0
 14801  005B30  6E12               	movwf	fputs@i^0,c
 14802  005B32  EFA6  F02D         	goto	l7154
 14803  005B36                     l7150:
 14804  005B36  C011  F004         	movff	fputs@c,fputc@c
 14805  005B3A  6A05               	clrf	(fputc@c+1)^0,c
 14806  005B3C  C00F  F006         	movff	fputs@fp,fputc@fp
 14807  005B40  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 14808  005B44  EC29  F029         	call	_fputc	;wreg free
 14809  005B48  4A12               	infsnz	fputs@i^0,f,c
 14810  005B4A  2A13               	incf	(fputs@i+1)^0,f,c
 14811  005B4C                     l7154:
 14812  005B4C  5012               	movf	fputs@i^0,w,c
 14813  005B4E  240D               	addwf	fputs@s^0,w,c
 14814  005B50  6ED9               	movwf	fsr2l,c
 14815  005B52  5013               	movf	(fputs@i+1)^0,w,c
 14816  005B54  200E               	addwfc	(fputs@s+1)^0,w,c
 14817  005B56  6EDA               	movwf	fsr2h,c
 14818  005B58  50DF               	movf	indf2,w,c
 14819  005B5A  6E11               	movwf	fputs@c^0,c
 14820  005B5C  5011               	movf	fputs@c^0,w,c
 14821  005B5E  A4D8               	btfss	status,2,c
 14822  005B60  EFB4  F02D         	goto	u8541
 14823  005B64  EFB6  F02D         	goto	u8540
 14824  005B68                     u8541:
 14825  005B68  EF9B  F02D         	goto	l7150
 14826  005B6C                     u8540:
 14827  005B6C  0012               	return		;funcret
 14828  005B6E                     __end_of_fputs:
 14829                           	opt callstack 0
 14830                           
 14831 ;; *************** function _fputc *****************
 14832 ;; Defined at:
 14833 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14834 ;; Parameters:    Size  Location     Type
 14835 ;;  c               2    3[COMRAM] int 
 14836 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 14837 ;;		 -> vsnprintf@f(6), 
 14838 ;; Auto vars:     Size  Location     Type
 14839 ;;		None
 14840 ;; Return value:  Size  Location     Type
 14841 ;;                  2    3[COMRAM] int 
 14842 ;; Registers used:
 14843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14844 ;; Tracked objects:
 14845 ;;		On entry : 0/0
 14846 ;;		On exit  : 0/0
 14847 ;;		Unchanged: 0/0
 14848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14851 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14852 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14853 ;;Total ram usage:        9 bytes
 14854 ;; Hardware stack levels used:    1
 14855 ;; Hardware stack levels required when called:    5
 14856 ;; This function calls:
 14857 ;;		_putch
 14858 ;; This function is called by:
 14859 ;;		_pad
 14860 ;;		_stoa
 14861 ;;		_vfpfcnvrt
 14862 ;;		_fputs
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text39
 14867  005252                     __ptext39:
 14868                           	opt callstack 0
 14869  005252                     _fputc:
 14870                           	opt callstack 18
 14871  005252  5006               	movf	fputc@fp^0,w,c
 14872  005254  1007               	iorwf	(fputc@fp+1)^0,w,c
 14873  005256  B4D8               	btfsc	status,2,c
 14874  005258  EF30  F029         	goto	u8501
 14875  00525C  EF32  F029         	goto	u8500
 14876  005260                     u8501:
 14877  005260  EF3B  F029         	goto	l7138
 14878  005264                     u8500:
 14879  005264  5006               	movf	fputc@fp^0,w,c
 14880  005266  1007               	iorwf	(fputc@fp+1)^0,w,c
 14881  005268  A4D8               	btfss	status,2,c
 14882  00526A  EF39  F029         	goto	u8511
 14883  00526E  EF3B  F029         	goto	u8510
 14884  005272                     u8511:
 14885  005272  EF40  F029         	goto	l7140
 14886  005276                     u8510:
 14887  005276                     l7138:
 14888  005276  5004               	movf	fputc@c^0,w,c
 14889  005278  EC93  F02F         	call	_putch
 14890  00527C  EF8D  F029         	goto	l1576
 14891  005280                     l7140:
 14892  005280  EE20 F004          	lfsr	2,4
 14893  005284  5006               	movf	fputc@fp^0,w,c
 14894  005286  26D9               	addwf	fsr2l,f,c
 14895  005288  5007               	movf	(fputc@fp+1)^0,w,c
 14896  00528A  22DA               	addwfc	fsr2h,f,c
 14897  00528C  50DE               	movf	postinc2,w,c
 14898  00528E  10DE               	iorwf	postinc2,w,c
 14899  005290  B4D8               	btfsc	status,2,c
 14900  005292  EF4D  F029         	goto	u8521
 14901  005296  EF4F  F029         	goto	u8520
 14902  00529A                     u8521:
 14903  00529A  EF6A  F029         	goto	l7144
 14904  00529E                     u8520:
 14905  00529E  EE20 F004          	lfsr	2,4
 14906  0052A2  5006               	movf	fputc@fp^0,w,c
 14907  0052A4  26D9               	addwf	fsr2l,f,c
 14908  0052A6  5007               	movf	(fputc@fp+1)^0,w,c
 14909  0052A8  22DA               	addwfc	fsr2h,f,c
 14910  0052AA  EE10 F002          	lfsr	1,2
 14911  0052AE  5006               	movf	fputc@fp^0,w,c
 14912  0052B0  26E1               	addwf	fsr1l,f,c
 14913  0052B2  5007               	movf	(fputc@fp+1)^0,w,c
 14914  0052B4  22E2               	addwfc	fsr1h,f,c
 14915  0052B6  50DE               	movf	postinc2,w,c
 14916  0052B8  5CE6               	subwf	postinc1,w,c
 14917  0052BA  50E6               	movf	postinc1,w,c
 14918  0052BC  0A80               	xorlw	128
 14919  0052BE  6E0C               	movwf	(??_fputc+4)^0,c
 14920  0052C0  50DE               	movf	postinc2,w,c
 14921  0052C2  0A80               	xorlw	128
 14922  0052C4  580C               	subwfb	(??_fputc+4)^0,w,c
 14923  0052C6  B0D8               	btfsc	status,0,c
 14924  0052C8  EF68  F029         	goto	u8531
 14925  0052CC  EF6A  F029         	goto	u8530
 14926  0052D0                     u8531:
 14927  0052D0  EF8D  F029         	goto	l1576
 14928  0052D4                     u8530:
 14929  0052D4                     l7144:
 14930  0052D4  EE20 F002          	lfsr	2,2
 14931  0052D8  5006               	movf	fputc@fp^0,w,c
 14932  0052DA  26D9               	addwf	fsr2l,f,c
 14933  0052DC  5007               	movf	(fputc@fp+1)^0,w,c
 14934  0052DE  22DA               	addwfc	fsr2h,f,c
 14935  0052E0  CFDE F008          	movff	postinc2,??_fputc
 14936  0052E4  CFDD F009          	movff	postdec2,??_fputc+1
 14937  0052E8  C006  FFD9         	movff	fputc@fp,fsr2l
 14938  0052EC  C007  FFDA         	movff	fputc@fp+1,fsr2h
 14939  0052F0  CFDE F00A          	movff	postinc2,??_fputc+2
 14940  0052F4  CFDD F00B          	movff	postdec2,??_fputc+3
 14941  0052F8  5008               	movf	??_fputc^0,w,c
 14942  0052FA  240A               	addwf	(??_fputc+2)^0,w,c
 14943  0052FC  6ED9               	movwf	fsr2l,c
 14944  0052FE  5009               	movf	(??_fputc+1)^0,w,c
 14945  005300  200B               	addwfc	(??_fputc+3)^0,w,c
 14946  005302  6EDA               	movwf	fsr2h,c
 14947  005304  C004  FFDF         	movff	fputc@c,indf2
 14948  005308  EE20 F002          	lfsr	2,2
 14949  00530C  5006               	movf	fputc@fp^0,w,c
 14950  00530E  26D9               	addwf	fsr2l,f,c
 14951  005310  5007               	movf	(fputc@fp+1)^0,w,c
 14952  005312  22DA               	addwfc	fsr2h,f,c
 14953  005314  2ADE               	incf	postinc2,f,c
 14954  005316  0E00               	movlw	0
 14955  005318  22DD               	addwfc	postdec2,f,c
 14956  00531A                     l1576:
 14957  00531A  0012               	return		;funcret
 14958  00531C                     __end_of_fputc:
 14959                           	opt callstack 0
 14960                           
 14961 ;; *************** function _putch *****************
 14962 ;; Defined at:
 14963 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;  c               1    wreg     unsigned char 
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;  c               1    0[COMRAM] unsigned char 
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      void 
 14970 ;; Registers used:
 14971 ;;		wreg
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14981 ;;Total ram usage:        0 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    4
 14984 ;; This function calls:
 14985 ;;		Nothing
 14986 ;; This function is called by:
 14987 ;;		_fputc
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text40
 14992  005F26                     __ptext40:
 14993                           	opt callstack 0
 14994  005F26                     _putch:
 14995                           	opt callstack 18
 14996  005F26  0012               	return		;funcret
 14997  005F28                     __end_of_putch:
 14998                           	opt callstack 0
 14999                           
 15000 ;; *************** function _atoi *****************
 15001 ;; Defined at:
 15002 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;  s               2   10[COMRAM] PTR const unsigned char 
 15005 ;;		 -> STR_4(21), STR_3(16), STR_2(17), 
 15006 ;; Auto vars:     Size  Location     Type
 15007 ;;  n               2   23[COMRAM] int 
 15008 ;;  neg             2   16[COMRAM] int 
 15009 ;; Return value:  Size  Location     Type
 15010 ;;                  2   10[COMRAM] int 
 15011 ;; Registers used:
 15012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15013 ;; Tracked objects:
 15014 ;;		On entry : 0/0
 15015 ;;		On exit  : 0/0
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15019 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15021 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15022 ;;Total ram usage:       15 bytes
 15023 ;; Hardware stack levels used:    1
 15024 ;; Hardware stack levels required when called:    5
 15025 ;; This function calls:
 15026 ;;		___wmul
 15027 ;;		_isdigit
 15028 ;;		_isspace
 15029 ;; This function is called by:
 15030 ;;		_vfpfcnvrt
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           	psect	text41
 15035  004276                     __ptext41:
 15036                           	opt callstack 0
 15037  004276                     _atoi:
 15038                           	opt callstack 21
 15039  004276  0E00               	movlw	0
 15040  004278  6E19               	movwf	(atoi@n+1)^0,c
 15041  00427A  0E00               	movlw	0
 15042  00427C  6E18               	movwf	atoi@n^0,c
 15043  00427E  0E00               	movlw	0
 15044  004280  6E12               	movwf	(atoi@neg+1)^0,c
 15045  004282  0E00               	movlw	0
 15046  004284  6E11               	movwf	atoi@neg^0,c
 15047  004286  EF47  F021         	goto	l8634
 15048  00428A                     l8632:
 15049  00428A  4A0B               	infsnz	atoi@s^0,f,c
 15050  00428C  2A0C               	incf	(atoi@s+1)^0,f,c
 15051  00428E                     l8634:
 15052  00428E  0E01               	movlw	1
 15053  004290  6E17               	movwf	_atoi$1978^0,c
 15054  004292  C00B  FFF6         	movff	atoi@s,tblptrl
 15055  004296  C00C  FFF7         	movff	atoi@s+1,tblptrh
 15056  00429A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15057  00429A  6AF8               	clrf	tblptru,c
 15058  00429C                     	endif
 15059  00429C                     	if	0	;tblptru may be non-zero
 15060  00429C                     	endif
 15061  00429C  0008               	tblrd		*
 15062  00429E  50F5               	movf	tablat,w,c
 15063  0042A0  0A20               	xorlw	32
 15064  0042A2  B4D8               	btfsc	status,2,c
 15065  0042A4  EF56  F021         	goto	u11361
 15066  0042A8  EF58  F021         	goto	u11360
 15067  0042AC                     u11361:
 15068  0042AC  EF76  F021         	goto	l8642
 15069  0042B0                     u11360:
 15070  0042B0  0EF7               	movlw	247
 15071  0042B2  6E0D               	movwf	??_atoi^0,c
 15072  0042B4  0EFF               	movlw	255
 15073  0042B6  6E0E               	movwf	(??_atoi+1)^0,c
 15074  0042B8  C00B  FFF6         	movff	atoi@s,tblptrl
 15075  0042BC  C00C  FFF7         	movff	atoi@s+1,tblptrh
 15076  0042C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15077  0042C0  6AF8               	clrf	tblptru,c
 15078  0042C2                     	endif
 15079  0042C2                     	if	0	;tblptru may be non-zero
 15080  0042C2                     	endif
 15081  0042C2  0008               	tblrd		*
 15082  0042C4  50F5               	movf	tablat,w,c
 15083  0042C6  6E0F               	movwf	(??_atoi+2)^0,c
 15084  0042C8  6A10               	clrf	(??_atoi+3)^0,c
 15085  0042CA  500D               	movf	??_atoi^0,w,c
 15086  0042CC  260F               	addwf	(??_atoi+2)^0,f,c
 15087  0042CE  500E               	movf	(??_atoi+1)^0,w,c
 15088  0042D0  2210               	addwfc	(??_atoi+3)^0,f,c
 15089  0042D2  5010               	movf	(??_atoi+3)^0,w,c
 15090  0042D4  E109               	bnz	u11370
 15091  0042D6  0E05               	movlw	5
 15092  0042D8  5C0F               	subwf	(??_atoi+2)^0,w,c
 15093  0042DA  A0D8               	btfss	status,0,c
 15094  0042DC  EF72  F021         	goto	u11371
 15095  0042E0  EF74  F021         	goto	u11370
 15096  0042E4                     u11371:
 15097  0042E4  EF76  F021         	goto	l8642
 15098  0042E8                     u11370:
 15099  0042E8  0E00               	movlw	0
 15100  0042EA  6E17               	movwf	_atoi$1978^0,c
 15101  0042EC                     l8642:
 15102  0042EC  C017  F013         	movff	_atoi$1978,_atoi$1977
 15103  0042F0  6A14               	clrf	(_atoi$1977+1)^0,c
 15104  0042F2  5013               	movf	_atoi$1977^0,w,c
 15105  0042F4  1014               	iorwf	(_atoi$1977+1)^0,w,c
 15106  0042F6  A4D8               	btfss	status,2,c
 15107  0042F8  EF80  F021         	goto	u11381
 15108  0042FC  EF82  F021         	goto	u11380
 15109  004300                     u11381:
 15110  004300  EF45  F021         	goto	l8632
 15111  004304                     u11380:
 15112  004304  EF8C  F021         	goto	l8652
 15113  004308                     l8648:
 15114  004308  0E00               	movlw	0
 15115  00430A  6E12               	movwf	(atoi@neg+1)^0,c
 15116  00430C  0E01               	movlw	1
 15117  00430E  6E11               	movwf	atoi@neg^0,c
 15118  004310                     l8650:
 15119  004310  4A0B               	infsnz	atoi@s^0,f,c
 15120  004312  2A0C               	incf	(atoi@s+1)^0,f,c
 15121  004314  EFC3  F021         	goto	l8658
 15122  004318                     l8652:
 15123  004318  C00B  FFF6         	movff	atoi@s,tblptrl
 15124  00431C  C00C  FFF7         	movff	atoi@s+1,tblptrh
 15125  004320                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15126  004320  6AF8               	clrf	tblptru,c
 15127  004322                     	endif
 15128  004322                     	if	0	;tblptru may be non-zero
 15129  004322                     	endif
 15130  004322  0008               	tblrd		*
 15131  004324  50F5               	movf	tablat,w,c
 15132  004326  6E0D               	movwf	??_atoi^0,c
 15133  004328  6A0E               	clrf	(??_atoi+1)^0,c
 15134                           
 15135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15136                           ; Switch size 1, requested type "simple"
 15137                           ; Number of cases is 1, Range of values is 0 to 0
 15138                           ; switch strategies available:
 15139                           ; Name         Instructions Cycles
 15140                           ; simple_byte            4     3 (average)
 15141                           ;	Chosen strategy is simple_byte
 15142  00432A  500E               	movf	(??_atoi+1)^0,w,c
 15143  00432C  0A00               	xorlw	0	; case 0
 15144  00432E  B4D8               	btfsc	status,2,c
 15145  004330  EF9C  F021         	goto	l9208
 15146  004334  EFC3  F021         	goto	l8658
 15147  004338                     l9208:
 15148                           
 15149                           ; Switch size 1, requested type "simple"
 15150                           ; Number of cases is 2, Range of values is 43 to 45
 15151                           ; switch strategies available:
 15152                           ; Name         Instructions Cycles
 15153                           ; simple_byte            7     4 (average)
 15154                           ;	Chosen strategy is simple_byte
 15155  004338  500D               	movf	??_atoi^0,w,c
 15156  00433A  0A2B               	xorlw	43	; case 43
 15157  00433C  B4D8               	btfsc	status,2,c
 15158  00433E  EF88  F021         	goto	l8650
 15159  004342  0A06               	xorlw	6	; case 45
 15160  004344  B4D8               	btfsc	status,2,c
 15161  004346  EF84  F021         	goto	l8648
 15162  00434A  EFC3  F021         	goto	l8658
 15163  00434E                     l8654:
 15164  00434E  C018  F004         	movff	atoi@n,___wmul@multiplier
 15165  004352  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
 15166  004356  0E00               	movlw	0
 15167  004358  6E07               	movwf	(___wmul@multiplicand+1)^0,c
 15168  00435A  0E0A               	movlw	10
 15169  00435C  6E06               	movwf	___wmul@multiplicand^0,c
 15170  00435E  EC1B  F02F         	call	___wmul	;wreg free
 15171  004362  C00B  FFF6         	movff	atoi@s,tblptrl
 15172  004366  C00C  FFF7         	movff	atoi@s+1,tblptrh
 15173  00436A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15174  00436A  6AF8               	clrf	tblptru,c
 15175  00436C                     	endif
 15176  00436C                     	if	0	;tblptru may be non-zero
 15177  00436C                     	endif
 15178  00436C  0008               	tblrd		*
 15179  00436E  50F5               	movf	tablat,w,c
 15180  004370  5E04               	subwf	?___wmul^0,f,c
 15181  004372  0E00               	movlw	0
 15182  004374  5A05               	subwfb	(?___wmul+1)^0,f,c
 15183  004376  0E30               	movlw	48
 15184  004378  2404               	addwf	?___wmul^0,w,c
 15185  00437A  6E18               	movwf	atoi@n^0,c
 15186  00437C  0E00               	movlw	0
 15187  00437E  2005               	addwfc	(?___wmul+1)^0,w,c
 15188  004380  6E19               	movwf	(atoi@n+1)^0,c
 15189  004382  EF88  F021         	goto	l8650
 15190  004386                     l8658:
 15191  004386  0ED0               	movlw	208
 15192  004388  6E0D               	movwf	??_atoi^0,c
 15193  00438A  0EFF               	movlw	255
 15194  00438C  6E0E               	movwf	(??_atoi+1)^0,c
 15195  00438E  C00B  FFF6         	movff	atoi@s,tblptrl
 15196  004392  C00C  FFF7         	movff	atoi@s+1,tblptrh
 15197  004396                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15198  004396  6AF8               	clrf	tblptru,c
 15199  004398                     	endif
 15200  004398                     	if	0	;tblptru may be non-zero
 15201  004398                     	endif
 15202  004398  0008               	tblrd		*
 15203  00439A  50F5               	movf	tablat,w,c
 15204  00439C  6E0F               	movwf	(??_atoi+2)^0,c
 15205  00439E  6A10               	clrf	(??_atoi+3)^0,c
 15206  0043A0  500D               	movf	??_atoi^0,w,c
 15207  0043A2  260F               	addwf	(??_atoi+2)^0,f,c
 15208  0043A4  500E               	movf	(??_atoi+1)^0,w,c
 15209  0043A6  2210               	addwfc	(??_atoi+3)^0,f,c
 15210  0043A8  5010               	movf	(??_atoi+3)^0,w,c
 15211  0043AA  E10A               	bnz	u11390
 15212  0043AC  0E0A               	movlw	10
 15213  0043AE  5C0F               	subwf	(??_atoi+2)^0,w,c
 15214  0043B0  A0D8               	btfss	status,0,c
 15215  0043B2  EFDD  F021         	goto	u11391
 15216  0043B6  EFE0  F021         	goto	u11390
 15217  0043BA                     u11391:
 15218  0043BA  0E01               	movlw	1
 15219  0043BC  EFE1  F021         	goto	u11400
 15220  0043C0                     u11390:
 15221  0043C0  0E00               	movlw	0
 15222  0043C2                     u11400:
 15223  0043C2  6E15               	movwf	_atoi$1979^0,c
 15224  0043C4  6A16               	clrf	(_atoi$1979+1)^0,c
 15225  0043C6  5015               	movf	_atoi$1979^0,w,c
 15226  0043C8  1016               	iorwf	(_atoi$1979+1)^0,w,c
 15227  0043CA  A4D8               	btfss	status,2,c
 15228  0043CC  EFEA  F021         	goto	u11411
 15229  0043D0  EFEC  F021         	goto	u11410
 15230  0043D4                     u11411:
 15231  0043D4  EFA7  F021         	goto	l8654
 15232  0043D8                     u11410:
 15233  0043D8  5011               	movf	atoi@neg^0,w,c
 15234  0043DA  1012               	iorwf	(atoi@neg+1)^0,w,c
 15235  0043DC  A4D8               	btfss	status,2,c
 15236  0043DE  EFF3  F021         	goto	u11421
 15237  0043E2  EFF5  F021         	goto	u11420
 15238  0043E6                     u11421:
 15239  0043E6  EF03  F022         	goto	l1522
 15240  0043EA                     u11420:
 15241  0043EA  C018  F00D         	movff	atoi@n,??_atoi
 15242  0043EE  C019  F00E         	movff	atoi@n+1,??_atoi+1
 15243  0043F2  1E0D               	comf	??_atoi^0,f,c
 15244  0043F4  1E0E               	comf	(??_atoi+1)^0,f,c
 15245  0043F6  4A0D               	infsnz	??_atoi^0,f,c
 15246  0043F8  2A0E               	incf	(??_atoi+1)^0,f,c
 15247  0043FA  C00D  F00B         	movff	??_atoi,?_atoi
 15248  0043FE  C00E  F00C         	movff	??_atoi+1,?_atoi+1
 15249  004402  EF07  F022         	goto	l1525
 15250  004406                     l1522:
 15251  004406  C018  F00B         	movff	atoi@n,?_atoi
 15252  00440A  C019  F00C         	movff	atoi@n+1,?_atoi+1
 15253  00440E                     l1525:
 15254  00440E  0012               	return		;funcret
 15255  004410                     __end_of_atoi:
 15256                           	opt callstack 0
 15257                           
 15258 ;; *************** function _isspace *****************
 15259 ;; Defined at:
 15260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15261 ;; Parameters:    Size  Location     Type
 15262 ;;  c               2    3[COMRAM] int 
 15263 ;; Auto vars:     Size  Location     Type
 15264 ;;		None
 15265 ;; Return value:  Size  Location     Type
 15266 ;;                  2    3[COMRAM] int 
 15267 ;; Registers used:
 15268 ;;		wreg, status,2, status,0
 15269 ;; Tracked objects:
 15270 ;;		On entry : 0/0
 15271 ;;		On exit  : 0/0
 15272 ;;		Unchanged: 0/0
 15273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15277 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15278 ;;Total ram usage:        7 bytes
 15279 ;; Hardware stack levels used:    1
 15280 ;; Hardware stack levels required when called:    4
 15281 ;; This function calls:
 15282 ;;		Nothing
 15283 ;; This function is called by:
 15284 ;;		_atoi
 15285 ;; This function uses a non-reentrant model
 15286 ;;
 15287                           
 15288                           	psect	text42
 15289  005970                     __ptext42:
 15290                           	opt callstack 0
 15291  005970                     _isspace:
 15292                           	opt callstack 21
 15293  005970  0E01               	movlw	1
 15294  005972  6E0A               	movwf	_isspace$2017^0,c
 15295  005974  0E20               	movlw	32
 15296  005976  1804               	xorwf	isspace@c^0,w,c
 15297  005978  1005               	iorwf	(isspace@c+1)^0,w,c
 15298  00597A  B4D8               	btfsc	status,2,c
 15299  00597C  EFC2  F02C         	goto	u10231
 15300  005980  EFC4  F02C         	goto	u10230
 15301  005984                     u10231:
 15302  005984  EFDD  F02C         	goto	l8060
 15303  005988                     u10230:
 15304  005988  0EF7               	movlw	247
 15305  00598A  6E06               	movwf	??_isspace^0,c
 15306  00598C  0EFF               	movlw	255
 15307  00598E  6E07               	movwf	(??_isspace+1)^0,c
 15308  005990  C004  F008         	movff	isspace@c,??_isspace+2
 15309  005994  C005  F009         	movff	isspace@c+1,??_isspace+3
 15310  005998  5006               	movf	??_isspace^0,w,c
 15311  00599A  2608               	addwf	(??_isspace+2)^0,f,c
 15312  00599C  5007               	movf	(??_isspace+1)^0,w,c
 15313  00599E  2209               	addwfc	(??_isspace+3)^0,f,c
 15314  0059A0  5009               	movf	(??_isspace+3)^0,w,c
 15315  0059A2  E109               	bnz	u10240
 15316  0059A4  0E05               	movlw	5
 15317  0059A6  5C08               	subwf	(??_isspace+2)^0,w,c
 15318  0059A8  A0D8               	btfss	status,0,c
 15319  0059AA  EFD9  F02C         	goto	u10241
 15320  0059AE  EFDB  F02C         	goto	u10240
 15321  0059B2                     u10241:
 15322  0059B2  EFDD  F02C         	goto	l8060
 15323  0059B6                     u10240:
 15324  0059B6  0E00               	movlw	0
 15325  0059B8  6E0A               	movwf	_isspace$2017^0,c
 15326  0059BA                     l8060:
 15327  0059BA  C00A  F004         	movff	_isspace$2017,?_isspace
 15328  0059BE  6A05               	clrf	(?_isspace+1)^0,c
 15329  0059C0  0012               	return		;funcret
 15330  0059C2                     __end_of_isspace:
 15331                           	opt callstack 0
 15332                           
 15333 ;; *************** function _isdigit *****************
 15334 ;; Defined at:
 15335 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;  c               2    3[COMRAM] int 
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;		None
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  2    3[COMRAM] int 
 15342 ;; Registers used:
 15343 ;;		wreg, status,2, status,0
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15353 ;;Total ram usage:        6 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; Hardware stack levels required when called:    4
 15356 ;; This function calls:
 15357 ;;		Nothing
 15358 ;; This function is called by:
 15359 ;;		_vfpfcnvrt
 15360 ;;		_atoi
 15361 ;; This function uses a non-reentrant model
 15362 ;;
 15363                           
 15364                           	psect	text43
 15365  005D0E                     __ptext43:
 15366                           	opt callstack 0
 15367  005D0E                     _isdigit:
 15368                           	opt callstack 22
 15369  005D0E  0ED0               	movlw	208
 15370  005D10  6E06               	movwf	??_isdigit^0,c
 15371  005D12  0EFF               	movlw	255
 15372  005D14  6E07               	movwf	(??_isdigit+1)^0,c
 15373  005D16  C004  F008         	movff	isdigit@c,??_isdigit+2
 15374  005D1A  C005  F009         	movff	isdigit@c+1,??_isdigit+3
 15375  005D1E  5006               	movf	??_isdigit^0,w,c
 15376  005D20  2608               	addwf	(??_isdigit+2)^0,f,c
 15377  005D22  5007               	movf	(??_isdigit+1)^0,w,c
 15378  005D24  2209               	addwfc	(??_isdigit+3)^0,f,c
 15379  005D26  5009               	movf	(??_isdigit+3)^0,w,c
 15380  005D28  E10A               	bnz	u9310
 15381  005D2A  0E0A               	movlw	10
 15382  005D2C  5C08               	subwf	(??_isdigit+2)^0,w,c
 15383  005D2E  A0D8               	btfss	status,0,c
 15384  005D30  EF9C  F02E         	goto	u9311
 15385  005D34  EF9F  F02E         	goto	u9310
 15386  005D38                     u9311:
 15387  005D38  0E01               	movlw	1
 15388  005D3A  EFA0  F02E         	goto	u9320
 15389  005D3E                     u9310:
 15390  005D3E  0E00               	movlw	0
 15391  005D40                     u9320:
 15392  005D40  6E04               	movwf	?_isdigit^0,c
 15393  005D42  6A05               	clrf	(?_isdigit+1)^0,c
 15394  005D44  0012               	return		;funcret
 15395  005D46                     __end_of_isdigit:
 15396                           	opt callstack 0
 15397                           
 15398 ;; *************** function ___wmul *****************
 15399 ;; Defined at:
 15400 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;  multiplier      2    3[COMRAM] unsigned int 
 15403 ;;  multiplicand    2    5[COMRAM] unsigned int 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  product         2    7[COMRAM] unsigned int 
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  2    3[COMRAM] unsigned int 
 15408 ;; Registers used:
 15409 ;;		wreg, status,2, status,0, prodl, prodh
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;Total ram usage:        6 bytes
 15420 ;; Hardware stack levels used:    1
 15421 ;; Hardware stack levels required when called:    4
 15422 ;; This function calls:
 15423 ;;		Nothing
 15424 ;; This function is called by:
 15425 ;;		_atoi
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           	psect	text44
 15430  005E36                     __ptext44:
 15431                           	opt callstack 0
 15432  005E36                     ___wmul:
 15433                           	opt callstack 21
 15434  005E36  5004               	movf	___wmul@multiplier^0,w,c
 15435  005E38  0206               	mulwf	___wmul@multiplicand^0,c
 15436  005E3A  CFF3 F008          	movff	prodl,___wmul@product
 15437  005E3E  CFF4 F009          	movff	prodh,___wmul@product+1
 15438  005E42  5004               	movf	___wmul@multiplier^0,w,c
 15439  005E44  0207               	mulwf	(___wmul@multiplicand+1)^0,c
 15440  005E46  50F3               	movf	243,w,c
 15441  005E48  2609               	addwf	(___wmul@product+1)^0,f,c
 15442  005E4A  5005               	movf	(___wmul@multiplier+1)^0,w,c
 15443  005E4C  0206               	mulwf	___wmul@multiplicand^0,c
 15444  005E4E  50F3               	movf	243,w,c
 15445  005E50  2609               	addwf	(___wmul@product+1)^0,f,c
 15446  005E52  C008  F004         	movff	___wmul@product,?___wmul
 15447  005E56  C009  F005         	movff	___wmul@product+1,?___wmul+1
 15448  005E5A  0012               	return		;funcret
 15449  005E5C                     __end_of___wmul:
 15450                           	opt callstack 0
 15451                           
 15452 ;; *************** function _lcd_init *****************
 15453 ;; Defined at:
 15454 ;;		line 34 in file "lib_ili9341.c"
 15455 ;; Parameters:    Size  Location     Type
 15456 ;;		None
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;		None
 15459 ;; Return value:  Size  Location     Type
 15460 ;;                  1    wreg      void 
 15461 ;; Registers used:
 15462 ;;		wreg, status,2, status,0, cstack
 15463 ;; Tracked objects:
 15464 ;;		On entry : 0/0
 15465 ;;		On exit  : 0/0
 15466 ;;		Unchanged: 0/0
 15467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15472 ;;Total ram usage:        0 bytes
 15473 ;; Hardware stack levels used:    1
 15474 ;; Hardware stack levels required when called:    9
 15475 ;; This function calls:
 15476 ;;		_lcd_fill
 15477 ;;		_lcd_send
 15478 ;;		_msDelay
 15479 ;; This function is called by:
 15480 ;;		_main
 15481 ;; This function uses a non-reentrant model
 15482 ;;
 15483                           
 15484                           	psect	text45
 15485  003170                     __ptext45:
 15486                           	opt callstack 0
 15487  003170                     _lcd_init:
 15488                           	opt callstack 21
 15489  003170                     
 15490                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
 15491  003170  0E01               	movlw	1
 15492  003172  6E05               	movwf	lcd_send@value^0,c
 15493  003174  0E00               	movlw	0
 15494  003176  EC48  F02F         	call	_lcd_send
 15495  00317A                     
 15496                           ;lib_ili9341.c: 38:     msDelay(150);
 15497  00317A  0E96               	movlw	150
 15498  00317C  ECD7  F02E         	call	_msDelay
 15499  003180                     
 15500                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
 15501  003180  0EEF               	movlw	239
 15502  003182  6E05               	movwf	lcd_send@value^0,c
 15503  003184  0E00               	movlw	0
 15504  003186  EC48  F02F         	call	_lcd_send
 15505  00318A                     
 15506                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
 15507  00318A  0E03               	movlw	3
 15508  00318C  6E05               	movwf	lcd_send@value^0,c
 15509  00318E  0E01               	movlw	1
 15510  003190  EC48  F02F         	call	_lcd_send
 15511  003194                     
 15512                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
 15513  003194  0E80               	movlw	128
 15514  003196  6E05               	movwf	lcd_send@value^0,c
 15515  003198  0E01               	movlw	1
 15516  00319A  EC48  F02F         	call	_lcd_send
 15517  00319E                     
 15518                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
 15519  00319E  0E02               	movlw	2
 15520  0031A0  6E05               	movwf	lcd_send@value^0,c
 15521  0031A2  0E01               	movlw	1
 15522  0031A4  EC48  F02F         	call	_lcd_send
 15523  0031A8                     
 15524                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
 15525  0031A8  0ECF               	movlw	207
 15526  0031AA  6E05               	movwf	lcd_send@value^0,c
 15527  0031AC  0E00               	movlw	0
 15528  0031AE  EC48  F02F         	call	_lcd_send
 15529  0031B2                     
 15530                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
 15531  0031B2  0E00               	movlw	0
 15532  0031B4  6E05               	movwf	lcd_send@value^0,c
 15533  0031B6  0E01               	movlw	1
 15534  0031B8  EC48  F02F         	call	_lcd_send
 15535  0031BC                     
 15536                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
 15537  0031BC  0EC1               	movlw	193
 15538  0031BE  6E05               	movwf	lcd_send@value^0,c
 15539  0031C0  0E01               	movlw	1
 15540  0031C2  EC48  F02F         	call	_lcd_send
 15541  0031C6                     
 15542                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
 15543  0031C6  0E30               	movlw	48
 15544  0031C8  6E05               	movwf	lcd_send@value^0,c
 15545  0031CA  0E01               	movlw	1
 15546  0031CC  EC48  F02F         	call	_lcd_send
 15547  0031D0                     
 15548                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
 15549  0031D0  0EED               	movlw	237
 15550  0031D2  6E05               	movwf	lcd_send@value^0,c
 15551  0031D4  0E00               	movlw	0
 15552  0031D6  EC48  F02F         	call	_lcd_send
 15553  0031DA                     
 15554                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
 15555  0031DA  0E64               	movlw	100
 15556  0031DC  6E05               	movwf	lcd_send@value^0,c
 15557  0031DE  0E01               	movlw	1
 15558  0031E0  EC48  F02F         	call	_lcd_send
 15559  0031E4                     
 15560                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
 15561  0031E4  0E03               	movlw	3
 15562  0031E6  6E05               	movwf	lcd_send@value^0,c
 15563  0031E8  0E01               	movlw	1
 15564  0031EA  EC48  F02F         	call	_lcd_send
 15565  0031EE                     
 15566                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
 15567  0031EE  0E12               	movlw	18
 15568  0031F0  6E05               	movwf	lcd_send@value^0,c
 15569  0031F2  0E01               	movlw	1
 15570  0031F4  EC48  F02F         	call	_lcd_send
 15571  0031F8                     
 15572                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
 15573  0031F8  0E81               	movlw	129
 15574  0031FA  6E05               	movwf	lcd_send@value^0,c
 15575  0031FC  0E01               	movlw	1
 15576  0031FE  EC48  F02F         	call	_lcd_send
 15577  003202                     
 15578                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
 15579  003202  0EE8               	movlw	232
 15580  003204  6E05               	movwf	lcd_send@value^0,c
 15581  003206  0E00               	movlw	0
 15582  003208  EC48  F02F         	call	_lcd_send
 15583  00320C                     
 15584                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
 15585  00320C  0E85               	movlw	133
 15586  00320E  6E05               	movwf	lcd_send@value^0,c
 15587  003210  0E01               	movlw	1
 15588  003212  EC48  F02F         	call	_lcd_send
 15589  003216                     
 15590                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
 15591  003216  0E00               	movlw	0
 15592  003218  6E05               	movwf	lcd_send@value^0,c
 15593  00321A  0E01               	movlw	1
 15594  00321C  EC48  F02F         	call	_lcd_send
 15595  003220                     
 15596                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
 15597  003220  0E78               	movlw	120
 15598  003222  6E05               	movwf	lcd_send@value^0,c
 15599  003224  0E01               	movlw	1
 15600  003226  EC48  F02F         	call	_lcd_send
 15601  00322A                     
 15602                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
 15603  00322A  0ECB               	movlw	203
 15604  00322C  6E05               	movwf	lcd_send@value^0,c
 15605  00322E  0E00               	movlw	0
 15606  003230  EC48  F02F         	call	_lcd_send
 15607  003234                     
 15608                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
 15609  003234  0E39               	movlw	57
 15610  003236  6E05               	movwf	lcd_send@value^0,c
 15611  003238  0E01               	movlw	1
 15612  00323A  EC48  F02F         	call	_lcd_send
 15613  00323E                     
 15614                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
 15615  00323E  0E2C               	movlw	44
 15616  003240  6E05               	movwf	lcd_send@value^0,c
 15617  003242  0E01               	movlw	1
 15618  003244  EC48  F02F         	call	_lcd_send
 15619  003248                     
 15620                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
 15621  003248  0E00               	movlw	0
 15622  00324A  6E05               	movwf	lcd_send@value^0,c
 15623  00324C  0E01               	movlw	1
 15624  00324E  EC48  F02F         	call	_lcd_send
 15625  003252                     
 15626                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
 15627  003252  0E34               	movlw	52
 15628  003254  6E05               	movwf	lcd_send@value^0,c
 15629  003256  0E01               	movlw	1
 15630  003258  EC48  F02F         	call	_lcd_send
 15631  00325C                     
 15632                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
 15633  00325C  0E02               	movlw	2
 15634  00325E  6E05               	movwf	lcd_send@value^0,c
 15635  003260  0E01               	movlw	1
 15636  003262  EC48  F02F         	call	_lcd_send
 15637  003266                     
 15638                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
 15639  003266  0EF7               	movlw	247
 15640  003268  6E05               	movwf	lcd_send@value^0,c
 15641  00326A  0E00               	movlw	0
 15642  00326C  EC48  F02F         	call	_lcd_send
 15643  003270                     
 15644                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
 15645  003270  0E20               	movlw	32
 15646  003272  6E05               	movwf	lcd_send@value^0,c
 15647  003274  0E01               	movlw	1
 15648  003276  EC48  F02F         	call	_lcd_send
 15649  00327A                     
 15650                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
 15651  00327A  0EEA               	movlw	234
 15652  00327C  6E05               	movwf	lcd_send@value^0,c
 15653  00327E  0E00               	movlw	0
 15654  003280  EC48  F02F         	call	_lcd_send
 15655  003284                     
 15656                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
 15657  003284  0E00               	movlw	0
 15658  003286  6E05               	movwf	lcd_send@value^0,c
 15659  003288  0E01               	movlw	1
 15660  00328A  EC48  F02F         	call	_lcd_send
 15661  00328E                     
 15662                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
 15663  00328E  0E00               	movlw	0
 15664  003290  6E05               	movwf	lcd_send@value^0,c
 15665  003292  0E01               	movlw	1
 15666  003294  EC48  F02F         	call	_lcd_send
 15667  003298                     
 15668                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
 15669  003298  0EC0               	movlw	192
 15670  00329A  6E05               	movwf	lcd_send@value^0,c
 15671  00329C  0E00               	movlw	0
 15672  00329E  EC48  F02F         	call	_lcd_send
 15673  0032A2                     
 15674                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
 15675  0032A2  0E23               	movlw	35
 15676  0032A4  6E05               	movwf	lcd_send@value^0,c
 15677  0032A6  0E01               	movlw	1
 15678  0032A8  EC48  F02F         	call	_lcd_send
 15679  0032AC                     
 15680                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
 15681  0032AC  0EC1               	movlw	193
 15682  0032AE  6E05               	movwf	lcd_send@value^0,c
 15683  0032B0  0E00               	movlw	0
 15684  0032B2  EC48  F02F         	call	_lcd_send
 15685  0032B6                     
 15686                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
 15687  0032B6  0E10               	movlw	16
 15688  0032B8  6E05               	movwf	lcd_send@value^0,c
 15689  0032BA  0E01               	movlw	1
 15690  0032BC  EC48  F02F         	call	_lcd_send
 15691  0032C0                     
 15692                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
 15693  0032C0  0EC5               	movlw	197
 15694  0032C2  6E05               	movwf	lcd_send@value^0,c
 15695  0032C4  0E00               	movlw	0
 15696  0032C6  EC48  F02F         	call	_lcd_send
 15697  0032CA                     
 15698                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
 15699  0032CA  0E3E               	movlw	62
 15700  0032CC  6E05               	movwf	lcd_send@value^0,c
 15701  0032CE  0E01               	movlw	1
 15702  0032D0  EC48  F02F         	call	_lcd_send
 15703  0032D4                     
 15704                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
 15705  0032D4  0E28               	movlw	40
 15706  0032D6  6E05               	movwf	lcd_send@value^0,c
 15707  0032D8  0E01               	movlw	1
 15708  0032DA  EC48  F02F         	call	_lcd_send
 15709  0032DE                     
 15710                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
 15711  0032DE  0EC7               	movlw	199
 15712  0032E0  6E05               	movwf	lcd_send@value^0,c
 15713  0032E2  0E00               	movlw	0
 15714  0032E4  EC48  F02F         	call	_lcd_send
 15715  0032E8                     
 15716                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
 15717  0032E8  0E86               	movlw	134
 15718  0032EA  6E05               	movwf	lcd_send@value^0,c
 15719  0032EC  0E01               	movlw	1
 15720  0032EE  EC48  F02F         	call	_lcd_send
 15721  0032F2                     
 15722                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
 15723  0032F2  0E36               	movlw	54
 15724  0032F4  6E05               	movwf	lcd_send@value^0,c
 15725  0032F6  0E00               	movlw	0
 15726  0032F8  EC48  F02F         	call	_lcd_send
 15727  0032FC                     
 15728                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
 15729  0032FC  0E48               	movlw	72
 15730  0032FE  6E05               	movwf	lcd_send@value^0,c
 15731  003300  0E01               	movlw	1
 15732  003302  EC48  F02F         	call	_lcd_send
 15733  003306                     
 15734                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
 15735  003306  0E3A               	movlw	58
 15736  003308  6E05               	movwf	lcd_send@value^0,c
 15737  00330A  0E00               	movlw	0
 15738  00330C  EC48  F02F         	call	_lcd_send
 15739  003310                     
 15740                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
 15741  003310  0E55               	movlw	85
 15742  003312  6E05               	movwf	lcd_send@value^0,c
 15743  003314  0E01               	movlw	1
 15744  003316  EC48  F02F         	call	_lcd_send
 15745  00331A                     
 15746                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
 15747  00331A  0EB1               	movlw	177
 15748  00331C  6E05               	movwf	lcd_send@value^0,c
 15749  00331E  0E00               	movlw	0
 15750  003320  EC48  F02F         	call	_lcd_send
 15751  003324                     
 15752                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
 15753  003324  0E00               	movlw	0
 15754  003326  6E05               	movwf	lcd_send@value^0,c
 15755  003328  0E01               	movlw	1
 15756  00332A  EC48  F02F         	call	_lcd_send
 15757  00332E                     
 15758                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
 15759  00332E  0E18               	movlw	24
 15760  003330  6E05               	movwf	lcd_send@value^0,c
 15761  003332  0E01               	movlw	1
 15762  003334  EC48  F02F         	call	_lcd_send
 15763  003338                     
 15764                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
 15765  003338  0EB6               	movlw	182
 15766  00333A  6E05               	movwf	lcd_send@value^0,c
 15767  00333C  0E00               	movlw	0
 15768  00333E  EC48  F02F         	call	_lcd_send
 15769  003342                     
 15770                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
 15771  003342  0E08               	movlw	8
 15772  003344  6E05               	movwf	lcd_send@value^0,c
 15773  003346  0E01               	movlw	1
 15774  003348  EC48  F02F         	call	_lcd_send
 15775  00334C                     
 15776                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
 15777  00334C  0E82               	movlw	130
 15778  00334E  6E05               	movwf	lcd_send@value^0,c
 15779  003350  0E01               	movlw	1
 15780  003352  EC48  F02F         	call	_lcd_send
 15781  003356                     
 15782                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
 15783  003356  0E27               	movlw	39
 15784  003358  6E05               	movwf	lcd_send@value^0,c
 15785  00335A  0E01               	movlw	1
 15786  00335C  EC48  F02F         	call	_lcd_send
 15787  003360                     
 15788                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
 15789  003360  0EF2               	movlw	242
 15790  003362  6E05               	movwf	lcd_send@value^0,c
 15791  003364  0E00               	movlw	0
 15792  003366  EC48  F02F         	call	_lcd_send
 15793  00336A                     
 15794                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
 15795  00336A  0E00               	movlw	0
 15796  00336C  6E05               	movwf	lcd_send@value^0,c
 15797  00336E  0E01               	movlw	1
 15798  003370  EC48  F02F         	call	_lcd_send
 15799  003374                     
 15800                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
 15801  003374  0E26               	movlw	38
 15802  003376  6E05               	movwf	lcd_send@value^0,c
 15803  003378  0E00               	movlw	0
 15804  00337A  EC48  F02F         	call	_lcd_send
 15805  00337E                     
 15806                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
 15807  00337E  0E01               	movlw	1
 15808  003380  6E05               	movwf	lcd_send@value^0,c
 15809  003382  0E01               	movlw	1
 15810  003384  EC48  F02F         	call	_lcd_send
 15811  003388                     
 15812                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
 15813  003388  0EE0               	movlw	224
 15814  00338A  6E05               	movwf	lcd_send@value^0,c
 15815  00338C  0E00               	movlw	0
 15816  00338E  EC48  F02F         	call	_lcd_send
 15817  003392                     
 15818                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
 15819  003392  0E0F               	movlw	15
 15820  003394  6E05               	movwf	lcd_send@value^0,c
 15821  003396  0E01               	movlw	1
 15822  003398  EC48  F02F         	call	_lcd_send
 15823  00339C                     
 15824                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
 15825  00339C  0E31               	movlw	49
 15826  00339E  6E05               	movwf	lcd_send@value^0,c
 15827  0033A0  0E01               	movlw	1
 15828  0033A2  EC48  F02F         	call	_lcd_send
 15829  0033A6                     
 15830                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
 15831  0033A6  0E2B               	movlw	43
 15832  0033A8  6E05               	movwf	lcd_send@value^0,c
 15833  0033AA  0E01               	movlw	1
 15834  0033AC  EC48  F02F         	call	_lcd_send
 15835  0033B0                     
 15836                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
 15837  0033B0  0E0C               	movlw	12
 15838  0033B2  6E05               	movwf	lcd_send@value^0,c
 15839  0033B4  0E01               	movlw	1
 15840  0033B6  EC48  F02F         	call	_lcd_send
 15841  0033BA                     
 15842                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 15843  0033BA  0E0E               	movlw	14
 15844  0033BC  6E05               	movwf	lcd_send@value^0,c
 15845  0033BE  0E01               	movlw	1
 15846  0033C0  EC48  F02F         	call	_lcd_send
 15847  0033C4                     
 15848                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 15849  0033C4  0E08               	movlw	8
 15850  0033C6  6E05               	movwf	lcd_send@value^0,c
 15851  0033C8  0E01               	movlw	1
 15852  0033CA  EC48  F02F         	call	_lcd_send
 15853  0033CE                     
 15854                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 15855  0033CE  0E4E               	movlw	78
 15856  0033D0  6E05               	movwf	lcd_send@value^0,c
 15857  0033D2  0E01               	movlw	1
 15858  0033D4  EC48  F02F         	call	_lcd_send
 15859  0033D8                     
 15860                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 15861  0033D8  0EF1               	movlw	241
 15862  0033DA  6E05               	movwf	lcd_send@value^0,c
 15863  0033DC  0E01               	movlw	1
 15864  0033DE  EC48  F02F         	call	_lcd_send
 15865  0033E2                     
 15866                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 15867  0033E2  0E37               	movlw	55
 15868  0033E4  6E05               	movwf	lcd_send@value^0,c
 15869  0033E6  0E01               	movlw	1
 15870  0033E8  EC48  F02F         	call	_lcd_send
 15871  0033EC                     
 15872                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 15873  0033EC  0E07               	movlw	7
 15874  0033EE  6E05               	movwf	lcd_send@value^0,c
 15875  0033F0  0E01               	movlw	1
 15876  0033F2  EC48  F02F         	call	_lcd_send
 15877  0033F6                     
 15878                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 15879  0033F6  0E10               	movlw	16
 15880  0033F8  6E05               	movwf	lcd_send@value^0,c
 15881  0033FA  0E01               	movlw	1
 15882  0033FC  EC48  F02F         	call	_lcd_send
 15883  003400                     
 15884                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 15885  003400  0E03               	movlw	3
 15886  003402  6E05               	movwf	lcd_send@value^0,c
 15887  003404  0E01               	movlw	1
 15888  003406  EC48  F02F         	call	_lcd_send
 15889  00340A                     
 15890                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 15891  00340A  0E0E               	movlw	14
 15892  00340C  6E05               	movwf	lcd_send@value^0,c
 15893  00340E  0E01               	movlw	1
 15894  003410  EC48  F02F         	call	_lcd_send
 15895  003414                     
 15896                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 15897  003414  0E09               	movlw	9
 15898  003416  6E05               	movwf	lcd_send@value^0,c
 15899  003418  0E01               	movlw	1
 15900  00341A  EC48  F02F         	call	_lcd_send
 15901  00341E                     
 15902                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15903  00341E  0E00               	movlw	0
 15904  003420  6E05               	movwf	lcd_send@value^0,c
 15905  003422  0E01               	movlw	1
 15906  003424  EC48  F02F         	call	_lcd_send
 15907  003428                     
 15908                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 15909  003428  0EE1               	movlw	225
 15910  00342A  6E05               	movwf	lcd_send@value^0,c
 15911  00342C  0E00               	movlw	0
 15912  00342E  EC48  F02F         	call	_lcd_send
 15913  003432                     
 15914                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 15915  003432  0E00               	movlw	0
 15916  003434  6E05               	movwf	lcd_send@value^0,c
 15917  003436  0E01               	movlw	1
 15918  003438  EC48  F02F         	call	_lcd_send
 15919  00343C                     
 15920                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 15921  00343C  0E0E               	movlw	14
 15922  00343E  6E05               	movwf	lcd_send@value^0,c
 15923  003440  0E01               	movlw	1
 15924  003442  EC48  F02F         	call	_lcd_send
 15925  003446                     
 15926                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 15927  003446  0E14               	movlw	20
 15928  003448  6E05               	movwf	lcd_send@value^0,c
 15929  00344A  0E01               	movlw	1
 15930  00344C  EC48  F02F         	call	_lcd_send
 15931  003450                     
 15932                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 15933  003450  0E03               	movlw	3
 15934  003452  6E05               	movwf	lcd_send@value^0,c
 15935  003454  0E01               	movlw	1
 15936  003456  EC48  F02F         	call	_lcd_send
 15937  00345A                     
 15938                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 15939  00345A  0E11               	movlw	17
 15940  00345C  6E05               	movwf	lcd_send@value^0,c
 15941  00345E  0E01               	movlw	1
 15942  003460  EC48  F02F         	call	_lcd_send
 15943  003464                     
 15944                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 15945  003464  0E07               	movlw	7
 15946  003466  6E05               	movwf	lcd_send@value^0,c
 15947  003468  0E01               	movlw	1
 15948  00346A  EC48  F02F         	call	_lcd_send
 15949  00346E                     
 15950                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 15951  00346E  0E31               	movlw	49
 15952  003470  6E05               	movwf	lcd_send@value^0,c
 15953  003472  0E01               	movlw	1
 15954  003474  EC48  F02F         	call	_lcd_send
 15955  003478                     
 15956                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 15957  003478  0EC1               	movlw	193
 15958  00347A  6E05               	movwf	lcd_send@value^0,c
 15959  00347C  0E01               	movlw	1
 15960  00347E  EC48  F02F         	call	_lcd_send
 15961  003482                     
 15962                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 15963  003482  0E48               	movlw	72
 15964  003484  6E05               	movwf	lcd_send@value^0,c
 15965  003486  0E01               	movlw	1
 15966  003488  EC48  F02F         	call	_lcd_send
 15967  00348C                     
 15968                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 15969  00348C  0E08               	movlw	8
 15970  00348E  6E05               	movwf	lcd_send@value^0,c
 15971  003490  0E01               	movlw	1
 15972  003492  EC48  F02F         	call	_lcd_send
 15973  003496                     
 15974                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 15975  003496  0E0F               	movlw	15
 15976  003498  6E05               	movwf	lcd_send@value^0,c
 15977  00349A  0E01               	movlw	1
 15978  00349C  EC48  F02F         	call	_lcd_send
 15979  0034A0                     
 15980                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 15981  0034A0  0E0C               	movlw	12
 15982  0034A2  6E05               	movwf	lcd_send@value^0,c
 15983  0034A4  0E01               	movlw	1
 15984  0034A6  EC48  F02F         	call	_lcd_send
 15985  0034AA                     
 15986                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 15987  0034AA  0E31               	movlw	49
 15988  0034AC  6E05               	movwf	lcd_send@value^0,c
 15989  0034AE  0E01               	movlw	1
 15990  0034B0  EC48  F02F         	call	_lcd_send
 15991  0034B4                     
 15992                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 15993  0034B4  0E36               	movlw	54
 15994  0034B6  6E05               	movwf	lcd_send@value^0,c
 15995  0034B8  0E01               	movlw	1
 15996  0034BA  EC48  F02F         	call	_lcd_send
 15997  0034BE                     
 15998                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 15999  0034BE  0E0F               	movlw	15
 16000  0034C0  6E05               	movwf	lcd_send@value^0,c
 16001  0034C2  0E01               	movlw	1
 16002  0034C4  EC48  F02F         	call	_lcd_send
 16003  0034C8                     
 16004                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 16005  0034C8  0E11               	movlw	17
 16006  0034CA  6E05               	movwf	lcd_send@value^0,c
 16007  0034CC  0E00               	movlw	0
 16008  0034CE  EC48  F02F         	call	_lcd_send
 16009                           
 16010                           ;lib_ili9341.c: 125:     msDelay(120);
 16011  0034D2  0E78               	movlw	120
 16012  0034D4  ECD7  F02E         	call	_msDelay
 16013  0034D8                     
 16014                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 16015  0034D8  0E29               	movlw	41
 16016  0034DA  6E05               	movwf	lcd_send@value^0,c
 16017  0034DC  0E00               	movlw	0
 16018  0034DE  EC48  F02F         	call	_lcd_send
 16019  0034E2                     
 16020                           ;lib_ili9341.c: 127:     msDelay(120);
 16021  0034E2  0E78               	movlw	120
 16022  0034E4  ECD7  F02E         	call	_msDelay
 16023  0034E8                     
 16024                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 16025  0034E8  0E00               	movlw	0
 16026  0034EA  6E0E               	movwf	(lcd_fill@bg_color+1)^0,c
 16027  0034EC  0E00               	movlw	0
 16028  0034EE  6E0D               	movwf	lcd_fill@bg_color^0,c
 16029  0034F0  EC58  F02B         	call	_lcd_fill	;wreg free
 16030  0034F4  0012               	return		;funcret
 16031  0034F6                     __end_of_lcd_init:
 16032                           	opt callstack 0
 16033                           
 16034 ;; *************** function _msDelay *****************
 16035 ;; Defined at:
 16036 ;;		line 16 in file "lib_ili9341.c"
 16037 ;; Parameters:    Size  Location     Type
 16038 ;;  ms              1    wreg     unsigned char 
 16039 ;; Auto vars:     Size  Location     Type
 16040 ;;  ms              1    4[COMRAM] unsigned char 
 16041 ;;  k               1    5[COMRAM] unsigned char 
 16042 ;; Return value:  Size  Location     Type
 16043 ;;                  1    wreg      void 
 16044 ;; Registers used:
 16045 ;;		wreg, status,2, status,0
 16046 ;; Tracked objects:
 16047 ;;		On entry : 0/0
 16048 ;;		On exit  : 0/0
 16049 ;;		Unchanged: 0/0
 16050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16054 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16055 ;;Total ram usage:        3 bytes
 16056 ;; Hardware stack levels used:    1
 16057 ;; Hardware stack levels required when called:    4
 16058 ;; This function calls:
 16059 ;;		Nothing
 16060 ;; This function is called by:
 16061 ;;		_lcd_init
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           	psect	text46
 16066  005DAE                     __ptext46:
 16067                           	opt callstack 0
 16068  005DAE                     _msDelay:
 16069                           	opt callstack 25
 16070                           
 16071                           ;incstack = 0
 16072                           ;msDelay@ms stored from wreg
 16073  005DAE  6E05               	movwf	msDelay@ms^0,c
 16074  005DB0                     
 16075                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 16076  005DB0  0E00               	movlw	0
 16077  005DB2  6E06               	movwf	msDelay@k^0,c
 16078  005DB4  EFE4  F02E         	goto	l6478
 16079  005DB8                     l6474:
 16080                           
 16081                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 16082  005DB8  0E03               	movlw	3
 16083  005DBA  6E04               	movwf	??_msDelay^0,c
 16084  005DBC  0E98               	movlw	152
 16085  005DBE                     u12127:
 16086  005DBE  2EE8               	decfsz	wreg,f,c
 16087  005DC0  D7FE               	bra	u12127
 16088  005DC2  2E04               	decfsz	??_msDelay^0,f,c
 16089  005DC4  D7FC               	bra	u12127
 16090  005DC6                     
 16091                           ;lib_ili9341.c: 23:     }
 16092  005DC6  2A06               	incf	msDelay@k^0,f,c
 16093  005DC8                     l6478:
 16094  005DC8  5005               	movf	msDelay@ms^0,w,c
 16095  005DCA  5C06               	subwf	msDelay@k^0,w,c
 16096  005DCC  A0D8               	btfss	status,0,c
 16097  005DCE  EFEB  F02E         	goto	u7911
 16098  005DD2  EFED  F02E         	goto	u7910
 16099  005DD6                     u7911:
 16100  005DD6  EFDC  F02E         	goto	l6474
 16101  005DDA                     u7910:
 16102  005DDA  0012               	return		;funcret
 16103  005DDC                     __end_of_msDelay:
 16104                           	opt callstack 0
 16105                           
 16106 ;; *************** function _lcd_fill *****************
 16107 ;; Defined at:
 16108 ;;		line 193 in file "lib_ili9341.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  bg_color        2   12[COMRAM] unsigned short 
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;  width           2   16[COMRAM] unsigned short 
 16113 ;;  height          2   14[COMRAM] unsigned short 
 16114 ;; Return value:  Size  Location     Type
 16115 ;;                  1    wreg      void 
 16116 ;; Registers used:
 16117 ;;		wreg, status,2, status,0, cstack
 16118 ;; Tracked objects:
 16119 ;;		On entry : 0/0
 16120 ;;		On exit  : 0/0
 16121 ;;		Unchanged: 0/0
 16122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16124 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16127 ;;Total ram usage:        6 bytes
 16128 ;; Hardware stack levels used:    1
 16129 ;; Hardware stack levels required when called:    8
 16130 ;; This function calls:
 16131 ;;		_lcd_draw_pixel
 16132 ;;		_lcd_set_cursor
 16133 ;; This function is called by:
 16134 ;;		_lcd_init
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           	psect	text47
 16139  0056B0                     __ptext47:
 16140                           	opt callstack 0
 16141  0056B0                     _lcd_fill:
 16142                           	opt callstack 21
 16143  0056B0                     
 16144                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 16145  0056B0  0E01               	movlw	1
 16146  0056B2  6E12               	movwf	(lcd_fill@width+1)^0,c
 16147  0056B4  0E40               	movlw	64
 16148  0056B6  6E11               	movwf	lcd_fill@width^0,c
 16149  0056B8  0E00               	movlw	0
 16150  0056BA  6E10               	movwf	(lcd_fill@height+1)^0,c
 16151  0056BC  0EF0               	movlw	240
 16152  0056BE  6E0F               	movwf	lcd_fill@height^0,c
 16153  0056C0                     
 16154                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 16155  0056C0  0E00               	movlw	0
 16156  0056C2  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 16157  0056C4  0E00               	movlw	0
 16158  0056C6  6E09               	movwf	lcd_set_cursor@x^0,c
 16159  0056C8  0E00               	movlw	0
 16160  0056CA  6E0C               	movwf	(lcd_set_cursor@y+1)^0,c
 16161  0056CC  0E00               	movlw	0
 16162  0056CE  6E0B               	movwf	lcd_set_cursor@y^0,c
 16163  0056D0  ECB7  F02D         	call	_lcd_set_cursor	;wreg free
 16164  0056D4  0900               	iorlw	0
 16165  0056D6  B4D8               	btfsc	status,2,c
 16166  0056D8  EF70  F02B         	goto	u7921
 16167  0056DC  EF72  F02B         	goto	u7920
 16168  0056E0                     u7921:
 16169  0056E0  EF8B  F02B         	goto	l6492
 16170  0056E4                     u7920:
 16171  0056E4  EF98  F02B         	goto	l372
 16172  0056E8                     l6486:
 16173                           
 16174                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 16175  0056E8  C00D  F007         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 16176  0056EC  C00E  F008         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 16177  0056F0  EC60  F02F         	call	_lcd_draw_pixel	;wreg free
 16178  0056F4                     l6488:
 16179                           
 16180                           ;lib_ili9341.c: 204:         while(width--)
 16181  0056F4  0611               	decf	lcd_fill@width^0,f,c
 16182  0056F6  A0D8               	btfss	status,0,c
 16183  0056F8  0612               	decf	(lcd_fill@width+1)^0,f,c
 16184  0056FA  2811               	incf	lcd_fill@width^0,w,c
 16185  0056FC  E106               	bnz	u7931
 16186  0056FE  2812               	incf	(lcd_fill@width+1)^0,w,c
 16187  005700  A4D8               	btfss	status,2,c
 16188  005702  EF85  F02B         	goto	u7931
 16189  005706  EF87  F02B         	goto	u7930
 16190  00570A                     u7931:
 16191  00570A  EF74  F02B         	goto	l6486
 16192  00570E                     u7930:
 16193  00570E                     
 16194                           ;lib_ili9341.c: 208:         width = 320;
 16195  00570E  0E01               	movlw	1
 16196  005710  6E12               	movwf	(lcd_fill@width+1)^0,c
 16197  005712  0E40               	movlw	64
 16198  005714  6E11               	movwf	lcd_fill@width^0,c
 16199  005716                     l6492:
 16200                           
 16201                           ;lib_ili9341.c: 202:     while(height--)
 16202  005716  060F               	decf	lcd_fill@height^0,f,c
 16203  005718  A0D8               	btfss	status,0,c
 16204  00571A  0610               	decf	(lcd_fill@height+1)^0,f,c
 16205  00571C  280F               	incf	lcd_fill@height^0,w,c
 16206  00571E  E106               	bnz	u7941
 16207  005720  2810               	incf	(lcd_fill@height+1)^0,w,c
 16208  005722  A4D8               	btfss	status,2,c
 16209  005724  EF96  F02B         	goto	u7941
 16210  005728  EF98  F02B         	goto	u7940
 16211  00572C                     u7941:
 16212  00572C  EF7A  F02B         	goto	l6488
 16213  005730                     u7940:
 16214  005730                     l372:
 16215  005730  0012               	return		;funcret
 16216  005732                     __end_of_lcd_fill:
 16217                           	opt callstack 0
 16218                           
 16219 ;; *************** function _lcd_draw_string *****************
 16220 ;; Defined at:
 16221 ;;		line 379 in file "lib_ili9341.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;  x               2   34[COMRAM] unsigned short 
 16224 ;;  y               2   36[COMRAM] unsigned short 
 16225 ;;  pS              2   38[COMRAM] PTR const unsigned char 
 16226 ;;		 -> string_ntc(100), string_pot(100), string_temp(100), STR_1(12), 
 16227 ;;  fg_color        2   40[COMRAM] unsigned short 
 16228 ;;  bg_color        2   42[COMRAM] unsigned short 
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;  lIndex          2   50[COMRAM] unsigned short 
 16231 ;;  k               2   48[COMRAM] unsigned short 
 16232 ;; Return value:  Size  Location     Type
 16233 ;;                  1    wreg      void 
 16234 ;; Registers used:
 16235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16236 ;; Tracked objects:
 16237 ;;		On entry : 0/0
 16238 ;;		On exit  : 0/0
 16239 ;;		Unchanged: 0/0
 16240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16241 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16243 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16244 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16245 ;;Total ram usage:       18 bytes
 16246 ;; Hardware stack levels used:    1
 16247 ;; Hardware stack levels required when called:    9
 16248 ;; This function calls:
 16249 ;;		_lcd_draw_char
 16250 ;; This function is called by:
 16251 ;;		_main
 16252 ;; This function uses a non-reentrant model
 16253 ;;
 16254                           
 16255                           	psect	text48
 16256  004B32                     __ptext48:
 16257                           	opt callstack 0
 16258  004B32                     _lcd_draw_string:
 16259                           	opt callstack 21
 16260  004B32                     
 16261                           ;lib_ili9341.c: 379: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 380: {;lib_ili9341.c: 381:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 383:     while(*pS)
 16262  004B32  EF18  F026         	goto	l6816
 16263  004B36                     l6802:
 16264                           
 16265                           ;lib_ili9341.c: 384:     {;lib_ili9341.c: 385:         lIndex = 0;
 16266  004B36  0E00               	movlw	0
 16267  004B38  6E34               	movwf	(lcd_draw_string@lIndex+1)^0,c
 16268  004B3A  0E00               	movlw	0
 16269  004B3C  6E33               	movwf	lcd_draw_string@lIndex^0,c
 16270                           
 16271                           ;lib_ili9341.c: 386:         for(k=0; k<(*pS - ' '); k++)
 16272  004B3E  0E00               	movlw	0
 16273  004B40  6E32               	movwf	(lcd_draw_string@k+1)^0,c
 16274  004B42  0E00               	movlw	0
 16275  004B44  6E31               	movwf	lcd_draw_string@k^0,c
 16276  004B46  EFC4  F025         	goto	l6808
 16277  004B4A                     l6804:
 16278                           
 16279                           ;lib_ili9341.c: 387:         {;lib_ili9341.c: 388:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 16280  004B4A  90D8               	bcf	status,0,c
 16281  004B4C  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 16282  004B4E  6EF6               	movwf	tblptrl,c
 16283  004B50  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16284  004B52  6EF7               	movwf	tblptrh,c
 16285  004B54  0EA9               	movlw	low _font
 16286  004B56  26F6               	addwf	tblptrl,f,c
 16287  004B58  0EF1               	movlw	high _font
 16288  004B5A  22F7               	addwfc	tblptrh,f,c
 16289  004B5C                     	if	1	;There are 3 active tblptr bytes
 16290  004B5C  6AF8               	clrf	tblptru,c
 16291  004B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 16292  004B60  22F8               	addwfc	tblptru,f,c
 16293  004B62                     	endif
 16294  004B62  0009               	tblrd		*+
 16295  004B64  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 16296  004B68  0009               	tblrd		*+
 16297  004B6A  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 16298  004B6E  90D8               	bcf	status,0,c
 16299  004B70  362D               	rlcf	??_lcd_draw_string^0,f,c
 16300  004B72  362E               	rlcf	(??_lcd_draw_string+1)^0,f,c
 16301  004B74  0E01               	movlw	1
 16302  004B76  262D               	addwf	??_lcd_draw_string^0,f,c
 16303  004B78  0E00               	movlw	0
 16304  004B7A  222E               	addwfc	(??_lcd_draw_string+1)^0,f,c
 16305  004B7C  502D               	movf	??_lcd_draw_string^0,w,c
 16306  004B7E  2633               	addwf	lcd_draw_string@lIndex^0,f,c
 16307  004B80  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 16308  004B82  2234               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 16309  004B84                     
 16310                           ;lib_ili9341.c: 389:         }
 16311  004B84  4A31               	infsnz	lcd_draw_string@k^0,f,c
 16312  004B86  2A32               	incf	(lcd_draw_string@k+1)^0,f,c
 16313  004B88                     l6808:
 16314  004B88  0EE0               	movlw	224
 16315  004B8A  6E2D               	movwf	??_lcd_draw_string^0,c
 16316  004B8C  0EFF               	movlw	255
 16317  004B8E  6E2E               	movwf	(??_lcd_draw_string+1)^0,c
 16318  004B90  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16319  004B94  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16320  004B98  0E00               	movlw	low (__mediumconst shr (0+16))
 16321  004B9A  6EF8               	movwf	tblptru,c
 16322  004B9C  0E0E               	movlw	(high __ramtop+-1)
 16323  004B9E  64F7               	cpfsgt	tblptrh,c
 16324  004BA0  D003               	bra	u8107
 16325  004BA2  0008               	tblrd		*
 16326  004BA4  50F5               	movf	tablat,w,c
 16327  004BA6  D005               	bra	u8100
 16328  004BA8                     u8107:
 16329  004BA8  CFF6 FFE1          	movff	tblptrl,fsr1l
 16330  004BAC  CFF7 FFE2          	movff	tblptrh,fsr1h
 16331  004BB0  50E7               	movf	indf1,w,c
 16332  004BB2                     u8100:
 16333  004BB2  6E2F               	movwf	(??_lcd_draw_string+2)^0,c
 16334  004BB4  6A30               	clrf	(??_lcd_draw_string+3)^0,c
 16335  004BB6  502D               	movf	??_lcd_draw_string^0,w,c
 16336  004BB8  262F               	addwf	(??_lcd_draw_string+2)^0,f,c
 16337  004BBA  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 16338  004BBC  2230               	addwfc	(??_lcd_draw_string+3)^0,f,c
 16339  004BBE  502F               	movf	(??_lcd_draw_string+2)^0,w,c
 16340  004BC0  5C31               	subwf	lcd_draw_string@k^0,w,c
 16341  004BC2  5030               	movf	(??_lcd_draw_string+3)^0,w,c
 16342  004BC4  5832               	subwfb	(lcd_draw_string@k+1)^0,w,c
 16343  004BC6  A0D8               	btfss	status,0,c
 16344  004BC8  EFE8  F025         	goto	u8111
 16345  004BCC  EFEA  F025         	goto	u8110
 16346  004BD0                     u8111:
 16347  004BD0  EFA5  F025         	goto	l6804
 16348  004BD4                     u8110:
 16349  004BD4                     
 16350                           ;lib_ili9341.c: 391:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 16351  004BD4  C023  F00D         	movff	lcd_draw_string@x,lcd_draw_char@x
 16352  004BD8  C024  F00E         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 16353  004BDC  C025  F00F         	movff	lcd_draw_string@y,lcd_draw_char@y
 16354  004BE0  C026  F010         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 16355  004BE4  C033  F011         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 16356  004BE8  C034  F012         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 16357  004BEC  C029  F013         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 16358  004BF0  C02A  F014         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 16359  004BF4  C02B  F015         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 16360  004BF8  C02C  F016         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 16361  004BFC  EC8F  F023         	call	_lcd_draw_char	;wreg free
 16362  004C00                     
 16363                           ;lib_ili9341.c: 393:         x += font[lIndex];
 16364  004C00  90D8               	bcf	status,0,c
 16365  004C02  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 16366  004C04  6EF6               	movwf	tblptrl,c
 16367  004C06  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16368  004C08  6EF7               	movwf	tblptrh,c
 16369  004C0A  0EA9               	movlw	low _font
 16370  004C0C  26F6               	addwf	tblptrl,f,c
 16371  004C0E  0EF1               	movlw	high _font
 16372  004C10  22F7               	addwfc	tblptrh,f,c
 16373  004C12                     	if	1	;There are 3 active tblptr bytes
 16374  004C12  6AF8               	clrf	tblptru,c
 16375  004C14  0E00               	movlw	low (__mediumconst shr (0+16))
 16376  004C16  22F8               	addwfc	tblptru,f,c
 16377  004C18                     	endif
 16378  004C18  0009               	tblrd		*+
 16379  004C1A  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 16380  004C1E  0009               	tblrd		*+
 16381  004C20  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 16382  004C24  502D               	movf	??_lcd_draw_string^0,w,c
 16383  004C26  2623               	addwf	lcd_draw_string@x^0,f,c
 16384  004C28  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 16385  004C2A  2224               	addwfc	(lcd_draw_string@x+1)^0,f,c
 16386  004C2C                     
 16387                           ;lib_ili9341.c: 395:         pS++;
 16388  004C2C  4A27               	infsnz	lcd_draw_string@pS^0,f,c
 16389  004C2E  2A28               	incf	(lcd_draw_string@pS+1)^0,f,c
 16390  004C30                     l6816:
 16391                           
 16392                           ;lib_ili9341.c: 383:     while(*pS)
 16393  004C30  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16394  004C34  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16395  004C38  0E00               	movlw	low (__mediumconst shr (0+16))
 16396  004C3A  6EF8               	movwf	tblptru,c
 16397  004C3C  0E0E               	movlw	(high __ramtop+-1)
 16398  004C3E  64F7               	cpfsgt	tblptrh,c
 16399  004C40  D003               	bra	u8127
 16400  004C42  0008               	tblrd		*
 16401  004C44  50F5               	movf	tablat,w,c
 16402  004C46  D005               	bra	u8120
 16403  004C48                     u8127:
 16404  004C48  CFF6 FFE1          	movff	tblptrl,fsr1l
 16405  004C4C  CFF7 FFE2          	movff	tblptrh,fsr1h
 16406  004C50  50E7               	movf	indf1,w,c
 16407  004C52                     u8120:
 16408  004C52  0900               	iorlw	0
 16409  004C54  A4D8               	btfss	status,2,c
 16410  004C56  EF2F  F026         	goto	u8131
 16411  004C5A  EF31  F026         	goto	u8130
 16412  004C5E                     u8131:
 16413  004C5E  EF9B  F025         	goto	l6802
 16414  004C62                     u8130:
 16415  004C62  0012               	return		;funcret
 16416  004C64                     __end_of_lcd_draw_string:
 16417                           	opt callstack 0
 16418                           
 16419 ;; *************** function _lcd_draw_char *****************
 16420 ;; Defined at:
 16421 ;;		line 355 in file "lib_ili9341.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;  x               2   12[COMRAM] unsigned short 
 16424 ;;  y               2   14[COMRAM] unsigned short 
 16425 ;;  fIndex          2   16[COMRAM] unsigned short 
 16426 ;;  fg_color        2   18[COMRAM] unsigned short 
 16427 ;;  bg_color        2   20[COMRAM] unsigned short 
 16428 ;; Auto vars:     Size  Location     Type
 16429 ;;  i               1   33[COMRAM] unsigned char 
 16430 ;;  k               1   32[COMRAM] unsigned char 
 16431 ;;  j               1   31[COMRAM] unsigned char 
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16441 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16442 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16443 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16444 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16445 ;;Total ram usage:       22 bytes
 16446 ;; Hardware stack levels used:    1
 16447 ;; Hardware stack levels required when called:    8
 16448 ;; This function calls:
 16449 ;;		_lcd_draw_pixel
 16450 ;;		_lcd_set_cursor
 16451 ;; This function is called by:
 16452 ;;		_lcd_draw_string
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456                           	psect	text49
 16457  00471E                     __ptext49:
 16458                           	opt callstack 0
 16459  00471E                     _lcd_draw_char:
 16460                           	opt callstack 21
 16461  00471E                     
 16462                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 16463  00471E  0E00               	movlw	0
 16464  004720  6E20               	movwf	lcd_draw_char@j^0,c
 16465  004722  EF2F  F024         	goto	l6530
 16466  004726                     l6500:
 16467                           
 16468                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 16469  004726  90D8               	bcf	status,0,c
 16470  004728  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16471  00472A  6EF6               	movwf	tblptrl,c
 16472  00472C  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16473  00472E  6EF7               	movwf	tblptrh,c
 16474  004730  0EA9               	movlw	low _font
 16475  004732  26F6               	addwf	tblptrl,f,c
 16476  004734  0EF1               	movlw	high _font
 16477  004736  22F7               	addwfc	tblptrh,f,c
 16478  004738                     	if	1	;There are 3 active tblptr bytes
 16479  004738  6AF8               	clrf	tblptru,c
 16480  00473A  0E00               	movlw	low (__mediumconst shr (0+16))
 16481  00473C  22F8               	addwfc	tblptru,f,c
 16482  00473E                     	endif
 16483  00473E  0009               	tblrd		*+
 16484  004740  CFF5 F017          	movff	tablat,??_lcd_draw_char
 16485  004744  0009               	tblrd		*+
 16486  004746  CFF5 F018          	movff	tablat,??_lcd_draw_char+1
 16487  00474A  5020               	movf	lcd_draw_char@j^0,w,c
 16488  00474C  5E17               	subwf	??_lcd_draw_char^0,f,c
 16489  00474E  0E00               	movlw	0
 16490  004750  5A18               	subwfb	(??_lcd_draw_char+1)^0,f,c
 16491  004752  500D               	movf	lcd_draw_char@x^0,w,c
 16492  004754  2417               	addwf	??_lcd_draw_char^0,w,c
 16493  004756  6E09               	movwf	lcd_set_cursor@x^0,c
 16494  004758  500E               	movf	(lcd_draw_char@x+1)^0,w,c
 16495  00475A  2018               	addwfc	(??_lcd_draw_char+1)^0,w,c
 16496  00475C  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 16497  00475E  C00F  F00B         	movff	lcd_draw_char@y,lcd_set_cursor@y
 16498  004762  C010  F00C         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 16499  004766  ECB7  F02D         	call	_lcd_set_cursor	;wreg free
 16500  00476A                     
 16501                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 16502  00476A  0E00               	movlw	0
 16503  00476C  6E21               	movwf	lcd_draw_char@k^0,c
 16504  00476E                     l6508:
 16505                           
 16506                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 16507  00476E  0E00               	movlw	0
 16508  004770  6E22               	movwf	lcd_draw_char@i^0,c
 16509  004772                     l6514:
 16510                           
 16511                           ;lib_ili9341.c: 366:             { if( font[ (fIndex + ((font[fIndex]) << 1)) - (j<<1) -
      +                           k ] & (0x80 >> i) )
 16512  004772  5020               	movf	lcd_draw_char@j^0,w,c
 16513  004774  6E17               	movwf	??_lcd_draw_char^0,c
 16514  004776  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 16515  004778  90D8               	bcf	status,0,c
 16516  00477A  3617               	rlcf	??_lcd_draw_char^0,f,c
 16517  00477C  3618               	rlcf	(??_lcd_draw_char+1)^0,f,c
 16518  00477E  90D8               	bcf	status,0,c
 16519  004780  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16520  004782  6EF6               	movwf	tblptrl,c
 16521  004784  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16522  004786  6EF7               	movwf	tblptrh,c
 16523  004788  0EA9               	movlw	low _font
 16524  00478A  26F6               	addwf	tblptrl,f,c
 16525  00478C  0EF1               	movlw	high _font
 16526  00478E  22F7               	addwfc	tblptrh,f,c
 16527  004790                     	if	1	;There are 3 active tblptr bytes
 16528  004790  6AF8               	clrf	tblptru,c
 16529  004792  0E00               	movlw	low (__mediumconst shr (0+16))
 16530  004794  22F8               	addwfc	tblptru,f,c
 16531  004796                     	endif
 16532  004796  0009               	tblrd		*+
 16533  004798  CFF5 F019          	movff	tablat,??_lcd_draw_char+2
 16534  00479C  0009               	tblrd		*+
 16535  00479E  CFF5 F01A          	movff	tablat,??_lcd_draw_char+3
 16536  0047A2  90D8               	bcf	status,0,c
 16537  0047A4  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16538  0047A6  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16539  0047A8  5017               	movf	??_lcd_draw_char^0,w,c
 16540  0047AA  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 16541  0047AC  5018               	movf	(??_lcd_draw_char+1)^0,w,c
 16542  0047AE  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16543  0047B0  5021               	movf	lcd_draw_char@k^0,w,c
 16544  0047B2  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 16545  0047B4  0E00               	movlw	0
 16546  0047B6  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16547  0047B8  5011               	movf	lcd_draw_char@fIndex^0,w,c
 16548  0047BA  2619               	addwf	(??_lcd_draw_char+2)^0,f,c
 16549  0047BC  5012               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 16550  0047BE  221A               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16551  0047C0  90D8               	bcf	status,0,c
 16552  0047C2  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16553  0047C4  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16554  0047C6  0EA9               	movlw	low _font
 16555  0047C8  2419               	addwf	(??_lcd_draw_char+2)^0,w,c
 16556  0047CA  6EF6               	movwf	tblptrl,c
 16557  0047CC  0EF1               	movlw	high _font
 16558  0047CE  201A               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16559  0047D0  6EF7               	movwf	tblptrh,c
 16560  0047D2                     	if	1	;There are 3 active tblptr bytes
 16561  0047D2  6AF8               	clrf	tblptru,c
 16562  0047D4  0E00               	movlw	low (__mediumconst shr (0+16))
 16563  0047D6  22F8               	addwfc	tblptru,f,c
 16564  0047D8                     	endif
 16565  0047D8  0009               	tblrd		*+
 16566  0047DA  CFF5 F01B          	movff	tablat,??_lcd_draw_char+4
 16567  0047DE  0009               	tblrd		*+
 16568  0047E0  CFF5 F01C          	movff	tablat,??_lcd_draw_char+5
 16569  0047E4  C022  F01D         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16570  0047E8  0E80               	movlw	128
 16571  0047EA  6E1E               	movwf	(??_lcd_draw_char+7)^0,c
 16572  0047EC  0E00               	movlw	0
 16573  0047EE  6E1F               	movwf	(??_lcd_draw_char+8)^0,c
 16574  0047F0  2A1D               	incf	(??_lcd_draw_char+6)^0,f,c
 16575  0047F2  EFFE  F023         	goto	u7964
 16576  0047F6                     u7965:
 16577  0047F6  341F               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16578  0047F8  321F               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16579  0047FA  321E               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16580  0047FC                     u7964:
 16581  0047FC  2E1D               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16582  0047FE  EFFB  F023         	goto	u7965
 16583  004802  501B               	movf	(??_lcd_draw_char+4)^0,w,c
 16584  004804  161E               	andwf	(??_lcd_draw_char+7)^0,f,c
 16585  004806  501C               	movf	(??_lcd_draw_char+5)^0,w,c
 16586  004808  161F               	andwf	(??_lcd_draw_char+8)^0,f,c
 16587  00480A  501E               	movf	(??_lcd_draw_char+7)^0,w,c
 16588  00480C  101F               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16589  00480E  B4D8               	btfsc	status,2,c
 16590  004810  EF0C  F024         	goto	u7971
 16591  004814  EF0E  F024         	goto	u7970
 16592  004818                     u7971:
 16593  004818  EF16  F024         	goto	l6518
 16594  00481C                     u7970:
 16595  00481C                     
 16596                           ;lib_ili9341.c: 367:                 {;lib_ili9341.c: 368:                     lcd_draw_
      +                          pixel(fg_color);
 16597  00481C  C013  F007         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16598  004820  C014  F008         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16599  004824  EC60  F02F         	call	_lcd_draw_pixel	;wreg free
 16600                           
 16601                           ;lib_ili9341.c: 369:                 }
 16602  004828  EF1C  F024         	goto	l6520
 16603  00482C                     l6518:
 16604                           
 16605                           ;lib_ili9341.c: 371:                 {;lib_ili9341.c: 372:                     lcd_draw_
      +                          pixel(bg_color);
 16606  00482C  C015  F007         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16607  004830  C016  F008         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16608  004834  EC60  F02F         	call	_lcd_draw_pixel	;wreg free
 16609  004838                     l6520:
 16610                           
 16611                           ;lib_ili9341.c: 374:             }
 16612  004838  2A22               	incf	lcd_draw_char@i^0,f,c
 16613  00483A  0E07               	movlw	7
 16614  00483C  6422               	cpfsgt	lcd_draw_char@i^0,c
 16615  00483E  EF23  F024         	goto	u7981
 16616  004842  EF25  F024         	goto	u7980
 16617  004846                     u7981:
 16618  004846  EFB9  F023         	goto	l6514
 16619  00484A                     u7980:
 16620  00484A                     
 16621                           ;lib_ili9341.c: 375:         }
 16622  00484A  2A21               	incf	lcd_draw_char@k^0,f,c
 16623  00484C  0E01               	movlw	1
 16624  00484E  6421               	cpfsgt	lcd_draw_char@k^0,c
 16625  004850  EF2C  F024         	goto	u7991
 16626  004854  EF2E  F024         	goto	u7990
 16627  004858                     u7991:
 16628  004858  EFB7  F023         	goto	l6508
 16629  00485C                     u7990:
 16630  00485C                     
 16631                           ;lib_ili9341.c: 376:     }
 16632  00485C  2A20               	incf	lcd_draw_char@j^0,f,c
 16633  00485E                     l6530:
 16634  00485E  90D8               	bcf	status,0,c
 16635  004860  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 16636  004862  6EF6               	movwf	tblptrl,c
 16637  004864  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16638  004866  6EF7               	movwf	tblptrh,c
 16639  004868  0EA9               	movlw	low _font
 16640  00486A  26F6               	addwf	tblptrl,f,c
 16641  00486C  0EF1               	movlw	high _font
 16642  00486E  22F7               	addwfc	tblptrh,f,c
 16643  004870                     	if	1	;There are 3 active tblptr bytes
 16644  004870  6AF8               	clrf	tblptru,c
 16645  004872  0E00               	movlw	low (__mediumconst shr (0+16))
 16646  004874  22F8               	addwfc	tblptru,f,c
 16647  004876                     	endif
 16648  004876  5020               	movf	lcd_draw_char@j^0,w,c
 16649  004878  6E17               	movwf	??_lcd_draw_char^0,c
 16650  00487A  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 16651  00487C  0009               	tblrd		*+
 16652  00487E  50F5               	movf	tablat,w,c
 16653  004880  5C17               	subwf	??_lcd_draw_char^0,w,c
 16654  004882  0009               	tblrd		*+
 16655  004884  50F5               	movf	tablat,w,c
 16656  004886  5818               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16657  004888  A0D8               	btfss	status,0,c
 16658  00488A  EF49  F024         	goto	u8001
 16659  00488E  EF4B  F024         	goto	u8000
 16660  004892                     u8001:
 16661  004892  EF93  F023         	goto	l6500
 16662  004896                     u8000:
 16663  004896  0012               	return		;funcret
 16664  004898                     __end_of_lcd_draw_char:
 16665                           	opt callstack 0
 16666                           
 16667 ;; *************** function _lcd_set_cursor *****************
 16668 ;; Defined at:
 16669 ;;		line 144 in file "lib_ili9341.c"
 16670 ;; Parameters:    Size  Location     Type
 16671 ;;  x               2    8[COMRAM] unsigned short 
 16672 ;;  y               2   10[COMRAM] unsigned short 
 16673 ;; Auto vars:     Size  Location     Type
 16674 ;;		None
 16675 ;; Return value:  Size  Location     Type
 16676 ;;                  1    wreg      unsigned char 
 16677 ;; Registers used:
 16678 ;;		wreg, status,2, status,0, cstack
 16679 ;; Tracked objects:
 16680 ;;		On entry : 0/0
 16681 ;;		On exit  : 0/0
 16682 ;;		Unchanged: 0/0
 16683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16687 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16688 ;;Total ram usage:        4 bytes
 16689 ;; Hardware stack levels used:    1
 16690 ;; Hardware stack levels required when called:    7
 16691 ;; This function calls:
 16692 ;;		_lcd_set_cursor_x
 16693 ;;		_lcd_set_cursor_y
 16694 ;; This function is called by:
 16695 ;;		_lcd_fill
 16696 ;;		_lcd_draw_char
 16697 ;;		_lcd_draw_pixel_at
 16698 ;;		_lcd_fill_rect
 16699 ;; This function uses a non-reentrant model
 16700 ;;
 16701                           
 16702                           	psect	text50
 16703  005B6E                     __ptext50:
 16704                           	opt callstack 0
 16705  005B6E                     _lcd_set_cursor:
 16706                           	opt callstack 21
 16707  005B6E                     
 16708                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16709  005B6E  C009  F007         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16710  005B72  C00A  F008         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16711  005B76  EC2B  F02D         	call	_lcd_set_cursor_x	;wreg free
 16712  005B7A  0900               	iorlw	0
 16713  005B7C  A4D8               	btfss	status,2,c
 16714  005B7E  EFC3  F02D         	goto	u7861
 16715  005B82  EFC5  F02D         	goto	u7860
 16716  005B86                     u7861:
 16717  005B86  EFD3  F02D         	goto	l6414
 16718  005B8A                     u7860:
 16719  005B8A  C00B  F007         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16720  005B8E  C00C  F008         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16721  005B92  EC07  F02D         	call	_lcd_set_cursor_y	;wreg free
 16722  005B96  0900               	iorlw	0
 16723  005B98  B4D8               	btfsc	status,2,c
 16724  005B9A  EFD1  F02D         	goto	u7871
 16725  005B9E  EFD3  F02D         	goto	u7870
 16726  005BA2                     u7871:
 16727  005BA2  EFD6  F02D         	goto	l6418
 16728  005BA6                     u7870:
 16729  005BA6                     l6414:
 16730                           
 16731                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 16732  005BA6  0E01               	movlw	1
 16733  005BA8  EFD7  F02D         	goto	l357
 16734  005BAC                     l6418:
 16735                           
 16736                           ;lib_ili9341.c: 151:     return 0;
 16737  005BAC  0E00               	movlw	0
 16738  005BAE                     l357:
 16739  005BAE  0012               	return		;funcret
 16740  005BB0                     __end_of_lcd_set_cursor:
 16741                           	opt callstack 0
 16742                           
 16743 ;; *************** function _lcd_set_cursor_y *****************
 16744 ;; Defined at:
 16745 ;;		line 170 in file "lib_ili9341.c"
 16746 ;; Parameters:    Size  Location     Type
 16747 ;;  y               2    6[COMRAM] unsigned short 
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;		None
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  1    wreg      unsigned char 
 16752 ;; Registers used:
 16753 ;;		wreg, status,2, status,0, cstack
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16763 ;;Total ram usage:        2 bytes
 16764 ;; Hardware stack levels used:    1
 16765 ;; Hardware stack levels required when called:    6
 16766 ;; This function calls:
 16767 ;;		_lcd_send
 16768 ;; This function is called by:
 16769 ;;		_lcd_set_cursor
 16770 ;; This function uses a non-reentrant model
 16771 ;;
 16772                           
 16773                           	psect	text51
 16774  005A0E                     __ptext51:
 16775                           	opt callstack 0
 16776  005A0E                     _lcd_set_cursor_y:
 16777                           	opt callstack 21
 16778  005A0E                     
 16779                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 16780  005A0E  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16781  005A10  E109               	bnz	u7300
 16782  005A12  0EF0               	movlw	240
 16783  005A14  5C07               	subwf	lcd_set_cursor_y@y^0,w,c
 16784  005A16  A0D8               	btfss	status,0,c
 16785  005A18  EF10  F02D         	goto	u7301
 16786  005A1C  EF12  F02D         	goto	u7300
 16787  005A20                     u7301:
 16788  005A20  EF15  F02D         	goto	l6024
 16789  005A24                     u7300:
 16790  005A24                     
 16791                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 16792  005A24  0E01               	movlw	1
 16793  005A26  EF2A  F02D         	goto	l365
 16794  005A2A                     l6024:
 16795                           
 16796                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 16797  005A2A  0E2A               	movlw	42
 16798  005A2C  6E05               	movwf	lcd_send@value^0,c
 16799  005A2E  0E00               	movlw	0
 16800  005A30  EC48  F02F         	call	_lcd_send
 16801                           
 16802                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 16803  005A34  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16804  005A36  6E05               	movwf	lcd_send@value^0,c
 16805  005A38  0E01               	movlw	1
 16806  005A3A  EC48  F02F         	call	_lcd_send
 16807                           
 16808                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 16809  005A3E  C007  F005         	movff	lcd_set_cursor_y@y,lcd_send@value
 16810  005A42  0E01               	movlw	1
 16811  005A44  EC48  F02F         	call	_lcd_send
 16812                           
 16813                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 16814  005A48  0E2C               	movlw	44
 16815  005A4A  6E05               	movwf	lcd_send@value^0,c
 16816  005A4C  0E00               	movlw	0
 16817  005A4E  EC48  F02F         	call	_lcd_send
 16818  005A52                     
 16819                           ;lib_ili9341.c: 182:     return 0;
 16820  005A52  0E00               	movlw	0
 16821  005A54                     l365:
 16822  005A54  0012               	return		;funcret
 16823  005A56                     __end_of_lcd_set_cursor_y:
 16824                           	opt callstack 0
 16825                           
 16826 ;; *************** function _lcd_set_cursor_x *****************
 16827 ;; Defined at:
 16828 ;;		line 155 in file "lib_ili9341.c"
 16829 ;; Parameters:    Size  Location     Type
 16830 ;;  x               2    6[COMRAM] unsigned short 
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;		None
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  1    wreg      unsigned char 
 16835 ;; Registers used:
 16836 ;;		wreg, status,2, status,0, cstack
 16837 ;; Tracked objects:
 16838 ;;		On entry : 0/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16846 ;;Total ram usage:        2 bytes
 16847 ;; Hardware stack levels used:    1
 16848 ;; Hardware stack levels required when called:    6
 16849 ;; This function calls:
 16850 ;;		_lcd_send
 16851 ;; This function is called by:
 16852 ;;		_lcd_set_cursor
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           	psect	text52
 16857  005A56                     __ptext52:
 16858                           	opt callstack 0
 16859  005A56                     _lcd_set_cursor_x:
 16860                           	opt callstack 21
 16861  005A56                     
 16862                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 16863  005A56  0E40               	movlw	64
 16864  005A58  5C07               	subwf	lcd_set_cursor_x@x^0,w,c
 16865  005A5A  0E01               	movlw	1
 16866  005A5C  5808               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16867  005A5E  A0D8               	btfss	status,0,c
 16868  005A60  EF34  F02D         	goto	u7291
 16869  005A64  EF36  F02D         	goto	u7290
 16870  005A68                     u7291:
 16871  005A68  EF39  F02D         	goto	l6012
 16872  005A6C                     u7290:
 16873  005A6C                     
 16874                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 16875  005A6C  0E01               	movlw	1
 16876  005A6E  EF4E  F02D         	goto	l361
 16877  005A72                     l6012:
 16878                           
 16879                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 16880  005A72  0E2B               	movlw	43
 16881  005A74  6E05               	movwf	lcd_send@value^0,c
 16882  005A76  0E00               	movlw	0
 16883  005A78  EC48  F02F         	call	_lcd_send
 16884                           
 16885                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 16886  005A7C  5008               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16887  005A7E  6E05               	movwf	lcd_send@value^0,c
 16888  005A80  0E01               	movlw	1
 16889  005A82  EC48  F02F         	call	_lcd_send
 16890                           
 16891                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 16892  005A86  C007  F005         	movff	lcd_set_cursor_x@x,lcd_send@value
 16893  005A8A  0E01               	movlw	1
 16894  005A8C  EC48  F02F         	call	_lcd_send
 16895                           
 16896                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 16897  005A90  0E2C               	movlw	44
 16898  005A92  6E05               	movwf	lcd_send@value^0,c
 16899  005A94  0E00               	movlw	0
 16900  005A96  EC48  F02F         	call	_lcd_send
 16901  005A9A                     
 16902                           ;lib_ili9341.c: 167:     return 0;
 16903  005A9A  0E00               	movlw	0
 16904  005A9C                     l361:
 16905  005A9C  0012               	return		;funcret
 16906  005A9E                     __end_of_lcd_set_cursor_x:
 16907                           	opt callstack 0
 16908                           
 16909 ;; *************** function _lcd_draw_pixel *****************
 16910 ;; Defined at:
 16911 ;;		line 185 in file "lib_ili9341.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  color           2    6[COMRAM] unsigned short 
 16914 ;; Auto vars:     Size  Location     Type
 16915 ;;		None
 16916 ;; Return value:  Size  Location     Type
 16917 ;;                  1    wreg      unsigned char 
 16918 ;; Registers used:
 16919 ;;		wreg, status,2, cstack
 16920 ;; Tracked objects:
 16921 ;;		On entry : 0/0
 16922 ;;		On exit  : 0/0
 16923 ;;		Unchanged: 0/0
 16924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16929 ;;Total ram usage:        2 bytes
 16930 ;; Hardware stack levels used:    1
 16931 ;; Hardware stack levels required when called:    6
 16932 ;; This function calls:
 16933 ;;		_lcd_send
 16934 ;; This function is called by:
 16935 ;;		_lcd_fill
 16936 ;;		_lcd_draw_char
 16937 ;;		_lcd_draw_pixel_at
 16938 ;;		_lcd_fill_rect
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text53
 16943  005EC0                     __ptext53:
 16944                           	opt callstack 0
 16945  005EC0                     _lcd_draw_pixel:
 16946                           	opt callstack 22
 16947  005EC0                     
 16948                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 16949  005EC0  5008               	movf	(lcd_draw_pixel@color+1)^0,w,c
 16950  005EC2  6E05               	movwf	lcd_send@value^0,c
 16951  005EC4  0E01               	movlw	1
 16952  005EC6  EC48  F02F         	call	_lcd_send
 16953                           
 16954                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 16955  005ECA  C007  F005         	movff	lcd_draw_pixel@color,lcd_send@value
 16956  005ECE  0E01               	movlw	1
 16957  005ED0  EC48  F02F         	call	_lcd_send
 16958  005ED4  0012               	return		;funcret
 16959  005ED6                     __end_of_lcd_draw_pixel:
 16960                           	opt callstack 0
 16961                           
 16962 ;; *************** function _lcd_send *****************
 16963 ;; Defined at:
 16964 ;;		line 134 in file "lib_ili9341.c"
 16965 ;; Parameters:    Size  Location     Type
 16966 ;;  dc              1    wreg     _Bool 
 16967 ;;  value           1    4[COMRAM] unsigned char 
 16968 ;; Auto vars:     Size  Location     Type
 16969 ;;  dc              1    5[COMRAM] _Bool 
 16970 ;; Return value:  Size  Location     Type
 16971 ;;                  1    wreg      void 
 16972 ;; Registers used:
 16973 ;;		wreg, status,2, cstack
 16974 ;; Tracked objects:
 16975 ;;		On entry : 0/0
 16976 ;;		On exit  : 0/0
 16977 ;;		Unchanged: 0/0
 16978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16979 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16983 ;;Total ram usage:        2 bytes
 16984 ;; Hardware stack levels used:    1
 16985 ;; Hardware stack levels required when called:    5
 16986 ;; This function calls:
 16987 ;;		_SPI_ExchangeByte
 16988 ;; This function is called by:
 16989 ;;		_lcd_init
 16990 ;;		_lcd_set_cursor_x
 16991 ;;		_lcd_set_cursor_y
 16992 ;;		_lcd_draw_pixel
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           	psect	text54
 16997  005E90                     __ptext54:
 16998                           	opt callstack 0
 16999  005E90                     _lcd_send:
 17000                           	opt callstack 24
 17001                           
 17002                           ;incstack = 0
 17003                           ;lcd_send@dc stored from wreg
 17004  005E90  6E06               	movwf	lcd_send@dc^0,c
 17005  005E92                     
 17006                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 17007  005E92  B006               	btfsc	lcd_send@dc^0,0,c
 17008  005E94  D002               	bra	u6035
 17009  005E96  908D               	bcf	141,0,c	;volatile
 17010  005E98  D001               	bra	u6036
 17011  005E9A                     u6035:
 17012  005E9A  808D               	bsf	141,0,c	;volatile
 17013  005E9C                     u6036:
 17014  005E9C                     
 17015                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 17016  005E9C  928D               	bcf	141,1,c	;volatile
 17017  005E9E                     
 17018                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 17019  005E9E  5005               	movf	lcd_send@value^0,w,c
 17020  005EA0  EC2E  F02F         	call	_SPI_ExchangeByte
 17021  005EA4                     
 17022                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 17023  005EA4  828D               	bsf	141,1,c	;volatile
 17024  005EA6  0012               	return		;funcret
 17025  005EA8                     __end_of_lcd_send:
 17026                           	opt callstack 0
 17027                           
 17028 ;; *************** function _SPI_ExchangeByte *****************
 17029 ;; Defined at:
 17030 ;;		line 92 in file "mcc_generated_files/spi.c"
 17031 ;; Parameters:    Size  Location     Type
 17032 ;;  data            1    wreg     unsigned char 
 17033 ;; Auto vars:     Size  Location     Type
 17034 ;;  data            1    3[COMRAM] unsigned char 
 17035 ;; Return value:  Size  Location     Type
 17036 ;;                  1    wreg      unsigned char 
 17037 ;; Registers used:
 17038 ;;		wreg, status,2
 17039 ;; Tracked objects:
 17040 ;;		On entry : 0/0
 17041 ;;		On exit  : 0/0
 17042 ;;		Unchanged: 0/0
 17043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17048 ;;Total ram usage:        1 bytes
 17049 ;; Hardware stack levels used:    1
 17050 ;; Hardware stack levels required when called:    4
 17051 ;; This function calls:
 17052 ;;		Nothing
 17053 ;; This function is called by:
 17054 ;;		_lcd_send
 17055 ;;		_SPI_WriteBlock
 17056 ;;		_SPI_ReadBlock
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           	psect	text55
 17061  005E5C                     __ptext55:
 17062                           	opt callstack 0
 17063  005E5C                     _SPI_ExchangeByte:
 17064                           	opt callstack 24
 17065                           
 17066                           ;incstack = 0
 17067                           ;SPI_ExchangeByte@data stored from wreg
 17068  005E5C  6E04               	movwf	SPI_ExchangeByte@data^0,c
 17069  005E5E                     
 17070                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 17071  005E5E  C004  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 17072  005E62                     l130:
 17073  005E62  A69E               	btfss	158,3,c	;volatile
 17074  005E64  EF36  F02F         	goto	u4761
 17075  005E68  EF38  F02F         	goto	u4760
 17076  005E6C                     u4761:
 17077  005E6C  EF31  F02F         	goto	l130
 17078  005E70                     u4760:
 17079  005E70                     
 17080                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 17081  005E70  969E               	bcf	158,3,c	;volatile
 17082                           
 17083                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 17084  005E72  50C9               	movf	201,w,c	;volatile
 17085  005E74  0012               	return		;funcret
 17086  005E76                     __end_of_SPI_ExchangeByte:
 17087                           	opt callstack 0
 17088                           
 17089 ;; *************** function ___xxtofl *****************
 17090 ;; Defined at:
 17091 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  sign            1    wreg     unsigned char 
 17094 ;;  val             4    3[COMRAM] long 
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;  sign            1   11[COMRAM] unsigned char 
 17097 ;;  arg             4   13[COMRAM] unsigned long 
 17098 ;;  exp             1   12[COMRAM] unsigned char 
 17099 ;; Return value:  Size  Location     Type
 17100 ;;                  4    3[COMRAM] unsigned char 
 17101 ;; Registers used:
 17102 ;;		wreg, status,2, status,0
 17103 ;; Tracked objects:
 17104 ;;		On entry : 0/0
 17105 ;;		On exit  : 0/0
 17106 ;;		Unchanged: 0/0
 17107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17109 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17111 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17112 ;;Total ram usage:       14 bytes
 17113 ;; Hardware stack levels used:    1
 17114 ;; Hardware stack levels required when called:    4
 17115 ;; This function calls:
 17116 ;;		Nothing
 17117 ;; This function is called by:
 17118 ;;		_main
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           	psect	text56
 17123  0040C2                     __ptext56:
 17124                           	opt callstack 0
 17125  0040C2                     ___xxtofl:
 17126                           	opt callstack 26
 17127                           
 17128                           ;incstack = 0
 17129                           ;___xxtofl@sign stored from wreg
 17130  0040C2  6E0C               	movwf	___xxtofl@sign^0,c
 17131  0040C4  500C               	movf	___xxtofl@sign^0,w,c
 17132  0040C6  B4D8               	btfsc	status,2,c
 17133  0040C8  EF68  F020         	goto	u8221
 17134  0040CC  EF6A  F020         	goto	u8220
 17135  0040D0                     u8221:
 17136  0040D0  EF8C  F020         	goto	l1460
 17137  0040D4                     u8220:
 17138  0040D4  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 17139  0040D6  EF71  F020         	goto	u8230
 17140  0040DA  EF6F  F020         	goto	u8231
 17141  0040DE                     u8231:
 17142  0040DE  EF8C  F020         	goto	l1460
 17143  0040E2                     u8230:
 17144  0040E2  C004  F008         	movff	___xxtofl@val,??___xxtofl
 17145  0040E6  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
 17146  0040EA  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
 17147  0040EE  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
 17148  0040F2  1E08               	comf	??___xxtofl^0,f,c
 17149  0040F4  1E09               	comf	(??___xxtofl+1)^0,f,c
 17150  0040F6  1E0A               	comf	(??___xxtofl+2)^0,f,c
 17151  0040F8  1E0B               	comf	(??___xxtofl+3)^0,f,c
 17152  0040FA  2A08               	incf	??___xxtofl^0,f,c
 17153  0040FC  0E00               	movlw	0
 17154  0040FE  2209               	addwfc	(??___xxtofl+1)^0,f,c
 17155  004100  220A               	addwfc	(??___xxtofl+2)^0,f,c
 17156  004102  220B               	addwfc	(??___xxtofl+3)^0,f,c
 17157  004104  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
 17158  004108  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
 17159  00410C  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
 17160  004110  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
 17161  004114  EF94  F020         	goto	l6868
 17162  004118                     l1460:
 17163  004118  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
 17164  00411C  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17165  004120  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17166  004124  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17167  004128                     l6868:
 17168  004128  5004               	movf	___xxtofl@val^0,w,c
 17169  00412A  1005               	iorwf	(___xxtofl@val+1)^0,w,c
 17170  00412C  1006               	iorwf	(___xxtofl@val+2)^0,w,c
 17171  00412E  1007               	iorwf	(___xxtofl@val+3)^0,w,c
 17172  004130  A4D8               	btfss	status,2,c
 17173  004132  EF9D  F020         	goto	u8241
 17174  004136  EF9F  F020         	goto	u8240
 17175  00413A                     u8241:
 17176  00413A  EFA9  F020         	goto	l6874
 17177  00413E                     u8240:
 17178  00413E  0E00               	movlw	0
 17179  004140  6E04               	movwf	?___xxtofl^0,c
 17180  004142  0E00               	movlw	0
 17181  004144  6E05               	movwf	(?___xxtofl+1)^0,c
 17182  004146  0E00               	movlw	0
 17183  004148  6E06               	movwf	(?___xxtofl+2)^0,c
 17184  00414A  0E00               	movlw	0
 17185  00414C  6E07               	movwf	(?___xxtofl+3)^0,c
 17186  00414E  EF3A  F021         	goto	l1463
 17187  004152                     l6874:
 17188  004152  0E96               	movlw	150
 17189  004154  6E0D               	movwf	___xxtofl@exp^0,c
 17190  004156  EFB3  F020         	goto	l6878
 17191  00415A                     l6876:
 17192  00415A  2A0D               	incf	___xxtofl@exp^0,f,c
 17193  00415C  90D8               	bcf	status,0,c
 17194  00415E  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 17195  004160  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 17196  004162  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 17197  004164  320E               	rrcf	___xxtofl@arg^0,f,c
 17198  004166                     l6878:
 17199  004166  0E00               	movlw	0
 17200  004168  140E               	andwf	___xxtofl@arg^0,w,c
 17201  00416A  6E08               	movwf	??___xxtofl^0,c
 17202  00416C  0E00               	movlw	0
 17203  00416E  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 17204  004170  6E09               	movwf	(??___xxtofl+1)^0,c
 17205  004172  0E00               	movlw	0
 17206  004174  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 17207  004176  6E0A               	movwf	(??___xxtofl+2)^0,c
 17208  004178  0EFE               	movlw	254
 17209  00417A  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 17210  00417C  6E0B               	movwf	(??___xxtofl+3)^0,c
 17211  00417E  5008               	movf	??___xxtofl^0,w,c
 17212  004180  1009               	iorwf	(??___xxtofl+1)^0,w,c
 17213  004182  100A               	iorwf	(??___xxtofl+2)^0,w,c
 17214  004184  100B               	iorwf	(??___xxtofl+3)^0,w,c
 17215  004186  A4D8               	btfss	status,2,c
 17216  004188  EFC8  F020         	goto	u8251
 17217  00418C  EFCA  F020         	goto	u8250
 17218  004190                     u8251:
 17219  004190  EFAD  F020         	goto	l6876
 17220  004194                     u8250:
 17221  004194  EFD8  F020         	goto	l1467
 17222  004198                     l6880:
 17223  004198  2A0D               	incf	___xxtofl@exp^0,f,c
 17224  00419A  0E01               	movlw	1
 17225  00419C  260E               	addwf	___xxtofl@arg^0,f,c
 17226  00419E  0E00               	movlw	0
 17227  0041A0  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
 17228  0041A2  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
 17229  0041A4  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
 17230  0041A6  90D8               	bcf	status,0,c
 17231  0041A8  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 17232  0041AA  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 17233  0041AC  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 17234  0041AE  320E               	rrcf	___xxtofl@arg^0,f,c
 17235  0041B0                     l1467:
 17236  0041B0  0E00               	movlw	0
 17237  0041B2  140E               	andwf	___xxtofl@arg^0,w,c
 17238  0041B4  6E08               	movwf	??___xxtofl^0,c
 17239  0041B6  0E00               	movlw	0
 17240  0041B8  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 17241  0041BA  6E09               	movwf	(??___xxtofl+1)^0,c
 17242  0041BC  0E00               	movlw	0
 17243  0041BE  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 17244  0041C0  6E0A               	movwf	(??___xxtofl+2)^0,c
 17245  0041C2  0EFF               	movlw	255
 17246  0041C4  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 17247  0041C6  6E0B               	movwf	(??___xxtofl+3)^0,c
 17248  0041C8  5008               	movf	??___xxtofl^0,w,c
 17249  0041CA  1009               	iorwf	(??___xxtofl+1)^0,w,c
 17250  0041CC  100A               	iorwf	(??___xxtofl+2)^0,w,c
 17251  0041CE  100B               	iorwf	(??___xxtofl+3)^0,w,c
 17252  0041D0  A4D8               	btfss	status,2,c
 17253  0041D2  EFED  F020         	goto	u8261
 17254  0041D6  EFEF  F020         	goto	u8260
 17255  0041DA                     u8261:
 17256  0041DA  EFCC  F020         	goto	l6880
 17257  0041DE                     u8260:
 17258  0041DE  EFF7  F020         	goto	l6888
 17259  0041E2                     l6886:
 17260  0041E2  060D               	decf	___xxtofl@exp^0,f,c
 17261  0041E4  90D8               	bcf	status,0,c
 17262  0041E6  360E               	rlcf	___xxtofl@arg^0,f,c
 17263  0041E8  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
 17264  0041EA  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
 17265  0041EC  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
 17266  0041EE                     l6888:
 17267  0041EE  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
 17268  0041F0  EFFC  F020         	goto	u8271
 17269  0041F4  EFFE  F020         	goto	u8270
 17270  0041F8                     u8271:
 17271  0041F8  EF06  F021         	goto	l1474
 17272  0041FC                     u8270:
 17273  0041FC  0E02               	movlw	2
 17274  0041FE  600D               	cpfslt	___xxtofl@exp^0,c
 17275  004200  EF04  F021         	goto	u8281
 17276  004204  EF06  F021         	goto	u8280
 17277  004208                     u8281:
 17278  004208  EFF1  F020         	goto	l6886
 17279  00420C                     u8280:
 17280  00420C                     l1474:
 17281  00420C  B00D               	btfsc	___xxtofl@exp^0,0,c
 17282  00420E  EF0B  F021         	goto	u8291
 17283  004212  EF0D  F021         	goto	u8290
 17284  004216                     u8291:
 17285  004216  EF0E  F021         	goto	l6894
 17286  00421A                     u8290:
 17287  00421A  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
 17288  00421C                     l6894:
 17289  00421C  90D8               	bcf	status,0,c
 17290  00421E  320D               	rrcf	___xxtofl@exp^0,f,c
 17291  004220  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
 17292  004224  6A09               	clrf	(??___xxtofl+1)^0,c
 17293  004226  6A0A               	clrf	(??___xxtofl+2)^0,c
 17294  004228  6A0B               	clrf	(??___xxtofl+3)^0,c
 17295  00422A  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
 17296  00422E  6A0A               	clrf	(??___xxtofl+2)^0,c
 17297  004230  6A09               	clrf	(??___xxtofl+1)^0,c
 17298  004232  6A08               	clrf	??___xxtofl^0,c
 17299  004234  5008               	movf	??___xxtofl^0,w,c
 17300  004236  120E               	iorwf	___xxtofl@arg^0,f,c
 17301  004238  5009               	movf	(??___xxtofl+1)^0,w,c
 17302  00423A  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
 17303  00423C  500A               	movf	(??___xxtofl+2)^0,w,c
 17304  00423E  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
 17305  004240  500B               	movf	(??___xxtofl+3)^0,w,c
 17306  004242  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
 17307  004244  500C               	movf	___xxtofl@sign^0,w,c
 17308  004246  B4D8               	btfsc	status,2,c
 17309  004248  EF28  F021         	goto	u8301
 17310  00424C  EF2A  F021         	goto	u8300
 17311  004250                     u8301:
 17312  004250  EF32  F021         	goto	l6904
 17313  004254                     u8300:
 17314  004254  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
 17315  004256  EF31  F021         	goto	u8310
 17316  00425A  EF2F  F021         	goto	u8311
 17317  00425E                     u8311:
 17318  00425E  EF32  F021         	goto	l6904
 17319  004262                     u8310:
 17320  004262  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
 17321  004264                     l6904:
 17322  004264  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
 17323  004268  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
 17324  00426C  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
 17325  004270  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
 17326  004274                     l1463:
 17327  004274  0012               	return		;funcret
 17328  004276                     __end_of___xxtofl:
 17329                           	opt callstack 0
 17330                           
 17331 ;; *************** function _SYSTEM_Initialize *****************
 17332 ;; Defined at:
 17333 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17334 ;; Parameters:    Size  Location     Type
 17335 ;;		None
 17336 ;; Auto vars:     Size  Location     Type
 17337 ;;		None
 17338 ;; Return value:  Size  Location     Type
 17339 ;;                  1    wreg      void 
 17340 ;; Registers used:
 17341 ;;		wreg, status,2, status,0, cstack
 17342 ;; Tracked objects:
 17343 ;;		On entry : 0/0
 17344 ;;		On exit  : 0/0
 17345 ;;		Unchanged: 0/0
 17346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17351 ;;Total ram usage:        0 bytes
 17352 ;; Hardware stack levels used:    1
 17353 ;; Hardware stack levels required when called:    6
 17354 ;; This function calls:
 17355 ;;		_ADC_Initialize
 17356 ;;		_INTERRUPT_Initialize
 17357 ;;		_OSCILLATOR_Initialize
 17358 ;;		_PIN_MANAGER_Initialize
 17359 ;;		_SPI_Initialize
 17360 ;;		_TMR1_Initialize
 17361 ;; This function is called by:
 17362 ;;		_main
 17363 ;; This function uses a non-reentrant model
 17364 ;;
 17365                           
 17366                           	psect	text57
 17367  005E76                     __ptext57:
 17368                           	opt callstack 0
 17369  005E76                     _SYSTEM_Initialize:
 17370                           	opt callstack 24
 17371  005E76                     
 17372                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 17373  005E76  EC91  F02F         	call	_INTERRUPT_Initialize	;wreg free
 17374  005E7A                     
 17375                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 17376  005E7A  EC76  F02F         	call	_SPI_Initialize	;wreg free
 17377  005E7E                     
 17378                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17379  005E7E  EC72  F02D         	call	_PIN_MANAGER_Initialize	;wreg free
 17380  005E82                     
 17381                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17382  005E82  EC7F  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 17383  005E86                     
 17384                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 17385  005E86  EC05  F02F         	call	_TMR1_Initialize	;wreg free
 17386  005E8A                     
 17387                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 17388  005E8A  EC6B  F02F         	call	_ADC_Initialize	;wreg free
 17389  005E8E  0012               	return		;funcret
 17390  005E90                     __end_of_SYSTEM_Initialize:
 17391                           	opt callstack 0
 17392                           
 17393 ;; *************** function _TMR1_Initialize *****************
 17394 ;; Defined at:
 17395 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17396 ;; Parameters:    Size  Location     Type
 17397 ;;		None
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;		None
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  1    wreg      void 
 17402 ;; Registers used:
 17403 ;;		wreg, status,2, status,0
 17404 ;; Tracked objects:
 17405 ;;		On entry : 0/0
 17406 ;;		On exit  : 0/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;Total ram usage:        2 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:    4
 17416 ;; This function calls:
 17417 ;;		Nothing
 17418 ;; This function is called by:
 17419 ;;		_SYSTEM_Initialize
 17420 ;; This function uses a non-reentrant model
 17421 ;;
 17422                           
 17423                           	psect	text58
 17424  005E0A                     __ptext58:
 17425                           	opt callstack 0
 17426  005E0A                     _TMR1_Initialize:
 17427                           	opt callstack 25
 17428  005E0A                     
 17429                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17430  005E0A  0E00               	movlw	0
 17431  005E0C  6EAA               	movwf	170,c	;volatile
 17432                           
 17433                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 17434  005E0E  0E0B               	movlw	11
 17435  005E10  6ECF               	movwf	207,c	;volatile
 17436                           
 17437                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 17438  005E12  0EDC               	movlw	220
 17439  005E14  6ECE               	movwf	206,c	;volatile
 17440  005E16                     
 17441                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 17442  005E16  909E               	bcf	158,0,c	;volatile
 17443  005E18                     
 17444                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17445  005E18  50CE               	movf	206,w,c	;volatile
 17446  005E1A  CFCF F004          	movff	4047,??_TMR1_Initialize	;volatile
 17447  005E1E  6A05               	clrf	(??_TMR1_Initialize+1)^0,c
 17448  005E20  C004  F005         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17449  005E24  6A04               	clrf	??_TMR1_Initialize^0,c
 17450  005E26  1004               	iorwf	??_TMR1_Initialize^0,w,c
 17451  005E28  0101               	movlb	1	; () banked
 17452  005E2A  6FF9               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17453  005E2C  5005               	movf	(??_TMR1_Initialize+1)^0,w,c
 17454  005E2E  6FFA               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17455  005E30                     
 17456                           ; BSR set to: 1
 17457                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 17458  005E30  0E31               	movlw	49
 17459  005E32  6ECD               	movwf	205,c	;volatile
 17460  005E34                     
 17461                           ; BSR set to: 1
 17462  005E34  0012               	return		;funcret
 17463  005E36                     __end_of_TMR1_Initialize:
 17464                           	opt callstack 0
 17465                           
 17466 ;; *************** function _SPI_Initialize *****************
 17467 ;; Defined at:
 17468 ;;		line 62 in file "mcc_generated_files/spi.c"
 17469 ;; Parameters:    Size  Location     Type
 17470 ;;		None
 17471 ;; Auto vars:     Size  Location     Type
 17472 ;;		None
 17473 ;; Return value:  Size  Location     Type
 17474 ;;                  1    wreg      void 
 17475 ;; Registers used:
 17476 ;;		wreg, status,2
 17477 ;; Tracked objects:
 17478 ;;		On entry : 0/0
 17479 ;;		On exit  : 0/0
 17480 ;;		Unchanged: 0/0
 17481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17486 ;;Total ram usage:        0 bytes
 17487 ;; Hardware stack levels used:    1
 17488 ;; Hardware stack levels required when called:    4
 17489 ;; This function calls:
 17490 ;;		Nothing
 17491 ;; This function is called by:
 17492 ;;		_SYSTEM_Initialize
 17493 ;; This function uses a non-reentrant model
 17494 ;;
 17495                           
 17496                           	psect	text59
 17497  005EEC                     __ptext59:
 17498                           	opt callstack 0
 17499  005EEC                     _SPI_Initialize:
 17500                           	opt callstack 25
 17501  005EEC                     
 17502                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 17503  005EEC  0E40               	movlw	64
 17504  005EEE  6EC7               	movwf	199,c	;volatile
 17505                           
 17506                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 17507  005EF0  0E00               	movlw	0
 17508  005EF2  6EC6               	movwf	198,c	;volatile
 17509                           
 17510                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 17511  005EF4  0E01               	movlw	1
 17512  005EF6  6EC8               	movwf	200,c	;volatile
 17513  005EF8                     
 17514                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 17515  005EF8  9694               	bcf	148,3,c	;volatile
 17516  005EFA                     
 17517                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 17518  005EFA  9AC6               	bcf	198,5,c	;volatile
 17519  005EFC  0012               	return		;funcret
 17520  005EFE                     __end_of_SPI_Initialize:
 17521                           	opt callstack 0
 17522                           
 17523 ;; *************** function _PIN_MANAGER_Initialize *****************
 17524 ;; Defined at:
 17525 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17526 ;; Parameters:    Size  Location     Type
 17527 ;;		None
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;		None
 17530 ;; Return value:  Size  Location     Type
 17531 ;;                  1    wreg      void 
 17532 ;; Registers used:
 17533 ;;		wreg, status,2, status,0, cstack
 17534 ;; Tracked objects:
 17535 ;;		On entry : 0/0
 17536 ;;		On exit  : 0/0
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17543 ;;Total ram usage:        0 bytes
 17544 ;; Hardware stack levels used:    1
 17545 ;; Hardware stack levels required when called:    5
 17546 ;; This function calls:
 17547 ;;		_IOCB4_SetInterruptHandler
 17548 ;; This function is called by:
 17549 ;;		_SYSTEM_Initialize
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           	psect	text60
 17554  005AE4                     __ptext60:
 17555                           	opt callstack 0
 17556  005AE4                     _PIN_MANAGER_Initialize:
 17557                           	opt callstack 24
 17558  005AE4                     
 17559                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 17560  005AE4  0E00               	movlw	0
 17561  005AE6  6E8D               	movwf	141,c	;volatile
 17562                           
 17563                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17564  005AE8  0E00               	movlw	0
 17565  005AEA  6E8C               	movwf	140,c	;volatile
 17566                           
 17567                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17568  005AEC  0E00               	movlw	0
 17569  005AEE  6E89               	movwf	137,c	;volatile
 17570                           
 17571                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 17572  005AF0  0E00               	movlw	0
 17573  005AF2  6E8A               	movwf	138,c	;volatile
 17574                           
 17575                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 17576  005AF4  0E00               	movlw	0
 17577  005AF6  6E8B               	movwf	139,c	;volatile
 17578                           
 17579                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 17580  005AF8  0E04               	movlw	4
 17581  005AFA  6E96               	movwf	150,c	;volatile
 17582                           
 17583                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 17584  005AFC  0E0F               	movlw	15
 17585  005AFE  6E92               	movwf	146,c	;volatile
 17586  005B00                     
 17587                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 17588  005B00  6893               	setf	147,c	;volatile
 17589                           
 17590                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 17591  005B02  0ED7               	movlw	215
 17592  005B04  6E94               	movwf	148,c	;volatile
 17593  005B06                     
 17594                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 17595  005B06  6895               	setf	149,c	;volatile
 17596                           
 17597                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
 17598  005B08  0E87               	movlw	135
 17599  005B0A  010F               	movlb	15	; () banked
 17600  005B0C  6F5D               	movwf	93,b	;volatile
 17601                           
 17602                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 17603  005B0E  0E7D               	movlw	125
 17604  005B10  6F5C               	movwf	92,b	;volatile
 17605                           
 17606                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17607  005B12  0E00               	movlw	0
 17608  005B14  6F5B               	movwf	91,b	;volatile
 17609  005B16                     
 17610                           ; BSR set to: 15
 17611                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 17612  005B16  8EF1               	bsf	241,7,c	;volatile
 17613  005B18                     
 17614                           ; BSR set to: 15
 17615                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 17616  005B18  895A               	bsf	90,4,b	;volatile
 17617  005B1A                     
 17618                           ; BSR set to: 15
 17619                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 17620  005B1A  0E28               	movlw	low _IOCB4_DefaultInterruptHandler
 17621  005B1C  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 17622  005B1E  0E5F               	movlw	high _IOCB4_DefaultInterruptHandler
 17623  005B20  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 17624  005B22  EC88  F02F         	call	_IOCB4_SetInterruptHandler	;wreg free
 17625  005B26                     
 17626                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 17627  005B26  86F2               	bsf	242,3,c	;volatile
 17628  005B28  0012               	return		;funcret
 17629  005B2A                     __end_of_PIN_MANAGER_Initialize:
 17630                           	opt callstack 0
 17631                           
 17632 ;; *************** function _IOCB4_SetInterruptHandler *****************
 17633 ;; Defined at:
 17634 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 17635 ;; Parameters:    Size  Location     Type
 17636 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
 17637 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 17638 ;; Auto vars:     Size  Location     Type
 17639 ;;		None
 17640 ;; Return value:  Size  Location     Type
 17641 ;;                  1    wreg      void 
 17642 ;; Registers used:
 17643 ;;		wreg, status,2, status,0
 17644 ;; Tracked objects:
 17645 ;;		On entry : 0/0
 17646 ;;		On exit  : 0/0
 17647 ;;		Unchanged: 0/0
 17648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17653 ;;Total ram usage:        2 bytes
 17654 ;; Hardware stack levels used:    1
 17655 ;; Hardware stack levels required when called:    4
 17656 ;; This function calls:
 17657 ;;		Nothing
 17658 ;; This function is called by:
 17659 ;;		_PIN_MANAGER_Initialize
 17660 ;;		_main
 17661 ;; This function uses a non-reentrant model
 17662 ;;
 17663                           
 17664                           	psect	text61
 17665  005F10                     __ptext61:
 17666                           	opt callstack 0
 17667  005F10                     _IOCB4_SetInterruptHandler:
 17668                           	opt callstack 24
 17669  005F10                     
 17670                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 17671  005F10  C004  F1FB         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 17672  005F14  C005  F1FC         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 17673  005F18  0012               	return		;funcret
 17674  005F1A                     __end_of_IOCB4_SetInterruptHandler:
 17675                           	opt callstack 0
 17676                           
 17677 ;; *************** function _OSCILLATOR_Initialize *****************
 17678 ;; Defined at:
 17679 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17680 ;; Parameters:    Size  Location     Type
 17681 ;;		None
 17682 ;; Auto vars:     Size  Location     Type
 17683 ;;		None
 17684 ;; Return value:  Size  Location     Type
 17685 ;;                  1    wreg      void 
 17686 ;; Registers used:
 17687 ;;		wreg, status,2
 17688 ;; Tracked objects:
 17689 ;;		On entry : 0/0
 17690 ;;		On exit  : 0/0
 17691 ;;		Unchanged: 0/0
 17692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17697 ;;Total ram usage:        0 bytes
 17698 ;; Hardware stack levels used:    1
 17699 ;; Hardware stack levels required when called:    4
 17700 ;; This function calls:
 17701 ;;		Nothing
 17702 ;; This function is called by:
 17703 ;;		_SYSTEM_Initialize
 17704 ;; This function uses a non-reentrant model
 17705 ;;
 17706                           
 17707                           	psect	text62
 17708  005EFE                     __ptext62:
 17709                           	opt callstack 0
 17710  005EFE                     _OSCILLATOR_Initialize:
 17711                           	opt callstack 25
 17712  005EFE                     
 17713                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x62;
 17714  005EFE  0E62               	movlw	98
 17715  005F00  6ED3               	movwf	211,c	;volatile
 17716                           
 17717                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
 17718  005F02  0E00               	movlw	0
 17719  005F04  6ED2               	movwf	210,c	;volatile
 17720                           
 17721                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
 17722  005F06  0E00               	movlw	0
 17723  005F08  6E9B               	movwf	155,c	;volatile
 17724                           
 17725                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
 17726  005F0A  0E00               	movlw	0
 17727  005F0C  6E9A               	movwf	154,c	;volatile
 17728  005F0E  0012               	return		;funcret
 17729  005F10                     __end_of_OSCILLATOR_Initialize:
 17730                           	opt callstack 0
 17731                           
 17732 ;; *************** function _INTERRUPT_Initialize *****************
 17733 ;; Defined at:
 17734 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;		None
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;		None
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  1    wreg      void 
 17741 ;; Registers used:
 17742 ;;		None
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17752 ;;Total ram usage:        0 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; Hardware stack levels required when called:    4
 17755 ;; This function calls:
 17756 ;;		Nothing
 17757 ;; This function is called by:
 17758 ;;		_SYSTEM_Initialize
 17759 ;; This function uses a non-reentrant model
 17760 ;;
 17761                           
 17762                           	psect	text63
 17763  005F22                     __ptext63:
 17764                           	opt callstack 0
 17765  005F22                     _INTERRUPT_Initialize:
 17766                           	opt callstack 25
 17767  005F22                     
 17768                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 17769  005F22  9ED0               	bcf	208,7,c	;volatile
 17770  005F24  0012               	return		;funcret
 17771  005F26                     __end_of_INTERRUPT_Initialize:
 17772                           	opt callstack 0
 17773                           
 17774 ;; *************** function _ADC_Initialize *****************
 17775 ;; Defined at:
 17776 ;;		line 62 in file "mcc_generated_files/adc.c"
 17777 ;; Parameters:    Size  Location     Type
 17778 ;;		None
 17779 ;; Auto vars:     Size  Location     Type
 17780 ;;		None
 17781 ;; Return value:  Size  Location     Type
 17782 ;;                  1    wreg      void 
 17783 ;; Registers used:
 17784 ;;		wreg, status,2
 17785 ;; Tracked objects:
 17786 ;;		On entry : 0/0
 17787 ;;		On exit  : 0/0
 17788 ;;		Unchanged: 0/0
 17789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17794 ;;Total ram usage:        0 bytes
 17795 ;; Hardware stack levels used:    1
 17796 ;; Hardware stack levels required when called:    4
 17797 ;; This function calls:
 17798 ;;		Nothing
 17799 ;; This function is called by:
 17800 ;;		_SYSTEM_Initialize
 17801 ;; This function uses a non-reentrant model
 17802 ;;
 17803                           
 17804                           	psect	text64
 17805  005ED6                     __ptext64:
 17806                           	opt callstack 0
 17807  005ED6                     _ADC_Initialize:
 17808                           	opt callstack 25
 17809  005ED6                     
 17810                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 17811  005ED6  0E01               	movlw	1
 17812  005ED8  6EC2               	movwf	194,c	;volatile
 17813                           
 17814                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 17815  005EDA  0E80               	movlw	128
 17816  005EDC  6EC1               	movwf	193,c	;volatile
 17817                           
 17818                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 17819  005EDE  0EAD               	movlw	173
 17820  005EE0  6EC0               	movwf	192,c	;volatile
 17821                           
 17822                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 17823  005EE2  0E00               	movlw	0
 17824  005EE4  6EC4               	movwf	196,c	;volatile
 17825                           
 17826                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 17827  005EE6  0E00               	movlw	0
 17828  005EE8  6EC3               	movwf	195,c	;volatile
 17829  005EEA  0012               	return		;funcret
 17830  005EEC                     __end_of_ADC_Initialize:
 17831                           	opt callstack 0
 17832                           
 17833 ;; *************** function _SPI_Open *****************
 17834 ;; Defined at:
 17835 ;;		line 72 in file "mcc_generated_files/spi.c"
 17836 ;; Parameters:    Size  Location     Type
 17837 ;;  spiUniqueCon    1    wreg     enum E353
 17838 ;; Auto vars:     Size  Location     Type
 17839 ;;  spiUniqueCon    1    4[COMRAM] enum E353
 17840 ;; Return value:  Size  Location     Type
 17841 ;;                  1    wreg      _Bool 
 17842 ;; Registers used:
 17843 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17844 ;; Tracked objects:
 17845 ;;		On entry : 0/0
 17846 ;;		On exit  : 0/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17853 ;;Total ram usage:        2 bytes
 17854 ;; Hardware stack levels used:    1
 17855 ;; Hardware stack levels required when called:    4
 17856 ;; This function calls:
 17857 ;;		Nothing
 17858 ;; This function is called by:
 17859 ;;		_main
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           
 17863                           	psect	text65
 17864  005556                     __ptext65:
 17865                           	opt callstack 0
 17866  005556                     _SPI_Open:
 17867                           	opt callstack 26
 17868                           
 17869                           ;incstack = 0
 17870                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 17871  005556  6E05               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 17872  005558                     
 17873                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 17874  005558  BAC6               	btfsc	198,5,c	;volatile
 17875  00555A  EFB1  F02A         	goto	u8071
 17876  00555E  EFB3  F02A         	goto	u8070
 17877  005562                     u8071:
 17878  005562  EF02  F02B         	goto	l124
 17879  005566                     u8070:
 17880  005566                     
 17881                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 17882  005566  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17883  005568  0D04               	mullw	4
 17884  00556A  0E01               	movlw	1
 17885  00556C  26F3               	addwf	243,f,c
 17886  00556E  0E00               	movlw	0
 17887  005570  22F4               	addwfc	244,f,c
 17888  005572  0E75               	movlw	low _spi_configuration
 17889  005574  24F3               	addwf	243,w,c
 17890  005576  6EF6               	movwf	tblptrl,c
 17891  005578  0EFF               	movlw	high _spi_configuration
 17892  00557A  20F4               	addwfc	244,w,c
 17893  00557C  6EF7               	movwf	tblptrh,c
 17894  00557E                     	if	1	;There are 3 active tblptr bytes
 17895  00557E  6AF8               	clrf	tblptru,c
 17896  005580  0E00               	movlw	low (__mediumconst shr (0+16))
 17897  005582  22F8               	addwfc	tblptru,f,c
 17898  005584                     	endif
 17899  005584  0008               	tblrd		*
 17900  005586  CFF5 FFC7          	movff	tablat,4039	;volatile
 17901                           
 17902                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 17903  00558A  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17904  00558C  0D04               	mullw	4
 17905  00558E  0E75               	movlw	low _spi_configuration
 17906  005590  24F3               	addwf	243,w,c
 17907  005592  6EF6               	movwf	tblptrl,c
 17908  005594  0EFF               	movlw	high _spi_configuration
 17909  005596  20F4               	addwfc	244,w,c
 17910  005598  6EF7               	movwf	tblptrh,c
 17911  00559A                     	if	1	;There are 3 active tblptr bytes
 17912  00559A  6AF8               	clrf	tblptru,c
 17913  00559C  0E00               	movlw	low (__mediumconst shr (0+16))
 17914  00559E  22F8               	addwfc	tblptru,f,c
 17915  0055A0                     	endif
 17916  0055A0  0008               	tblrd		*
 17917  0055A2  CFF5 FFC6          	movff	tablat,4038	;volatile
 17918  0055A6                     
 17919                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 17920  0055A6  0E00               	movlw	0
 17921  0055A8  6EC5               	movwf	197,c	;volatile
 17922  0055AA                     
 17923                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 17924  0055AA  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17925  0055AC  0D04               	mullw	4
 17926  0055AE  0E02               	movlw	2
 17927  0055B0  26F3               	addwf	243,f,c
 17928  0055B2  0E00               	movlw	0
 17929  0055B4  22F4               	addwfc	244,f,c
 17930  0055B6  0E75               	movlw	low _spi_configuration
 17931  0055B8  24F3               	addwf	243,w,c
 17932  0055BA  6EF6               	movwf	tblptrl,c
 17933  0055BC  0EFF               	movlw	high _spi_configuration
 17934  0055BE  20F4               	addwfc	244,w,c
 17935  0055C0  6EF7               	movwf	tblptrh,c
 17936  0055C2                     	if	1	;There are 3 active tblptr bytes
 17937  0055C2  6AF8               	clrf	tblptru,c
 17938  0055C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17939  0055C6  22F8               	addwfc	tblptru,f,c
 17940  0055C8                     	endif
 17941  0055C8  0008               	tblrd		*
 17942  0055CA  CFF5 FFC8          	movff	tablat,4040	;volatile
 17943  0055CE                     
 17944                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 17945  0055CE  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 17946  0055D0  0D04               	mullw	4
 17947  0055D2  0E03               	movlw	3
 17948  0055D4  26F3               	addwf	243,f,c
 17949  0055D6  0E00               	movlw	0
 17950  0055D8  22F4               	addwfc	244,f,c
 17951  0055DA  0E75               	movlw	low _spi_configuration
 17952  0055DC  24F3               	addwf	243,w,c
 17953  0055DE  6EF6               	movwf	tblptrl,c
 17954  0055E0  0EFF               	movlw	high _spi_configuration
 17955  0055E2  20F4               	addwfc	244,w,c
 17956  0055E4  6EF7               	movwf	tblptrh,c
 17957  0055E6                     	if	1	;There are 3 active tblptr bytes
 17958  0055E6  6AF8               	clrf	tblptru,c
 17959  0055E8  0E00               	movlw	low (__mediumconst shr (0+16))
 17960  0055EA  22F8               	addwfc	tblptru,f,c
 17961  0055EC                     	endif
 17962  0055EC  0008               	tblrd		*
 17963  0055EE  CFF5 F004          	movff	tablat,??_SPI_Open
 17964  0055F2  4604               	rlncf	??_SPI_Open^0,f,c
 17965  0055F4  4604               	rlncf	??_SPI_Open^0,f,c
 17966  0055F6  4604               	rlncf	??_SPI_Open^0,f,c
 17967  0055F8  5094               	movf	148,w,c	;volatile
 17968  0055FA  1804               	xorwf	??_SPI_Open^0,w,c
 17969  0055FC  0BF7               	andlw	-9
 17970  0055FE  1804               	xorwf	??_SPI_Open^0,w,c
 17971  005600  6E94               	movwf	148,c	;volatile
 17972  005602                     
 17973                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 17974  005602  8AC6               	bsf	198,5,c	;volatile
 17975  005604                     l124:
 17976  005604  0012               	return		;funcret
 17977  005606                     __end_of_SPI_Open:
 17978                           	opt callstack 0
 17979                           
 17980 ;; *************** function _ADC_GetConversion *****************
 17981 ;; Defined at:
 17982 ;;		line 108 in file "mcc_generated_files/adc.c"
 17983 ;; Parameters:    Size  Location     Type
 17984 ;;  channel         1    wreg     enum E12385
 17985 ;; Auto vars:     Size  Location     Type
 17986 ;;  channel         1    7[COMRAM] enum E12385
 17987 ;; Return value:  Size  Location     Type
 17988 ;;                  2    3[COMRAM] unsigned short 
 17989 ;; Registers used:
 17990 ;;		wreg, status,2, status,0
 17991 ;; Tracked objects:
 17992 ;;		On entry : 0/0
 17993 ;;		On exit  : 0/0
 17994 ;;		Unchanged: 0/0
 17995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17999 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18000 ;;Total ram usage:        5 bytes
 18001 ;; Hardware stack levels used:    1
 18002 ;; Hardware stack levels required when called:    4
 18003 ;; This function calls:
 18004 ;;		Nothing
 18005 ;; This function is called by:
 18006 ;;		_main
 18007 ;; This function uses a non-reentrant model
 18008 ;;
 18009                           
 18010                           	psect	text66
 18011  005C2C                     __ptext66:
 18012                           	opt callstack 0
 18013  005C2C                     _ADC_GetConversion:
 18014                           	opt callstack 26
 18015                           
 18016                           ;incstack = 0
 18017                           ;ADC_GetConversion@channel stored from wreg
 18018  005C2C  6E08               	movwf	ADC_GetConversion@channel^0,c
 18019  005C2E                     
 18020                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 18021  005C2E  C008  F006         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 18022  005C32  4606               	rlncf	??_ADC_GetConversion^0,f,c
 18023  005C34  4606               	rlncf	??_ADC_GetConversion^0,f,c
 18024  005C36  50C2               	movf	194,w,c	;volatile
 18025  005C38  1806               	xorwf	??_ADC_GetConversion^0,w,c
 18026  005C3A  0B83               	andlw	-125
 18027  005C3C  1806               	xorwf	??_ADC_GetConversion^0,w,c
 18028  005C3E  6EC2               	movwf	194,c	;volatile
 18029  005C40                     
 18030                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 18031  005C40  80C2               	bsf	194,0,c	;volatile
 18032  005C42                     
 18033                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 18034  005C42  82C2               	bsf	194,1,c	;volatile
 18035  005C44                     l191:
 18036                           
 18037                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 18038  005C44  B2C2               	btfsc	194,1,c	;volatile
 18039  005C46  EF27  F02E         	goto	u8081
 18040  005C4A  EF29  F02E         	goto	u8080
 18041  005C4E                     u8081:
 18042  005C4E  EF22  F02E         	goto	l191
 18043  005C52                     u8080:
 18044  005C52                     
 18045                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18046  005C52  50C4               	movf	196,w,c	;volatile
 18047  005C54  6E07               	movwf	(??_ADC_GetConversion+1)^0,c
 18048  005C56  6A06               	clrf	??_ADC_GetConversion^0,c
 18049  005C58  50C3               	movf	195,w,c	;volatile
 18050  005C5A  2406               	addwf	??_ADC_GetConversion^0,w,c
 18051  005C5C  6E04               	movwf	?_ADC_GetConversion^0,c
 18052  005C5E  0E00               	movlw	0
 18053  005C60  2007               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 18054  005C62  6E05               	movwf	(?_ADC_GetConversion+1)^0,c
 18055  005C64  0012               	return		;funcret
 18056  005C66                     __end_of_ADC_GetConversion:
 18057                           	opt callstack 0
 18058                           
 18059 ;; *************** function _INTERRUPT_InterruptManager *****************
 18060 ;; Defined at:
 18061 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 18062 ;; Parameters:    Size  Location     Type
 18063 ;;		None
 18064 ;; Auto vars:     Size  Location     Type
 18065 ;;		None
 18066 ;; Return value:  Size  Location     Type
 18067 ;;                  1    wreg      void 
 18068 ;; Registers used:
 18069 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18070 ;; Tracked objects:
 18071 ;;		On entry : 0/0
 18072 ;;		On exit  : 0/0
 18073 ;;		Unchanged: 0/0
 18074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18079 ;;Total ram usage:        2 bytes
 18080 ;; Hardware stack levels used:    1
 18081 ;; Hardware stack levels required when called:    3
 18082 ;; This function calls:
 18083 ;;		_PIN_MANAGER_IOC
 18084 ;; This function is called by:
 18085 ;;		Interrupt level 2
 18086 ;; This function uses a non-reentrant model
 18087 ;;
 18088                           
 18089                           	psect	intcode
 18090  000008                     __pintcode:
 18091                           	opt callstack 0
 18092  000008                     _INTERRUPT_InterruptManager:
 18093                           	opt callstack 18
 18094                           
 18095                           ;incstack = 0
 18096  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18097  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
 18098  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18099  000012                     
 18100                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 18101  000012  A6F2               	btfss	242,3,c	;volatile
 18102  000014  EF0E  F000         	goto	i2u832_41
 18103  000018  EF10  F000         	goto	i2u832_40
 18104  00001C                     i2u832_41:
 18105  00001C  EF19  F000         	goto	i2l42
 18106  000020                     i2u832_40:
 18107  000020  A0F2               	btfss	242,0,c	;volatile
 18108  000022  EF15  F000         	goto	i2u833_41
 18109  000026  EF17  F000         	goto	i2u833_40
 18110  00002A                     i2u833_41:
 18111  00002A  EF19  F000         	goto	i2l42
 18112  00002E                     i2u833_40:
 18113  00002E                     
 18114                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 18115  00002E  EC54  F02F         	call	_PIN_MANAGER_IOC	;wreg free
 18116  000032                     i2l42:
 18117  000032  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18118  000036  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18119  00003A  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18120  00003C  0011               	retfie		f
 18121  00003E                     __end_of_INTERRUPT_InterruptManager:
 18122                           	opt callstack 0
 18123                           
 18124 ;; *************** function _PIN_MANAGER_IOC *****************
 18125 ;; Defined at:
 18126 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 18127 ;; Parameters:    Size  Location     Type
 18128 ;;		None
 18129 ;; Auto vars:     Size  Location     Type
 18130 ;;		None
 18131 ;; Return value:  Size  Location     Type
 18132 ;;                  1    wreg      void 
 18133 ;; Registers used:
 18134 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18135 ;; Tracked objects:
 18136 ;;		On entry : 0/0
 18137 ;;		On exit  : 0/0
 18138 ;;		Unchanged: 0/0
 18139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18144 ;;Total ram usage:        0 bytes
 18145 ;; Hardware stack levels used:    1
 18146 ;; Hardware stack levels required when called:    2
 18147 ;; This function calls:
 18148 ;;		_IOCB4_ISR
 18149 ;; This function is called by:
 18150 ;;		_INTERRUPT_InterruptManager
 18151 ;; This function uses a non-reentrant model
 18152 ;;
 18153                           
 18154                           	psect	text68
 18155  005EA8                     __ptext68:
 18156                           	opt callstack 0
 18157  005EA8                     _PIN_MANAGER_IOC:
 18158                           	opt callstack 18
 18159  005EA8                     
 18160                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 18161  005EA8  010F               	movlb	15	; () banked
 18162  005EAA  A95A               	btfss	90,4,b	;volatile
 18163  005EAC  EF5A  F02F         	goto	i2u806_41
 18164  005EB0  EF5C  F02F         	goto	i2u806_40
 18165  005EB4                     i2u806_41:
 18166  005EB4  EF5E  F02F         	goto	i2l6580
 18167  005EB8                     i2u806_40:
 18168  005EB8                     
 18169                           ; BSR set to: 15
 18170                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 18171  005EB8  ECEE  F02E         	call	_IOCB4_ISR	;wreg free
 18172  005EBC                     i2l6580:
 18173                           
 18174                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 18175  005EBC  90F2               	bcf	242,0,c	;volatile
 18176  005EBE  0012               	return		;funcret
 18177  005EC0                     __end_of_PIN_MANAGER_IOC:
 18178                           	opt callstack 0
 18179                           
 18180 ;; *************** function _IOCB4_ISR *****************
 18181 ;; Defined at:
 18182 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;		None
 18185 ;; Auto vars:     Size  Location     Type
 18186 ;;		None
 18187 ;; Return value:  Size  Location     Type
 18188 ;;                  1    wreg      void 
 18189 ;; Registers used:
 18190 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18191 ;; Tracked objects:
 18192 ;;		On entry : 0/0
 18193 ;;		On exit  : 0/0
 18194 ;;		Unchanged: 0/0
 18195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18200 ;;Total ram usage:        0 bytes
 18201 ;; Hardware stack levels used:    1
 18202 ;; Hardware stack levels required when called:    1
 18203 ;; This function calls:
 18204 ;;		Absolute function
 18205 ;;		_IOCB4_DefaultInterruptHandler
 18206 ;;		_IOCB4_InterruptCall
 18207 ;; This function is called by:
 18208 ;;		_PIN_MANAGER_IOC
 18209 ;; This function uses a non-reentrant model
 18210 ;;
 18211                           
 18212                           	psect	text69
 18213  005DDC                     __ptext69:
 18214                           	opt callstack 0
 18215  005DDC                     _IOCB4_ISR:
 18216                           	opt callstack 18
 18217  005DDC                     
 18218                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 18219  005DDC  0101               	movlb	1	; () banked
 18220  005DDE  51FB               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18221  005DE0  11FC               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18222  005DE2  B4D8               	btfsc	status,2,c
 18223  005DE4  EFF6  F02E         	goto	i2u789_41
 18224  005DE8  EFF8  F02E         	goto	i2u789_40
 18225  005DEC                     i2u789_41:
 18226  005DEC  EF04  F02F         	goto	i2l93
 18227  005DF0                     i2u789_40:
 18228  005DF0                     
 18229                           ; BSR set to: 1
 18230                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 18231  005DF0  D802               	call	i2u790_48
 18232  005DF2  EF04  F02F         	goto	i2u790_49
 18233  005DF6                     i2u790_48:
 18234  005DF6  0005               	push	
 18235  005DF8  6EFA               	movwf	pclath,c
 18236  005DFA  51FB               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18237  005DFC  6EFD               	movwf	tosl,c
 18238  005DFE  51FC               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18239  005E00  6EFE               	movwf	tosh,c
 18240  005E02  6AFF               	clrf	tosu,c
 18241  005E04  50FA               	movf	pclath,w,c
 18242  005E06  0012               	return		;indir
 18243  005E08                     i2u790_49:
 18244  005E08                     i2l93:
 18245  005E08  0012               	return		;funcret
 18246  005E0A                     __end_of_IOCB4_ISR:
 18247                           	opt callstack 0
 18248                           
 18249 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18250 ;; Defined at:
 18251 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 18252 ;; Parameters:    Size  Location     Type
 18253 ;;		None
 18254 ;; Auto vars:     Size  Location     Type
 18255 ;;		None
 18256 ;; Return value:  Size  Location     Type
 18257 ;;                  1    wreg      void 
 18258 ;; Registers used:
 18259 ;;		None
 18260 ;; Tracked objects:
 18261 ;;		On entry : 0/0
 18262 ;;		On exit  : 0/0
 18263 ;;		Unchanged: 0/0
 18264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18269 ;;Total ram usage:        0 bytes
 18270 ;; Hardware stack levels used:    1
 18271 ;; This function calls:
 18272 ;;		Nothing
 18273 ;; This function is called by:
 18274 ;;		_PIN_MANAGER_Initialize
 18275 ;;		_IOCB4_ISR
 18276 ;; This function uses a non-reentrant model
 18277 ;;
 18278                           
 18279                           	psect	text70
 18280  005F28                     __ptext70:
 18281                           	opt callstack 0
 18282  005F28                     _IOCB4_DefaultInterruptHandler:
 18283                           	opt callstack 18
 18284  005F28  0012               	return		;funcret
 18285  005F2A                     __end_of_IOCB4_DefaultInterruptHandler:
 18286                           	opt callstack 0
 18287                           
 18288 ;; *************** function _IOCB4_InterruptCall *****************
 18289 ;; Defined at:
 18290 ;;		line 18 in file "main.c"
 18291 ;; Parameters:    Size  Location     Type
 18292 ;;		None
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;		None
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  1    wreg      void 
 18297 ;; Registers used:
 18298 ;;		wreg, status,2, status,0
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18308 ;;Total ram usage:        1 bytes
 18309 ;; Hardware stack levels used:    1
 18310 ;; This function calls:
 18311 ;;		Nothing
 18312 ;; This function is called by:
 18313 ;;		_main
 18314 ;;		_IOCB4_ISR
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           	psect	text71
 18319  0058BA                     __ptext71:
 18320                           	opt callstack 0
 18321  0058BA                     _IOCB4_InterruptCall:
 18322                           	opt callstack 18
 18323  0058BA                     
 18324                           ;main.c: 20:     if(!PORTBbits.RB4){
 18325  0058BA  B881               	btfsc	129,4,c	;volatile
 18326  0058BC  EF62  F02C         	goto	i2u783_41
 18327  0058C0  EF64  F02C         	goto	i2u783_40
 18328  0058C4                     i2u783_41:
 18329  0058C4  EF8A  F02C         	goto	i2l292
 18330  0058C8                     i2u783_40:
 18331  0058C8  BC89               	btfsc	137,6,c	;volatile
 18332  0058CA  EF69  F02C         	goto	i2u784_41
 18333  0058CE  EF6C  F02C         	goto	i2u784_40
 18334  0058D2                     i2u784_41:
 18335  0058D2  0E01               	movlw	1
 18336  0058D4  EF6D  F02C         	goto	i2u784_46
 18337  0058D8                     i2u784_40:
 18338  0058D8  0E00               	movlw	0
 18339  0058DA                     i2u784_46:
 18340  0058DA  0AFF               	xorlw	255
 18341  0058DC  6E01               	movwf	??_IOCB4_InterruptCall^0,c
 18342  0058DE  3A01               	swapf	??_IOCB4_InterruptCall^0,f,c
 18343  0058E0  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 18344  0058E2  4601               	rlncf	??_IOCB4_InterruptCall^0,f,c
 18345  0058E4  5089               	movf	137,w,c	;volatile
 18346  0058E6  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 18347  0058E8  0BBF               	andlw	-65
 18348  0058EA  1801               	xorwf	??_IOCB4_InterruptCall^0,w,c
 18349  0058EC  6E89               	movwf	137,c	;volatile
 18350  0058EE                     
 18351                           ;main.c: 22:         if(botao!=3){
 18352  0058EE  0E03               	movlw	3
 18353  0058F0  0101               	movlb	1	; () banked
 18354  0058F2  1920               	xorwf	_botao& (0+255),w,b
 18355  0058F4  1121               	iorwf	(_botao+1)& (0+255),w,b
 18356  0058F6  B4D8               	btfsc	status,2,c
 18357  0058F8  EF80  F02C         	goto	i2u785_41
 18358  0058FC  EF82  F02C         	goto	i2u785_40
 18359  005900                     i2u785_41:
 18360  005900  EF86  F02C         	goto	i2l6408
 18361  005904                     i2u785_40:
 18362  005904                     
 18363                           ; BSR set to: 1
 18364                           ;main.c: 23:             botao++;
 18365  005904  4B20               	infsnz	_botao& (0+255),f,b
 18366  005906  2B21               	incf	(_botao+1)& (0+255),f,b
 18367                           
 18368                           ;main.c: 24:         }
 18369  005908  EF8A  F02C         	goto	i2l292
 18370  00590C                     i2l6408:
 18371                           
 18372                           ; BSR set to: 1
 18373                           ;main.c: 26:             botao=0;
 18374  00590C  0E00               	movlw	0
 18375  00590E  6F21               	movwf	(_botao+1)& (0+255),b
 18376  005910  0E00               	movlw	0
 18377  005912  6F20               	movwf	_botao& (0+255),b
 18378  005914                     i2l292:
 18379  005914  0012               	return		;funcret
 18380  005916                     __end_of_IOCB4_InterruptCall:
 18381                           	opt callstack 0
 18382                           
 18383                           	psect	text72
 18384  000000                     __ptext72:
 18385                           	opt callstack 0
 18386  000000                     
 18387                           	psect	rparam
 18388  0000                     
 18389                           	psect	temp
 18390  00005C                     btemp:
 18391                           	opt callstack 0
 18392  00005C                     	ds	1
 18393  0000                     int$flags	set	btemp
 18394  0000                     wtemp8	set	btemp+1
 18395  0000                     ttemp5	set	btemp+1
 18396  0000                     ttemp6	set	btemp+4
 18397  0000                     ttemp7	set	btemp+8
 18398                           tosu	equ	0xFFF
 18399                           tosh	equ	0xFFE
 18400                           tosl	equ	0xFFD
 18401                           stkptr	equ	0xFFC
 18402                           pclatu	equ	0xFFB
 18403                           pclath	equ	0xFFA
 18404                           pcl	equ	0xFF9
 18405                           tblptru	equ	0xFF8
 18406                           tblptrh	equ	0xFF7
 18407                           tblptrl	equ	0xFF6
 18408                           tablat	equ	0xFF5
 18409                           prodh	equ	0xFF4
 18410                           prodl	equ	0xFF3
 18411                           indf0	equ	0xFEF
 18412                           postinc0	equ	0xFEE
 18413                           postdec0	equ	0xFED
 18414                           preinc0	equ	0xFEC
 18415                           plusw0	equ	0xFEB
 18416                           fsr0h	equ	0xFEA
 18417                           fsr0l	equ	0xFE9
 18418                           wreg	equ	0xFE8
 18419                           indf1	equ	0xFE7
 18420                           postinc1	equ	0xFE6
 18421                           postdec1	equ	0xFE5
 18422                           preinc1	equ	0xFE4
 18423                           plusw1	equ	0xFE3
 18424                           fsr1h	equ	0xFE2
 18425                           fsr1l	equ	0xFE1
 18426                           bsr	equ	0xFE0
 18427                           indf2	equ	0xFDF
 18428                           postinc2	equ	0xFDE
 18429                           postdec2	equ	0xFDD
 18430                           preinc2	equ	0xFDC
 18431                           plusw2	equ	0xFDB
 18432                           fsr2h	equ	0xFDA
 18433                           fsr2l	equ	0xFD9
 18434                           status	equ	0xFD8


Data Sizes:
    Strings     134
    Constant    3536
    Data        7
    BSS         426
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    156     158
    BANK1           256     20     253
    BANK2           256      4     204
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK2[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), STR_24(CODE[3]), 
		 -> STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), STR_24(CODE[3]), 
		 -> STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 21
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[21]), STR_3(CODE[16]), STR_2(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 21
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[21]), STR_3(CODE[16]), STR_2(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), tensao_in(BANK1[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), tensao_in(BANK1[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[16]), STR_2(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    S2030_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[16]), STR_2(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), tensao_in(BANK1[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), tensao_in(BANK1[4]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string_ntc(BANK2[100]), string_pot(BANK2[100]), string_temp(BANK1[100]), STR_1(CODE[12]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flsub
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_IOCB4_InterruptCall

Critical Paths under _main in BANK0

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_snprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  175330
                  _ADC_GetConversion
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10  100288
                                             10 BANK1     10     0     10
                                              0 BANK2      4     4      0
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   99173
                                            144 BANK0     12     4      8
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   98136
                                            136 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   97309
                                             90 BANK0     46    40      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              9 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             12 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             30 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   33907
                                             84 COMRAM     5     5      0
                                             27 BANK0     63    56      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             78 COMRAM     6     6      0
                                             13 BANK0     14    10      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4547
                                             58 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3802
                                             42 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4133
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3083
                                             66 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             30 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             12 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   26180
                                             34 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             12 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              8 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              4 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___fladd
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___fldiv
     ___fladd (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___flsub
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      4      CC      10       79.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     14      FD       8       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2       6        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 21 20:34:20 2020

                           _SPI_Initialize 5EEC                               ___fldiv@aexp 006C  
                             ___fldiv@bexp 006B                               ___fldiv@sign 0064  
                              _SSPSTATbits 000FC7                                         l23 5E8E  
                                       l26 5F0E                                         l35 5F24  
                                       l85 5B28                                         l96 5F18  
                             ___awdiv@sign 0009                        ___wmul@multiplicand 0006  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
              __end_of_IOCB4_InterruptCall 5916                 ?_IOCB4_SetInterruptHandler 0004  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l120 5EFC                                        l130 5E62  
                                      l124 5604                                        l132 5E70  
                                      l300 2B3E                                        l133 5E74  
                                      l303 2B44                                        l216 5E34  
                                      l500 53A4                                        l502 53E0  
                                      l191 5C44                                        l351 5EA6  
                                      l361 5A9C                                        l441 4896  
                                      l194 5C64                                        l450 4C62  
                                      l179 5EEA                                        l339 5DDA  
                                      l515 3596                                        l372 5730  
                                      l348 34F4                                        l365 5A54  
                                      l357 5BAE                                        l509 596E  
                                      l517 359E                                        l710 3AB6  
                                      l535 37DA                                        l631 3F0A  
                                      l368 5ED4                                        l640 405A  
                                      l553 20E0                                        l633 3F12  
                                      l801 5794                                        l642 40C0  
                                      l802 579C                                        l571 191E  
                                      l651 4620                                        l660 46CA  
                                      l708 3A52                                        l724 013A  
                                      l805 5E5A                                        l661 4714  
                                      l670 3D06                                        l680 3ED0  
                                      l672 3D0E                                        l497 5362  
                                      l665 471C                                        l649 4618  
                                      l932 49FA                                        l597 1CB6  
                                      l685 3814                                        l749 1530  
                                      l694 38B4                                        l919 4596  
                                      l687 381C                                        l769 0946  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                          _timer1ReloadVal 01F9                                        _abs 5BB0  
                                      _pad 531C                               ___awmod@sign 0009  
                                      tosl 000FFD                                        wreg 000FE8  
                             ___flmul@aexp 001F                               ___flmul@bexp 0024  
                             ___flmul@sign 001E                               ___flmul@temp 0029  
                             ___flmul@prod 0025                            ?_lcd_set_cursor 0009  
                             ___fltol@exp1 000D                         __size_of_IOCB4_ISR 002E  
                                     l1102 4E8E                                       ?_abs 0016  
                                     l1036 54A4                                       l1070 4F4C  
                                     l1400 308C                                       l1064 56AE  
                                     l1049 5554                                       l1401 307A  
                                     l1250 5180                                       l1075 4F92  
                                     l1243 5160                                       l1260 5250  
                                     l1333 22D0                                       l1253 5230  
                                     l1350 23EA                                       l1342 25A0  
                                     l1334 22BE                                       l1423 29CA  
                                     l1079 5D0C                                       l1335 2284  
                                     l1360 24A8                                       l1600 58B8  
                                     l1522 4406                                       l1426 285C  
                                     l1610 4D88                                       l1419 2666  
                                     l1531 3CCC                                       l1460 4118  
                                     l1436 298C                                       l1428 28D4  
                                     l1620 57F4                                       l1525 440E  
                                     l1429 28C2                                       l1541 5C2A  
                                     l1606 5D7A                                       l1534 3C10  
                                     l1463 4274                                       l1359 24BA  
                                     l1375 5AE2                                       l1392 2F92  
                                     l1561 5CD4                                       l1625 57FC  
                                     l1633 5852                                       l1474 420C  
                                     l1467 41B0                                       l1547 5D44  
                                     l1555 59C0                                       l1491 5BE6  
                                     l1387 316E                                       l1644 5C9C  
                                     l1660 4B0A                                       l1389 2FCE  
                                     l1494 5BEE                                       l1398 3014  
                                     l1486 5090                                       l1638 585A  
                                     l1655 4B30                                       l1576 531A  
                                     l1584 5B6C                                       l1594 5DAC  
                                     l1587 5F26                                       l6012 5A72  
                                     l6020 5A24                                       l6014 5A9A  
                                     l6006 5A56                                       l6008 5A6C  
                                     l6024 5A2A                                       l6026 5A52  
                                     l6018 5A0E                                       ?_pad 0014  
                                     l6400 5F10                                       l7200 2178  
                                     l5370 5E92                                       l6410 5B6E  
                                     l7202 2188                                       l7210 21B2  
                                     l8010 4E7E                                       l8002 4E42  
                                     l5372 5E9C                                       l6412 5B8A  
                                     l6500 4726                                       l7140 5280  
                                     l8100 35D6                                       l7300 23BA  
                                     l7220 21EA                                       l7212 21C2  
                                     l7204 2198                                       l8004 4E4E  
                                     l8020 50C4                                       l5374 5E9E  
                                     l6422 5EC0                                       l6414 5BA6  
                                     l6502 476A                                       l7142 529E  
                                     l7134 5252                                       l7150 5B36  
                                     l8110 3674                                       l8102 35E0  
                                     l7302 23CA                                       l7230 21FE  
                                     l7222 21EE                                       l7214 21D4  
                                     l7206 21A8                                       l8006 4E5E  
                                     l8030 5146                                       l8022 50D8  
                                     l8014 5092                                       l6600 5C42  
                                     l6440 5EFA                                       l4680 5E5E  
                                     l5376 5EA4                                       l6520 4838  
                                     l7144 52D4                                       l7136 5264  
                                     l7152 5B48                                       l7160 5D56  
                                     l7400 5BCA                                       l8120 3744  
                                     l8104 35E6                                       l8112 36D8  
                                     l7320 244C                                       l7312 2424  
                                     l7304 23DA                                       l7240 2212  
                                     l7232 2202                                       l7224 21F2  
                                     l7216 21E2                                       l7208 21AA  
                                     l8008 4E6E                                       l8032 5148  
                                     l8024 50E6                                       l8016 509E  
                                     l8040 51A8                                       l6602 5C52  
                                     l6434 5F22                                       l6450 5B18  
                                     l6442 5AE4                                       l6418 5BAC  
                                     l6522 483A                                       l6514 4772  
                                     l6530 485E                                       l7138 5276  
                                     l7154 5B4C                                       l7162 5D6E  
                                     l8130 378E                                       l8114 36F2  
                                     l8122 3754                                       l8106 3668  
                                     l7322 2454                                       l7314 242E  
                                     l7306 2400                                       l7330 2478  
                                     l7250 2226                                       l7242 2216  
                                     l7234 2206                                       l7226 21F6  
                                     l7218 21E6                                       l7170 20E2  
                                     l7410 5026                                       l7402 4F94  
                                     l8034 515A                                       l8026 50F8  
                                     l8018 50BC                                       l8050 522A  
                                     l8042 51BC                                       l9010 135A  
                                     l6452 5B1A                                       l6444 5B00  
                                     l6436 5EEC                                       l6460 5E16  
                                     l6524 484A                                       l6516 481C  
                                     l6508 476E                                       l6700 32FC  
                                     l6620 3170                                       l8060 59BA  
                                     l8052 5970                                       l7148 5B2A  
                                     l7156 5D46                                       l7500 4454  
                                     l8132 379A                                       l8124 3766  
                                     l8116 3710                                       l8108 366E  
                                     l7340 24CA                                       l7332 247C  
                                     l7324 2458                                       l7316 243C  
                                     l7308 2410                                       l7260 229E  
                                     l7252 2250                                       l7244 221A  
                                     l7236 220A                                       l7228 21FA  
                                     l7180 211E                                       l7172 20EE  
                                     l7420 5088                                       l7404 4FB4  
                                     l8300 1C3A                                       l8220 187E  
                                     l8212 17B6                                       l8140 1532  
                                     l8028 5126                                       l8044 51CA  
                                     l8036 5182                                       l9020 13E0  
                                     l9012 1368                                       l9004 12F6  
                                     l6454 5B26                                       l6446 5B06  
                                     l6438 5EF8                                       l6462 5E18  
                                     l6526 484C                                       l6518 482C  
                                     l6710 332E                                       l6702 3306  
                                     l6630 319E                                       l6622 317A  
                                     l8054 5974                                       l7158 5D52  
                                     l8070 5942                                       l7510 44AA  
                                     l7502 4474                                       l8134 37A2  
                                     l8126 3776                                       l8118 372A  
                                     l7350 2530                                       l7342 24D6  
                                     l7334 248A                                       l7326 2468  
                                     l7318 243E                                       l7270 22DE  
                                     l7262 22A2                                       l7254 226C  
                                     l7246 221E                                       l7238 220E  
                                     l7190 214E                                       l7182 212E  
                                     l7174 20FC                                       l7406 4FF2  
                                     l7414 5032                                       l7166 5C9E  
                                     l8310 1CAE                                       l8302 1C4A  
                                     l8230 18DE                                       l8222 1886  
                                     l8214 17EA                                       l8206 1766  
                                     l8150 1586                                       l8142 153C  
                                     l8046 51F8                                       l8038 51A0  
                                     l9022 1416                                       l9006 131C  
                                     l9102 5D7C                                       l9110 29D0  
                                     l6456 5EFE                                       l6448 5B16  
                                     l6464 5E30                                       l6528 485C  
                                     l6800 4B32                                       l6480 56B0  
                                     l6472 5DB0                                       l6720 3360  
                                     l6712 3338                                       l6704 3310  
                                     l6640 31D0                                       l6632 31A8  
                                     l6624 3180                                       l8056 5988  
                                     l8072 5946                                       l8064 5916  
                                     l7520 452C                                       l7512 44BE  
                                     l7504 4478                                       l8128 377C  
                                     l8136 37B2                                       l8080 3516  
                                     l7600 2E78                                       l7360 2578  
                                     l7352 2540                                       l7344 24E4  
                                     l7336 24A0                                       l7328 246A  
                                     l7280 2320                                       l7272 22EE  
                                     l7264 22B0                                       l7256 227C  
                                     l7248 2222                                       l7192 2160  
                                     l7184 2130                                       l7176 20FE  
                                     l7416 5044                                       l7408 501A  
                                     l7440 3AD8                                       l7424 585C  
                                     l7432 57D4                                       l8400 1FDC  
                                     l8320 1D6A                                       l8312 1CD2  
                                     l8304 1C7E                                       l8232 18F0  
                                     l8216 17F0                                       l8224 18B8  
                                     l8208 1780                                       l8160 15CA  
                                     l8152 1590                                       l8144 154C  
                                     l8048 5218                                       l9024 1440  
                                     l9032 1490                                       l9008 1342  
                                     l9104 5D86                                       l9120 2A12  
                                     l9112 29D6                                       l6466 5ED6  
                                     l6458 5E0A                                       l6570 5E82  
                                     l6810 4BD4                                       l6802 4B36  
                                     l6490 570E                                       l6482 56C0  
                                     l6474 5DB8                                       l6730 3392  
                                     l6722 336A                                       l6714 3342  
                                     l6706 331A                                       l6650 3202  
                                     l6642 31DA                                       l6634 31B2  
                                     l6626 318A                                       l8058 59B6  
                                     l8074 594A                                       l8066 592A  
                                     l7530 4576                                       l7522 452E  
                                     l7514 44CC                                       l7506 4484  
                                     l8090 358A                                       l8082 353E  
                                     l7610 2EB8                                       l7602 2E88  
                                     l7362 257A                                       l7354 2560  
                                     l7346 251E                                       l7290 234E  
                                     l7282 232E                                       l7266 22B2  
                                     l7258 2292                                       l7194 2162  
                                     l7178 210E                                       l7186 2138  
                                     l7450 3BC4                                       l7442 3B30  
                                     l7426 586C                                       l7434 57E6  
                                     l8410 202C                                       l8402 1FEE  
                                     l8330 1DB0                                       l8322 1D78  
                                     l8314 1D36                                       l8306 1C8E  
                                     l8250 19A0                                       l8234 18F8  
                                     l8226 18C8                                       l8218 184A  
                                     l8162 15D6                                       l8170 15EC  
                                     l8154 1598                                       l8146 155A  
                                     l9050 151E                                       l9034 14B6  
                                     l9042 14E6                                       l9026 1450  
                                     l9018 13AA                                       l9130 2AE2  
                                     l9122 2A26                                       l9114 29DA  
                                     l6572 5E86                                       l6564 5E76  
                                     l6900 4254                                       l6812 4C00  
                                     l6804 4B4A                                       l6492 5716  
                                     l6476 5DC6                                       l6740 33C4  
                                     l6732 339C                                       l6724 3374  
                                     l6716 334C                                       l6708 3324  
                                     l6660 3234                                       l6652 320C  
                                     l6644 31E4                                       l6636 31BC  
                                     l6628 3194                                       l7380 5340  
                                     l8068 5936                                       l7524 4540  
                                     l7516 44DE                                       l7508 44A2  
                                     l7540 48CA                                       l8092 35A6  
                                     l8084 355E                                       l7700 3164  
                                     l7612 2EC8                                       l7620 2EE8  
                                     l7604 2E8A                                       l7364 2580  
                                     l7356 2564                                       l7348 2520  
                                     l7292 2358                                       l7284 233A  
                                     l7276 2302                                       l7268 22BC  
                                     l7196 2168                                       l7188 2148  
                                     l7460 3CAC                                       l7452 3C00  
                                     l7444 3B44                                       l7428 579E  
                                     l8412 2034                                       l8404 2008  
                                     l8340 1DDA                                       l8332 1DB4  
                                     l8316 1D46                                       l8324 1D80  
                                     l8308 1CA2                                       l8260 19D8  
                                     l8252 19A8                                       l8244 193C  
                                     l8236 1912                                       l8228 18CC  
                                     l8180 1676                                       l8172 1612  
                                     l8164 15DE                                       l8156 15AA  
                                     l8148 1562                                       l8500 45F6  
                                     l7372 5C66                                       l9036 14C4  
                                     l9140 2BB4                                       l9132 2B0C  
                                     l9124 2A34                                       l9116 29E6  
                                     l9108 29CC                                       l6590 55CE  
                                     l6582 5558                                       l6574 5E8A  
                                     l6566 5E7A                                       l6902 4262  
                                     l6814 4C2C                                       l6806 4B84  
                                     l6486 56E8                                       l6478 5DC8  
                                     l6750 33F6                                       l6742 33CE  
                                     l6734 33A6                                       l6726 337E  
                                     l6718 3356                                       l6670 3266  
                                     l6662 323E                                       l6654 3216  
                                     l6646 31EE                                       l6638 31C6  
                                     l7390 5386                                       l7382 534E  
                                     l7518 450C                                       l7526 4546  
                                     l7550 4922                                       l7542 48CE  
                                     l7534 4898                                       l8094 35B8  
                                     l8086 356C                                       l8078 34F6  
                                     l7630 2F26                                       l7622 2EF8  
                                     l7614 2ED0                                       l7606 2E92  
                                     l7710 25AE                                       l7366 258E  
                                     l7358 2572                                       l7286 233E  
                                     l7278 2312                                       l7294 235E  
                                     l7198 2176                                       l7462 3CBC  
                                     l7446 3B52                                       l7454 3C34  
                                     l7438 3AB8                                       l8430 20BA  
                                     l8422 2084                                       l8414 2044  
                                     l8406 200E                                       l8350 1E0E  
                                     l8342 1DE0                                       l8334 1DBA  
                                     l8326 1D92                                       l8318 1D58  
                                     l8270 1A22                                       l8262 19E6  
                                     l8246 194E                                       l8254 19AC  
                                     l8238 192A                                       l8190 16E6  
                                     l8182 168E                                       l8166 15E2  
                                     l8158 15B8                                       l8510 467A  
                                     l7470 57FE                                       l9038 14D8  
                                     l9206 00FA                                       l9062 5732  
                                     l9070 49FC                                       l9150 2C7C  
                                     l9142 2BE2                                       l9126 2A80  
                                     l9134 2B46                                       l9118 29E8  
                                     l6592 5602                                       l6584 5566  
                                     l6568 5E7E                                       l6904 4264  
                                     l6808 4B88                                       l6816 4C30  
                                     l6488 56F4                                       l6760 3428  
                                     l6752 3400                                       l6744 33D8  
                                     l6736 33B0                                       l6728 3388  
                                     l6680 3298                                       l6672 3270  
                                     l6664 3248                                       l6656 3220  
                                     l6648 31F8                                       l7480 5D0E  
                                     l9208 4338                                       l7392 53B4  
                                     l7384 535A                                       l7376 531C  
                                     l7528 4556                                       l7560 49A4  
                                     l7552 4936                                       l7544 48DC  
                                     l7536 489C                                       l8096 35C8  
                                     l8088 3570                                       l7640 2F6E  
                                     l7632 2F36                                       l7624 2EF8  
                                     l7616 2ED4                                       l7608 2EA2  
                                     l7800 287E                                       l7720 25EE  
                                     l7712 25BC                                       l7368 2590  
                                     l7296 2384                                       l7288 234C  
                                     l7456 3C70                                       l8432 20C0  
                                     l8424 2096                                       l8416 204A  
                                     l8408 2020                                       l8336 1DC6  
                                     l8328 1DA0                                       l8344 1DE6  
                                     l8352 1E14                                       l8360 1EAC  
                                     l8280 1A68                                       l8272 1A34  
                                     l8264 19EA                                       l8256 19B4  
                                     l8248 196A                                       l8184 1698  
                                     l8176 1648                                       l8168 15E6  
                                     l8440 3EE0                                       l8512 4686  
                                     l8504 4644                                       l8600 3946  
                                     l9048 14F8                                       l9064 573A  
                                     l9080 4A42                                       l9072 4A10  
                                     l9152 2D74                                       l9136 2B5A  
                                     l9144 2C0C                                       l9128 2AB4  
                                     l6586 55A6                                       l6498 471E  
                                     l6770 345A                                       l6762 3432  
                                     l6754 340A                                       l6746 33E2  
                                     l6738 33BA                                       l6690 32CA  
                                     l6682 32A2                                       l6674 327A  
                                     l6666 3252                                       l6658 322A  
                                     l7394 53C8                                       l7386 536E  
                                     l7378 532C                                       l7490 4410  
                                     l7554 4944                                       l7562 49AA  
                                     l7546 48FC                                       l7538 48AA  
                                     l8098 35CE                                       l7650 2FBC  
                                     l7642 2F82                                       l7634 2F46  
                                     l7570 2DD4                                       l7810 28F0  
                                     l7802 288C                                       l7730 261E  
                                     l7722 25F4                                       l7714 25BE  
                                     l7298 23B8                                       l7458 3C84  
                                     l8426 20A2                                       l8418 2050  
                                     l8370 1F16                                       l8362 1ECA  
                                     l8354 1E6C                                       l8346 1DF8  
                                     l8338 1DD6                                       l8290 1B7C  
                                     l8282 1ACC                                       l8266 19FC  
                                     l8274 1A3C                                       l8258 19C6  
                                     l8194 171C                                       l8178 165A  
                                     l8450 3F48                                       l8442 3EE4  
                                     l8522 46DE                                       l8514 46A4  
                                     l8506 4658                                       l8530 3CDC  
                                     l7466 5BF0                                       l7474 5834  
                                     l8602 395A                                       l8610 39D4  
                                     l9066 5748                                       l9090 4AAC  
                                     l9082 4A54                                       l9074 4A1A  
                                     l9154 2DA2                                       l9146 2C22  
                                     l9138 2B68                                       l6596 5C2E  
                                     l6588 55AA                                       l6780 348C  
                                     l6772 3464                                       l6764 343C  
                                     l6756 3414                                       l6748 33EC  
                                     l6692 32D4                                       l6684 32AC  
                                     l6676 3284                                       l6668 325C  
                                     l7484 5E36                                       l7388 5382  
                                     l7492 4414                                       l7564 49BA  
                                     l7556 4972                                       l7548 491A  
                                     l7900 54DA                                       l7660 3004  
                                     l7652 2FCC                                       l7644 2F90  
                                     l7636 2F56                                       l7628 2F0C  
                                     l7580 2E12                                       l7572 2DE2  
                                     l7820 295A                                       l7812 28FE  
                                     l7804 28BA                                       l7740 2656  
                                     l7732 2620                                       l7724 2604  
                                     l7716 25CE                                       l7708 25A2  
                                     l8428 20AA                                       l8380 1F54  
                                     l8372 1F1A                                       l8364 1EE6  
                                     l8356 1EA0                                       l8348 1E0A  
                                     l8292 1BB0                                       l8284 1B24  
                                     l8276 1A44                                       l8268 1A0A  
                                     l8196 172E                                       l8188 16C0  
                                     l8460 3F7A                                       l8452 3F54  
                                     l8444 3EFE                                       l8524 46F2  
                                     l8516 46A8                                       l8508 465C  
                                     l8540 3D48                                       l8532 3CE0  
                                     l7476 5846                                       l8620 3A62  
                                     l8612 39F0                                       l8604 396A  
                                     l8700 008C                                       l9068 5776  
                                     l9092 4ABC                                       l9084 4A60  
                                     l9148 2C30                                       l6598 5C40  
                                     l6870 413E                                       l6862 40C4  
                                     l6790 34BE                                       l6782 3496  
                                     l6774 346E                                       l6766 3446  
                                     l6758 341E                                       l6694 32DE  
                                     l6686 32B6                                       l6678 328E  
                                     l7486 5E52                                       l8630 4276  
                                     l7494 4422                                       l7566 49DA  
                                     l7558 4992                                       l7398 5BB0  
                                     l7910 5520                                       l7902 54EC  
                                     l7670 3044                                       l7662 3012  
                                     l7654 2FDE                                       l7646 2F9C  
                                     l7638 2F5E                                       l7590 2E42  
                                     l7582 2E22                                       l7574 2DF0  
                                     l7830 29B0                                       l7822 2974  
                                     l7814 2928                                       l7750 26A6  
                                     l7742 2676                                       l7734 2630  
                                     l7726 260A                                       l7718 25DE  
                                     l8390 1F86                                       l8382 1F5C  
                                     l8374 1F2A                                       l8366 1EF8  
                                     l8358 1EA8                                       l8294 1BE2  
                                     l8286 1B58                                       l8278 1A54  
                                     l8198 174A                                       l8470 4030  
                                     l8462 3F80                                       l8454 3F5A  
                                     l8446 3F3A                                       l8438 3ED2  
                                     l8526 46F6                                       l8518 46AC  
                                     l8542 3D4E                                       l8550 3E34  
                                     l8534 3CFA                                       l8622 3A68  
                                     l8614 3A0E                                       l8606 3970  
                                     l8710 00B4                                       l8702 009A  
                                     l9094 4AF2                                       l9086 4A72  
                                     l9078 4A24                                       l6880 4198  
                                     l6864 40D4                                       l6792 34C8  
                                     l6784 34A0                                       l6776 3478  
                                     l6768 3450                                       l6696 32E8  
                                     l6688 32C0                                       l8640 42E8  
                                     l8632 428A                                       l7496 4442  
                                     l7920 554C                                       l7912 5528  
                                     l7904 54F4                                       l7680 30B6  
                                     l7672 3072                                       l7656 2FF4  
                                     l7664 3024                                       l7648 2FBA  
                                     l7592 2E48                                       l7584 2E24  
                                     l7576 2DF2                                       l7824 2990  
                                     l7832 29B6                                       l7808 28E4  
                                     l7816 292C                                       l7760 26F6  
                                     l7752 26B0                                       l7744 2686  
                                     l7736 2640                                       l7728 2610  
                                     l7840 5AAE                                       l8392 1F8C  
                                     l8384 1F6A                                       l8376 1F3C  
                                     l8368 1F06                                       l8296 1BF8  
                                     l8288 1B5E                                       l8480 4092  
                                     l8472 404A                                       l8456 3F62  
                                     l8464 3FDE                                       l8448 3F42  
                                     l8552 3E46                                       l8560 3EA8  
                                     l8544 3DC4                                       l8536 3D36  
                                     l8528 3CCE                                       l8624 3A78  
                                     l8616 3A28                                       l8608 3976  
                                     l8800 05BC                                       l8704 009C  
                                     l9096 4B12                                       l9088 4A98  
                                     l6890 41FC                                       l6882 419A  
                                     l6874 4152                                       l6866 40E2  
                                     l6794 34D8                                       l6786 34AA  
                                     l6778 3482                                       l6698 32F2  
                                     l8650 4310                                       l8642 42EC  
                                     l8634 428E                                       l7498 4446  
                                     l7850 53FC                                       l7914 552E  
                                     l7906 54FC                                       l7690 312E  
                                     l7682 30E0                                       l7666 3032  
                                     l7658 2FFA                                       l7594 2E56  
                                     l7578 2E02                                       l7586 2E2C  
                                     l7930 5672                                       l7834 29BA  
                                     l7826 29A0                                       l7818 2946  
                                     l7770 2738                                       l7762 2702  
                                     l7754 26C6                                       l7738 2650  
                                     l8394 1FB2                                       l8386 1F72  
                                     l8378 1F44                                       l8298 1C2A  
                                     l8474 406A                                       l8482 4098  
                                     l8466 3FF8                                       l8458 3F74  
                                     l8490 45B2                                       l8554 3E64  
                                     l8546 3DCA                                       l8538 3D3E  
                                     l8626 3A8E                                       l8618 3A42  
                                     l8570 3808                                       l8810 0668  
                                     l8802 05F2                                       l8730 0148  
                                     l8722 00C6                                       l8714 00BA  
                                     l8706 00AE                                       l9098 4B28  
                                     l6892 421A                                       l6884 41A6  
                                     l6876 415A                                       l6868 4128  
                                     l6796 34E2                                       l6788 34B4  
                                     l8652 4318                                       l8636 4292  
                                     l7860 5422                                       l7852 5400  
                                     l7844 53E2                                       l7908 550A  
                                     l7916 5534                                       l7692 314A  
                                     l7676 309C                                       l7684 30E4  
                                     l7668 3036                                       l7596 2E58  
                                     l7588 2E3C                                       l7932 5682  
                                     l7924 5606                                       l7940 4E90  
                                     l7828 29AE                                       l7780 279A  
                                     l7772 2748                                       l7764 2710  
                                     l7756 26D2                                       l7748 269A  
                                     l8396 1FCE                                       l8388 1F7A  
                                     l8476 407C                                       l8468 4016  
                                     l8492 45C4                                       l8556 3E7E  
                                     l8548 3DD0                                       l8580 386E  
                                     l8572 3834                                       l8564 37DC  
                                     l8900 0C54                                       l8820 0712  
                                     l8812 068E                                       l8740 01C8  
                                     l8732 014A                                       l6894 421C  
                                     l6886 41E2                                       l6878 4166  
                                     l6798 34E8                                       l8662 43C6  
                                     l8654 434E                                       l8646 42F2  
                                     l8638 42B0                                       l7870 5458  
                                     l7862 5434                                       l7854 540E  
                                     l7846 53E6                                       l7918 5544  
                                     l7694 314E                                       l7686 30FE  
                                     l7678 30A8                                       l7598 2E68  
                                     l7934 56A6                                       l7926 5634  
                                     l7950 4F1A                                       l7942 4EBE  
                                     l7790 2842                                       l7782 27B6  
                                     l7774 2762                                       l7766 271C  
                                     l7758 26EA                                       l7838 5A9E  
                                     l8398 1FD6                                       l8478 4082  
                                     l8494 45CC                                       l8486 4598  
                                     l8558 3E98                                       l8582 3874  
                                     l8574 383C                                       l8566 37EA  
                                     l8910 0CC6                                       l8902 0C8C  
                                     l8830 07AE                                       l8822 0748  
                                     l8742 01E8                                       l8750 0252  
                                     l8734 0170                                       l8726 00D2  
                                     l8718 00C0                                       l6896 4220  
                                     l6888 41EE                                       l8664 43D8  
                                     l8648 4308                                       l7872 546E  
                                     l7864 543C                                       l7880 5484  
                                     l7856 5416                                       l7848 53F4  
                                     l7696 315C                                       l7688 3114  
                                     l7936 56AC                                       l7928 5644  
                                     l7952 4F2C                                       l7944 4ECE  
                                     l7792 284C                                       l7784 27E0  
                                     l7776 2772                                       l7768 272C  
                                     l8496 45E0                                       l8488 45AA  
                                     l8680 4CA8                                       l8672 4C64  
                                     l8592 38E8                                       l8584 387C  
                                     l8576 385C                                       l8568 37EE  
                                     l8920 0D46                                       l8912 0CFC  
                                     l8832 07C6                                       l8840 0830  
                                     l8808 0642                                       l8760 02EE  
                                     l8752 0278                                       l8744 01F6  
                                     l8736 01A6                                       l8728 0128  
                                     l6898 4244                                       l8666 43EA  
                                     l8658 4386                                       l7882 5494  
                                     l7874 5476                                       l7866 5444  
                                     l7858 541A                                       l7890 54AA  
                                     l7698 3162                                       l7954 4F3A  
                                     l7946 4EFC                                       l7794 285A  
                                     l7786 2816                                       l7778 278E  
                                     l7962 5CD6                                       l7970 4D8A  
                                     l8498 45E8                                       l8682 4CDA  
                                     l8674 4C8E                                       l8594 38FA  
                                     l8586 3898                                       l8578 3864  
                                     l8930 0DB8                                       l8922 0D7E  
                                     l8850 0916                                       l8842 085E  
                                     l8834 07D4                                       l8818 06DC  
                                     l8762 030E                                       l8754 0280  
                                     l8770 0378                                       l8738 01B6  
                                     l7884 549C                                       l7876 5478  
                                     l7868 5452                                       l7892 54B8  
                                     l7956 4F8A                                       l7948 4F0C  
                                     l7796 286C                                       l7788 2824  
                                     l7964 5CEC                                       l7980 4DE0  
                                     l7972 4DA0                                       l8684 4CF8  
                                     l8588 38A8                                       l8940 0E9C  
                                     l8932 0E04                                       l8908 0CA0  
                                     l8860 09D8                                       l8836 0804  
                                     l8828 079A                                       l8780 0424  
                                     l8772 039C                                       l8764 031C  
                                     l8756 028E                                       l8748 0240  
                                     l8692 0042                                       l7878 547E  
                                     l7894 54C0                                       l7958 4F90  
                                     l7798 287A                                       l7966 5CFC  
                                     l7982 4DF0                                       l8686 4D0A  
                                     l8678 4C9A                                       l8598 3934  
                                     l8918 0D10                                       l8846 08D0  
                                     l8790 04CE                                       l8782 044A  
                                     l8774 03AC                                       l8758 02B4  
                                     l8694 0068                                       l7896 54C4  
                                     l7888 54A6                                       l7992 4E1A  
                                     l7984 4DF4                                       l7976 4DB4  
                                     l8688 4D4C                                       l8960 0FFA  
                                     l8952 0F72                                       l8944 0EBC  
                                     l8936 0E40                                       l8928 0D92  
                                     l8880 0B0E                                       l8872 0A98  
                                     l8864 0A10                                       l8848 08E2  
                                     l8856 095A                                       l8792 0504  
                                     l8784 047C                                       l8776 03E0  
                                     l8768 0366                                       l8696 0076  
                                     l7898 54D2                                       l7994 4E24  
                                     l7986 4E02                                       l7978 4DDE  
                                     l8970 10A6                                       l8962 1020  
                                     l8954 0FA8                                       l8946 0EF2  
                                     l8938 0E66                                       l8890 0BCC  
                                     l8882 0B44                                       l8874 0ABE  
                                     l8866 0A46                                       l8858 0990  
                                     l8794 054E                                       l8778 03F0  
                                     l8698 0088                                       l7996 4E2E  
                                     l8980 1164                                       l8948 0F3A  
                                     l8892 0C04                                       l8788 0498  
                                     l8982 118E                                       l8990 1210  
                                     l8894 0C10                                       l8798 0586  
                                     STR_1 FFAF                                       l8992 1246  
                                     l8984 119E                                       l8976 10F8  
                                     l8968 1070                                       l8888 0B96  
                                     STR_2 FF8E                                       STR_3 FF9F  
                                     l8994 127C                                       l8986 11D4  
                                     l8978 112E                                       l8898 0C1E  
                                     STR_4 FF79                                       STR_5 FFBB  
                                     l8996 12A6                                       STR_6 FFCB  
                                     l8998 12B6                                       STR_9 FFBF  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u6035 5E9A  
                                     u6036 5E9C                                       u8000 4896  
                                     u8001 4892                                       u7300 5A24  
                                     u8100 4BB2                                       u7301 5A20  
                                     u8110 4BD4                                       u8111 4BD0  
                                     u4760 5E70                                       u8120 4C52  
                                     u9000 534E                                       u4761 5E6C  
                                     u9001 534A                                       i2l42 0032  
                                     u8130 4C62                                       u9010 53A4  
                                     u8131 4C5E                                       u8107 4BA8  
                                     u9011 53A0                                       u8300 4254  
                                     u8220 40D4                                       u9020 53B4  
                                     u9100 5080                                       u8301 4250  
                                     u8221 40D0                                       u9021 53B0  
                                     u8070 5566                                       u8310 4262  
                                     u8230 40E2                                       u9030 5BCA  
                                     u9110 58A6                                       u8071 5562  
                                     u8311 425E                                       u8231 40DE  
                                     u8127 4C48                                       u9031 5BC6  
                                     u8080 5C52                                       u8240 413E  
                                     u9040 4FD4                                       u9200 3BC0  
                                     u9120 58B8                                       u8081 5C4E  
                                     u8241 413A                                       u9201 3BBC  
                                     u9121 58B4                                       u8250 4194  
                                     u7290 5A6C                                       u9050 4FF2  
                                     u9210 3BE4                                       u9130 57CE  
                                     u8251 4190                                       u7291 5A68  
                                     u9051 4FEE                                       u9131 57C8  
                                     u8260 41DE                                       u8500 5264  
                                     u9060 501A                                       u9220 3C00  
                                     u9140 57D0                                       u9300 5846  
                                     i2l93 5E08                                       u8261 41DA  
                                     u8501 5260                                       u9061 5016  
                                     u9045 4FCA                                       u9221 3BFC  
                                     u9117 589C                                       u9301 5842  
                                     u8270 41FC                                       u9310 5D3E  
                                     u8510 5276                                       u9070 5044  
                                     u9230 3C54                                       u9150 57E6  
                                     u8271 41F8                                       u9311 5D38  
                                     u8511 5272                                       u9071 5040  
                                     u9215 3BDA                                       u9151 57E2  
                                     u8280 420C                                       u9320 5D40  
                                     u8520 529E                                       u9400 48AA  
                                     u8600 211E                                       u9240 3C70  
                                     u9160 3B00                                       i2l89 5EBE  
                                     u8281 4208                                       u8521 529A  
                                     u9401 48A6                                       u8601 211A  
                                     u9241 3C6C                                       u8290 421A  
                                     u8530 52D4                                       u9330 4422  
                                     u9410 48DC                                       u8610 2160  
                                     u9090 507E                                       u9250 3CAC  
                                     u9170 3B30                                       i2l99 5F28  
                                     u8291 4216                                       u8531 52D0  
                                     u9331 441E                                       u9411 48D8  
                                     u8611 215C                                       u9091 5078  
                                     u9251 3CA8                                       u9235 3C4A  
                                     u9171 3B2C                                       u8540 5B6C  
                                     u9340 4454                                       u9420 491A  
                                     u9500 2E68                                       u8700 2292  
                                     u8620 2176                                       u9180 3B52  
                                     u9260 5C24                                       u8541 5B68  
                                     u9341 4450                                       u9421 4916  
                                     u9501 2E64                                       u8701 228E  
                                     u8621 2172                                       u9085 5056  
                                     u9181 3B4E                                       u9165 3AF6  
                                     u9261 5C1E                                       u7910 5DDA  
                                     u8550 5D6E                                       u9430 4944  
                                     u9510 2E78                                       u8710 22B0  
                                     u8630 2188                                       u9270 5C26  
                                     u7911 5DD6                                       u8551 5D6A  
                                     u9351 447E                                       u9431 4940  
                                     u9511 2E74                                       u8711 22AC  
                                     u8631 2184                                       u7920 56E4  
                                     u9360 44A2                                       u9440 4972  
                                     u9600 3032                                       u9520 2EB8  
                                     u8800 2400                                       u8720 22D0  
                                     u8640 2198                                       u8560 5CCE  
                                     u9280 582E                                       u7921 56E0  
                                     u9361 449E                                       u9441 496E  
                                     u9601 302E                                       u9521 2EB4  
                                     u8801 23FC                                       u8721 22CC  
                                     u8641 2194                                       u8561 5CC8  
                                     u9281 5828                                       u7930 570E  
                                     u9370 44CC                                       u9450 49BA  
                                     u9610 3044                                       u9530 2EF8  
                                     u8810 2410                                       u8730 22DE  
                                     u8650 21D4                                       u8570 5CD0  
                                     u9290 5830                                       u7931 570A  
                                     u9371 44C8                                       u9451 49B6  
                                     u9611 3040                                       u9531 2EF4  
                                     u8811 240C                                       u8731 22DA  
                                     u8651 21D0                                       u9195 3B66  
                                     u7860 5B8A                                       u7940 5730  
                                     u9380 450C                                       u9620 3072  
                                     u9540 2F6E                                       u9460 2DF0  
                                     u9700 25CE                                       u8900 24E4  
                                     u8820 243C                                       u8740 22EE  
                                     u8660 21E2                                       u8580 20FC  
                                     u9196 3B70                                       u7861 5B86  
                                     u7941 572C                                       u9381 4508  
                                     u9621 306E                                       u9541 2F6A  
                                     u9461 2DEC                                       u9701 25CA  
                                     u8901 24E0                                       u8821 2438  
                                     u8741 22EA                                       u8661 21DE  
                                     u8581 20F8                                       u9197 3B80  
                                     u7870 5BA6                                       u9390 4556  
                                     u9630 3088                                       u9550 2F90  
                                     u9470 2E02                                       u9710 25DE  
                                     u8910 251E                                       u8830 244C  
                                     u8750 2320                                       u8670 2250  
                                     u8590 210E                                       u7871 5BA2  
                                     u9391 4552                                       u9631 3084  
                                     u9551 2F8C                                       u9471 2DFE  
                                     u9711 25DA                                       u8911 251A  
                                     u8831 2448                                       u8751 231C  
                                     u8671 224C                                       u8591 210A  
                                     u9640 309C                                       u9560 2FBA  
                                     u9480 2E12                                       u9800 288C  
                                     u9720 261E                                       u8920 2530  
                                     u8840 2468                                       u8760 232E  
                                     u8680 2268                                       u9641 3098  
                                     u9561 2FB6                                       u9481 2E0E  
                                     u9801 2888                                       u9721 261A  
                                     u8921 252C                                       u8841 2464  
                                     u8761 232A                                       u8681 2262  
                                     u7970 481C                                       u9650 30B6  
                                     u9570 2FDE                                       u9490 2E56  
                                     u9810 28BA                                       u9730 2630  
                                     u8930 2540                                       u8850 2478  
                                     u8770 234C                                       u8690 226A  
                                     u7971 4818                                       u9651 30B2  
                                     u9571 2FDA                                       u9491 2E52  
                                     u9811 28B6                                       u9731 262C  
                                     u8931 253C                                       u8851 2474  
                                     u8771 2348                                       u7980 484A  
                                     u7964 47FC                                       u9900 5434  
                                     u9660 30FE                                       u9580 2FF4  
                                     u9820 28D0                                       u9740 2640  
                                     u8940 2560                                       u8860 248A  
                                     u8780 2384                                       u7981 4846  
                                     u7965 47F6                                       u9901 5430  
                                     u9661 30FA                                       u9581 2FF0  
                                     u9821 28CC                                       u9741 263C  
                                     u8941 255C                                       u8861 2486  
                                     u8781 2380                                       u7990 485C  
                                     u9910 5452                                       u9670 312E  
                                     u9590 3012                                       u9830 28E4  
                                     u9750 2676                                       u8950 2572  
                                     u8870 24A0                                       u8790 23CA  
                                     u7991 4858                                       u9911 544E  
                                     u9671 312A                                       u9591 300E  
                                     u9831 28E0                                       u9751 2672  
                                     u8951 256E                                       u8871 249C  
                                     u8791 23C6                                       u9920 546E  
                                     u9680 315C                                       u9840 28FE  
                                     u9760 2686                                       u8960 258E  
                                     u8880 24B6                                       u9921 546A  
                                     u9681 3158                                       u9841 28FA  
                                     u9761 2682                                       u8961 258A  
                                     u8881 24B2                                       u9930 5494  
                                     u9850 2946                                       u9770 2800  
                                     u9690 25BC                                       u8890 24CA  
                                     u8970 5C96                                       u9931 5490  
                                     u9851 2942                                       u9691 25B8  
                                     u8891 24C6                                       u8971 5C90  
                                     u9940 54B8                                       u9860 2974  
                                     u9780 285A                                       u8980 5C98  
                                     u9941 54B4                                       u9861 2970  
                                     u9781 2856                                       u8990 532C  
                                     u9950 54D2                                       u9870 29AE  
                                     u9790 287A                                       u8991 5328  
                                     u9951 54CE                                       u9871 29AA  
                                     u9791 2876                                       u9775 27F6  
                                     u9880 53F4                                       u9960 54EC  
                                     u9881 53F0                                       u9961 54E8  
                                     u9890 540E                                       u9970 550A  
                                     u9891 540A                                       u9971 5506  
                                     u9980 5520                                       u9981 551C  
                                     u9990 5544                                       u9991 5540  
                                     _WPUB 000F5B                                       abs@a 0016  
                                     _dbuf 018A                                       _atoi 4276  
                                     _ctoa 5916                                       _main 29CC  
                                     _dtoa 34F6                                       _font F1A9  
                                     _prec 005A                                       _temp 0114  
                                     _otoa 3ED2                                       _nout 011A  
                                     pad@i 001B                                       pad@p 0018  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 001D  
                                     fsr2l 000FD9                                       _stoa 4598  
                                     btemp 005C                                       _utoa 3CCE  
                                     _xtoa 37DC                              ___fpclassifyf 4F94  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 003E                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0065                     __end_of_SPI_Initialize 5EFE  
                             _tolower$2100 0010                              lcd_fill@width 0011  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                              _string_temp 0126                                      ??_abs 0018  
                                    ??_pad 001A             __size_of_OSCILLATOR_Initialize 0012  
            __end_of_OSCILLATOR_Initialize 5F10                              ___fltol@sign1 000C  
                          __end_of___aodiv 4598                                      ?_atoi 000B  
                                    ?_ctoa 001F                            __end_of___fladd 25A2  
                                    ?_main 0001                                      ?_dtoa 001F  
                          __end_of___aomod 49FC                            __end_of___fldiv 3170  
                          __end_of___awdiv 54A6                            __end_of___flneg 5D0E  
                                    STR_10 FFD3                                      STR_13 FFC7  
                                    STR_15 FFC7                                      STR_31 FFEA  
                                    STR_24 FFC8                                      STR_40 FFED  
                                    STR_33 FFEA                                      STR_17 FFCF  
                                    STR_42 FFED                                      STR_19 FFCF  
                                    STR_35 FFF0                                      STR_28 FFD0  
                                    STR_52 FFDC                                      STR_60 FFD7  
                          __end_of___awmod 5556                                      STR_37 FFF0  
                                    STR_45 FFDB                                      STR_62 FFD7  
                                    STR_70 FFF3                                      STR_47 FFDB  
                                    STR_55 FFF6                                      STR_72 FFF3  
                                    STR_57 FFF6                                      STR_82 FFE0  
                                    STR_90 FFE3                                      STR_67 FFD8  
                                    STR_75 FFDF                                      STR_92 FFE3  
                                    STR_77 FFDF                                      STR_85 FFF9  
                                    STR_94 FFC3                                      STR_87 FFF9  
                                    STR_96 FFC3                            __end_of___flmul 29CC  
                                    ?_otoa 001F                            __end_of___flsub 5AE4  
                          __end_of___fltol 4E90          __end_of_IOCB4_SetInterruptHandler 5F1A  
                                    ?_stoa 000D                                      u10000 5634  
                                    u10001 5630                                      u10010 5672  
                                    u10011 566E                                      u10020 56A6  
                                    u10100 4DD4                                      u10021 56A2  
                                    u10030 4EBE                                      u10110 4E02  
                                    u10031 4EBA                                      u10111 4DFE  
                                    ?_utoa 001F                                      u10040 4EFC  
                                    u10120 4E16                                      u11000 405A  
                                    u10200 51A0                                      u10041 4EF8  
                                    u10121 4E12                                      u10105 4DCA  
                                    u11001 4056                                      u10201 519C  
                                    u10050 4F1A                                      u10130 4E3E  
                                    u11010 406A                                      u10210 51CA  
                                    u10051 4F16                                      u10131 4E3A  
                                    u11011 4066                                      u10211 51C6  
                                    u10300 358A                                      u10060 4F3A  
                                    u10140 4E5E                                      u11020 407C  
                                    u11100 46DA                                      u10220 51F8  
                                    u10301 3586                                      u10061 4F36  
                                    u10141 4E5A                                      u11021 4078  
                                    u11101 46D6                                      u10221 51F4  
                                    u10230 5988                                      u10310 35B8  
                                    u10070 4F8A                                      u10150 4E6E  
                                    u11110 4714                                      u10231 5984  
                                    u10311 35B4                                      u10071 4F86  
                                    u10151 4E6A                                      u11111 4710  
                                    u11031 45A2                                      u10240 59B6  
                                    u10400 378E                                      u10320 35C8  
                                    u10080 5CEC                                      u11040 45C4  
                                    u11120 3CDC                                      u11200 3808  
                                    u12000 1416                                      u10241 59B2  
                                    u10401 378A                                      u10321 35C4  
                                    u10081 5CE8                                      u11041 45C0  
                                    u10161 5098                                      u11121 3CD8  
                                    u11201 3804                                      u12001 1412  
                                    u10250 592A                                      u10330 36F2  
                                    u10090 4DA0                                      u10410 155A  
                                    u11050 45F6                                      u10170 50BC  
                                    u11130 3CFA                                      u11210 3834  
                                    u12010 14B6                                      u10251 5926  
                                    u10331 36EE                                      u10091 4D9C  
                                    u10411 1556                                      u11051 45F2  
                                    u10171 50B8                                      u11131 3CF6  
                                    u11211 3830                                      u12011 14B2  
                                    u10340 3710                                      u10260 3526  
                                    u10500 1716                                      u10420 15AA  
                                    u11060 4614                                      u10180 50E6  
                                    u11140 3E46                                      u11300 39F0  
                                    u11220 3898                                      u12020 5794  
                                    u12100 2B5A                                      u10341 370C  
                                    u10261 3520                                      u10501 1710  
                                    u10421 15A6                                      u11061 4610  
                                    u10181 50E2                                      u11141 3E42  
                                    u11301 39EC                                      u11221 3894  
                                    u12021 5790                                      u12101 2B56  
                                    u10350 372A                                      u10270 3528  
                                    u10510 1718                                      u10430 15B8  
                                    u11070 4640                                      u10190 5126  
                                    u11150 3E64                                      u11310 3A0E  
                                    u11230 38E2                                      u12030 4A10  
                                    u12110 2C22                                      u10351 3726  
                                    u10431 15B4                                      u11071 463C  
                                    u10191 5122                                      u11151 3E60  
                                    u11311 3A0A                                      u11231 38DC  
                                    u12031 4A0C                                      u12111 2C1E  
                                    u11400 43C2                                      u10360 3744  
                                    u10280 353E                                      u10600 194E  
                                    u10520 172E                                      u10440 15CA  
                                    u11080 467A                                      u11160 3E7E  
                                    u11320 3A28                                      u11240 38E4  
                                    u12040 4A42                                      u10361 3740  
                                    u10281 353A                                      u10601 194A  
                                    u10521 172A                                      u10441 15C6  
                                    u11081 4676                                      u11161 3E7A  
                                    u11321 3A24                                      u12041 4A3E  
                                    u11410 43D8                                      u10370 3754  
                                    u10290 356C                                      u10610 196A  
                                    u10530 17B2                                      u10450 1612  
                                    u11090 46CA                                      u11170 3E98  
                                    u11330 3A42                                      u11250 38FA  
                                    u12050 4AAC                                      u11411 43D4  
                                    u10371 3750                                      u10291 3568  
                                    u10611 1966                                      u10531 17AE  
                                    u10451 160E                                      u11091 46C6  
                          __end_of___lodiv 5182                                      u11171 3E94  
                                    u11331 3A3E                                      u11251 38F6  
                                    u12051 4AA8                                      u11420 43EA  
                                    u10380 3766                                      u10700 1BE2  
                                    u10620 19A0                                      u10540 1846  
                                    u10460 1642                                      u11180 3EA8  
                                    u11340 3A52                                      u11260 392E  
                                    u11500 0068                                      u12060 4ABC  
                          ___awdiv@divisor 0006                                      u11421 43E6  
                                    u10381 3762                                      u10701 1BDE  
                                    u10621 199C                                      u10541 1842  
                                    u10461 163C                                      u11181 3EA4  
                                    u11341 3A4E                                      u11261 3928  
                                    u11501 0064                                      u12061 4AB8  
                                    u10390 3776                                      u10710 1C2A  
                                    u10630 19C6                                      u10550 18B8  
                                    u10470 1644                                      u11430 4C8E  
                                    u11350 3A62                                      u11270 3930  
                                    u11190 37EA                                      u11510 013A  
                                    u12070 4AF2                                      u12127 5DBE  
                                    u10391 3772                                      u10711 1C26  
                                    u10631 19C2                                      u10551 18B4  
                                    u11431 4C8A                                      u11351 3A5E  
                                    u11191 37E6                                      u11511 0136  
                                    u12071 4AEE                                      ?_xtoa 001F  
                                    u11360 42B0                                      u10800 1DF8  
                                    u10720 1C3A                                      u10640 19D8  
                                    u10560 18DE                                      u10480 165A  
                                    u11440 4CCA                                      u11280 3946  
                                    u11600 0360                                      u11520 0148  
                                    u12080 2A26                                      _T1CON 000FCD  
                                    u11361 42AC                                      u10801 1DF4  
                                    u10721 1C36                                      u10641 19D4  
                                    u10561 18DA                                      u10481 1656  
                                    u11281 3942                                      u11601 035A  
                                    u11521 0144                                      u12081 2A22  
                                    u11370 42E8                                      u10810 1ECA  
                                    u10730 1CA2                                      u10650 19E6  
                                    u10570 18F0                                      u10490 16E6  
                                    u11450 4CDA                                      u11290 39AE  
                                    u11610 0362                                      u11530 0170  
                                    u12090 2B3E                                      u11371 42E4  
                                    u10811 1EC6                                      u10731 1C9E  
                                    u10651 19E2                                      u10571 18EC  
                                    u10491 16E2                                      u11451 4CD6  
                                    u11531 016C                                      u12091 2B3A  
                                    u11380 4304                                      u10900 207E  
                                    u10820 1EE6                                      u10740 1D46  
                                    u10660 19FC                                      u10580 1912  
                                    u11460 4CF8                                      u11700 0668  
                                    u11620 0378                                      u11540 01B6  
                                    u11381 4300                                      u10901 2078  
                                    u10821 1EE2                                      u10741 1D42  
                                    u10661 19F8                                      u10581 190E  
                                    u11461 4CF4                                      u11701 0664  
                                    u11621 0374                                      u11541 01B2  
                                    u11390 43C0                                      u10910 2080  
                                    u10830 1EF8                                      u10750 1D58  
                                    u10670 1A0A                                      u10590 1938  
                                    u11470 4D0A                                      u11710 068E  
                                    u11630 03AC                                      u11550 023A  
                                    u11391 43BA                                      u10831 1EF4  
                                    u10751 1D54                                      u10671 1A06  
                                    u10591 1934                                      u11471 4D06  
                                    u11447 4CC0                                      u11295 399C  
                                    u11711 068A                                      u11631 03A8  
                                    u11551 0234                                      u10920 2096  
                                    u10840 1F06                                      u10760 1D6A  
                                    u10680 1A34                                      u11480 4D4C  
                                    u11800 0A46                                      u11720 0712  
                                    u11640 03F0                                      u11560 023C  
                                    u10921 2092                                      u10841 1F02  
                                    u10761 1D66                                      u10681 1A30  
                                    u11481 4D48                                      u11801 0A42  
                                    u11721 070E                                      u11641 03EC  
                                    u10850 1F3C                                      u10770 1D78  
                                    u10690 1B7C                                      u10930 3EE0  
                                    u11490 4D6E                                      u11810 0ABE  
                                    u11730 0748                                      u11650 044A  
                                    u11570 0252                                      u10851 1F38  
                                    u10771 1D74                                      u10691 1B78  
                                    u10931 3EDC                                      u11811 0ABA  
                                    u11731 0744                                      u11651 0446  
                                    u11571 024E                                      u10860 1F6A  
                                    u10780 1D92                                      u10940 3EFE  
                                    u11900 0FA8                                      u11820 0B44  
                                    u11740 07AE                                      u11660 04CE  
                                    u11580 0278                                      u10861 1F66  
                                    u10781 1D8E                                      u10941 3EFA  
                                    u11485 4D3C                                      u11901 0FA4  
                                    u11821 0B40                                      u11741 07AA  
                                    u11661 04CA                                      u11581 0274  
                                    u10870 1FEE                                      u10790 1DA0  
                                    u10950 3FB8                                      u11910 1020  
                                    u11830 0BCC                                      u11750 085E  
                                    u11670 0504                                      u11590 02B4  
                                    u10871 1FEA                                      u10791 1D9C  
                                    u11487 4D32                                      u11911 101C  
                                    u11831 0BC8                                      u11751 085A  
                                    u11671 0500                                      u11591 02B0  
                                    u10880 2008                                      u10960 3FF8  
                                    u11920 10A6                                      u11840 0C54  
                                    u11760 08CA                                      u11680 05BC  
                                    u10881 2004                                      u10961 3FF4  
                                    u11497 4D64                                      u11921 10A2  
                                    u11841 0C50                                      u11761 08C4  
                                    u11681 05B8                                      u10890 2020  
                                    u10970 4016                                      u11930 112E  
                                    u11850 0CC6                                      u11770 08CC  
                                    u11690 05F2                                      u10891 201C  
                                    u10971 4012                                      u10955 3FA6  
                                    u11931 112A                                      u11851 0CC2  
                                    u11691 05EE                                      u10980 4030  
                                    u11940 1164                                      u11860 0D46  
                                    u11780 08E2                                      u10981 402C  
                                    u11941 1160                                      u11861 0D42  
                                    u11781 08DE                                      u10990 404A  
                                    u11950 1246                                      u11870 0DB8  
                                    u11790 0990                                      u10991 4046  
                                    u11951 1242                                      u11871 0DB4  
                                    u11791 098C                                      u11960 127C  
                                    u11880 0E66                            __end_of___lomod 5252  
                                    u11961 1278                                      u11881 0E62  
                                    u11970 131C                                      u11890 0EF2  
                                    u11971 1318                                      u11891 0EEE  
                                    u11980 1342                                      u11981 133E  
                                    u11990 13E0                                      u11991 13DC  
                                    i2l292 5914                                      i2l289 58EE  
                          ___awdiv@counter 0008                               vfpfcnvrt@fmt 00BC  
                             vfpfcnvrt@llu 00E0                                      _TMR1H 000FCF  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0017  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_msDelay 5DDC  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 5EC0  
                                    _flags 00FC                                      _botao 0120  
                                    _errno 0118                                      _fputc 5252  
                          __end_of_isalpha 5C2C                                      _fputs 5B2A  
                          __end_of_isdigit 5D46                                      atoi@n 0018  
                                    pad@fp 0014                                      atoi@s 000B  
                                    _width 011C                                      ctoa@c 0021  
                                    _putch 5F26                                      ctoa@w 0022  
                                    dtoa@d 0021                                      dtoa@i 0041  
                                    dtoa@n 0039                                      dtoa@p 0033  
                                    dtoa@s 0037                                      dtoa@w 0035  
                         __end_of_SPI_Open 5606                            __end_of_islower 5C9E  
                          __end_of_isspace 59C2                    __end_of_TMR1_Initialize 5E36  
                          __end_of_isupper 5CD6                                      pclath 000FFA  
                                    tablat 000FF5                                      otoa@d 0021  
                                    otoa@i 003F                                      otoa@n 0037  
                                    otoa@p 0031                                      otoa@t 0033  
                                    otoa@w 0035                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0019  
                                    stoa@l 0021                                      stoa@p 001F  
                                    stoa@s 000F                                      stoa@w 001B  
                                    ttemp5 005D                                      ttemp6 0060  
                                    ttemp7 0064                                      utoa@d 0021  
                                    utoa@i 003D                                      utoa@n 0035  
                                    utoa@p 0031                                      utoa@w 0033  
                                    status 000FD8                                      wtemp8 005D  
                           ?___fpclassifyf 0004                            __end_of_tolower 57FE  
                                    xtoa@c 0044                                      xtoa@d 0021  
                                    xtoa@i 0042                                      xtoa@n 003A  
                                    xtoa@p 0036                                      xtoa@w 0038  
                                    xtoa@x 0029                            __end_of_strncmp 4D8A  
                          __end_of_toupper 585C                             lcd_fill@height 000F  
                         ___lodiv@dividend 0004                            ?_SPI_Initialize 0001  
                             _toupper$2115 0010            ??_IOCB4_DefaultInterruptHandler 0001  
                          __initialization 59C2                               __end_of_atoi 4410  
                             __end_of_ctoa 5970                               __end_of_main 2DD4  
                             __end_of_dtoa 37DC                               __end_of_font FF75  
                             __end_of_otoa 40C2                               __end_of_stoa 471E  
                             __end_of_utoa 3ED2                               __end_of_xtoa 3AB8  
                        __end_of_IOCB4_ISR 5E0A                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 000D                                     ??_ctoa 0022  
                                   ??_main 005A                                     ??_dtoa 0029  
                        ?_lcd_set_cursor_x 0007                          ?_lcd_set_cursor_y 0007  
                            lcd_send@value 0005                                     ??_otoa 0029  
                                   ??_stoa 0011                                     ??_utoa 0029  
                                   ??_xtoa 002A                              __activetblptr 000003  
                       ??_lcd_set_cursor_x 0009                         ??_lcd_set_cursor_y 0009  
                           __CFG_RETEN$OFF 000000                           ___lodiv@quotient 0014  
                           lcd_draw_char@i 0022                             lcd_draw_char@j 0020  
                           lcd_draw_char@k 0021                   __end_of_SPI_ExchangeByte 5E76  
                           lcd_draw_char@x 000D                             lcd_draw_char@y 000F  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_fputc 0004  
                                   STR_101 FFE4                                     STR_110 FFFC  
                                   ?_fputs 000D                                     STR_112 FFE7  
                                   STR_105 FFC4                                     STR_114 FFE7  
                                   _ADRESH 000FC4                                     STR_108 FFFC  
                                   _ADRESL 000FC3                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                           ___awdiv@dividend 0004  
                                   ?_putch 0001                                     _T1GCON 000FAA  
                          __CFG_BBSIZ$BB2K 000000                             __CFG_WDTEN$OFF 000000  
                                   i2l6402 58BA                                     i2l6404 58C8  
                                   i2l6406 5904                                     i2l6408 590C  
                                   i2l6470 5DF0                                     i2l6468 5DDC  
                                   i2l6580 5EBC                                     i2l6910 0020  
                                   i2l6576 5EA8                                     i2l6912 002E  
                                   i2l6578 5EB8                                     i2l6908 0012  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 00C6  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                         __end_of___xxtofl 4276                            _global_bg_color 011E  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0009  
                         __end_of_lcd_fill 5732                               vfprintf@cfmt 00EE  
                         __end_of_lcd_init 34F6                           __end_of_lcd_send 5EA8  
                                   ___flge 4E90                                     ___fleq 5606  
                                ??___aodiv 0014                                  ??___fladd 0033  
                                ??___aomod 0014                                     ___wmul 5E36  
                                ??___fldiv 004B                                  ??___awdiv 0008  
                                ??___flneg 0008                             __CFG_STVREN$ON 000000  
                                ??___awmod 0008                                  ??___flmul 001A  
                                ??___flsub 0043                                  ??___fltol 0008  
                                ??___lodiv 0014                                  ??___lomod 0014  
                                   _efgtoa 1532                                     _floorf 3AB8  
                                   clear_0 59E8                                     clear_1 59F4  
                         ___awdiv@quotient 000A                            ___awmod@divisor 0006  
                          ___awmod@counter 0008                                     pad@buf 0016  
                                   ctoa@fp 001F                                     dtoa@fp 001F  
                                   _strcpy 585C                                     _strlen 5D46  
                                ??_msDelay 0004                                     fputc@c 0004  
                                   fputs@c 0011                                     fputs@i 0012  
                                   fputs@s 000D                                  ??_isalpha 0006  
                                ??_isdigit 0006                            ___fpclassifyf@e 000C  
                          ___fpclassifyf@u 000E                            ___fpclassifyf@x 0004  
                                ??_islower 0006                               __mediumconst F1A8  
                                ??_isspace 0006                                     otoa@fp 001F  
                                   tblptrh 000FF7                                  ??_isupper 0006  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0008                                     stoa@cp 001D  
                                   stoa@fp 000D                                     putch@c 0001  
                         __end_of_vfprintf 579E                                     utoa@fp 001F  
IOCB4_SetInterruptHandler@InterruptHandler 0004                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 5DAE                                  ??_tolower 000C  
                                   xtoa@fp 001F                                  ??_strncmp 000A  
                                ??_toupper 000C              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 002B                                 ___flge@ff2 002F  
                          ??___fpclassifyf 0008                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 000E                               ___xxtofl@exp 000D  
                        _SYSTEM_Initialize 5E76                               ___xxtofl@val 0004  
                               ___fleq@ff1 0004                                 ___fleq@ff2 0008  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 5A04                                 ___flneg@f1 0004  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0004                             __pcstackCOMRAM 0001  
                             __pidataBANK1 5F1A                        ??_SYSTEM_Initialize 0006  
                            __end_of_fputc 531C                              __end_of_fputs 5B6E  
    __end_of_IOCB4_DefaultInterruptHandler 5F2A     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 5F28                              __end_of_putch 5F28  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0006  
                         ??_lcd_set_cursor 000D                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0008                  __end_of_SYSTEM_Initialize 5E90  
                                  ??_fputs 0011                                    ??_putch 0004  
                               __pbssBANK0 00FC                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                            __CFG_PLLCFG$OFF 000000  
                                  ?___flge 002B                                    ?___fleq 0004  
                                  ?___wmul 0004                                    ?_efgtoa 007B  
                                  ?_floorf 006D                                 ??_SPI_Open 0004  
                  __size_of_ADC_Initialize 0016                                    ?_strcpy 0004  
                                  ?_strlen 0004                           __CFG_CANMX$PORTB 000000  
                                ?___xxtofl 0004                                    _REFOCON 000F9A  
                                  _OSCCON2 000FD2                         __size_of_vfpfcnvrt 14F0  
                                  _OSCTUNE 000F9B               __size_of_IOCB4_InterruptCall 005C  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 000D                                  ?_lcd_init 0001  
                                ?_lcd_send 0005                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0004                           ??_SPI_Initialize 0004  
                _IOCB4_SetInterruptHandler 5F10                               _codigo_digit 0122  
                          __CFG_PWRTEN$OFF 000000                       _ADC_InterruptHandler 0124  
                                  __Hparam 0000                                    __Lparam 0000  
                       __size_of_vsnprintf 0136                          ??_lcd_draw_string 002D  
                          __size_of___flge 0104                            __size_of___fleq 00AA  
                                  ___aodiv 4410                                    ___fladd 20E2  
                                  ___aomod 4898                                    ___fldiv 2DD4  
                                  ___awdiv 53E2                                    ___flneg 5CD6  
                                  ___awmod 54A6                                    ___flmul 25A2  
                                  ___flsub 5A9E                                    ___fltol 4D8A  
                          __size_of___wmul 0026                                    ___lodiv 5092  
                                  ___lomod 5182                                  ?_vfprintf 00E8  
                          __size_of_efgtoa 0BB0                                  ?_snprintf 01E8  
                          __size_of_floorf 0216                                    __pcinit 59C2  
                                  __ramtop 0F00                                    __ptext0 29CC  
                                  __ptext1 5D7C                                    __ptext2 49FC  
                                  __ptext3 5732                                    __ptext4 0042  
                                  __ptext5 37DC                                    __ptext6 57FE  
                                  __ptext7 5C66                                    __ptext8 5BF0  
                                  __ptext9 3CCE                                    _msDelay 5DAE  
                                _IOCB4_ISR 5DDC                            __size_of_strcpy 005E  
                          __size_of_strlen 0036                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 5EFE                               __size_of_abs 0040  
                             __size_of_pad 00C6                                    _isalpha 5BF0  
                                  _isdigit 5D0E                                 ??___xxtofl 0008  
                         ___awmod@dividend 0004                                    _islower 5C66  
                 ??_PIN_MANAGER_Initialize 0006                                    _isspace 5970  
                        __CFG_MSSPMSK$MSK7 000000                                    _ntc_val 010C  
                                  _isupper 5C9E                                    efgtoa@c 0081  
                                  efgtoa@d 009A                                    efgtoa@e 00B2  
                                  efgtoa@f 007D                                    efgtoa@g 00AE  
                                  efgtoa@h 00A4                                    efgtoa@i 00AC  
                                  efgtoa@l 00A8                                    efgtoa@m 0096  
                                  efgtoa@n 00B4                                    efgtoa@p 009E  
                                  efgtoa@t 0092                                    efgtoa@u 00B6  
                                  efgtoa@w 00A1                                    _pot_val 0110  
                                  atoi@neg 0011                      __end_of_lcd_draw_char 4898  
               __size_of_SYSTEM_Initialize 001A                                 ??_lcd_fill 000F  
                                  _tolower 579E                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 0013                                 ??_lcd_send 0006  
                                  _strncmp 4C64                                    _toupper 57FE  
                     end_of_initialization 5A04                                    floorf@e 0075  
                                  floorf@m 0071                                    floorf@u 0077  
                                  floorf@x 006D                         ??_SPI_ExchangeByte 0004  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 0006                                    fputs@fp 000F  
                      lcd_draw_char@fIndex 0011                          __end_of_vfpfcnvrt 1532  
                               efgtoa@mode 00A3                                 efgtoa@sign 009C  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                           lcd_fill@bg_color 000D  
                               ??_vfprintf 005A                                 ??_snprintf 005A  
                                  strcpy@d 000C                                    strlen@a 0006  
                                  strcpy@s 000A                                    strlen@s 0004  
                        lcd_draw_string@pS 0027                                  _PORTBbits 000F81  
                        _spi_configuration FF75                                 ?_IOCB4_ISR 0001  
                              ___fladd@grs 003A                           __CFG_FOSC$INTIO2 000000  
                            ___xxtofl@sign 000C                                  _TRISCbits 000F94  
                        __end_of_vsnprintf 4B32                                ___fldiv@grs 0067  
                              ___fldiv@rem 0060                                ___flmul@grs 0020  
                               lcd_send@dc 0006                                 _string_ntc 0200  
                               _string_pot 0264               __end_of_INTERRUPT_Initialize 5F26  
                     SPI_ExchangeByte@data 0004                             __end_of___flge 4F94  
                           __end_of___fleq 56B0                  __end_of_spi_configuration FF79  
                              vfpfcnvrt@ap 00BE                                vfpfcnvrt@cp 00C4  
                              vfpfcnvrt@ct 00D2                                vfpfcnvrt@fp 00BA  
                              vfpfcnvrt@ll 00D5                             __end_of___wmul 5E5C  
                              vfpfcnvrt@vp 00DD                             __end_of_efgtoa 20E2  
                           _ADC_Initialize 5ED6                             __end_of_floorf 3CCE  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 0100  
                        __size_of_SPI_Open 00B0                             __end_of_strcpy 58BA  
                           __end_of_strlen 5D7C                        start_initialization 59C2  
                          ___lodiv@divisor 000C                            ___lodiv@counter 001C  
          __size_of_PIN_MANAGER_Initialize 0046                                __end_of_abs 5BF0  
                              __end_of_pad 53E2                      __end_of___fpclassifyf 5092  
                 __size_of_PIN_MANAGER_IOC 0018             SPI_Open@spiUniqueConfiguration 0005  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 00EA  
                      _IOCB4_InterruptCall 58BA                                   ??___flge 0033  
                                 ??___fleq 000C                                   ??___wmul 0008  
                                 ??_efgtoa 0055                     __end_of_ADC_Initialize 5EEC  
                              __pdataBANK1 01F2                                   ??_floorf 004F  
                                 ??_strcpy 0008                                   ??_strlen 0006  
                              ??_IOCB4_ISR 0002                                  ___fladd@a 002F  
                                ___fladd@b 002B                    __size_of_lcd_draw_pixel 0016  
                             vsnprintf@cnt 01E0                               vsnprintf@fmt 00F4  
                                ___fldiv@a 0047                                  ___fldiv@b 0043  
                                ___flmul@a 0016                                  ___flmul@b 0012  
                              __pbssCOMRAM 005A                                  ___flsub@a 003F  
                                ___flsub@b 003B                              __pcstackBANK0 0060  
                            __pcstackBANK1 01DE                              __pcstackBANK2 02C8  
                         ___aodiv@dividend 0004                       ?_IOCB4_InterruptCall 0001  
                              snprintf@fmt 01EC                          __size_of___xxtofl 01B4  
                          _lcd_draw_string 4B32                           _lcd_set_cursor_x 5A56  
                         _lcd_set_cursor_y 5A0E                          __size_of_lcd_fill 0082  
                        __size_of_lcd_init 0386                          __size_of_lcd_send 0018  
                                _atoi$1977 0013                                  _atoi$1978 0017  
                                _atoi$1979 0015                                  __pnvBANK1 01F9  
                              _efgtoa$1332 0086                                _efgtoa$1341 008C  
                              _efgtoa$1333 0088                                _efgtoa$1342 008E  
                              _efgtoa$1343 0090                                _efgtoa$1337 008A  
                   _PIN_MANAGER_Initialize 5AE4                                  _dtoa$1309 0031  
                                __pintcode 0008                              __pmediumconst F1A8  
                                 ?___aodiv 0004                                   ?___fladd 002B  
                                 ?___aomod 0004                                   ?___fldiv 0043  
                                 ?___awdiv 0004                           ___aodiv@quotient 0016  
                                 ?___flneg 0004                                   ?___awmod 0004  
                                 ?___flmul 0012                                   ?___flsub 003B  
                                 ?___fltol 0004                                   ?___lodiv 0004  
                                 ?___lomod 0004                            ?_ADC_Initialize 0001  
             ??_INTERRUPT_InterruptManager 0002                          __size_of_vfprintf 006C  
                        __size_of_snprintf 0032                                   ?_msDelay 0001  
                          ___lomod@divisor 000C                            ___lomod@counter 0014  
                                 ?_isalpha 0004                                   ?_isdigit 0004  
                                 ?_islower 0004                      ??_IOCB4_InterruptCall 0001  
                                 ?_isspace 0004                                   ?_isupper 0004  
                                 ?_tolower 000A                             __size_of_fputc 00CA  
                           __size_of_fputs 0044                                   ?_strncmp 0004  
                                 ?_toupper 000A                             __size_of_putch 0002  
                     _INTERRUPT_Initialize 5F22                    __size_of_lcd_set_cursor 0042  
                           ___wmul@product 0008                                   _IOCBbits 000F5A  
                                 _LATAbits 000F89                                   _LATEbits 000F8D  
                          lcd_set_cursor@x 0009                            lcd_set_cursor@y 000B  
      __size_of_INTERRUPT_InterruptManager 0036                                   _PIR1bits 000F9E  
                    lcd_draw_string@lIndex 0033                                   i2u806_40 5EB8  
                                 i2u806_41 5EB4                                   i2u832_40 0020  
                                 i2u832_41 001C                                   i2u833_40 002E  
                                 i2u833_41 002A                                   i2u783_40 58C8  
                                 i2u790_48 5DF6                                   i2u783_41 58C4  
                                 i2u790_49 5E08                                   i2u784_40 58D8  
                                 i2u784_41 58D2                                   i2u784_46 58DA  
                                 i2u785_40 5904                                   i2u785_41 5900  
                                 i2u789_40 5DF0                                   i2u789_41 5DEC  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001A  
                                _tensao_in 01DA                           lcd_draw_string@k 0031  
                         lcd_draw_string@x 0023                           lcd_draw_string@y 0025  
                        ??_PIN_MANAGER_IOC 0002                                  _vfpfcnvrt 0042  
                                _xtoa$1380 0034                                  _xtoa$1379 0032  
                                 _SPI_Open 5556                          ??_TMR1_Initialize 0004  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0004  
                         __CFG_SOSCSEL$DIG 000000                    __end_of_lcd_draw_string 4C64  
                             _isspace$2017 000A                                  msDelay@ms 0005  
                               vfpfcnvrt@c 00DF                                 vfpfcnvrt@f 00CE  
                              _INTCON2bits 000FF1                                  copy_data0 59D6  
                    ?_INTERRUPT_Initialize 0001                                  _vsnprintf 49FC  
                      lcd_draw_pixel@color 0007                                   __Hrparam 0000  
                               vfprintf@ap 00EC                                   __Lrparam 0000  
                               vfprintf@fp 00E8                          _ADC_GetConversion 5C2C  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0004                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0004                           __size_of___aodiv 0188  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039C                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                              vsnprintf@ap 00F6                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0106  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 00BA                                 snprintf@ap 02CA  
                          ___aodiv@divisor 000C                            ___aodiv@counter 0014  
                   _IOCB4_InterruptHandler 01FB                             _lcd_draw_pixel 5EC0  
                       ___fpclassifyf@F463 0104                        ??_ADC_GetConversion 0006  
                         __size_of_msDelay 002E                                   ___xxtofl 40C2  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 5182                                   __ptext11 5092  
                                 __ptext20 4F94                                   __ptext12 4C64  
                                 __ptext21 4D8A                                   __ptext13 4598  
                               _T1GCONbits 000FAA                                   __ptext30 53E2  
                                 __ptext22 5A9E                                   __ptext14 3ED2  
                                 __ptext31 34F6                                   __ptext23 20E2  
                                 __ptext15 1532                                   __ptext40 5F26  
                                 __ptext32 5BB0                                   __ptext24 5CD6  
                                 __ptext16 579E                                   __ptext41 4276  
                                 __ptext33 4898                                   __ptext25 25A2  
                                 __ptext17 5C9E                                   __ptext50 5B6E  
                                 __ptext42 5970                                   __ptext34 4410  
                                 __ptext26 4E90                                   __ptext18 585C  
                                 __ptext51 5A0E                                   __ptext43 5D0E  
                                 __ptext35 5916                                   __ptext27 5606  
                                 __ptext19 3AB8                                   __ptext60 5AE4  
                                 __ptext52 5A56                                   __ptext44 5E36  
                                 __ptext36 531C                                   __ptext28 2DD4  
                                 __ptext61 5F10                                   __ptext53 5EC0  
                                 __ptext45 3170                                   __ptext37 5D46  
                                 __ptext29 54A6                                   __ptext70 5F28  
                                 __ptext62 5EFE                                   __ptext54 5E90  
                                 __ptext46 5DAE                                   __ptext38 5B2A  
                                 __ptext71 58BA                                   __ptext63 5F22  
                                 __ptext55 5E5C                                   __ptext47 56B0  
                                 __ptext39 5252                                   __ptext72 0000  
                                 __ptext64 5ED6                                   __ptext56 40C2  
                                 __ptext48 4B32                                   __ptext65 5556  
                                 __ptext57 5E76                                   __ptext49 471E  
                                 __ptext66 5C2C                                   __ptext58 5E0A  
                                 __ptext59 5EEC                                   __ptext68 5EA8  
                                 __ptext69 5DDC                           __size_of_isupper 0038  
                                 _lcd_fill 56B0                                   _lcd_init 3170  
                                 _lcd_send 5E90                           __size_of_tolower 0060  
                               strcpy@dest 0004                           __size_of_strncmp 0126  
                         __size_of_toupper 005E                                 ?_vsnprintf 00F0  
                            __size_of_atoi 019A                              __size_of_ctoa 005A  
                            __size_of_main 0408                              __size_of_dtoa 02E6  
                            __size_of_otoa 01F0                              __size_of_stoa 0186  
                            __size_of_utoa 0204                              __size_of_xtoa 02DC  
                __end_of_ADC_GetConversion 5C66                                   efgtoa@fp 007B  
                                 efgtoa@ne 0098                                   efgtoa@pp 0094  
                                 efgtoa@ou 0082                                  stoa@F1174 01F2  
                                 _temp_ntc 0108                      lcd_draw_char@bg_color 0015  
                                 int$flags 005C                                   _vfprintf 5732  
                    lcd_draw_char@fg_color 0013         __end_of_INTERRUPT_InterruptManager 003E  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 5ED6  
                                 _snprintf 5D7C                   __end_of_lcd_set_cursor_x 5A9E  
                 __end_of_lcd_set_cursor_y 5A56                        __CFG_INTOSCSEL$HIGH 000000  
                                 msDelay@k 0006                           ___aomod@dividend 0004  
                           _vfpfcnvrt$1416 00CC                             _vfpfcnvrt$1394 00C8  
                           _vfpfcnvrt$1395 00CA                                 _INTCONbits 000FF2  
                         ?_lcd_draw_string 0023                                   isalpha@c 0004  
                                 isdigit@c 0004                     ??_INTERRUPT_Initialize 0004  
                               vsnprintf@f 01E2                                 vsnprintf@n 00F2  
                               vsnprintf@s 00F0                              _lcd_draw_char 471E  
                                snprintf@n 01EA                                  snprintf@s 01E8  
                                 intlevel2 0000                             _lcd_set_cursor 5B6E  
                        lcd_set_cursor_x@x 0007                          lcd_set_cursor_y@y 0007  
                                 islower@c 0004                                   isspace@c 0004  
                  ?_PIN_MANAGER_Initialize 0001                                  strcpy@src 0006  
                                 isupper@c 0004                                  strncmp@_l 0004  
                                strncmp@_r 0006                           ??_ADC_Initialize 0004  
                         _SPI_ExchangeByte 5E5C                    lcd_draw_string@bg_color 002B  
                              efgtoa@nmode 00A0                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 000C                    lcd_draw_string@fg_color 0029  
                          ?_lcd_draw_pixel 0007                                ??_vfpfcnvrt 00C0  
                                 stoa@nuls 0012                            ___aomod@counter 0014  
                                 tolower@c 000A                             _vsnprintf$2147 01DE  
                   __size_of___fpclassifyf 00FE                                   strncmp@l 000B  
                                 strncmp@n 0008                                   strncmp@r 000D  
                                 toupper@c 000A                                _SSPCON1bits 000FC6  
                   __end_of_lcd_set_cursor 5BB0                             ?_lcd_draw_char 000D  
                            ___fladd@signs 0037                               ___aodiv@sign 0015  
           __end_of_PIN_MANAGER_Initialize 5B2A                                ??_vsnprintf 00F8  
                             ___fladd@aexp 0038                               ___fladd@bexp 0039  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 5EA8  
               __size_of_ADC_GetConversion 003A                               ___aomod@sign 0015  
                          _TMR1_Initialize 5E0A  
